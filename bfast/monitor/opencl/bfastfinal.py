import sys
import numpy as np
import ctypes as ct
# Stub code for OpenCL setup.

import pyopencl as cl
import numpy as np
import sys

if cl.version.VERSION < (2015,2):
    raise Exception('Futhark requires at least PyOpenCL version 2015.2.  Installed version is %s.' %
                    cl.version.VERSION_TEXT)

def parse_preferred_device(s):
    pref_num = 0
    if len(s) > 1 and s[0] == '#':
        i = 1
        while i < len(s):
            if not s[i].isdigit():
                break
            else:
                pref_num = pref_num * 10 + int(s[i])
            i += 1
        while i < len(s) and s[i].isspace():
            i += 1
        return (s[i:], pref_num)
    else:
        return (s, 0)

def get_prefered_context(interactive=False, platform_pref=None, device_pref=None):
    if device_pref != None:
        (device_pref, device_num) = parse_preferred_device(device_pref)
    else:
        device_num = 0

    if interactive:
        return cl.create_some_context(interactive=True)

    def blacklisted(p, d):
        return platform_pref == None and device_pref == None and \
            p.name == "Apple" and d.name.find("Intel(R) Core(TM)") >= 0
    def platform_ok(p):
        return not platform_pref or p.name.find(platform_pref) >= 0
    def device_ok(d):
        return not device_pref or d.name.find(device_pref) >= 0

    device_matches = 0

    for p in cl.get_platforms():
        if not platform_ok(p):
            continue
        for d in p.get_devices():
            if blacklisted(p,d) or not device_ok(d):
                continue
            if device_matches == device_num:
                return cl.Context(devices=[d])
            else:
                device_matches += 1
    raise Exception('No OpenCL platform and device matching constraints found.')

def size_assignment(s):
    name, value = s.split('=')
    return (name, int(value))

def check_types(self, required_types):
    if 'f64' in required_types:
        if self.device.get_info(cl.device_info.PREFERRED_VECTOR_WIDTH_DOUBLE) == 0:
            raise Exception('Program uses double-precision floats, but this is not supported on chosen device: %s' % self.device.name)

def apply_size_heuristics(self, size_heuristics, sizes):
    for (platform_name, device_type, size, valuef) in size_heuristics:
        if sizes[size] == None \
           and self.platform.name.find(platform_name) >= 0 \
           and (self.device.type & device_type) == device_type:
               sizes[size] = valuef(self.device)
    return sizes

def initialise_opencl_object(self,
                             program_src='',
                             command_queue=None,
                             interactive=False,
                             platform_pref=None,
                             device_pref=None,
                             default_group_size=None,
                             default_num_groups=None,
                             default_tile_size=None,
                             default_reg_tile_size=None,
                             default_threshold=None,
                             size_heuristics=[],
                             required_types=[],
                             all_sizes={},
                             user_sizes={}):
    if command_queue is None:
        self.ctx = get_prefered_context(interactive, platform_pref, device_pref)
        self.queue = cl.CommandQueue(self.ctx)
    else:
        self.ctx = command_queue.context
        self.queue = command_queue
    self.device = self.queue.device
    self.platform = self.device.platform
    self.pool = cl.tools.MemoryPool(cl.tools.ImmediateAllocator(self.queue))
    device_type = self.device.type

    check_types(self, required_types)

    max_group_size = int(self.device.max_work_group_size)
    max_tile_size = int(np.sqrt(self.device.max_work_group_size))

    self.max_group_size = max_group_size
    self.max_tile_size = max_tile_size
    self.max_threshold = 0
    self.max_num_groups = 0

    self.max_local_memory = int(self.device.local_mem_size)

    # Futhark reserves 4 bytes of local memory for its own purposes.
    self.max_local_memory -= 4

    # See comment in rts/c/opencl.h.
    if self.platform.name.find('NVIDIA CUDA') >= 0:
        self.max_local_memory -= 12
    elif self.platform.name.find('AMD') >= 0:
        self.max_local_memory -= 16

    self.free_list = {}

    self.global_failure = self.pool.allocate(np.int32().itemsize)
    cl.enqueue_fill_buffer(self.queue, self.global_failure, np.int32(-1), 0, np.int32().itemsize)
    self.global_failure_args = self.pool.allocate(np.int64().itemsize *
                                                  (self.global_failure_args_max+1))
    self.failure_is_an_option = np.int32(0)

    if 'default_group_size' in sizes:
        default_group_size = sizes['default_group_size']
        del sizes['default_group_size']

    if 'default_num_groups' in sizes:
        default_num_groups = sizes['default_num_groups']
        del sizes['default_num_groups']

    if 'default_tile_size' in sizes:
        default_tile_size = sizes['default_tile_size']
        del sizes['default_tile_size']

    if 'default_reg_tile_size' in sizes:
        default_reg_tile_size = sizes['default_reg_tile_size']
        del sizes['default_reg_tile_size']

    if 'default_threshold' in sizes:
        default_threshold = sizes['default_threshold']
        del sizes['default_threshold']

    default_group_size_set = default_group_size != None
    default_tile_size_set = default_tile_size != None
    default_sizes = apply_size_heuristics(self, size_heuristics,
                                          {'group_size': default_group_size,
                                           'tile_size': default_tile_size,
                                           'reg_tile_size': default_reg_tile_size,
                                           'num_groups': default_num_groups,
                                           'lockstep_width': None,
                                           'threshold': default_threshold})
    default_group_size = default_sizes['group_size']
    default_num_groups = default_sizes['num_groups']
    default_threshold = default_sizes['threshold']
    default_tile_size = default_sizes['tile_size']
    default_reg_tile_size = default_sizes['reg_tile_size']
    lockstep_width = default_sizes['lockstep_width']

    if default_group_size > max_group_size:
        if default_group_size_set:
            sys.stderr.write('Note: Device limits group size to {} (down from {})\n'.
                             format(max_tile_size, default_group_size))
        default_group_size = max_group_size

    if default_tile_size > max_tile_size:
        if default_tile_size_set:
            sys.stderr.write('Note: Device limits tile size to {} (down from {})\n'.
                             format(max_tile_size, default_tile_size))
        default_tile_size = max_tile_size

    for (k,v) in user_sizes.items():
        if k in all_sizes:
            all_sizes[k]['value'] = v
        else:
            raise Exception('Unknown size: {}\nKnown sizes: {}'.format(k, ' '.join(all_sizes.keys())))

    self.sizes = {}
    for (k,v) in all_sizes.items():
        if v['class'] == 'group_size':
            max_value = max_group_size
            default_value = default_group_size
        elif v['class'] == 'num_groups':
            max_value = max_group_size # Intentional!
            default_value = default_num_groups
        elif v['class'] == 'tile_size':
            max_value = max_tile_size
            default_value = default_tile_size
        elif v['class'] == 'reg_tile_size':
            max_value = None
            default_value = default_reg_tile_size
        elif v['class'].startswith('threshold'):
            max_value = None
            default_value = default_threshold
        else:
            # Bespoke sizes have no limit or default.
            max_value = None
        if v['value'] == None:
            self.sizes[k] = default_value
        elif max_value != None and v['value'] > max_value:
            sys.stderr.write('Note: Device limits {} to {} (down from {}\n'.
                             format(k, max_value, v['value']))
            self.sizes[k] = max_value
        else:
            self.sizes[k] = v['value']

    # XXX: we perform only a subset of z-encoding here.  Really, the
    # compiler should provide us with the variables to which
    # parameters are mapped.
    if (len(program_src) >= 0):
        return cl.Program(self.ctx, program_src).build(
            ["-DLOCKSTEP_WIDTH={}".format(lockstep_width)]
            + ["-D{}={}".format(s.replace('z', 'zz').replace('.', 'zi').replace('#', 'zh'),v) for (s,v) in self.sizes.items()])

def opencl_alloc(self, min_size, tag):
    min_size = 1 if min_size == 0 else min_size
    assert min_size > 0
    return self.pool.allocate(min_size)

def opencl_free_all(self):
    self.pool.free_held()

def sync(self):
    failure = np.empty(1, dtype=np.int32)
    cl.enqueue_copy(self.queue, failure, self.global_failure, is_blocking=True)
    self.failure_is_an_option = np.int32(0)
    if failure[0] >= 0:
        # Reset failure information.
        cl.enqueue_fill_buffer(self.queue, self.global_failure, np.int32(-1), 0, np.int32().itemsize)

        # Read failure args.
        failure_args = np.empty(self.global_failure_args_max+1, dtype=np.int64)
        cl.enqueue_copy(self.queue, failure_args, self.global_failure_args, is_blocking=True)

        raise Exception(self.failure_msgs[failure[0]].format(*failure_args))
import pyopencl.array
import time
import argparse
sizes = {}
synchronous = False
preferred_platform = None
preferred_device = None
default_threshold = None
default_group_size = None
default_num_groups = None
default_tile_size = None
default_reg_tile_size = None
fut_opencl_src = """#ifdef cl_clang_storage_class_specifiers
#pragma OPENCL EXTENSION cl_clang_storage_class_specifiers : enable
#endif
#pragma OPENCL EXTENSION cl_khr_byte_addressable_store : enable
__kernel void dummy_kernel(__global unsigned char *dummy, int n)
{
    const int thread_gid = get_global_id(0);
    
    if (thread_gid >= n)
        return;
}
#pragma OPENCL EXTENSION cl_khr_int64_base_atomics : enable
#pragma OPENCL EXTENSION cl_khr_int64_extended_atomics : enable
typedef char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef long int64_t;
typedef uchar uint8_t;
typedef ushort uint16_t;
typedef uint uint32_t;
typedef ulong uint64_t;
#ifdef cl_nv_pragma_unroll
static inline void mem_fence_global()
{
    asm("membar.gl;");
}
#else
static inline void mem_fence_global()
{
    mem_fence(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
}
#endif
static inline void mem_fence_local()
{
    mem_fence(CLK_LOCAL_MEM_FENCE);
}
static inline uint8_t add8(uint8_t x, uint8_t y)
{
    return x + y;
}
static inline uint16_t add16(uint16_t x, uint16_t y)
{
    return x + y;
}
static inline uint32_t add32(uint32_t x, uint32_t y)
{
    return x + y;
}
static inline uint64_t add64(uint64_t x, uint64_t y)
{
    return x + y;
}
static inline uint8_t sub8(uint8_t x, uint8_t y)
{
    return x - y;
}
static inline uint16_t sub16(uint16_t x, uint16_t y)
{
    return x - y;
}
static inline uint32_t sub32(uint32_t x, uint32_t y)
{
    return x - y;
}
static inline uint64_t sub64(uint64_t x, uint64_t y)
{
    return x - y;
}
static inline uint8_t mul8(uint8_t x, uint8_t y)
{
    return x * y;
}
static inline uint16_t mul16(uint16_t x, uint16_t y)
{
    return x * y;
}
static inline uint32_t mul32(uint32_t x, uint32_t y)
{
    return x * y;
}
static inline uint64_t mul64(uint64_t x, uint64_t y)
{
    return x * y;
}
static inline uint8_t udiv8(uint8_t x, uint8_t y)
{
    return x / y;
}
static inline uint16_t udiv16(uint16_t x, uint16_t y)
{
    return x / y;
}
static inline uint32_t udiv32(uint32_t x, uint32_t y)
{
    return x / y;
}
static inline uint64_t udiv64(uint64_t x, uint64_t y)
{
    return x / y;
}
static inline uint8_t udiv_up8(uint8_t x, uint8_t y)
{
    return (x + y - 1) / y;
}
static inline uint16_t udiv_up16(uint16_t x, uint16_t y)
{
    return (x + y - 1) / y;
}
static inline uint32_t udiv_up32(uint32_t x, uint32_t y)
{
    return (x + y - 1) / y;
}
static inline uint64_t udiv_up64(uint64_t x, uint64_t y)
{
    return (x + y - 1) / y;
}
static inline uint8_t umod8(uint8_t x, uint8_t y)
{
    return x % y;
}
static inline uint16_t umod16(uint16_t x, uint16_t y)
{
    return x % y;
}
static inline uint32_t umod32(uint32_t x, uint32_t y)
{
    return x % y;
}
static inline uint64_t umod64(uint64_t x, uint64_t y)
{
    return x % y;
}
static inline uint8_t udiv_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint16_t udiv_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint32_t udiv_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint64_t udiv_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint8_t udiv_up_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint16_t udiv_up_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint32_t udiv_up_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint64_t udiv_up_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint8_t umod_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint16_t umod_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint32_t umod_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint64_t umod_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int8_t sdiv8(int8_t x, int8_t y)
{
    int8_t q = x / y;
    int8_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int16_t sdiv16(int16_t x, int16_t y)
{
    int16_t q = x / y;
    int16_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int32_t sdiv32(int32_t x, int32_t y)
{
    int32_t q = x / y;
    int32_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int64_t sdiv64(int64_t x, int64_t y)
{
    int64_t q = x / y;
    int64_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int8_t sdiv_up8(int8_t x, int8_t y)
{
    return sdiv8(x + y - 1, y);
}
static inline int16_t sdiv_up16(int16_t x, int16_t y)
{
    return sdiv16(x + y - 1, y);
}
static inline int32_t sdiv_up32(int32_t x, int32_t y)
{
    return sdiv32(x + y - 1, y);
}
static inline int64_t sdiv_up64(int64_t x, int64_t y)
{
    return sdiv64(x + y - 1, y);
}
static inline int8_t smod8(int8_t x, int8_t y)
{
    int8_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int16_t smod16(int16_t x, int16_t y)
{
    int16_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int32_t smod32(int32_t x, int32_t y)
{
    int32_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int64_t smod64(int64_t x, int64_t y)
{
    int64_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int8_t sdiv_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : sdiv8(x, y);
}
static inline int16_t sdiv_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : sdiv16(x, y);
}
static inline int32_t sdiv_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : sdiv32(x, y);
}
static inline int64_t sdiv_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : sdiv64(x, y);
}
static inline int8_t sdiv_up_safe8(int8_t x, int8_t y)
{
    return sdiv_safe8(x + y - 1, y);
}
static inline int16_t sdiv_up_safe16(int16_t x, int16_t y)
{
    return sdiv_safe16(x + y - 1, y);
}
static inline int32_t sdiv_up_safe32(int32_t x, int32_t y)
{
    return sdiv_safe32(x + y - 1, y);
}
static inline int64_t sdiv_up_safe64(int64_t x, int64_t y)
{
    return sdiv_safe64(x + y - 1, y);
}
static inline int8_t smod_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : smod8(x, y);
}
static inline int16_t smod_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : smod16(x, y);
}
static inline int32_t smod_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : smod32(x, y);
}
static inline int64_t smod_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : smod64(x, y);
}
static inline int8_t squot8(int8_t x, int8_t y)
{
    return x / y;
}
static inline int16_t squot16(int16_t x, int16_t y)
{
    return x / y;
}
static inline int32_t squot32(int32_t x, int32_t y)
{
    return x / y;
}
static inline int64_t squot64(int64_t x, int64_t y)
{
    return x / y;
}
static inline int8_t srem8(int8_t x, int8_t y)
{
    return x % y;
}
static inline int16_t srem16(int16_t x, int16_t y)
{
    return x % y;
}
static inline int32_t srem32(int32_t x, int32_t y)
{
    return x % y;
}
static inline int64_t srem64(int64_t x, int64_t y)
{
    return x % y;
}
static inline int8_t squot_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int16_t squot_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int32_t squot_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int64_t squot_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int8_t srem_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int16_t srem_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int32_t srem_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int64_t srem_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int8_t smin8(int8_t x, int8_t y)
{
    return x < y ? x : y;
}
static inline int16_t smin16(int16_t x, int16_t y)
{
    return x < y ? x : y;
}
static inline int32_t smin32(int32_t x, int32_t y)
{
    return x < y ? x : y;
}
static inline int64_t smin64(int64_t x, int64_t y)
{
    return x < y ? x : y;
}
static inline uint8_t umin8(uint8_t x, uint8_t y)
{
    return x < y ? x : y;
}
static inline uint16_t umin16(uint16_t x, uint16_t y)
{
    return x < y ? x : y;
}
static inline uint32_t umin32(uint32_t x, uint32_t y)
{
    return x < y ? x : y;
}
static inline uint64_t umin64(uint64_t x, uint64_t y)
{
    return x < y ? x : y;
}
static inline int8_t smax8(int8_t x, int8_t y)
{
    return x < y ? y : x;
}
static inline int16_t smax16(int16_t x, int16_t y)
{
    return x < y ? y : x;
}
static inline int32_t smax32(int32_t x, int32_t y)
{
    return x < y ? y : x;
}
static inline int64_t smax64(int64_t x, int64_t y)
{
    return x < y ? y : x;
}
static inline uint8_t umax8(uint8_t x, uint8_t y)
{
    return x < y ? y : x;
}
static inline uint16_t umax16(uint16_t x, uint16_t y)
{
    return x < y ? y : x;
}
static inline uint32_t umax32(uint32_t x, uint32_t y)
{
    return x < y ? y : x;
}
static inline uint64_t umax64(uint64_t x, uint64_t y)
{
    return x < y ? y : x;
}
static inline uint8_t shl8(uint8_t x, uint8_t y)
{
    return x << y;
}
static inline uint16_t shl16(uint16_t x, uint16_t y)
{
    return x << y;
}
static inline uint32_t shl32(uint32_t x, uint32_t y)
{
    return x << y;
}
static inline uint64_t shl64(uint64_t x, uint64_t y)
{
    return x << y;
}
static inline uint8_t lshr8(uint8_t x, uint8_t y)
{
    return x >> y;
}
static inline uint16_t lshr16(uint16_t x, uint16_t y)
{
    return x >> y;
}
static inline uint32_t lshr32(uint32_t x, uint32_t y)
{
    return x >> y;
}
static inline uint64_t lshr64(uint64_t x, uint64_t y)
{
    return x >> y;
}
static inline int8_t ashr8(int8_t x, int8_t y)
{
    return x >> y;
}
static inline int16_t ashr16(int16_t x, int16_t y)
{
    return x >> y;
}
static inline int32_t ashr32(int32_t x, int32_t y)
{
    return x >> y;
}
static inline int64_t ashr64(int64_t x, int64_t y)
{
    return x >> y;
}
static inline uint8_t and8(uint8_t x, uint8_t y)
{
    return x & y;
}
static inline uint16_t and16(uint16_t x, uint16_t y)
{
    return x & y;
}
static inline uint32_t and32(uint32_t x, uint32_t y)
{
    return x & y;
}
static inline uint64_t and64(uint64_t x, uint64_t y)
{
    return x & y;
}
static inline uint8_t or8(uint8_t x, uint8_t y)
{
    return x | y;
}
static inline uint16_t or16(uint16_t x, uint16_t y)
{
    return x | y;
}
static inline uint32_t or32(uint32_t x, uint32_t y)
{
    return x | y;
}
static inline uint64_t or64(uint64_t x, uint64_t y)
{
    return x | y;
}
static inline uint8_t xor8(uint8_t x, uint8_t y)
{
    return x ^ y;
}
static inline uint16_t xor16(uint16_t x, uint16_t y)
{
    return x ^ y;
}
static inline uint32_t xor32(uint32_t x, uint32_t y)
{
    return x ^ y;
}
static inline uint64_t xor64(uint64_t x, uint64_t y)
{
    return x ^ y;
}
static inline bool ult8(uint8_t x, uint8_t y)
{
    return x < y;
}
static inline bool ult16(uint16_t x, uint16_t y)
{
    return x < y;
}
static inline bool ult32(uint32_t x, uint32_t y)
{
    return x < y;
}
static inline bool ult64(uint64_t x, uint64_t y)
{
    return x < y;
}
static inline bool ule8(uint8_t x, uint8_t y)
{
    return x <= y;
}
static inline bool ule16(uint16_t x, uint16_t y)
{
    return x <= y;
}
static inline bool ule32(uint32_t x, uint32_t y)
{
    return x <= y;
}
static inline bool ule64(uint64_t x, uint64_t y)
{
    return x <= y;
}
static inline bool slt8(int8_t x, int8_t y)
{
    return x < y;
}
static inline bool slt16(int16_t x, int16_t y)
{
    return x < y;
}
static inline bool slt32(int32_t x, int32_t y)
{
    return x < y;
}
static inline bool slt64(int64_t x, int64_t y)
{
    return x < y;
}
static inline bool sle8(int8_t x, int8_t y)
{
    return x <= y;
}
static inline bool sle16(int16_t x, int16_t y)
{
    return x <= y;
}
static inline bool sle32(int32_t x, int32_t y)
{
    return x <= y;
}
static inline bool sle64(int64_t x, int64_t y)
{
    return x <= y;
}
static inline int8_t pow8(int8_t x, int8_t y)
{
    int8_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int16_t pow16(int16_t x, int16_t y)
{
    int16_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int32_t pow32(int32_t x, int32_t y)
{
    int32_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int64_t pow64(int64_t x, int64_t y)
{
    int64_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline bool itob_i8_bool(int8_t x)
{
    return x;
}
static inline bool itob_i16_bool(int16_t x)
{
    return x;
}
static inline bool itob_i32_bool(int32_t x)
{
    return x;
}
static inline bool itob_i64_bool(int64_t x)
{
    return x;
}
static inline int8_t btoi_bool_i8(bool x)
{
    return x;
}
static inline int16_t btoi_bool_i16(bool x)
{
    return x;
}
static inline int32_t btoi_bool_i32(bool x)
{
    return x;
}
static inline int64_t btoi_bool_i64(bool x)
{
    return x;
}
#define sext_i8_i8(x) ((int8_t) (int8_t) x)
#define sext_i8_i16(x) ((int16_t) (int8_t) x)
#define sext_i8_i32(x) ((int32_t) (int8_t) x)
#define sext_i8_i64(x) ((int64_t) (int8_t) x)
#define sext_i16_i8(x) ((int8_t) (int16_t) x)
#define sext_i16_i16(x) ((int16_t) (int16_t) x)
#define sext_i16_i32(x) ((int32_t) (int16_t) x)
#define sext_i16_i64(x) ((int64_t) (int16_t) x)
#define sext_i32_i8(x) ((int8_t) (int32_t) x)
#define sext_i32_i16(x) ((int16_t) (int32_t) x)
#define sext_i32_i32(x) ((int32_t) (int32_t) x)
#define sext_i32_i64(x) ((int64_t) (int32_t) x)
#define sext_i64_i8(x) ((int8_t) (int64_t) x)
#define sext_i64_i16(x) ((int16_t) (int64_t) x)
#define sext_i64_i32(x) ((int32_t) (int64_t) x)
#define sext_i64_i64(x) ((int64_t) (int64_t) x)
#define zext_i8_i8(x) ((int8_t) (uint8_t) x)
#define zext_i8_i16(x) ((int16_t) (uint8_t) x)
#define zext_i8_i32(x) ((int32_t) (uint8_t) x)
#define zext_i8_i64(x) ((int64_t) (uint8_t) x)
#define zext_i16_i8(x) ((int8_t) (uint16_t) x)
#define zext_i16_i16(x) ((int16_t) (uint16_t) x)
#define zext_i16_i32(x) ((int32_t) (uint16_t) x)
#define zext_i16_i64(x) ((int64_t) (uint16_t) x)
#define zext_i32_i8(x) ((int8_t) (uint32_t) x)
#define zext_i32_i16(x) ((int16_t) (uint32_t) x)
#define zext_i32_i32(x) ((int32_t) (uint32_t) x)
#define zext_i32_i64(x) ((int64_t) (uint32_t) x)
#define zext_i64_i8(x) ((int8_t) (uint64_t) x)
#define zext_i64_i16(x) ((int16_t) (uint64_t) x)
#define zext_i64_i32(x) ((int32_t) (uint64_t) x)
#define zext_i64_i64(x) ((int64_t) (uint64_t) x)
#if defined(__OPENCL_VERSION__)
static int32_t futrts_popc8(int8_t x)
{
    return popcount(x);
}
static int32_t futrts_popc16(int16_t x)
{
    return popcount(x);
}
static int32_t futrts_popc32(int32_t x)
{
    return popcount(x);
}
static int32_t futrts_popc64(int64_t x)
{
    return popcount(x);
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_popc8(int8_t x)
{
    return __popc(zext_i8_i32(x));
}
static int32_t futrts_popc16(int16_t x)
{
    return __popc(zext_i16_i32(x));
}
static int32_t futrts_popc32(int32_t x)
{
    return __popc(x);
}
static int32_t futrts_popc64(int64_t x)
{
    return __popcll(x);
}
#else
static int32_t futrts_popc8(int8_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc16(int16_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc32(int32_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc64(int64_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
#endif
#if defined(__OPENCL_VERSION__)
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    return mul_hi(a, b);
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    return mul_hi(a, b);
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    return mul_hi(a, b);
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    return mul_hi(a, b);
}
#elif defined(__CUDA_ARCH__)
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    uint16_t aa = a;
    uint16_t bb = b;
    
    return aa * bb >> 8;
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    uint32_t aa = a;
    uint32_t bb = b;
    
    return aa * bb >> 16;
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    return mulhi(a, b);
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    return mul64hi(a, b);
}
#else
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    uint16_t aa = a;
    uint16_t bb = b;
    
    return aa * bb >> 8;
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    uint32_t aa = a;
    uint32_t bb = b;
    
    return aa * bb >> 16;
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    uint64_t aa = a;
    uint64_t bb = b;
    
    return aa * bb >> 32;
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    __uint128_t aa = a;
    __uint128_t bb = b;
    
    return aa * bb >> 64;
}
#endif
#if defined(__OPENCL_VERSION__)
static uint8_t futrts_mad_hi8(uint8_t a, uint8_t b, uint8_t c)
{
    return mad_hi(a, b, c);
}
static uint16_t futrts_mad_hi16(uint16_t a, uint16_t b, uint16_t c)
{
    return mad_hi(a, b, c);
}
static uint32_t futrts_mad_hi32(uint32_t a, uint32_t b, uint32_t c)
{
    return mad_hi(a, b, c);
}
static uint64_t futrts_mad_hi64(uint64_t a, uint64_t b, uint64_t c)
{
    return mad_hi(a, b, c);
}
#else
static uint8_t futrts_mad_hi8(uint8_t a, uint8_t b, uint8_t c)
{
    return futrts_mul_hi8(a, b) + c;
}
static uint16_t futrts_mad_hi16(uint16_t a, uint16_t b, uint16_t c)
{
    return futrts_mul_hi16(a, b) + c;
}
static uint32_t futrts_mad_hi32(uint32_t a, uint32_t b, uint32_t c)
{
    return futrts_mul_hi32(a, b) + c;
}
static uint64_t futrts_mad_hi64(uint64_t a, uint64_t b, uint64_t c)
{
    return futrts_mul_hi64(a, b) + c;
}
#endif
#if defined(__OPENCL_VERSION__)
static int32_t futrts_clzz8(int8_t x)
{
    return clz(x);
}
static int32_t futrts_clzz16(int16_t x)
{
    return clz(x);
}
static int32_t futrts_clzz32(int32_t x)
{
    return clz(x);
}
static int32_t futrts_clzz64(int64_t x)
{
    return clz(x);
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_clzz8(int8_t x)
{
    return __clz(zext_i8_i32(x)) - 24;
}
static int32_t futrts_clzz16(int16_t x)
{
    return __clz(zext_i16_i32(x)) - 16;
}
static int32_t futrts_clzz32(int32_t x)
{
    return __clz(x);
}
static int32_t futrts_clzz64(int64_t x)
{
    return __clzll(x);
}
#else
static int32_t futrts_clzz8(int8_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz16(int16_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz32(int32_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz64(int64_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
#endif
#if defined(__OPENCL_VERSION__)
static int32_t futrts_ctzz8(int8_t x)
{
    int i = 0;
    
    for (; i < 8 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz16(int16_t x)
{
    int i = 0;
    
    for (; i < 16 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz32(int32_t x)
{
    int i = 0;
    
    for (; i < 32 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz64(int64_t x)
{
    int i = 0;
    
    for (; i < 64 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_ctzz8(int8_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 8 : y - 1;
}
static int32_t futrts_ctzz16(int16_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 16 : y - 1;
}
static int32_t futrts_ctzz32(int32_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 32 : y - 1;
}
static int32_t futrts_ctzz64(int64_t x)
{
    int y = __ffsll(x);
    
    return y == 0 ? 64 : y - 1;
}
#else
static int32_t futrts_ctzz8(int8_t x)
{
    return x == 0 ? 8 : __builtin_ctz((uint32_t) x);
}
static int32_t futrts_ctzz16(int16_t x)
{
    return x == 0 ? 16 : __builtin_ctz((uint32_t) x);
}
static int32_t futrts_ctzz32(int32_t x)
{
    return x == 0 ? 32 : __builtin_ctz(x);
}
static int32_t futrts_ctzz64(int64_t x)
{
    return x == 0 ? 64 : __builtin_ctzll(x);
}
#endif
static inline float fdiv32(float x, float y)
{
    return x / y;
}
static inline float fadd32(float x, float y)
{
    return x + y;
}
static inline float fsub32(float x, float y)
{
    return x - y;
}
static inline float fmul32(float x, float y)
{
    return x * y;
}
static inline float fmin32(float x, float y)
{
    return fmin(x, y);
}
static inline float fmax32(float x, float y)
{
    return fmax(x, y);
}
static inline float fpow32(float x, float y)
{
    return pow(x, y);
}
static inline bool cmplt32(float x, float y)
{
    return x < y;
}
static inline bool cmple32(float x, float y)
{
    return x <= y;
}
static inline float sitofp_i8_f32(int8_t x)
{
    return (float) x;
}
static inline float sitofp_i16_f32(int16_t x)
{
    return (float) x;
}
static inline float sitofp_i32_f32(int32_t x)
{
    return (float) x;
}
static inline float sitofp_i64_f32(int64_t x)
{
    return (float) x;
}
static inline float uitofp_i8_f32(uint8_t x)
{
    return (float) x;
}
static inline float uitofp_i16_f32(uint16_t x)
{
    return (float) x;
}
static inline float uitofp_i32_f32(uint32_t x)
{
    return (float) x;
}
static inline float uitofp_i64_f32(uint64_t x)
{
    return (float) x;
}
static inline int8_t fptosi_f32_i8(float x)
{
    return (int8_t) x;
}
static inline int16_t fptosi_f32_i16(float x)
{
    return (int16_t) x;
}
static inline int32_t fptosi_f32_i32(float x)
{
    return (int32_t) x;
}
static inline int64_t fptosi_f32_i64(float x)
{
    return (int64_t) x;
}
static inline uint8_t fptoui_f32_i8(float x)
{
    return (uint8_t) x;
}
static inline uint16_t fptoui_f32_i16(float x)
{
    return (uint16_t) x;
}
static inline uint32_t fptoui_f32_i32(float x)
{
    return (uint32_t) x;
}
static inline uint64_t fptoui_f32_i64(float x)
{
    return (uint64_t) x;
}
static inline float futrts_log32(float x)
{
    return log(x);
}
static inline float futrts_log2_32(float x)
{
    return log2(x);
}
static inline float futrts_log10_32(float x)
{
    return log10(x);
}
static inline float futrts_sqrt32(float x)
{
    return sqrt(x);
}
static inline float futrts_exp32(float x)
{
    return exp(x);
}
static inline float futrts_cos32(float x)
{
    return cos(x);
}
static inline float futrts_sin32(float x)
{
    return sin(x);
}
static inline float futrts_tan32(float x)
{
    return tan(x);
}
static inline float futrts_acos32(float x)
{
    return acos(x);
}
static inline float futrts_asin32(float x)
{
    return asin(x);
}
static inline float futrts_atan32(float x)
{
    return atan(x);
}
static inline float futrts_cosh32(float x)
{
    return cosh(x);
}
static inline float futrts_sinh32(float x)
{
    return sinh(x);
}
static inline float futrts_tanh32(float x)
{
    return tanh(x);
}
static inline float futrts_acosh32(float x)
{
    return acosh(x);
}
static inline float futrts_asinh32(float x)
{
    return asinh(x);
}
static inline float futrts_atanh32(float x)
{
    return atanh(x);
}
static inline float futrts_atan2_32(float x, float y)
{
    return atan2(x, y);
}
static inline float futrts_gamma32(float x)
{
    return tgamma(x);
}
static inline float futrts_lgamma32(float x)
{
    return lgamma(x);
}
static inline bool futrts_isnan32(float x)
{
    return isnan(x);
}
static inline bool futrts_isinf32(float x)
{
    return isinf(x);
}
static inline int32_t futrts_to_bits32(float x)
{
    union {
        float f;
        int32_t t;
    } p;
    
    p.f = x;
    return p.t;
}
static inline float futrts_from_bits32(int32_t x)
{
    union {
        int32_t f;
        float t;
    } p;
    
    p.f = x;
    return p.t;
}
static inline double fsignum32(double x)
{
    return futrts_isnan32(x) ? x : (x > 0) - (x < 0);
}
#ifdef __OPENCL_VERSION__
static inline float fmod32(float x, float y)
{
    return fmod(x, y);
}
static inline float futrts_round32(float x)
{
    return rint(x);
}
static inline float futrts_floor32(float x)
{
    return floor(x);
}
static inline float futrts_ceil32(float x)
{
    return ceil(x);
}
static inline float futrts_lerp32(float v0, float v1, float t)
{
    return mix(v0, v1, t);
}
static inline float futrts_mad32(float a, float b, float c)
{
    return mad(a, b, c);
}
static inline float futrts_fma32(float a, float b, float c)
{
    return fma(a, b, c);
}
#else
static inline float fmod32(float x, float y)
{
    return fmodf(x, y);
}
static inline float futrts_round32(float x)
{
    return rintf(x);
}
static inline float futrts_floor32(float x)
{
    return floorf(x);
}
static inline float futrts_ceil32(float x)
{
    return ceilf(x);
}
static inline float futrts_lerp32(float v0, float v1, float t)
{
    return v0 + (v1 - v0) * t;
}
static inline float futrts_mad32(float a, float b, float c)
{
    return a * b + c;
}
static inline float futrts_fma32(float a, float b, float c)
{
    return fmaf(a, b, c);
}
#endif
// Start of atomics.h

inline int32_t atomic_xchg_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_xchg_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_cmpxchg_i32_global(volatile __global int32_t *p,
                                         int32_t cmp, int32_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((int32_t*)p, cmp, val);
#else
  return atomic_cmpxchg(p, cmp, val);
#endif
}

inline int32_t atomic_cmpxchg_i32_local(volatile __local int32_t *p,
                                        int32_t cmp, int32_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((int32_t*)p, cmp, val);
#else
  return atomic_cmpxchg(p, cmp, val);
#endif
}

inline int32_t atomic_add_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((int32_t*)p, x);
#else
  return atomic_add(p, x);
#endif
}

inline int32_t atomic_add_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((int32_t*)p, x);
#else
  return atomic_add(p, x);
#endif
}

inline float atomic_fadd_f32_global(volatile __global float *p, float x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((float*)p, x);
#else
  union { int32_t i; float f; } old;
  union { int32_t i; float f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg_i32_global((volatile __global int32_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline float atomic_fadd_f32_local(volatile __local float *p, float x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((float*)p, x);
#else
  union { int32_t i; float f; } old;
  union { int32_t i; float f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg_i32_local((volatile __local int32_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline int32_t atomic_smax_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline int32_t atomic_smax_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline int32_t atomic_smin_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline int32_t atomic_smin_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline uint32_t atomic_umax_i32_global(volatile __global uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline uint32_t atomic_umax_i32_local(volatile __local uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline uint32_t atomic_umin_i32_global(volatile __global uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline uint32_t atomic_umin_i32_local(volatile __local uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline int32_t atomic_and_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int32_t*)p, x);
#else
  return atomic_and(p, x);
#endif
}

inline int32_t atomic_and_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int32_t*)p, x);
#else
  return atomic_and(p, x);
#endif
}

inline int32_t atomic_or_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int32_t*)p, x);
#else
  return atomic_or(p, x);
#endif
}

inline int32_t atomic_or_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int32_t*)p, x);
#else
  return atomic_or(p, x);
#endif
}

inline int32_t atomic_xor_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_xor_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

// Start of 64 bit atomics

inline int64_t atomic_xchg_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((uint64_t*)p, x);
#else
  return atom_xor(p, x);
#endif
}

inline int64_t atomic_xchg_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((uint64_t*)p, x);
#else
  return atom_xor(p, x);
#endif
}

inline int64_t atomic_cmpxchg_i64_global(volatile __global int64_t *p,
                                         int64_t cmp, int64_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((uint64_t*)p, cmp, val);
#else
  return atom_cmpxchg(p, cmp, val);
#endif
}

inline int64_t atomic_cmpxchg_i64_local(volatile __local int64_t *p,
                                        int64_t cmp, int64_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((uint64_t*)p, cmp, val);
#else
  return atom_cmpxchg(p, cmp, val);
#endif
}

inline int64_t atomic_add_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((uint64_t*)p, x);
#else
  return atom_add(p, x);
#endif
}

inline int64_t atomic_add_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((uint64_t*)p, x);
#else
  return atom_add(p, x);
#endif
}

inline double atomic_fadd_f64_global(volatile __global double *p, double x) {
#if defined(FUTHARK_CUDA) && __CUDA_ARCH__ >= 600
  return atomicAdd((double*)p, x);
#else
  union { int64_t i; double f; } old;
  union { int64_t i; double f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg_i64_global((volatile __global int64_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline double atomic_fadd_f64_local(volatile __local double *p, double x) {
#if defined(FUTHARK_CUDA) && __CUDA_ARCH__ >= 600
  return atomicAdd((double*)p, x);
#else
  union { int64_t i; double f; } old;
  union { int64_t i; double f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg_i64_local((volatile __local int64_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline int64_t atomic_smax_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int64_t*)p, x);
#else
  return atom_max(p, x);
#endif
}

inline int64_t atomic_smax_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int64_t*)p, x);
#else
  return atom_max(p, x);
#endif
}

inline int64_t atomic_smin_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int64_t*)p, x);
#else
  return atom_min(p, x);
#endif
}

inline int64_t atomic_smin_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int64_t*)p, x);
#else
  return atom_min(p, x);
#endif
}

inline uint64_t atomic_umax_i64_global(volatile __global uint64_t *p, uint64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint64_t*)p, x);
#else
  return atom_max(p, x);
#endif
}

inline uint64_t atomic_umax_i64_local(volatile __local uint64_t *p, uint64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint64_t*)p, x);
#else
  return atom_max(p, x);
#endif
}

inline uint64_t atomic_umin_i64_global(volatile __global uint64_t *p, uint64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint64_t*)p, x);
#else
  return atom_min(p, x);
#endif
}

inline uint64_t atomic_umin_i64_local(volatile __local uint64_t *p, uint64_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint64_t*)p, x);
#else
  return atom_min(p, x);
#endif
}

inline int64_t atomic_and_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int64_t*)p, x);
#else
  return atom_and(p, x);
#endif
}

inline int64_t atomic_and_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int64_t*)p, x);
#else
  return atom_and(p, x);
#endif
}

inline int64_t atomic_or_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int64_t*)p, x);
#else
  return atom_or(p, x);
#endif
}

inline int64_t atomic_or_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int64_t*)p, x);
#else
  return atom_or(p, x);
#endif
}

inline int64_t atomic_xor_i64_global(volatile __global int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int64_t*)p, x);
#else
  return atom_xor(p, x);
#endif
}

inline int64_t atomic_xor_i64_local(volatile __local int64_t *p, int64_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int64_t*)p, x);
#else
  return atom_xor(p, x);
#endif
}

// End of atomics.h




__kernel void builtinzhreplicate_f32zireplicate_44496(int32_t num_elems_44493,
                                                      float val_44494, __global
                                                      unsigned char *mem_44492)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t replicate_gtid_44496;
    int32_t replicate_ltid_44497;
    int32_t replicate_gid_44498;
    
    replicate_gtid_44496 = get_global_id(0);
    replicate_ltid_44497 = get_local_id(0);
    replicate_gid_44498 = get_group_id(0);
    if (slt64(replicate_gtid_44496, num_elems_44493)) {
        ((__global float *) mem_44492)[sext_i32_i64(replicate_gtid_44496)] =
            val_44494;
    }
    
  error_0:
    return;
}
__kernel void builtinzhreplicate_i32zireplicate_44505(int32_t num_elems_44502,
                                                      int32_t val_44503,
                                                      __global
                                                      unsigned char *mem_44501)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t replicate_gtid_44505;
    int32_t replicate_ltid_44506;
    int32_t replicate_gid_44507;
    
    replicate_gtid_44505 = get_global_id(0);
    replicate_ltid_44506 = get_local_id(0);
    replicate_gid_44507 = get_group_id(0);
    if (slt64(replicate_gtid_44505, num_elems_44502)) {
        ((__global int32_t *) mem_44501)[sext_i32_i64(replicate_gtid_44505)] =
            val_44503;
    }
    
  error_0:
    return;
}
__kernel void convertToFloatzisegmap_29282(__global int *global_failure,
                                           int64_t m_27377, int64_t n_27378,
                                           int64_t p_27379,
                                           int16_t nan_value_27380, __global
                                           unsigned char *images_mem_42558,
                                           __global unsigned char *mem_42563)
{
    #define segmap_group_sizze_29343 (convertToFloatzisegmap_group_sizze_29286)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43855;
    int32_t local_tid_43856;
    int64_t group_sizze_43859;
    int32_t wave_sizze_43858;
    int32_t group_tid_43857;
    
    global_tid_43855 = get_global_id(0);
    local_tid_43856 = get_local_id(0);
    group_sizze_43859 = get_local_size(0);
    wave_sizze_43858 = LOCKSTEP_WIDTH;
    group_tid_43857 = get_group_id(0);
    
    int32_t phys_tid_29282;
    
    phys_tid_29282 = global_tid_43855;
    
    int64_t gtid_29279;
    
    gtid_29279 = squot64(sext_i32_i64(group_tid_43857) *
                         segmap_group_sizze_29343 +
                         sext_i32_i64(local_tid_43856), n_27378 * p_27379);
    
    int64_t gtid_29280;
    
    gtid_29280 = squot64(sext_i32_i64(group_tid_43857) *
                         segmap_group_sizze_29343 +
                         sext_i32_i64(local_tid_43856) -
                         squot64(sext_i32_i64(group_tid_43857) *
                                 segmap_group_sizze_29343 +
                                 sext_i32_i64(local_tid_43856), n_27378 *
                                 p_27379) * (n_27378 * p_27379), p_27379);
    
    int64_t gtid_29281;
    
    gtid_29281 = sext_i32_i64(group_tid_43857) * segmap_group_sizze_29343 +
        sext_i32_i64(local_tid_43856) - squot64(sext_i32_i64(group_tid_43857) *
                                                segmap_group_sizze_29343 +
                                                sext_i32_i64(local_tid_43856),
                                                n_27378 * p_27379) * (n_27378 *
                                                                      p_27379) -
        squot64(sext_i32_i64(group_tid_43857) * segmap_group_sizze_29343 +
                sext_i32_i64(local_tid_43856) -
                squot64(sext_i32_i64(group_tid_43857) *
                        segmap_group_sizze_29343 +
                        sext_i32_i64(local_tid_43856), n_27378 * p_27379) *
                (n_27378 * p_27379), p_27379) * p_27379;
    if ((slt64(gtid_29279, m_27377) && slt64(gtid_29280, n_27378)) &&
        slt64(gtid_29281, p_27379)) {
        int16_t x_29346 = ((__global int16_t *) images_mem_42558)[gtid_29279 *
                                                                  (p_27379 *
                                                                   n_27378) +
                                                                  gtid_29280 *
                                                                  p_27379 +
                                                                  gtid_29281];
        bool cond_29347 = x_29346 == nan_value_27380;
        float defunc_0_f_res_29348;
        
        if (cond_29347) {
            defunc_0_f_res_29348 = NAN;
        } else {
            float i16_res_29349 = sitofp_i16_f32(x_29346);
            
            defunc_0_f_res_29348 = i16_res_29349;
        }
        ((__global float *) mem_42563)[gtid_29279 * (p_27379 * n_27378) +
                                       gtid_29280 * p_27379 + gtid_29281] =
            defunc_0_f_res_29348;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_29343
}
__kernel void gpu_map_transpose_f32(__local volatile
                                    int64_t *block_9_backing_aligned_0,
                                    int32_t destoffset_1, int32_t srcoffset_3,
                                    int32_t num_arrays_4, int32_t x_elems_5,
                                    int32_t y_elems_6, int32_t mulx_7,
                                    int32_t muly_8, __global
                                    unsigned char *destmem_0, __global
                                    unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_global_id_0_37;
    int32_t y_index_32 = get_group_id_1_41 * 32 + get_local_id_1_39;
    
    if (slt32(x_index_31, x_elems_5)) {
        for (int32_t j_43 = 0; j_43 < 4; j_43++) {
            int32_t index_in_35 = (y_index_32 + j_43 * 8) * x_elems_5 +
                    x_index_31;
            
            if (slt32(y_index_32 + j_43 * 8, y_elems_6)) {
                ((__local float *) block_9)[sext_i32_i64((get_local_id_1_39 +
                                                          j_43 * 8) * 33 +
                                            get_local_id_0_38)] = ((__global
                                                                    float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                                       index_in_35)];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 32 + get_local_id_0_38;
    y_index_32 = get_group_id_0_40 * 32 + get_local_id_1_39;
    if (slt32(x_index_31, y_elems_6)) {
        for (int32_t j_43 = 0; j_43 < 4; j_43++) {
            int32_t index_out_36 = (y_index_32 + j_43 * 8) * y_elems_6 +
                    x_index_31;
            
            if (slt32(y_index_32 + j_43 * 8, x_elems_5)) {
                ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                               index_out_36)] = ((__local
                                                                  float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                                    33 +
                                                                                    get_local_id_1_39 +
                                                                                    j_43 *
                                                                                    8)];
            }
        }
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_low_height(__local volatile
                                               int64_t *block_9_backing_aligned_0,
                                               int32_t destoffset_1,
                                               int32_t srcoffset_3,
                                               int32_t num_arrays_4,
                                               int32_t x_elems_5,
                                               int32_t y_elems_6,
                                               int32_t mulx_7, int32_t muly_8,
                                               __global
                                               unsigned char *destmem_0,
                                               __global unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_group_id_0_40 * 16 * mulx_7 + get_local_id_0_38 +
            srem32(get_local_id_1_39, mulx_7) * 16;
    int32_t y_index_32 = get_group_id_1_41 * 16 + squot32(get_local_id_1_39,
                                                          mulx_7);
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    
    if (slt32(x_index_31, x_elems_5) && slt32(y_index_32, y_elems_6)) {
        ((__local float *) block_9)[sext_i32_i64(get_local_id_1_39 * 17 +
                                    get_local_id_0_38)] = ((__global
                                                            float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                               index_in_35)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 16 + squot32(get_local_id_0_38, mulx_7);
    y_index_32 = get_group_id_0_40 * 16 * mulx_7 + get_local_id_1_39 +
        srem32(get_local_id_0_38, mulx_7) * 16;
    
    int32_t index_out_36 = y_index_32 * y_elems_6 + x_index_31;
    
    if (slt32(x_index_31, y_elems_6) && slt32(y_index_32, x_elems_5)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__local
                                                          float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                            17 +
                                                                            get_local_id_1_39)];
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_low_width(__local volatile
                                              int64_t *block_9_backing_aligned_0,
                                              int32_t destoffset_1,
                                              int32_t srcoffset_3,
                                              int32_t num_arrays_4,
                                              int32_t x_elems_5,
                                              int32_t y_elems_6, int32_t mulx_7,
                                              int32_t muly_8, __global
                                              unsigned char *destmem_0, __global
                                              unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_group_id_0_40 * 16 + squot32(get_local_id_0_38,
                                                          muly_8);
    int32_t y_index_32 = get_group_id_1_41 * 16 * muly_8 + get_local_id_1_39 +
            srem32(get_local_id_0_38, muly_8) * 16;
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    
    if (slt32(x_index_31, x_elems_5) && slt32(y_index_32, y_elems_6)) {
        ((__local float *) block_9)[sext_i32_i64(get_local_id_1_39 * 17 +
                                    get_local_id_0_38)] = ((__global
                                                            float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                               index_in_35)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 16 * muly_8 + get_local_id_0_38 +
        srem32(get_local_id_1_39, muly_8) * 16;
    y_index_32 = get_group_id_0_40 * 16 + squot32(get_local_id_1_39, muly_8);
    
    int32_t index_out_36 = y_index_32 * y_elems_6 + x_index_31;
    
    if (slt32(x_index_31, y_elems_6) && slt32(y_index_32, x_elems_5)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__local
                                                          float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                            17 +
                                                                            get_local_id_1_39)];
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_small(__local volatile
                                          int64_t *block_9_backing_aligned_0,
                                          int32_t destoffset_1,
                                          int32_t srcoffset_3,
                                          int32_t num_arrays_4,
                                          int32_t x_elems_5, int32_t y_elems_6,
                                          int32_t mulx_7, int32_t muly_8,
                                          __global unsigned char *destmem_0,
                                          __global unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = squot32(get_global_id_0_37, y_elems_6 *
                                          x_elems_5) * (y_elems_6 * x_elems_5);
    int32_t x_index_31 = squot32(srem32(get_global_id_0_37, y_elems_6 *
                                        x_elems_5), y_elems_6);
    int32_t y_index_32 = srem32(get_global_id_0_37, y_elems_6);
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    int32_t index_out_36 = x_index_31 * y_elems_6 + y_index_32;
    
    if (slt32(get_global_id_0_37, x_elems_5 * y_elems_6 * num_arrays_4)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__global
                                                          float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                             index_in_35)];
    }
    
  error_0:
    return;
}
__kernel void mainzicopy_44027(int64_t m_28682, int64_t i32_res_28830,
                               int64_t ctx_param_ext_42758,
                               int64_t ctx_param_ext_42759,
                               int64_t ctx_param_ext_42761, __global
                               unsigned char *mem_param_42763, __global
                               unsigned char *mem_42768)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_44027;
    int32_t copy_ltid_44028;
    int32_t copy_gid_44029;
    
    copy_gtid_44027 = get_global_id(0);
    copy_ltid_44028 = get_local_id(0);
    copy_gid_44029 = get_group_id(0);
    if (slt64(sext_i32_i64(copy_gtid_44027), m_28682 * i32_res_28830)) {
        ((__global float *) mem_42768)[(sext_i32_i64(copy_gtid_44027) -
                                        squot64(sext_i32_i64(copy_gtid_44027),
                                                i32_res_28830) *
                                        i32_res_28830) * m_28682 +
                                       squot64(sext_i32_i64(copy_gtid_44027),
                                               i32_res_28830)] = ((__global
                                                                   float *) mem_param_42763)[ctx_param_ext_42758 +
                                                                                             (squot64(sext_i32_i64(copy_gtid_44027),
                                                                                                      i32_res_28830) *
                                                                                              ctx_param_ext_42759 +
                                                                                              (sext_i32_i64(copy_gtid_44027) -
                                                                                               squot64(sext_i32_i64(copy_gtid_44027),
                                                                                                       i32_res_28830) *
                                                                                               i32_res_28830) *
                                                                                              ctx_param_ext_42761)];
    }
    
  error_0:
    return;
}
__kernel void mainziscan_stage1_39360(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_44439_backing_aligned_0,
                                      int64_t N_28681, int64_t m_28682,
                                      int32_t num_threads_44433, __global
                                      unsigned char *images_mem_42559, __global
                                      unsigned char *defunc_3_map_res_mem_43318,
                                      __global unsigned char *mem_43341,
                                      __global unsigned char *mem_43344)
{
    #define segscan_group_sizze_39377 (mainzisegscan_group_sizze_39354)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44439_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44439_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44434;
    int32_t local_tid_44435;
    int64_t group_sizze_44438;
    int32_t wave_sizze_44437;
    int32_t group_tid_44436;
    
    global_tid_44434 = get_global_id(0);
    local_tid_44435 = get_local_id(0);
    group_sizze_44438 = get_local_size(0);
    wave_sizze_44437 = LOCKSTEP_WIDTH;
    group_tid_44436 = get_group_id(0);
    
    int32_t phys_tid_39360;
    
    phys_tid_39360 = global_tid_44434;
    
    __local char *scan_arr_mem_44439;
    
    scan_arr_mem_44439 = (__local char *) scan_arr_mem_44439_backing_0;
    
    int64_t x_39382;
    int64_t x_39383;
    
    x_39382 = (int64_t) 0;
    for (int64_t j_44441 = 0; j_44441 < sdiv_up64(m_28682 * N_28681,
                                                  sext_i32_i64(num_threads_44433));
         j_44441++) {
        int64_t chunk_offset_44442 = segscan_group_sizze_39377 * j_44441 +
                sext_i32_i64(group_tid_44436) * (segscan_group_sizze_39377 *
                                                 sdiv_up64(m_28682 * N_28681,
                                                           sext_i32_i64(num_threads_44433)));
        int64_t flat_idx_44443 = chunk_offset_44442 +
                sext_i32_i64(local_tid_44435);
        int64_t gtid_39351 = squot64(flat_idx_44443, N_28681);
        int64_t gtid_39359 = flat_idx_44443 - squot64(flat_idx_44443, N_28681) *
                N_28681;
        
        // threads in bounds read input
        {
            if (slt64(gtid_39351, m_28682) && slt64(gtid_39359, N_28681)) {
                float x_39387 = ((__global
                                  float *) images_mem_42559)[gtid_39351 *
                                                             N_28681 +
                                                             gtid_39359];
                bool isnan_res_39389;
                
                isnan_res_39389 = futrts_isnan32(x_39387);
                
                bool cond_39390 = !isnan_res_39389;
                float defunc_0_f_res_39391;
                
                if (cond_39390) {
                    float x_39388 = ((__global
                                      float *) defunc_3_map_res_mem_43318)[gtid_39351 *
                                                                           N_28681 +
                                                                           gtid_39359];
                    float defunc_0_f_res_t_res_39392 = x_39387 - x_39388;
                    
                    defunc_0_f_res_39391 = defunc_0_f_res_t_res_39392;
                } else {
                    defunc_0_f_res_39391 = NAN;
                }
                
                bool isnan_res_39393;
                
                isnan_res_39393 = futrts_isnan32(defunc_0_f_res_39391);
                
                bool defunc_0_p_res_39394 = !isnan_res_39393;
                int64_t defunc_0_f_res_39395 =
                        btoi_bool_i64(defunc_0_p_res_39394);
                
                // write to-scan values to parameters
                {
                    x_39383 = defunc_0_f_res_39395;
                }
                // write mapped values results to global memory
                {
                    ((__global float *) mem_43344)[gtid_39351 * N_28681 +
                                                   gtid_39359] =
                        defunc_0_f_res_39391;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_39351, m_28682) && slt64(gtid_39359,
                                                          N_28681))) {
                    x_39383 = (int64_t) 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_39384 = add64(x_39382, x_39383);
                
                ((__local
                  int64_t *) scan_arr_mem_44439)[sext_i32_i64(local_tid_44435)] =
                    defunc_1_op_res_39384;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_44444;
            int64_t x_44445;
            int64_t x_44447;
            int64_t x_44448;
            bool ltid_in_bounds_44450;
            
            ltid_in_bounds_44450 = slt64(sext_i32_i64(local_tid_44435),
                                         segscan_group_sizze_39377);
            
            int32_t skip_threads_44451;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_44450) {
                    x_44445 = ((volatile __local
                                int64_t *) scan_arr_mem_44439)[sext_i32_i64(local_tid_44435)];
                    if ((local_tid_44435 - squot32(local_tid_44435, 32) * 32) ==
                        0) {
                        x_44444 = x_44445;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_44451 = 1;
                while (slt32(skip_threads_44451, 32)) {
                    if (sle32(skip_threads_44451, local_tid_44435 -
                              squot32(local_tid_44435, 32) * 32) &&
                        ltid_in_bounds_44450) {
                        // read operands
                        {
                            x_44444 = ((volatile __local
                                        int64_t *) scan_arr_mem_44439)[sext_i32_i64(local_tid_44435) -
                                                                       sext_i32_i64(skip_threads_44451)];
                        }
                        // perform operation
                        {
                            bool inactive_44452 =
                                 slt64(srem64(sext_i32_i64(local_tid_44435) +
                                              chunk_offset_44442, N_28681),
                                       sext_i32_i64(local_tid_44435) +
                                       chunk_offset_44442 -
                                       (sext_i32_i64(local_tid_44435 -
                                        skip_threads_44451) +
                                        chunk_offset_44442));
                            
                            if (inactive_44452) {
                                x_44444 = x_44445;
                            }
                            if (!inactive_44452) {
                                int64_t defunc_1_op_res_44446 = add64(x_44444,
                                                                      x_44445);
                                
                                x_44444 = defunc_1_op_res_44446;
                            }
                        }
                    }
                    if (sle32(wave_sizze_44437, skip_threads_44451)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_44451, local_tid_44435 -
                              squot32(local_tid_44435, 32) * 32) &&
                        ltid_in_bounds_44450) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_44439)[sext_i32_i64(local_tid_44435)] =
                                x_44444;
                            x_44445 = x_44444;
                        }
                    }
                    if (sle32(wave_sizze_44437, skip_threads_44451)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_44451 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_44435 - squot32(local_tid_44435, 32) * 32) ==
                    31 && ltid_in_bounds_44450) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_44439)[sext_i32_i64(squot32(local_tid_44435,
                                                                          32))] =
                        x_44444;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_44453;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_44435, 32) == 0 &&
                        ltid_in_bounds_44450) {
                        x_44448 = ((volatile __local
                                    int64_t *) scan_arr_mem_44439)[sext_i32_i64(local_tid_44435)];
                        if ((local_tid_44435 - squot32(local_tid_44435, 32) *
                             32) == 0) {
                            x_44447 = x_44448;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44453 = 1;
                    while (slt32(skip_threads_44453, 32)) {
                        if (sle32(skip_threads_44453, local_tid_44435 -
                                  squot32(local_tid_44435, 32) * 32) &&
                            (squot32(local_tid_44435, 32) == 0 &&
                             ltid_in_bounds_44450)) {
                            // read operands
                            {
                                x_44447 = ((volatile __local
                                            int64_t *) scan_arr_mem_44439)[sext_i32_i64(local_tid_44435) -
                                                                           sext_i32_i64(skip_threads_44453)];
                            }
                            // perform operation
                            {
                                bool inactive_44454 =
                                     slt64(srem64(sext_i32_i64(local_tid_44435 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_44442, N_28681),
                                           sext_i32_i64(local_tid_44435 * 32 +
                                           32 - 1) + chunk_offset_44442 -
                                           (sext_i32_i64((local_tid_44435 -
                                                          skip_threads_44453) *
                                            32 + 32 - 1) + chunk_offset_44442));
                                
                                if (inactive_44454) {
                                    x_44447 = x_44448;
                                }
                                if (!inactive_44454) {
                                    int64_t defunc_1_op_res_44449 =
                                            add64(x_44447, x_44448);
                                    
                                    x_44447 = defunc_1_op_res_44449;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44437, skip_threads_44453)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44453, local_tid_44435 -
                                  squot32(local_tid_44435, 32) * 32) &&
                            (squot32(local_tid_44435, 32) == 0 &&
                             ltid_in_bounds_44450)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_44439)[sext_i32_i64(local_tid_44435)] =
                                    x_44447;
                                x_44448 = x_44447;
                            }
                        }
                        if (sle32(wave_sizze_44437, skip_threads_44453)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44453 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_44435, 32) == 0 ||
                      !ltid_in_bounds_44450)) {
                    // read operands
                    {
                        x_44445 = x_44444;
                        x_44444 = ((__local
                                    int64_t *) scan_arr_mem_44439)[sext_i32_i64(squot32(local_tid_44435,
                                                                                        32)) -
                                                                   (int64_t) 1];
                    }
                    // perform operation
                    {
                        bool inactive_44455 =
                             slt64(srem64(sext_i32_i64(local_tid_44435) +
                                          chunk_offset_44442, N_28681),
                                   sext_i32_i64(local_tid_44435) +
                                   chunk_offset_44442 -
                                   (sext_i32_i64(squot32(local_tid_44435, 32) *
                                    32 - 1) + chunk_offset_44442));
                        
                        if (inactive_44455) {
                            x_44444 = x_44445;
                        }
                        if (!inactive_44455) {
                            int64_t defunc_1_op_res_44446 = add64(x_44444,
                                                                  x_44445);
                            
                            x_44444 = defunc_1_op_res_44446;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_44439)[sext_i32_i64(local_tid_44435)] =
                            x_44444;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_44435, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_44439)[sext_i32_i64(local_tid_44435)] =
                        x_44445;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_39351, m_28682) && slt64(gtid_39359, N_28681)) {
                    ((__global int64_t *) mem_43341)[gtid_39351 * N_28681 +
                                                     gtid_39359] = ((__local
                                                                     int64_t *) scan_arr_mem_44439)[sext_i32_i64(local_tid_44435)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_44456 = slt64(srem64(chunk_offset_44442 +
                                                          segscan_group_sizze_39377,
                                                          N_28681),
                                                   chunk_offset_44442 +
                                                   segscan_group_sizze_39377 -
                                                   (chunk_offset_44442 +
                                                    segscan_group_sizze_39377 -
                                                    (int64_t) 1));
                bool should_load_carry_44457 = local_tid_44435 == 0 &&
                     !crosses_segment_44456;
                
                if (should_load_carry_44457) {
                    x_39382 = ((__local
                                int64_t *) scan_arr_mem_44439)[segscan_group_sizze_39377 -
                                                               (int64_t) 1];
                }
                if (!should_load_carry_44457) {
                    x_39382 = (int64_t) 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_39377
}
__kernel void mainziscan_stage1_40344(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_44822_backing_aligned_0,
                                      int64_t N_28681, int64_t m_28682,
                                      int64_t iota32_arg_29077,
                                      int32_t num_threads_44816, __global
                                      unsigned char *defunc_4_map_res_mem_43356,
                                      __global
                                      unsigned char *defunc_3_map_res_mem_43422,
                                      __global
                                      unsigned char *defunc_3_map_res_mem_43423,
                                      __global
                                      unsigned char *defunc_0_f_res_mem_43457,
                                      __global unsigned char *mem_43476,
                                      __global unsigned char *mem_43480)
{
    #define segscan_group_sizze_40422 (mainzisegscan_group_sizze_40338)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44822_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44822_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44817;
    int32_t local_tid_44818;
    int64_t group_sizze_44821;
    int32_t wave_sizze_44820;
    int32_t group_tid_44819;
    
    global_tid_44817 = get_global_id(0);
    local_tid_44818 = get_local_id(0);
    group_sizze_44821 = get_local_size(0);
    wave_sizze_44820 = LOCKSTEP_WIDTH;
    group_tid_44819 = get_group_id(0);
    
    int32_t phys_tid_40344;
    
    phys_tid_40344 = global_tid_44817;
    
    __local char *scan_arr_mem_44822;
    
    scan_arr_mem_44822 = (__local char *) scan_arr_mem_44822_backing_0;
    
    float x_40426;
    float x_40427;
    
    x_40426 = 0.0F;
    for (int64_t j_44824 = 0; j_44824 < sdiv_up64(m_28682 * iota32_arg_29077,
                                                  sext_i32_i64(num_threads_44816));
         j_44824++) {
        int64_t chunk_offset_44825 = segscan_group_sizze_40422 * j_44824 +
                sext_i32_i64(group_tid_44819) * (segscan_group_sizze_40422 *
                                                 sdiv_up64(m_28682 *
                                                           iota32_arg_29077,
                                                           sext_i32_i64(num_threads_44816)));
        int64_t flat_idx_44826 = chunk_offset_44825 +
                sext_i32_i64(local_tid_44818);
        int64_t gtid_40335 = squot64(flat_idx_44826, iota32_arg_29077);
        int64_t gtid_40343 = flat_idx_44826 - squot64(flat_idx_44826,
                                                      iota32_arg_29077) *
                iota32_arg_29077;
        
        // threads in bounds read input
        {
            if (slt64(gtid_40335, m_28682) && slt64(gtid_40343,
                                                    iota32_arg_29077)) {
                int32_t y_40433 = ((__global int32_t *) mem_43476)[gtid_40335];
                int32_t index_primexp_40611 = sext_i64_i32(gtid_40343);
                bool cond_40436 = sle32(y_40433, index_primexp_40611);
                float defunc_0_f_res_40437;
                
                if (cond_40436) {
                    defunc_0_f_res_40437 = 0.0F;
                } else {
                    int32_t x_40429 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43423)[gtid_40335];
                    int32_t x_40430 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43422)[gtid_40335];
                    float x_40431 = ((__global
                                      float *) defunc_0_f_res_mem_43457)[gtid_40335];
                    bool cond_40438 = index_primexp_40611 == 0;
                    float defunc_0_f_res_f_res_40439;
                    
                    if (cond_40438) {
                        defunc_0_f_res_f_res_40439 = x_40431;
                    } else {
                        int32_t i_40440 = add32(x_40429, index_primexp_40611);
                        int64_t i_40441 = sext_i32_i64(i_40440);
                        float x_40442 = ((__global
                                          float *) defunc_4_map_res_mem_43356)[gtid_40335 *
                                                                               N_28681 +
                                                                               i_40441];
                        int32_t x_40443 = sub32(x_40429, x_40430);
                        int32_t i_40444 = add32(x_40443, index_primexp_40611);
                        int64_t i_40445 = sext_i32_i64(i_40444);
                        float y_40446 = ((__global
                                          float *) defunc_4_map_res_mem_43356)[gtid_40335 *
                                                                               N_28681 +
                                                                               i_40445];
                        float defunc_0_f_res_f_res_f_res_40447 = x_40442 -
                              y_40446;
                        
                        defunc_0_f_res_f_res_40439 =
                            defunc_0_f_res_f_res_f_res_40447;
                    }
                    defunc_0_f_res_40437 = defunc_0_f_res_f_res_40439;
                }
                // write to-scan values to parameters
                {
                    x_40427 = defunc_0_f_res_40437;
                }
                // write mapped values results to global memory
                { }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_40335, m_28682) && slt64(gtid_40343,
                                                          iota32_arg_29077))) {
                    x_40427 = 0.0F;
                }
            }
            // combine with carry and write to local memory
            {
                float defunc_1_op_res_40428 = x_40426 + x_40427;
                
                ((__local
                  float *) scan_arr_mem_44822)[sext_i32_i64(local_tid_44818)] =
                    defunc_1_op_res_40428;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float x_44827;
            float x_44828;
            float x_44830;
            float x_44831;
            bool ltid_in_bounds_44833;
            
            ltid_in_bounds_44833 = slt64(sext_i32_i64(local_tid_44818),
                                         segscan_group_sizze_40422);
            
            int32_t skip_threads_44834;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_44833) {
                    x_44828 = ((volatile __local
                                float *) scan_arr_mem_44822)[sext_i32_i64(local_tid_44818)];
                    if ((local_tid_44818 - squot32(local_tid_44818, 32) * 32) ==
                        0) {
                        x_44827 = x_44828;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_44834 = 1;
                while (slt32(skip_threads_44834, 32)) {
                    if (sle32(skip_threads_44834, local_tid_44818 -
                              squot32(local_tid_44818, 32) * 32) &&
                        ltid_in_bounds_44833) {
                        // read operands
                        {
                            x_44827 = ((volatile __local
                                        float *) scan_arr_mem_44822)[sext_i32_i64(local_tid_44818) -
                                                                     sext_i32_i64(skip_threads_44834)];
                        }
                        // perform operation
                        {
                            bool inactive_44835 =
                                 slt64(srem64(sext_i32_i64(local_tid_44818) +
                                              chunk_offset_44825,
                                              iota32_arg_29077),
                                       sext_i32_i64(local_tid_44818) +
                                       chunk_offset_44825 -
                                       (sext_i32_i64(local_tid_44818 -
                                        skip_threads_44834) +
                                        chunk_offset_44825));
                            
                            if (inactive_44835) {
                                x_44827 = x_44828;
                            }
                            if (!inactive_44835) {
                                float defunc_1_op_res_44829 = x_44827 + x_44828;
                                
                                x_44827 = defunc_1_op_res_44829;
                            }
                        }
                    }
                    if (sle32(wave_sizze_44820, skip_threads_44834)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_44834, local_tid_44818 -
                              squot32(local_tid_44818, 32) * 32) &&
                        ltid_in_bounds_44833) {
                        // write result
                        {
                            ((volatile __local
                              float *) scan_arr_mem_44822)[sext_i32_i64(local_tid_44818)] =
                                x_44827;
                            x_44828 = x_44827;
                        }
                    }
                    if (sle32(wave_sizze_44820, skip_threads_44834)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_44834 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_44818 - squot32(local_tid_44818, 32) * 32) ==
                    31 && ltid_in_bounds_44833) {
                    ((volatile __local
                      float *) scan_arr_mem_44822)[sext_i32_i64(squot32(local_tid_44818,
                                                                        32))] =
                        x_44827;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_44836;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_44818, 32) == 0 &&
                        ltid_in_bounds_44833) {
                        x_44831 = ((volatile __local
                                    float *) scan_arr_mem_44822)[sext_i32_i64(local_tid_44818)];
                        if ((local_tid_44818 - squot32(local_tid_44818, 32) *
                             32) == 0) {
                            x_44830 = x_44831;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44836 = 1;
                    while (slt32(skip_threads_44836, 32)) {
                        if (sle32(skip_threads_44836, local_tid_44818 -
                                  squot32(local_tid_44818, 32) * 32) &&
                            (squot32(local_tid_44818, 32) == 0 &&
                             ltid_in_bounds_44833)) {
                            // read operands
                            {
                                x_44830 = ((volatile __local
                                            float *) scan_arr_mem_44822)[sext_i32_i64(local_tid_44818) -
                                                                         sext_i32_i64(skip_threads_44836)];
                            }
                            // perform operation
                            {
                                bool inactive_44837 =
                                     slt64(srem64(sext_i32_i64(local_tid_44818 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_44825,
                                                  iota32_arg_29077),
                                           sext_i32_i64(local_tid_44818 * 32 +
                                           32 - 1) + chunk_offset_44825 -
                                           (sext_i32_i64((local_tid_44818 -
                                                          skip_threads_44836) *
                                            32 + 32 - 1) + chunk_offset_44825));
                                
                                if (inactive_44837) {
                                    x_44830 = x_44831;
                                }
                                if (!inactive_44837) {
                                    float defunc_1_op_res_44832 = x_44830 +
                                          x_44831;
                                    
                                    x_44830 = defunc_1_op_res_44832;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44820, skip_threads_44836)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44836, local_tid_44818 -
                                  squot32(local_tid_44818, 32) * 32) &&
                            (squot32(local_tid_44818, 32) == 0 &&
                             ltid_in_bounds_44833)) {
                            // write result
                            {
                                ((volatile __local
                                  float *) scan_arr_mem_44822)[sext_i32_i64(local_tid_44818)] =
                                    x_44830;
                                x_44831 = x_44830;
                            }
                        }
                        if (sle32(wave_sizze_44820, skip_threads_44836)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44836 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_44818, 32) == 0 ||
                      !ltid_in_bounds_44833)) {
                    // read operands
                    {
                        x_44828 = x_44827;
                        x_44827 = ((__local
                                    float *) scan_arr_mem_44822)[sext_i32_i64(squot32(local_tid_44818,
                                                                                      32)) -
                                                                 (int64_t) 1];
                    }
                    // perform operation
                    {
                        bool inactive_44838 =
                             slt64(srem64(sext_i32_i64(local_tid_44818) +
                                          chunk_offset_44825, iota32_arg_29077),
                                   sext_i32_i64(local_tid_44818) +
                                   chunk_offset_44825 -
                                   (sext_i32_i64(squot32(local_tid_44818, 32) *
                                    32 - 1) + chunk_offset_44825));
                        
                        if (inactive_44838) {
                            x_44827 = x_44828;
                        }
                        if (!inactive_44838) {
                            float defunc_1_op_res_44829 = x_44827 + x_44828;
                            
                            x_44827 = defunc_1_op_res_44829;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          float *) scan_arr_mem_44822)[sext_i32_i64(local_tid_44818)] =
                            x_44827;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_44818, 32) == 0) {
                    ((__local
                      float *) scan_arr_mem_44822)[sext_i32_i64(local_tid_44818)] =
                        x_44828;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_40335, m_28682) && slt64(gtid_40343,
                                                        iota32_arg_29077)) {
                    ((__global float *) mem_43480)[gtid_40335 *
                                                   iota32_arg_29077 +
                                                   gtid_40343] = ((__local
                                                                   float *) scan_arr_mem_44822)[sext_i32_i64(local_tid_44818)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_44839 = slt64(srem64(chunk_offset_44825 +
                                                          segscan_group_sizze_40422,
                                                          iota32_arg_29077),
                                                   chunk_offset_44825 +
                                                   segscan_group_sizze_40422 -
                                                   (chunk_offset_44825 +
                                                    segscan_group_sizze_40422 -
                                                    (int64_t) 1));
                bool should_load_carry_44840 = local_tid_44818 == 0 &&
                     !crosses_segment_44839;
                
                if (should_load_carry_44840) {
                    x_40426 = ((__local
                                float *) scan_arr_mem_44822)[segscan_group_sizze_40422 -
                                                             (int64_t) 1];
                }
                if (!should_load_carry_44840) {
                    x_40426 = 0.0F;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_40422
}
__kernel void mainziscan_stage2_39360(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_44463_backing_aligned_0,
                                      int64_t N_28681, int64_t m_28682,
                                      int64_t stage1_num_groups_44432,
                                      int32_t num_threads_44433, __global
                                      unsigned char *mem_43341)
{
    #define segscan_group_sizze_39377 (mainzisegscan_group_sizze_39354)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44463_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44463_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44458;
    int32_t local_tid_44459;
    int64_t group_sizze_44462;
    int32_t wave_sizze_44461;
    int32_t group_tid_44460;
    
    global_tid_44458 = get_global_id(0);
    local_tid_44459 = get_local_id(0);
    group_sizze_44462 = get_local_size(0);
    wave_sizze_44461 = LOCKSTEP_WIDTH;
    group_tid_44460 = get_group_id(0);
    
    int32_t phys_tid_39360;
    
    phys_tid_39360 = global_tid_44458;
    
    __local char *scan_arr_mem_44463;
    
    scan_arr_mem_44463 = (__local char *) scan_arr_mem_44463_backing_0;
    
    int64_t flat_idx_44465;
    
    flat_idx_44465 = (sext_i32_i64(local_tid_44459) + (int64_t) 1) *
        (segscan_group_sizze_39377 * sdiv_up64(m_28682 * N_28681,
                                               sext_i32_i64(num_threads_44433))) -
        (int64_t) 1;
    
    int64_t gtid_39351;
    
    gtid_39351 = squot64(flat_idx_44465, N_28681);
    
    int64_t gtid_39359;
    
    gtid_39359 = flat_idx_44465 - squot64(flat_idx_44465, N_28681) * N_28681;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_39351, m_28682) && slt64(gtid_39359, N_28681)) {
            ((__local
              int64_t *) scan_arr_mem_44463)[sext_i32_i64(local_tid_44459)] =
                ((__global int64_t *) mem_43341)[gtid_39351 * N_28681 +
                                                 gtid_39359];
        } else {
            ((__local
              int64_t *) scan_arr_mem_44463)[sext_i32_i64(local_tid_44459)] =
                (int64_t) 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_39382;
    int64_t x_39383;
    int64_t x_44466;
    int64_t x_44467;
    bool ltid_in_bounds_44469;
    
    ltid_in_bounds_44469 = slt64(sext_i32_i64(local_tid_44459),
                                 stage1_num_groups_44432);
    
    int32_t skip_threads_44470;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44469) {
            x_39383 = ((volatile __local
                        int64_t *) scan_arr_mem_44463)[sext_i32_i64(local_tid_44459)];
            if ((local_tid_44459 - squot32(local_tid_44459, 32) * 32) == 0) {
                x_39382 = x_39383;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44470 = 1;
        while (slt32(skip_threads_44470, 32)) {
            if (sle32(skip_threads_44470, local_tid_44459 -
                      squot32(local_tid_44459, 32) * 32) &&
                ltid_in_bounds_44469) {
                // read operands
                {
                    x_39382 = ((volatile __local
                                int64_t *) scan_arr_mem_44463)[sext_i32_i64(local_tid_44459) -
                                                               sext_i32_i64(skip_threads_44470)];
                }
                // perform operation
                {
                    bool inactive_44471 =
                         slt64(srem64((sext_i32_i64(local_tid_44459) +
                                       (int64_t) 1) *
                                      (segscan_group_sizze_39377 *
                                       sdiv_up64(m_28682 * N_28681,
                                                 sext_i32_i64(num_threads_44433))) -
                                      (int64_t) 1, N_28681),
                               (sext_i32_i64(local_tid_44459) + (int64_t) 1) *
                               (segscan_group_sizze_39377 * sdiv_up64(m_28682 *
                                                                      N_28681,
                                                                      sext_i32_i64(num_threads_44433))) -
                               (int64_t) 1 - ((sext_i32_i64(local_tid_44459 -
                                               skip_threads_44470) +
                                               (int64_t) 1) *
                                              (segscan_group_sizze_39377 *
                                               sdiv_up64(m_28682 * N_28681,
                                                         sext_i32_i64(num_threads_44433))) -
                                              (int64_t) 1));
                    
                    if (inactive_44471) {
                        x_39382 = x_39383;
                    }
                    if (!inactive_44471) {
                        int64_t defunc_1_op_res_39384 = add64(x_39382, x_39383);
                        
                        x_39382 = defunc_1_op_res_39384;
                    }
                }
            }
            if (sle32(wave_sizze_44461, skip_threads_44470)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44470, local_tid_44459 -
                      squot32(local_tid_44459, 32) * 32) &&
                ltid_in_bounds_44469) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_44463)[sext_i32_i64(local_tid_44459)] =
                        x_39382;
                    x_39383 = x_39382;
                }
            }
            if (sle32(wave_sizze_44461, skip_threads_44470)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44470 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44459 - squot32(local_tid_44459, 32) * 32) == 31 &&
            ltid_in_bounds_44469) {
            ((volatile __local
              int64_t *) scan_arr_mem_44463)[sext_i32_i64(squot32(local_tid_44459,
                                                                  32))] =
                x_39382;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44472;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44459, 32) == 0 && ltid_in_bounds_44469) {
                x_44467 = ((volatile __local
                            int64_t *) scan_arr_mem_44463)[sext_i32_i64(local_tid_44459)];
                if ((local_tid_44459 - squot32(local_tid_44459, 32) * 32) ==
                    0) {
                    x_44466 = x_44467;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44472 = 1;
            while (slt32(skip_threads_44472, 32)) {
                if (sle32(skip_threads_44472, local_tid_44459 -
                          squot32(local_tid_44459, 32) * 32) &&
                    (squot32(local_tid_44459, 32) == 0 &&
                     ltid_in_bounds_44469)) {
                    // read operands
                    {
                        x_44466 = ((volatile __local
                                    int64_t *) scan_arr_mem_44463)[sext_i32_i64(local_tid_44459) -
                                                                   sext_i32_i64(skip_threads_44472)];
                    }
                    // perform operation
                    {
                        bool inactive_44473 =
                             slt64(srem64((sext_i32_i64(local_tid_44459 * 32 +
                                           32 - 1) + (int64_t) 1) *
                                          (segscan_group_sizze_39377 *
                                           sdiv_up64(m_28682 * N_28681,
                                                     sext_i32_i64(num_threads_44433))) -
                                          (int64_t) 1, N_28681),
                                   (sext_i32_i64(local_tid_44459 * 32 + 32 -
                                    1) + (int64_t) 1) *
                                   (segscan_group_sizze_39377 *
                                    sdiv_up64(m_28682 * N_28681,
                                              sext_i32_i64(num_threads_44433))) -
                                   (int64_t) 1 -
                                   ((sext_i32_i64((local_tid_44459 -
                                                   skip_threads_44472) * 32 +
                                     32 - 1) + (int64_t) 1) *
                                    (segscan_group_sizze_39377 *
                                     sdiv_up64(m_28682 * N_28681,
                                               sext_i32_i64(num_threads_44433))) -
                                    (int64_t) 1));
                        
                        if (inactive_44473) {
                            x_44466 = x_44467;
                        }
                        if (!inactive_44473) {
                            int64_t defunc_1_op_res_44468 = add64(x_44466,
                                                                  x_44467);
                            
                            x_44466 = defunc_1_op_res_44468;
                        }
                    }
                }
                if (sle32(wave_sizze_44461, skip_threads_44472)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44472, local_tid_44459 -
                          squot32(local_tid_44459, 32) * 32) &&
                    (squot32(local_tid_44459, 32) == 0 &&
                     ltid_in_bounds_44469)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_44463)[sext_i32_i64(local_tid_44459)] =
                            x_44466;
                        x_44467 = x_44466;
                    }
                }
                if (sle32(wave_sizze_44461, skip_threads_44472)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44472 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44459, 32) == 0 || !ltid_in_bounds_44469)) {
            // read operands
            {
                x_39383 = x_39382;
                x_39382 = ((__local
                            int64_t *) scan_arr_mem_44463)[sext_i32_i64(squot32(local_tid_44459,
                                                                                32)) -
                                                           (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44474 =
                     slt64(srem64((sext_i32_i64(local_tid_44459) +
                                   (int64_t) 1) * (segscan_group_sizze_39377 *
                                                   sdiv_up64(m_28682 * N_28681,
                                                             sext_i32_i64(num_threads_44433))) -
                                  (int64_t) 1, N_28681),
                           (sext_i32_i64(local_tid_44459) + (int64_t) 1) *
                           (segscan_group_sizze_39377 * sdiv_up64(m_28682 *
                                                                  N_28681,
                                                                  sext_i32_i64(num_threads_44433))) -
                           (int64_t) 1 - ((sext_i32_i64(squot32(local_tid_44459,
                                                                32) * 32 - 1) +
                                           (int64_t) 1) *
                                          (segscan_group_sizze_39377 *
                                           sdiv_up64(m_28682 * N_28681,
                                                     sext_i32_i64(num_threads_44433))) -
                                          (int64_t) 1));
                
                if (inactive_44474) {
                    x_39382 = x_39383;
                }
                if (!inactive_44474) {
                    int64_t defunc_1_op_res_39384 = add64(x_39382, x_39383);
                    
                    x_39382 = defunc_1_op_res_39384;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_44463)[sext_i32_i64(local_tid_44459)] =
                    x_39382;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44459, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_44463)[sext_i32_i64(local_tid_44459)] =
                x_39383;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_39351, m_28682) && slt64(gtid_39359, N_28681)) {
            ((__global int64_t *) mem_43341)[gtid_39351 * N_28681 +
                                             gtid_39359] = ((__local
                                                             int64_t *) scan_arr_mem_44463)[sext_i32_i64(local_tid_44459)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_39377
}
__kernel void mainziscan_stage2_40344(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_44846_backing_aligned_0,
                                      int64_t m_28682, int64_t iota32_arg_29077,
                                      int64_t stage1_num_groups_44815,
                                      int32_t num_threads_44816, __global
                                      unsigned char *mem_43480)
{
    #define segscan_group_sizze_40422 (mainzisegscan_group_sizze_40338)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44846_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44846_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44841;
    int32_t local_tid_44842;
    int64_t group_sizze_44845;
    int32_t wave_sizze_44844;
    int32_t group_tid_44843;
    
    global_tid_44841 = get_global_id(0);
    local_tid_44842 = get_local_id(0);
    group_sizze_44845 = get_local_size(0);
    wave_sizze_44844 = LOCKSTEP_WIDTH;
    group_tid_44843 = get_group_id(0);
    
    int32_t phys_tid_40344;
    
    phys_tid_40344 = global_tid_44841;
    
    __local char *scan_arr_mem_44846;
    
    scan_arr_mem_44846 = (__local char *) scan_arr_mem_44846_backing_0;
    
    int64_t flat_idx_44848;
    
    flat_idx_44848 = (sext_i32_i64(local_tid_44842) + (int64_t) 1) *
        (segscan_group_sizze_40422 * sdiv_up64(m_28682 * iota32_arg_29077,
                                               sext_i32_i64(num_threads_44816))) -
        (int64_t) 1;
    
    int64_t gtid_40335;
    
    gtid_40335 = squot64(flat_idx_44848, iota32_arg_29077);
    
    int64_t gtid_40343;
    
    gtid_40343 = flat_idx_44848 - squot64(flat_idx_44848, iota32_arg_29077) *
        iota32_arg_29077;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_40335, m_28682) && slt64(gtid_40343, iota32_arg_29077)) {
            ((__local
              float *) scan_arr_mem_44846)[sext_i32_i64(local_tid_44842)] =
                ((__global float *) mem_43480)[gtid_40335 * iota32_arg_29077 +
                                               gtid_40343];
        } else {
            ((__local
              float *) scan_arr_mem_44846)[sext_i32_i64(local_tid_44842)] =
                0.0F;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float x_40426;
    float x_40427;
    float x_44849;
    float x_44850;
    bool ltid_in_bounds_44852;
    
    ltid_in_bounds_44852 = slt64(sext_i32_i64(local_tid_44842),
                                 stage1_num_groups_44815);
    
    int32_t skip_threads_44853;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44852) {
            x_40427 = ((volatile __local
                        float *) scan_arr_mem_44846)[sext_i32_i64(local_tid_44842)];
            if ((local_tid_44842 - squot32(local_tid_44842, 32) * 32) == 0) {
                x_40426 = x_40427;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44853 = 1;
        while (slt32(skip_threads_44853, 32)) {
            if (sle32(skip_threads_44853, local_tid_44842 -
                      squot32(local_tid_44842, 32) * 32) &&
                ltid_in_bounds_44852) {
                // read operands
                {
                    x_40426 = ((volatile __local
                                float *) scan_arr_mem_44846)[sext_i32_i64(local_tid_44842) -
                                                             sext_i32_i64(skip_threads_44853)];
                }
                // perform operation
                {
                    bool inactive_44854 =
                         slt64(srem64((sext_i32_i64(local_tid_44842) +
                                       (int64_t) 1) *
                                      (segscan_group_sizze_40422 *
                                       sdiv_up64(m_28682 * iota32_arg_29077,
                                                 sext_i32_i64(num_threads_44816))) -
                                      (int64_t) 1, iota32_arg_29077),
                               (sext_i32_i64(local_tid_44842) + (int64_t) 1) *
                               (segscan_group_sizze_40422 * sdiv_up64(m_28682 *
                                                                      iota32_arg_29077,
                                                                      sext_i32_i64(num_threads_44816))) -
                               (int64_t) 1 - ((sext_i32_i64(local_tid_44842 -
                                               skip_threads_44853) +
                                               (int64_t) 1) *
                                              (segscan_group_sizze_40422 *
                                               sdiv_up64(m_28682 *
                                                         iota32_arg_29077,
                                                         sext_i32_i64(num_threads_44816))) -
                                              (int64_t) 1));
                    
                    if (inactive_44854) {
                        x_40426 = x_40427;
                    }
                    if (!inactive_44854) {
                        float defunc_1_op_res_40428 = x_40426 + x_40427;
                        
                        x_40426 = defunc_1_op_res_40428;
                    }
                }
            }
            if (sle32(wave_sizze_44844, skip_threads_44853)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44853, local_tid_44842 -
                      squot32(local_tid_44842, 32) * 32) &&
                ltid_in_bounds_44852) {
                // write result
                {
                    ((volatile __local
                      float *) scan_arr_mem_44846)[sext_i32_i64(local_tid_44842)] =
                        x_40426;
                    x_40427 = x_40426;
                }
            }
            if (sle32(wave_sizze_44844, skip_threads_44853)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44853 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44842 - squot32(local_tid_44842, 32) * 32) == 31 &&
            ltid_in_bounds_44852) {
            ((volatile __local
              float *) scan_arr_mem_44846)[sext_i32_i64(squot32(local_tid_44842,
                                                                32))] = x_40426;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44855;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44842, 32) == 0 && ltid_in_bounds_44852) {
                x_44850 = ((volatile __local
                            float *) scan_arr_mem_44846)[sext_i32_i64(local_tid_44842)];
                if ((local_tid_44842 - squot32(local_tid_44842, 32) * 32) ==
                    0) {
                    x_44849 = x_44850;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44855 = 1;
            while (slt32(skip_threads_44855, 32)) {
                if (sle32(skip_threads_44855, local_tid_44842 -
                          squot32(local_tid_44842, 32) * 32) &&
                    (squot32(local_tid_44842, 32) == 0 &&
                     ltid_in_bounds_44852)) {
                    // read operands
                    {
                        x_44849 = ((volatile __local
                                    float *) scan_arr_mem_44846)[sext_i32_i64(local_tid_44842) -
                                                                 sext_i32_i64(skip_threads_44855)];
                    }
                    // perform operation
                    {
                        bool inactive_44856 =
                             slt64(srem64((sext_i32_i64(local_tid_44842 * 32 +
                                           32 - 1) + (int64_t) 1) *
                                          (segscan_group_sizze_40422 *
                                           sdiv_up64(m_28682 * iota32_arg_29077,
                                                     sext_i32_i64(num_threads_44816))) -
                                          (int64_t) 1, iota32_arg_29077),
                                   (sext_i32_i64(local_tid_44842 * 32 + 32 -
                                    1) + (int64_t) 1) *
                                   (segscan_group_sizze_40422 *
                                    sdiv_up64(m_28682 * iota32_arg_29077,
                                              sext_i32_i64(num_threads_44816))) -
                                   (int64_t) 1 -
                                   ((sext_i32_i64((local_tid_44842 -
                                                   skip_threads_44855) * 32 +
                                     32 - 1) + (int64_t) 1) *
                                    (segscan_group_sizze_40422 *
                                     sdiv_up64(m_28682 * iota32_arg_29077,
                                               sext_i32_i64(num_threads_44816))) -
                                    (int64_t) 1));
                        
                        if (inactive_44856) {
                            x_44849 = x_44850;
                        }
                        if (!inactive_44856) {
                            float defunc_1_op_res_44851 = x_44849 + x_44850;
                            
                            x_44849 = defunc_1_op_res_44851;
                        }
                    }
                }
                if (sle32(wave_sizze_44844, skip_threads_44855)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44855, local_tid_44842 -
                          squot32(local_tid_44842, 32) * 32) &&
                    (squot32(local_tid_44842, 32) == 0 &&
                     ltid_in_bounds_44852)) {
                    // write result
                    {
                        ((volatile __local
                          float *) scan_arr_mem_44846)[sext_i32_i64(local_tid_44842)] =
                            x_44849;
                        x_44850 = x_44849;
                    }
                }
                if (sle32(wave_sizze_44844, skip_threads_44855)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44855 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44842, 32) == 0 || !ltid_in_bounds_44852)) {
            // read operands
            {
                x_40427 = x_40426;
                x_40426 = ((__local
                            float *) scan_arr_mem_44846)[sext_i32_i64(squot32(local_tid_44842,
                                                                              32)) -
                                                         (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44857 =
                     slt64(srem64((sext_i32_i64(local_tid_44842) +
                                   (int64_t) 1) * (segscan_group_sizze_40422 *
                                                   sdiv_up64(m_28682 *
                                                             iota32_arg_29077,
                                                             sext_i32_i64(num_threads_44816))) -
                                  (int64_t) 1, iota32_arg_29077),
                           (sext_i32_i64(local_tid_44842) + (int64_t) 1) *
                           (segscan_group_sizze_40422 * sdiv_up64(m_28682 *
                                                                  iota32_arg_29077,
                                                                  sext_i32_i64(num_threads_44816))) -
                           (int64_t) 1 - ((sext_i32_i64(squot32(local_tid_44842,
                                                                32) * 32 - 1) +
                                           (int64_t) 1) *
                                          (segscan_group_sizze_40422 *
                                           sdiv_up64(m_28682 * iota32_arg_29077,
                                                     sext_i32_i64(num_threads_44816))) -
                                          (int64_t) 1));
                
                if (inactive_44857) {
                    x_40426 = x_40427;
                }
                if (!inactive_44857) {
                    float defunc_1_op_res_40428 = x_40426 + x_40427;
                    
                    x_40426 = defunc_1_op_res_40428;
                }
            }
            // write final result
            {
                ((__local
                  float *) scan_arr_mem_44846)[sext_i32_i64(local_tid_44842)] =
                    x_40426;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44842, 32) == 0) {
            ((__local
              float *) scan_arr_mem_44846)[sext_i32_i64(local_tid_44842)] =
                x_40427;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_40335, m_28682) && slt64(gtid_40343, iota32_arg_29077)) {
            ((__global float *) mem_43480)[gtid_40335 * iota32_arg_29077 +
                                           gtid_40343] = ((__local
                                                           float *) scan_arr_mem_44846)[sext_i32_i64(local_tid_44842)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_40422
}
__kernel void mainziscan_stage3_39360(__global int *global_failure,
                                      int64_t N_28681, int64_t m_28682,
                                      int64_t num_groups_39378,
                                      int32_t num_threads_44433,
                                      int32_t required_groups_44475, __global
                                      unsigned char *mem_43341)
{
    #define segscan_group_sizze_39377 (mainzisegscan_group_sizze_39354)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44476;
    int32_t local_tid_44477;
    int64_t group_sizze_44480;
    int32_t wave_sizze_44479;
    int32_t group_tid_44478;
    
    global_tid_44476 = get_global_id(0);
    local_tid_44477 = get_local_id(0);
    group_sizze_44480 = get_local_size(0);
    wave_sizze_44479 = LOCKSTEP_WIDTH;
    group_tid_44478 = get_group_id(0);
    
    int32_t phys_tid_39360;
    
    phys_tid_39360 = global_tid_44476;
    
    int32_t phys_group_id_44481;
    
    phys_group_id_44481 = get_group_id(0);
    for (int32_t i_44482 = 0; i_44482 < sdiv_up32(required_groups_44475 -
                                                  phys_group_id_44481,
                                                  sext_i64_i32(num_groups_39378));
         i_44482++) {
        int32_t virt_group_id_44483 = phys_group_id_44481 + i_44482 *
                sext_i64_i32(num_groups_39378);
        int64_t flat_idx_44484 = sext_i32_i64(virt_group_id_44483) *
                segscan_group_sizze_39377 + sext_i32_i64(local_tid_44477);
        int64_t gtid_39351 = squot64(flat_idx_44484, N_28681);
        int64_t gtid_39359 = flat_idx_44484 - squot64(flat_idx_44484, N_28681) *
                N_28681;
        int64_t orig_group_44485 = squot64(flat_idx_44484,
                                           segscan_group_sizze_39377 *
                                           sdiv_up64(m_28682 * N_28681,
                                                     sext_i32_i64(num_threads_44433)));
        int64_t carry_in_flat_idx_44486 = orig_group_44485 *
                (segscan_group_sizze_39377 * sdiv_up64(m_28682 * N_28681,
                                                       sext_i32_i64(num_threads_44433))) -
                (int64_t) 1;
        
        if (slt64(gtid_39351, m_28682) && slt64(gtid_39359, N_28681)) {
            if (!(orig_group_44485 == (int64_t) 0 || (flat_idx_44484 ==
                                                      (orig_group_44485 +
                                                       (int64_t) 1) *
                                                      (segscan_group_sizze_39377 *
                                                       sdiv_up64(m_28682 *
                                                                 N_28681,
                                                                 sext_i32_i64(num_threads_44433))) -
                                                      (int64_t) 1 ||
                                                      slt64(srem64(flat_idx_44484,
                                                                   N_28681),
                                                            flat_idx_44484 -
                                                            carry_in_flat_idx_44486)))) {
                int64_t x_39382;
                int64_t x_39383;
                
                x_39382 = ((__global
                            int64_t *) mem_43341)[squot64(carry_in_flat_idx_44486,
                                                          N_28681) * N_28681 +
                                                  (carry_in_flat_idx_44486 -
                                                   squot64(carry_in_flat_idx_44486,
                                                           N_28681) * N_28681)];
                x_39383 = ((__global int64_t *) mem_43341)[gtid_39351 *
                                                           N_28681 +
                                                           gtid_39359];
                
                int64_t defunc_1_op_res_39384;
                
                defunc_1_op_res_39384 = add64(x_39382, x_39383);
                x_39382 = defunc_1_op_res_39384;
                ((__global int64_t *) mem_43341)[gtid_39351 * N_28681 +
                                                 gtid_39359] = x_39382;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_39377
}
__kernel void mainziscan_stage3_40344(__global int *global_failure,
                                      int64_t m_28682, int64_t iota32_arg_29077,
                                      int64_t num_groups_40423,
                                      int32_t num_threads_44816,
                                      int32_t required_groups_44858, __global
                                      unsigned char *mem_43480)
{
    #define segscan_group_sizze_40422 (mainzisegscan_group_sizze_40338)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44859;
    int32_t local_tid_44860;
    int64_t group_sizze_44863;
    int32_t wave_sizze_44862;
    int32_t group_tid_44861;
    
    global_tid_44859 = get_global_id(0);
    local_tid_44860 = get_local_id(0);
    group_sizze_44863 = get_local_size(0);
    wave_sizze_44862 = LOCKSTEP_WIDTH;
    group_tid_44861 = get_group_id(0);
    
    int32_t phys_tid_40344;
    
    phys_tid_40344 = global_tid_44859;
    
    int32_t phys_group_id_44864;
    
    phys_group_id_44864 = get_group_id(0);
    for (int32_t i_44865 = 0; i_44865 < sdiv_up32(required_groups_44858 -
                                                  phys_group_id_44864,
                                                  sext_i64_i32(num_groups_40423));
         i_44865++) {
        int32_t virt_group_id_44866 = phys_group_id_44864 + i_44865 *
                sext_i64_i32(num_groups_40423);
        int64_t flat_idx_44867 = sext_i32_i64(virt_group_id_44866) *
                segscan_group_sizze_40422 + sext_i32_i64(local_tid_44860);
        int64_t gtid_40335 = squot64(flat_idx_44867, iota32_arg_29077);
        int64_t gtid_40343 = flat_idx_44867 - squot64(flat_idx_44867,
                                                      iota32_arg_29077) *
                iota32_arg_29077;
        int64_t orig_group_44868 = squot64(flat_idx_44867,
                                           segscan_group_sizze_40422 *
                                           sdiv_up64(m_28682 * iota32_arg_29077,
                                                     sext_i32_i64(num_threads_44816)));
        int64_t carry_in_flat_idx_44869 = orig_group_44868 *
                (segscan_group_sizze_40422 * sdiv_up64(m_28682 *
                                                       iota32_arg_29077,
                                                       sext_i32_i64(num_threads_44816))) -
                (int64_t) 1;
        
        if (slt64(gtid_40335, m_28682) && slt64(gtid_40343, iota32_arg_29077)) {
            if (!(orig_group_44868 == (int64_t) 0 || (flat_idx_44867 ==
                                                      (orig_group_44868 +
                                                       (int64_t) 1) *
                                                      (segscan_group_sizze_40422 *
                                                       sdiv_up64(m_28682 *
                                                                 iota32_arg_29077,
                                                                 sext_i32_i64(num_threads_44816))) -
                                                      (int64_t) 1 ||
                                                      slt64(srem64(flat_idx_44867,
                                                                   iota32_arg_29077),
                                                            flat_idx_44867 -
                                                            carry_in_flat_idx_44869)))) {
                float x_40426;
                float x_40427;
                
                x_40426 = ((__global
                            float *) mem_43480)[squot64(carry_in_flat_idx_44869,
                                                        iota32_arg_29077) *
                                                iota32_arg_29077 +
                                                (carry_in_flat_idx_44869 -
                                                 squot64(carry_in_flat_idx_44869,
                                                         iota32_arg_29077) *
                                                 iota32_arg_29077)];
                x_40427 = ((__global float *) mem_43480)[gtid_40335 *
                                                         iota32_arg_29077 +
                                                         gtid_40343];
                
                float defunc_1_op_res_40428;
                
                defunc_1_op_res_40428 = x_40426 + x_40427;
                x_40426 = defunc_1_op_res_40428;
                ((__global float *) mem_43480)[gtid_40335 * iota32_arg_29077 +
                                               gtid_40343] = x_40426;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_40422
}
__kernel void mainzisegmap_37283(__global int *global_failure, int64_t N_28681,
                                 float freq_28686, int64_t i32_res_28697,
                                 __global
                                 unsigned char *mappingindices_mem_42558,
                                 __global unsigned char *mem_42563)
{
    #define segmap_group_sizze_37356 (mainzisegmap_group_sizze_37286)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43857;
    int32_t local_tid_43858;
    int64_t group_sizze_43861;
    int32_t wave_sizze_43860;
    int32_t group_tid_43859;
    
    global_tid_43857 = get_global_id(0);
    local_tid_43858 = get_local_id(0);
    group_sizze_43861 = get_local_size(0);
    wave_sizze_43860 = LOCKSTEP_WIDTH;
    group_tid_43859 = get_group_id(0);
    
    int32_t phys_tid_37283;
    
    phys_tid_37283 = global_tid_43857;
    
    int64_t gtid_37281;
    
    gtid_37281 = squot64(sext_i32_i64(group_tid_43859) *
                         segmap_group_sizze_37356 +
                         sext_i32_i64(local_tid_43858), N_28681);
    
    int64_t gtid_37282;
    
    gtid_37282 = sext_i32_i64(group_tid_43859) * segmap_group_sizze_37356 +
        sext_i32_i64(local_tid_43858) - squot64(sext_i32_i64(group_tid_43859) *
                                                segmap_group_sizze_37356 +
                                                sext_i32_i64(local_tid_43858),
                                                N_28681) * N_28681;
    if (slt64(gtid_37281, i32_res_28697) && slt64(gtid_37282, N_28681)) {
        int32_t index_primexp_40550 = sext_i64_i32(gtid_37281);
        bool index_primexp_40547 = index_primexp_40550 == 0;
        float defunc_0_f_res_37362;
        
        if (index_primexp_40547) {
            defunc_0_f_res_37362 = 1.0F;
        } else {
            int32_t x_37361 = ((__global
                                int32_t *) mappingindices_mem_42558)[gtid_37282];
            bool cond_37363 = index_primexp_40550 == 1;
            float defunc_0_f_res_f_res_37364;
            
            if (cond_37363) {
                float i32_res_37365 = sitofp_i32_f32(x_37361);
                
                defunc_0_f_res_f_res_37364 = i32_res_37365;
            } else {
                int32_t r32_arg_37366 = sdiv32(index_primexp_40550, 2);
                float i32_res_37367 = sitofp_i32_f32(r32_arg_37366);
                float i32_res_37368 = sitofp_i32_f32(x_37361);
                float x_37369 = 6.2831855F * i32_res_37367;
                float x_37370 = i32_res_37368 * x_37369;
                float angle_37371 = x_37370 / freq_28686;
                int32_t x_37372 = smod32(index_primexp_40550, 2);
                bool cond_37373 = x_37372 == 0;
                float defunc_0_f_res_f_res_f_res_37374;
                
                if (cond_37373) {
                    float sin_res_37375;
                    
                    sin_res_37375 = futrts_sin32(angle_37371);
                    defunc_0_f_res_f_res_f_res_37374 = sin_res_37375;
                } else {
                    float cos_res_37376;
                    
                    cos_res_37376 = futrts_cos32(angle_37371);
                    defunc_0_f_res_f_res_f_res_37374 = cos_res_37376;
                }
                defunc_0_f_res_f_res_37364 = defunc_0_f_res_f_res_f_res_37374;
            }
            defunc_0_f_res_37362 = defunc_0_f_res_f_res_37364;
        }
        ((__global float *) mem_42563)[gtid_37281 * N_28681 + gtid_37282] =
            defunc_0_f_res_37362;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37356
}
__kernel void mainzisegmap_37461(__global int *global_failure, int64_t N_28681,
                                 float freq_28686, int64_t i32_res_28697,
                                 __global
                                 unsigned char *mappingindices_mem_42558,
                                 __global unsigned char *mem_42567)
{
    #define segmap_group_sizze_37530 (mainzisegmap_group_sizze_37464)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43862;
    int32_t local_tid_43863;
    int64_t group_sizze_43866;
    int32_t wave_sizze_43865;
    int32_t group_tid_43864;
    
    global_tid_43862 = get_global_id(0);
    local_tid_43863 = get_local_id(0);
    group_sizze_43866 = get_local_size(0);
    wave_sizze_43865 = LOCKSTEP_WIDTH;
    group_tid_43864 = get_group_id(0);
    
    int32_t phys_tid_37461;
    
    phys_tid_37461 = global_tid_43862;
    
    int64_t gtid_37459;
    
    gtid_37459 = squot64(sext_i32_i64(group_tid_43864) *
                         segmap_group_sizze_37530 +
                         sext_i32_i64(local_tid_43863), N_28681);
    
    int64_t gtid_37460;
    
    gtid_37460 = sext_i32_i64(group_tid_43864) * segmap_group_sizze_37530 +
        sext_i32_i64(local_tid_43863) - squot64(sext_i32_i64(group_tid_43864) *
                                                segmap_group_sizze_37530 +
                                                sext_i32_i64(local_tid_43863),
                                                N_28681) * N_28681;
    if (slt64(gtid_37459, i32_res_28697) && slt64(gtid_37460, N_28681)) {
        int32_t index_primexp_40559 = sext_i64_i32(gtid_37459);
        bool index_primexp_40556 = index_primexp_40559 == 0;
        float defunc_0_f_res_37536;
        
        if (index_primexp_40556) {
            defunc_0_f_res_37536 = 1.0F;
        } else {
            int32_t x_37535 = ((__global
                                int32_t *) mappingindices_mem_42558)[gtid_37460];
            int32_t i_37537 = add32(1, index_primexp_40559);
            int32_t r32_arg_37538 = sdiv32(i_37537, 2);
            float i32_res_37539 = sitofp_i32_f32(r32_arg_37538);
            float i32_res_37540 = sitofp_i32_f32(x_37535);
            float x_37541 = 6.2831855F * i32_res_37539;
            float x_37542 = i32_res_37540 * x_37541;
            float angle_37543 = x_37542 / freq_28686;
            int32_t x_37544 = smod32(i_37537, 2);
            bool cond_37545 = x_37544 == 0;
            float defunc_0_f_res_f_res_37546;
            
            if (cond_37545) {
                float sin_res_37547;
                
                sin_res_37547 = futrts_sin32(angle_37543);
                defunc_0_f_res_f_res_37546 = sin_res_37547;
            } else {
                float cos_res_37548;
                
                cos_res_37548 = futrts_cos32(angle_37543);
                defunc_0_f_res_f_res_37546 = cos_res_37548;
            }
            defunc_0_f_res_37536 = defunc_0_f_res_f_res_37546;
        }
        ((__global float *) mem_42567)[gtid_37459 * N_28681 + gtid_37460] =
            defunc_0_f_res_37536;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37530
}
__kernel void mainzisegmap_37589(__global int *global_failure, int64_t N_28681,
                                 int64_t i32_res_28697, float i32_res_28762,
                                 __global unsigned char *mem_42571, __global
                                 unsigned char *mem_42575)
{
    #define segmap_group_sizze_37613 (mainzisegmap_group_sizze_37592)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43867;
    int32_t local_tid_43868;
    int64_t group_sizze_43871;
    int32_t wave_sizze_43870;
    int32_t group_tid_43869;
    
    global_tid_43867 = get_global_id(0);
    local_tid_43868 = get_local_id(0);
    group_sizze_43871 = get_local_size(0);
    wave_sizze_43870 = LOCKSTEP_WIDTH;
    group_tid_43869 = get_group_id(0);
    
    int32_t phys_tid_37589;
    
    phys_tid_37589 = global_tid_43867;
    
    int64_t gtid_37587;
    
    gtid_37587 = squot64(sext_i32_i64(group_tid_43869) *
                         segmap_group_sizze_37613 +
                         sext_i32_i64(local_tid_43868), i32_res_28697);
    
    int64_t gtid_37588;
    
    gtid_37588 = sext_i32_i64(group_tid_43869) * segmap_group_sizze_37613 +
        sext_i32_i64(local_tid_43868) - squot64(sext_i32_i64(group_tid_43869) *
                                                segmap_group_sizze_37613 +
                                                sext_i32_i64(local_tid_43868),
                                                i32_res_28697) * i32_res_28697;
    if (slt64(gtid_37587, N_28681) && slt64(gtid_37588, i32_res_28697)) {
        float x_37616 = ((__global float *) mem_42571)[gtid_37587 *
                                                       i32_res_28697 +
                                                       gtid_37588];
        float defunc_0_f_res_37617 = i32_res_28762 + x_37616;
        
        ((__global float *) mem_42575)[gtid_37587 * i32_res_28697 +
                                       gtid_37588] = defunc_0_f_res_37617;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37613
}
__kernel void mainzisegmap_37622(__global int *global_failure, int64_t N_28681,
                                 int64_t m_28682, int32_t n_28685,
                                 int32_t k2p2zq_28695, int64_t i32_res_28697,
                                 int64_t num_groups_37647, __global
                                 unsigned char *binop_p_mem_42568, __global
                                 unsigned char *mem_42575, __global
                                 unsigned char *mem_42578, __global
                                 unsigned char *mem_42582, __global
                                 unsigned char *mem_42624)
{
    #define segmap_group_sizze_37646 (mainzisegmap_group_sizze_37624)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43875;
    int32_t local_tid_43876;
    int64_t group_sizze_43879;
    int32_t wave_sizze_43878;
    int32_t group_tid_43877;
    
    global_tid_43875 = get_global_id(0);
    local_tid_43876 = get_local_id(0);
    group_sizze_43879 = get_local_size(0);
    wave_sizze_43878 = LOCKSTEP_WIDTH;
    group_tid_43877 = get_group_id(0);
    
    int32_t phys_tid_37622;
    
    phys_tid_37622 = global_tid_43875;
    
    int32_t phys_group_id_43880;
    
    phys_group_id_43880 = get_group_id(0);
    for (int32_t i_43881 = 0; i_43881 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28682, segmap_group_sizze_37646)) -
                   phys_group_id_43880, sext_i64_i32(num_groups_37647));
         i_43881++) {
        int32_t virt_group_id_43882 = phys_group_id_43880 + i_43881 *
                sext_i64_i32(num_groups_37647);
        int64_t gtid_37621 = sext_i32_i64(virt_group_id_43882) *
                segmap_group_sizze_37646 + sext_i32_i64(local_tid_43876);
        
        if (slt64(gtid_37621, m_28682)) {
            for (int32_t i_42538 = 0; i_42538 < k2p2zq_28695; i_42538++) {
                int64_t i_42467 = sext_i32_i64(i_42538);
                
                for (int32_t i_42537 = 0; i_42537 < k2p2zq_28695; i_42537++) {
                    int64_t i_42471 = sext_i32_i64(i_42537);
                    float defunc_2_reduce_res_37655;
                    float redout_42473 = 0.0F;
                    
                    for (int32_t i_42536 = 0; i_42536 < n_28685; i_42536++) {
                        int64_t i_42474 = sext_i32_i64(i_42536);
                        float x_37659 = ((__global float *) mem_42578)[i_42474 *
                                                                       m_28682 +
                                                                       gtid_37621];
                        float x_37660 = ((__global
                                          float *) binop_p_mem_42568)[i_42467 *
                                                                      N_28681 +
                                                                      i_42474];
                        float x_37661 = ((__global float *) mem_42575)[i_42474 *
                                                                       i32_res_28697 +
                                                                       i_42471];
                        float x_37662 = x_37660 * x_37661;
                        bool isnan_res_37663;
                        
                        isnan_res_37663 = futrts_isnan32(x_37659);
                        
                        float y_37664;
                        
                        if (isnan_res_37663) {
                            y_37664 = 0.0F;
                        } else {
                            y_37664 = 1.0F;
                        }
                        
                        float defunc_2_f_res_37665 = x_37662 * y_37664;
                        float defunc_1_op_res_37658 = defunc_2_f_res_37665 +
                              redout_42473;
                        float redout_tmp_43885 = defunc_1_op_res_37658;
                        
                        redout_42473 = redout_tmp_43885;
                    }
                    defunc_2_reduce_res_37655 = redout_42473;
                    ((__global float *) mem_42582)[phys_tid_37622 + (i_42467 *
                                                                     (num_groups_37647 *
                                                                      segmap_group_sizze_37646 *
                                                                      i32_res_28697) +
                                                                     i_42471 *
                                                                     (num_groups_37647 *
                                                                      segmap_group_sizze_37646))] =
                        defunc_2_reduce_res_37655;
                }
            }
            for (int64_t i_43886 = 0; i_43886 < i32_res_28697; i_43886++) {
                for (int64_t i_43887 = 0; i_43887 < i32_res_28697; i_43887++) {
                    ((__global float *) mem_42624)[i_43886 * (m_28682 *
                                                              i32_res_28697) +
                                                   i_43887 * m_28682 +
                                                   gtid_37621] = ((__global
                                                                   float *) mem_42582)[phys_tid_37622 +
                                                                                       (i_43886 *
                                                                                        (num_groups_37647 *
                                                                                         segmap_group_sizze_37646 *
                                                                                         i32_res_28697) +
                                                                                        i_43887 *
                                                                                        (num_groups_37647 *
                                                                                         segmap_group_sizze_37646))];
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37646
}
__kernel void mainzisegmap_37668(__global int *global_failure, int64_t N_28681,
                                 int64_t m_28682, int32_t n_28685,
                                 int32_t k2p2zq_28695, int64_t i32_res_28697,
                                 int64_t num_groups_37824, __global
                                 unsigned char *images_mem_42559, __global
                                 unsigned char *mem_42571, __global
                                 unsigned char *mem_42575, __global
                                 unsigned char *mem_42627, __global
                                 unsigned char *mem_42643)
{
    #define segmap_group_sizze_37823 (mainzisegmap_group_sizze_37671)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43888;
    int32_t local_tid_43889;
    int64_t group_sizze_43892;
    int32_t wave_sizze_43891;
    int32_t group_tid_43890;
    
    global_tid_43888 = get_global_id(0);
    local_tid_43889 = get_local_id(0);
    group_sizze_43892 = get_local_size(0);
    wave_sizze_43891 = LOCKSTEP_WIDTH;
    group_tid_43890 = get_group_id(0);
    
    int32_t phys_tid_37668;
    
    phys_tid_37668 = global_tid_43888;
    
    int32_t phys_group_id_43893;
    
    phys_group_id_43893 = get_group_id(0);
    for (int32_t i_43894 = 0; i_43894 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28682 * i32_res_28697,
                                          segmap_group_sizze_37823)) -
                   phys_group_id_43893, sext_i64_i32(num_groups_37824));
         i_43894++) {
        int32_t virt_group_id_43895 = phys_group_id_43893 + i_43894 *
                sext_i64_i32(num_groups_37824);
        int64_t gtid_37666 = squot64(sext_i32_i64(virt_group_id_43895) *
                                     segmap_group_sizze_37823 +
                                     sext_i32_i64(local_tid_43889),
                                     i32_res_28697);
        int64_t gtid_37667 = sext_i32_i64(virt_group_id_43895) *
                segmap_group_sizze_37823 + sext_i32_i64(local_tid_43889) -
                squot64(sext_i32_i64(virt_group_id_43895) *
                        segmap_group_sizze_37823 +
                        sext_i32_i64(local_tid_43889), i32_res_28697) *
                i32_res_28697;
        
        if (slt64(gtid_37666, m_28682) && slt64(gtid_37667, i32_res_28697)) {
            for (int32_t i_42540 = 0; i_42540 < k2p2zq_28695; i_42540++) {
                int64_t i_42477 = sext_i32_i64(i_42540);
                float defunc_2_reduce_res_37835;
                float redout_42479 = 0.0F;
                
                for (int32_t i_42539 = 0; i_42539 < n_28685; i_42539++) {
                    int64_t i_42480 = sext_i32_i64(i_42539);
                    float x_37839 = ((__global
                                      float *) images_mem_42559)[gtid_37666 *
                                                                 N_28681 +
                                                                 i_42480];
                    float x_37840 = ((__global float *) mem_42571)[i_42480 *
                                                                   i32_res_28697 +
                                                                   gtid_37667];
                    float x_37841 = ((__global float *) mem_42575)[i_42480 *
                                                                   i32_res_28697 +
                                                                   i_42477];
                    float x_37842 = x_37840 * x_37841;
                    bool isnan_res_37843;
                    
                    isnan_res_37843 = futrts_isnan32(x_37839);
                    
                    float y_37844;
                    
                    if (isnan_res_37843) {
                        y_37844 = 0.0F;
                    } else {
                        y_37844 = 1.0F;
                    }
                    
                    float defunc_2_f_res_37845 = x_37842 * y_37844;
                    float defunc_1_op_res_37838 = defunc_2_f_res_37845 +
                          redout_42479;
                    float redout_tmp_43897 = defunc_1_op_res_37838;
                    
                    redout_42479 = redout_tmp_43897;
                }
                defunc_2_reduce_res_37835 = redout_42479;
                ((__global float *) mem_42627)[phys_tid_37668 + i_42477 *
                                               (num_groups_37824 *
                                                segmap_group_sizze_37823)] =
                    defunc_2_reduce_res_37835;
            }
            for (int64_t i_43898 = 0; i_43898 < i32_res_28697; i_43898++) {
                ((__global float *) mem_42643)[i_43898 * (i32_res_28697 *
                                                          m_28682) +
                                               gtid_37666 * i32_res_28697 +
                                               gtid_37667] = ((__global
                                                               float *) mem_42627)[phys_tid_37668 +
                                                                                   i_43898 *
                                                                                   (num_groups_37824 *
                                                                                    segmap_group_sizze_37823)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37823
}
__kernel void mainzisegmap_38152(__global int *global_failure, int64_t m_28682,
                                 int64_t i32_res_28697, int64_t i32_res_28830,
                                 int64_t i32_res_28845, int64_t x_28846,
                                 int64_t j_m_i_28849,
                                 int64_t gauss_jordan_res_r_ixfn_42795,
                                 int64_t gauss_jordan_res_r_ixfn_42796,
                                 int64_t gauss_jordan_res_r_ixfn_42798, __global
                                 unsigned char *gauss_jordan_res_r_mem_42800,
                                 __global unsigned char *mem_42805)
{
    #define segmap_group_sizze_38703 (mainzisegmap_group_sizze_38156)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44055;
    int32_t local_tid_44056;
    int64_t group_sizze_44059;
    int32_t wave_sizze_44058;
    int32_t group_tid_44057;
    
    global_tid_44055 = get_global_id(0);
    local_tid_44056 = get_local_id(0);
    group_sizze_44059 = get_local_size(0);
    wave_sizze_44058 = LOCKSTEP_WIDTH;
    group_tid_44057 = get_group_id(0);
    
    int32_t phys_tid_38152;
    
    phys_tid_38152 = global_tid_44055;
    
    int64_t gtid_38149;
    
    gtid_38149 = squot64(sext_i32_i64(group_tid_44057) *
                         segmap_group_sizze_38703 +
                         sext_i32_i64(local_tid_44056), i32_res_28697 *
                         j_m_i_28849);
    
    int64_t gtid_slice_38147;
    
    gtid_slice_38147 = squot64(sext_i32_i64(group_tid_44057) *
                               segmap_group_sizze_38703 +
                               sext_i32_i64(local_tid_44056) -
                               squot64(sext_i32_i64(group_tid_44057) *
                                       segmap_group_sizze_38703 +
                                       sext_i32_i64(local_tid_44056),
                                       i32_res_28697 * j_m_i_28849) *
                               (i32_res_28697 * j_m_i_28849), j_m_i_28849);
    
    int64_t gtid_slice_38148;
    
    gtid_slice_38148 = sext_i32_i64(group_tid_44057) *
        segmap_group_sizze_38703 + sext_i32_i64(local_tid_44056) -
        squot64(sext_i32_i64(group_tid_44057) * segmap_group_sizze_38703 +
                sext_i32_i64(local_tid_44056), i32_res_28697 * j_m_i_28849) *
        (i32_res_28697 * j_m_i_28849) - squot64(sext_i32_i64(group_tid_44057) *
                                                segmap_group_sizze_38703 +
                                                sext_i32_i64(local_tid_44056) -
                                                squot64(sext_i32_i64(group_tid_44057) *
                                                        segmap_group_sizze_38703 +
                                                        sext_i32_i64(local_tid_44056),
                                                        i32_res_28697 *
                                                        j_m_i_28849) *
                                                (i32_res_28697 * j_m_i_28849),
                                                j_m_i_28849) * j_m_i_28849;
    if ((slt64(gtid_38149, m_28682) && slt64(gtid_slice_38147,
                                             i32_res_28697)) &&
        slt64(gtid_slice_38148, j_m_i_28849)) {
        int64_t slice_38707 = i32_res_28697 + gtid_slice_38148;
        int64_t binop_x_40617 = x_28846 * gtid_38149;
        int64_t binop_y_40618 = i32_res_28845 * gtid_slice_38147;
        int64_t binop_x_40619 = binop_x_40617 + binop_y_40618;
        int64_t binop_x_40620 = slice_38707 + binop_x_40619;
        int64_t new_index_40621 = squot64(binop_x_40620, i32_res_28830);
        int64_t binop_y_40633 = i32_res_28830 * new_index_40621;
        int64_t new_index_40634 = binop_x_40620 - binop_y_40633;
        float v_38708 = ((__global
                          float *) gauss_jordan_res_r_mem_42800)[gauss_jordan_res_r_ixfn_42795 +
                                                                 (new_index_40621 *
                                                                  gauss_jordan_res_r_ixfn_42796 +
                                                                  new_index_40634 *
                                                                  gauss_jordan_res_r_ixfn_42798)];
        
        ((__global float *) mem_42805)[gtid_38149 * (j_m_i_28849 *
                                                     i32_res_28697) +
                                       gtid_slice_38147 * j_m_i_28849 +
                                       gtid_slice_38148] = v_38708;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38703
}
__kernel void mainzisegmap_38318(__global int *global_failure, int64_t m_28682,
                                 int64_t i32_res_28830,
                                 int64_t ctx_param_ext_42758,
                                 int64_t ctx_param_ext_42759,
                                 int64_t ctx_param_ext_42761, __global
                                 unsigned char *mem_param_42763, __global
                                 unsigned char *mem_42783)
{
    #define segmap_group_sizze_38691 (mainzisegmap_group_sizze_38321)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44049;
    int32_t local_tid_44050;
    int64_t group_sizze_44053;
    int32_t wave_sizze_44052;
    int32_t group_tid_44051;
    
    global_tid_44049 = get_global_id(0);
    local_tid_44050 = get_local_id(0);
    group_sizze_44053 = get_local_size(0);
    wave_sizze_44052 = LOCKSTEP_WIDTH;
    group_tid_44051 = get_group_id(0);
    
    int32_t phys_tid_38318;
    
    phys_tid_38318 = global_tid_44049;
    
    int64_t gtid_38316;
    
    gtid_38316 = squot64(sext_i32_i64(group_tid_44051) *
                         segmap_group_sizze_38691 +
                         sext_i32_i64(local_tid_44050), i32_res_28830);
    
    int64_t gtid_38317;
    
    gtid_38317 = sext_i32_i64(group_tid_44051) * segmap_group_sizze_38691 +
        sext_i32_i64(local_tid_44050) - squot64(sext_i32_i64(group_tid_44051) *
                                                segmap_group_sizze_38691 +
                                                sext_i32_i64(local_tid_44050),
                                                i32_res_28830) * i32_res_28830;
    if (slt64(gtid_38316, m_28682) && slt64(gtid_38317, i32_res_28830)) {
        float write_value_38697 = ((__global float *) mem_42783)[gtid_38316 *
                                                                 i32_res_28830 +
                                                                 gtid_38317];
        
        if ((sle64((int64_t) 0, gtid_38316) && slt64(gtid_38316, m_28682)) &&
            (sle64((int64_t) 0, gtid_38317) && slt64(gtid_38317,
                                                     i32_res_28830))) {
            ((__global float *) mem_param_42763)[ctx_param_ext_42758 +
                                                 (gtid_38316 *
                                                  ctx_param_ext_42759 +
                                                  gtid_38317 *
                                                  ctx_param_ext_42761)] =
                write_value_38697;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38691
}
__kernel void mainzisegmap_38372(__global int *global_failure, int64_t m_28682,
                                 int32_t k2p2zq_28695, int32_t m_28828,
                                 int64_t i32_res_28830, int32_t i_38594,
                                 int64_t i32_res_38596,
                                 int64_t ctx_param_ext_42758,
                                 int64_t ctx_param_ext_42759,
                                 int64_t ctx_param_ext_42761, __global
                                 unsigned char *mem_param_42763, __global
                                 unsigned char *mem_42779, __global
                                 unsigned char *mem_42783)
{
    #define segmap_group_sizze_38657 (mainzisegmap_group_sizze_38375)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44044;
    int32_t local_tid_44045;
    int64_t group_sizze_44048;
    int32_t wave_sizze_44047;
    int32_t group_tid_44046;
    
    global_tid_44044 = get_global_id(0);
    local_tid_44045 = get_local_id(0);
    group_sizze_44048 = get_local_size(0);
    wave_sizze_44047 = LOCKSTEP_WIDTH;
    group_tid_44046 = get_group_id(0);
    
    int32_t phys_tid_38372;
    
    phys_tid_38372 = global_tid_44044;
    
    int64_t gtid_38370;
    
    gtid_38370 = squot64(sext_i32_i64(group_tid_44046) *
                         segmap_group_sizze_38657 +
                         sext_i32_i64(local_tid_44045), i32_res_28830);
    
    int64_t gtid_38371;
    
    gtid_38371 = sext_i32_i64(group_tid_44046) * segmap_group_sizze_38657 +
        sext_i32_i64(local_tid_44045) - squot64(sext_i32_i64(group_tid_44046) *
                                                segmap_group_sizze_38657 +
                                                sext_i32_i64(local_tid_44045),
                                                i32_res_28830) * i32_res_28830;
    if (slt64(gtid_38370, m_28682) && slt64(gtid_38371, i32_res_28830)) {
        bool cond_38662 = ((__global bool *) mem_42779)[gtid_38370];
        int32_t defunc_0_f_res_38664 = sext_i64_i32(gtid_38371);
        int32_t defunc_0_f_res_38665 = sdiv32(defunc_0_f_res_38664, m_28828);
        int32_t defunc_0_f_res_38666 = smod32(defunc_0_f_res_38664, m_28828);
        float defunc_0_f_res_38667;
        
        if (cond_38662) {
            int32_t x_38668 = mul32(m_28828, defunc_0_f_res_38665);
            int32_t i32_arg_38669 = add32(defunc_0_f_res_38666, x_38668);
            int64_t i32_res_38670 = sext_i32_i64(i32_arg_38669);
            float defunc_0_f_res_t_res_38671 = ((__global
                                                 float *) mem_param_42763)[ctx_param_ext_42758 +
                                                                           (gtid_38370 *
                                                                            ctx_param_ext_42759 +
                                                                            i32_res_38670 *
                                                                            ctx_param_ext_42761)];
            
            defunc_0_f_res_38667 = defunc_0_f_res_t_res_38671;
        } else {
            float v1_38661 = ((__global
                               float *) mem_param_42763)[ctx_param_ext_42758 +
                                                         (gtid_38370 *
                                                          ctx_param_ext_42759 +
                                                          i32_res_38596 *
                                                          ctx_param_ext_42761)];
            int64_t i32_res_38672 = sext_i32_i64(defunc_0_f_res_38666);
            float x_38673 = ((__global
                              float *) mem_param_42763)[ctx_param_ext_42758 +
                                                        (gtid_38370 *
                                                         ctx_param_ext_42759 +
                                                         i32_res_38672 *
                                                         ctx_param_ext_42761)];
            float x_38674 = x_38673 / v1_38661;
            int32_t y_38675 = sub32(k2p2zq_28695, 1);
            bool cond_38676 = slt32(defunc_0_f_res_38665, y_38675);
            float defunc_0_f_res_f_res_38677;
            
            if (cond_38676) {
                int32_t x_38678 = add32(1, defunc_0_f_res_38665);
                int32_t x_38679 = mul32(m_28828, x_38678);
                int32_t i32_arg_38680 = add32(defunc_0_f_res_38666, x_38679);
                int64_t i32_res_38681 = sext_i32_i64(i32_arg_38680);
                float x_38682 = ((__global
                                  float *) mem_param_42763)[ctx_param_ext_42758 +
                                                            (gtid_38370 *
                                                             ctx_param_ext_42759 +
                                                             i32_res_38681 *
                                                             ctx_param_ext_42761)];
                int32_t i32_arg_38683 = add32(i_38594, x_38679);
                int64_t i32_res_38684 = sext_i32_i64(i32_arg_38683);
                float x_38685 = ((__global
                                  float *) mem_param_42763)[ctx_param_ext_42758 +
                                                            (gtid_38370 *
                                                             ctx_param_ext_42759 +
                                                             i32_res_38684 *
                                                             ctx_param_ext_42761)];
                float y_38686 = x_38674 * x_38685;
                float defunc_0_f_res_f_res_t_res_38687 = x_38682 - y_38686;
                
                defunc_0_f_res_f_res_38677 = defunc_0_f_res_f_res_t_res_38687;
            } else {
                defunc_0_f_res_f_res_38677 = x_38674;
            }
            defunc_0_f_res_38667 = defunc_0_f_res_f_res_38677;
        }
        ((__global float *) mem_42783)[gtid_38370 * i32_res_28830 +
                                       gtid_38371] = defunc_0_f_res_38667;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38657
}
__kernel void mainzisegmap_38440(__global int *global_failure, int64_t m_28682,
                                 int64_t i32_res_38596,
                                 int64_t ctx_param_ext_42758,
                                 int64_t ctx_param_ext_42759,
                                 int64_t ctx_param_ext_42761, __global
                                 unsigned char *mem_param_42763, __global
                                 unsigned char *mem_42779)
{
    #define segmap_group_sizze_38641 (mainzisegmap_group_sizze_38442)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44039;
    int32_t local_tid_44040;
    int64_t group_sizze_44043;
    int32_t wave_sizze_44042;
    int32_t group_tid_44041;
    
    global_tid_44039 = get_global_id(0);
    local_tid_44040 = get_local_id(0);
    group_sizze_44043 = get_local_size(0);
    wave_sizze_44042 = LOCKSTEP_WIDTH;
    group_tid_44041 = get_group_id(0);
    
    int32_t phys_tid_38440;
    
    phys_tid_38440 = global_tid_44039;
    
    int64_t gtid_38439;
    
    gtid_38439 = sext_i32_i64(group_tid_44041) * segmap_group_sizze_38641 +
        sext_i32_i64(local_tid_44040);
    if (slt64(gtid_38439, m_28682)) {
        float v1_38646 = ((__global
                           float *) mem_param_42763)[ctx_param_ext_42758 +
                                                     (gtid_38439 *
                                                      ctx_param_ext_42759 +
                                                      i32_res_38596 *
                                                      ctx_param_ext_42761)];
        bool cond_38647 = v1_38646 == 0.0F;
        
        ((__global bool *) mem_42779)[gtid_38439] = cond_38647;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38641
}
__kernel void mainzisegmap_38533(__global int *global_failure, int64_t m_28682,
                                 int32_t k2p2zq_28695, int64_t i32_res_28697,
                                 int32_t m_28828, int64_t i32_res_28830,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_42727,
                                 __global unsigned char *mem_42755)
{
    #define segmap_group_sizze_38577 (mainzisegmap_group_sizze_38536)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44006;
    int32_t local_tid_44007;
    int64_t group_sizze_44010;
    int32_t wave_sizze_44009;
    int32_t group_tid_44008;
    
    global_tid_44006 = get_global_id(0);
    local_tid_44007 = get_local_id(0);
    group_sizze_44010 = get_local_size(0);
    wave_sizze_44009 = LOCKSTEP_WIDTH;
    group_tid_44008 = get_group_id(0);
    
    int32_t phys_tid_38533;
    
    phys_tid_38533 = global_tid_44006;
    
    int64_t gtid_38531;
    
    gtid_38531 = squot64(sext_i32_i64(group_tid_44008) *
                         segmap_group_sizze_38577 +
                         sext_i32_i64(local_tid_44007), i32_res_28830);
    
    int64_t gtid_38532;
    
    gtid_38532 = sext_i32_i64(group_tid_44008) * segmap_group_sizze_38577 +
        sext_i32_i64(local_tid_44007) - squot64(sext_i32_i64(group_tid_44008) *
                                                segmap_group_sizze_38577 +
                                                sext_i32_i64(local_tid_44007),
                                                i32_res_28830) * i32_res_28830;
    if (slt64(gtid_38531, m_28682) && slt64(gtid_38532, i32_res_28830)) {
        int32_t index_primexp_40571 = sext_i64_i32(gtid_38532);
        int32_t defunc_0_f_res_38582 = sdiv32(index_primexp_40571, m_28828);
        int32_t defunc_0_f_res_38583 = smod32(index_primexp_40571, m_28828);
        bool cond_38584 = slt32(defunc_0_f_res_38583, k2p2zq_28695);
        float defunc_0_f_res_38585;
        
        if (cond_38584) {
            int64_t i_38586 = sext_i32_i64(defunc_0_f_res_38582);
            int64_t j_38587 = sext_i32_i64(defunc_0_f_res_38583);
            float defunc_0_f_res_t_res_38588 = ((__global
                                                 float *) defunc_3_map_res_mem_42727)[gtid_38531 *
                                                                                      (i32_res_28697 *
                                                                                       i32_res_28697) +
                                                                                      i_38586 *
                                                                                      i32_res_28697 +
                                                                                      j_38587];
            
            defunc_0_f_res_38585 = defunc_0_f_res_t_res_38588;
        } else {
            int32_t y_38589 = add32(k2p2zq_28695, defunc_0_f_res_38582);
            bool cond_38590 = defunc_0_f_res_38583 == y_38589;
            float defunc_0_f_res_f_res_38591;
            
            if (cond_38590) {
                defunc_0_f_res_f_res_38591 = 1.0F;
            } else {
                defunc_0_f_res_f_res_38591 = 0.0F;
            }
            defunc_0_f_res_38585 = defunc_0_f_res_f_res_38591;
        }
        ((__global float *) mem_42755)[gtid_38531 * i32_res_28830 +
                                       gtid_38532] = defunc_0_f_res_38585;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38577
}
__kernel void mainzisegmap_38714(__global int *global_failure, int64_t N_28681,
                                 int64_t m_28682, int32_t n_28685,
                                 int32_t k2p2zq_28695, int64_t i32_res_28697,
                                 int64_t num_groups_38735, __global
                                 unsigned char *binop_p_mem_42568, __global
                                 unsigned char *mem_42810, __global
                                 unsigned char *mem_42813, __global
                                 unsigned char *mem_42828)
{
    #define segmap_group_sizze_38734 (mainzisegmap_group_sizze_38716)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44063;
    int32_t local_tid_44064;
    int64_t group_sizze_44067;
    int32_t wave_sizze_44066;
    int32_t group_tid_44065;
    
    global_tid_44063 = get_global_id(0);
    local_tid_44064 = get_local_id(0);
    group_sizze_44067 = get_local_size(0);
    wave_sizze_44066 = LOCKSTEP_WIDTH;
    group_tid_44065 = get_group_id(0);
    
    int32_t phys_tid_38714;
    
    phys_tid_38714 = global_tid_44063;
    
    int32_t phys_group_id_44068;
    
    phys_group_id_44068 = get_group_id(0);
    for (int32_t i_44069 = 0; i_44069 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28682, segmap_group_sizze_38734)) -
                   phys_group_id_44068, sext_i64_i32(num_groups_38735));
         i_44069++) {
        int32_t virt_group_id_44070 = phys_group_id_44068 + i_44069 *
                sext_i64_i32(num_groups_38735);
        int64_t gtid_38713 = sext_i32_i64(virt_group_id_44070) *
                segmap_group_sizze_38734 + sext_i32_i64(local_tid_44064);
        
        if (slt64(gtid_38713, m_28682)) {
            for (int32_t i_42542 = 0; i_42542 < k2p2zq_28695; i_42542++) {
                int64_t i_42483 = sext_i32_i64(i_42542);
                float defunc_2_reduce_res_38741;
                float redout_42485 = 0.0F;
                
                for (int32_t i_42541 = 0; i_42541 < n_28685; i_42541++) {
                    int64_t i_42486 = sext_i32_i64(i_42541);
                    float x_38746 = ((__global float *) mem_42810)[i_42486 *
                                                                   m_28682 +
                                                                   gtid_38713];
                    bool isnan_res_38747;
                    
                    isnan_res_38747 = futrts_isnan32(x_38746);
                    
                    float defunc_1_f_res_38748;
                    
                    if (isnan_res_38747) {
                        defunc_1_f_res_38748 = 0.0F;
                    } else {
                        float x_38745 = ((__global
                                          float *) binop_p_mem_42568)[i_42483 *
                                                                      N_28681 +
                                                                      i_42486];
                        float defunc_1_f_res_f_res_38749 = x_38745 * x_38746;
                        
                        defunc_1_f_res_38748 = defunc_1_f_res_f_res_38749;
                    }
                    
                    float defunc_1_op_res_38744 = defunc_1_f_res_38748 +
                          redout_42485;
                    float redout_tmp_44072 = defunc_1_op_res_38744;
                    
                    redout_42485 = redout_tmp_44072;
                }
                defunc_2_reduce_res_38741 = redout_42485;
                ((__global float *) mem_42813)[phys_tid_38714 + i_42483 *
                                               (num_groups_38735 *
                                                segmap_group_sizze_38734)] =
                    defunc_2_reduce_res_38741;
            }
            for (int64_t i_44073 = 0; i_44073 < i32_res_28697; i_44073++) {
                ((__global float *) mem_42828)[i_44073 * m_28682 + gtid_38713] =
                    ((__global float *) mem_42813)[phys_tid_38714 + i_44073 *
                                                   (num_groups_38735 *
                                                    segmap_group_sizze_38734)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38734
}
__kernel void mainzisegmap_38855(__global int *global_failure, int64_t m_28682,
                                 int32_t k2p2zq_28695, int64_t i32_res_28697,
                                 int64_t num_groups_38875, __global
                                 unsigned char *mem_43032, __global
                                 unsigned char *mem_43035, __global
                                 unsigned char *mem_43038, __global
                                 unsigned char *mem_43053)
{
    #define segmap_group_sizze_38874 (mainzisegmap_group_sizze_38857)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44195;
    int32_t local_tid_44196;
    int64_t group_sizze_44199;
    int32_t wave_sizze_44198;
    int32_t group_tid_44197;
    
    global_tid_44195 = get_global_id(0);
    local_tid_44196 = get_local_id(0);
    group_sizze_44199 = get_local_size(0);
    wave_sizze_44198 = LOCKSTEP_WIDTH;
    group_tid_44197 = get_group_id(0);
    
    int32_t phys_tid_38855;
    
    phys_tid_38855 = global_tid_44195;
    
    int32_t phys_group_id_44200;
    
    phys_group_id_44200 = get_group_id(0);
    for (int32_t i_44201 = 0; i_44201 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28682, segmap_group_sizze_38874)) -
                   phys_group_id_44200, sext_i64_i32(num_groups_38875));
         i_44201++) {
        int32_t virt_group_id_44202 = phys_group_id_44200 + i_44201 *
                sext_i64_i32(num_groups_38875);
        int64_t gtid_38854 = sext_i32_i64(virt_group_id_44202) *
                segmap_group_sizze_38874 + sext_i32_i64(local_tid_44196);
        
        if (slt64(gtid_38854, m_28682)) {
            for (int32_t i_42544 = 0; i_42544 < k2p2zq_28695; i_42544++) {
                int64_t i_42489 = sext_i32_i64(i_42544);
                float defunc_0_f_res_38882;
                float redout_42491 = 0.0F;
                
                for (int32_t i_42543 = 0; i_42543 < k2p2zq_28695; i_42543++) {
                    int64_t i_42492 = sext_i32_i64(i_42543);
                    float x_38886 = ((__global float *) mem_43035)[i_42492 *
                                                                   m_28682 +
                                                                   gtid_38854];
                    float x_38887 = ((__global float *) mem_43032)[i_42489 *
                                                                   (m_28682 *
                                                                    i32_res_28697) +
                                                                   i_42492 *
                                                                   m_28682 +
                                                                   gtid_38854];
                    float defunc_1_f_res_38888 = x_38886 * x_38887;
                    float defunc_1_op_res_38885 = defunc_1_f_res_38888 +
                          redout_42491;
                    float redout_tmp_44204 = defunc_1_op_res_38885;
                    
                    redout_42491 = redout_tmp_44204;
                }
                defunc_0_f_res_38882 = redout_42491;
                ((__global float *) mem_43038)[phys_tid_38855 + i_42489 *
                                               (num_groups_38875 *
                                                segmap_group_sizze_38874)] =
                    defunc_0_f_res_38882;
            }
            for (int64_t i_44205 = 0; i_44205 < i32_res_28697; i_44205++) {
                ((__global float *) mem_43053)[i_44205 * m_28682 + gtid_38854] =
                    ((__global float *) mem_43038)[phys_tid_38855 + i_44205 *
                                                   (num_groups_38875 *
                                                    segmap_group_sizze_38874)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38874
}
__kernel void mainzisegmap_38987(__global int *global_failure, int64_t N_28681,
                                 int64_t m_28682, int32_t k2p2zq_28695,
                                 int64_t i32_res_28697,
                                 int64_t num_groups_39006, __global
                                 unsigned char *mem_42575, __global
                                 unsigned char *mem_43097, __global
                                 unsigned char *mem_43100, __global
                                 unsigned char *mem_43115)
{
    #define segmap_group_sizze_39005 (mainzisegmap_group_sizze_38989)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44283;
    int32_t local_tid_44284;
    int64_t group_sizze_44287;
    int32_t wave_sizze_44286;
    int32_t group_tid_44285;
    
    global_tid_44283 = get_global_id(0);
    local_tid_44284 = get_local_id(0);
    group_sizze_44287 = get_local_size(0);
    wave_sizze_44286 = LOCKSTEP_WIDTH;
    group_tid_44285 = get_group_id(0);
    
    int32_t phys_tid_38987;
    
    phys_tid_38987 = global_tid_44283;
    
    int32_t phys_group_id_44288;
    
    phys_group_id_44288 = get_group_id(0);
    for (int32_t i_44289 = 0; i_44289 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28682, segmap_group_sizze_39005)) -
                   phys_group_id_44288, sext_i64_i32(num_groups_39006));
         i_44289++) {
        int32_t virt_group_id_44290 = phys_group_id_44288 + i_44289 *
                sext_i64_i32(num_groups_39006);
        int64_t gtid_38986 = sext_i32_i64(virt_group_id_44290) *
                segmap_group_sizze_39005 + sext_i32_i64(local_tid_44284);
        
        if (slt64(gtid_38986, m_28682)) {
            for (int64_t i_42499 = 0; i_42499 < N_28681; i_42499++) {
                float defunc_0_f_res_39012;
                float redout_42501 = 0.0F;
                
                for (int32_t i_42547 = 0; i_42547 < k2p2zq_28695; i_42547++) {
                    int64_t i_42502 = sext_i32_i64(i_42547);
                    float x_39016 = ((__global float *) mem_43097)[i_42502 *
                                                                   m_28682 +
                                                                   gtid_38986];
                    float x_39017 = ((__global float *) mem_42575)[i_42499 *
                                                                   i32_res_28697 +
                                                                   i_42502];
                    float defunc_1_f_res_39018 = x_39016 * x_39017;
                    float defunc_1_op_res_39015 = defunc_1_f_res_39018 +
                          redout_42501;
                    float redout_tmp_44292 = defunc_1_op_res_39015;
                    
                    redout_42501 = redout_tmp_44292;
                }
                defunc_0_f_res_39012 = redout_42501;
                ((__global float *) mem_43100)[phys_tid_38987 + i_42499 *
                                               (num_groups_39006 *
                                                segmap_group_sizze_39005)] =
                    defunc_0_f_res_39012;
            }
            for (int64_t i_44293 = 0; i_44293 < N_28681; i_44293++) {
                ((__global float *) mem_43115)[i_44293 * m_28682 + gtid_38986] =
                    ((__global float *) mem_43100)[phys_tid_38987 + i_44293 *
                                                   (num_groups_39006 *
                                                    segmap_group_sizze_39005)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39005
}
__kernel void mainzisegmap_39267(__global int *global_failure, int64_t N_28681,
                                 int64_t m_28682, __global
                                 unsigned char *mem_43341, __global
                                 unsigned char *mem_43344, __global
                                 unsigned char *mem_43350, __global
                                 unsigned char *mem_43353)
{
    #define segmap_group_sizze_39433 (mainzisegmap_group_sizze_39270)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44510;
    int32_t local_tid_44511;
    int64_t group_sizze_44514;
    int32_t wave_sizze_44513;
    int32_t group_tid_44512;
    
    global_tid_44510 = get_global_id(0);
    local_tid_44511 = get_local_id(0);
    group_sizze_44514 = get_local_size(0);
    wave_sizze_44513 = LOCKSTEP_WIDTH;
    group_tid_44512 = get_group_id(0);
    
    int32_t phys_tid_39267;
    
    phys_tid_39267 = global_tid_44510;
    
    int64_t gtid_39265;
    
    gtid_39265 = squot64(sext_i32_i64(group_tid_44512) *
                         segmap_group_sizze_39433 +
                         sext_i32_i64(local_tid_44511), N_28681);
    
    int64_t gtid_39266;
    
    gtid_39266 = sext_i32_i64(group_tid_44512) * segmap_group_sizze_39433 +
        sext_i32_i64(local_tid_44511) - squot64(sext_i32_i64(group_tid_44512) *
                                                segmap_group_sizze_39433 +
                                                sext_i32_i64(local_tid_44511),
                                                N_28681) * N_28681;
    if (slt64(gtid_39265, m_28682) && slt64(gtid_39266, N_28681)) {
        float x_39441 = ((__global float *) mem_43344)[gtid_39265 * N_28681 +
                                                       gtid_39266];
        int32_t index_primexp_40587 = sext_i64_i32(gtid_39266);
        bool isnan_res_39444;
        
        isnan_res_39444 = futrts_isnan32(x_39441);
        
        bool defunc_0_p_res_39445 = !isnan_res_39444;
        int64_t defunc_1_f_res_39446;
        
        if (defunc_0_p_res_39445) {
            int64_t x_39442 = ((__global int64_t *) mem_43341)[gtid_39265 *
                                                               N_28681 +
                                                               gtid_39266];
            int64_t defunc_1_f_res_t_res_39447 = sub64(x_39442, (int64_t) 1);
            
            defunc_1_f_res_39446 = defunc_1_f_res_t_res_39447;
        } else {
            defunc_1_f_res_39446 = (int64_t) -1;
        }
        if ((sle64((int64_t) 0, gtid_39265) && slt64(gtid_39265, m_28682)) &&
            (sle64((int64_t) 0, defunc_1_f_res_39446) &&
             slt64(defunc_1_f_res_39446, N_28681))) {
            ((__global int32_t *) mem_43353)[gtid_39265 * N_28681 +
                                             defunc_1_f_res_39446] =
                index_primexp_40587;
        }
        if ((sle64((int64_t) 0, gtid_39265) && slt64(gtid_39265, m_28682)) &&
            (sle64((int64_t) 0, defunc_1_f_res_39446) &&
             slt64(defunc_1_f_res_39446, N_28681))) {
            ((__global float *) mem_43350)[gtid_39265 * N_28681 +
                                           defunc_1_f_res_39446] = x_39441;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39433
}
__kernel void mainzisegmap_39343(__global int *global_failure, int64_t N_28681,
                                 int64_t m_28682, int64_t i_28957, __global
                                 unsigned char *mem_43341, __global
                                 unsigned char *mem_43347)
{
    #define segmap_group_sizze_39397 (mainzisegmap_group_sizze_39345)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44487;
    int32_t local_tid_44488;
    int64_t group_sizze_44491;
    int32_t wave_sizze_44490;
    int32_t group_tid_44489;
    
    global_tid_44487 = get_global_id(0);
    local_tid_44488 = get_local_id(0);
    group_sizze_44491 = get_local_size(0);
    wave_sizze_44490 = LOCKSTEP_WIDTH;
    group_tid_44489 = get_group_id(0);
    
    int32_t phys_tid_39343;
    
    phys_tid_39343 = global_tid_44487;
    
    int64_t gtid_39342;
    
    gtid_39342 = sext_i32_i64(group_tid_44489) * segmap_group_sizze_39397 +
        sext_i32_i64(local_tid_44488);
    if (slt64(gtid_39342, m_28682)) {
        int64_t last_res_39401 = ((__global int64_t *) mem_43341)[gtid_39342 *
                                                                  N_28681 +
                                                                  i_28957];
        int32_t defunc_0_f_res_39402 = sext_i64_i32(last_res_39401);
        
        ((__global int32_t *) mem_43347)[gtid_39342] = defunc_0_f_res_39402;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39397
}
__kernel void mainzisegmap_39594(__global int *global_failure, int64_t m_28682,
                                 float hfrac_28687, int32_t k2p2_28693, __global
                                 unsigned char *mem_43410, __global
                                 unsigned char *mem_43413, __global
                                 unsigned char *mem_43416, __global
                                 unsigned char *mem_43418)
{
    #define segmap_group_sizze_39679 (mainzisegmap_group_sizze_39596)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44663;
    int32_t local_tid_44664;
    int64_t group_sizze_44667;
    int32_t wave_sizze_44666;
    int32_t group_tid_44665;
    
    global_tid_44663 = get_global_id(0);
    local_tid_44664 = get_local_id(0);
    group_sizze_44667 = get_local_size(0);
    wave_sizze_44666 = LOCKSTEP_WIDTH;
    group_tid_44665 = get_group_id(0);
    
    int32_t phys_tid_39594;
    
    phys_tid_39594 = global_tid_44663;
    
    int64_t gtid_39593;
    
    gtid_39593 = sext_i32_i64(group_tid_44665) * segmap_group_sizze_39679 +
        sext_i32_i64(local_tid_44664);
    if (slt64(gtid_39593, m_28682)) {
        int32_t defunc_0_f_res_39683 = ((__global
                                         int32_t *) mem_43410)[gtid_39593];
        float defunc_0_f_res_39684 = ((__global float *) mem_43413)[gtid_39593];
        int32_t r32_arg_39685 = sub32(defunc_0_f_res_39683, k2p2_28693);
        float i32_res_39686 = sitofp_i32_f32(r32_arg_39685);
        float sqrt_arg_39687 = defunc_0_f_res_39684 / i32_res_39686;
        float sqrt_res_39688;
        
        sqrt_res_39688 = futrts_sqrt32(sqrt_arg_39687);
        
        float i32_res_39689 = sitofp_i32_f32(defunc_0_f_res_39683);
        float t32_arg_39690 = hfrac_28687 * i32_res_39689;
        int32_t f32_res_39691 = fptosi_f32_i32(t32_arg_39690);
        
        ((__global int32_t *) mem_43416)[gtid_39593] = f32_res_39691;
        ((__global float *) mem_43418)[gtid_39593] = sqrt_res_39688;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39679
}
__kernel void mainzisegmap_39865(__global int *global_failure, float lam_28688,
                                 int64_t iota32_arg_29077, int32_t x_29082,
                                 float i32_res_29090, __global
                                 unsigned char *mappingindices_mem_42558,
                                 __global unsigned char *mem_43460, __global
                                 unsigned char *mem_43462)
{
    #define segmap_group_sizze_39884 (mainzisegmap_group_sizze_39867)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44773;
    int32_t local_tid_44774;
    int64_t group_sizze_44777;
    int32_t wave_sizze_44776;
    int32_t group_tid_44775;
    
    global_tid_44773 = get_global_id(0);
    local_tid_44774 = get_local_id(0);
    group_sizze_44777 = get_local_size(0);
    wave_sizze_44776 = LOCKSTEP_WIDTH;
    group_tid_44775 = get_group_id(0);
    
    int32_t phys_tid_39865;
    
    phys_tid_39865 = global_tid_44773;
    
    int64_t gtid_39864;
    
    gtid_39864 = sext_i32_i64(group_tid_44775) * segmap_group_sizze_39884 +
        sext_i32_i64(local_tid_44774);
    if (slt64(gtid_39864, iota32_arg_29077)) {
        int32_t defunc_0_f_res_39889 = sext_i64_i32(gtid_39864);
        int32_t t_39890 = add32(x_29082, defunc_0_f_res_39889);
        int32_t i_39891 = sub32(t_39890, 1);
        int64_t i_39892 = sext_i32_i64(i_39891);
        int32_t time_39893 = ((__global
                               int32_t *) mappingindices_mem_42558)[i_39892];
        float i32_res_39894 = sitofp_i32_f32(time_39893);
        float logplus_arg_39895 = i32_res_39894 / i32_res_29090;
        bool cond_39896 = 2.7182817F < logplus_arg_39895;
        float logplus_res_39897;
        
        if (cond_39896) {
            float log_res_39898;
            
            log_res_39898 = futrts_log32(logplus_arg_39895);
            logplus_res_39897 = log_res_39898;
        } else {
            logplus_res_39897 = 1.0F;
        }
        
        float sqrt_res_39899;
        
        sqrt_res_39899 = futrts_sqrt32(logplus_res_39897);
        
        float defunc_0_f_res_39900 = lam_28688 * sqrt_res_39899;
        
        ((__global int32_t *) mem_43460)[gtid_39864] = defunc_0_f_res_39889;
        ((__global float *) mem_43462)[gtid_39864] = defunc_0_f_res_39900;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39884
}
__kernel void mainzisegmap_40235(__global int *global_failure, int64_t N_28681,
                                 int64_t m_28682, int32_t n_28685, __global
                                 unsigned char *defunc_4_map_res_mem_43357,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_43423,
                                 __global unsigned char *mem_43476, __global
                                 unsigned char *mem_43483, __global
                                 unsigned char *mem_43485, __global
                                 unsigned char *mem_43487, __global
                                 unsigned char *mem_43490, __global
                                 unsigned char *mem_43492)
{
    #define segmap_group_sizze_40499 (mainzisegmap_group_sizze_40237)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44968;
    int32_t local_tid_44969;
    int64_t group_sizze_44972;
    int32_t wave_sizze_44971;
    int32_t group_tid_44970;
    
    global_tid_44968 = get_global_id(0);
    local_tid_44969 = get_local_id(0);
    group_sizze_44972 = get_local_size(0);
    wave_sizze_44971 = LOCKSTEP_WIDTH;
    group_tid_44970 = get_group_id(0);
    
    int32_t phys_tid_40235;
    
    phys_tid_40235 = global_tid_44968;
    
    int64_t gtid_40234;
    
    gtid_40234 = sext_i32_i64(group_tid_44970) * segmap_group_sizze_40499 +
        sext_i32_i64(local_tid_44969);
    if (slt64(gtid_40234, m_28682)) {
        int32_t x_40503 = ((__global
                            int32_t *) defunc_3_map_res_mem_43423)[gtid_40234];
        int32_t y_40505 = ((__global int32_t *) mem_43476)[gtid_40234];
        bool acc0_40507 = ((__global bool *) mem_43483)[gtid_40234];
        bool x_40512 = acc0_40507 && acc0_40507;
        int32_t defunc_1_op_res_f_res_40516;
        
        if (acc0_40507) {
            int32_t acc0_40508 = ((__global int32_t *) mem_43485)[gtid_40234];
            
            defunc_1_op_res_f_res_40516 = acc0_40508;
        } else {
            defunc_1_op_res_f_res_40516 = -1;
        }
        
        bool cond_40522 = y_40505 == 0;
        float defunc_0_f_res_40523;
        
        if (cond_40522) {
            defunc_0_f_res_40523 = 0.0F;
        } else {
            float acc0_40509 = ((__global float *) mem_43487)[gtid_40234];
            float i32_res_40524 = sitofp_i32_f32(y_40505);
            float defunc_0_f_res_f_res_40525 = acc0_40509 / i32_res_40524;
            
            defunc_0_f_res_40523 = defunc_0_f_res_f_res_40525;
        }
        
        bool cond_40526 = !x_40512;
        int32_t fst_breakzq_40527;
        
        if (cond_40526) {
            fst_breakzq_40527 = -1;
        } else {
            bool cond_40528 = slt32(defunc_1_op_res_f_res_40516, y_40505);
            int32_t adjustValInds_res_40529;
            
            if (cond_40528) {
                int32_t i_40530 = add32(x_40503, defunc_1_op_res_f_res_40516);
                int64_t i_40531 = sext_i32_i64(i_40530);
                int32_t x_40532 = ((__global
                                    int32_t *) defunc_4_map_res_mem_43357)[gtid_40234 *
                                                                           N_28681 +
                                                                           i_40531];
                int32_t adjustValInds_res_t_res_40533 = sub32(x_40532, n_28685);
                
                adjustValInds_res_40529 = adjustValInds_res_t_res_40533;
            } else {
                adjustValInds_res_40529 = -1;
            }
            fst_breakzq_40527 = adjustValInds_res_40529;
        }
        
        bool cond_40534 = sle32(x_40503, 5);
        bool cond_f_res_40535 = sle32(y_40505, 5);
        bool x_40536 = !cond_40534;
        bool y_40537 = cond_f_res_40535 && x_40536;
        bool cond_40538 = cond_40534 || y_40537;
        int32_t fst_breakzq_40539;
        
        if (cond_40538) {
            fst_breakzq_40539 = -2;
        } else {
            fst_breakzq_40539 = fst_breakzq_40527;
        }
        ((__global int32_t *) mem_43490)[gtid_40234] = fst_breakzq_40539;
        ((__global float *) mem_43492)[gtid_40234] = defunc_0_f_res_40523;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_40499
}
__kernel void mainzisegmap_40377(__global int *global_failure, int64_t m_28682,
                                 int64_t num_groups_40400, __global
                                 unsigned char *defunc_4_map_res_mem_43355,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_43423,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_43424,
                                 __global unsigned char *mem_43474, __global
                                 unsigned char *mem_43476)
{
    #define segmap_group_sizze_40399 (mainzisegmap_group_sizze_40379)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44806;
    int32_t local_tid_44807;
    int64_t group_sizze_44810;
    int32_t wave_sizze_44809;
    int32_t group_tid_44808;
    
    global_tid_44806 = get_global_id(0);
    local_tid_44807 = get_local_id(0);
    group_sizze_44810 = get_local_size(0);
    wave_sizze_44809 = LOCKSTEP_WIDTH;
    group_tid_44808 = get_group_id(0);
    
    int32_t phys_tid_40377;
    
    phys_tid_40377 = global_tid_44806;
    
    int32_t phys_group_id_44811;
    
    phys_group_id_44811 = get_group_id(0);
    for (int32_t i_44812 = 0; i_44812 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28682, segmap_group_sizze_40399)) -
                   phys_group_id_44811, sext_i64_i32(num_groups_40400));
         i_44812++) {
        int32_t virt_group_id_44813 = phys_group_id_44811 + i_44812 *
                sext_i64_i32(num_groups_40400);
        int64_t gtid_40376 = sext_i32_i64(virt_group_id_44813) *
                segmap_group_sizze_40399 + sext_i32_i64(local_tid_44807);
        
        if (slt64(gtid_40376, m_28682)) {
            int32_t x_40406 = ((__global
                                int32_t *) defunc_4_map_res_mem_43355)[gtid_40376];
            int32_t x_40407 = ((__global
                                int32_t *) defunc_3_map_res_mem_43423)[gtid_40376];
            float x_40408 = ((__global
                              float *) defunc_3_map_res_mem_43424)[gtid_40376];
            int32_t y_40409 = sub32(x_40406, x_40407);
            float i32_res_40410 = sitofp_i32_f32(x_40407);
            float sqrt_res_40411;
            
            sqrt_res_40411 = futrts_sqrt32(i32_res_40410);
            
            float y_40412 = x_40408 * sqrt_res_40411;
            
            ((__global float *) mem_43474)[gtid_40376] = y_40412;
            ((__global int32_t *) mem_43476)[gtid_40376] = y_40409;
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_40399
}
__kernel void mainzisegmap_intragroup_37972(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_42741_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_42731_backing_aligned_1,
                                            int32_t k2p2zq_28695,
                                            int64_t i32_res_28697,
                                            int32_t m_28828,
                                            int64_t i32_res_28830,
                                            int64_t i32_res_28845, __global
                                            unsigned char *defunc_3_map_res_mem_42727,
                                            __global unsigned char *mem_42751)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42741_backing_1 = (__local volatile
                                                           char *) mem_42741_backing_aligned_0;
    __local volatile char *restrict mem_42731_backing_0 = (__local volatile
                                                           char *) mem_42731_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43998;
    int32_t local_tid_43999;
    int64_t group_sizze_44002;
    int32_t wave_sizze_44001;
    int32_t group_tid_44000;
    
    global_tid_43998 = get_global_id(0);
    local_tid_43999 = get_local_id(0);
    group_sizze_44002 = get_local_size(0);
    wave_sizze_44001 = LOCKSTEP_WIDTH;
    group_tid_44000 = get_group_id(0);
    
    int32_t phys_tid_37972;
    
    phys_tid_37972 = group_tid_44000;
    
    int32_t ltid_pre_44003;
    
    ltid_pre_44003 = local_tid_43999;
    
    int64_t gtid_37927;
    
    gtid_37927 = sext_i32_i64(group_tid_44000);
    
    __local char *mem_42731;
    
    mem_42731 = (__local char *) mem_42731_backing_0;
    
    int64_t gtid_37930 = sext_i32_i64(ltid_pre_44003);
    int32_t phys_tid_37931 = local_tid_43999;
    int32_t index_primexp_40564 = sext_i64_i32(gtid_37930);
    int32_t defunc_0_f_res_38097 = sdiv32(index_primexp_40564, m_28828);
    int32_t defunc_0_f_res_38098 = smod32(index_primexp_40564, m_28828);
    bool cond_38099 = slt32(defunc_0_f_res_38098, k2p2zq_28695);
    float defunc_0_f_res_38100;
    
    if (cond_38099) {
        int64_t i_38101 = sext_i32_i64(defunc_0_f_res_38097);
        int64_t j_38102 = sext_i32_i64(defunc_0_f_res_38098);
        float defunc_0_f_res_t_res_38103 = ((__global
                                             float *) defunc_3_map_res_mem_42727)[gtid_37927 *
                                                                                  (i32_res_28697 *
                                                                                   i32_res_28697) +
                                                                                  i_38101 *
                                                                                  i32_res_28697 +
                                                                                  j_38102];
        
        defunc_0_f_res_38100 = defunc_0_f_res_t_res_38103;
    } else {
        int32_t y_38104 = add32(k2p2zq_28695, defunc_0_f_res_38097);
        bool cond_38105 = defunc_0_f_res_38098 == y_38104;
        float defunc_0_f_res_f_res_38106;
        
        if (cond_38105) {
            defunc_0_f_res_f_res_38106 = 1.0F;
        } else {
            defunc_0_f_res_f_res_38106 = 0.0F;
        }
        defunc_0_f_res_38100 = defunc_0_f_res_f_res_38106;
    }
    ((__local float *) mem_42731)[gtid_37930] = defunc_0_f_res_38100;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_42741;
    
    mem_42741 = (__local char *) mem_42741_backing_1;
    for (int32_t i_38108 = 0; i_38108 < k2p2zq_28695; i_38108++) {
        int64_t i32_res_38110 = sext_i32_i64(i_38108);
        float v1_38111 = ((__local float *) mem_42731)[i32_res_38110];
        bool cond_38112 = v1_38111 == 0.0F;
        int64_t gtid_37943 = sext_i32_i64(ltid_pre_44003);
        int32_t phys_tid_37944 = local_tid_43999;
        int32_t defunc_0_f_res_38115 = sext_i64_i32(gtid_37943);
        int32_t defunc_0_f_res_38116 = sdiv32(defunc_0_f_res_38115, m_28828);
        int32_t defunc_0_f_res_38117 = smod32(defunc_0_f_res_38115, m_28828);
        float defunc_0_f_res_38118;
        
        if (cond_38112) {
            int32_t x_38119 = mul32(m_28828, defunc_0_f_res_38116);
            int32_t i32_arg_38120 = add32(defunc_0_f_res_38117, x_38119);
            int64_t i32_res_38121 = sext_i32_i64(i32_arg_38120);
            float defunc_0_f_res_t_res_38122 = ((__local
                                                 float *) mem_42731)[i32_res_38121];
            
            defunc_0_f_res_38118 = defunc_0_f_res_t_res_38122;
        } else {
            int64_t i32_res_38123 = sext_i32_i64(defunc_0_f_res_38117);
            float x_38124 = ((__local float *) mem_42731)[i32_res_38123];
            float x_38125 = x_38124 / v1_38111;
            int32_t y_38126 = sub32(k2p2zq_28695, 1);
            bool cond_38127 = slt32(defunc_0_f_res_38116, y_38126);
            float defunc_0_f_res_f_res_38128;
            
            if (cond_38127) {
                int32_t x_38129 = add32(1, defunc_0_f_res_38116);
                int32_t x_38130 = mul32(m_28828, x_38129);
                int32_t i32_arg_38131 = add32(defunc_0_f_res_38117, x_38130);
                int64_t i32_res_38132 = sext_i32_i64(i32_arg_38131);
                float x_38133 = ((__local float *) mem_42731)[i32_res_38132];
                int32_t i32_arg_38134 = add32(i_38108, x_38130);
                int64_t i32_res_38135 = sext_i32_i64(i32_arg_38134);
                float x_38136 = ((__local float *) mem_42731)[i32_res_38135];
                float y_38137 = x_38125 * x_38136;
                float defunc_0_f_res_f_res_t_res_38138 = x_38133 - y_38137;
                
                defunc_0_f_res_f_res_38128 = defunc_0_f_res_f_res_t_res_38138;
            } else {
                defunc_0_f_res_f_res_38128 = x_38125;
            }
            defunc_0_f_res_38118 = defunc_0_f_res_f_res_38128;
        }
        ((__local float *) mem_42741)[gtid_37943] = defunc_0_f_res_38118;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_37970 = sext_i32_i64(ltid_pre_44003);
        int32_t phys_tid_37971 = local_tid_43999;
        float write_value_38141 = ((__local float *) mem_42741)[write_i_37970];
        
        if (sle64((int64_t) 0, write_i_37970) && slt64(write_i_37970,
                                                       i32_res_28830)) {
            ((__local float *) mem_42731)[write_i_37970] = write_value_38141;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    for (int64_t i_44005 = 0; i_44005 < sdiv_up64(i32_res_28697 *
                                                  i32_res_28697 -
                                                  sext_i32_i64(local_tid_43999),
                                                  i32_res_28830); i_44005++) {
        ((__global float *) mem_42751)[gtid_37927 * (i32_res_28697 *
                                                     i32_res_28697) +
                                       squot64(i_44005 * i32_res_28830 +
                                               sext_i32_i64(local_tid_43999),
                                               i32_res_28697) * i32_res_28697 +
                                       (i_44005 * i32_res_28830 +
                                        sext_i32_i64(local_tid_43999) -
                                        squot64(i_44005 * i32_res_28830 +
                                                sext_i32_i64(local_tid_43999),
                                                i32_res_28697) *
                                        i32_res_28697)] = ((__local
                                                            float *) mem_42731)[i32_res_28697 +
                                                                                (squot64(i_44005 *
                                                                                         i32_res_28830 +
                                                                                         sext_i32_i64(local_tid_43999),
                                                                                         i32_res_28697) *
                                                                                 i32_res_28845 +
                                                                                 (i_44005 *
                                                                                  i32_res_28830 +
                                                                                  sext_i32_i64(local_tid_43999) -
                                                                                  squot64(i_44005 *
                                                                                          i32_res_28830 +
                                                                                          sext_i32_i64(local_tid_43999),
                                                                                          i32_res_28697) *
                                                                                  i32_res_28697))];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_3:
    return;
}
__kernel void mainzisegmap_intragroup_38199(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_42772_backing_aligned_0,
                                            int64_t m_28682,
                                            int32_t k2p2zq_28695,
                                            int32_t m_28828,
                                            int64_t i32_res_28830,
                                            int32_t i_38594,
                                            int64_t i32_res_38596,
                                            int64_t ctx_param_ext_42758,
                                            int64_t ctx_param_ext_42759,
                                            int64_t ctx_param_ext_42761,
                                            __global
                                            unsigned char *mem_param_42763,
                                            __global unsigned char *mem_42768,
                                            __global unsigned char *mem_42776)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42772_backing_0 = (__local volatile
                                                           char *) mem_42772_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44032;
    int32_t local_tid_44033;
    int64_t group_sizze_44036;
    int32_t wave_sizze_44035;
    int32_t group_tid_44034;
    
    global_tid_44032 = get_global_id(0);
    local_tid_44033 = get_local_id(0);
    group_sizze_44036 = get_local_size(0);
    wave_sizze_44035 = LOCKSTEP_WIDTH;
    group_tid_44034 = get_group_id(0);
    
    int32_t phys_tid_38199;
    
    phys_tid_38199 = group_tid_44034;
    
    int32_t ltid_pre_44037;
    
    ltid_pre_44037 = local_tid_44033;
    
    int64_t gtid_38167;
    
    gtid_38167 = sext_i32_i64(group_tid_44034);
    
    float v1_38609 = ((__global float *) mem_param_42763)[ctx_param_ext_42758 +
                                                          (gtid_38167 *
                                                           ctx_param_ext_42759 +
                                                           i32_res_38596 *
                                                           ctx_param_ext_42761)];
    bool cond_38610 = v1_38609 == 0.0F;
    __local char *mem_42772;
    
    mem_42772 = (__local char *) mem_42772_backing_0;
    
    int64_t gtid_38170 = sext_i32_i64(ltid_pre_44037);
    int32_t phys_tid_38171 = local_tid_44033;
    int32_t defunc_0_f_res_38613 = sext_i64_i32(gtid_38170);
    int32_t defunc_0_f_res_38614 = sdiv32(defunc_0_f_res_38613, m_28828);
    int32_t defunc_0_f_res_38615 = smod32(defunc_0_f_res_38613, m_28828);
    float defunc_0_f_res_38616;
    
    if (cond_38610) {
        int32_t x_38617 = mul32(m_28828, defunc_0_f_res_38614);
        int32_t i32_arg_38618 = add32(defunc_0_f_res_38615, x_38617);
        int64_t i32_res_38619 = sext_i32_i64(i32_arg_38618);
        float defunc_0_f_res_t_res_38620 = ((__global
                                             float *) mem_param_42763)[ctx_param_ext_42758 +
                                                                       (gtid_38167 *
                                                                        ctx_param_ext_42759 +
                                                                        i32_res_38619 *
                                                                        ctx_param_ext_42761)];
        
        defunc_0_f_res_38616 = defunc_0_f_res_t_res_38620;
    } else {
        int64_t i32_res_38621 = sext_i32_i64(defunc_0_f_res_38615);
        float x_38622 = ((__global
                          float *) mem_param_42763)[ctx_param_ext_42758 +
                                                    (gtid_38167 *
                                                     ctx_param_ext_42759 +
                                                     i32_res_38621 *
                                                     ctx_param_ext_42761)];
        float x_38623 = x_38622 / v1_38609;
        int32_t y_38624 = sub32(k2p2zq_28695, 1);
        bool cond_38625 = slt32(defunc_0_f_res_38614, y_38624);
        float defunc_0_f_res_f_res_38626;
        
        if (cond_38625) {
            int32_t x_38627 = add32(1, defunc_0_f_res_38614);
            int32_t x_38628 = mul32(m_28828, x_38627);
            int32_t i32_arg_38629 = add32(defunc_0_f_res_38615, x_38628);
            int64_t i32_res_38630 = sext_i32_i64(i32_arg_38629);
            float x_38631 = ((__global
                              float *) mem_param_42763)[ctx_param_ext_42758 +
                                                        (gtid_38167 *
                                                         ctx_param_ext_42759 +
                                                         i32_res_38630 *
                                                         ctx_param_ext_42761)];
            int32_t i32_arg_38632 = add32(i_38594, x_38628);
            int64_t i32_res_38633 = sext_i32_i64(i32_arg_38632);
            float x_38634 = ((__global
                              float *) mem_param_42763)[ctx_param_ext_42758 +
                                                        (gtid_38167 *
                                                         ctx_param_ext_42759 +
                                                         i32_res_38633 *
                                                         ctx_param_ext_42761)];
            float y_38635 = x_38623 * x_38634;
            float defunc_0_f_res_f_res_t_res_38636 = x_38631 - y_38635;
            
            defunc_0_f_res_f_res_38626 = defunc_0_f_res_f_res_t_res_38636;
        } else {
            defunc_0_f_res_f_res_38626 = x_38623;
        }
        defunc_0_f_res_38616 = defunc_0_f_res_f_res_38626;
    }
    ((__local float *) mem_42772)[gtid_38170] = defunc_0_f_res_38616;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_38197 = sext_i32_i64(ltid_pre_44037);
    int32_t phys_tid_38198 = local_tid_44033;
    float write_value_38639 = ((__local float *) mem_42772)[write_i_38197];
    
    if (sle64((int64_t) 0, write_i_38197) && slt64(write_i_38197,
                                                   i32_res_28830)) {
        ((__global float *) mem_42768)[gtid_38167 + write_i_38197 * m_28682] =
            write_value_38639;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44033 == 0) {
        for (int64_t i_44038 = 0; i_44038 < i32_res_28830; i_44038++) {
            ((__global float *) mem_42776)[gtid_38167 * i32_res_28830 +
                                           i_44038] = ((__global
                                                        float *) mem_42768)[gtid_38167 +
                                                                            i_44038 *
                                                                            m_28682];
        }
    }
    
  error_2:
    return;
}
__kernel void mainzisegmap_intragroup_39150(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43328_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43326_backing_aligned_1,
                                            __local volatile
                                            int64_t *mem_43324_backing_aligned_2,
                                            __local volatile
                                            int64_t *mem_43322_backing_aligned_3,
                                            int64_t N_28681, int64_t i_28957,
                                            __global
                                            unsigned char *images_mem_42559,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43318,
                                            __global unsigned char *mem_43331,
                                            __global unsigned char *mem_43334,
                                            __global unsigned char *mem_43337)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43328_backing_3 = (__local volatile
                                                           char *) mem_43328_backing_aligned_0;
    __local volatile char *restrict mem_43326_backing_2 = (__local volatile
                                                           char *) mem_43326_backing_aligned_1;
    __local volatile char *restrict mem_43324_backing_1 = (__local volatile
                                                           char *) mem_43324_backing_aligned_2;
    __local volatile char *restrict mem_43322_backing_0 = (__local volatile
                                                           char *) mem_43322_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44414;
    int32_t local_tid_44415;
    int64_t group_sizze_44418;
    int32_t wave_sizze_44417;
    int32_t group_tid_44416;
    
    global_tid_44414 = get_global_id(0);
    local_tid_44415 = get_local_id(0);
    group_sizze_44418 = get_local_size(0);
    wave_sizze_44417 = LOCKSTEP_WIDTH;
    group_tid_44416 = get_group_id(0);
    
    int32_t phys_tid_39150;
    
    phys_tid_39150 = group_tid_44416;
    
    int32_t ltid_pre_44419;
    
    ltid_pre_44419 = local_tid_44415;
    
    int64_t gtid_39143;
    
    gtid_39143 = sext_i32_i64(group_tid_44416);
    
    __local char *mem_43322;
    
    mem_43322 = (__local char *) mem_43322_backing_0;
    
    __local char *mem_43324;
    
    mem_43324 = (__local char *) mem_43324_backing_1;
    
    int64_t gtid_39146 = sext_i32_i64(ltid_pre_44419);
    int32_t phys_tid_39147 = local_tid_44415;
    float x_39239 = ((__global float *) images_mem_42559)[gtid_39143 * N_28681 +
                                                          gtid_39146];
    bool isnan_res_39241;
    
    isnan_res_39241 = futrts_isnan32(x_39239);
    
    bool cond_39242 = !isnan_res_39241;
    float defunc_0_f_res_39243;
    
    if (cond_39242) {
        float x_39240 = ((__global
                          float *) defunc_3_map_res_mem_43318)[gtid_39143 *
                                                               N_28681 +
                                                               gtid_39146];
        float defunc_0_f_res_t_res_39244 = x_39239 - x_39240;
        
        defunc_0_f_res_39243 = defunc_0_f_res_t_res_39244;
    } else {
        defunc_0_f_res_39243 = NAN;
    }
    
    bool isnan_res_39245;
    
    isnan_res_39245 = futrts_isnan32(defunc_0_f_res_39243);
    
    bool defunc_0_p_res_39246 = !isnan_res_39245;
    int64_t defunc_0_f_res_39247 = btoi_bool_i64(defunc_0_p_res_39246);
    
    ((__local int64_t *) mem_43322)[gtid_39146] = defunc_0_f_res_39247;
    ((__local float *) mem_43324)[gtid_39146] = defunc_0_f_res_39243;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_44420;
    
    dims_flat_44420 = N_28681;
    
    int64_t x_39236;
    int64_t x_39237;
    int64_t x_44422;
    int64_t x_44423;
    bool ltid_in_bounds_44425;
    
    ltid_in_bounds_44425 = slt64(sext_i32_i64(local_tid_44415), N_28681);
    
    int32_t skip_threads_44426;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44425) {
            x_39237 = ((volatile __local
                        int64_t *) mem_43322)[sext_i32_i64(local_tid_44415)];
            if ((local_tid_44415 - squot32(local_tid_44415, 32) * 32) == 0) {
                x_39236 = x_39237;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44426 = 1;
        while (slt32(skip_threads_44426, 32)) {
            if (sle32(skip_threads_44426, local_tid_44415 -
                      squot32(local_tid_44415, 32) * 32) &&
                ltid_in_bounds_44425) {
                // read operands
                {
                    x_39236 = ((volatile __local
                                int64_t *) mem_43322)[sext_i32_i64(local_tid_44415) -
                                                      sext_i32_i64(skip_threads_44426)];
                }
                // perform operation
                {
                    bool inactive_44427 =
                         slt64(srem64(sext_i32_i64(local_tid_44415), N_28681),
                               sext_i32_i64(local_tid_44415) -
                               sext_i32_i64(local_tid_44415 -
                               skip_threads_44426));
                    
                    if (inactive_44427) {
                        x_39236 = x_39237;
                    }
                    if (!inactive_44427) {
                        int64_t defunc_1_op_res_39238 = add64(x_39236, x_39237);
                        
                        x_39236 = defunc_1_op_res_39238;
                    }
                }
            }
            if (sle32(wave_sizze_44417, skip_threads_44426)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44426, local_tid_44415 -
                      squot32(local_tid_44415, 32) * 32) &&
                ltid_in_bounds_44425) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_43322)[sext_i32_i64(local_tid_44415)] =
                        x_39236;
                    x_39237 = x_39236;
                }
            }
            if (sle32(wave_sizze_44417, skip_threads_44426)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44426 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44415 - squot32(local_tid_44415, 32) * 32) == 31 &&
            ltid_in_bounds_44425) {
            ((volatile __local
              int64_t *) mem_43322)[sext_i32_i64(squot32(local_tid_44415,
                                                         32))] = x_39236;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44428;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44415, 32) == 0 && ltid_in_bounds_44425) {
                x_44423 = ((volatile __local
                            int64_t *) mem_43322)[sext_i32_i64(local_tid_44415)];
                if ((local_tid_44415 - squot32(local_tid_44415, 32) * 32) ==
                    0) {
                    x_44422 = x_44423;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44428 = 1;
            while (slt32(skip_threads_44428, 32)) {
                if (sle32(skip_threads_44428, local_tid_44415 -
                          squot32(local_tid_44415, 32) * 32) &&
                    (squot32(local_tid_44415, 32) == 0 &&
                     ltid_in_bounds_44425)) {
                    // read operands
                    {
                        x_44422 = ((volatile __local
                                    int64_t *) mem_43322)[sext_i32_i64(local_tid_44415) -
                                                          sext_i32_i64(skip_threads_44428)];
                    }
                    // perform operation
                    {
                        bool inactive_44429 =
                             slt64(srem64(sext_i32_i64(local_tid_44415 * 32 +
                                          32 - 1), N_28681),
                                   sext_i32_i64(local_tid_44415 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_44415 -
                                                 skip_threads_44428) * 32 + 32 -
                                   1));
                        
                        if (inactive_44429) {
                            x_44422 = x_44423;
                        }
                        if (!inactive_44429) {
                            int64_t defunc_1_op_res_44424 = add64(x_44422,
                                                                  x_44423);
                            
                            x_44422 = defunc_1_op_res_44424;
                        }
                    }
                }
                if (sle32(wave_sizze_44417, skip_threads_44428)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44428, local_tid_44415 -
                          squot32(local_tid_44415, 32) * 32) &&
                    (squot32(local_tid_44415, 32) == 0 &&
                     ltid_in_bounds_44425)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_43322)[sext_i32_i64(local_tid_44415)] =
                            x_44422;
                        x_44423 = x_44422;
                    }
                }
                if (sle32(wave_sizze_44417, skip_threads_44428)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44428 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44415, 32) == 0 || !ltid_in_bounds_44425)) {
            // read operands
            {
                x_39237 = x_39236;
                x_39236 = ((__local
                            int64_t *) mem_43322)[sext_i32_i64(squot32(local_tid_44415,
                                                                       32)) -
                                                  (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44430 =
                     slt64(srem64(sext_i32_i64(local_tid_44415), N_28681),
                           sext_i32_i64(local_tid_44415) -
                           sext_i32_i64(squot32(local_tid_44415, 32) * 32 - 1));
                
                if (inactive_44430) {
                    x_39236 = x_39237;
                }
                if (!inactive_44430) {
                    int64_t defunc_1_op_res_39238 = add64(x_39236, x_39237);
                    
                    x_39236 = defunc_1_op_res_39238;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_43322)[sext_i32_i64(local_tid_44415)] =
                    x_39236;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44415, 32) == 0) {
            ((__local int64_t *) mem_43322)[sext_i32_i64(local_tid_44415)] =
                x_39237;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_39248 = ((__local int64_t *) mem_43322)[i_28957];
    int32_t defunc_0_f_res_39249 = sext_i64_i32(last_res_39248);
    __local char *mem_43326;
    
    mem_43326 = (__local char *) mem_43326_backing_2;
    ((__local float *) mem_43326)[sext_i32_i64(local_tid_44415)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43328;
    
    mem_43328 = (__local char *) mem_43328_backing_3;
    ((__local int32_t *) mem_43328)[sext_i32_i64(local_tid_44415)] = 0;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_39148 = sext_i32_i64(ltid_pre_44419);
    int32_t phys_tid_39149 = local_tid_44415;
    float x_39254 = ((__local float *) mem_43324)[write_i_39148];
    int32_t index_primexp_40584 = sext_i64_i32(write_i_39148);
    bool isnan_res_39257;
    
    isnan_res_39257 = futrts_isnan32(x_39254);
    
    bool defunc_0_p_res_39258 = !isnan_res_39257;
    int64_t defunc_1_f_res_39259;
    
    if (defunc_0_p_res_39258) {
        int64_t x_39255 = ((__local int64_t *) mem_43322)[write_i_39148];
        int64_t defunc_1_f_res_t_res_39260 = sub64(x_39255, (int64_t) 1);
        
        defunc_1_f_res_39259 = defunc_1_f_res_t_res_39260;
    } else {
        defunc_1_f_res_39259 = (int64_t) -1;
    }
    if (sle64((int64_t) 0, defunc_1_f_res_39259) && slt64(defunc_1_f_res_39259,
                                                          N_28681)) {
        ((__local int32_t *) mem_43328)[defunc_1_f_res_39259] =
            index_primexp_40584;
    }
    if (sle64((int64_t) 0, defunc_1_f_res_39259) && slt64(defunc_1_f_res_39259,
                                                          N_28681)) {
        ((__local float *) mem_43326)[defunc_1_f_res_39259] = x_39254;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44415 == 0) {
        ((__global int32_t *) mem_43331)[gtid_39143] = defunc_0_f_res_39249;
    }
    ((__global float *) mem_43334)[gtid_39143 * N_28681 +
                                   sext_i32_i64(local_tid_44415)] = ((__local
                                                                      float *) mem_43326)[sext_i32_i64(local_tid_44415)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global int32_t *) mem_43337)[gtid_39143 * N_28681 +
                                     sext_i32_i64(local_tid_44415)] = ((__local
                                                                        int32_t *) mem_43328)[sext_i32_i64(local_tid_44415)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainzisegmap_intragroup_39490(__global int *global_failure,
                                            __local volatile
                                            int64_t *red_arr_mem_44539_backing_aligned_0,
                                            __local volatile
                                            int64_t *red_arr_mem_44535_backing_aligned_1,
                                            int64_t N_28681, float hfrac_28687,
                                            int64_t i32_res_28691,
                                            int32_t k2p2_28693, __global
                                            unsigned char *images_mem_42559,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_43356,
                                            __global unsigned char *mem_43403,
                                            __global unsigned char *mem_43405,
                                            __global unsigned char *mem_43407)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44539_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44539_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44535_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44535_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44529;
    int32_t local_tid_44530;
    int64_t group_sizze_44533;
    int32_t wave_sizze_44532;
    int32_t group_tid_44531;
    
    global_tid_44529 = get_global_id(0);
    local_tid_44530 = get_local_id(0);
    group_sizze_44533 = get_local_size(0);
    wave_sizze_44532 = LOCKSTEP_WIDTH;
    group_tid_44531 = get_group_id(0);
    
    int32_t phys_tid_39490;
    
    phys_tid_39490 = group_tid_44531;
    
    int32_t ltid_pre_44534;
    
    ltid_pre_44534 = local_tid_44530;
    
    int64_t gtid_39483;
    
    gtid_39483 = sext_i32_i64(group_tid_44531);
    
    int32_t defunc_0_f_res_39567;
    int64_t gtid_39486 = sext_i32_i64(ltid_pre_44534);
    int32_t phys_tid_39487 = local_tid_44530;
    __local char *red_arr_mem_44535;
    
    red_arr_mem_44535 = (__local char *) red_arr_mem_44535_backing_0;
    
    float x_39571;
    
    x_39571 = ((__global float *) images_mem_42559)[gtid_39483 * N_28681 +
                                                    gtid_39486];
    
    bool isnan_res_39572;
    
    isnan_res_39572 = futrts_isnan32(x_39571);
    
    bool cond_39573 = !isnan_res_39572;
    int32_t defunc_0_f_res_39574 = btoi_bool_i32(cond_39573);
    
    ((__local int32_t *) red_arr_mem_44535)[gtid_39486] = defunc_0_f_res_39574;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44537;
    int32_t skip_waves_44538;
    
    skip_waves_44538 = 1;
    
    int32_t x_39568;
    int32_t x_39569;
    
    offset_44537 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44530, sext_i64_i32(i32_res_28691))) {
            x_39568 = ((__local
                        int32_t *) red_arr_mem_44535)[sext_i32_i64(local_tid_44530 +
                                                      offset_44537)];
        }
    }
    offset_44537 = 1;
    while (slt32(offset_44537, wave_sizze_44532)) {
        if (slt32(local_tid_44530 + offset_44537,
                  sext_i64_i32(i32_res_28691)) && ((local_tid_44530 -
                                                    squot32(local_tid_44530,
                                                            wave_sizze_44532) *
                                                    wave_sizze_44532) & (2 *
                                                                         offset_44537 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_39569 = ((volatile __local
                            int32_t *) red_arr_mem_44535)[sext_i32_i64(local_tid_44530 +
                                                          offset_44537)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_39570 = add32(x_39568, x_39569);
                
                x_39568 = defunc_1_op_res_39570;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_44535)[sext_i32_i64(local_tid_44530)] =
                    x_39568;
            }
        }
        offset_44537 *= 2;
    }
    while (slt32(skip_waves_44538, squot32(sext_i64_i32(i32_res_28691) +
                                           wave_sizze_44532 - 1,
                                           wave_sizze_44532))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44537 = skip_waves_44538 * wave_sizze_44532;
        if (slt32(local_tid_44530 + offset_44537,
                  sext_i64_i32(i32_res_28691)) && ((local_tid_44530 -
                                                    squot32(local_tid_44530,
                                                            wave_sizze_44532) *
                                                    wave_sizze_44532) == 0 &&
                                                   (squot32(local_tid_44530,
                                                            wave_sizze_44532) &
                                                    (2 * skip_waves_44538 -
                                                     1)) == 0)) {
            // read array element
            {
                x_39569 = ((__local
                            int32_t *) red_arr_mem_44535)[sext_i32_i64(local_tid_44530 +
                                                          offset_44537)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_39570 = add32(x_39568, x_39569);
                
                x_39568 = defunc_1_op_res_39570;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_44535)[sext_i32_i64(local_tid_44530)] =
                    x_39568;
            }
        }
        skip_waves_44538 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_39567 = ((__local int32_t *) red_arr_mem_44535)[(int64_t) 0];
    
    float defunc_0_f_res_39575;
    int64_t gtid_39488 = sext_i32_i64(ltid_pre_44534);
    int32_t phys_tid_39489 = local_tid_44530;
    __local char *red_arr_mem_44539;
    
    red_arr_mem_44539 = (__local char *) red_arr_mem_44539_backing_1;
    
    int32_t index_primexp_40592;
    
    index_primexp_40592 = sext_i64_i32(gtid_39488);
    
    bool cond_39580 = slt32(index_primexp_40592, defunc_0_f_res_39567);
    float defunc_0_f_res_39581;
    
    if (cond_39580) {
        int64_t i_39582 = sext_i32_i64(index_primexp_40592);
        float defunc_0_f_res_t_res_39583 = ((__global
                                             float *) defunc_4_map_res_mem_43356)[gtid_39483 *
                                                                                  N_28681 +
                                                                                  i_39582];
        
        defunc_0_f_res_39581 = defunc_0_f_res_t_res_39583;
    } else {
        defunc_0_f_res_39581 = 0.0F;
    }
    
    float defunc_0_f_res_39584 = defunc_0_f_res_39581 * defunc_0_f_res_39581;
    
    ((__local float *) red_arr_mem_44539)[gtid_39488] = defunc_0_f_res_39584;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44541;
    int32_t skip_waves_44542;
    
    skip_waves_44542 = 1;
    
    float x_39576;
    float x_39577;
    
    offset_44541 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44530, sext_i64_i32(i32_res_28691))) {
            x_39576 = ((__local
                        float *) red_arr_mem_44539)[sext_i32_i64(local_tid_44530 +
                                                    offset_44541)];
        }
    }
    offset_44541 = 1;
    while (slt32(offset_44541, wave_sizze_44532)) {
        if (slt32(local_tid_44530 + offset_44541,
                  sext_i64_i32(i32_res_28691)) && ((local_tid_44530 -
                                                    squot32(local_tid_44530,
                                                            wave_sizze_44532) *
                                                    wave_sizze_44532) & (2 *
                                                                         offset_44541 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_39577 = ((volatile __local
                            float *) red_arr_mem_44539)[sext_i32_i64(local_tid_44530 +
                                                        offset_44541)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_39578 = x_39576 + x_39577;
                
                x_39576 = defunc_1_op_res_39578;
            }
            // write result of operation
            {
                ((volatile __local
                  float *) red_arr_mem_44539)[sext_i32_i64(local_tid_44530)] =
                    x_39576;
            }
        }
        offset_44541 *= 2;
    }
    while (slt32(skip_waves_44542, squot32(sext_i64_i32(i32_res_28691) +
                                           wave_sizze_44532 - 1,
                                           wave_sizze_44532))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44541 = skip_waves_44542 * wave_sizze_44532;
        if (slt32(local_tid_44530 + offset_44541,
                  sext_i64_i32(i32_res_28691)) && ((local_tid_44530 -
                                                    squot32(local_tid_44530,
                                                            wave_sizze_44532) *
                                                    wave_sizze_44532) == 0 &&
                                                   (squot32(local_tid_44530,
                                                            wave_sizze_44532) &
                                                    (2 * skip_waves_44542 -
                                                     1)) == 0)) {
            // read array element
            {
                x_39577 = ((__local
                            float *) red_arr_mem_44539)[sext_i32_i64(local_tid_44530 +
                                                        offset_44541)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_39578 = x_39576 + x_39577;
                
                x_39576 = defunc_1_op_res_39578;
            }
            // write result of operation
            {
                ((__local
                  float *) red_arr_mem_44539)[sext_i32_i64(local_tid_44530)] =
                    x_39576;
            }
        }
        skip_waves_44542 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_39575 = ((__local float *) red_arr_mem_44539)[(int64_t) 0];
    
    int32_t r32_arg_39585 = sub32(defunc_0_f_res_39567, k2p2_28693);
    float i32_res_39586 = sitofp_i32_f32(r32_arg_39585);
    float sqrt_arg_39587 = defunc_0_f_res_39575 / i32_res_39586;
    float sqrt_res_39588;
    
    sqrt_res_39588 = futrts_sqrt32(sqrt_arg_39587);
    
    float i32_res_39589 = sitofp_i32_f32(defunc_0_f_res_39567);
    float t32_arg_39590 = hfrac_28687 * i32_res_39589;
    int32_t f32_res_39591 = fptosi_f32_i32(t32_arg_39590);
    
    if (local_tid_44530 == 0) {
        ((__global int32_t *) mem_43403)[gtid_39483] = f32_res_39591;
    }
    if (local_tid_44530 == 0) {
        ((__global int32_t *) mem_43405)[gtid_39483] = defunc_0_f_res_39567;
    }
    if (local_tid_44530 == 0) {
        ((__global float *) mem_43407)[gtid_39483] = sqrt_res_39588;
    }
    
  error_4:
    return;
}
__kernel void mainzisegmap_intragroup_39910(__global int *global_failure,
                                            __local volatile
                                            int64_t *red_arr_mem_44802_backing_aligned_0,
                                            __local volatile
                                            int64_t *red_arr_mem_44800_backing_aligned_1,
                                            __local volatile
                                            int64_t *red_arr_mem_44798_backing_aligned_2,
                                            __local volatile
                                            int64_t *mem_43466_backing_aligned_3,
                                            int64_t N_28681, int32_t n_28685,
                                            int64_t iota32_arg_29077, __global
                                            unsigned char *defunc_4_map_res_mem_43355,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_43356,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_43357,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43422,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43423,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43424,
                                            __global
                                            unsigned char *defunc_0_f_res_mem_43457,
                                            __global unsigned char *mem_43462,
                                            __global unsigned char *mem_43469,
                                            __global unsigned char *mem_43471)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44802_backing_3 =
                          (__local volatile
                           char *) red_arr_mem_44802_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44800_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_44800_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_44798_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44798_backing_aligned_2;
    __local volatile char *restrict mem_43466_backing_0 = (__local volatile
                                                           char *) mem_43466_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44781;
    int32_t local_tid_44782;
    int64_t group_sizze_44785;
    int32_t wave_sizze_44784;
    int32_t group_tid_44783;
    
    global_tid_44781 = get_global_id(0);
    local_tid_44782 = get_local_id(0);
    group_sizze_44785 = get_local_size(0);
    wave_sizze_44784 = LOCKSTEP_WIDTH;
    group_tid_44783 = get_group_id(0);
    
    int32_t phys_tid_39910;
    
    phys_tid_39910 = group_tid_44783;
    
    int32_t ltid_pre_44786;
    
    ltid_pre_44786 = local_tid_44782;
    
    int64_t gtid_39903;
    
    gtid_39903 = sext_i32_i64(group_tid_44783);
    
    int32_t x_40129;
    
    x_40129 = ((__global int32_t *) defunc_4_map_res_mem_43355)[gtid_39903];
    
    int32_t x_40130 = ((__global
                        int32_t *) defunc_3_map_res_mem_43423)[gtid_39903];
    float x_40131 = ((__global float *) defunc_3_map_res_mem_43424)[gtid_39903];
    int32_t x_40132 = ((__global
                        int32_t *) defunc_3_map_res_mem_43422)[gtid_39903];
    float x_40133 = ((__global float *) defunc_0_f_res_mem_43457)[gtid_39903];
    int32_t y_40136 = sub32(x_40129, x_40130);
    float i32_res_40137 = sitofp_i32_f32(x_40130);
    float sqrt_res_40138;
    
    sqrt_res_40138 = futrts_sqrt32(i32_res_40137);
    
    float y_40139 = x_40131 * sqrt_res_40138;
    __local char *mem_43466;
    
    mem_43466 = (__local char *) mem_43466_backing_0;
    
    int64_t gtid_39906 = sext_i32_i64(ltid_pre_44786);
    int32_t phys_tid_39907 = local_tid_44782;
    int32_t index_primexp_40605 = sext_i64_i32(gtid_39906);
    bool cond_40152 = sle32(y_40136, index_primexp_40605);
    float defunc_0_f_res_40153;
    
    if (cond_40152) {
        defunc_0_f_res_40153 = 0.0F;
    } else {
        bool cond_40154 = index_primexp_40605 == 0;
        float defunc_0_f_res_f_res_40155;
        
        if (cond_40154) {
            defunc_0_f_res_f_res_40155 = x_40133;
        } else {
            int32_t i_40156 = add32(x_40130, index_primexp_40605);
            int64_t i_40157 = sext_i32_i64(i_40156);
            float x_40158 = ((__global
                              float *) defunc_4_map_res_mem_43356)[gtid_39903 *
                                                                   N_28681 +
                                                                   i_40157];
            int32_t x_40159 = sub32(x_40130, x_40132);
            int32_t i_40160 = add32(x_40159, index_primexp_40605);
            int64_t i_40161 = sext_i32_i64(i_40160);
            float y_40162 = ((__global
                              float *) defunc_4_map_res_mem_43356)[gtid_39903 *
                                                                   N_28681 +
                                                                   i_40161];
            float defunc_0_f_res_f_res_f_res_40163 = x_40158 - y_40162;
            
            defunc_0_f_res_f_res_40155 = defunc_0_f_res_f_res_f_res_40163;
        }
        defunc_0_f_res_40153 = defunc_0_f_res_f_res_40155;
    }
    ((__local float *) mem_43466)[gtid_39906] = defunc_0_f_res_40153;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_44787;
    
    dims_flat_44787 = iota32_arg_29077;
    
    float x_40148;
    float x_40149;
    float x_44789;
    float x_44790;
    bool ltid_in_bounds_44792;
    
    ltid_in_bounds_44792 = slt64(sext_i32_i64(local_tid_44782),
                                 iota32_arg_29077);
    
    int32_t skip_threads_44793;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44792) {
            x_40149 = ((volatile __local
                        float *) mem_43466)[sext_i32_i64(local_tid_44782)];
            if ((local_tid_44782 - squot32(local_tid_44782, 32) * 32) == 0) {
                x_40148 = x_40149;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44793 = 1;
        while (slt32(skip_threads_44793, 32)) {
            if (sle32(skip_threads_44793, local_tid_44782 -
                      squot32(local_tid_44782, 32) * 32) &&
                ltid_in_bounds_44792) {
                // read operands
                {
                    x_40148 = ((volatile __local
                                float *) mem_43466)[sext_i32_i64(local_tid_44782) -
                                                    sext_i32_i64(skip_threads_44793)];
                }
                // perform operation
                {
                    bool inactive_44794 =
                         slt64(srem64(sext_i32_i64(local_tid_44782),
                                      iota32_arg_29077),
                               sext_i32_i64(local_tid_44782) -
                               sext_i32_i64(local_tid_44782 -
                               skip_threads_44793));
                    
                    if (inactive_44794) {
                        x_40148 = x_40149;
                    }
                    if (!inactive_44794) {
                        float defunc_1_op_res_40150 = x_40148 + x_40149;
                        
                        x_40148 = defunc_1_op_res_40150;
                    }
                }
            }
            if (sle32(wave_sizze_44784, skip_threads_44793)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44793, local_tid_44782 -
                      squot32(local_tid_44782, 32) * 32) &&
                ltid_in_bounds_44792) {
                // write result
                {
                    ((volatile __local
                      float *) mem_43466)[sext_i32_i64(local_tid_44782)] =
                        x_40148;
                    x_40149 = x_40148;
                }
            }
            if (sle32(wave_sizze_44784, skip_threads_44793)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44793 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44782 - squot32(local_tid_44782, 32) * 32) == 31 &&
            ltid_in_bounds_44792) {
            ((volatile __local
              float *) mem_43466)[sext_i32_i64(squot32(local_tid_44782, 32))] =
                x_40148;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44795;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44782, 32) == 0 && ltid_in_bounds_44792) {
                x_44790 = ((volatile __local
                            float *) mem_43466)[sext_i32_i64(local_tid_44782)];
                if ((local_tid_44782 - squot32(local_tid_44782, 32) * 32) ==
                    0) {
                    x_44789 = x_44790;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44795 = 1;
            while (slt32(skip_threads_44795, 32)) {
                if (sle32(skip_threads_44795, local_tid_44782 -
                          squot32(local_tid_44782, 32) * 32) &&
                    (squot32(local_tid_44782, 32) == 0 &&
                     ltid_in_bounds_44792)) {
                    // read operands
                    {
                        x_44789 = ((volatile __local
                                    float *) mem_43466)[sext_i32_i64(local_tid_44782) -
                                                        sext_i32_i64(skip_threads_44795)];
                    }
                    // perform operation
                    {
                        bool inactive_44796 =
                             slt64(srem64(sext_i32_i64(local_tid_44782 * 32 +
                                          32 - 1), iota32_arg_29077),
                                   sext_i32_i64(local_tid_44782 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_44782 -
                                                 skip_threads_44795) * 32 + 32 -
                                   1));
                        
                        if (inactive_44796) {
                            x_44789 = x_44790;
                        }
                        if (!inactive_44796) {
                            float defunc_1_op_res_44791 = x_44789 + x_44790;
                            
                            x_44789 = defunc_1_op_res_44791;
                        }
                    }
                }
                if (sle32(wave_sizze_44784, skip_threads_44795)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44795, local_tid_44782 -
                          squot32(local_tid_44782, 32) * 32) &&
                    (squot32(local_tid_44782, 32) == 0 &&
                     ltid_in_bounds_44792)) {
                    // write result
                    {
                        ((volatile __local
                          float *) mem_43466)[sext_i32_i64(local_tid_44782)] =
                            x_44789;
                        x_44790 = x_44789;
                    }
                }
                if (sle32(wave_sizze_44784, skip_threads_44795)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44795 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44782, 32) == 0 || !ltid_in_bounds_44792)) {
            // read operands
            {
                x_40149 = x_40148;
                x_40148 = ((__local
                            float *) mem_43466)[sext_i32_i64(squot32(local_tid_44782,
                                                                     32)) -
                                                (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44797 =
                     slt64(srem64(sext_i32_i64(local_tid_44782),
                                  iota32_arg_29077),
                           sext_i32_i64(local_tid_44782) -
                           sext_i32_i64(squot32(local_tid_44782, 32) * 32 - 1));
                
                if (inactive_44797) {
                    x_40148 = x_40149;
                }
                if (!inactive_44797) {
                    float defunc_1_op_res_40150 = x_40148 + x_40149;
                    
                    x_40148 = defunc_1_op_res_40150;
                }
            }
            // write final result
            {
                ((__local float *) mem_43466)[sext_i32_i64(local_tid_44782)] =
                    x_40148;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44782, 32) == 0) {
            ((__local float *) mem_43466)[sext_i32_i64(local_tid_44782)] =
                x_40149;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    bool acc0_40169;
    int32_t acc0_40170;
    float acc0_40171;
    int64_t gtid_39908 = sext_i32_i64(ltid_pre_44786);
    int32_t phys_tid_39909 = local_tid_44782;
    __local char *red_arr_mem_44798;
    
    red_arr_mem_44798 = (__local char *) red_arr_mem_44798_backing_1;
    
    __local char *red_arr_mem_44800;
    
    red_arr_mem_44800 = (__local char *) red_arr_mem_44800_backing_2;
    
    __local char *red_arr_mem_44802;
    
    red_arr_mem_44802 = (__local char *) red_arr_mem_44802_backing_3;
    
    float x_40186;
    
    x_40186 = ((__local float *) mem_43466)[gtid_39908];
    
    float x_40187 = ((__global float *) mem_43462)[gtid_39908];
    int32_t index_primexp_40608 = sext_i64_i32(gtid_39908);
    float defunc_0_f_res_40190 = x_40186 / y_40139;
    bool cond_40191 = slt32(index_primexp_40608, y_40136);
    bool isnan_res_40192;
    
    isnan_res_40192 = futrts_isnan32(defunc_0_f_res_40190);
    
    bool cond_t_res_40193 = !isnan_res_40192;
    bool x_40194 = cond_40191 && cond_t_res_40193;
    float abs_res_40195 = (float) fabs(defunc_0_f_res_40190);
    bool defunc_2_f_res_t_res_40196 = x_40187 < abs_res_40195;
    bool x_40197 = x_40194 && defunc_2_f_res_t_res_40196;
    float defunc_1_f_res_40198;
    
    if (cond_40191) {
        defunc_1_f_res_40198 = defunc_0_f_res_40190;
    } else {
        defunc_1_f_res_40198 = 0.0F;
    }
    ((__local bool *) red_arr_mem_44798)[gtid_39908] = x_40197;
    ((__local int32_t *) red_arr_mem_44800)[gtid_39908] = index_primexp_40608;
    ((__local float *) red_arr_mem_44802)[gtid_39908] = defunc_1_f_res_40198;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44804;
    int32_t skip_waves_44805;
    
    skip_waves_44805 = 1;
    
    bool x_40172;
    int32_t x_40173;
    float x_40174;
    bool x_40175;
    int32_t x_40176;
    float x_40177;
    
    offset_44804 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44782, sext_i64_i32(iota32_arg_29077))) {
            x_40172 = ((__local
                        bool *) red_arr_mem_44798)[sext_i32_i64(local_tid_44782 +
                                                   offset_44804)];
            x_40173 = ((__local
                        int32_t *) red_arr_mem_44800)[sext_i32_i64(local_tid_44782 +
                                                      offset_44804)];
            x_40174 = ((__local
                        float *) red_arr_mem_44802)[sext_i32_i64(local_tid_44782 +
                                                    offset_44804)];
        }
    }
    offset_44804 = 1;
    while (slt32(offset_44804, wave_sizze_44784)) {
        if (slt32(local_tid_44782 + offset_44804,
                  sext_i64_i32(iota32_arg_29077)) && ((local_tid_44782 -
                                                       squot32(local_tid_44782,
                                                               wave_sizze_44784) *
                                                       wave_sizze_44784) & (2 *
                                                                            offset_44804 -
                                                                            1)) ==
            0) {
            // read array element
            {
                x_40175 = ((volatile __local
                            bool *) red_arr_mem_44798)[sext_i32_i64(local_tid_44782 +
                                                       offset_44804)];
                x_40176 = ((volatile __local
                            int32_t *) red_arr_mem_44800)[sext_i32_i64(local_tid_44782 +
                                                          offset_44804)];
                x_40177 = ((volatile __local
                            float *) red_arr_mem_44802)[sext_i32_i64(local_tid_44782 +
                                                        offset_44804)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_40178;
                int32_t defunc_1_op_res_40179;
                
                if (x_40172) {
                    defunc_1_op_res_40178 = x_40172;
                    defunc_1_op_res_40179 = x_40173;
                } else {
                    bool x_40180 = x_40175 && x_40175;
                    bool x_40181 = !x_40175;
                    bool y_40182 = x_40172 && x_40181;
                    bool defunc_1_op_res_f_res_40183 = x_40180 || y_40182;
                    int32_t defunc_1_op_res_f_res_40184;
                    
                    if (x_40175) {
                        defunc_1_op_res_f_res_40184 = x_40176;
                    } else {
                        defunc_1_op_res_f_res_40184 = x_40173;
                    }
                    defunc_1_op_res_40178 = defunc_1_op_res_f_res_40183;
                    defunc_1_op_res_40179 = defunc_1_op_res_f_res_40184;
                }
                
                float defunc_1_op_res_40185 = x_40174 + x_40177;
                
                x_40172 = defunc_1_op_res_40178;
                x_40173 = defunc_1_op_res_40179;
                x_40174 = defunc_1_op_res_40185;
            }
            // write result of operation
            {
                ((volatile __local
                  bool *) red_arr_mem_44798)[sext_i32_i64(local_tid_44782)] =
                    x_40172;
                ((volatile __local
                  int32_t *) red_arr_mem_44800)[sext_i32_i64(local_tid_44782)] =
                    x_40173;
                ((volatile __local
                  float *) red_arr_mem_44802)[sext_i32_i64(local_tid_44782)] =
                    x_40174;
            }
        }
        offset_44804 *= 2;
    }
    while (slt32(skip_waves_44805, squot32(sext_i64_i32(iota32_arg_29077) +
                                           wave_sizze_44784 - 1,
                                           wave_sizze_44784))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44804 = skip_waves_44805 * wave_sizze_44784;
        if (slt32(local_tid_44782 + offset_44804,
                  sext_i64_i32(iota32_arg_29077)) && ((local_tid_44782 -
                                                       squot32(local_tid_44782,
                                                               wave_sizze_44784) *
                                                       wave_sizze_44784) == 0 &&
                                                      (squot32(local_tid_44782,
                                                               wave_sizze_44784) &
                                                       (2 * skip_waves_44805 -
                                                        1)) == 0)) {
            // read array element
            {
                x_40175 = ((__local
                            bool *) red_arr_mem_44798)[sext_i32_i64(local_tid_44782 +
                                                       offset_44804)];
                x_40176 = ((__local
                            int32_t *) red_arr_mem_44800)[sext_i32_i64(local_tid_44782 +
                                                          offset_44804)];
                x_40177 = ((__local
                            float *) red_arr_mem_44802)[sext_i32_i64(local_tid_44782 +
                                                        offset_44804)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_40178;
                int32_t defunc_1_op_res_40179;
                
                if (x_40172) {
                    defunc_1_op_res_40178 = x_40172;
                    defunc_1_op_res_40179 = x_40173;
                } else {
                    bool x_40180 = x_40175 && x_40175;
                    bool x_40181 = !x_40175;
                    bool y_40182 = x_40172 && x_40181;
                    bool defunc_1_op_res_f_res_40183 = x_40180 || y_40182;
                    int32_t defunc_1_op_res_f_res_40184;
                    
                    if (x_40175) {
                        defunc_1_op_res_f_res_40184 = x_40176;
                    } else {
                        defunc_1_op_res_f_res_40184 = x_40173;
                    }
                    defunc_1_op_res_40178 = defunc_1_op_res_f_res_40183;
                    defunc_1_op_res_40179 = defunc_1_op_res_f_res_40184;
                }
                
                float defunc_1_op_res_40185 = x_40174 + x_40177;
                
                x_40172 = defunc_1_op_res_40178;
                x_40173 = defunc_1_op_res_40179;
                x_40174 = defunc_1_op_res_40185;
            }
            // write result of operation
            {
                ((__local
                  bool *) red_arr_mem_44798)[sext_i32_i64(local_tid_44782)] =
                    x_40172;
                ((__local
                  int32_t *) red_arr_mem_44800)[sext_i32_i64(local_tid_44782)] =
                    x_40173;
                ((__local
                  float *) red_arr_mem_44802)[sext_i32_i64(local_tid_44782)] =
                    x_40174;
            }
        }
        skip_waves_44805 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    acc0_40169 = ((__local bool *) red_arr_mem_44798)[(int64_t) 0];
    acc0_40170 = ((__local int32_t *) red_arr_mem_44800)[(int64_t) 0];
    acc0_40171 = ((__local float *) red_arr_mem_44802)[(int64_t) 0];
    
    bool x_40201 = acc0_40169 && acc0_40169;
    int32_t defunc_1_op_res_f_res_40205;
    
    if (acc0_40169) {
        defunc_1_op_res_f_res_40205 = acc0_40170;
    } else {
        defunc_1_op_res_f_res_40205 = -1;
    }
    
    bool cond_40211 = y_40136 == 0;
    float defunc_0_f_res_40212;
    
    if (cond_40211) {
        defunc_0_f_res_40212 = 0.0F;
    } else {
        float i32_res_40213 = sitofp_i32_f32(y_40136);
        float defunc_0_f_res_f_res_40214 = acc0_40171 / i32_res_40213;
        
        defunc_0_f_res_40212 = defunc_0_f_res_f_res_40214;
    }
    
    bool cond_40215 = !x_40201;
    int32_t fst_breakzq_40216;
    
    if (cond_40215) {
        fst_breakzq_40216 = -1;
    } else {
        bool cond_40217 = slt32(defunc_1_op_res_f_res_40205, y_40136);
        int32_t adjustValInds_res_40218;
        
        if (cond_40217) {
            int32_t i_40219 = add32(x_40130, defunc_1_op_res_f_res_40205);
            int64_t i_40220 = sext_i32_i64(i_40219);
            int32_t x_40221 = ((__global
                                int32_t *) defunc_4_map_res_mem_43357)[gtid_39903 *
                                                                       N_28681 +
                                                                       i_40220];
            int32_t adjustValInds_res_t_res_40222 = sub32(x_40221, n_28685);
            
            adjustValInds_res_40218 = adjustValInds_res_t_res_40222;
        } else {
            adjustValInds_res_40218 = -1;
        }
        fst_breakzq_40216 = adjustValInds_res_40218;
    }
    
    bool cond_40223 = sle32(x_40130, 5);
    bool cond_f_res_40224 = sle32(y_40136, 5);
    bool x_40225 = !cond_40223;
    bool y_40226 = cond_f_res_40224 && x_40225;
    bool cond_40227 = cond_40223 || y_40226;
    int32_t fst_breakzq_40228;
    
    if (cond_40227) {
        fst_breakzq_40228 = -2;
    } else {
        fst_breakzq_40228 = fst_breakzq_40216;
    }
    if (local_tid_44782 == 0) {
        ((__global int32_t *) mem_43469)[gtid_39903] = fst_breakzq_40228;
    }
    if (local_tid_44782 == 0) {
        ((__global float *) mem_43471)[gtid_39903] = defunc_0_f_res_40212;
    }
    
  error_3:
    return;
}
__kernel void mainzisegmap_intragroup_40751(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_42658_backing_aligned_0,
                                            int64_t m_28682, int32_t n_28685,
                                            int64_t i32_res_28697,
                                            int64_t Ty_40739, int64_t Tx_40740,
                                            int64_t gridDim_x_40741,
                                            int64_t gridDim_y_40742,
                                            int64_t group_sizze_tile3d_40746,
                                            int64_t count_shmem_40747, __global
                                            unsigned char *mem_42571, __global
                                            unsigned char *mem_42575, __global
                                            unsigned char *mem_42646, __global
                                            unsigned char *mem_42706)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42658_backing_0 = (__local volatile
                                                           char *) mem_42658_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43899;
    int32_t local_tid_43900;
    int64_t group_sizze_43903;
    int32_t wave_sizze_43902;
    int32_t group_tid_43901;
    
    global_tid_43899 = get_global_id(0);
    local_tid_43900 = get_local_id(0);
    group_sizze_43903 = get_local_size(0);
    wave_sizze_43902 = LOCKSTEP_WIDTH;
    group_tid_43901 = get_group_id(0);
    
    int32_t gid_flat_40751;
    
    gid_flat_40751 = group_tid_43901;
    
    int32_t ltid_pre_43904;
    
    ltid_pre_43904 = squot32(local_tid_43900, sext_i64_i32(Ty_40739) *
                             sext_i64_i32(Tx_40740));
    
    int32_t ltid_pre_43905;
    
    ltid_pre_43905 = squot32(local_tid_43900 - squot32(local_tid_43900,
                                                       sext_i64_i32(Ty_40739) *
                                                       sext_i64_i32(Tx_40740)) *
                             (sext_i64_i32(Ty_40739) * sext_i64_i32(Tx_40740)),
                             sext_i64_i32(Tx_40740));
    
    int32_t ltid_pre_43906;
    
    ltid_pre_43906 = local_tid_43900 - squot32(local_tid_43900,
                                               sext_i64_i32(Ty_40739) *
                                               sext_i64_i32(Tx_40740)) *
        (sext_i64_i32(Ty_40739) * sext_i64_i32(Tx_40740)) -
        squot32(local_tid_43900 - squot32(local_tid_43900,
                                          sext_i64_i32(Ty_40739) *
                                          sext_i64_i32(Tx_40740)) *
                (sext_i64_i32(Ty_40739) * sext_i64_i32(Tx_40740)),
                sext_i64_i32(Tx_40740)) * sext_i64_i32(Tx_40740);
    
    int32_t ltid_pre_43907;
    
    ltid_pre_43907 = squot32(local_tid_43900, sext_i64_i32(Tx_40740));
    
    int32_t ltid_pre_43908;
    
    ltid_pre_43908 = local_tid_43900 - squot32(local_tid_43900,
                                               sext_i64_i32(Tx_40740)) *
        sext_i64_i32(Tx_40740);
    
    int32_t ltid_pre_43909;
    
    ltid_pre_43909 = local_tid_43900;
    
    int64_t gid_zz_40750;
    
    gid_zz_40750 = squot64(sext_i32_i64(group_tid_43901), gridDim_y_40742 *
                           gridDim_x_40741);
    
    int64_t gid_y_40749;
    
    gid_y_40749 = squot64(sext_i32_i64(group_tid_43901) -
                          squot64(sext_i32_i64(group_tid_43901),
                                  gridDim_y_40742 * gridDim_x_40741) *
                          (gridDim_y_40742 * gridDim_x_40741), gridDim_x_40741);
    
    int64_t gid_x_40748;
    
    gid_x_40748 = sext_i32_i64(group_tid_43901) -
        squot64(sext_i32_i64(group_tid_43901), gridDim_y_40742 *
                gridDim_x_40741) * (gridDim_y_40742 * gridDim_x_40741) -
        squot64(sext_i32_i64(group_tid_43901) -
                squot64(sext_i32_i64(group_tid_43901), gridDim_y_40742 *
                        gridDim_x_40741) * (gridDim_y_40742 * gridDim_x_40741),
                gridDim_x_40741) * gridDim_x_40741;
    
    int64_t ii_40752;
    
    ii_40752 = (int64_t) 30 * gid_zz_40750;
    
    int64_t jj1_40753 = Ty_40739 * gid_y_40749;
    int64_t jj2_40754 = Tx_40740 * gid_x_40748;
    float mem_42656[30];
    int64_t ltid_y_40757 = sext_i32_i64(ltid_pre_43907);
    int64_t ltid_x_40755 = sext_i32_i64(ltid_pre_43908);
    int32_t ltid_flat_40756 = local_tid_43900;
    float mem_42650[30];
    
    for (int32_t i_42448 = 0; i_42448 < 30; i_42448++) {
        int64_t i_40765 = sext_i32_i64(i_42448);
        
        mem_42650[i_40765] = 0.0F;
    }
    for (int64_t i_43911 = 0; i_43911 < (int64_t) 30; i_43911++) {
        mem_42656[i_43911] = mem_42650[i_43911];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_42658;
    
    mem_42658 = (__local char *) mem_42658_backing_0;
    
    float loop_mem_42688[30];
    float mem_param_42659[30];
    
    for (int32_t i_1 = 0; i_1 < 30; i_1++)
        mem_param_42659[i_1] = mem_42656[i_1];
    for (int32_t i_42450 = 0; i_42450 < n_28685; i_42450++) {
        int64_t i_40770 = sext_i32_i64(i_42450);
        
        for (int64_t i_40773 = 0; i_40773 < count_shmem_40747; i_40773++) {
            int64_t offs_40786 = group_sizze_tile3d_40746 * i_40773;
            int64_t ltid_40776 = sext_i32_i64(ltid_pre_43909);
            int32_t ltid_flat_40775 = local_tid_43900;
            int64_t loc_ind_40787 = ltid_40776 + offs_40786;
            int64_t gtid_40788 = ii_40752 + loc_ind_40787;
            bool cond_40789 = slt64(gtid_40788, m_28682);
            float y_elem_40790;
            
            if (cond_40789) {
                float Y_elem_40792 = ((__global float *) mem_42646)[i_40770 *
                                                                    m_28682 +
                                                                    gtid_40788];
                
                y_elem_40790 = Y_elem_40792;
            } else {
                y_elem_40790 = 0.0F;
            }
            
            bool cond_40794 = slt64(loc_ind_40787, (int64_t) 30);
            int64_t y_loc_ind_40795;
            
            if (cond_40794) {
                y_loc_ind_40795 = loc_ind_40787;
            } else {
                y_loc_ind_40795 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, y_loc_ind_40795) && slt64(y_loc_ind_40795,
                                                             (int64_t) 30)) {
                ((__local float *) mem_42658)[y_loc_ind_40795] = y_elem_40790;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
        
        float mem_42687[30];
        int64_t ltid_y_40801 = sext_i32_i64(ltid_pre_43907);
        int64_t ltid_x_40799 = sext_i32_i64(ltid_pre_43908);
        int32_t ltid_flat_40800 = local_tid_43900;
        int64_t gtid_40828 = jj1_40753 + ltid_y_40801;
        int64_t gtid_40829 = jj2_40754 + ltid_x_40799;
        bool binop_x_40831 = slt64(gtid_40828, i32_res_28697);
        bool binop_y_40832 = slt64(gtid_40829, i32_res_28697);
        bool cond_40833 = binop_x_40831 && binop_y_40832;
        float mem_43628[30];
        
        if (cond_40833) {
            float x_40836 = ((__global float *) mem_42571)[i_40770 *
                                                           i32_res_28697 +
                                                           gtid_40828];
            float x_40838 = ((__global float *) mem_42575)[i_40770 *
                                                           i32_res_28697 +
                                                           gtid_40829];
            
            for (int32_t i_42449 = 0; i_42449 < 30; i_42449++) {
                int64_t i_40840 = sext_i32_i64(i_42449);
                int64_t gtid_40842 = ii_40752 + i_40840;
                bool cond_40843 = slt64(gtid_40842, m_28682);
                
                if (cond_40843) {
                    float inp_reg_var2zz_40845 = ((__local
                                                   float *) mem_42658)[i_40840];
                    float res_reg_var2zz_40846 = mem_param_42659[i_40840];
                    float x_40850 = x_40836 * x_40838;
                    bool isnan_res_40851;
                    
                    isnan_res_40851 = futrts_isnan32(inp_reg_var2zz_40845);
                    
                    float y_40852;
                    
                    if (isnan_res_40851) {
                        y_40852 = 0.0F;
                    } else {
                        y_40852 = 1.0F;
                    }
                    
                    float defunc_2_f_res_40853 = x_40850 * y_40852;
                    float defunc_1_op_res_40857 = res_reg_var2zz_40846 +
                          defunc_2_f_res_40853;
                    
                    mem_param_42659[i_40840] = defunc_1_op_res_40857;
                }
            }
            for (int64_t i_43917 = 0; i_43917 < (int64_t) 30; i_43917++) {
                mem_43628[i_43917] = mem_param_42659[i_43917];
            }
        } else {
            for (int64_t i_43918 = 0; i_43918 < (int64_t) 30; i_43918++) {
                mem_43628[i_43918] = mem_param_42659[i_43918];
            }
        }
        for (int64_t i_43919 = 0; i_43919 < (int64_t) 30; i_43919++) {
            mem_42687[i_43919] = mem_43628[i_43919];
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_43912[30];
        
        for (int32_t i_2 = 0; i_2 < 30; i_2++)
            mem_param_tmp_43912[i_2] = mem_42687[i_2];
        for (int32_t i_3 = 0; i_3 < 30; i_3++)
            mem_param_42659[i_3] = mem_param_tmp_43912[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 30; i_4++)
        loop_mem_42688[i_4] = mem_param_42659[i_4];
    
    float mem_42702[30 * 1 * 1];
    int64_t ltid_zz_40866 = sext_i32_i64(ltid_pre_43904);
    int64_t ltid_y_40865 = sext_i32_i64(ltid_pre_43905);
    int64_t ltid_x_40863 = sext_i32_i64(ltid_pre_43906);
    int32_t ltid_flat_40864 = local_tid_43900;
    float mem_42696[30 * 1 * 1];
    
    for (int32_t i_42452 = 0; i_42452 < 30; i_42452++) {
        int64_t i_40875 = sext_i32_i64(i_42452);
        
        for (int64_t i_43921 = 0; i_43921 < (int64_t) 1; i_43921++) {
            mem_42696[i_40875 + i_43921] = loop_mem_42688[i_40875 + i_43921];
        }
    }
    for (int64_t i_43922 = 0; i_43922 < (int64_t) 30; i_43922++) {
        for (int64_t i_43923 = 0; i_43923 < (int64_t) 1; i_43923++) {
            for (int64_t i_43924 = 0; i_43924 < (int64_t) 1; i_43924++) {
                mem_42702[i_43922 + i_43923 + i_43924] = mem_42696[i_43922 +
                                                                   i_43923 +
                                                                   i_43924];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t reg_tile_i_43925 = squot64(sext_i32_i64(local_tid_43900), Ty_40739 *
                                       Tx_40740);
    int64_t reg_tile_i_43926 = squot64(sext_i32_i64(local_tid_43900) -
                                       squot64(sext_i32_i64(local_tid_43900),
                                               Ty_40739 * Tx_40740) *
                                       (Ty_40739 * Tx_40740), Tx_40740);
    int64_t reg_tile_i_43927 = sext_i32_i64(local_tid_43900) -
            squot64(sext_i32_i64(local_tid_43900), Ty_40739 * Tx_40740) *
            (Ty_40739 * Tx_40740) - squot64(sext_i32_i64(local_tid_43900) -
                                            squot64(sext_i32_i64(local_tid_43900),
                                                    Ty_40739 * Tx_40740) *
                                            (Ty_40739 * Tx_40740), Tx_40740) *
            Tx_40740;
    int64_t tile_dim_start_43928 = (int64_t) 30 * (gid_zz_40750 +
                                                   reg_tile_i_43925);
    int64_t tile_dim_start_43929 = Ty_40739 * gid_y_40749 + reg_tile_i_43926;
    int64_t tile_dim_start_43930 = Tx_40740 * gid_x_40748 + reg_tile_i_43927;
    
    for (int64_t nest_i_43931 = 0; nest_i_43931 < (int64_t) 30;
         nest_i_43931++) {
        for (int64_t nest_i_43932 = 0; nest_i_43932 < (int64_t) 1;
             nest_i_43932++) {
            for (int64_t nest_i_43933 = 0; nest_i_43933 < (int64_t) 1;
                 nest_i_43933++) {
                if ((slt64(tile_dim_start_43928 + nest_i_43931, m_28682) &&
                     slt64(tile_dim_start_43929 + nest_i_43932,
                           i32_res_28697)) && slt64(tile_dim_start_43930 +
                                                    nest_i_43933,
                                                    i32_res_28697)) {
                    ((__global float *) mem_42706)[(tile_dim_start_43928 +
                                                    nest_i_43931) *
                                                   (i32_res_28697 *
                                                    i32_res_28697) +
                                                   (tile_dim_start_43929 +
                                                    nest_i_43932) *
                                                   i32_res_28697 +
                                                   (tile_dim_start_43930 +
                                                    nest_i_43933)] =
                        mem_42702[nest_i_43931 + nest_i_43932 + nest_i_43933];
                }
            }
        }
    }
    
  error_4:
    return;
}
__kernel void mainzisegmap_intragroup_40904(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_42846_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_42844_backing_aligned_1,
                                            int64_t N_28681, int64_t m_28682,
                                            int64_t i32_res_28691,
                                            int64_t i32_res_28697,
                                            int64_t gridDim_x_40898,
                                            int64_t full_tiles_40929,
                                            int64_t kk_41136, __global
                                            unsigned char *images_mem_42559,
                                            __global unsigned char *mem_42571,
                                            __global unsigned char *mem_43018)
{
    #define Ty_40885 (mainziTy_40882)
    #define Ry_40886 (mainziRy_40884)
    #define Tx_40887 (mainziTx_40881)
    #define Rx_40888 (mainziRx_40883)
    #define Tk_40889 (mainziTk_40880)
    #define tk_div_tx_40890 (sdiv_up64(mainziTk_40880, mainziTx_40881))
    #define tk_div_ty_40891 (sdiv_up64(mainziTk_40880, mainziTy_40882))
    #define TxRx_40892 (mainziTx_40881 * mainziRx_40883)
    #define TyRy_40893 (mainziTy_40882 * mainziRy_40884)
    #define a_loc_szz_40895 (mainziTk_40880 * (mainziTy_40882 * mainziRy_40884))
    #define b_loc_szz_40897 (mainziRx_40883 * (mainziTx_40881 * mainziTk_40880))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42846_backing_1 = (__local volatile
                                                           char *) mem_42846_backing_aligned_0;
    __local volatile char *restrict mem_42844_backing_0 = (__local volatile
                                                           char *) mem_42844_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44074;
    int32_t local_tid_44075;
    int64_t group_sizze_44078;
    int32_t wave_sizze_44077;
    int32_t group_tid_44076;
    
    global_tid_44074 = get_global_id(0);
    local_tid_44075 = get_local_id(0);
    group_sizze_44078 = get_local_size(0);
    wave_sizze_44077 = LOCKSTEP_WIDTH;
    group_tid_44076 = get_group_id(0);
    
    int32_t gid_flat_40904;
    
    gid_flat_40904 = group_tid_44076;
    
    int32_t ltid_pre_44079;
    
    ltid_pre_44079 = squot32(local_tid_44075, sext_i64_i32(Tx_40887));
    
    int32_t ltid_pre_44080;
    
    ltid_pre_44080 = local_tid_44075 - squot32(local_tid_44075,
                                               sext_i64_i32(Tx_40887)) *
        sext_i64_i32(Tx_40887);
    
    int64_t gid_y_40903;
    
    gid_y_40903 = squot64(sext_i32_i64(group_tid_44076), gridDim_x_40898);
    
    int64_t gid_x_40902;
    
    gid_x_40902 = sext_i32_i64(group_tid_44076) -
        squot64(sext_i32_i64(group_tid_44076), gridDim_x_40898) *
        gridDim_x_40898;
    
    int64_t iii_40905;
    
    iii_40905 = TyRy_40893 * gid_y_40903;
    
    int64_t jjj_40906 = TxRx_40892 * gid_x_40902;
    float mem_42842[Ry_40886 * Rx_40888];
    int64_t ltid_y_40909 = sext_i32_i64(ltid_pre_44079);
    int64_t ltid_x_40907 = sext_i32_i64(ltid_pre_44080);
    int32_t ltid_flat_40908 = local_tid_44075;
    float mem_42833[Ry_40886 * Rx_40888];
    
    for (int64_t i_40920 = 0; i_40920 < Ry_40886; i_40920++) {
        for (int64_t i_40923 = 0; i_40923 < Rx_40888; i_40923++) {
            mem_42833[i_40920 * Rx_40888 + i_40923] = 0.0F;
        }
    }
    for (int64_t i_44083 = 0; i_44083 < Ry_40886; i_44083++) {
        for (int64_t i_44084 = 0; i_44084 < Rx_40888; i_44084++) {
            mem_42842[i_44083 * Rx_40888 + i_44084] = mem_42833[i_44083 *
                                                                Rx_40888 +
                                                                i_44084];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_42844;
    
    mem_42844 = (__local char *) mem_42844_backing_0;
    
    __local char *mem_42846;
    
    mem_42846 = (__local char *) mem_42846_backing_1;
    
    float mem_42917[Ry_40886];
    float mem_42921[Rx_40888];
    float loop_mem_42933[Ry_40886 * Rx_40888];
    float mem_param_42847[Ry_40886 * Rx_40888];
    
    for (int32_t i_2 = 0; i_2 < Ry_40886 * Rx_40888; i_2++)
        mem_param_42847[i_2] = mem_42842[i_2];
    for (int64_t i_40930 = 0; i_40930 < full_tiles_40929; i_40930++) {
        int64_t kk_40934 = Tk_40889 * i_40930;
        
        for (int64_t i_40935 = 0; i_40935 < Ry_40886; i_40935++) {
            int64_t binop_y_40958 = Ty_40885 * i_40935;
            
            for (int64_t i_40937 = 0; i_40937 < tk_div_tx_40890; i_40937++) {
                int64_t binop_y_40956 = Tx_40887 * i_40937;
                int64_t ltid_x_40939 = sext_i32_i64(ltid_pre_44079);
                int64_t ltid_y_40940 = sext_i32_i64(ltid_pre_44080);
                int32_t ltid_flat_40941 = local_tid_44075;
                int64_t k_40957 = ltid_y_40940 + binop_y_40956;
                int64_t i_40959 = ltid_x_40939 + binop_y_40958;
                int64_t gtid_40960 = iii_40905 + i_40959;
                int64_t A_col_idx_40961 = kk_40934 + k_40957;
                bool cond_40962 = slt64(gtid_40960, m_28682);
                float A_elem_40963;
                
                if (cond_40962) {
                    float A_elem_40965 = ((__global
                                           float *) images_mem_42559)[gtid_40960 *
                                                                      N_28681 +
                                                                      A_col_idx_40961];
                    
                    A_elem_40963 = A_elem_40965;
                } else {
                    A_elem_40963 = 0.0F;
                }
                
                bool cond_40967 = slt64(k_40957, Tk_40889);
                int64_t a_loc_ind_40968;
                
                if (cond_40967) {
                    int64_t binop_y_40969 = Tk_40889 * i_40959;
                    int64_t loc_fi_40970 = k_40957 + binop_y_40969;
                    
                    a_loc_ind_40968 = loc_fi_40970;
                } else {
                    a_loc_ind_40968 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, a_loc_ind_40968) &&
                    slt64(a_loc_ind_40968, a_loc_szz_40895)) {
                    ((__local float *) mem_42844)[a_loc_ind_40968] =
                        A_elem_40963;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_40975 = 0; i_40975 < tk_div_ty_40891; i_40975++) {
            int64_t binop_y_40996 = Ty_40885 * i_40975;
            
            for (int64_t i_40977 = 0; i_40977 < Rx_40888; i_40977++) {
                int64_t binop_y_40998 = Tx_40887 * i_40977;
                int64_t ltid_x_40979 = sext_i32_i64(ltid_pre_44079);
                int64_t ltid_y_40980 = sext_i32_i64(ltid_pre_44080);
                int32_t ltid_flat_40981 = local_tid_44075;
                int64_t k_40997 = ltid_x_40979 + binop_y_40996;
                int64_t j_40999 = ltid_y_40980 + binop_y_40998;
                int64_t gtid_41000 = jjj_40906 + j_40999;
                int64_t B_row_idx_41001 = kk_40934 + k_40997;
                bool cond_41002 = slt64(gtid_41000, i32_res_28697);
                float B_elem_41003;
                
                if (cond_41002) {
                    float B_elem_41005 = ((__global
                                           float *) mem_42571)[B_row_idx_41001 *
                                                               i32_res_28697 +
                                                               gtid_41000];
                    
                    B_elem_41003 = B_elem_41005;
                } else {
                    B_elem_41003 = 0.0F;
                }
                
                bool cond_41007 = slt64(k_40997, Tk_40889);
                int64_t b_loc_ind_41008;
                
                if (cond_41007) {
                    int64_t binop_y_41009 = TxRx_40892 * k_40997;
                    int64_t loc_fi_41010 = j_40999 + binop_y_41009;
                    
                    b_loc_ind_41008 = loc_fi_41010;
                } else {
                    b_loc_ind_41008 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, b_loc_ind_41008) &&
                    slt64(b_loc_ind_41008, b_loc_szz_40897)) {
                    ((__local float *) mem_42846)[b_loc_ind_41008] =
                        B_elem_41003;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_42932[Ry_40886 * Rx_40888];
        float mem_param_42904[Ry_40886 * Rx_40888];
        
        for (int32_t i_3 = 0; i_3 < Ry_40886 * Rx_40888; i_3++)
            mem_param_42904[i_3] = mem_param_42847[i_3];
        for (int64_t i_41015 = 0; i_41015 < Tk_40889; i_41015++) {
            int64_t binop_y_41054 = TxRx_40892 * i_41015;
            int64_t ltid_y_41019 = sext_i32_i64(ltid_pre_44079);
            int64_t ltid_x_41017 = sext_i32_i64(ltid_pre_44080);
            int32_t ltid_flat_41018 = local_tid_44075;
            float mem_42907[Ry_40886];
            float mem_42909[Rx_40888];
            int64_t binop_x_41045 = Ry_40886 * ltid_y_41019;
            
            for (int64_t i_41043 = 0; i_41043 < Ry_40886; i_41043++) {
                int64_t binop_x_41046 = i_41043 + binop_x_41045;
                int64_t binop_y_41047 = Tk_40889 * binop_x_41046;
                int64_t a_loc_ind_41048 = i_41015 + binop_y_41047;
                
                for (int64_t i_44096 = 0; i_44096 < (int64_t) 1; i_44096++) {
                    mem_42907[i_41043 + i_44096] = ((__local
                                                     float *) mem_42844)[a_loc_ind_41048 +
                                                                         i_44096];
                }
            }
            
            int64_t binop_y_41056 = Rx_40888 * ltid_x_41017;
            
            for (int64_t i_41052 = 0; i_41052 < Rx_40888; i_41052++) {
                int64_t binop_x_41055 = i_41052 + binop_y_41054;
                int64_t b_loc_ind_41057 = binop_x_41055 + binop_y_41056;
                
                for (int64_t i_44098 = 0; i_44098 < (int64_t) 1; i_44098++) {
                    mem_42909[i_41052 + i_44098] = ((__local
                                                     float *) mem_42846)[b_loc_ind_41057 +
                                                                         i_44098];
                }
            }
            for (int64_t i_44099 = 0; i_44099 < Ry_40886; i_44099++) {
                mem_42917[i_44099] = mem_42907[i_44099];
            }
            for (int64_t i_44100 = 0; i_44100 < Rx_40888; i_44100++) {
                mem_42921[i_44100] = mem_42909[i_44100];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_42931[Ry_40886 * Rx_40888];
            int64_t ltid_y_41064 = sext_i32_i64(ltid_pre_44079);
            int64_t ltid_x_41062 = sext_i32_i64(ltid_pre_44080);
            int32_t ltid_flat_41063 = local_tid_44075;
            int64_t binop_y_41107 = Ry_40886 * ltid_y_41064;
            int64_t binop_y_41111 = Rx_40888 * ltid_x_41062;
            
            for (int64_t i_41101 = 0; i_41101 < Ry_40886; i_41101++) {
                int64_t binop_x_41106 = iii_40905 + i_41101;
                int64_t cmpop_x_41108 = binop_x_41106 + binop_y_41107;
                bool binop_x_41109 = slt64(cmpop_x_41108, m_28682);
                
                for (int64_t i_41104 = 0; i_41104 < Rx_40888; i_41104++) {
                    int64_t binop_x_41110 = jjj_40906 + i_41104;
                    int64_t cmpop_x_41112 = binop_x_41110 + binop_y_41111;
                    bool binop_y_41113 = slt64(cmpop_x_41112, i32_res_28697);
                    bool cond_41114 = binop_x_41109 && binop_y_41113;
                    
                    if (cond_41114) {
                        float a_41116 = mem_42917[i_41101];
                        float c_41118 = mem_param_42904[i_41101 * Rx_40888 +
                                                        i_41104];
                        bool isnan_res_41121;
                        
                        isnan_res_41121 = futrts_isnan32(a_41116);
                        
                        float defunc_1_f_res_41122;
                        
                        if (isnan_res_41121) {
                            defunc_1_f_res_41122 = 0.0F;
                        } else {
                            float b_41117 = mem_42921[i_41104];
                            float defunc_1_f_res_f_res_41123 = a_41116 *
                                  b_41117;
                            
                            defunc_1_f_res_41122 = defunc_1_f_res_f_res_41123;
                        }
                        
                        float defunc_1_op_res_41127 = c_41118 +
                              defunc_1_f_res_41122;
                        
                        mem_param_42904[i_41101 * Rx_40888 + i_41104] =
                            defunc_1_op_res_41127;
                    }
                }
            }
            for (int64_t i_44103 = 0; i_44103 < Ry_40886; i_44103++) {
                for (int64_t i_44104 = 0; i_44104 < Rx_40888; i_44104++) {
                    mem_42931[i_44103 * Rx_40888 + i_44104] =
                        mem_param_42904[i_44103 * Rx_40888 + i_44104];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44093[Ry_40886 * Rx_40888];
            
            for (int32_t i_4 = 0; i_4 < Ry_40886 * Rx_40888; i_4++)
                mem_param_tmp_44093[i_4] = mem_42931[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_40886 * Rx_40888; i_5++)
                mem_param_42904[i_5] = mem_param_tmp_44093[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_40886 * Rx_40888; i_6++)
            loop_mem_42932[i_6] = mem_param_42904[i_6];
        
        float mem_param_tmp_44085[Ry_40886 * Rx_40888];
        
        for (int32_t i_7 = 0; i_7 < Ry_40886 * Rx_40888; i_7++)
            mem_param_tmp_44085[i_7] = loop_mem_42932[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_40886 * Rx_40888; i_8++)
            mem_param_42847[i_8] = mem_param_tmp_44085[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_40886 * Rx_40888; i_9++)
        loop_mem_42933[i_9] = mem_param_42847[i_9];
    for (int64_t i_41137 = 0; i_41137 < Ry_40886; i_41137++) {
        int64_t binop_y_41162 = Ty_40885 * i_41137;
        
        for (int64_t i_41139 = 0; i_41139 < tk_div_tx_40890; i_41139++) {
            int64_t binop_y_41160 = Tx_40887 * i_41139;
            int64_t ltid_x_41141 = sext_i32_i64(ltid_pre_44079);
            int64_t ltid_y_41142 = sext_i32_i64(ltid_pre_44080);
            int32_t ltid_flat_41143 = local_tid_44075;
            int64_t k_41161 = ltid_y_41142 + binop_y_41160;
            int64_t i_41163 = ltid_x_41141 + binop_y_41162;
            int64_t gtid_41164 = iii_40905 + i_41163;
            int64_t A_col_idx_41165 = kk_41136 + k_41161;
            bool binop_x_41166 = slt64(gtid_41164, m_28682);
            bool binop_y_41167 = slt64(A_col_idx_41165, i32_res_28691);
            bool cond_41168 = binop_x_41166 && binop_y_41167;
            float A_elem_41169;
            
            if (cond_41168) {
                float A_elem_41171 = ((__global
                                       float *) images_mem_42559)[gtid_41164 *
                                                                  N_28681 +
                                                                  A_col_idx_41165];
                
                A_elem_41169 = A_elem_41171;
            } else {
                A_elem_41169 = 0.0F;
            }
            
            bool cond_41173 = slt64(k_41161, Tk_40889);
            int64_t a_loc_ind_41174;
            
            if (cond_41173) {
                int64_t binop_y_41175 = Tk_40889 * i_41163;
                int64_t loc_fi_41176 = k_41161 + binop_y_41175;
                
                a_loc_ind_41174 = loc_fi_41176;
            } else {
                a_loc_ind_41174 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, a_loc_ind_41174) && slt64(a_loc_ind_41174,
                                                             a_loc_szz_40895)) {
                ((__local float *) mem_42844)[a_loc_ind_41174] = A_elem_41169;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_41181 = 0; i_41181 < tk_div_ty_40891; i_41181++) {
        int64_t binop_y_41204 = Ty_40885 * i_41181;
        
        for (int64_t i_41183 = 0; i_41183 < Rx_40888; i_41183++) {
            int64_t binop_y_41206 = Tx_40887 * i_41183;
            int64_t ltid_x_41185 = sext_i32_i64(ltid_pre_44079);
            int64_t ltid_y_41186 = sext_i32_i64(ltid_pre_44080);
            int32_t ltid_flat_41187 = local_tid_44075;
            int64_t k_41205 = ltid_x_41185 + binop_y_41204;
            int64_t j_41207 = ltid_y_41186 + binop_y_41206;
            int64_t gtid_41208 = jjj_40906 + j_41207;
            int64_t B_row_idx_41209 = kk_41136 + k_41205;
            bool binop_x_41210 = slt64(gtid_41208, i32_res_28697);
            bool binop_y_41211 = slt64(B_row_idx_41209, i32_res_28691);
            bool cond_41212 = binop_x_41210 && binop_y_41211;
            float B_elem_41213;
            
            if (cond_41212) {
                float B_elem_41215 = ((__global
                                       float *) mem_42571)[B_row_idx_41209 *
                                                           i32_res_28697 +
                                                           gtid_41208];
                
                B_elem_41213 = B_elem_41215;
            } else {
                B_elem_41213 = 0.0F;
            }
            
            bool cond_41217 = slt64(k_41205, Tk_40889);
            int64_t b_loc_ind_41218;
            
            if (cond_41217) {
                int64_t binop_y_41219 = TxRx_40892 * k_41205;
                int64_t loc_fi_41220 = j_41207 + binop_y_41219;
                
                b_loc_ind_41218 = loc_fi_41220;
            } else {
                b_loc_ind_41218 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, b_loc_ind_41218) && slt64(b_loc_ind_41218,
                                                             b_loc_szz_40897)) {
                ((__local float *) mem_42846)[b_loc_ind_41218] = B_elem_41213;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_42999[Ry_40886];
    float mem_43003[Rx_40888];
    float mem_43013[Ry_40886 * Rx_40888];
    float loop_mem_43015[Ry_40886 * Rx_40888];
    float mem_param_42986[Ry_40886 * Rx_40888];
    
    for (int32_t i_10 = 0; i_10 < Ry_40886 * Rx_40888; i_10++)
        mem_param_42986[i_10] = loop_mem_42933[i_10];
    for (int64_t i_41225 = 0; i_41225 < Tk_40889; i_41225++) {
        int64_t cmpop_x_41227 = kk_41136 + i_41225;
        bool cond_41228 = slt64(cmpop_x_41227, i32_res_28691);
        float mem_43646[Ry_40886 * Rx_40888];
        
        if (cond_41228) {
            int64_t binop_y_41266 = TxRx_40892 * i_41225;
            int64_t bytes_42988 = (int64_t) 4 * Ry_40886;
            int64_t bytes_42990 = (int64_t) 4 * Rx_40888;
            int64_t ltid_y_41231 = sext_i32_i64(ltid_pre_44079);
            int64_t ltid_x_41229 = sext_i32_i64(ltid_pre_44080);
            int32_t ltid_flat_41230 = local_tid_44075;
            float mem_42989[Ry_40886];
            float mem_42991[Rx_40888];
            int64_t binop_x_41257 = Ry_40886 * ltid_y_41231;
            
            for (int64_t i_41255 = 0; i_41255 < Ry_40886; i_41255++) {
                int64_t binop_x_41258 = i_41255 + binop_x_41257;
                int64_t binop_y_41259 = Tk_40889 * binop_x_41258;
                int64_t a_loc_ind_41260 = i_41225 + binop_y_41259;
                
                for (int64_t i_44112 = 0; i_44112 < (int64_t) 1; i_44112++) {
                    mem_42989[i_41255 + i_44112] = ((__local
                                                     float *) mem_42844)[a_loc_ind_41260 +
                                                                         i_44112];
                }
            }
            
            int64_t binop_y_41268 = Rx_40888 * ltid_x_41229;
            
            for (int64_t i_41264 = 0; i_41264 < Rx_40888; i_41264++) {
                int64_t binop_x_41267 = i_41264 + binop_y_41266;
                int64_t b_loc_ind_41269 = binop_x_41267 + binop_y_41268;
                
                for (int64_t i_44114 = 0; i_44114 < (int64_t) 1; i_44114++) {
                    mem_42991[i_41264 + i_44114] = ((__local
                                                     float *) mem_42846)[b_loc_ind_41269 +
                                                                         i_44114];
                }
            }
            for (int64_t i_44115 = 0; i_44115 < Ry_40886; i_44115++) {
                mem_42999[i_44115] = mem_42989[i_44115];
            }
            for (int64_t i_44116 = 0; i_44116 < Rx_40888; i_44116++) {
                mem_43003[i_44116] = mem_42991[i_44116];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_41276 = sext_i32_i64(ltid_pre_44079);
            int64_t ltid_x_41274 = sext_i32_i64(ltid_pre_44080);
            int32_t ltid_flat_41275 = local_tid_44075;
            int64_t binop_y_41319 = Ry_40886 * ltid_y_41276;
            int64_t binop_y_41323 = Rx_40888 * ltid_x_41274;
            
            for (int64_t i_41313 = 0; i_41313 < Ry_40886; i_41313++) {
                int64_t binop_x_41318 = iii_40905 + i_41313;
                int64_t cmpop_x_41320 = binop_x_41318 + binop_y_41319;
                bool binop_x_41321 = slt64(cmpop_x_41320, m_28682);
                
                for (int64_t i_41316 = 0; i_41316 < Rx_40888; i_41316++) {
                    int64_t binop_x_41322 = jjj_40906 + i_41316;
                    int64_t cmpop_x_41324 = binop_x_41322 + binop_y_41323;
                    bool binop_y_41325 = slt64(cmpop_x_41324, i32_res_28697);
                    bool cond_41326 = binop_x_41321 && binop_y_41325;
                    
                    if (cond_41326) {
                        float a_41328 = mem_42999[i_41313];
                        float c_41330 = mem_param_42986[i_41313 * Rx_40888 +
                                                        i_41316];
                        bool isnan_res_41333;
                        
                        isnan_res_41333 = futrts_isnan32(a_41328);
                        
                        float defunc_1_f_res_41334;
                        
                        if (isnan_res_41333) {
                            defunc_1_f_res_41334 = 0.0F;
                        } else {
                            float b_41329 = mem_43003[i_41316];
                            float defunc_1_f_res_f_res_41335 = a_41328 *
                                  b_41329;
                            
                            defunc_1_f_res_41334 = defunc_1_f_res_f_res_41335;
                        }
                        
                        float defunc_1_op_res_41339 = c_41330 +
                              defunc_1_f_res_41334;
                        
                        mem_param_42986[i_41313 * Rx_40888 + i_41316] =
                            defunc_1_op_res_41339;
                    }
                }
            }
            for (int64_t i_44119 = 0; i_44119 < Ry_40886; i_44119++) {
                for (int64_t i_44120 = 0; i_44120 < Rx_40888; i_44120++) {
                    mem_43013[i_44119 * Rx_40888 + i_44120] =
                        mem_param_42986[i_44119 * Rx_40888 + i_44120];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44121 = 0; i_44121 < Ry_40886; i_44121++) {
                for (int64_t i_44122 = 0; i_44122 < Rx_40888; i_44122++) {
                    mem_43646[i_44121 * Rx_40888 + i_44122] =
                        mem_43013[i_44121 * Rx_40888 + i_44122];
                }
            }
        } else {
            for (int64_t i_44123 = 0; i_44123 < Ry_40886; i_44123++) {
                for (int64_t i_44124 = 0; i_44124 < Rx_40888; i_44124++) {
                    mem_43646[i_44123 * Rx_40888 + i_44124] =
                        mem_param_42986[i_44123 * Rx_40888 + i_44124];
                }
            }
        }
        
        float mem_param_tmp_44109[Ry_40886 * Rx_40888];
        
        for (int32_t i_11 = 0; i_11 < Ry_40886 * Rx_40888; i_11++)
            mem_param_tmp_44109[i_11] = mem_43646[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_40886 * Rx_40888; i_12++)
            mem_param_42986[i_12] = mem_param_tmp_44109[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_40886 * Rx_40888; i_13++)
        loop_mem_43015[i_13] = mem_param_42986[i_13];
    
    int64_t reg_tile_i_44125 = squot64(sext_i32_i64(local_tid_44075), Tx_40887);
    int64_t reg_tile_i_44126 = sext_i32_i64(local_tid_44075) -
            squot64(sext_i32_i64(local_tid_44075), Tx_40887) * Tx_40887;
    int64_t tile_dim_start_44127 = Ry_40886 * (Ty_40885 * gid_y_40903 +
                                               reg_tile_i_44125);
    int64_t tile_dim_start_44128 = Rx_40888 * (Tx_40887 * gid_x_40902 +
                                               reg_tile_i_44126);
    
    for (int64_t nest_i_44129 = 0; nest_i_44129 < Ry_40886; nest_i_44129++) {
        for (int64_t nest_i_44130 = 0; nest_i_44130 < Rx_40888;
             nest_i_44130++) {
            if (slt64(tile_dim_start_44127 + nest_i_44129, m_28682) &&
                slt64(tile_dim_start_44128 + nest_i_44130, i32_res_28697)) {
                ((__global float *) mem_43018)[(tile_dim_start_44127 +
                                                nest_i_44129) * i32_res_28697 +
                                               (tile_dim_start_44128 +
                                                nest_i_44130)] =
                    loop_mem_43015[nest_i_44129 * Rx_40888 + nest_i_44130];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_40885
    #undef Ry_40886
    #undef Tx_40887
    #undef Rx_40888
    #undef Tk_40889
    #undef tk_div_tx_40890
    #undef tk_div_ty_40891
    #undef TxRx_40892
    #undef TyRy_40893
    #undef a_loc_szz_40895
    #undef b_loc_szz_40897
}
__kernel void mainzisegmap_intragroup_41353(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43076_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43067_backing_aligned_1,
                                            int64_t m_28682,
                                            int64_t i32_res_28697,
                                            int64_t num_groups_y_41351,
                                            int64_t num_whole_tiles_41369,
                                            int64_t residual_input_41496,
                                            unsigned char cond_41497, __global
                                            unsigned char *defunc_3_map_res_mem_43028,
                                            __global unsigned char *mem_43057,
                                            __global unsigned char *mem_43084)
{
    #define tile_sizze_41348 (mainzitile_sizze_41347)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43076_backing_5 = (__local volatile
                                                           char *) mem_43076_backing_aligned_0;
    __local volatile char *restrict mem_43067_backing_0 = (__local volatile
                                                           char *) mem_43067_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44206;
    int32_t local_tid_44207;
    int64_t group_sizze_44210;
    int32_t wave_sizze_44209;
    int32_t group_tid_44208;
    
    global_tid_44206 = get_global_id(0);
    local_tid_44207 = get_local_id(0);
    group_sizze_44210 = get_local_size(0);
    wave_sizze_44209 = LOCKSTEP_WIDTH;
    group_tid_44208 = get_group_id(0);
    
    int32_t gid_flat_41353;
    
    gid_flat_41353 = group_tid_44208;
    
    int32_t ltid_pre_44211;
    
    ltid_pre_44211 = squot32(local_tid_44207, sext_i64_i32(tile_sizze_41348));
    
    int32_t ltid_pre_44212;
    
    ltid_pre_44212 = local_tid_44207 - squot32(local_tid_44207,
                                               sext_i64_i32(tile_sizze_41348)) *
        sext_i64_i32(tile_sizze_41348);
    
    int64_t gid_x_41345;
    
    gid_x_41345 = squot64(sext_i32_i64(group_tid_44208), num_groups_y_41351);
    
    int64_t gid_y_41346;
    
    gid_y_41346 = sext_i32_i64(group_tid_44208) -
        squot64(sext_i32_i64(group_tid_44208), num_groups_y_41351) *
        num_groups_y_41351;
    
    float mem_43062[1];
    int64_t ltid_y_41372 = sext_i32_i64(ltid_pre_44211);
    int64_t ltid_x_41370 = sext_i32_i64(ltid_pre_44212);
    int32_t ltid_flat_41371 = local_tid_44207;
    
    if (slt64(ltid_y_41372, tile_sizze_41348) && slt64(ltid_x_41370,
                                                       tile_sizze_41348)) {
        mem_43062[(int64_t) 0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_41455 = gid_x_41345 * tile_sizze_41348;
    int64_t binop_x_41470 = gid_y_41346 * tile_sizze_41348;
    __local char *mem_43067;
    
    mem_43067 = (__local char *) mem_43067_backing_0;
    
    float accs_mem_43072[1];
    float mem_param_43063[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43063[i_1] = mem_43062[i_1];
    for (int64_t tile_id_41381 = 0; tile_id_41381 < num_whole_tiles_41369;
         tile_id_41381++) {
        int64_t binop_x_41453 = tile_sizze_41348 * tile_id_41381;
        int64_t ltid_y_41384 = sext_i32_i64(ltid_pre_44211);
        int64_t ltid_x_41382 = sext_i32_i64(ltid_pre_44212);
        int32_t ltid_flat_41383 = local_tid_44207;
        int64_t j_41454 = ltid_x_41382 + binop_x_41453;
        int64_t gtid_41456 = ltid_y_41384 + binop_x_41455;
        bool binop_x_41461 = slt64(j_41454, i32_res_28697);
        bool binop_y_41462 = slt64(gtid_41456, m_28682);
        bool cond_41463 = binop_x_41461 && binop_y_41462;
        float pre_41464;
        
        if (cond_41463) {
            float x_41465 = ((__global
                              float *) defunc_3_map_res_mem_43028)[gtid_41456 *
                                                                   i32_res_28697 +
                                                                   j_41454];
            
            pre_41464 = x_41465;
        } else {
            pre_41464 = 0.0F;
        }
        ((__local float *) mem_43067)[ltid_y_41384 * tile_sizze_41348 +
                                      ltid_x_41382] = pre_41464;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43071[1];
        int64_t ltid_y_41416 = sext_i32_i64(ltid_pre_44211);
        int64_t ltid_x_41414 = sext_i32_i64(ltid_pre_44212);
        int32_t ltid_flat_41415 = local_tid_44207;
        int64_t gtid_41469 = ltid_y_41416 + binop_x_41455;
        int64_t gtid_41471 = ltid_x_41414 + binop_x_41470;
        float acc_41474 = mem_param_43063[(int64_t) 0];
        bool binop_x_41478 = slt64(gtid_41469, m_28682);
        bool binop_y_41479 = slt64(gtid_41471, i32_res_28697);
        bool cond_41480 = binop_x_41478 && binop_y_41479;
        float acc_41481;
        
        if (cond_41480) {
            float x_41482;
            float redout_42493 = acc_41474;
            
            for (int64_t i_42494 = 0; i_42494 < tile_sizze_41348; i_42494++) {
                float x_41486 = ((__local float *) mem_43067)[ltid_y_41416 *
                                                              tile_sizze_41348 +
                                                              i_42494];
                int64_t slice_42545 = binop_x_41453 + i_42494;
                float x_41487 = ((__global float *) mem_43057)[slice_42545 *
                                                               (i32_res_28697 *
                                                                m_28682) +
                                                               gtid_41469 *
                                                               i32_res_28697 +
                                                               gtid_41471];
                float defunc_1_f_res_41488 = x_41486 * x_41487;
                float defunc_1_op_res_41485 = defunc_1_f_res_41488 +
                      redout_42493;
                float redout_tmp_44215 = defunc_1_op_res_41485;
                
                redout_42493 = redout_tmp_44215;
            }
            x_41482 = redout_42493;
            acc_41481 = x_41482;
        } else {
            acc_41481 = acc_41474;
        }
        mem_43071[(int64_t) 0] = acc_41481;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44213[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44213[i_2] = mem_43071[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43063[i_3] = mem_param_tmp_44213[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43072[i_4] = mem_param_43063[i_4];
    
    __local char *mem_43076;
    
    mem_43076 = (__local char *) mem_43076_backing_5;
    
    float mem_43080[1];
    float mem_43660[1];
    
    if (cond_41497) {
        mem_43660[(int64_t) 0] = accs_mem_43072[(int64_t) 0];
    } else {
        int64_t binop_x_41570 = tile_sizze_41348 * num_whole_tiles_41369;
        int64_t ltid_y_41500 = sext_i32_i64(ltid_pre_44211);
        int64_t ltid_x_41498 = sext_i32_i64(ltid_pre_44212);
        int32_t ltid_flat_41499 = local_tid_44207;
        int64_t j_41571 = ltid_x_41498 + binop_x_41570;
        int64_t gtid_41573 = binop_x_41455 + ltid_y_41500;
        bool binop_x_41578 = slt64(j_41571, i32_res_28697);
        bool binop_y_41579 = slt64(gtid_41573, m_28682);
        bool cond_41580 = binop_x_41578 && binop_y_41579;
        float pre_41581;
        
        if (cond_41580) {
            float x_41582 = ((__global
                              float *) defunc_3_map_res_mem_43028)[gtid_41573 *
                                                                   i32_res_28697 +
                                                                   j_41571];
            
            pre_41581 = x_41582;
        } else {
            pre_41581 = 0.0F;
        }
        ((__local float *) mem_43076)[ltid_y_41500 * tile_sizze_41348 +
                                      ltid_x_41498] = pre_41581;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_y_41533 = sext_i32_i64(ltid_pre_44211);
        int64_t ltid_x_41531 = sext_i32_i64(ltid_pre_44212);
        int32_t ltid_flat_41532 = local_tid_44207;
        int64_t gtid_41587 = binop_x_41455 + ltid_y_41533;
        int64_t gtid_41589 = binop_x_41470 + ltid_x_41531;
        float acc_41592 = accs_mem_43072[(int64_t) 0];
        bool binop_x_41596 = slt64(gtid_41587, m_28682);
        bool binop_y_41597 = slt64(gtid_41589, i32_res_28697);
        bool cond_41598 = binop_x_41596 && binop_y_41597;
        float acc_41599;
        
        if (cond_41598) {
            float x_41600;
            float redout_42495 = acc_41592;
            
            for (int64_t i_42496 = 0; i_42496 < residual_input_41496;
                 i_42496++) {
                float x_41604 = ((__local float *) mem_43076)[ltid_y_41533 *
                                                              tile_sizze_41348 +
                                                              i_42496];
                int64_t slice_42546 = binop_x_41570 + i_42496;
                float x_41605 = ((__global float *) mem_43057)[slice_42546 *
                                                               (i32_res_28697 *
                                                                m_28682) +
                                                               gtid_41587 *
                                                               i32_res_28697 +
                                                               gtid_41589];
                float defunc_1_f_res_41606 = x_41604 * x_41605;
                float defunc_1_op_res_41603 = defunc_1_f_res_41606 +
                      redout_42495;
                float redout_tmp_44216 = defunc_1_op_res_41603;
                
                redout_42495 = redout_tmp_44216;
            }
            x_41600 = redout_42495;
            acc_41599 = x_41600;
        } else {
            acc_41599 = acc_41592;
        }
        mem_43080[(int64_t) 0] = acc_41599;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43660[(int64_t) 0] = mem_43080[(int64_t) 0];
    }
    
    int64_t thread_out_index_44217 = gid_x_41345 * tile_sizze_41348 +
            sext_i32_i64(ltid_pre_44211);
    int64_t thread_out_index_44218 = gid_y_41346 * tile_sizze_41348 +
            sext_i32_i64(ltid_pre_44212);
    
    if (slt64(thread_out_index_44217, m_28682) && slt64(thread_out_index_44218,
                                                        i32_res_28697)) {
        ((__global float *) mem_43084)[thread_out_index_44217 * i32_res_28697 +
                                       thread_out_index_44218] =
            mem_43660[(int64_t) 0];
    }
    
  error_5:
    return;
    #undef tile_sizze_41348
}
__kernel void mainzisegmap_intragroup_41645(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43136_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43134_backing_aligned_1,
                                            int64_t N_28681, int64_t m_28682,
                                            int64_t i32_res_28697,
                                            int64_t gridDim_x_41639,
                                            int64_t full_tiles_41670,
                                            int64_t kk_41873, __global
                                            unsigned char *defunc_4_map_res_mem_43094,
                                            __global unsigned char *mem_43118,
                                            __global unsigned char *mem_43308)
{
    #define Ty_41626 (mainziTy_41623)
    #define Ry_41627 (mainziRy_41625)
    #define Tx_41628 (mainziTx_41622)
    #define Rx_41629 (mainziRx_41624)
    #define Tk_41630 (mainziTk_41621)
    #define tk_div_tx_41631 (sdiv_up64(mainziTk_41621, mainziTx_41622))
    #define tk_div_ty_41632 (sdiv_up64(mainziTk_41621, mainziTy_41623))
    #define TxRx_41633 (mainziTx_41622 * mainziRx_41624)
    #define TyRy_41634 (mainziTy_41623 * mainziRy_41625)
    #define a_loc_szz_41636 (mainziTk_41621 * (mainziTy_41623 * mainziRy_41625))
    #define b_loc_szz_41638 (mainziRx_41624 * (mainziTx_41622 * mainziTk_41621))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43136_backing_1 = (__local volatile
                                                           char *) mem_43136_backing_aligned_0;
    __local volatile char *restrict mem_43134_backing_0 = (__local volatile
                                                           char *) mem_43134_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44294;
    int32_t local_tid_44295;
    int64_t group_sizze_44298;
    int32_t wave_sizze_44297;
    int32_t group_tid_44296;
    
    global_tid_44294 = get_global_id(0);
    local_tid_44295 = get_local_id(0);
    group_sizze_44298 = get_local_size(0);
    wave_sizze_44297 = LOCKSTEP_WIDTH;
    group_tid_44296 = get_group_id(0);
    
    int32_t gid_flat_41645;
    
    gid_flat_41645 = group_tid_44296;
    
    int32_t ltid_pre_44299;
    
    ltid_pre_44299 = squot32(local_tid_44295, sext_i64_i32(Tx_41628));
    
    int32_t ltid_pre_44300;
    
    ltid_pre_44300 = local_tid_44295 - squot32(local_tid_44295,
                                               sext_i64_i32(Tx_41628)) *
        sext_i64_i32(Tx_41628);
    
    int64_t gid_y_41644;
    
    gid_y_41644 = squot64(sext_i32_i64(group_tid_44296), gridDim_x_41639);
    
    int64_t gid_x_41643;
    
    gid_x_41643 = sext_i32_i64(group_tid_44296) -
        squot64(sext_i32_i64(group_tid_44296), gridDim_x_41639) *
        gridDim_x_41639;
    
    int64_t iii_41646;
    
    iii_41646 = TyRy_41634 * gid_y_41644;
    
    int64_t jjj_41647 = TxRx_41633 * gid_x_41643;
    float mem_43132[Ry_41627 * Rx_41629];
    int64_t ltid_y_41650 = sext_i32_i64(ltid_pre_44299);
    int64_t ltid_x_41648 = sext_i32_i64(ltid_pre_44300);
    int32_t ltid_flat_41649 = local_tid_44295;
    float mem_43123[Ry_41627 * Rx_41629];
    
    for (int64_t i_41661 = 0; i_41661 < Ry_41627; i_41661++) {
        for (int64_t i_41664 = 0; i_41664 < Rx_41629; i_41664++) {
            mem_43123[i_41661 * Rx_41629 + i_41664] = 0.0F;
        }
    }
    for (int64_t i_44303 = 0; i_44303 < Ry_41627; i_44303++) {
        for (int64_t i_44304 = 0; i_44304 < Rx_41629; i_44304++) {
            mem_43132[i_44303 * Rx_41629 + i_44304] = mem_43123[i_44303 *
                                                                Rx_41629 +
                                                                i_44304];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43134;
    
    mem_43134 = (__local char *) mem_43134_backing_0;
    
    __local char *mem_43136;
    
    mem_43136 = (__local char *) mem_43136_backing_1;
    
    float mem_43207[Ry_41627];
    float mem_43211[Rx_41629];
    float loop_mem_43223[Ry_41627 * Rx_41629];
    float mem_param_43137[Ry_41627 * Rx_41629];
    
    for (int32_t i_2 = 0; i_2 < Ry_41627 * Rx_41629; i_2++)
        mem_param_43137[i_2] = mem_43132[i_2];
    for (int64_t i_41671 = 0; i_41671 < full_tiles_41670; i_41671++) {
        int64_t kk_41675 = Tk_41630 * i_41671;
        
        for (int64_t i_41676 = 0; i_41676 < Ry_41627; i_41676++) {
            int64_t binop_y_41699 = Ty_41626 * i_41676;
            
            for (int64_t i_41678 = 0; i_41678 < tk_div_tx_41631; i_41678++) {
                int64_t binop_y_41697 = Tx_41628 * i_41678;
                int64_t ltid_x_41680 = sext_i32_i64(ltid_pre_44299);
                int64_t ltid_y_41681 = sext_i32_i64(ltid_pre_44300);
                int32_t ltid_flat_41682 = local_tid_44295;
                int64_t k_41698 = ltid_y_41681 + binop_y_41697;
                int64_t i_41700 = ltid_x_41680 + binop_y_41699;
                int64_t gtid_41701 = iii_41646 + i_41700;
                int64_t A_col_idx_41702 = kk_41675 + k_41698;
                bool cond_41703 = slt64(gtid_41701, m_28682);
                float A_elem_41704;
                
                if (cond_41703) {
                    float A_elem_41706 = ((__global
                                           float *) defunc_4_map_res_mem_43094)[gtid_41701 *
                                                                                i32_res_28697 +
                                                                                A_col_idx_41702];
                    
                    A_elem_41704 = A_elem_41706;
                } else {
                    A_elem_41704 = 0.0F;
                }
                
                bool cond_41708 = slt64(k_41698, Tk_41630);
                int64_t a_loc_ind_41709;
                
                if (cond_41708) {
                    int64_t binop_y_41710 = Tk_41630 * i_41700;
                    int64_t loc_fi_41711 = k_41698 + binop_y_41710;
                    
                    a_loc_ind_41709 = loc_fi_41711;
                } else {
                    a_loc_ind_41709 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, a_loc_ind_41709) &&
                    slt64(a_loc_ind_41709, a_loc_szz_41636)) {
                    ((__local float *) mem_43134)[a_loc_ind_41709] =
                        A_elem_41704;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_41716 = 0; i_41716 < tk_div_ty_41632; i_41716++) {
            int64_t binop_y_41737 = Ty_41626 * i_41716;
            
            for (int64_t i_41718 = 0; i_41718 < Rx_41629; i_41718++) {
                int64_t binop_y_41739 = Tx_41628 * i_41718;
                int64_t ltid_x_41720 = sext_i32_i64(ltid_pre_44299);
                int64_t ltid_y_41721 = sext_i32_i64(ltid_pre_44300);
                int32_t ltid_flat_41722 = local_tid_44295;
                int64_t k_41738 = ltid_x_41720 + binop_y_41737;
                int64_t j_41740 = ltid_y_41721 + binop_y_41739;
                int64_t gtid_41741 = jjj_41647 + j_41740;
                int64_t B_row_idx_41742 = kk_41675 + k_41738;
                bool cond_41743 = slt64(gtid_41741, N_28681);
                float B_elem_41744;
                
                if (cond_41743) {
                    float B_elem_41746 = ((__global
                                           float *) mem_43118)[B_row_idx_41742 *
                                                               N_28681 +
                                                               gtid_41741];
                    
                    B_elem_41744 = B_elem_41746;
                } else {
                    B_elem_41744 = 0.0F;
                }
                
                bool cond_41748 = slt64(k_41738, Tk_41630);
                int64_t b_loc_ind_41749;
                
                if (cond_41748) {
                    int64_t binop_y_41750 = TxRx_41633 * k_41738;
                    int64_t loc_fi_41751 = j_41740 + binop_y_41750;
                    
                    b_loc_ind_41749 = loc_fi_41751;
                } else {
                    b_loc_ind_41749 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, b_loc_ind_41749) &&
                    slt64(b_loc_ind_41749, b_loc_szz_41638)) {
                    ((__local float *) mem_43136)[b_loc_ind_41749] =
                        B_elem_41744;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_43222[Ry_41627 * Rx_41629];
        float mem_param_43194[Ry_41627 * Rx_41629];
        
        for (int32_t i_3 = 0; i_3 < Ry_41627 * Rx_41629; i_3++)
            mem_param_43194[i_3] = mem_param_43137[i_3];
        for (int64_t i_41756 = 0; i_41756 < Tk_41630; i_41756++) {
            int64_t binop_y_41795 = TxRx_41633 * i_41756;
            int64_t ltid_y_41760 = sext_i32_i64(ltid_pre_44299);
            int64_t ltid_x_41758 = sext_i32_i64(ltid_pre_44300);
            int32_t ltid_flat_41759 = local_tid_44295;
            float mem_43197[Ry_41627];
            float mem_43199[Rx_41629];
            int64_t binop_x_41786 = Ry_41627 * ltid_y_41760;
            
            for (int64_t i_41784 = 0; i_41784 < Ry_41627; i_41784++) {
                int64_t binop_x_41787 = i_41784 + binop_x_41786;
                int64_t binop_y_41788 = Tk_41630 * binop_x_41787;
                int64_t a_loc_ind_41789 = i_41756 + binop_y_41788;
                
                for (int64_t i_44316 = 0; i_44316 < (int64_t) 1; i_44316++) {
                    mem_43197[i_41784 + i_44316] = ((__local
                                                     float *) mem_43134)[a_loc_ind_41789 +
                                                                         i_44316];
                }
            }
            
            int64_t binop_y_41797 = Rx_41629 * ltid_x_41758;
            
            for (int64_t i_41793 = 0; i_41793 < Rx_41629; i_41793++) {
                int64_t binop_x_41796 = i_41793 + binop_y_41795;
                int64_t b_loc_ind_41798 = binop_x_41796 + binop_y_41797;
                
                for (int64_t i_44318 = 0; i_44318 < (int64_t) 1; i_44318++) {
                    mem_43199[i_41793 + i_44318] = ((__local
                                                     float *) mem_43136)[b_loc_ind_41798 +
                                                                         i_44318];
                }
            }
            for (int64_t i_44319 = 0; i_44319 < Ry_41627; i_44319++) {
                mem_43207[i_44319] = mem_43197[i_44319];
            }
            for (int64_t i_44320 = 0; i_44320 < Rx_41629; i_44320++) {
                mem_43211[i_44320] = mem_43199[i_44320];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_43221[Ry_41627 * Rx_41629];
            int64_t ltid_y_41805 = sext_i32_i64(ltid_pre_44299);
            int64_t ltid_x_41803 = sext_i32_i64(ltid_pre_44300);
            int32_t ltid_flat_41804 = local_tid_44295;
            int64_t binop_y_41846 = Ry_41627 * ltid_y_41805;
            int64_t binop_y_41850 = Rx_41629 * ltid_x_41803;
            
            for (int64_t i_41840 = 0; i_41840 < Ry_41627; i_41840++) {
                int64_t binop_x_41845 = iii_41646 + i_41840;
                int64_t cmpop_x_41847 = binop_x_41845 + binop_y_41846;
                bool binop_x_41848 = slt64(cmpop_x_41847, m_28682);
                
                for (int64_t i_41843 = 0; i_41843 < Rx_41629; i_41843++) {
                    int64_t binop_x_41849 = jjj_41647 + i_41843;
                    int64_t cmpop_x_41851 = binop_x_41849 + binop_y_41850;
                    bool binop_y_41852 = slt64(cmpop_x_41851, N_28681);
                    bool cond_41853 = binop_x_41848 && binop_y_41852;
                    
                    if (cond_41853) {
                        float a_41855 = mem_43207[i_41840];
                        float b_41856 = mem_43211[i_41843];
                        float c_41857 = mem_param_43194[i_41840 * Rx_41629 +
                                                        i_41843];
                        float defunc_1_f_res_41860 = a_41855 * b_41856;
                        float defunc_1_op_res_41864 = c_41857 +
                              defunc_1_f_res_41860;
                        
                        mem_param_43194[i_41840 * Rx_41629 + i_41843] =
                            defunc_1_op_res_41864;
                    }
                }
            }
            for (int64_t i_44323 = 0; i_44323 < Ry_41627; i_44323++) {
                for (int64_t i_44324 = 0; i_44324 < Rx_41629; i_44324++) {
                    mem_43221[i_44323 * Rx_41629 + i_44324] =
                        mem_param_43194[i_44323 * Rx_41629 + i_44324];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44313[Ry_41627 * Rx_41629];
            
            for (int32_t i_4 = 0; i_4 < Ry_41627 * Rx_41629; i_4++)
                mem_param_tmp_44313[i_4] = mem_43221[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_41627 * Rx_41629; i_5++)
                mem_param_43194[i_5] = mem_param_tmp_44313[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_41627 * Rx_41629; i_6++)
            loop_mem_43222[i_6] = mem_param_43194[i_6];
        
        float mem_param_tmp_44305[Ry_41627 * Rx_41629];
        
        for (int32_t i_7 = 0; i_7 < Ry_41627 * Rx_41629; i_7++)
            mem_param_tmp_44305[i_7] = loop_mem_43222[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_41627 * Rx_41629; i_8++)
            mem_param_43137[i_8] = mem_param_tmp_44305[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_41627 * Rx_41629; i_9++)
        loop_mem_43223[i_9] = mem_param_43137[i_9];
    for (int64_t i_41874 = 0; i_41874 < Ry_41627; i_41874++) {
        int64_t binop_y_41899 = Ty_41626 * i_41874;
        
        for (int64_t i_41876 = 0; i_41876 < tk_div_tx_41631; i_41876++) {
            int64_t binop_y_41897 = Tx_41628 * i_41876;
            int64_t ltid_x_41878 = sext_i32_i64(ltid_pre_44299);
            int64_t ltid_y_41879 = sext_i32_i64(ltid_pre_44300);
            int32_t ltid_flat_41880 = local_tid_44295;
            int64_t k_41898 = ltid_y_41879 + binop_y_41897;
            int64_t i_41900 = ltid_x_41878 + binop_y_41899;
            int64_t gtid_41901 = iii_41646 + i_41900;
            int64_t A_col_idx_41902 = kk_41873 + k_41898;
            bool binop_x_41903 = slt64(gtid_41901, m_28682);
            bool binop_y_41904 = slt64(A_col_idx_41902, i32_res_28697);
            bool cond_41905 = binop_x_41903 && binop_y_41904;
            float A_elem_41906;
            
            if (cond_41905) {
                float A_elem_41908 = ((__global
                                       float *) defunc_4_map_res_mem_43094)[gtid_41901 *
                                                                            i32_res_28697 +
                                                                            A_col_idx_41902];
                
                A_elem_41906 = A_elem_41908;
            } else {
                A_elem_41906 = 0.0F;
            }
            
            bool cond_41910 = slt64(k_41898, Tk_41630);
            int64_t a_loc_ind_41911;
            
            if (cond_41910) {
                int64_t binop_y_41912 = Tk_41630 * i_41900;
                int64_t loc_fi_41913 = k_41898 + binop_y_41912;
                
                a_loc_ind_41911 = loc_fi_41913;
            } else {
                a_loc_ind_41911 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, a_loc_ind_41911) && slt64(a_loc_ind_41911,
                                                             a_loc_szz_41636)) {
                ((__local float *) mem_43134)[a_loc_ind_41911] = A_elem_41906;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_41918 = 0; i_41918 < tk_div_ty_41632; i_41918++) {
        int64_t binop_y_41941 = Ty_41626 * i_41918;
        
        for (int64_t i_41920 = 0; i_41920 < Rx_41629; i_41920++) {
            int64_t binop_y_41943 = Tx_41628 * i_41920;
            int64_t ltid_x_41922 = sext_i32_i64(ltid_pre_44299);
            int64_t ltid_y_41923 = sext_i32_i64(ltid_pre_44300);
            int32_t ltid_flat_41924 = local_tid_44295;
            int64_t k_41942 = ltid_x_41922 + binop_y_41941;
            int64_t j_41944 = ltid_y_41923 + binop_y_41943;
            int64_t gtid_41945 = jjj_41647 + j_41944;
            int64_t B_row_idx_41946 = kk_41873 + k_41942;
            bool binop_x_41947 = slt64(gtid_41945, N_28681);
            bool binop_y_41948 = slt64(B_row_idx_41946, i32_res_28697);
            bool cond_41949 = binop_x_41947 && binop_y_41948;
            float B_elem_41950;
            
            if (cond_41949) {
                float B_elem_41952 = ((__global
                                       float *) mem_43118)[B_row_idx_41946 *
                                                           N_28681 +
                                                           gtid_41945];
                
                B_elem_41950 = B_elem_41952;
            } else {
                B_elem_41950 = 0.0F;
            }
            
            bool cond_41954 = slt64(k_41942, Tk_41630);
            int64_t b_loc_ind_41955;
            
            if (cond_41954) {
                int64_t binop_y_41956 = TxRx_41633 * k_41942;
                int64_t loc_fi_41957 = j_41944 + binop_y_41956;
                
                b_loc_ind_41955 = loc_fi_41957;
            } else {
                b_loc_ind_41955 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, b_loc_ind_41955) && slt64(b_loc_ind_41955,
                                                             b_loc_szz_41638)) {
                ((__local float *) mem_43136)[b_loc_ind_41955] = B_elem_41950;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_43289[Ry_41627];
    float mem_43293[Rx_41629];
    float mem_43303[Ry_41627 * Rx_41629];
    float loop_mem_43305[Ry_41627 * Rx_41629];
    float mem_param_43276[Ry_41627 * Rx_41629];
    
    for (int32_t i_10 = 0; i_10 < Ry_41627 * Rx_41629; i_10++)
        mem_param_43276[i_10] = loop_mem_43223[i_10];
    for (int64_t i_41962 = 0; i_41962 < Tk_41630; i_41962++) {
        int64_t cmpop_x_41964 = kk_41873 + i_41962;
        bool cond_41965 = slt64(cmpop_x_41964, i32_res_28697);
        float mem_43676[Ry_41627 * Rx_41629];
        
        if (cond_41965) {
            int64_t binop_y_42003 = TxRx_41633 * i_41962;
            int64_t bytes_43278 = (int64_t) 4 * Ry_41627;
            int64_t bytes_43280 = (int64_t) 4 * Rx_41629;
            int64_t ltid_y_41968 = sext_i32_i64(ltid_pre_44299);
            int64_t ltid_x_41966 = sext_i32_i64(ltid_pre_44300);
            int32_t ltid_flat_41967 = local_tid_44295;
            float mem_43279[Ry_41627];
            float mem_43281[Rx_41629];
            int64_t binop_x_41994 = Ry_41627 * ltid_y_41968;
            
            for (int64_t i_41992 = 0; i_41992 < Ry_41627; i_41992++) {
                int64_t binop_x_41995 = i_41992 + binop_x_41994;
                int64_t binop_y_41996 = Tk_41630 * binop_x_41995;
                int64_t a_loc_ind_41997 = i_41962 + binop_y_41996;
                
                for (int64_t i_44332 = 0; i_44332 < (int64_t) 1; i_44332++) {
                    mem_43279[i_41992 + i_44332] = ((__local
                                                     float *) mem_43134)[a_loc_ind_41997 +
                                                                         i_44332];
                }
            }
            
            int64_t binop_y_42005 = Rx_41629 * ltid_x_41966;
            
            for (int64_t i_42001 = 0; i_42001 < Rx_41629; i_42001++) {
                int64_t binop_x_42004 = i_42001 + binop_y_42003;
                int64_t b_loc_ind_42006 = binop_x_42004 + binop_y_42005;
                
                for (int64_t i_44334 = 0; i_44334 < (int64_t) 1; i_44334++) {
                    mem_43281[i_42001 + i_44334] = ((__local
                                                     float *) mem_43136)[b_loc_ind_42006 +
                                                                         i_44334];
                }
            }
            for (int64_t i_44335 = 0; i_44335 < Ry_41627; i_44335++) {
                mem_43289[i_44335] = mem_43279[i_44335];
            }
            for (int64_t i_44336 = 0; i_44336 < Rx_41629; i_44336++) {
                mem_43293[i_44336] = mem_43281[i_44336];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_42013 = sext_i32_i64(ltid_pre_44299);
            int64_t ltid_x_42011 = sext_i32_i64(ltid_pre_44300);
            int32_t ltid_flat_42012 = local_tid_44295;
            int64_t binop_y_42054 = Ry_41627 * ltid_y_42013;
            int64_t binop_y_42058 = Rx_41629 * ltid_x_42011;
            
            for (int64_t i_42048 = 0; i_42048 < Ry_41627; i_42048++) {
                int64_t binop_x_42053 = iii_41646 + i_42048;
                int64_t cmpop_x_42055 = binop_x_42053 + binop_y_42054;
                bool binop_x_42056 = slt64(cmpop_x_42055, m_28682);
                
                for (int64_t i_42051 = 0; i_42051 < Rx_41629; i_42051++) {
                    int64_t binop_x_42057 = jjj_41647 + i_42051;
                    int64_t cmpop_x_42059 = binop_x_42057 + binop_y_42058;
                    bool binop_y_42060 = slt64(cmpop_x_42059, N_28681);
                    bool cond_42061 = binop_x_42056 && binop_y_42060;
                    
                    if (cond_42061) {
                        float a_42063 = mem_43289[i_42048];
                        float b_42064 = mem_43293[i_42051];
                        float c_42065 = mem_param_43276[i_42048 * Rx_41629 +
                                                        i_42051];
                        float defunc_1_f_res_42068 = a_42063 * b_42064;
                        float defunc_1_op_res_42072 = c_42065 +
                              defunc_1_f_res_42068;
                        
                        mem_param_43276[i_42048 * Rx_41629 + i_42051] =
                            defunc_1_op_res_42072;
                    }
                }
            }
            for (int64_t i_44339 = 0; i_44339 < Ry_41627; i_44339++) {
                for (int64_t i_44340 = 0; i_44340 < Rx_41629; i_44340++) {
                    mem_43303[i_44339 * Rx_41629 + i_44340] =
                        mem_param_43276[i_44339 * Rx_41629 + i_44340];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44341 = 0; i_44341 < Ry_41627; i_44341++) {
                for (int64_t i_44342 = 0; i_44342 < Rx_41629; i_44342++) {
                    mem_43676[i_44341 * Rx_41629 + i_44342] =
                        mem_43303[i_44341 * Rx_41629 + i_44342];
                }
            }
        } else {
            for (int64_t i_44343 = 0; i_44343 < Ry_41627; i_44343++) {
                for (int64_t i_44344 = 0; i_44344 < Rx_41629; i_44344++) {
                    mem_43676[i_44343 * Rx_41629 + i_44344] =
                        mem_param_43276[i_44343 * Rx_41629 + i_44344];
                }
            }
        }
        
        float mem_param_tmp_44329[Ry_41627 * Rx_41629];
        
        for (int32_t i_11 = 0; i_11 < Ry_41627 * Rx_41629; i_11++)
            mem_param_tmp_44329[i_11] = mem_43676[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_41627 * Rx_41629; i_12++)
            mem_param_43276[i_12] = mem_param_tmp_44329[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_41627 * Rx_41629; i_13++)
        loop_mem_43305[i_13] = mem_param_43276[i_13];
    
    int64_t reg_tile_i_44345 = squot64(sext_i32_i64(local_tid_44295), Tx_41628);
    int64_t reg_tile_i_44346 = sext_i32_i64(local_tid_44295) -
            squot64(sext_i32_i64(local_tid_44295), Tx_41628) * Tx_41628;
    int64_t tile_dim_start_44347 = Ry_41627 * (Ty_41626 * gid_y_41644 +
                                               reg_tile_i_44345);
    int64_t tile_dim_start_44348 = Rx_41629 * (Tx_41628 * gid_x_41643 +
                                               reg_tile_i_44346);
    
    for (int64_t nest_i_44349 = 0; nest_i_44349 < Ry_41627; nest_i_44349++) {
        for (int64_t nest_i_44350 = 0; nest_i_44350 < Rx_41629;
             nest_i_44350++) {
            if (slt64(tile_dim_start_44347 + nest_i_44349, m_28682) &&
                slt64(tile_dim_start_44348 + nest_i_44350, N_28681)) {
                ((__global float *) mem_43308)[(tile_dim_start_44347 +
                                                nest_i_44349) * N_28681 +
                                               (tile_dim_start_44348 +
                                                nest_i_44350)] =
                    loop_mem_43305[nest_i_44349 * Rx_41629 + nest_i_44350];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_41626
    #undef Ry_41627
    #undef Tx_41628
    #undef Rx_41629
    #undef Tk_41630
    #undef tk_div_tx_41631
    #undef tk_div_ty_41632
    #undef TxRx_41633
    #undef TyRy_41634
    #undef a_loc_szz_41636
    #undef b_loc_szz_41638
}
__kernel void mainzisegmap_intragroup_42079(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43381_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43374_backing_aligned_1,
                                            int64_t m_28682, int32_t n_28685,
                                            float hfrac_28687,
                                            int64_t i32_res_28691,
                                            int32_t k2p2_28693,
                                            int64_t num_whole_tiles_42101,
                                            int64_t residual_input_42190,
                                            unsigned char cond_42191, __global
                                            unsigned char *mem_43360, __global
                                            unsigned char *mem_43363, __global
                                            unsigned char *mem_43394, __global
                                            unsigned char *mem_43396, __global
                                            unsigned char *mem_43398)
{
    #define segmap_group_sizze_39525 (mainzisegmap_group_sizze_39494)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43381_backing_5 = (__local volatile
                                                           char *) mem_43381_backing_aligned_0;
    __local volatile char *restrict mem_43374_backing_0 = (__local volatile
                                                           char *) mem_43374_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44518;
    int32_t local_tid_44519;
    int64_t group_sizze_44522;
    int32_t wave_sizze_44521;
    int32_t group_tid_44520;
    
    global_tid_44518 = get_global_id(0);
    local_tid_44519 = get_local_id(0);
    group_sizze_44522 = get_local_size(0);
    wave_sizze_44521 = LOCKSTEP_WIDTH;
    group_tid_44520 = get_group_id(0);
    
    int32_t gid_flat_42079;
    
    gid_flat_42079 = group_tid_44520;
    
    int32_t ltid_pre_44523;
    
    ltid_pre_44523 = local_tid_44519;
    
    int64_t gid_42078;
    
    gid_42078 = sext_i32_i64(group_tid_44520);
    
    int64_t binop_x_42086;
    
    binop_x_42086 = segmap_group_sizze_39525 * gid_42078;
    
    int32_t mem_43367[1];
    int64_t ltid_42080 = sext_i32_i64(ltid_pre_44523);
    int32_t ltid_flat_42081 = local_tid_44519;
    int64_t gtid_42087 = ltid_42080 + binop_x_42086;
    bool cond_42088 = slt64(gtid_42087, m_28682);
    int32_t pre_42089;
    
    if (cond_42088) {
        int32_t defunc_0_f_res_42091;
        int32_t redout_42503 = 0;
        
        for (int32_t i_42548 = 0; i_42548 < n_28685; i_42548++) {
            int64_t i_42504 = sext_i32_i64(i_42548);
            float x_42095 = ((__global float *) mem_43360)[i_42504 * m_28682 +
                                                           gtid_42087];
            bool isnan_res_42096;
            
            isnan_res_42096 = futrts_isnan32(x_42095);
            
            bool cond_42097 = !isnan_res_42096;
            int32_t defunc_0_f_res_42098 = btoi_bool_i32(cond_42097);
            int32_t defunc_1_op_res_42094 = add32(defunc_0_f_res_42098,
                                                  redout_42503);
            int32_t redout_tmp_44524 = defunc_1_op_res_42094;
            
            redout_42503 = redout_tmp_44524;
        }
        defunc_0_f_res_42091 = redout_42503;
        pre_42089 = defunc_0_f_res_42091;
    } else {
        pre_42089 = 0;
    }
    mem_43367[(int64_t) 0] = pre_42089;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_43370[1];
    int64_t ltid_42102 = sext_i32_i64(ltid_pre_44523);
    int32_t ltid_flat_42103 = local_tid_44519;
    
    mem_43370[(int64_t) 0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43374;
    
    mem_43374 = (__local char *) mem_43374_backing_0;
    
    float accs_mem_43378[1];
    float mem_param_43371[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43371[i_1] = mem_43370[i_1];
    for (int64_t tile_id_42109 = 0; tile_id_42109 < num_whole_tiles_42101;
         tile_id_42109++) {
        int64_t binop_x_42154 = segmap_group_sizze_39525 * tile_id_42109;
        int64_t ltid_42110 = sext_i32_i64(ltid_pre_44523);
        int32_t ltid_flat_42111 = local_tid_44519;
        int64_t j_42155 = ltid_42110 + binop_x_42154;
        bool cond_42159 = slt64(j_42155, i32_res_28691);
        int32_t pre_42160;
        
        if (cond_42159) {
            int32_t index_primexp_42461 = sext_i64_i32(j_42155);
            
            pre_42160 = index_primexp_42461;
        } else {
            pre_42160 = 0;
        }
        ((__local int32_t *) mem_43374)[ltid_42110] = pre_42160;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43377[1];
        int64_t ltid_42129 = sext_i32_i64(ltid_pre_44523);
        int32_t ltid_flat_42130 = local_tid_44519;
        int64_t gtid_42165 = binop_x_42086 + ltid_42129;
        float acc_42167 = mem_param_43371[(int64_t) 0];
        bool cond_42168 = slt64(gtid_42165, m_28682);
        float acc_42169;
        
        if (cond_42168) {
            int32_t defunc_0_f_res_42166 = mem_43367[(int64_t) 0];
            float x_42170;
            float redout_42505 = acc_42167;
            
            for (int64_t i_42506 = 0; i_42506 < segmap_group_sizze_39525;
                 i_42506++) {
                int32_t x_42174 = ((__local int32_t *) mem_43374)[i_42506];
                bool cond_42175 = slt32(x_42174, defunc_0_f_res_42166);
                float defunc_0_f_res_42176;
                
                if (cond_42175) {
                    int64_t i_42177 = sext_i32_i64(x_42174);
                    float defunc_0_f_res_t_res_42178 = ((__global
                                                         float *) mem_43363)[i_42177 *
                                                                             m_28682 +
                                                                             gtid_42165];
                    
                    defunc_0_f_res_42176 = defunc_0_f_res_t_res_42178;
                } else {
                    defunc_0_f_res_42176 = 0.0F;
                }
                
                float defunc_0_f_res_42179 = defunc_0_f_res_42176 *
                      defunc_0_f_res_42176;
                float defunc_1_op_res_42173 = defunc_0_f_res_42179 +
                      redout_42505;
                float redout_tmp_44527 = defunc_1_op_res_42173;
                
                redout_42505 = redout_tmp_44527;
            }
            x_42170 = redout_42505;
            acc_42169 = x_42170;
        } else {
            acc_42169 = acc_42167;
        }
        mem_43377[(int64_t) 0] = acc_42169;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44525[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44525[i_2] = mem_43377[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43371[i_3] = mem_param_tmp_44525[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43378[i_4] = mem_param_43371[i_4];
    
    __local char *mem_43381;
    
    mem_43381 = (__local char *) mem_43381_backing_5;
    
    float mem_43384[1];
    float mem_43689[1];
    
    if (cond_42191) {
        mem_43689[(int64_t) 0] = accs_mem_43378[(int64_t) 0];
    } else {
        int64_t binop_x_42201 = segmap_group_sizze_39525 *
                num_whole_tiles_42101;
        int64_t ltid_42192 = sext_i32_i64(ltid_pre_44523);
        int32_t ltid_flat_42193 = local_tid_44519;
        int64_t j_42202 = ltid_42192 + binop_x_42201;
        bool cond_42206 = slt64(j_42202, i32_res_28691);
        int32_t pre_42207;
        
        if (cond_42206) {
            int32_t index_primexp_42462 = sext_i64_i32(j_42202);
            
            pre_42207 = index_primexp_42462;
        } else {
            pre_42207 = 0;
        }
        ((__local int32_t *) mem_43381)[ltid_42192] = pre_42207;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_42212 = sext_i32_i64(ltid_pre_44523);
        int32_t ltid_flat_42213 = local_tid_44519;
        int64_t gtid_42220 = binop_x_42086 + ltid_42212;
        float acc_42222 = accs_mem_43378[(int64_t) 0];
        bool cond_42223 = slt64(gtid_42220, m_28682);
        float acc_42224;
        
        if (cond_42223) {
            int32_t defunc_0_f_res_42221 = mem_43367[(int64_t) 0];
            float x_42225;
            float redout_42507 = acc_42222;
            
            for (int64_t i_42508 = 0; i_42508 < residual_input_42190;
                 i_42508++) {
                int32_t x_42229 = ((__local int32_t *) mem_43381)[i_42508];
                bool cond_42230 = slt32(x_42229, defunc_0_f_res_42221);
                float defunc_0_f_res_42231;
                
                if (cond_42230) {
                    int64_t i_42232 = sext_i32_i64(x_42229);
                    float defunc_0_f_res_t_res_42233 = ((__global
                                                         float *) mem_43363)[i_42232 *
                                                                             m_28682 +
                                                                             gtid_42220];
                    
                    defunc_0_f_res_42231 = defunc_0_f_res_t_res_42233;
                } else {
                    defunc_0_f_res_42231 = 0.0F;
                }
                
                float defunc_0_f_res_42234 = defunc_0_f_res_42231 *
                      defunc_0_f_res_42231;
                float defunc_1_op_res_42228 = defunc_0_f_res_42234 +
                      redout_42507;
                float redout_tmp_44528 = defunc_1_op_res_42228;
                
                redout_42507 = redout_tmp_44528;
            }
            x_42225 = redout_42507;
            acc_42224 = x_42225;
        } else {
            acc_42224 = acc_42222;
        }
        mem_43384[(int64_t) 0] = acc_42224;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43689[(int64_t) 0] = mem_43384[(int64_t) 0];
    }
    
    int32_t mem_43388[1];
    int32_t mem_43390[1];
    float mem_43392[1];
    int64_t ltid_42237 = sext_i32_i64(ltid_pre_44523);
    int32_t ltid_flat_42238 = local_tid_44519;
    int64_t gtid_42248 = binop_x_42086 + ltid_42237;
    bool cond_42250 = slt64(gtid_42248, m_28682);
    int32_t postlude_42251;
    int32_t postlude_42252;
    float postlude_42253;
    
    if (cond_42250) {
        float defunc_0_f_res_42249 = mem_43689[(int64_t) 0];
        int32_t defunc_0_f_res_42254 = mem_43367[(int64_t) 0];
        int32_t r32_arg_42255 = sub32(defunc_0_f_res_42254, k2p2_28693);
        float i32_res_42256 = sitofp_i32_f32(r32_arg_42255);
        float sqrt_arg_42257 = defunc_0_f_res_42249 / i32_res_42256;
        float sqrt_res_42258;
        
        sqrt_res_42258 = futrts_sqrt32(sqrt_arg_42257);
        
        float i32_res_42259 = sitofp_i32_f32(defunc_0_f_res_42254);
        float t32_arg_42260 = hfrac_28687 * i32_res_42259;
        int32_t f32_res_42261 = fptosi_f32_i32(t32_arg_42260);
        
        postlude_42251 = f32_res_42261;
        postlude_42252 = defunc_0_f_res_42254;
        postlude_42253 = sqrt_res_42258;
    } else {
        postlude_42251 = 0;
        postlude_42252 = 0;
        postlude_42253 = 0.0F;
    }
    mem_43388[(int64_t) 0] = postlude_42251;
    mem_43390[(int64_t) 0] = postlude_42252;
    mem_43392[(int64_t) 0] = postlude_42253;
    barrier(CLK_LOCAL_MEM_FENCE);
    if (slt64(sext_i32_i64(local_tid_44519) + segmap_group_sizze_39525 *
              sext_i32_i64(group_tid_44520), m_28682)) {
        ((__global int32_t *) mem_43394)[sext_i32_i64(local_tid_44519) +
                                         segmap_group_sizze_39525 *
                                         sext_i32_i64(group_tid_44520)] =
            mem_43388[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44519) + segmap_group_sizze_39525 *
              sext_i32_i64(group_tid_44520), m_28682)) {
        ((__global int32_t *) mem_43396)[sext_i32_i64(local_tid_44519) +
                                         segmap_group_sizze_39525 *
                                         sext_i32_i64(group_tid_44520)] =
            mem_43390[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44519) + segmap_group_sizze_39525 *
              sext_i32_i64(group_tid_44520), m_28682)) {
        ((__global float *) mem_43398)[sext_i32_i64(local_tid_44519) +
                                       segmap_group_sizze_39525 *
                                       sext_i32_i64(group_tid_44520)] =
            mem_43392[(int64_t) 0];
    }
    
  error_7:
    return;
    #undef segmap_group_sizze_39525
}
__kernel void mainzisegmap_intragroup_42269(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43447_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43440_backing_aligned_1,
                                            int64_t N_28681, int64_t m_28682,
                                            int64_t i32_res_29052,
                                            int64_t num_whole_tiles_42289,
                                            int64_t residual_input_42388,
                                            unsigned char cond_42389, __global
                                            unsigned char *defunc_4_map_res_mem_43356,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43422,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43423,
                                            __global unsigned char *mem_43453)
{
    #define segmap_group_sizze_39762 (mainzisegmap_group_sizze_39743)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43447_backing_5 = (__local volatile
                                                           char *) mem_43447_backing_aligned_0;
    __local volatile char *restrict mem_43440_backing_0 = (__local volatile
                                                           char *) mem_43440_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44702;
    int32_t local_tid_44703;
    int64_t group_sizze_44706;
    int32_t wave_sizze_44705;
    int32_t group_tid_44704;
    
    global_tid_44702 = get_global_id(0);
    local_tid_44703 = get_local_id(0);
    group_sizze_44706 = get_local_size(0);
    wave_sizze_44705 = LOCKSTEP_WIDTH;
    group_tid_44704 = get_group_id(0);
    
    int32_t gid_flat_42269;
    
    gid_flat_42269 = group_tid_44704;
    
    int32_t ltid_pre_44707;
    
    ltid_pre_44707 = local_tid_44703;
    
    int64_t gid_42268;
    
    gid_42268 = sext_i32_i64(group_tid_44704);
    
    int64_t binop_x_42278;
    
    binop_x_42278 = segmap_group_sizze_39762 * gid_42268;
    
    int32_t mem_43431[1];
    int32_t mem_43433[1];
    int64_t ltid_42270 = sext_i32_i64(ltid_pre_44707);
    int32_t ltid_flat_42271 = local_tid_44703;
    int64_t gtid_42279 = ltid_42270 + binop_x_42278;
    bool cond_42280 = slt64(gtid_42279, m_28682);
    int32_t pre_42281;
    int32_t pre_42282;
    
    if (cond_42280) {
        int32_t x_42283 = ((__global
                            int32_t *) defunc_3_map_res_mem_43423)[gtid_42279];
        int32_t x_42284 = ((__global
                            int32_t *) defunc_3_map_res_mem_43422)[gtid_42279];
        
        pre_42281 = x_42283;
        pre_42282 = x_42284;
    } else {
        pre_42281 = 0;
        pre_42282 = 0;
    }
    mem_43431[(int64_t) 0] = pre_42281;
    mem_43433[(int64_t) 0] = pre_42282;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_43436[1];
    int64_t ltid_42290 = sext_i32_i64(ltid_pre_44707);
    int32_t ltid_flat_42291 = local_tid_44703;
    
    mem_43436[(int64_t) 0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43440;
    
    mem_43440 = (__local char *) mem_43440_backing_0;
    
    float accs_mem_43444[1];
    float mem_param_43437[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43437[i_1] = mem_43436[i_1];
    for (int64_t tile_id_42297 = 0; tile_id_42297 < num_whole_tiles_42289;
         tile_id_42297++) {
        int64_t binop_x_42346 = segmap_group_sizze_39762 * tile_id_42297;
        int64_t ltid_42298 = sext_i32_i64(ltid_pre_44707);
        int32_t ltid_flat_42299 = local_tid_44703;
        int64_t j_42347 = ltid_42298 + binop_x_42346;
        bool cond_42352 = slt64(j_42347, i32_res_29052);
        int32_t pre_42353;
        
        if (cond_42352) {
            int32_t index_primexp_42463 = sext_i64_i32(j_42347);
            int32_t tile_elem_42354 = index_primexp_42463;
            
            pre_42353 = tile_elem_42354;
        } else {
            pre_42353 = 0;
        }
        ((__local int32_t *) mem_43440)[ltid_42298] = pre_42353;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43443[1];
        int64_t ltid_42318 = sext_i32_i64(ltid_pre_44707);
        int32_t ltid_flat_42319 = local_tid_44703;
        int64_t gtid_42358 = binop_x_42278 + ltid_42318;
        float acc_42361 = mem_param_43437[(int64_t) 0];
        bool cond_42362 = slt64(gtid_42358, m_28682);
        float acc_42363;
        
        if (cond_42362) {
            int32_t x_42359 = mem_43431[(int64_t) 0];
            int32_t x_42360 = mem_43433[(int64_t) 0];
            float x_42364;
            float redout_42509 = acc_42361;
            
            for (int64_t i_42510 = 0; i_42510 < segmap_group_sizze_39762;
                 i_42510++) {
                int32_t x_42368 = ((__local int32_t *) mem_43440)[i_42510];
                bool cond_42369 = slt32(x_42368, x_42360);
                float defunc_0_f_res_42370;
                
                if (cond_42369) {
                    int32_t x_42371 = add32(x_42359, x_42368);
                    int32_t x_42372 = sub32(x_42371, x_42360);
                    int32_t i_42373 = add32(1, x_42372);
                    int64_t i_42374 = sext_i32_i64(i_42373);
                    float defunc_0_f_res_t_res_42375 = ((__global
                                                         float *) defunc_4_map_res_mem_43356)[gtid_42358 *
                                                                                              N_28681 +
                                                                                              i_42374];
                    
                    defunc_0_f_res_42370 = defunc_0_f_res_t_res_42375;
                } else {
                    defunc_0_f_res_42370 = 0.0F;
                }
                
                float defunc_1_op_res_42367 = defunc_0_f_res_42370 +
                      redout_42509;
                float redout_tmp_44710 = defunc_1_op_res_42367;
                
                redout_42509 = redout_tmp_44710;
            }
            x_42364 = redout_42509;
            acc_42363 = x_42364;
        } else {
            acc_42363 = acc_42361;
        }
        mem_43443[(int64_t) 0] = acc_42363;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44708[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44708[i_2] = mem_43443[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43437[i_3] = mem_param_tmp_44708[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43444[i_4] = mem_param_43437[i_4];
    
    __local char *mem_43447;
    
    mem_43447 = (__local char *) mem_43447_backing_5;
    
    float mem_43450[1];
    float mem_43698[1];
    
    if (cond_42389) {
        mem_43698[(int64_t) 0] = accs_mem_43444[(int64_t) 0];
    } else {
        int64_t binop_x_42399 = segmap_group_sizze_39762 *
                num_whole_tiles_42289;
        int64_t ltid_42390 = sext_i32_i64(ltid_pre_44707);
        int32_t ltid_flat_42391 = local_tid_44703;
        int64_t j_42400 = ltid_42390 + binop_x_42399;
        bool cond_42405 = slt64(j_42400, i32_res_29052);
        int32_t pre_42406;
        
        if (cond_42405) {
            int32_t index_primexp_42464 = sext_i64_i32(j_42400);
            int32_t tile_elem_42407 = index_primexp_42464;
            
            pre_42406 = tile_elem_42407;
        } else {
            pre_42406 = 0;
        }
        ((__local int32_t *) mem_43447)[ltid_42390] = pre_42406;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_42411 = sext_i32_i64(ltid_pre_44707);
        int32_t ltid_flat_42412 = local_tid_44703;
        int64_t gtid_42419 = binop_x_42278 + ltid_42411;
        float acc_42422 = accs_mem_43444[(int64_t) 0];
        bool cond_42423 = slt64(gtid_42419, m_28682);
        float acc_42424;
        
        if (cond_42423) {
            int32_t x_42420 = mem_43431[(int64_t) 0];
            int32_t x_42421 = mem_43433[(int64_t) 0];
            float x_42425;
            float redout_42511 = acc_42422;
            
            for (int64_t i_42512 = 0; i_42512 < residual_input_42388;
                 i_42512++) {
                int32_t x_42429 = ((__local int32_t *) mem_43447)[i_42512];
                bool cond_42430 = slt32(x_42429, x_42421);
                float defunc_0_f_res_42431;
                
                if (cond_42430) {
                    int32_t x_42432 = add32(x_42420, x_42429);
                    int32_t x_42433 = sub32(x_42432, x_42421);
                    int32_t i_42434 = add32(1, x_42433);
                    int64_t i_42435 = sext_i32_i64(i_42434);
                    float defunc_0_f_res_t_res_42436 = ((__global
                                                         float *) defunc_4_map_res_mem_43356)[gtid_42419 *
                                                                                              N_28681 +
                                                                                              i_42435];
                    
                    defunc_0_f_res_42431 = defunc_0_f_res_t_res_42436;
                } else {
                    defunc_0_f_res_42431 = 0.0F;
                }
                
                float defunc_1_op_res_42428 = defunc_0_f_res_42431 +
                      redout_42511;
                float redout_tmp_44711 = defunc_1_op_res_42428;
                
                redout_42511 = redout_tmp_44711;
            }
            x_42425 = redout_42511;
            acc_42424 = x_42425;
        } else {
            acc_42424 = acc_42422;
        }
        mem_43450[(int64_t) 0] = acc_42424;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43698[(int64_t) 0] = mem_43450[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44703) + segmap_group_sizze_39762 *
              sext_i32_i64(group_tid_44704), m_28682)) {
        ((__global float *) mem_43453)[sext_i32_i64(local_tid_44703) +
                                       segmap_group_sizze_39762 *
                                       sext_i32_i64(group_tid_44704)] =
            mem_43698[(int64_t) 0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_39762
}
__kernel void mainzisegred_large_37737(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_43971_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_43969_backing_aligned_1,
                                       int64_t N_28681, int64_t i32_res_28691,
                                       int64_t i32_res_28697,
                                       int64_t num_groups_37876,
                                       int64_t groups_per_segment_43955,
                                       int64_t elements_per_thread_43956,
                                       int64_t virt_num_groups_43957,
                                       int64_t threads_per_segment_43959,
                                       __global unsigned char *images_mem_42559,
                                       __global
                                       unsigned char *binop_p_mem_42568,
                                       __global unsigned char *mem_42709,
                                       __global unsigned char *mem_42714,
                                       __global
                                       unsigned char *group_res_arr_mem_43960,
                                       __global
                                       unsigned char *mainzicounter_mem_43962)
{
    #define segred_group_sizze_37875 (mainzisegred_group_sizze_37731)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_43971_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_43971_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_43969_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_43969_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43964;
    int32_t local_tid_43965;
    int64_t group_sizze_43968;
    int32_t wave_sizze_43967;
    int32_t group_tid_43966;
    
    global_tid_43964 = get_global_id(0);
    local_tid_43965 = get_local_id(0);
    group_sizze_43968 = get_local_size(0);
    wave_sizze_43967 = LOCKSTEP_WIDTH;
    group_tid_43966 = get_group_id(0);
    
    int32_t phys_tid_37737;
    
    phys_tid_37737 = global_tid_43964;
    
    __local char *red_arr_mem_43969;
    
    red_arr_mem_43969 = (__local char *) red_arr_mem_43969_backing_0;
    
    __local char *sync_arr_mem_43971;
    
    sync_arr_mem_43971 = (__local char *) sync_arr_mem_43971_backing_1;
    
    int32_t phys_group_id_43973;
    
    phys_group_id_43973 = get_group_id(0);
    for (int32_t i_43974 = 0; i_43974 <
         sdiv_up32(sext_i64_i32(virt_num_groups_43957) - phys_group_id_43973,
                   sext_i64_i32(num_groups_37876)); i_43974++) {
        int32_t virt_group_id_43975 = phys_group_id_43973 + i_43974 *
                sext_i64_i32(num_groups_37876);
        int32_t flat_segment_id_43976 = squot32(virt_group_id_43975,
                                                sext_i64_i32(groups_per_segment_43955));
        int64_t global_tid_43977 = srem64(sext_i32_i64(virt_group_id_43975) *
                                          segred_group_sizze_37875 +
                                          sext_i32_i64(local_tid_43965),
                                          segred_group_sizze_37875 *
                                          groups_per_segment_43955);
        int64_t gtid_37724 = squot64(sext_i32_i64(flat_segment_id_43976),
                                     i32_res_28697 * i32_res_28697);
        int64_t gtid_37725 = squot64(sext_i32_i64(flat_segment_id_43976) -
                                     squot64(sext_i32_i64(flat_segment_id_43976),
                                             i32_res_28697 * i32_res_28697) *
                                     (i32_res_28697 * i32_res_28697),
                                     i32_res_28697);
        int64_t gtid_37726 = sext_i32_i64(flat_segment_id_43976) -
                squot64(sext_i32_i64(flat_segment_id_43976), i32_res_28697 *
                        i32_res_28697) * (i32_res_28697 * i32_res_28697) -
                squot64(sext_i32_i64(flat_segment_id_43976) -
                        squot64(sext_i32_i64(flat_segment_id_43976),
                                i32_res_28697 * i32_res_28697) *
                        (i32_res_28697 * i32_res_28697), i32_res_28697) *
                i32_res_28697;
        int64_t gtid_37736;
        float x_acc_43978;
        int64_t chunk_sizze_43979;
        
        chunk_sizze_43979 = smin64(elements_per_thread_43956,
                                   sdiv_up64(i32_res_28691 -
                                             sext_i32_i64(sext_i64_i32(global_tid_43977)),
                                             threads_per_segment_43959));
        
        float x_37879;
        float x_37880;
        
        // neutral-initialise the accumulators
        {
            x_acc_43978 = 0.0F;
        }
        for (int64_t i_43983 = 0; i_43983 < chunk_sizze_43979; i_43983++) {
            gtid_37736 = sext_i32_i64(sext_i64_i32(global_tid_43977)) +
                threads_per_segment_43959 * i_43983;
            // apply map function
            {
                float x_37885 = ((__global
                                  float *) images_mem_42559)[gtid_37724 *
                                                             N_28681 +
                                                             gtid_37736];
                float x_37886 = ((__global
                                  float *) binop_p_mem_42568)[gtid_37725 *
                                                              N_28681 +
                                                              gtid_37736];
                float x_37887 = ((__global float *) mem_42709)[gtid_37726 *
                                                               N_28681 +
                                                               gtid_37736];
                float x_37888 = x_37886 * x_37887;
                bool isnan_res_37889;
                
                isnan_res_37889 = futrts_isnan32(x_37885);
                
                float y_37890;
                
                if (isnan_res_37889) {
                    y_37890 = 0.0F;
                } else {
                    y_37890 = 1.0F;
                }
                
                float defunc_2_f_res_37891 = x_37888 * y_37890;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_37879 = x_acc_43978;
                }
                // load new values
                {
                    x_37880 = defunc_2_f_res_37891;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_37881 = x_37879 + x_37880;
                    
                    // store in accumulator
                    {
                        x_acc_43978 = defunc_1_op_res_37881;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_37879 = x_acc_43978;
            ((__local
              float *) red_arr_mem_43969)[sext_i32_i64(local_tid_43965)] =
                x_37879;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_43984;
        int32_t skip_waves_43985;
        
        skip_waves_43985 = 1;
        
        float x_43980;
        float x_43981;
        
        offset_43984 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_43965,
                      sext_i64_i32(segred_group_sizze_37875))) {
                x_43980 = ((__local
                            float *) red_arr_mem_43969)[sext_i32_i64(local_tid_43965 +
                                                        offset_43984)];
            }
        }
        offset_43984 = 1;
        while (slt32(offset_43984, wave_sizze_43967)) {
            if (slt32(local_tid_43965 + offset_43984,
                      sext_i64_i32(segred_group_sizze_37875)) &&
                ((local_tid_43965 - squot32(local_tid_43965, wave_sizze_43967) *
                  wave_sizze_43967) & (2 * offset_43984 - 1)) == 0) {
                // read array element
                {
                    x_43981 = ((volatile __local
                                float *) red_arr_mem_43969)[sext_i32_i64(local_tid_43965 +
                                                            offset_43984)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_43982 = x_43980 + x_43981;
                    
                    x_43980 = defunc_1_op_res_43982;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_43969)[sext_i32_i64(local_tid_43965)] =
                        x_43980;
                }
            }
            offset_43984 *= 2;
        }
        while (slt32(skip_waves_43985,
                     squot32(sext_i64_i32(segred_group_sizze_37875) +
                             wave_sizze_43967 - 1, wave_sizze_43967))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_43984 = skip_waves_43985 * wave_sizze_43967;
            if (slt32(local_tid_43965 + offset_43984,
                      sext_i64_i32(segred_group_sizze_37875)) &&
                ((local_tid_43965 - squot32(local_tid_43965, wave_sizze_43967) *
                  wave_sizze_43967) == 0 && (squot32(local_tid_43965,
                                                     wave_sizze_43967) & (2 *
                                                                          skip_waves_43985 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_43981 = ((__local
                                float *) red_arr_mem_43969)[sext_i32_i64(local_tid_43965 +
                                                            offset_43984)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_43982 = x_43980 + x_43981;
                    
                    x_43980 = defunc_1_op_res_43982;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_43969)[sext_i32_i64(local_tid_43965)] =
                        x_43980;
                }
            }
            skip_waves_43985 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_43965) == (int64_t) 0) {
                x_acc_43978 = x_43980;
            }
        }
        if (groups_per_segment_43955 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_43965 == 0) {
                    ((__global float *) mem_42714)[gtid_37724 * (i32_res_28697 *
                                                                 i32_res_28697) +
                                                   gtid_37725 * i32_res_28697 +
                                                   gtid_37726] = x_acc_43978;
                }
            }
        } else {
            int32_t old_counter_43986;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_43965 == 0) {
                    ((__global
                      float *) group_res_arr_mem_43960)[sext_i32_i64(virt_group_id_43975) *
                                                        segred_group_sizze_37875] =
                        x_acc_43978;
                    mem_fence_global();
                    old_counter_43986 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_43962)[sext_i32_i64(srem32(flat_segment_id_43976,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_43971)[(int64_t) 0] =
                        old_counter_43986 == groups_per_segment_43955 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_43987;
            
            is_last_group_43987 = ((__local
                                    bool *) sync_arr_mem_43971)[(int64_t) 0];
            if (is_last_group_43987) {
                if (local_tid_43965 == 0) {
                    old_counter_43986 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_43962)[sext_i32_i64(srem32(flat_segment_id_43976,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_43955));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_43988 =
                            sdiv_up64(groups_per_segment_43955,
                                      segred_group_sizze_37875);
                    
                    x_37879 = 0.0F;
                    for (int64_t i_43989 = 0; i_43989 < read_per_thread_43988;
                         i_43989++) {
                        int64_t group_res_id_43990 =
                                sext_i32_i64(local_tid_43965) *
                                read_per_thread_43988 + i_43989;
                        int64_t index_of_group_res_43991 =
                                sext_i32_i64(flat_segment_id_43976) *
                                groups_per_segment_43955 + group_res_id_43990;
                        
                        if (slt64(group_res_id_43990,
                                  groups_per_segment_43955)) {
                            x_37880 = ((__global
                                        float *) group_res_arr_mem_43960)[index_of_group_res_43991 *
                                                                          segred_group_sizze_37875];
                            
                            float defunc_1_op_res_37881;
                            
                            defunc_1_op_res_37881 = x_37879 + x_37880;
                            x_37879 = defunc_1_op_res_37881;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_43969)[sext_i32_i64(local_tid_43965)] =
                    x_37879;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_43992;
                    int32_t skip_waves_43993;
                    
                    skip_waves_43993 = 1;
                    
                    float x_43980;
                    float x_43981;
                    
                    offset_43992 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_43965,
                                  sext_i64_i32(segred_group_sizze_37875))) {
                            x_43980 = ((__local
                                        float *) red_arr_mem_43969)[sext_i32_i64(local_tid_43965 +
                                                                    offset_43992)];
                        }
                    }
                    offset_43992 = 1;
                    while (slt32(offset_43992, wave_sizze_43967)) {
                        if (slt32(local_tid_43965 + offset_43992,
                                  sext_i64_i32(segred_group_sizze_37875)) &&
                            ((local_tid_43965 - squot32(local_tid_43965,
                                                        wave_sizze_43967) *
                              wave_sizze_43967) & (2 * offset_43992 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_43981 = ((volatile __local
                                            float *) red_arr_mem_43969)[sext_i32_i64(local_tid_43965 +
                                                                        offset_43992)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_43982 = x_43980 + x_43981;
                                
                                x_43980 = defunc_1_op_res_43982;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_43969)[sext_i32_i64(local_tid_43965)] =
                                    x_43980;
                            }
                        }
                        offset_43992 *= 2;
                    }
                    while (slt32(skip_waves_43993,
                                 squot32(sext_i64_i32(segred_group_sizze_37875) +
                                         wave_sizze_43967 - 1,
                                         wave_sizze_43967))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_43992 = skip_waves_43993 * wave_sizze_43967;
                        if (slt32(local_tid_43965 + offset_43992,
                                  sext_i64_i32(segred_group_sizze_37875)) &&
                            ((local_tid_43965 - squot32(local_tid_43965,
                                                        wave_sizze_43967) *
                              wave_sizze_43967) == 0 &&
                             (squot32(local_tid_43965, wave_sizze_43967) & (2 *
                                                                            skip_waves_43993 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_43981 = ((__local
                                            float *) red_arr_mem_43969)[sext_i32_i64(local_tid_43965 +
                                                                        offset_43992)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_43982 = x_43980 + x_43981;
                                
                                x_43980 = defunc_1_op_res_43982;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_43969)[sext_i32_i64(local_tid_43965)] =
                                    x_43980;
                            }
                        }
                        skip_waves_43993 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_43965 == 0) {
                            ((__global float *) mem_42714)[gtid_37724 *
                                                           (i32_res_28697 *
                                                            i32_res_28697) +
                                                           gtid_37725 *
                                                           i32_res_28697 +
                                                           gtid_37726] =
                                x_43980;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_37875
}
__kernel void mainzisegred_large_38784(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44168_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44166_backing_aligned_1,
                                       int64_t N_28681, int64_t i32_res_28691,
                                       int64_t i32_res_28697,
                                       int64_t num_groups_38837,
                                       int64_t groups_per_segment_44152,
                                       int64_t elements_per_thread_44153,
                                       int64_t virt_num_groups_44154,
                                       int64_t threads_per_segment_44156,
                                       __global unsigned char *images_mem_42559,
                                       __global
                                       unsigned char *binop_p_mem_42568,
                                       __global unsigned char *mem_43022,
                                       __global
                                       unsigned char *group_res_arr_mem_44157,
                                       __global
                                       unsigned char *mainzicounter_mem_44159)
{
    #define segred_group_sizze_38836 (mainzisegred_group_sizze_38778)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44168_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44168_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44166_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44166_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44161;
    int32_t local_tid_44162;
    int64_t group_sizze_44165;
    int32_t wave_sizze_44164;
    int32_t group_tid_44163;
    
    global_tid_44161 = get_global_id(0);
    local_tid_44162 = get_local_id(0);
    group_sizze_44165 = get_local_size(0);
    wave_sizze_44164 = LOCKSTEP_WIDTH;
    group_tid_44163 = get_group_id(0);
    
    int32_t phys_tid_38784;
    
    phys_tid_38784 = global_tid_44161;
    
    __local char *red_arr_mem_44166;
    
    red_arr_mem_44166 = (__local char *) red_arr_mem_44166_backing_0;
    
    __local char *sync_arr_mem_44168;
    
    sync_arr_mem_44168 = (__local char *) sync_arr_mem_44168_backing_1;
    
    int32_t phys_group_id_44170;
    
    phys_group_id_44170 = get_group_id(0);
    for (int32_t i_44171 = 0; i_44171 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44154) - phys_group_id_44170,
                   sext_i64_i32(num_groups_38837)); i_44171++) {
        int32_t virt_group_id_44172 = phys_group_id_44170 + i_44171 *
                sext_i64_i32(num_groups_38837);
        int32_t flat_segment_id_44173 = squot32(virt_group_id_44172,
                                                sext_i64_i32(groups_per_segment_44152));
        int64_t global_tid_44174 = srem64(sext_i32_i64(virt_group_id_44172) *
                                          segred_group_sizze_38836 +
                                          sext_i32_i64(local_tid_44162),
                                          segred_group_sizze_38836 *
                                          groups_per_segment_44152);
        int64_t gtid_38773 = squot64(sext_i32_i64(flat_segment_id_44173),
                                     i32_res_28697);
        int64_t gtid_38774 = sext_i32_i64(flat_segment_id_44173) -
                squot64(sext_i32_i64(flat_segment_id_44173), i32_res_28697) *
                i32_res_28697;
        int64_t gtid_38783;
        float x_acc_44175;
        int64_t chunk_sizze_44176;
        
        chunk_sizze_44176 = smin64(elements_per_thread_44153,
                                   sdiv_up64(i32_res_28691 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44174)),
                                             threads_per_segment_44156));
        
        float x_38840;
        float x_38841;
        
        // neutral-initialise the accumulators
        {
            x_acc_44175 = 0.0F;
        }
        for (int64_t i_44180 = 0; i_44180 < chunk_sizze_44176; i_44180++) {
            gtid_38783 = sext_i32_i64(sext_i64_i32(global_tid_44174)) +
                threads_per_segment_44156 * i_44180;
            // apply map function
            {
                float x_38846 = ((__global
                                  float *) images_mem_42559)[gtid_38773 *
                                                             N_28681 +
                                                             gtid_38783];
                bool isnan_res_38847;
                
                isnan_res_38847 = futrts_isnan32(x_38846);
                
                float defunc_1_f_res_38848;
                
                if (isnan_res_38847) {
                    defunc_1_f_res_38848 = 0.0F;
                } else {
                    float x_38845 = ((__global
                                      float *) binop_p_mem_42568)[gtid_38774 *
                                                                  N_28681 +
                                                                  gtid_38783];
                    float defunc_1_f_res_f_res_38849 = x_38845 * x_38846;
                    
                    defunc_1_f_res_38848 = defunc_1_f_res_f_res_38849;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_38840 = x_acc_44175;
                }
                // load new values
                {
                    x_38841 = defunc_1_f_res_38848;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_38842 = x_38840 + x_38841;
                    
                    // store in accumulator
                    {
                        x_acc_44175 = defunc_1_op_res_38842;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_38840 = x_acc_44175;
            ((__local
              float *) red_arr_mem_44166)[sext_i32_i64(local_tid_44162)] =
                x_38840;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44181;
        int32_t skip_waves_44182;
        
        skip_waves_44182 = 1;
        
        float x_44177;
        float x_44178;
        
        offset_44181 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44162,
                      sext_i64_i32(segred_group_sizze_38836))) {
                x_44177 = ((__local
                            float *) red_arr_mem_44166)[sext_i32_i64(local_tid_44162 +
                                                        offset_44181)];
            }
        }
        offset_44181 = 1;
        while (slt32(offset_44181, wave_sizze_44164)) {
            if (slt32(local_tid_44162 + offset_44181,
                      sext_i64_i32(segred_group_sizze_38836)) &&
                ((local_tid_44162 - squot32(local_tid_44162, wave_sizze_44164) *
                  wave_sizze_44164) & (2 * offset_44181 - 1)) == 0) {
                // read array element
                {
                    x_44178 = ((volatile __local
                                float *) red_arr_mem_44166)[sext_i32_i64(local_tid_44162 +
                                                            offset_44181)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44179 = x_44177 + x_44178;
                    
                    x_44177 = defunc_1_op_res_44179;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44166)[sext_i32_i64(local_tid_44162)] =
                        x_44177;
                }
            }
            offset_44181 *= 2;
        }
        while (slt32(skip_waves_44182,
                     squot32(sext_i64_i32(segred_group_sizze_38836) +
                             wave_sizze_44164 - 1, wave_sizze_44164))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44181 = skip_waves_44182 * wave_sizze_44164;
            if (slt32(local_tid_44162 + offset_44181,
                      sext_i64_i32(segred_group_sizze_38836)) &&
                ((local_tid_44162 - squot32(local_tid_44162, wave_sizze_44164) *
                  wave_sizze_44164) == 0 && (squot32(local_tid_44162,
                                                     wave_sizze_44164) & (2 *
                                                                          skip_waves_44182 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44178 = ((__local
                                float *) red_arr_mem_44166)[sext_i32_i64(local_tid_44162 +
                                                            offset_44181)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44179 = x_44177 + x_44178;
                    
                    x_44177 = defunc_1_op_res_44179;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44166)[sext_i32_i64(local_tid_44162)] =
                        x_44177;
                }
            }
            skip_waves_44182 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44162) == (int64_t) 0) {
                x_acc_44175 = x_44177;
            }
        }
        if (groups_per_segment_44152 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44162 == 0) {
                    ((__global float *) mem_43022)[gtid_38773 * i32_res_28697 +
                                                   gtid_38774] = x_acc_44175;
                }
            }
        } else {
            int32_t old_counter_44183;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44162 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44157)[sext_i32_i64(virt_group_id_44172) *
                                                        segred_group_sizze_38836] =
                        x_acc_44175;
                    mem_fence_global();
                    old_counter_44183 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44159)[sext_i32_i64(srem32(flat_segment_id_44173,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44168)[(int64_t) 0] =
                        old_counter_44183 == groups_per_segment_44152 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44184;
            
            is_last_group_44184 = ((__local
                                    bool *) sync_arr_mem_44168)[(int64_t) 0];
            if (is_last_group_44184) {
                if (local_tid_44162 == 0) {
                    old_counter_44183 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44159)[sext_i32_i64(srem32(flat_segment_id_44173,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44152));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44185 =
                            sdiv_up64(groups_per_segment_44152,
                                      segred_group_sizze_38836);
                    
                    x_38840 = 0.0F;
                    for (int64_t i_44186 = 0; i_44186 < read_per_thread_44185;
                         i_44186++) {
                        int64_t group_res_id_44187 =
                                sext_i32_i64(local_tid_44162) *
                                read_per_thread_44185 + i_44186;
                        int64_t index_of_group_res_44188 =
                                sext_i32_i64(flat_segment_id_44173) *
                                groups_per_segment_44152 + group_res_id_44187;
                        
                        if (slt64(group_res_id_44187,
                                  groups_per_segment_44152)) {
                            x_38841 = ((__global
                                        float *) group_res_arr_mem_44157)[index_of_group_res_44188 *
                                                                          segred_group_sizze_38836];
                            
                            float defunc_1_op_res_38842;
                            
                            defunc_1_op_res_38842 = x_38840 + x_38841;
                            x_38840 = defunc_1_op_res_38842;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44166)[sext_i32_i64(local_tid_44162)] =
                    x_38840;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44189;
                    int32_t skip_waves_44190;
                    
                    skip_waves_44190 = 1;
                    
                    float x_44177;
                    float x_44178;
                    
                    offset_44189 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44162,
                                  sext_i64_i32(segred_group_sizze_38836))) {
                            x_44177 = ((__local
                                        float *) red_arr_mem_44166)[sext_i32_i64(local_tid_44162 +
                                                                    offset_44189)];
                        }
                    }
                    offset_44189 = 1;
                    while (slt32(offset_44189, wave_sizze_44164)) {
                        if (slt32(local_tid_44162 + offset_44189,
                                  sext_i64_i32(segred_group_sizze_38836)) &&
                            ((local_tid_44162 - squot32(local_tid_44162,
                                                        wave_sizze_44164) *
                              wave_sizze_44164) & (2 * offset_44189 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44178 = ((volatile __local
                                            float *) red_arr_mem_44166)[sext_i32_i64(local_tid_44162 +
                                                                        offset_44189)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44179 = x_44177 + x_44178;
                                
                                x_44177 = defunc_1_op_res_44179;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44166)[sext_i32_i64(local_tid_44162)] =
                                    x_44177;
                            }
                        }
                        offset_44189 *= 2;
                    }
                    while (slt32(skip_waves_44190,
                                 squot32(sext_i64_i32(segred_group_sizze_38836) +
                                         wave_sizze_44164 - 1,
                                         wave_sizze_44164))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44189 = skip_waves_44190 * wave_sizze_44164;
                        if (slt32(local_tid_44162 + offset_44189,
                                  sext_i64_i32(segred_group_sizze_38836)) &&
                            ((local_tid_44162 - squot32(local_tid_44162,
                                                        wave_sizze_44164) *
                              wave_sizze_44164) == 0 &&
                             (squot32(local_tid_44162, wave_sizze_44164) & (2 *
                                                                            skip_waves_44190 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44178 = ((__local
                                            float *) red_arr_mem_44166)[sext_i32_i64(local_tid_44162 +
                                                                        offset_44189)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44179 = x_44177 + x_44178;
                                
                                x_44177 = defunc_1_op_res_44179;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44166)[sext_i32_i64(local_tid_44162)] =
                                    x_44177;
                            }
                        }
                        skip_waves_44190 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44162 == 0) {
                            ((__global float *) mem_43022)[gtid_38773 *
                                                           i32_res_28697 +
                                                           gtid_38774] =
                                x_44177;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38836
}
__kernel void mainzisegred_large_38921(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44256_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44254_backing_aligned_1,
                                       int64_t i32_res_28697,
                                       int64_t num_groups_38970,
                                       int64_t groups_per_segment_44240,
                                       int64_t elements_per_thread_44241,
                                       int64_t virt_num_groups_44242,
                                       int64_t threads_per_segment_44244,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_42807,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43028,
                                       __global unsigned char *mem_43088,
                                       __global
                                       unsigned char *group_res_arr_mem_44245,
                                       __global
                                       unsigned char *mainzicounter_mem_44247)
{
    #define segred_group_sizze_38969 (mainzisegred_group_sizze_38915)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44256_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44256_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44254_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44254_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44249;
    int32_t local_tid_44250;
    int64_t group_sizze_44253;
    int32_t wave_sizze_44252;
    int32_t group_tid_44251;
    
    global_tid_44249 = get_global_id(0);
    local_tid_44250 = get_local_id(0);
    group_sizze_44253 = get_local_size(0);
    wave_sizze_44252 = LOCKSTEP_WIDTH;
    group_tid_44251 = get_group_id(0);
    
    int32_t phys_tid_38921;
    
    phys_tid_38921 = global_tid_44249;
    
    __local char *red_arr_mem_44254;
    
    red_arr_mem_44254 = (__local char *) red_arr_mem_44254_backing_0;
    
    __local char *sync_arr_mem_44256;
    
    sync_arr_mem_44256 = (__local char *) sync_arr_mem_44256_backing_1;
    
    int32_t phys_group_id_44258;
    
    phys_group_id_44258 = get_group_id(0);
    for (int32_t i_44259 = 0; i_44259 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44242) - phys_group_id_44258,
                   sext_i64_i32(num_groups_38970)); i_44259++) {
        int32_t virt_group_id_44260 = phys_group_id_44258 + i_44259 *
                sext_i64_i32(num_groups_38970);
        int32_t flat_segment_id_44261 = squot32(virt_group_id_44260,
                                                sext_i64_i32(groups_per_segment_44240));
        int64_t global_tid_44262 = srem64(sext_i32_i64(virt_group_id_44260) *
                                          segred_group_sizze_38969 +
                                          sext_i32_i64(local_tid_44250),
                                          segred_group_sizze_38969 *
                                          groups_per_segment_44240);
        int64_t gtid_38910 = squot64(sext_i32_i64(flat_segment_id_44261),
                                     i32_res_28697);
        int64_t gtid_38911 = sext_i32_i64(flat_segment_id_44261) -
                squot64(sext_i32_i64(flat_segment_id_44261), i32_res_28697) *
                i32_res_28697;
        int64_t gtid_38920;
        float x_acc_44263;
        int64_t chunk_sizze_44264;
        
        chunk_sizze_44264 = smin64(elements_per_thread_44241,
                                   sdiv_up64(i32_res_28697 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44262)),
                                             threads_per_segment_44244));
        
        float x_38973;
        float x_38974;
        
        // neutral-initialise the accumulators
        {
            x_acc_44263 = 0.0F;
        }
        for (int64_t i_44268 = 0; i_44268 < chunk_sizze_44264; i_44268++) {
            gtid_38920 = sext_i32_i64(sext_i64_i32(global_tid_44262)) +
                threads_per_segment_44244 * i_44268;
            // apply map function
            {
                float x_38979 = ((__global
                                  float *) defunc_3_map_res_mem_43028)[gtid_38910 *
                                                                       i32_res_28697 +
                                                                       gtid_38920];
                float x_38980 = ((__global
                                  float *) defunc_3_map_res_mem_42807)[gtid_38910 *
                                                                       (i32_res_28697 *
                                                                        i32_res_28697) +
                                                                       gtid_38911 *
                                                                       i32_res_28697 +
                                                                       gtid_38920];
                float defunc_1_f_res_38981 = x_38979 * x_38980;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_38973 = x_acc_44263;
                }
                // load new values
                {
                    x_38974 = defunc_1_f_res_38981;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_38975 = x_38973 + x_38974;
                    
                    // store in accumulator
                    {
                        x_acc_44263 = defunc_1_op_res_38975;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_38973 = x_acc_44263;
            ((__local
              float *) red_arr_mem_44254)[sext_i32_i64(local_tid_44250)] =
                x_38973;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44269;
        int32_t skip_waves_44270;
        
        skip_waves_44270 = 1;
        
        float x_44265;
        float x_44266;
        
        offset_44269 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44250,
                      sext_i64_i32(segred_group_sizze_38969))) {
                x_44265 = ((__local
                            float *) red_arr_mem_44254)[sext_i32_i64(local_tid_44250 +
                                                        offset_44269)];
            }
        }
        offset_44269 = 1;
        while (slt32(offset_44269, wave_sizze_44252)) {
            if (slt32(local_tid_44250 + offset_44269,
                      sext_i64_i32(segred_group_sizze_38969)) &&
                ((local_tid_44250 - squot32(local_tid_44250, wave_sizze_44252) *
                  wave_sizze_44252) & (2 * offset_44269 - 1)) == 0) {
                // read array element
                {
                    x_44266 = ((volatile __local
                                float *) red_arr_mem_44254)[sext_i32_i64(local_tid_44250 +
                                                            offset_44269)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44267 = x_44265 + x_44266;
                    
                    x_44265 = defunc_1_op_res_44267;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44254)[sext_i32_i64(local_tid_44250)] =
                        x_44265;
                }
            }
            offset_44269 *= 2;
        }
        while (slt32(skip_waves_44270,
                     squot32(sext_i64_i32(segred_group_sizze_38969) +
                             wave_sizze_44252 - 1, wave_sizze_44252))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44269 = skip_waves_44270 * wave_sizze_44252;
            if (slt32(local_tid_44250 + offset_44269,
                      sext_i64_i32(segred_group_sizze_38969)) &&
                ((local_tid_44250 - squot32(local_tid_44250, wave_sizze_44252) *
                  wave_sizze_44252) == 0 && (squot32(local_tid_44250,
                                                     wave_sizze_44252) & (2 *
                                                                          skip_waves_44270 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44266 = ((__local
                                float *) red_arr_mem_44254)[sext_i32_i64(local_tid_44250 +
                                                            offset_44269)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44267 = x_44265 + x_44266;
                    
                    x_44265 = defunc_1_op_res_44267;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44254)[sext_i32_i64(local_tid_44250)] =
                        x_44265;
                }
            }
            skip_waves_44270 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44250) == (int64_t) 0) {
                x_acc_44263 = x_44265;
            }
        }
        if (groups_per_segment_44240 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44250 == 0) {
                    ((__global float *) mem_43088)[gtid_38910 * i32_res_28697 +
                                                   gtid_38911] = x_acc_44263;
                }
            }
        } else {
            int32_t old_counter_44271;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44250 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44245)[sext_i32_i64(virt_group_id_44260) *
                                                        segred_group_sizze_38969] =
                        x_acc_44263;
                    mem_fence_global();
                    old_counter_44271 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44247)[sext_i32_i64(srem32(flat_segment_id_44261,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44256)[(int64_t) 0] =
                        old_counter_44271 == groups_per_segment_44240 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44272;
            
            is_last_group_44272 = ((__local
                                    bool *) sync_arr_mem_44256)[(int64_t) 0];
            if (is_last_group_44272) {
                if (local_tid_44250 == 0) {
                    old_counter_44271 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44247)[sext_i32_i64(srem32(flat_segment_id_44261,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44240));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44273 =
                            sdiv_up64(groups_per_segment_44240,
                                      segred_group_sizze_38969);
                    
                    x_38973 = 0.0F;
                    for (int64_t i_44274 = 0; i_44274 < read_per_thread_44273;
                         i_44274++) {
                        int64_t group_res_id_44275 =
                                sext_i32_i64(local_tid_44250) *
                                read_per_thread_44273 + i_44274;
                        int64_t index_of_group_res_44276 =
                                sext_i32_i64(flat_segment_id_44261) *
                                groups_per_segment_44240 + group_res_id_44275;
                        
                        if (slt64(group_res_id_44275,
                                  groups_per_segment_44240)) {
                            x_38974 = ((__global
                                        float *) group_res_arr_mem_44245)[index_of_group_res_44276 *
                                                                          segred_group_sizze_38969];
                            
                            float defunc_1_op_res_38975;
                            
                            defunc_1_op_res_38975 = x_38973 + x_38974;
                            x_38973 = defunc_1_op_res_38975;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44254)[sext_i32_i64(local_tid_44250)] =
                    x_38973;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44277;
                    int32_t skip_waves_44278;
                    
                    skip_waves_44278 = 1;
                    
                    float x_44265;
                    float x_44266;
                    
                    offset_44277 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44250,
                                  sext_i64_i32(segred_group_sizze_38969))) {
                            x_44265 = ((__local
                                        float *) red_arr_mem_44254)[sext_i32_i64(local_tid_44250 +
                                                                    offset_44277)];
                        }
                    }
                    offset_44277 = 1;
                    while (slt32(offset_44277, wave_sizze_44252)) {
                        if (slt32(local_tid_44250 + offset_44277,
                                  sext_i64_i32(segred_group_sizze_38969)) &&
                            ((local_tid_44250 - squot32(local_tid_44250,
                                                        wave_sizze_44252) *
                              wave_sizze_44252) & (2 * offset_44277 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44266 = ((volatile __local
                                            float *) red_arr_mem_44254)[sext_i32_i64(local_tid_44250 +
                                                                        offset_44277)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44267 = x_44265 + x_44266;
                                
                                x_44265 = defunc_1_op_res_44267;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44254)[sext_i32_i64(local_tid_44250)] =
                                    x_44265;
                            }
                        }
                        offset_44277 *= 2;
                    }
                    while (slt32(skip_waves_44278,
                                 squot32(sext_i64_i32(segred_group_sizze_38969) +
                                         wave_sizze_44252 - 1,
                                         wave_sizze_44252))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44277 = skip_waves_44278 * wave_sizze_44252;
                        if (slt32(local_tid_44250 + offset_44277,
                                  sext_i64_i32(segred_group_sizze_38969)) &&
                            ((local_tid_44250 - squot32(local_tid_44250,
                                                        wave_sizze_44252) *
                              wave_sizze_44252) == 0 &&
                             (squot32(local_tid_44250, wave_sizze_44252) & (2 *
                                                                            skip_waves_44278 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44266 = ((__local
                                            float *) red_arr_mem_44254)[sext_i32_i64(local_tid_44250 +
                                                                        offset_44277)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44267 = x_44265 + x_44266;
                                
                                x_44265 = defunc_1_op_res_44267;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44254)[sext_i32_i64(local_tid_44250)] =
                                    x_44265;
                            }
                        }
                        skip_waves_44278 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44250 == 0) {
                            ((__global float *) mem_43088)[gtid_38910 *
                                                           i32_res_28697 +
                                                           gtid_38911] =
                                x_44265;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38969
}
__kernel void mainzisegred_large_39051(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44388_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44386_backing_aligned_1,
                                       int64_t N_28681, int64_t i32_res_28697,
                                       int64_t num_groups_39098,
                                       int64_t groups_per_segment_44372,
                                       int64_t elements_per_thread_44373,
                                       int64_t virt_num_groups_44374,
                                       int64_t threads_per_segment_44376,
                                       __global unsigned char *mem_42575,
                                       __global
                                       unsigned char *defunc_4_map_res_mem_43094,
                                       __global unsigned char *mem_43312,
                                       __global
                                       unsigned char *group_res_arr_mem_44377,
                                       __global
                                       unsigned char *mainzicounter_mem_44379)
{
    #define segred_group_sizze_39097 (mainzisegred_group_sizze_39045)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44388_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44388_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44386_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44386_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44381;
    int32_t local_tid_44382;
    int64_t group_sizze_44385;
    int32_t wave_sizze_44384;
    int32_t group_tid_44383;
    
    global_tid_44381 = get_global_id(0);
    local_tid_44382 = get_local_id(0);
    group_sizze_44385 = get_local_size(0);
    wave_sizze_44384 = LOCKSTEP_WIDTH;
    group_tid_44383 = get_group_id(0);
    
    int32_t phys_tid_39051;
    
    phys_tid_39051 = global_tid_44381;
    
    __local char *red_arr_mem_44386;
    
    red_arr_mem_44386 = (__local char *) red_arr_mem_44386_backing_0;
    
    __local char *sync_arr_mem_44388;
    
    sync_arr_mem_44388 = (__local char *) sync_arr_mem_44388_backing_1;
    
    int32_t phys_group_id_44390;
    
    phys_group_id_44390 = get_group_id(0);
    for (int32_t i_44391 = 0; i_44391 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44374) - phys_group_id_44390,
                   sext_i64_i32(num_groups_39098)); i_44391++) {
        int32_t virt_group_id_44392 = phys_group_id_44390 + i_44391 *
                sext_i64_i32(num_groups_39098);
        int32_t flat_segment_id_44393 = squot32(virt_group_id_44392,
                                                sext_i64_i32(groups_per_segment_44372));
        int64_t global_tid_44394 = srem64(sext_i32_i64(virt_group_id_44392) *
                                          segred_group_sizze_39097 +
                                          sext_i32_i64(local_tid_44382),
                                          segred_group_sizze_39097 *
                                          groups_per_segment_44372);
        int64_t gtid_39040 = squot64(sext_i32_i64(flat_segment_id_44393),
                                     N_28681);
        int64_t gtid_39041 = sext_i32_i64(flat_segment_id_44393) -
                squot64(sext_i32_i64(flat_segment_id_44393), N_28681) * N_28681;
        int64_t gtid_39050;
        float x_acc_44395;
        int64_t chunk_sizze_44396;
        
        chunk_sizze_44396 = smin64(elements_per_thread_44373,
                                   sdiv_up64(i32_res_28697 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44394)),
                                             threads_per_segment_44376));
        
        float x_39101;
        float x_39102;
        
        // neutral-initialise the accumulators
        {
            x_acc_44395 = 0.0F;
        }
        for (int64_t i_44400 = 0; i_44400 < chunk_sizze_44396; i_44400++) {
            gtid_39050 = sext_i32_i64(sext_i64_i32(global_tid_44394)) +
                threads_per_segment_44376 * i_44400;
            // apply map function
            {
                float x_39106 = ((__global
                                  float *) defunc_4_map_res_mem_43094)[gtid_39040 *
                                                                       i32_res_28697 +
                                                                       gtid_39050];
                float x_39107 = ((__global float *) mem_42575)[gtid_39041 *
                                                               i32_res_28697 +
                                                               gtid_39050];
                float defunc_1_f_res_39108 = x_39106 * x_39107;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_39101 = x_acc_44395;
                }
                // load new values
                {
                    x_39102 = defunc_1_f_res_39108;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_39103 = x_39101 + x_39102;
                    
                    // store in accumulator
                    {
                        x_acc_44395 = defunc_1_op_res_39103;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_39101 = x_acc_44395;
            ((__local
              float *) red_arr_mem_44386)[sext_i32_i64(local_tid_44382)] =
                x_39101;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44401;
        int32_t skip_waves_44402;
        
        skip_waves_44402 = 1;
        
        float x_44397;
        float x_44398;
        
        offset_44401 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44382,
                      sext_i64_i32(segred_group_sizze_39097))) {
                x_44397 = ((__local
                            float *) red_arr_mem_44386)[sext_i32_i64(local_tid_44382 +
                                                        offset_44401)];
            }
        }
        offset_44401 = 1;
        while (slt32(offset_44401, wave_sizze_44384)) {
            if (slt32(local_tid_44382 + offset_44401,
                      sext_i64_i32(segred_group_sizze_39097)) &&
                ((local_tid_44382 - squot32(local_tid_44382, wave_sizze_44384) *
                  wave_sizze_44384) & (2 * offset_44401 - 1)) == 0) {
                // read array element
                {
                    x_44398 = ((volatile __local
                                float *) red_arr_mem_44386)[sext_i32_i64(local_tid_44382 +
                                                            offset_44401)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44399 = x_44397 + x_44398;
                    
                    x_44397 = defunc_1_op_res_44399;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44386)[sext_i32_i64(local_tid_44382)] =
                        x_44397;
                }
            }
            offset_44401 *= 2;
        }
        while (slt32(skip_waves_44402,
                     squot32(sext_i64_i32(segred_group_sizze_39097) +
                             wave_sizze_44384 - 1, wave_sizze_44384))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44401 = skip_waves_44402 * wave_sizze_44384;
            if (slt32(local_tid_44382 + offset_44401,
                      sext_i64_i32(segred_group_sizze_39097)) &&
                ((local_tid_44382 - squot32(local_tid_44382, wave_sizze_44384) *
                  wave_sizze_44384) == 0 && (squot32(local_tid_44382,
                                                     wave_sizze_44384) & (2 *
                                                                          skip_waves_44402 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44398 = ((__local
                                float *) red_arr_mem_44386)[sext_i32_i64(local_tid_44382 +
                                                            offset_44401)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44399 = x_44397 + x_44398;
                    
                    x_44397 = defunc_1_op_res_44399;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44386)[sext_i32_i64(local_tid_44382)] =
                        x_44397;
                }
            }
            skip_waves_44402 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44382) == (int64_t) 0) {
                x_acc_44395 = x_44397;
            }
        }
        if (groups_per_segment_44372 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44382 == 0) {
                    ((__global float *) mem_43312)[gtid_39040 * N_28681 +
                                                   gtid_39041] = x_acc_44395;
                }
            }
        } else {
            int32_t old_counter_44403;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44382 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44377)[sext_i32_i64(virt_group_id_44392) *
                                                        segred_group_sizze_39097] =
                        x_acc_44395;
                    mem_fence_global();
                    old_counter_44403 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44379)[sext_i32_i64(srem32(flat_segment_id_44393,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44388)[(int64_t) 0] =
                        old_counter_44403 == groups_per_segment_44372 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44404;
            
            is_last_group_44404 = ((__local
                                    bool *) sync_arr_mem_44388)[(int64_t) 0];
            if (is_last_group_44404) {
                if (local_tid_44382 == 0) {
                    old_counter_44403 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44379)[sext_i32_i64(srem32(flat_segment_id_44393,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44372));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44405 =
                            sdiv_up64(groups_per_segment_44372,
                                      segred_group_sizze_39097);
                    
                    x_39101 = 0.0F;
                    for (int64_t i_44406 = 0; i_44406 < read_per_thread_44405;
                         i_44406++) {
                        int64_t group_res_id_44407 =
                                sext_i32_i64(local_tid_44382) *
                                read_per_thread_44405 + i_44406;
                        int64_t index_of_group_res_44408 =
                                sext_i32_i64(flat_segment_id_44393) *
                                groups_per_segment_44372 + group_res_id_44407;
                        
                        if (slt64(group_res_id_44407,
                                  groups_per_segment_44372)) {
                            x_39102 = ((__global
                                        float *) group_res_arr_mem_44377)[index_of_group_res_44408 *
                                                                          segred_group_sizze_39097];
                            
                            float defunc_1_op_res_39103;
                            
                            defunc_1_op_res_39103 = x_39101 + x_39102;
                            x_39101 = defunc_1_op_res_39103;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44386)[sext_i32_i64(local_tid_44382)] =
                    x_39101;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44409;
                    int32_t skip_waves_44410;
                    
                    skip_waves_44410 = 1;
                    
                    float x_44397;
                    float x_44398;
                    
                    offset_44409 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44382,
                                  sext_i64_i32(segred_group_sizze_39097))) {
                            x_44397 = ((__local
                                        float *) red_arr_mem_44386)[sext_i32_i64(local_tid_44382 +
                                                                    offset_44409)];
                        }
                    }
                    offset_44409 = 1;
                    while (slt32(offset_44409, wave_sizze_44384)) {
                        if (slt32(local_tid_44382 + offset_44409,
                                  sext_i64_i32(segred_group_sizze_39097)) &&
                            ((local_tid_44382 - squot32(local_tid_44382,
                                                        wave_sizze_44384) *
                              wave_sizze_44384) & (2 * offset_44409 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44398 = ((volatile __local
                                            float *) red_arr_mem_44386)[sext_i32_i64(local_tid_44382 +
                                                                        offset_44409)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44399 = x_44397 + x_44398;
                                
                                x_44397 = defunc_1_op_res_44399;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44386)[sext_i32_i64(local_tid_44382)] =
                                    x_44397;
                            }
                        }
                        offset_44409 *= 2;
                    }
                    while (slt32(skip_waves_44410,
                                 squot32(sext_i64_i32(segred_group_sizze_39097) +
                                         wave_sizze_44384 - 1,
                                         wave_sizze_44384))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44409 = skip_waves_44410 * wave_sizze_44384;
                        if (slt32(local_tid_44382 + offset_44409,
                                  sext_i64_i32(segred_group_sizze_39097)) &&
                            ((local_tid_44382 - squot32(local_tid_44382,
                                                        wave_sizze_44384) *
                              wave_sizze_44384) == 0 &&
                             (squot32(local_tid_44382, wave_sizze_44384) & (2 *
                                                                            skip_waves_44410 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44398 = ((__local
                                            float *) red_arr_mem_44386)[sext_i32_i64(local_tid_44382 +
                                                                        offset_44409)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44399 = x_44397 + x_44398;
                                
                                x_44397 = defunc_1_op_res_44399;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44386)[sext_i32_i64(local_tid_44382)] =
                                    x_44397;
                            }
                        }
                        skip_waves_44410 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44382 == 0) {
                            ((__global float *) mem_43312)[gtid_39040 *
                                                           N_28681 +
                                                           gtid_39041] =
                                x_44397;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39097
}
__kernel void mainzisegred_large_39617(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44640_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44638_backing_aligned_1,
                                       int64_t N_28681, int64_t i32_res_28691,
                                       int64_t num_groups_39664,
                                       int64_t groups_per_segment_44624,
                                       int64_t elements_per_thread_44625,
                                       int64_t virt_num_groups_44626,
                                       int64_t threads_per_segment_44628,
                                       __global
                                       unsigned char *defunc_4_map_res_mem_43356,
                                       __global unsigned char *mem_43410,
                                       __global unsigned char *mem_43413,
                                       __global
                                       unsigned char *group_res_arr_mem_44629,
                                       __global
                                       unsigned char *mainzicounter_mem_44631)
{
    #define segred_group_sizze_39663 (mainzisegred_group_sizze_39611)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44640_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44640_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44638_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44638_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44633;
    int32_t local_tid_44634;
    int64_t group_sizze_44637;
    int32_t wave_sizze_44636;
    int32_t group_tid_44635;
    
    global_tid_44633 = get_global_id(0);
    local_tid_44634 = get_local_id(0);
    group_sizze_44637 = get_local_size(0);
    wave_sizze_44636 = LOCKSTEP_WIDTH;
    group_tid_44635 = get_group_id(0);
    
    int32_t phys_tid_39617;
    
    phys_tid_39617 = global_tid_44633;
    
    __local char *red_arr_mem_44638;
    
    red_arr_mem_44638 = (__local char *) red_arr_mem_44638_backing_0;
    
    __local char *sync_arr_mem_44640;
    
    sync_arr_mem_44640 = (__local char *) sync_arr_mem_44640_backing_1;
    
    int32_t phys_group_id_44642;
    
    phys_group_id_44642 = get_group_id(0);
    for (int32_t i_44643 = 0; i_44643 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44626) - phys_group_id_44642,
                   sext_i64_i32(num_groups_39664)); i_44643++) {
        int32_t virt_group_id_44644 = phys_group_id_44642 + i_44643 *
                sext_i64_i32(num_groups_39664);
        int32_t flat_segment_id_44645 = squot32(virt_group_id_44644,
                                                sext_i64_i32(groups_per_segment_44624));
        int64_t global_tid_44646 = srem64(sext_i32_i64(virt_group_id_44644) *
                                          segred_group_sizze_39663 +
                                          sext_i32_i64(local_tid_44634),
                                          segred_group_sizze_39663 *
                                          groups_per_segment_44624);
        int64_t gtid_39608 = sext_i32_i64(flat_segment_id_44645);
        int64_t gtid_39616;
        float x_acc_44647;
        int64_t chunk_sizze_44648;
        
        chunk_sizze_44648 = smin64(elements_per_thread_44625,
                                   sdiv_up64(i32_res_28691 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44646)),
                                             threads_per_segment_44628));
        
        float x_39667;
        float x_39668;
        
        // neutral-initialise the accumulators
        {
            x_acc_44647 = 0.0F;
        }
        for (int64_t i_44652 = 0; i_44652 < chunk_sizze_44648; i_44652++) {
            gtid_39616 = sext_i32_i64(sext_i64_i32(global_tid_44646)) +
                threads_per_segment_44628 * i_44652;
            // apply map function
            {
                int32_t defunc_0_f_res_39671 = ((__global
                                                 int32_t *) mem_43410)[gtid_39608];
                int32_t index_primexp_40595 = sext_i64_i32(gtid_39616);
                bool cond_39673 = slt32(index_primexp_40595,
                                        defunc_0_f_res_39671);
                float defunc_0_f_res_39674;
                
                if (cond_39673) {
                    int64_t i_39675 = sext_i32_i64(index_primexp_40595);
                    float defunc_0_f_res_t_res_39676 = ((__global
                                                         float *) defunc_4_map_res_mem_43356)[gtid_39608 *
                                                                                              N_28681 +
                                                                                              i_39675];
                    
                    defunc_0_f_res_39674 = defunc_0_f_res_t_res_39676;
                } else {
                    defunc_0_f_res_39674 = 0.0F;
                }
                
                float defunc_0_f_res_39677 = defunc_0_f_res_39674 *
                      defunc_0_f_res_39674;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_39667 = x_acc_44647;
                }
                // load new values
                {
                    x_39668 = defunc_0_f_res_39677;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_39669 = x_39667 + x_39668;
                    
                    // store in accumulator
                    {
                        x_acc_44647 = defunc_1_op_res_39669;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_39667 = x_acc_44647;
            ((__local
              float *) red_arr_mem_44638)[sext_i32_i64(local_tid_44634)] =
                x_39667;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44653;
        int32_t skip_waves_44654;
        
        skip_waves_44654 = 1;
        
        float x_44649;
        float x_44650;
        
        offset_44653 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44634,
                      sext_i64_i32(segred_group_sizze_39663))) {
                x_44649 = ((__local
                            float *) red_arr_mem_44638)[sext_i32_i64(local_tid_44634 +
                                                        offset_44653)];
            }
        }
        offset_44653 = 1;
        while (slt32(offset_44653, wave_sizze_44636)) {
            if (slt32(local_tid_44634 + offset_44653,
                      sext_i64_i32(segred_group_sizze_39663)) &&
                ((local_tid_44634 - squot32(local_tid_44634, wave_sizze_44636) *
                  wave_sizze_44636) & (2 * offset_44653 - 1)) == 0) {
                // read array element
                {
                    x_44650 = ((volatile __local
                                float *) red_arr_mem_44638)[sext_i32_i64(local_tid_44634 +
                                                            offset_44653)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44651 = x_44649 + x_44650;
                    
                    x_44649 = defunc_1_op_res_44651;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44638)[sext_i32_i64(local_tid_44634)] =
                        x_44649;
                }
            }
            offset_44653 *= 2;
        }
        while (slt32(skip_waves_44654,
                     squot32(sext_i64_i32(segred_group_sizze_39663) +
                             wave_sizze_44636 - 1, wave_sizze_44636))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44653 = skip_waves_44654 * wave_sizze_44636;
            if (slt32(local_tid_44634 + offset_44653,
                      sext_i64_i32(segred_group_sizze_39663)) &&
                ((local_tid_44634 - squot32(local_tid_44634, wave_sizze_44636) *
                  wave_sizze_44636) == 0 && (squot32(local_tid_44634,
                                                     wave_sizze_44636) & (2 *
                                                                          skip_waves_44654 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44650 = ((__local
                                float *) red_arr_mem_44638)[sext_i32_i64(local_tid_44634 +
                                                            offset_44653)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44651 = x_44649 + x_44650;
                    
                    x_44649 = defunc_1_op_res_44651;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44638)[sext_i32_i64(local_tid_44634)] =
                        x_44649;
                }
            }
            skip_waves_44654 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44634) == (int64_t) 0) {
                x_acc_44647 = x_44649;
            }
        }
        if (groups_per_segment_44624 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44634 == 0) {
                    ((__global float *) mem_43413)[gtid_39608] = x_acc_44647;
                }
            }
        } else {
            int32_t old_counter_44655;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44634 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44629)[sext_i32_i64(virt_group_id_44644) *
                                                        segred_group_sizze_39663] =
                        x_acc_44647;
                    mem_fence_global();
                    old_counter_44655 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44631)[sext_i32_i64(srem32(flat_segment_id_44645,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44640)[(int64_t) 0] =
                        old_counter_44655 == groups_per_segment_44624 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44656;
            
            is_last_group_44656 = ((__local
                                    bool *) sync_arr_mem_44640)[(int64_t) 0];
            if (is_last_group_44656) {
                if (local_tid_44634 == 0) {
                    old_counter_44655 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44631)[sext_i32_i64(srem32(flat_segment_id_44645,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44624));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44657 =
                            sdiv_up64(groups_per_segment_44624,
                                      segred_group_sizze_39663);
                    
                    x_39667 = 0.0F;
                    for (int64_t i_44658 = 0; i_44658 < read_per_thread_44657;
                         i_44658++) {
                        int64_t group_res_id_44659 =
                                sext_i32_i64(local_tid_44634) *
                                read_per_thread_44657 + i_44658;
                        int64_t index_of_group_res_44660 =
                                sext_i32_i64(flat_segment_id_44645) *
                                groups_per_segment_44624 + group_res_id_44659;
                        
                        if (slt64(group_res_id_44659,
                                  groups_per_segment_44624)) {
                            x_39668 = ((__global
                                        float *) group_res_arr_mem_44629)[index_of_group_res_44660 *
                                                                          segred_group_sizze_39663];
                            
                            float defunc_1_op_res_39669;
                            
                            defunc_1_op_res_39669 = x_39667 + x_39668;
                            x_39667 = defunc_1_op_res_39669;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44638)[sext_i32_i64(local_tid_44634)] =
                    x_39667;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44661;
                    int32_t skip_waves_44662;
                    
                    skip_waves_44662 = 1;
                    
                    float x_44649;
                    float x_44650;
                    
                    offset_44661 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44634,
                                  sext_i64_i32(segred_group_sizze_39663))) {
                            x_44649 = ((__local
                                        float *) red_arr_mem_44638)[sext_i32_i64(local_tid_44634 +
                                                                    offset_44661)];
                        }
                    }
                    offset_44661 = 1;
                    while (slt32(offset_44661, wave_sizze_44636)) {
                        if (slt32(local_tid_44634 + offset_44661,
                                  sext_i64_i32(segred_group_sizze_39663)) &&
                            ((local_tid_44634 - squot32(local_tid_44634,
                                                        wave_sizze_44636) *
                              wave_sizze_44636) & (2 * offset_44661 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44650 = ((volatile __local
                                            float *) red_arr_mem_44638)[sext_i32_i64(local_tid_44634 +
                                                                        offset_44661)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44651 = x_44649 + x_44650;
                                
                                x_44649 = defunc_1_op_res_44651;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44638)[sext_i32_i64(local_tid_44634)] =
                                    x_44649;
                            }
                        }
                        offset_44661 *= 2;
                    }
                    while (slt32(skip_waves_44662,
                                 squot32(sext_i64_i32(segred_group_sizze_39663) +
                                         wave_sizze_44636 - 1,
                                         wave_sizze_44636))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44661 = skip_waves_44662 * wave_sizze_44636;
                        if (slt32(local_tid_44634 + offset_44661,
                                  sext_i64_i32(segred_group_sizze_39663)) &&
                            ((local_tid_44634 - squot32(local_tid_44634,
                                                        wave_sizze_44636) *
                              wave_sizze_44636) == 0 &&
                             (squot32(local_tid_44634, wave_sizze_44636) & (2 *
                                                                            skip_waves_44662 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44650 = ((__local
                                            float *) red_arr_mem_44638)[sext_i32_i64(local_tid_44634 +
                                                                        offset_44661)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44651 = x_44649 + x_44650;
                                
                                x_44649 = defunc_1_op_res_44651;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44638)[sext_i32_i64(local_tid_44634)] =
                                    x_44649;
                            }
                        }
                        skip_waves_44662 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44634 == 0) {
                            ((__global float *) mem_43413)[gtid_39608] =
                                x_44649;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39663
}
__kernel void mainzisegred_large_39638(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44580_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44578_backing_aligned_1,
                                       int64_t N_28681, int64_t i32_res_28691,
                                       int64_t num_groups_39650,
                                       int64_t groups_per_segment_44564,
                                       int64_t elements_per_thread_44565,
                                       int64_t virt_num_groups_44566,
                                       int64_t threads_per_segment_44568,
                                       __global unsigned char *images_mem_42559,
                                       __global unsigned char *mem_43410,
                                       __global
                                       unsigned char *group_res_arr_mem_44569,
                                       __global
                                       unsigned char *mainzicounter_mem_44571)
{
    #define segred_group_sizze_39649 (mainzisegred_group_sizze_39632)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44580_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44580_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44578_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44578_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44573;
    int32_t local_tid_44574;
    int64_t group_sizze_44577;
    int32_t wave_sizze_44576;
    int32_t group_tid_44575;
    
    global_tid_44573 = get_global_id(0);
    local_tid_44574 = get_local_id(0);
    group_sizze_44577 = get_local_size(0);
    wave_sizze_44576 = LOCKSTEP_WIDTH;
    group_tid_44575 = get_group_id(0);
    
    int32_t phys_tid_39638;
    
    phys_tid_39638 = global_tid_44573;
    
    __local char *red_arr_mem_44578;
    
    red_arr_mem_44578 = (__local char *) red_arr_mem_44578_backing_0;
    
    __local char *sync_arr_mem_44580;
    
    sync_arr_mem_44580 = (__local char *) sync_arr_mem_44580_backing_1;
    
    int32_t phys_group_id_44582;
    
    phys_group_id_44582 = get_group_id(0);
    for (int32_t i_44583 = 0; i_44583 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44566) - phys_group_id_44582,
                   sext_i64_i32(num_groups_39650)); i_44583++) {
        int32_t virt_group_id_44584 = phys_group_id_44582 + i_44583 *
                sext_i64_i32(num_groups_39650);
        int32_t flat_segment_id_44585 = squot32(virt_group_id_44584,
                                                sext_i64_i32(groups_per_segment_44564));
        int64_t global_tid_44586 = srem64(sext_i32_i64(virt_group_id_44584) *
                                          segred_group_sizze_39649 +
                                          sext_i32_i64(local_tid_44574),
                                          segred_group_sizze_39649 *
                                          groups_per_segment_44564);
        int64_t gtid_39629 = sext_i32_i64(flat_segment_id_44585);
        int64_t gtid_39637;
        int32_t x_acc_44587;
        int64_t chunk_sizze_44588;
        
        chunk_sizze_44588 = smin64(elements_per_thread_44565,
                                   sdiv_up64(i32_res_28691 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44586)),
                                             threads_per_segment_44568));
        
        int32_t x_39653;
        int32_t x_39654;
        
        // neutral-initialise the accumulators
        {
            x_acc_44587 = 0;
        }
        for (int64_t i_44592 = 0; i_44592 < chunk_sizze_44588; i_44592++) {
            gtid_39637 = sext_i32_i64(sext_i64_i32(global_tid_44586)) +
                threads_per_segment_44568 * i_44592;
            // apply map function
            {
                float x_39657 = ((__global
                                  float *) images_mem_42559)[gtid_39629 *
                                                             N_28681 +
                                                             gtid_39637];
                bool isnan_res_39658;
                
                isnan_res_39658 = futrts_isnan32(x_39657);
                
                bool cond_39659 = !isnan_res_39658;
                int32_t defunc_0_f_res_39660 = btoi_bool_i32(cond_39659);
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_39653 = x_acc_44587;
                }
                // load new values
                {
                    x_39654 = defunc_0_f_res_39660;
                }
                // apply reduction operator
                {
                    int32_t defunc_1_op_res_39655 = add32(x_39653, x_39654);
                    
                    // store in accumulator
                    {
                        x_acc_44587 = defunc_1_op_res_39655;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_39653 = x_acc_44587;
            ((__local
              int32_t *) red_arr_mem_44578)[sext_i32_i64(local_tid_44574)] =
                x_39653;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44593;
        int32_t skip_waves_44594;
        
        skip_waves_44594 = 1;
        
        int32_t x_44589;
        int32_t x_44590;
        
        offset_44593 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44574,
                      sext_i64_i32(segred_group_sizze_39649))) {
                x_44589 = ((__local
                            int32_t *) red_arr_mem_44578)[sext_i32_i64(local_tid_44574 +
                                                          offset_44593)];
            }
        }
        offset_44593 = 1;
        while (slt32(offset_44593, wave_sizze_44576)) {
            if (slt32(local_tid_44574 + offset_44593,
                      sext_i64_i32(segred_group_sizze_39649)) &&
                ((local_tid_44574 - squot32(local_tid_44574, wave_sizze_44576) *
                  wave_sizze_44576) & (2 * offset_44593 - 1)) == 0) {
                // read array element
                {
                    x_44590 = ((volatile __local
                                int32_t *) red_arr_mem_44578)[sext_i32_i64(local_tid_44574 +
                                                              offset_44593)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_44591 = add32(x_44589, x_44590);
                    
                    x_44589 = defunc_1_op_res_44591;
                }
                // write result of operation
                {
                    ((volatile __local
                      int32_t *) red_arr_mem_44578)[sext_i32_i64(local_tid_44574)] =
                        x_44589;
                }
            }
            offset_44593 *= 2;
        }
        while (slt32(skip_waves_44594,
                     squot32(sext_i64_i32(segred_group_sizze_39649) +
                             wave_sizze_44576 - 1, wave_sizze_44576))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44593 = skip_waves_44594 * wave_sizze_44576;
            if (slt32(local_tid_44574 + offset_44593,
                      sext_i64_i32(segred_group_sizze_39649)) &&
                ((local_tid_44574 - squot32(local_tid_44574, wave_sizze_44576) *
                  wave_sizze_44576) == 0 && (squot32(local_tid_44574,
                                                     wave_sizze_44576) & (2 *
                                                                          skip_waves_44594 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44590 = ((__local
                                int32_t *) red_arr_mem_44578)[sext_i32_i64(local_tid_44574 +
                                                              offset_44593)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_44591 = add32(x_44589, x_44590);
                    
                    x_44589 = defunc_1_op_res_44591;
                }
                // write result of operation
                {
                    ((__local
                      int32_t *) red_arr_mem_44578)[sext_i32_i64(local_tid_44574)] =
                        x_44589;
                }
            }
            skip_waves_44594 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44574) == (int64_t) 0) {
                x_acc_44587 = x_44589;
            }
        }
        if (groups_per_segment_44564 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44574 == 0) {
                    ((__global int32_t *) mem_43410)[gtid_39629] = x_acc_44587;
                }
            }
        } else {
            int32_t old_counter_44595;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44574 == 0) {
                    ((__global
                      int32_t *) group_res_arr_mem_44569)[sext_i32_i64(virt_group_id_44584) *
                                                          segred_group_sizze_39649] =
                        x_acc_44587;
                    mem_fence_global();
                    old_counter_44595 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44571)[sext_i32_i64(srem32(flat_segment_id_44585,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44580)[(int64_t) 0] =
                        old_counter_44595 == groups_per_segment_44564 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44596;
            
            is_last_group_44596 = ((__local
                                    bool *) sync_arr_mem_44580)[(int64_t) 0];
            if (is_last_group_44596) {
                if (local_tid_44574 == 0) {
                    old_counter_44595 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44571)[sext_i32_i64(srem32(flat_segment_id_44585,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44564));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44597 =
                            sdiv_up64(groups_per_segment_44564,
                                      segred_group_sizze_39649);
                    
                    x_39653 = 0;
                    for (int64_t i_44598 = 0; i_44598 < read_per_thread_44597;
                         i_44598++) {
                        int64_t group_res_id_44599 =
                                sext_i32_i64(local_tid_44574) *
                                read_per_thread_44597 + i_44598;
                        int64_t index_of_group_res_44600 =
                                sext_i32_i64(flat_segment_id_44585) *
                                groups_per_segment_44564 + group_res_id_44599;
                        
                        if (slt64(group_res_id_44599,
                                  groups_per_segment_44564)) {
                            x_39654 = ((__global
                                        int32_t *) group_res_arr_mem_44569)[index_of_group_res_44600 *
                                                                            segred_group_sizze_39649];
                            
                            int32_t defunc_1_op_res_39655;
                            
                            defunc_1_op_res_39655 = add32(x_39653, x_39654);
                            x_39653 = defunc_1_op_res_39655;
                        }
                    }
                }
                ((__local
                  int32_t *) red_arr_mem_44578)[sext_i32_i64(local_tid_44574)] =
                    x_39653;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44601;
                    int32_t skip_waves_44602;
                    
                    skip_waves_44602 = 1;
                    
                    int32_t x_44589;
                    int32_t x_44590;
                    
                    offset_44601 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44574,
                                  sext_i64_i32(segred_group_sizze_39649))) {
                            x_44589 = ((__local
                                        int32_t *) red_arr_mem_44578)[sext_i32_i64(local_tid_44574 +
                                                                      offset_44601)];
                        }
                    }
                    offset_44601 = 1;
                    while (slt32(offset_44601, wave_sizze_44576)) {
                        if (slt32(local_tid_44574 + offset_44601,
                                  sext_i64_i32(segred_group_sizze_39649)) &&
                            ((local_tid_44574 - squot32(local_tid_44574,
                                                        wave_sizze_44576) *
                              wave_sizze_44576) & (2 * offset_44601 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44590 = ((volatile __local
                                            int32_t *) red_arr_mem_44578)[sext_i32_i64(local_tid_44574 +
                                                                          offset_44601)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_44591 = add32(x_44589,
                                                                      x_44590);
                                
                                x_44589 = defunc_1_op_res_44591;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_44578)[sext_i32_i64(local_tid_44574)] =
                                    x_44589;
                            }
                        }
                        offset_44601 *= 2;
                    }
                    while (slt32(skip_waves_44602,
                                 squot32(sext_i64_i32(segred_group_sizze_39649) +
                                         wave_sizze_44576 - 1,
                                         wave_sizze_44576))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44601 = skip_waves_44602 * wave_sizze_44576;
                        if (slt32(local_tid_44574 + offset_44601,
                                  sext_i64_i32(segred_group_sizze_39649)) &&
                            ((local_tid_44574 - squot32(local_tid_44574,
                                                        wave_sizze_44576) *
                              wave_sizze_44576) == 0 &&
                             (squot32(local_tid_44574, wave_sizze_44576) & (2 *
                                                                            skip_waves_44602 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44590 = ((__local
                                            int32_t *) red_arr_mem_44578)[sext_i32_i64(local_tid_44574 +
                                                                          offset_44601)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_44591 = add32(x_44589,
                                                                      x_44590);
                                
                                x_44589 = defunc_1_op_res_44591;
                            }
                            // write result of operation
                            {
                                ((__local
                                  int32_t *) red_arr_mem_44578)[sext_i32_i64(local_tid_44574)] =
                                    x_44589;
                            }
                        }
                        skip_waves_44602 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44574 == 0) {
                            ((__global int32_t *) mem_43410)[gtid_39629] =
                                x_44589;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39649
}
__kernel void mainzisegred_large_39789(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44749_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44747_backing_aligned_1,
                                       int64_t N_28681, int64_t i32_res_29052,
                                       int64_t num_groups_39807,
                                       int64_t groups_per_segment_44733,
                                       int64_t elements_per_thread_44734,
                                       int64_t virt_num_groups_44735,
                                       int64_t threads_per_segment_44737,
                                       __global
                                       unsigned char *defunc_4_map_res_mem_43356,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43422,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43423,
                                       __global unsigned char *mem_43456,
                                       __global
                                       unsigned char *group_res_arr_mem_44738,
                                       __global
                                       unsigned char *mainzicounter_mem_44740)
{
    #define segred_group_sizze_39806 (mainzisegred_group_sizze_39783)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44749_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44749_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44747_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44747_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44742;
    int32_t local_tid_44743;
    int64_t group_sizze_44746;
    int32_t wave_sizze_44745;
    int32_t group_tid_44744;
    
    global_tid_44742 = get_global_id(0);
    local_tid_44743 = get_local_id(0);
    group_sizze_44746 = get_local_size(0);
    wave_sizze_44745 = LOCKSTEP_WIDTH;
    group_tid_44744 = get_group_id(0);
    
    int32_t phys_tid_39789;
    
    phys_tid_39789 = global_tid_44742;
    
    __local char *red_arr_mem_44747;
    
    red_arr_mem_44747 = (__local char *) red_arr_mem_44747_backing_0;
    
    __local char *sync_arr_mem_44749;
    
    sync_arr_mem_44749 = (__local char *) sync_arr_mem_44749_backing_1;
    
    int32_t phys_group_id_44751;
    
    phys_group_id_44751 = get_group_id(0);
    for (int32_t i_44752 = 0; i_44752 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44735) - phys_group_id_44751,
                   sext_i64_i32(num_groups_39807)); i_44752++) {
        int32_t virt_group_id_44753 = phys_group_id_44751 + i_44752 *
                sext_i64_i32(num_groups_39807);
        int32_t flat_segment_id_44754 = squot32(virt_group_id_44753,
                                                sext_i64_i32(groups_per_segment_44733));
        int64_t global_tid_44755 = srem64(sext_i32_i64(virt_group_id_44753) *
                                          segred_group_sizze_39806 +
                                          sext_i32_i64(local_tid_44743),
                                          segred_group_sizze_39806 *
                                          groups_per_segment_44733);
        int64_t gtid_39780 = sext_i32_i64(flat_segment_id_44754);
        int64_t gtid_39788;
        float x_acc_44756;
        int64_t chunk_sizze_44757;
        
        chunk_sizze_44757 = smin64(elements_per_thread_44734,
                                   sdiv_up64(i32_res_29052 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44755)),
                                             threads_per_segment_44737));
        
        float x_39810;
        float x_39811;
        
        // neutral-initialise the accumulators
        {
            x_acc_44756 = 0.0F;
        }
        for (int64_t i_44761 = 0; i_44761 < chunk_sizze_44757; i_44761++) {
            gtid_39788 = sext_i32_i64(sext_i64_i32(global_tid_44755)) +
                threads_per_segment_44737 * i_44761;
            // apply map function
            {
                int32_t x_39815 = ((__global
                                    int32_t *) defunc_3_map_res_mem_43422)[gtid_39780];
                int32_t index_primexp_40600 = sext_i64_i32(gtid_39788);
                bool cond_39817 = slt32(index_primexp_40600, x_39815);
                float defunc_0_f_res_39818;
                
                if (cond_39817) {
                    int32_t x_39814 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43423)[gtid_39780];
                    int32_t x_39819 = add32(x_39814, index_primexp_40600);
                    int32_t x_39820 = sub32(x_39819, x_39815);
                    int32_t i_39821 = add32(1, x_39820);
                    int64_t i_39822 = sext_i32_i64(i_39821);
                    float defunc_0_f_res_t_res_39823 = ((__global
                                                         float *) defunc_4_map_res_mem_43356)[gtid_39780 *
                                                                                              N_28681 +
                                                                                              i_39822];
                    
                    defunc_0_f_res_39818 = defunc_0_f_res_t_res_39823;
                } else {
                    defunc_0_f_res_39818 = 0.0F;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_39810 = x_acc_44756;
                }
                // load new values
                {
                    x_39811 = defunc_0_f_res_39818;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_39812 = x_39810 + x_39811;
                    
                    // store in accumulator
                    {
                        x_acc_44756 = defunc_1_op_res_39812;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_39810 = x_acc_44756;
            ((__local
              float *) red_arr_mem_44747)[sext_i32_i64(local_tid_44743)] =
                x_39810;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44762;
        int32_t skip_waves_44763;
        
        skip_waves_44763 = 1;
        
        float x_44758;
        float x_44759;
        
        offset_44762 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44743,
                      sext_i64_i32(segred_group_sizze_39806))) {
                x_44758 = ((__local
                            float *) red_arr_mem_44747)[sext_i32_i64(local_tid_44743 +
                                                        offset_44762)];
            }
        }
        offset_44762 = 1;
        while (slt32(offset_44762, wave_sizze_44745)) {
            if (slt32(local_tid_44743 + offset_44762,
                      sext_i64_i32(segred_group_sizze_39806)) &&
                ((local_tid_44743 - squot32(local_tid_44743, wave_sizze_44745) *
                  wave_sizze_44745) & (2 * offset_44762 - 1)) == 0) {
                // read array element
                {
                    x_44759 = ((volatile __local
                                float *) red_arr_mem_44747)[sext_i32_i64(local_tid_44743 +
                                                            offset_44762)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44760 = x_44758 + x_44759;
                    
                    x_44758 = defunc_1_op_res_44760;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44747)[sext_i32_i64(local_tid_44743)] =
                        x_44758;
                }
            }
            offset_44762 *= 2;
        }
        while (slt32(skip_waves_44763,
                     squot32(sext_i64_i32(segred_group_sizze_39806) +
                             wave_sizze_44745 - 1, wave_sizze_44745))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44762 = skip_waves_44763 * wave_sizze_44745;
            if (slt32(local_tid_44743 + offset_44762,
                      sext_i64_i32(segred_group_sizze_39806)) &&
                ((local_tid_44743 - squot32(local_tid_44743, wave_sizze_44745) *
                  wave_sizze_44745) == 0 && (squot32(local_tid_44743,
                                                     wave_sizze_44745) & (2 *
                                                                          skip_waves_44763 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44759 = ((__local
                                float *) red_arr_mem_44747)[sext_i32_i64(local_tid_44743 +
                                                            offset_44762)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44760 = x_44758 + x_44759;
                    
                    x_44758 = defunc_1_op_res_44760;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44747)[sext_i32_i64(local_tid_44743)] =
                        x_44758;
                }
            }
            skip_waves_44763 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44743) == (int64_t) 0) {
                x_acc_44756 = x_44758;
            }
        }
        if (groups_per_segment_44733 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44743 == 0) {
                    ((__global float *) mem_43456)[gtid_39780] = x_acc_44756;
                }
            }
        } else {
            int32_t old_counter_44764;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44743 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44738)[sext_i32_i64(virt_group_id_44753) *
                                                        segred_group_sizze_39806] =
                        x_acc_44756;
                    mem_fence_global();
                    old_counter_44764 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44740)[sext_i32_i64(srem32(flat_segment_id_44754,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44749)[(int64_t) 0] =
                        old_counter_44764 == groups_per_segment_44733 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44765;
            
            is_last_group_44765 = ((__local
                                    bool *) sync_arr_mem_44749)[(int64_t) 0];
            if (is_last_group_44765) {
                if (local_tid_44743 == 0) {
                    old_counter_44764 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44740)[sext_i32_i64(srem32(flat_segment_id_44754,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44733));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44766 =
                            sdiv_up64(groups_per_segment_44733,
                                      segred_group_sizze_39806);
                    
                    x_39810 = 0.0F;
                    for (int64_t i_44767 = 0; i_44767 < read_per_thread_44766;
                         i_44767++) {
                        int64_t group_res_id_44768 =
                                sext_i32_i64(local_tid_44743) *
                                read_per_thread_44766 + i_44767;
                        int64_t index_of_group_res_44769 =
                                sext_i32_i64(flat_segment_id_44754) *
                                groups_per_segment_44733 + group_res_id_44768;
                        
                        if (slt64(group_res_id_44768,
                                  groups_per_segment_44733)) {
                            x_39811 = ((__global
                                        float *) group_res_arr_mem_44738)[index_of_group_res_44769 *
                                                                          segred_group_sizze_39806];
                            
                            float defunc_1_op_res_39812;
                            
                            defunc_1_op_res_39812 = x_39810 + x_39811;
                            x_39810 = defunc_1_op_res_39812;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44747)[sext_i32_i64(local_tid_44743)] =
                    x_39810;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44770;
                    int32_t skip_waves_44771;
                    
                    skip_waves_44771 = 1;
                    
                    float x_44758;
                    float x_44759;
                    
                    offset_44770 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44743,
                                  sext_i64_i32(segred_group_sizze_39806))) {
                            x_44758 = ((__local
                                        float *) red_arr_mem_44747)[sext_i32_i64(local_tid_44743 +
                                                                    offset_44770)];
                        }
                    }
                    offset_44770 = 1;
                    while (slt32(offset_44770, wave_sizze_44745)) {
                        if (slt32(local_tid_44743 + offset_44770,
                                  sext_i64_i32(segred_group_sizze_39806)) &&
                            ((local_tid_44743 - squot32(local_tid_44743,
                                                        wave_sizze_44745) *
                              wave_sizze_44745) & (2 * offset_44770 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44759 = ((volatile __local
                                            float *) red_arr_mem_44747)[sext_i32_i64(local_tid_44743 +
                                                                        offset_44770)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44760 = x_44758 + x_44759;
                                
                                x_44758 = defunc_1_op_res_44760;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44747)[sext_i32_i64(local_tid_44743)] =
                                    x_44758;
                            }
                        }
                        offset_44770 *= 2;
                    }
                    while (slt32(skip_waves_44771,
                                 squot32(sext_i64_i32(segred_group_sizze_39806) +
                                         wave_sizze_44745 - 1,
                                         wave_sizze_44745))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44770 = skip_waves_44771 * wave_sizze_44745;
                        if (slt32(local_tid_44743 + offset_44770,
                                  sext_i64_i32(segred_group_sizze_39806)) &&
                            ((local_tid_44743 - squot32(local_tid_44743,
                                                        wave_sizze_44745) *
                              wave_sizze_44745) == 0 &&
                             (squot32(local_tid_44743, wave_sizze_44745) & (2 *
                                                                            skip_waves_44771 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44759 = ((__local
                                            float *) red_arr_mem_44747)[sext_i32_i64(local_tid_44743 +
                                                                        offset_44770)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44760 = x_44758 + x_44759;
                                
                                x_44758 = defunc_1_op_res_44760;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44747)[sext_i32_i64(local_tid_44743)] =
                                    x_44758;
                            }
                        }
                        skip_waves_44771 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44743 == 0) {
                            ((__global float *) mem_43456)[gtid_39780] =
                                x_44758;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39806
}
__kernel void mainzisegred_large_40290(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44930_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44928_backing_aligned_1,
                                       __local volatile
                                       int64_t *red_arr_mem_44926_backing_aligned_2,
                                       __local volatile
                                       int64_t *red_arr_mem_44924_backing_aligned_3,
                                       int64_t iota32_arg_29077,
                                       int64_t num_groups_40461,
                                       int64_t groups_per_segment_44906,
                                       int64_t elements_per_thread_44907,
                                       int64_t virt_num_groups_44908, __global
                                       unsigned char *mem_43462, __global
                                       unsigned char *mem_43474, __global
                                       unsigned char *mem_43476, __global
                                       unsigned char *mem_43480, __global
                                       unsigned char *mem_43483, __global
                                       unsigned char *mem_43485, __global
                                       unsigned char *mem_43487, __global
                                       unsigned char *group_res_arr_mem_44911,
                                       __global
                                       unsigned char *group_res_arr_mem_44913,
                                       __global
                                       unsigned char *group_res_arr_mem_44915,
                                       __global
                                       unsigned char *mainzicounter_mem_44917)
{
    #define segred_group_sizze_40460 (mainzisegred_group_sizze_40284)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44930_backing_3 =
                          (__local volatile
                           char *) sync_arr_mem_44930_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44928_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_44928_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_44926_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44926_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_44924_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44924_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44919;
    int32_t local_tid_44920;
    int64_t group_sizze_44923;
    int32_t wave_sizze_44922;
    int32_t group_tid_44921;
    
    global_tid_44919 = get_global_id(0);
    local_tid_44920 = get_local_id(0);
    group_sizze_44923 = get_local_size(0);
    wave_sizze_44922 = LOCKSTEP_WIDTH;
    group_tid_44921 = get_group_id(0);
    
    int32_t phys_tid_40290;
    
    phys_tid_40290 = global_tid_44919;
    
    __local char *red_arr_mem_44924;
    
    red_arr_mem_44924 = (__local char *) red_arr_mem_44924_backing_0;
    
    __local char *red_arr_mem_44926;
    
    red_arr_mem_44926 = (__local char *) red_arr_mem_44926_backing_1;
    
    __local char *red_arr_mem_44928;
    
    red_arr_mem_44928 = (__local char *) red_arr_mem_44928_backing_2;
    
    __local char *sync_arr_mem_44930;
    
    sync_arr_mem_44930 = (__local char *) sync_arr_mem_44930_backing_3;
    
    int32_t phys_group_id_44932;
    
    phys_group_id_44932 = get_group_id(0);
    for (int32_t i_44933 = 0; i_44933 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44908) - phys_group_id_44932,
                   sext_i64_i32(num_groups_40461)); i_44933++) {
        int32_t virt_group_id_44934 = phys_group_id_44932 + i_44933 *
                sext_i64_i32(num_groups_40461);
        int32_t flat_segment_id_44935 = squot32(virt_group_id_44934,
                                                sext_i64_i32(groups_per_segment_44906));
        int64_t global_tid_44936 = srem64(sext_i32_i64(virt_group_id_44934) *
                                          segred_group_sizze_40460 +
                                          sext_i32_i64(local_tid_44920),
                                          segred_group_sizze_40460 *
                                          groups_per_segment_44906);
        int64_t gtid_40281 = sext_i32_i64(flat_segment_id_44935);
        int64_t gtid_40289;
        bool x_acc_44937;
        int32_t x_acc_44938;
        float x_acc_44939;
        int64_t chunk_sizze_44940;
        int64_t starting_point_44941;
        
        starting_point_44941 = sext_i32_i64(sext_i64_i32(global_tid_44936)) *
            elements_per_thread_44907;
        
        int64_t remaining_elements_44942;
        
        remaining_elements_44942 = iota32_arg_29077 - starting_point_44941;
        if (sle64(remaining_elements_44942, (int64_t) 0) ||
            sle64(iota32_arg_29077, starting_point_44941)) {
            chunk_sizze_44940 = (int64_t) 0;
        } else {
            if (slt64(iota32_arg_29077,
                      (sext_i32_i64(sext_i64_i32(global_tid_44936)) +
                       (int64_t) 1) * elements_per_thread_44907)) {
                chunk_sizze_44940 = iota32_arg_29077 -
                    sext_i32_i64(sext_i64_i32(global_tid_44936)) *
                    elements_per_thread_44907;
            } else {
                chunk_sizze_44940 = elements_per_thread_44907;
            }
        }
        
        bool x_40466;
        int32_t x_40467;
        float x_40468;
        bool x_40469;
        int32_t x_40470;
        float x_40471;
        
        // neutral-initialise the accumulators
        {
            x_acc_44937 = 0;
            x_acc_44938 = -1;
            x_acc_44939 = 0.0F;
        }
        for (int64_t i_44957 = 0; i_44957 < elements_per_thread_44907;
             i_44957++) {
            gtid_40289 = sext_i32_i64(local_tid_44920) +
                (sext_i32_i64(squot32(sext_i64_i32(global_tid_44936),
                                      sext_i64_i32(segred_group_sizze_40460))) *
                 elements_per_thread_44907 + i_44957) *
                segred_group_sizze_40460;
            if (slt64(gtid_40289, iota32_arg_29077)) {
                // apply map function
                {
                    int32_t y_40480 = ((__global
                                        int32_t *) mem_43476)[gtid_40281];
                    float y_40481 = ((__global float *) mem_43474)[gtid_40281];
                    float x_40485 = ((__global float *) mem_43480)[gtid_40281 *
                                                                   iota32_arg_29077 +
                                                                   gtid_40289];
                    float x_40486 = ((__global float *) mem_43462)[gtid_40289];
                    int32_t index_primexp_40614 = sext_i64_i32(gtid_40289);
                    float defunc_0_f_res_40489 = x_40485 / y_40481;
                    bool cond_40490 = slt32(index_primexp_40614, y_40480);
                    bool isnan_res_40491;
                    
                    isnan_res_40491 = futrts_isnan32(defunc_0_f_res_40489);
                    
                    bool cond_t_res_40492 = !isnan_res_40491;
                    bool x_40493 = cond_40490 && cond_t_res_40492;
                    float abs_res_40494 = (float) fabs(defunc_0_f_res_40489);
                    bool defunc_2_f_res_t_res_40495 = x_40486 < abs_res_40494;
                    bool x_40496 = x_40493 && defunc_2_f_res_t_res_40495;
                    float defunc_1_f_res_40497;
                    
                    if (cond_40490) {
                        defunc_1_f_res_40497 = defunc_0_f_res_40489;
                    } else {
                        defunc_1_f_res_40497 = 0.0F;
                    }
                    // save map-out results
                    { }
                    // load accumulator
                    {
                        x_40466 = x_acc_44937;
                        x_40467 = x_acc_44938;
                        x_40468 = x_acc_44939;
                    }
                    // load new values
                    {
                        x_40469 = x_40496;
                        x_40470 = index_primexp_40614;
                        x_40471 = defunc_1_f_res_40497;
                    }
                    // apply reduction operator
                    {
                        bool defunc_1_op_res_40472;
                        int32_t defunc_1_op_res_40473;
                        
                        if (x_40466) {
                            defunc_1_op_res_40472 = x_40466;
                            defunc_1_op_res_40473 = x_40467;
                        } else {
                            bool x_40474 = x_40469 && x_40469;
                            bool x_40475 = !x_40469;
                            bool y_40476 = x_40466 && x_40475;
                            bool defunc_1_op_res_f_res_40477 = x_40474 ||
                                 y_40476;
                            int32_t defunc_1_op_res_f_res_40478;
                            
                            if (x_40469) {
                                defunc_1_op_res_f_res_40478 = x_40470;
                            } else {
                                defunc_1_op_res_f_res_40478 = x_40467;
                            }
                            defunc_1_op_res_40472 = defunc_1_op_res_f_res_40477;
                            defunc_1_op_res_40473 = defunc_1_op_res_f_res_40478;
                        }
                        
                        float defunc_1_op_res_40479 = x_40468 + x_40471;
                        
                        // store in accumulator
                        {
                            x_acc_44937 = defunc_1_op_res_40472;
                            x_acc_44938 = defunc_1_op_res_40473;
                            x_acc_44939 = defunc_1_op_res_40479;
                        }
                    }
                }
            }
            // to reduce current chunk, first store our result in memory
            {
                x_40466 = x_acc_44937;
                x_40467 = x_acc_44938;
                x_40468 = x_acc_44939;
                ((__local
                  bool *) red_arr_mem_44924)[sext_i32_i64(local_tid_44920)] =
                    x_40466;
                ((__local
                  int32_t *) red_arr_mem_44926)[sext_i32_i64(local_tid_44920)] =
                    x_40467;
                ((__local
                  float *) red_arr_mem_44928)[sext_i32_i64(local_tid_44920)] =
                    x_40468;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t offset_44958;
            int32_t skip_waves_44959;
            
            skip_waves_44959 = 1;
            
            bool x_44943;
            int32_t x_44944;
            float x_44945;
            bool x_44946;
            int32_t x_44947;
            float x_44948;
            
            offset_44958 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_44920,
                          sext_i64_i32(segred_group_sizze_40460))) {
                    x_44943 = ((__local
                                bool *) red_arr_mem_44924)[sext_i32_i64(local_tid_44920 +
                                                           offset_44958)];
                    x_44944 = ((__local
                                int32_t *) red_arr_mem_44926)[sext_i32_i64(local_tid_44920 +
                                                              offset_44958)];
                    x_44945 = ((__local
                                float *) red_arr_mem_44928)[sext_i32_i64(local_tid_44920 +
                                                            offset_44958)];
                }
            }
            offset_44958 = 1;
            while (slt32(offset_44958, wave_sizze_44922)) {
                if (slt32(local_tid_44920 + offset_44958,
                          sext_i64_i32(segred_group_sizze_40460)) &&
                    ((local_tid_44920 - squot32(local_tid_44920,
                                                wave_sizze_44922) *
                      wave_sizze_44922) & (2 * offset_44958 - 1)) == 0) {
                    // read array element
                    {
                        x_44946 = ((volatile __local
                                    bool *) red_arr_mem_44924)[sext_i32_i64(local_tid_44920 +
                                                               offset_44958)];
                        x_44947 = ((volatile __local
                                    int32_t *) red_arr_mem_44926)[sext_i32_i64(local_tid_44920 +
                                                                  offset_44958)];
                        x_44948 = ((volatile __local
                                    float *) red_arr_mem_44928)[sext_i32_i64(local_tid_44920 +
                                                                offset_44958)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_44949;
                        int32_t defunc_1_op_res_44950;
                        
                        if (x_44943) {
                            defunc_1_op_res_44949 = x_44943;
                            defunc_1_op_res_44950 = x_44944;
                        } else {
                            bool x_44951 = x_44946 && x_44946;
                            bool x_44952 = !x_44946;
                            bool y_44953 = x_44943 && x_44952;
                            bool defunc_1_op_res_f_res_44954 = x_44951 ||
                                 y_44953;
                            int32_t defunc_1_op_res_f_res_44955;
                            
                            if (x_44946) {
                                defunc_1_op_res_f_res_44955 = x_44947;
                            } else {
                                defunc_1_op_res_f_res_44955 = x_44944;
                            }
                            defunc_1_op_res_44949 = defunc_1_op_res_f_res_44954;
                            defunc_1_op_res_44950 = defunc_1_op_res_f_res_44955;
                        }
                        
                        float defunc_1_op_res_44956 = x_44945 + x_44948;
                        
                        x_44943 = defunc_1_op_res_44949;
                        x_44944 = defunc_1_op_res_44950;
                        x_44945 = defunc_1_op_res_44956;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          bool *) red_arr_mem_44924)[sext_i32_i64(local_tid_44920)] =
                            x_44943;
                        ((volatile __local
                          int32_t *) red_arr_mem_44926)[sext_i32_i64(local_tid_44920)] =
                            x_44944;
                        ((volatile __local
                          float *) red_arr_mem_44928)[sext_i32_i64(local_tid_44920)] =
                            x_44945;
                    }
                }
                offset_44958 *= 2;
            }
            while (slt32(skip_waves_44959,
                         squot32(sext_i64_i32(segred_group_sizze_40460) +
                                 wave_sizze_44922 - 1, wave_sizze_44922))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_44958 = skip_waves_44959 * wave_sizze_44922;
                if (slt32(local_tid_44920 + offset_44958,
                          sext_i64_i32(segred_group_sizze_40460)) &&
                    ((local_tid_44920 - squot32(local_tid_44920,
                                                wave_sizze_44922) *
                      wave_sizze_44922) == 0 && (squot32(local_tid_44920,
                                                         wave_sizze_44922) &
                                                 (2 * skip_waves_44959 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_44946 = ((__local
                                    bool *) red_arr_mem_44924)[sext_i32_i64(local_tid_44920 +
                                                               offset_44958)];
                        x_44947 = ((__local
                                    int32_t *) red_arr_mem_44926)[sext_i32_i64(local_tid_44920 +
                                                                  offset_44958)];
                        x_44948 = ((__local
                                    float *) red_arr_mem_44928)[sext_i32_i64(local_tid_44920 +
                                                                offset_44958)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_44949;
                        int32_t defunc_1_op_res_44950;
                        
                        if (x_44943) {
                            defunc_1_op_res_44949 = x_44943;
                            defunc_1_op_res_44950 = x_44944;
                        } else {
                            bool x_44951 = x_44946 && x_44946;
                            bool x_44952 = !x_44946;
                            bool y_44953 = x_44943 && x_44952;
                            bool defunc_1_op_res_f_res_44954 = x_44951 ||
                                 y_44953;
                            int32_t defunc_1_op_res_f_res_44955;
                            
                            if (x_44946) {
                                defunc_1_op_res_f_res_44955 = x_44947;
                            } else {
                                defunc_1_op_res_f_res_44955 = x_44944;
                            }
                            defunc_1_op_res_44949 = defunc_1_op_res_f_res_44954;
                            defunc_1_op_res_44950 = defunc_1_op_res_f_res_44955;
                        }
                        
                        float defunc_1_op_res_44956 = x_44945 + x_44948;
                        
                        x_44943 = defunc_1_op_res_44949;
                        x_44944 = defunc_1_op_res_44950;
                        x_44945 = defunc_1_op_res_44956;
                    }
                    // write result of operation
                    {
                        ((__local
                          bool *) red_arr_mem_44924)[sext_i32_i64(local_tid_44920)] =
                            x_44943;
                        ((__local
                          int32_t *) red_arr_mem_44926)[sext_i32_i64(local_tid_44920)] =
                            x_44944;
                        ((__local
                          float *) red_arr_mem_44928)[sext_i32_i64(local_tid_44920)] =
                            x_44945;
                    }
                }
                skip_waves_44959 *= 2;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread saves the result in accumulator
            {
                if (sext_i32_i64(local_tid_44920) == (int64_t) 0) {
                    x_acc_44937 = x_44943;
                    x_acc_44938 = x_44944;
                    x_acc_44939 = x_44945;
                }
            }
            // first thread keeps accumulator; others reset to neutral element
            {
                if (!(sext_i32_i64(local_tid_44920) == (int64_t) 0)) {
                    x_acc_44937 = 0;
                    x_acc_44938 = -1;
                    x_acc_44939 = 0.0F;
                }
            }
        }
        x_40466 = x_acc_44937;
        x_40467 = x_acc_44938;
        x_40468 = x_acc_44939;
        if (groups_per_segment_44906 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44920 == 0) {
                    ((__global bool *) mem_43483)[gtid_40281] = x_acc_44937;
                    ((__global int32_t *) mem_43485)[gtid_40281] = x_acc_44938;
                    ((__global float *) mem_43487)[gtid_40281] = x_acc_44939;
                }
            }
        } else {
            int32_t old_counter_44960;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44920 == 0) {
                    ((__global
                      bool *) group_res_arr_mem_44911)[sext_i32_i64(virt_group_id_44934) *
                                                       segred_group_sizze_40460] =
                        x_acc_44937;
                    ((__global
                      int32_t *) group_res_arr_mem_44913)[sext_i32_i64(virt_group_id_44934) *
                                                          segred_group_sizze_40460] =
                        x_acc_44938;
                    ((__global
                      float *) group_res_arr_mem_44915)[sext_i32_i64(virt_group_id_44934) *
                                                        segred_group_sizze_40460] =
                        x_acc_44939;
                    mem_fence_global();
                    old_counter_44960 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44917)[sext_i32_i64(srem32(flat_segment_id_44935,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44930)[(int64_t) 0] =
                        old_counter_44960 == groups_per_segment_44906 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44961;
            
            is_last_group_44961 = ((__local
                                    bool *) sync_arr_mem_44930)[(int64_t) 0];
            if (is_last_group_44961) {
                if (local_tid_44920 == 0) {
                    old_counter_44960 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44917)[sext_i32_i64(srem32(flat_segment_id_44935,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44906));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44962 =
                            sdiv_up64(groups_per_segment_44906,
                                      segred_group_sizze_40460);
                    
                    x_40466 = 0;
                    x_40467 = -1;
                    x_40468 = 0.0F;
                    for (int64_t i_44963 = 0; i_44963 < read_per_thread_44962;
                         i_44963++) {
                        int64_t group_res_id_44964 =
                                sext_i32_i64(local_tid_44920) *
                                read_per_thread_44962 + i_44963;
                        int64_t index_of_group_res_44965 =
                                sext_i32_i64(flat_segment_id_44935) *
                                groups_per_segment_44906 + group_res_id_44964;
                        
                        if (slt64(group_res_id_44964,
                                  groups_per_segment_44906)) {
                            x_40469 = ((__global
                                        bool *) group_res_arr_mem_44911)[index_of_group_res_44965 *
                                                                         segred_group_sizze_40460];
                            x_40470 = ((__global
                                        int32_t *) group_res_arr_mem_44913)[index_of_group_res_44965 *
                                                                            segred_group_sizze_40460];
                            x_40471 = ((__global
                                        float *) group_res_arr_mem_44915)[index_of_group_res_44965 *
                                                                          segred_group_sizze_40460];
                            
                            bool defunc_1_op_res_40472;
                            int32_t defunc_1_op_res_40473;
                            
                            if (x_40466) {
                                defunc_1_op_res_40472 = x_40466;
                                defunc_1_op_res_40473 = x_40467;
                            } else {
                                bool x_40474 = x_40469 && x_40469;
                                bool x_40475 = !x_40469;
                                bool y_40476 = x_40466 && x_40475;
                                bool defunc_1_op_res_f_res_40477 = x_40474 ||
                                     y_40476;
                                int32_t defunc_1_op_res_f_res_40478;
                                
                                if (x_40469) {
                                    defunc_1_op_res_f_res_40478 = x_40470;
                                } else {
                                    defunc_1_op_res_f_res_40478 = x_40467;
                                }
                                defunc_1_op_res_40472 =
                                    defunc_1_op_res_f_res_40477;
                                defunc_1_op_res_40473 =
                                    defunc_1_op_res_f_res_40478;
                            }
                            
                            float defunc_1_op_res_40479 = x_40468 + x_40471;
                            
                            x_40466 = defunc_1_op_res_40472;
                            x_40467 = defunc_1_op_res_40473;
                            x_40468 = defunc_1_op_res_40479;
                        }
                    }
                }
                ((__local
                  bool *) red_arr_mem_44924)[sext_i32_i64(local_tid_44920)] =
                    x_40466;
                ((__local
                  int32_t *) red_arr_mem_44926)[sext_i32_i64(local_tid_44920)] =
                    x_40467;
                ((__local
                  float *) red_arr_mem_44928)[sext_i32_i64(local_tid_44920)] =
                    x_40468;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44966;
                    int32_t skip_waves_44967;
                    
                    skip_waves_44967 = 1;
                    
                    bool x_44943;
                    int32_t x_44944;
                    float x_44945;
                    bool x_44946;
                    int32_t x_44947;
                    float x_44948;
                    
                    offset_44966 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44920,
                                  sext_i64_i32(segred_group_sizze_40460))) {
                            x_44943 = ((__local
                                        bool *) red_arr_mem_44924)[sext_i32_i64(local_tid_44920 +
                                                                   offset_44966)];
                            x_44944 = ((__local
                                        int32_t *) red_arr_mem_44926)[sext_i32_i64(local_tid_44920 +
                                                                      offset_44966)];
                            x_44945 = ((__local
                                        float *) red_arr_mem_44928)[sext_i32_i64(local_tid_44920 +
                                                                    offset_44966)];
                        }
                    }
                    offset_44966 = 1;
                    while (slt32(offset_44966, wave_sizze_44922)) {
                        if (slt32(local_tid_44920 + offset_44966,
                                  sext_i64_i32(segred_group_sizze_40460)) &&
                            ((local_tid_44920 - squot32(local_tid_44920,
                                                        wave_sizze_44922) *
                              wave_sizze_44922) & (2 * offset_44966 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44946 = ((volatile __local
                                            bool *) red_arr_mem_44924)[sext_i32_i64(local_tid_44920 +
                                                                       offset_44966)];
                                x_44947 = ((volatile __local
                                            int32_t *) red_arr_mem_44926)[sext_i32_i64(local_tid_44920 +
                                                                          offset_44966)];
                                x_44948 = ((volatile __local
                                            float *) red_arr_mem_44928)[sext_i32_i64(local_tid_44920 +
                                                                        offset_44966)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_44949;
                                int32_t defunc_1_op_res_44950;
                                
                                if (x_44943) {
                                    defunc_1_op_res_44949 = x_44943;
                                    defunc_1_op_res_44950 = x_44944;
                                } else {
                                    bool x_44951 = x_44946 && x_44946;
                                    bool x_44952 = !x_44946;
                                    bool y_44953 = x_44943 && x_44952;
                                    bool defunc_1_op_res_f_res_44954 =
                                         x_44951 || y_44953;
                                    int32_t defunc_1_op_res_f_res_44955;
                                    
                                    if (x_44946) {
                                        defunc_1_op_res_f_res_44955 = x_44947;
                                    } else {
                                        defunc_1_op_res_f_res_44955 = x_44944;
                                    }
                                    defunc_1_op_res_44949 =
                                        defunc_1_op_res_f_res_44954;
                                    defunc_1_op_res_44950 =
                                        defunc_1_op_res_f_res_44955;
                                }
                                
                                float defunc_1_op_res_44956 = x_44945 + x_44948;
                                
                                x_44943 = defunc_1_op_res_44949;
                                x_44944 = defunc_1_op_res_44950;
                                x_44945 = defunc_1_op_res_44956;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_44924)[sext_i32_i64(local_tid_44920)] =
                                    x_44943;
                                ((volatile __local
                                  int32_t *) red_arr_mem_44926)[sext_i32_i64(local_tid_44920)] =
                                    x_44944;
                                ((volatile __local
                                  float *) red_arr_mem_44928)[sext_i32_i64(local_tid_44920)] =
                                    x_44945;
                            }
                        }
                        offset_44966 *= 2;
                    }
                    while (slt32(skip_waves_44967,
                                 squot32(sext_i64_i32(segred_group_sizze_40460) +
                                         wave_sizze_44922 - 1,
                                         wave_sizze_44922))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44966 = skip_waves_44967 * wave_sizze_44922;
                        if (slt32(local_tid_44920 + offset_44966,
                                  sext_i64_i32(segred_group_sizze_40460)) &&
                            ((local_tid_44920 - squot32(local_tid_44920,
                                                        wave_sizze_44922) *
                              wave_sizze_44922) == 0 &&
                             (squot32(local_tid_44920, wave_sizze_44922) & (2 *
                                                                            skip_waves_44967 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44946 = ((__local
                                            bool *) red_arr_mem_44924)[sext_i32_i64(local_tid_44920 +
                                                                       offset_44966)];
                                x_44947 = ((__local
                                            int32_t *) red_arr_mem_44926)[sext_i32_i64(local_tid_44920 +
                                                                          offset_44966)];
                                x_44948 = ((__local
                                            float *) red_arr_mem_44928)[sext_i32_i64(local_tid_44920 +
                                                                        offset_44966)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_44949;
                                int32_t defunc_1_op_res_44950;
                                
                                if (x_44943) {
                                    defunc_1_op_res_44949 = x_44943;
                                    defunc_1_op_res_44950 = x_44944;
                                } else {
                                    bool x_44951 = x_44946 && x_44946;
                                    bool x_44952 = !x_44946;
                                    bool y_44953 = x_44943 && x_44952;
                                    bool defunc_1_op_res_f_res_44954 =
                                         x_44951 || y_44953;
                                    int32_t defunc_1_op_res_f_res_44955;
                                    
                                    if (x_44946) {
                                        defunc_1_op_res_f_res_44955 = x_44947;
                                    } else {
                                        defunc_1_op_res_f_res_44955 = x_44944;
                                    }
                                    defunc_1_op_res_44949 =
                                        defunc_1_op_res_f_res_44954;
                                    defunc_1_op_res_44950 =
                                        defunc_1_op_res_f_res_44955;
                                }
                                
                                float defunc_1_op_res_44956 = x_44945 + x_44948;
                                
                                x_44943 = defunc_1_op_res_44949;
                                x_44944 = defunc_1_op_res_44950;
                                x_44945 = defunc_1_op_res_44956;
                            }
                            // write result of operation
                            {
                                ((__local
                                  bool *) red_arr_mem_44924)[sext_i32_i64(local_tid_44920)] =
                                    x_44943;
                                ((__local
                                  int32_t *) red_arr_mem_44926)[sext_i32_i64(local_tid_44920)] =
                                    x_44944;
                                ((__local
                                  float *) red_arr_mem_44928)[sext_i32_i64(local_tid_44920)] =
                                    x_44945;
                            }
                        }
                        skip_waves_44967 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44920 == 0) {
                            ((__global bool *) mem_43483)[gtid_40281] = x_44943;
                            ((__global int32_t *) mem_43485)[gtid_40281] =
                                x_44944;
                            ((__global float *) mem_43487)[gtid_40281] =
                                x_44945;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40460
}
__kernel void mainzisegred_nonseg_39707(__global int *global_failure,
                                        __local volatile
                                        int64_t *red_arr_mem_44683_backing_aligned_0,
                                        __local volatile
                                        int64_t *sync_arr_mem_44681_backing_aligned_1,
                                        int64_t m_28682,
                                        int64_t num_groups_39702,
                                        int64_t num_threads_44675, __global
                                        unsigned char *defunc_3_map_res_mem_43422,
                                        __global unsigned char *mem_43427,
                                        __global
                                        unsigned char *mainzicounter_mem_44671,
                                        __global
                                        unsigned char *group_res_arr_mem_44673)
{
    #define segred_group_sizze_39700 (mainzisegred_group_sizze_39699)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44683_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44683_backing_aligned_0;
    __local volatile char *restrict sync_arr_mem_44681_backing_0 =
                          (__local volatile
                           char *) sync_arr_mem_44681_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44676;
    int32_t local_tid_44677;
    int64_t group_sizze_44680;
    int32_t wave_sizze_44679;
    int32_t group_tid_44678;
    
    global_tid_44676 = get_global_id(0);
    local_tid_44677 = get_local_id(0);
    group_sizze_44680 = get_local_size(0);
    wave_sizze_44679 = LOCKSTEP_WIDTH;
    group_tid_44678 = get_group_id(0);
    
    int32_t phys_tid_39707;
    
    phys_tid_39707 = global_tid_44676;
    
    __local char *sync_arr_mem_44681;
    
    sync_arr_mem_44681 = (__local char *) sync_arr_mem_44681_backing_0;
    
    __local char *red_arr_mem_44683;
    
    red_arr_mem_44683 = (__local char *) red_arr_mem_44683_backing_1;
    
    int64_t dummy_39705;
    
    dummy_39705 = (int64_t) 0;
    
    int64_t gtid_39706;
    
    gtid_39706 = (int64_t) 0;
    
    int32_t x_acc_44685;
    int64_t chunk_sizze_44686;
    
    chunk_sizze_44686 = smin64(sdiv_up64(m_28682,
                                         sext_i32_i64(sext_i64_i32(segred_group_sizze_39700 *
                                         num_groups_39702))),
                               sdiv_up64(m_28682 - sext_i32_i64(phys_tid_39707),
                                         num_threads_44675));
    
    int32_t x_29048;
    int32_t x_29049;
    
    // neutral-initialise the accumulators
    {
        x_acc_44685 = 0;
    }
    for (int64_t i_44690 = 0; i_44690 < chunk_sizze_44686; i_44690++) {
        gtid_39706 = sext_i32_i64(phys_tid_39707) + num_threads_44675 * i_44690;
        // apply map function
        {
            int32_t x_29051 = ((__global
                                int32_t *) defunc_3_map_res_mem_43422)[gtid_39706];
            
            // save map-out results
            { }
            // load accumulator
            {
                x_29048 = x_acc_44685;
            }
            // load new values
            {
                x_29049 = x_29051;
            }
            // apply reduction operator
            {
                int32_t defunc_1_op_res_29050 = smax32(x_29048, x_29049);
                
                // store in accumulator
                {
                    x_acc_44685 = defunc_1_op_res_29050;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_29048 = x_acc_44685;
        ((__local int32_t *) red_arr_mem_44683)[sext_i32_i64(local_tid_44677)] =
            x_29048;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44691;
    int32_t skip_waves_44692;
    
    skip_waves_44692 = 1;
    
    int32_t x_44687;
    int32_t x_44688;
    
    offset_44691 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44677, sext_i64_i32(segred_group_sizze_39700))) {
            x_44687 = ((__local
                        int32_t *) red_arr_mem_44683)[sext_i32_i64(local_tid_44677 +
                                                      offset_44691)];
        }
    }
    offset_44691 = 1;
    while (slt32(offset_44691, wave_sizze_44679)) {
        if (slt32(local_tid_44677 + offset_44691,
                  sext_i64_i32(segred_group_sizze_39700)) && ((local_tid_44677 -
                                                               squot32(local_tid_44677,
                                                                       wave_sizze_44679) *
                                                               wave_sizze_44679) &
                                                              (2 *
                                                               offset_44691 -
                                                               1)) == 0) {
            // read array element
            {
                x_44688 = ((volatile __local
                            int32_t *) red_arr_mem_44683)[sext_i32_i64(local_tid_44677 +
                                                          offset_44691)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_44689 = smax32(x_44687, x_44688);
                
                x_44687 = defunc_1_op_res_44689;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_44683)[sext_i32_i64(local_tid_44677)] =
                    x_44687;
            }
        }
        offset_44691 *= 2;
    }
    while (slt32(skip_waves_44692,
                 squot32(sext_i64_i32(segred_group_sizze_39700) +
                         wave_sizze_44679 - 1, wave_sizze_44679))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44691 = skip_waves_44692 * wave_sizze_44679;
        if (slt32(local_tid_44677 + offset_44691,
                  sext_i64_i32(segred_group_sizze_39700)) && ((local_tid_44677 -
                                                               squot32(local_tid_44677,
                                                                       wave_sizze_44679) *
                                                               wave_sizze_44679) ==
                                                              0 &&
                                                              (squot32(local_tid_44677,
                                                                       wave_sizze_44679) &
                                                               (2 *
                                                                skip_waves_44692 -
                                                                1)) == 0)) {
            // read array element
            {
                x_44688 = ((__local
                            int32_t *) red_arr_mem_44683)[sext_i32_i64(local_tid_44677 +
                                                          offset_44691)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_44689 = smax32(x_44687, x_44688);
                
                x_44687 = defunc_1_op_res_44689;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_44683)[sext_i32_i64(local_tid_44677)] =
                    x_44687;
            }
        }
        skip_waves_44692 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_44677) == (int64_t) 0) {
            x_acc_44685 = x_44687;
        }
    }
    
    int32_t old_counter_44693;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_44677 == 0) {
            ((__global
              int32_t *) group_res_arr_mem_44673)[sext_i32_i64(group_tid_44678) *
                                                  segred_group_sizze_39700] =
                x_acc_44685;
            mem_fence_global();
            old_counter_44693 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainzicounter_mem_44671)[(int64_t) 0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_44681)[(int64_t) 0] =
                old_counter_44693 == num_groups_39702 - (int64_t) 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_44694;
    
    is_last_group_44694 = ((__local bool *) sync_arr_mem_44681)[(int64_t) 0];
    if (is_last_group_44694) {
        if (local_tid_44677 == 0) {
            old_counter_44693 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainzicounter_mem_44671)[(int64_t) 0],
                                                      (int) ((int64_t) 0 -
                                                             num_groups_39702));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_44695 = sdiv_up64(num_groups_39702,
                                                      segred_group_sizze_39700);
            
            x_29048 = 0;
            for (int64_t i_44696 = 0; i_44696 < read_per_thread_44695;
                 i_44696++) {
                int64_t group_res_id_44697 = sext_i32_i64(local_tid_44677) *
                        read_per_thread_44695 + i_44696;
                int64_t index_of_group_res_44698 = group_res_id_44697;
                
                if (slt64(group_res_id_44697, num_groups_39702)) {
                    x_29049 = ((__global
                                int32_t *) group_res_arr_mem_44673)[index_of_group_res_44698 *
                                                                    segred_group_sizze_39700];
                    
                    int32_t defunc_1_op_res_29050;
                    
                    defunc_1_op_res_29050 = smax32(x_29048, x_29049);
                    x_29048 = defunc_1_op_res_29050;
                }
            }
        }
        ((__local int32_t *) red_arr_mem_44683)[sext_i32_i64(local_tid_44677)] =
            x_29048;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_44699;
            int32_t skip_waves_44700;
            
            skip_waves_44700 = 1;
            
            int32_t x_44687;
            int32_t x_44688;
            
            offset_44699 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_44677,
                          sext_i64_i32(segred_group_sizze_39700))) {
                    x_44687 = ((__local
                                int32_t *) red_arr_mem_44683)[sext_i32_i64(local_tid_44677 +
                                                              offset_44699)];
                }
            }
            offset_44699 = 1;
            while (slt32(offset_44699, wave_sizze_44679)) {
                if (slt32(local_tid_44677 + offset_44699,
                          sext_i64_i32(segred_group_sizze_39700)) &&
                    ((local_tid_44677 - squot32(local_tid_44677,
                                                wave_sizze_44679) *
                      wave_sizze_44679) & (2 * offset_44699 - 1)) == 0) {
                    // read array element
                    {
                        x_44688 = ((volatile __local
                                    int32_t *) red_arr_mem_44683)[sext_i32_i64(local_tid_44677 +
                                                                  offset_44699)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_44689 = smax32(x_44687,
                                                               x_44688);
                        
                        x_44687 = defunc_1_op_res_44689;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          int32_t *) red_arr_mem_44683)[sext_i32_i64(local_tid_44677)] =
                            x_44687;
                    }
                }
                offset_44699 *= 2;
            }
            while (slt32(skip_waves_44700,
                         squot32(sext_i64_i32(segred_group_sizze_39700) +
                                 wave_sizze_44679 - 1, wave_sizze_44679))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_44699 = skip_waves_44700 * wave_sizze_44679;
                if (slt32(local_tid_44677 + offset_44699,
                          sext_i64_i32(segred_group_sizze_39700)) &&
                    ((local_tid_44677 - squot32(local_tid_44677,
                                                wave_sizze_44679) *
                      wave_sizze_44679) == 0 && (squot32(local_tid_44677,
                                                         wave_sizze_44679) &
                                                 (2 * skip_waves_44700 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_44688 = ((__local
                                    int32_t *) red_arr_mem_44683)[sext_i32_i64(local_tid_44677 +
                                                                  offset_44699)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_44689 = smax32(x_44687,
                                                               x_44688);
                        
                        x_44687 = defunc_1_op_res_44689;
                    }
                    // write result of operation
                    {
                        ((__local
                          int32_t *) red_arr_mem_44683)[sext_i32_i64(local_tid_44677)] =
                            x_44687;
                    }
                }
                skip_waves_44700 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_44677 == 0) {
                    ((__global int32_t *) mem_43427)[(int64_t) 0] = x_44687;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39700
}
__kernel void mainzisegred_small_37737(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_43941_backing_aligned_0,
                                       int64_t N_28681, int64_t m_28682,
                                       int64_t i32_res_28691,
                                       int64_t i32_res_28697,
                                       int64_t num_groups_37876,
                                       int64_t segment_sizze_nonzzero_43934,
                                       __global unsigned char *images_mem_42559,
                                       __global
                                       unsigned char *binop_p_mem_42568,
                                       __global unsigned char *mem_42709,
                                       __global unsigned char *mem_42714)
{
    #define segred_group_sizze_37875 (mainzisegred_group_sizze_37731)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_43941_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_43941_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43936;
    int32_t local_tid_43937;
    int64_t group_sizze_43940;
    int32_t wave_sizze_43939;
    int32_t group_tid_43938;
    
    global_tid_43936 = get_global_id(0);
    local_tid_43937 = get_local_id(0);
    group_sizze_43940 = get_local_size(0);
    wave_sizze_43939 = LOCKSTEP_WIDTH;
    group_tid_43938 = get_group_id(0);
    
    int32_t phys_tid_37737;
    
    phys_tid_37737 = global_tid_43936;
    
    __local char *red_arr_mem_43941;
    
    red_arr_mem_43941 = (__local char *) red_arr_mem_43941_backing_0;
    
    int32_t phys_group_id_43943;
    
    phys_group_id_43943 = get_group_id(0);
    for (int32_t i_43944 = 0; i_43944 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28682 * i32_res_28697 *
                                          i32_res_28697,
                                          squot64(segred_group_sizze_37875,
                                                  segment_sizze_nonzzero_43934))) -
                   phys_group_id_43943, sext_i64_i32(num_groups_37876));
         i_43944++) {
        int32_t virt_group_id_43945 = phys_group_id_43943 + i_43944 *
                sext_i64_i32(num_groups_37876);
        int64_t gtid_37724 = squot64(squot64(sext_i32_i64(local_tid_43937),
                                             segment_sizze_nonzzero_43934) +
                                     sext_i32_i64(virt_group_id_43945) *
                                     squot64(segred_group_sizze_37875,
                                             segment_sizze_nonzzero_43934),
                                     i32_res_28697 * i32_res_28697);
        int64_t gtid_37725 = squot64(squot64(sext_i32_i64(local_tid_43937),
                                             segment_sizze_nonzzero_43934) +
                                     sext_i32_i64(virt_group_id_43945) *
                                     squot64(segred_group_sizze_37875,
                                             segment_sizze_nonzzero_43934) -
                                     squot64(squot64(sext_i32_i64(local_tid_43937),
                                                     segment_sizze_nonzzero_43934) +
                                             sext_i32_i64(virt_group_id_43945) *
                                             squot64(segred_group_sizze_37875,
                                                     segment_sizze_nonzzero_43934),
                                             i32_res_28697 * i32_res_28697) *
                                     (i32_res_28697 * i32_res_28697),
                                     i32_res_28697);
        int64_t gtid_37726 = squot64(sext_i32_i64(local_tid_43937),
                                     segment_sizze_nonzzero_43934) +
                sext_i32_i64(virt_group_id_43945) *
                squot64(segred_group_sizze_37875,
                        segment_sizze_nonzzero_43934) -
                squot64(squot64(sext_i32_i64(local_tid_43937),
                                segment_sizze_nonzzero_43934) +
                        sext_i32_i64(virt_group_id_43945) *
                        squot64(segred_group_sizze_37875,
                                segment_sizze_nonzzero_43934), i32_res_28697 *
                        i32_res_28697) * (i32_res_28697 * i32_res_28697) -
                squot64(squot64(sext_i32_i64(local_tid_43937),
                                segment_sizze_nonzzero_43934) +
                        sext_i32_i64(virt_group_id_43945) *
                        squot64(segred_group_sizze_37875,
                                segment_sizze_nonzzero_43934) -
                        squot64(squot64(sext_i32_i64(local_tid_43937),
                                        segment_sizze_nonzzero_43934) +
                                sext_i32_i64(virt_group_id_43945) *
                                squot64(segred_group_sizze_37875,
                                        segment_sizze_nonzzero_43934),
                                i32_res_28697 * i32_res_28697) *
                        (i32_res_28697 * i32_res_28697), i32_res_28697) *
                i32_res_28697;
        int64_t gtid_37736 = srem64(sext_i32_i64(local_tid_43937),
                                    i32_res_28691);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28691) && (((slt64(gtid_37724,
                                                              m_28682) &&
                                                        slt64(gtid_37725,
                                                              i32_res_28697)) &&
                                                       slt64(gtid_37726,
                                                             i32_res_28697)) &&
                                                      slt64(sext_i32_i64(local_tid_43937),
                                                            i32_res_28691 *
                                                            squot64(segred_group_sizze_37875,
                                                                    segment_sizze_nonzzero_43934)))) {
                float x_37885 = ((__global
                                  float *) images_mem_42559)[gtid_37724 *
                                                             N_28681 +
                                                             gtid_37736];
                float x_37886 = ((__global
                                  float *) binop_p_mem_42568)[gtid_37725 *
                                                              N_28681 +
                                                              gtid_37736];
                float x_37887 = ((__global float *) mem_42709)[gtid_37726 *
                                                               N_28681 +
                                                               gtid_37736];
                float x_37888 = x_37886 * x_37887;
                bool isnan_res_37889;
                
                isnan_res_37889 = futrts_isnan32(x_37885);
                
                float y_37890;
                
                if (isnan_res_37889) {
                    y_37890 = 0.0F;
                } else {
                    y_37890 = 1.0F;
                }
                
                float defunc_2_f_res_37891 = x_37888 * y_37890;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_43941)[sext_i32_i64(local_tid_43937)] =
                        defunc_2_f_res_37891;
                }
            } else {
                ((__local
                  float *) red_arr_mem_43941)[sext_i32_i64(local_tid_43937)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28691)) {
            // perform segmented scan to imitate reduction
            {
                float x_37879;
                float x_37880;
                float x_43946;
                float x_43947;
                bool ltid_in_bounds_43949;
                
                ltid_in_bounds_43949 = slt64(sext_i32_i64(local_tid_43937),
                                             i32_res_28691 *
                                             squot64(segred_group_sizze_37875,
                                                     segment_sizze_nonzzero_43934));
                
                int32_t skip_threads_43950;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_43949) {
                        x_37880 = ((volatile __local
                                    float *) red_arr_mem_43941)[sext_i32_i64(local_tid_43937)];
                        if ((local_tid_43937 - squot32(local_tid_43937, 32) *
                             32) == 0) {
                            x_37879 = x_37880;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_43950 = 1;
                    while (slt32(skip_threads_43950, 32)) {
                        if (sle32(skip_threads_43950, local_tid_43937 -
                                  squot32(local_tid_43937, 32) * 32) &&
                            ltid_in_bounds_43949) {
                            // read operands
                            {
                                x_37879 = ((volatile __local
                                            float *) red_arr_mem_43941)[sext_i32_i64(local_tid_43937) -
                                                                        sext_i32_i64(skip_threads_43950)];
                            }
                            // perform operation
                            {
                                bool inactive_43951 =
                                     slt64(srem64(sext_i32_i64(local_tid_43937),
                                                  i32_res_28691),
                                           sext_i32_i64(local_tid_43937) -
                                           sext_i32_i64(local_tid_43937 -
                                           skip_threads_43950));
                                
                                if (inactive_43951) {
                                    x_37879 = x_37880;
                                }
                                if (!inactive_43951) {
                                    float defunc_1_op_res_37881 = x_37879 +
                                          x_37880;
                                    
                                    x_37879 = defunc_1_op_res_37881;
                                }
                            }
                        }
                        if (sle32(wave_sizze_43939, skip_threads_43950)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_43950, local_tid_43937 -
                                  squot32(local_tid_43937, 32) * 32) &&
                            ltid_in_bounds_43949) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_43941)[sext_i32_i64(local_tid_43937)] =
                                    x_37879;
                                x_37880 = x_37879;
                            }
                        }
                        if (sle32(wave_sizze_43939, skip_threads_43950)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_43950 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_43937 - squot32(local_tid_43937, 32) * 32) ==
                        31 && ltid_in_bounds_43949) {
                        ((volatile __local
                          float *) red_arr_mem_43941)[sext_i32_i64(squot32(local_tid_43937,
                                                                           32))] =
                            x_37879;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_43952;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_43937, 32) == 0 &&
                            ltid_in_bounds_43949) {
                            x_43947 = ((volatile __local
                                        float *) red_arr_mem_43941)[sext_i32_i64(local_tid_43937)];
                            if ((local_tid_43937 - squot32(local_tid_43937,
                                                           32) * 32) == 0) {
                                x_43946 = x_43947;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_43952 = 1;
                        while (slt32(skip_threads_43952, 32)) {
                            if (sle32(skip_threads_43952, local_tid_43937 -
                                      squot32(local_tid_43937, 32) * 32) &&
                                (squot32(local_tid_43937, 32) == 0 &&
                                 ltid_in_bounds_43949)) {
                                // read operands
                                {
                                    x_43946 = ((volatile __local
                                                float *) red_arr_mem_43941)[sext_i32_i64(local_tid_43937) -
                                                                            sext_i32_i64(skip_threads_43952)];
                                }
                                // perform operation
                                {
                                    bool inactive_43953 =
                                         slt64(srem64(sext_i32_i64(local_tid_43937 *
                                                      32 + 32 - 1),
                                                      i32_res_28691),
                                               sext_i32_i64(local_tid_43937 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_43937 -
                                                             skip_threads_43952) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_43953) {
                                        x_43946 = x_43947;
                                    }
                                    if (!inactive_43953) {
                                        float defunc_1_op_res_43948 = x_43946 +
                                              x_43947;
                                        
                                        x_43946 = defunc_1_op_res_43948;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_43939, skip_threads_43952)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_43952, local_tid_43937 -
                                      squot32(local_tid_43937, 32) * 32) &&
                                (squot32(local_tid_43937, 32) == 0 &&
                                 ltid_in_bounds_43949)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_43941)[sext_i32_i64(local_tid_43937)] =
                                        x_43946;
                                    x_43947 = x_43946;
                                }
                            }
                            if (sle32(wave_sizze_43939, skip_threads_43952)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_43952 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_43937, 32) == 0 ||
                          !ltid_in_bounds_43949)) {
                        // read operands
                        {
                            x_37880 = x_37879;
                            x_37879 = ((__local
                                        float *) red_arr_mem_43941)[sext_i32_i64(squot32(local_tid_43937,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_43954 =
                                 slt64(srem64(sext_i32_i64(local_tid_43937),
                                              i32_res_28691),
                                       sext_i32_i64(local_tid_43937) -
                                       sext_i32_i64(squot32(local_tid_43937,
                                                            32) * 32 - 1));
                            
                            if (inactive_43954) {
                                x_37879 = x_37880;
                            }
                            if (!inactive_43954) {
                                float defunc_1_op_res_37881 = x_37879 + x_37880;
                                
                                x_37879 = defunc_1_op_res_37881;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_43941)[sext_i32_i64(local_tid_43937)] =
                                x_37879;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_43937, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_43941)[sext_i32_i64(local_tid_43937)] =
                            x_37880;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_43945) *
                      squot64(segred_group_sizze_37875,
                              segment_sizze_nonzzero_43934) +
                      sext_i32_i64(local_tid_43937), m_28682 * i32_res_28697 *
                      i32_res_28697) && slt64(sext_i32_i64(local_tid_43937),
                                              squot64(segred_group_sizze_37875,
                                                      segment_sizze_nonzzero_43934))) {
                ((__global
                  float *) mem_42714)[squot64(sext_i32_i64(virt_group_id_43945) *
                                              squot64(segred_group_sizze_37875,
                                                      segment_sizze_nonzzero_43934) +
                                              sext_i32_i64(local_tid_43937),
                                              i32_res_28697 * i32_res_28697) *
                                      (i32_res_28697 * i32_res_28697) +
                                      squot64(sext_i32_i64(virt_group_id_43945) *
                                              squot64(segred_group_sizze_37875,
                                                      segment_sizze_nonzzero_43934) +
                                              sext_i32_i64(local_tid_43937) -
                                              squot64(sext_i32_i64(virt_group_id_43945) *
                                                      squot64(segred_group_sizze_37875,
                                                              segment_sizze_nonzzero_43934) +
                                                      sext_i32_i64(local_tid_43937),
                                                      i32_res_28697 *
                                                      i32_res_28697) *
                                              (i32_res_28697 * i32_res_28697),
                                              i32_res_28697) * i32_res_28697 +
                                      (sext_i32_i64(virt_group_id_43945) *
                                       squot64(segred_group_sizze_37875,
                                               segment_sizze_nonzzero_43934) +
                                       sext_i32_i64(local_tid_43937) -
                                       squot64(sext_i32_i64(virt_group_id_43945) *
                                               squot64(segred_group_sizze_37875,
                                                       segment_sizze_nonzzero_43934) +
                                               sext_i32_i64(local_tid_43937),
                                               i32_res_28697 * i32_res_28697) *
                                       (i32_res_28697 * i32_res_28697) -
                                       squot64(sext_i32_i64(virt_group_id_43945) *
                                               squot64(segred_group_sizze_37875,
                                                       segment_sizze_nonzzero_43934) +
                                               sext_i32_i64(local_tid_43937) -
                                               squot64(sext_i32_i64(virt_group_id_43945) *
                                                       squot64(segred_group_sizze_37875,
                                                               segment_sizze_nonzzero_43934) +
                                                       sext_i32_i64(local_tid_43937),
                                                       i32_res_28697 *
                                                       i32_res_28697) *
                                               (i32_res_28697 * i32_res_28697),
                                               i32_res_28697) *
                                       i32_res_28697)] = ((__local
                                                           float *) red_arr_mem_43941)[(sext_i32_i64(local_tid_43937) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_43934 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_37875
}
__kernel void mainzisegred_small_38784(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44138_backing_aligned_0,
                                       int64_t N_28681, int64_t m_28682,
                                       int64_t i32_res_28691,
                                       int64_t i32_res_28697,
                                       int64_t num_groups_38837,
                                       int64_t segment_sizze_nonzzero_44131,
                                       __global unsigned char *images_mem_42559,
                                       __global
                                       unsigned char *binop_p_mem_42568,
                                       __global unsigned char *mem_43022)
{
    #define segred_group_sizze_38836 (mainzisegred_group_sizze_38778)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44138_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44138_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44133;
    int32_t local_tid_44134;
    int64_t group_sizze_44137;
    int32_t wave_sizze_44136;
    int32_t group_tid_44135;
    
    global_tid_44133 = get_global_id(0);
    local_tid_44134 = get_local_id(0);
    group_sizze_44137 = get_local_size(0);
    wave_sizze_44136 = LOCKSTEP_WIDTH;
    group_tid_44135 = get_group_id(0);
    
    int32_t phys_tid_38784;
    
    phys_tid_38784 = global_tid_44133;
    
    __local char *red_arr_mem_44138;
    
    red_arr_mem_44138 = (__local char *) red_arr_mem_44138_backing_0;
    
    int32_t phys_group_id_44140;
    
    phys_group_id_44140 = get_group_id(0);
    for (int32_t i_44141 = 0; i_44141 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28682 * i32_res_28697,
                                          squot64(segred_group_sizze_38836,
                                                  segment_sizze_nonzzero_44131))) -
                   phys_group_id_44140, sext_i64_i32(num_groups_38837));
         i_44141++) {
        int32_t virt_group_id_44142 = phys_group_id_44140 + i_44141 *
                sext_i64_i32(num_groups_38837);
        int64_t gtid_38773 = squot64(squot64(sext_i32_i64(local_tid_44134),
                                             segment_sizze_nonzzero_44131) +
                                     sext_i32_i64(virt_group_id_44142) *
                                     squot64(segred_group_sizze_38836,
                                             segment_sizze_nonzzero_44131),
                                     i32_res_28697);
        int64_t gtid_38774 = squot64(sext_i32_i64(local_tid_44134),
                                     segment_sizze_nonzzero_44131) +
                sext_i32_i64(virt_group_id_44142) *
                squot64(segred_group_sizze_38836,
                        segment_sizze_nonzzero_44131) -
                squot64(squot64(sext_i32_i64(local_tid_44134),
                                segment_sizze_nonzzero_44131) +
                        sext_i32_i64(virt_group_id_44142) *
                        squot64(segred_group_sizze_38836,
                                segment_sizze_nonzzero_44131), i32_res_28697) *
                i32_res_28697;
        int64_t gtid_38783 = srem64(sext_i32_i64(local_tid_44134),
                                    i32_res_28691);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28691) && ((slt64(gtid_38773,
                                                             m_28682) &&
                                                       slt64(gtid_38774,
                                                             i32_res_28697)) &&
                                                      slt64(sext_i32_i64(local_tid_44134),
                                                            i32_res_28691 *
                                                            squot64(segred_group_sizze_38836,
                                                                    segment_sizze_nonzzero_44131)))) {
                float x_38846 = ((__global
                                  float *) images_mem_42559)[gtid_38773 *
                                                             N_28681 +
                                                             gtid_38783];
                bool isnan_res_38847;
                
                isnan_res_38847 = futrts_isnan32(x_38846);
                
                float defunc_1_f_res_38848;
                
                if (isnan_res_38847) {
                    defunc_1_f_res_38848 = 0.0F;
                } else {
                    float x_38845 = ((__global
                                      float *) binop_p_mem_42568)[gtid_38774 *
                                                                  N_28681 +
                                                                  gtid_38783];
                    float defunc_1_f_res_f_res_38849 = x_38845 * x_38846;
                    
                    defunc_1_f_res_38848 = defunc_1_f_res_f_res_38849;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44138)[sext_i32_i64(local_tid_44134)] =
                        defunc_1_f_res_38848;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44138)[sext_i32_i64(local_tid_44134)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28691)) {
            // perform segmented scan to imitate reduction
            {
                float x_38840;
                float x_38841;
                float x_44143;
                float x_44144;
                bool ltid_in_bounds_44146;
                
                ltid_in_bounds_44146 = slt64(sext_i32_i64(local_tid_44134),
                                             i32_res_28691 *
                                             squot64(segred_group_sizze_38836,
                                                     segment_sizze_nonzzero_44131));
                
                int32_t skip_threads_44147;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44146) {
                        x_38841 = ((volatile __local
                                    float *) red_arr_mem_44138)[sext_i32_i64(local_tid_44134)];
                        if ((local_tid_44134 - squot32(local_tid_44134, 32) *
                             32) == 0) {
                            x_38840 = x_38841;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44147 = 1;
                    while (slt32(skip_threads_44147, 32)) {
                        if (sle32(skip_threads_44147, local_tid_44134 -
                                  squot32(local_tid_44134, 32) * 32) &&
                            ltid_in_bounds_44146) {
                            // read operands
                            {
                                x_38840 = ((volatile __local
                                            float *) red_arr_mem_44138)[sext_i32_i64(local_tid_44134) -
                                                                        sext_i32_i64(skip_threads_44147)];
                            }
                            // perform operation
                            {
                                bool inactive_44148 =
                                     slt64(srem64(sext_i32_i64(local_tid_44134),
                                                  i32_res_28691),
                                           sext_i32_i64(local_tid_44134) -
                                           sext_i32_i64(local_tid_44134 -
                                           skip_threads_44147));
                                
                                if (inactive_44148) {
                                    x_38840 = x_38841;
                                }
                                if (!inactive_44148) {
                                    float defunc_1_op_res_38842 = x_38840 +
                                          x_38841;
                                    
                                    x_38840 = defunc_1_op_res_38842;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44136, skip_threads_44147)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44147, local_tid_44134 -
                                  squot32(local_tid_44134, 32) * 32) &&
                            ltid_in_bounds_44146) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44138)[sext_i32_i64(local_tid_44134)] =
                                    x_38840;
                                x_38841 = x_38840;
                            }
                        }
                        if (sle32(wave_sizze_44136, skip_threads_44147)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44147 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44134 - squot32(local_tid_44134, 32) * 32) ==
                        31 && ltid_in_bounds_44146) {
                        ((volatile __local
                          float *) red_arr_mem_44138)[sext_i32_i64(squot32(local_tid_44134,
                                                                           32))] =
                            x_38840;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44149;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44134, 32) == 0 &&
                            ltid_in_bounds_44146) {
                            x_44144 = ((volatile __local
                                        float *) red_arr_mem_44138)[sext_i32_i64(local_tid_44134)];
                            if ((local_tid_44134 - squot32(local_tid_44134,
                                                           32) * 32) == 0) {
                                x_44143 = x_44144;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44149 = 1;
                        while (slt32(skip_threads_44149, 32)) {
                            if (sle32(skip_threads_44149, local_tid_44134 -
                                      squot32(local_tid_44134, 32) * 32) &&
                                (squot32(local_tid_44134, 32) == 0 &&
                                 ltid_in_bounds_44146)) {
                                // read operands
                                {
                                    x_44143 = ((volatile __local
                                                float *) red_arr_mem_44138)[sext_i32_i64(local_tid_44134) -
                                                                            sext_i32_i64(skip_threads_44149)];
                                }
                                // perform operation
                                {
                                    bool inactive_44150 =
                                         slt64(srem64(sext_i32_i64(local_tid_44134 *
                                                      32 + 32 - 1),
                                                      i32_res_28691),
                                               sext_i32_i64(local_tid_44134 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44134 -
                                                             skip_threads_44149) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44150) {
                                        x_44143 = x_44144;
                                    }
                                    if (!inactive_44150) {
                                        float defunc_1_op_res_44145 = x_44143 +
                                              x_44144;
                                        
                                        x_44143 = defunc_1_op_res_44145;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44136, skip_threads_44149)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44149, local_tid_44134 -
                                      squot32(local_tid_44134, 32) * 32) &&
                                (squot32(local_tid_44134, 32) == 0 &&
                                 ltid_in_bounds_44146)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44138)[sext_i32_i64(local_tid_44134)] =
                                        x_44143;
                                    x_44144 = x_44143;
                                }
                            }
                            if (sle32(wave_sizze_44136, skip_threads_44149)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44149 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44134, 32) == 0 ||
                          !ltid_in_bounds_44146)) {
                        // read operands
                        {
                            x_38841 = x_38840;
                            x_38840 = ((__local
                                        float *) red_arr_mem_44138)[sext_i32_i64(squot32(local_tid_44134,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44151 =
                                 slt64(srem64(sext_i32_i64(local_tid_44134),
                                              i32_res_28691),
                                       sext_i32_i64(local_tid_44134) -
                                       sext_i32_i64(squot32(local_tid_44134,
                                                            32) * 32 - 1));
                            
                            if (inactive_44151) {
                                x_38840 = x_38841;
                            }
                            if (!inactive_44151) {
                                float defunc_1_op_res_38842 = x_38840 + x_38841;
                                
                                x_38840 = defunc_1_op_res_38842;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44138)[sext_i32_i64(local_tid_44134)] =
                                x_38840;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44134, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44138)[sext_i32_i64(local_tid_44134)] =
                            x_38841;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44142) *
                      squot64(segred_group_sizze_38836,
                              segment_sizze_nonzzero_44131) +
                      sext_i32_i64(local_tid_44134), m_28682 * i32_res_28697) &&
                slt64(sext_i32_i64(local_tid_44134),
                      squot64(segred_group_sizze_38836,
                              segment_sizze_nonzzero_44131))) {
                ((__global
                  float *) mem_43022)[squot64(sext_i32_i64(virt_group_id_44142) *
                                              squot64(segred_group_sizze_38836,
                                                      segment_sizze_nonzzero_44131) +
                                              sext_i32_i64(local_tid_44134),
                                              i32_res_28697) * i32_res_28697 +
                                      (sext_i32_i64(virt_group_id_44142) *
                                       squot64(segred_group_sizze_38836,
                                               segment_sizze_nonzzero_44131) +
                                       sext_i32_i64(local_tid_44134) -
                                       squot64(sext_i32_i64(virt_group_id_44142) *
                                               squot64(segred_group_sizze_38836,
                                                       segment_sizze_nonzzero_44131) +
                                               sext_i32_i64(local_tid_44134),
                                               i32_res_28697) *
                                       i32_res_28697)] = ((__local
                                                           float *) red_arr_mem_44138)[(sext_i32_i64(local_tid_44134) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_44131 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38836
}
__kernel void mainzisegred_small_38921(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44226_backing_aligned_0,
                                       int64_t m_28682, int64_t i32_res_28697,
                                       int64_t num_groups_38970,
                                       int64_t segment_sizze_nonzzero_44219,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_42807,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43028,
                                       __global unsigned char *mem_43088)
{
    #define segred_group_sizze_38969 (mainzisegred_group_sizze_38915)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44226_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44226_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44221;
    int32_t local_tid_44222;
    int64_t group_sizze_44225;
    int32_t wave_sizze_44224;
    int32_t group_tid_44223;
    
    global_tid_44221 = get_global_id(0);
    local_tid_44222 = get_local_id(0);
    group_sizze_44225 = get_local_size(0);
    wave_sizze_44224 = LOCKSTEP_WIDTH;
    group_tid_44223 = get_group_id(0);
    
    int32_t phys_tid_38921;
    
    phys_tid_38921 = global_tid_44221;
    
    __local char *red_arr_mem_44226;
    
    red_arr_mem_44226 = (__local char *) red_arr_mem_44226_backing_0;
    
    int32_t phys_group_id_44228;
    
    phys_group_id_44228 = get_group_id(0);
    for (int32_t i_44229 = 0; i_44229 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28682 * i32_res_28697,
                                          squot64(segred_group_sizze_38969,
                                                  segment_sizze_nonzzero_44219))) -
                   phys_group_id_44228, sext_i64_i32(num_groups_38970));
         i_44229++) {
        int32_t virt_group_id_44230 = phys_group_id_44228 + i_44229 *
                sext_i64_i32(num_groups_38970);
        int64_t gtid_38910 = squot64(squot64(sext_i32_i64(local_tid_44222),
                                             segment_sizze_nonzzero_44219) +
                                     sext_i32_i64(virt_group_id_44230) *
                                     squot64(segred_group_sizze_38969,
                                             segment_sizze_nonzzero_44219),
                                     i32_res_28697);
        int64_t gtid_38911 = squot64(sext_i32_i64(local_tid_44222),
                                     segment_sizze_nonzzero_44219) +
                sext_i32_i64(virt_group_id_44230) *
                squot64(segred_group_sizze_38969,
                        segment_sizze_nonzzero_44219) -
                squot64(squot64(sext_i32_i64(local_tid_44222),
                                segment_sizze_nonzzero_44219) +
                        sext_i32_i64(virt_group_id_44230) *
                        squot64(segred_group_sizze_38969,
                                segment_sizze_nonzzero_44219), i32_res_28697) *
                i32_res_28697;
        int64_t gtid_38920 = srem64(sext_i32_i64(local_tid_44222),
                                    i32_res_28697);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28697) && ((slt64(gtid_38910,
                                                             m_28682) &&
                                                       slt64(gtid_38911,
                                                             i32_res_28697)) &&
                                                      slt64(sext_i32_i64(local_tid_44222),
                                                            i32_res_28697 *
                                                            squot64(segred_group_sizze_38969,
                                                                    segment_sizze_nonzzero_44219)))) {
                float x_38979 = ((__global
                                  float *) defunc_3_map_res_mem_43028)[gtid_38910 *
                                                                       i32_res_28697 +
                                                                       gtid_38920];
                float x_38980 = ((__global
                                  float *) defunc_3_map_res_mem_42807)[gtid_38910 *
                                                                       (i32_res_28697 *
                                                                        i32_res_28697) +
                                                                       gtid_38911 *
                                                                       i32_res_28697 +
                                                                       gtid_38920];
                float defunc_1_f_res_38981 = x_38979 * x_38980;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44226)[sext_i32_i64(local_tid_44222)] =
                        defunc_1_f_res_38981;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44226)[sext_i32_i64(local_tid_44222)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28697)) {
            // perform segmented scan to imitate reduction
            {
                float x_38973;
                float x_38974;
                float x_44231;
                float x_44232;
                bool ltid_in_bounds_44234;
                
                ltid_in_bounds_44234 = slt64(sext_i32_i64(local_tid_44222),
                                             i32_res_28697 *
                                             squot64(segred_group_sizze_38969,
                                                     segment_sizze_nonzzero_44219));
                
                int32_t skip_threads_44235;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44234) {
                        x_38974 = ((volatile __local
                                    float *) red_arr_mem_44226)[sext_i32_i64(local_tid_44222)];
                        if ((local_tid_44222 - squot32(local_tid_44222, 32) *
                             32) == 0) {
                            x_38973 = x_38974;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44235 = 1;
                    while (slt32(skip_threads_44235, 32)) {
                        if (sle32(skip_threads_44235, local_tid_44222 -
                                  squot32(local_tid_44222, 32) * 32) &&
                            ltid_in_bounds_44234) {
                            // read operands
                            {
                                x_38973 = ((volatile __local
                                            float *) red_arr_mem_44226)[sext_i32_i64(local_tid_44222) -
                                                                        sext_i32_i64(skip_threads_44235)];
                            }
                            // perform operation
                            {
                                bool inactive_44236 =
                                     slt64(srem64(sext_i32_i64(local_tid_44222),
                                                  i32_res_28697),
                                           sext_i32_i64(local_tid_44222) -
                                           sext_i32_i64(local_tid_44222 -
                                           skip_threads_44235));
                                
                                if (inactive_44236) {
                                    x_38973 = x_38974;
                                }
                                if (!inactive_44236) {
                                    float defunc_1_op_res_38975 = x_38973 +
                                          x_38974;
                                    
                                    x_38973 = defunc_1_op_res_38975;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44224, skip_threads_44235)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44235, local_tid_44222 -
                                  squot32(local_tid_44222, 32) * 32) &&
                            ltid_in_bounds_44234) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44226)[sext_i32_i64(local_tid_44222)] =
                                    x_38973;
                                x_38974 = x_38973;
                            }
                        }
                        if (sle32(wave_sizze_44224, skip_threads_44235)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44235 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44222 - squot32(local_tid_44222, 32) * 32) ==
                        31 && ltid_in_bounds_44234) {
                        ((volatile __local
                          float *) red_arr_mem_44226)[sext_i32_i64(squot32(local_tid_44222,
                                                                           32))] =
                            x_38973;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44237;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44222, 32) == 0 &&
                            ltid_in_bounds_44234) {
                            x_44232 = ((volatile __local
                                        float *) red_arr_mem_44226)[sext_i32_i64(local_tid_44222)];
                            if ((local_tid_44222 - squot32(local_tid_44222,
                                                           32) * 32) == 0) {
                                x_44231 = x_44232;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44237 = 1;
                        while (slt32(skip_threads_44237, 32)) {
                            if (sle32(skip_threads_44237, local_tid_44222 -
                                      squot32(local_tid_44222, 32) * 32) &&
                                (squot32(local_tid_44222, 32) == 0 &&
                                 ltid_in_bounds_44234)) {
                                // read operands
                                {
                                    x_44231 = ((volatile __local
                                                float *) red_arr_mem_44226)[sext_i32_i64(local_tid_44222) -
                                                                            sext_i32_i64(skip_threads_44237)];
                                }
                                // perform operation
                                {
                                    bool inactive_44238 =
                                         slt64(srem64(sext_i32_i64(local_tid_44222 *
                                                      32 + 32 - 1),
                                                      i32_res_28697),
                                               sext_i32_i64(local_tid_44222 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44222 -
                                                             skip_threads_44237) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44238) {
                                        x_44231 = x_44232;
                                    }
                                    if (!inactive_44238) {
                                        float defunc_1_op_res_44233 = x_44231 +
                                              x_44232;
                                        
                                        x_44231 = defunc_1_op_res_44233;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44224, skip_threads_44237)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44237, local_tid_44222 -
                                      squot32(local_tid_44222, 32) * 32) &&
                                (squot32(local_tid_44222, 32) == 0 &&
                                 ltid_in_bounds_44234)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44226)[sext_i32_i64(local_tid_44222)] =
                                        x_44231;
                                    x_44232 = x_44231;
                                }
                            }
                            if (sle32(wave_sizze_44224, skip_threads_44237)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44237 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44222, 32) == 0 ||
                          !ltid_in_bounds_44234)) {
                        // read operands
                        {
                            x_38974 = x_38973;
                            x_38973 = ((__local
                                        float *) red_arr_mem_44226)[sext_i32_i64(squot32(local_tid_44222,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44239 =
                                 slt64(srem64(sext_i32_i64(local_tid_44222),
                                              i32_res_28697),
                                       sext_i32_i64(local_tid_44222) -
                                       sext_i32_i64(squot32(local_tid_44222,
                                                            32) * 32 - 1));
                            
                            if (inactive_44239) {
                                x_38973 = x_38974;
                            }
                            if (!inactive_44239) {
                                float defunc_1_op_res_38975 = x_38973 + x_38974;
                                
                                x_38973 = defunc_1_op_res_38975;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44226)[sext_i32_i64(local_tid_44222)] =
                                x_38973;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44222, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44226)[sext_i32_i64(local_tid_44222)] =
                            x_38974;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44230) *
                      squot64(segred_group_sizze_38969,
                              segment_sizze_nonzzero_44219) +
                      sext_i32_i64(local_tid_44222), m_28682 * i32_res_28697) &&
                slt64(sext_i32_i64(local_tid_44222),
                      squot64(segred_group_sizze_38969,
                              segment_sizze_nonzzero_44219))) {
                ((__global
                  float *) mem_43088)[squot64(sext_i32_i64(virt_group_id_44230) *
                                              squot64(segred_group_sizze_38969,
                                                      segment_sizze_nonzzero_44219) +
                                              sext_i32_i64(local_tid_44222),
                                              i32_res_28697) * i32_res_28697 +
                                      (sext_i32_i64(virt_group_id_44230) *
                                       squot64(segred_group_sizze_38969,
                                               segment_sizze_nonzzero_44219) +
                                       sext_i32_i64(local_tid_44222) -
                                       squot64(sext_i32_i64(virt_group_id_44230) *
                                               squot64(segred_group_sizze_38969,
                                                       segment_sizze_nonzzero_44219) +
                                               sext_i32_i64(local_tid_44222),
                                               i32_res_28697) *
                                       i32_res_28697)] = ((__local
                                                           float *) red_arr_mem_44226)[(sext_i32_i64(local_tid_44222) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_44219 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38969
}
__kernel void mainzisegred_small_39051(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44358_backing_aligned_0,
                                       int64_t N_28681, int64_t m_28682,
                                       int64_t i32_res_28697,
                                       int64_t num_groups_39098,
                                       int64_t segment_sizze_nonzzero_44351,
                                       __global unsigned char *mem_42575,
                                       __global
                                       unsigned char *defunc_4_map_res_mem_43094,
                                       __global unsigned char *mem_43312)
{
    #define segred_group_sizze_39097 (mainzisegred_group_sizze_39045)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44358_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44358_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44353;
    int32_t local_tid_44354;
    int64_t group_sizze_44357;
    int32_t wave_sizze_44356;
    int32_t group_tid_44355;
    
    global_tid_44353 = get_global_id(0);
    local_tid_44354 = get_local_id(0);
    group_sizze_44357 = get_local_size(0);
    wave_sizze_44356 = LOCKSTEP_WIDTH;
    group_tid_44355 = get_group_id(0);
    
    int32_t phys_tid_39051;
    
    phys_tid_39051 = global_tid_44353;
    
    __local char *red_arr_mem_44358;
    
    red_arr_mem_44358 = (__local char *) red_arr_mem_44358_backing_0;
    
    int32_t phys_group_id_44360;
    
    phys_group_id_44360 = get_group_id(0);
    for (int32_t i_44361 = 0; i_44361 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28682 * N_28681,
                                          squot64(segred_group_sizze_39097,
                                                  segment_sizze_nonzzero_44351))) -
                   phys_group_id_44360, sext_i64_i32(num_groups_39098));
         i_44361++) {
        int32_t virt_group_id_44362 = phys_group_id_44360 + i_44361 *
                sext_i64_i32(num_groups_39098);
        int64_t gtid_39040 = squot64(squot64(sext_i32_i64(local_tid_44354),
                                             segment_sizze_nonzzero_44351) +
                                     sext_i32_i64(virt_group_id_44362) *
                                     squot64(segred_group_sizze_39097,
                                             segment_sizze_nonzzero_44351),
                                     N_28681);
        int64_t gtid_39041 = squot64(sext_i32_i64(local_tid_44354),
                                     segment_sizze_nonzzero_44351) +
                sext_i32_i64(virt_group_id_44362) *
                squot64(segred_group_sizze_39097,
                        segment_sizze_nonzzero_44351) -
                squot64(squot64(sext_i32_i64(local_tid_44354),
                                segment_sizze_nonzzero_44351) +
                        sext_i32_i64(virt_group_id_44362) *
                        squot64(segred_group_sizze_39097,
                                segment_sizze_nonzzero_44351), N_28681) *
                N_28681;
        int64_t gtid_39050 = srem64(sext_i32_i64(local_tid_44354),
                                    i32_res_28697);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28697) && ((slt64(gtid_39040,
                                                             m_28682) &&
                                                       slt64(gtid_39041,
                                                             N_28681)) &&
                                                      slt64(sext_i32_i64(local_tid_44354),
                                                            i32_res_28697 *
                                                            squot64(segred_group_sizze_39097,
                                                                    segment_sizze_nonzzero_44351)))) {
                float x_39106 = ((__global
                                  float *) defunc_4_map_res_mem_43094)[gtid_39040 *
                                                                       i32_res_28697 +
                                                                       gtid_39050];
                float x_39107 = ((__global float *) mem_42575)[gtid_39041 *
                                                               i32_res_28697 +
                                                               gtid_39050];
                float defunc_1_f_res_39108 = x_39106 * x_39107;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44358)[sext_i32_i64(local_tid_44354)] =
                        defunc_1_f_res_39108;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44358)[sext_i32_i64(local_tid_44354)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28697)) {
            // perform segmented scan to imitate reduction
            {
                float x_39101;
                float x_39102;
                float x_44363;
                float x_44364;
                bool ltid_in_bounds_44366;
                
                ltid_in_bounds_44366 = slt64(sext_i32_i64(local_tid_44354),
                                             i32_res_28697 *
                                             squot64(segred_group_sizze_39097,
                                                     segment_sizze_nonzzero_44351));
                
                int32_t skip_threads_44367;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44366) {
                        x_39102 = ((volatile __local
                                    float *) red_arr_mem_44358)[sext_i32_i64(local_tid_44354)];
                        if ((local_tid_44354 - squot32(local_tid_44354, 32) *
                             32) == 0) {
                            x_39101 = x_39102;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44367 = 1;
                    while (slt32(skip_threads_44367, 32)) {
                        if (sle32(skip_threads_44367, local_tid_44354 -
                                  squot32(local_tid_44354, 32) * 32) &&
                            ltid_in_bounds_44366) {
                            // read operands
                            {
                                x_39101 = ((volatile __local
                                            float *) red_arr_mem_44358)[sext_i32_i64(local_tid_44354) -
                                                                        sext_i32_i64(skip_threads_44367)];
                            }
                            // perform operation
                            {
                                bool inactive_44368 =
                                     slt64(srem64(sext_i32_i64(local_tid_44354),
                                                  i32_res_28697),
                                           sext_i32_i64(local_tid_44354) -
                                           sext_i32_i64(local_tid_44354 -
                                           skip_threads_44367));
                                
                                if (inactive_44368) {
                                    x_39101 = x_39102;
                                }
                                if (!inactive_44368) {
                                    float defunc_1_op_res_39103 = x_39101 +
                                          x_39102;
                                    
                                    x_39101 = defunc_1_op_res_39103;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44356, skip_threads_44367)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44367, local_tid_44354 -
                                  squot32(local_tid_44354, 32) * 32) &&
                            ltid_in_bounds_44366) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44358)[sext_i32_i64(local_tid_44354)] =
                                    x_39101;
                                x_39102 = x_39101;
                            }
                        }
                        if (sle32(wave_sizze_44356, skip_threads_44367)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44367 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44354 - squot32(local_tid_44354, 32) * 32) ==
                        31 && ltid_in_bounds_44366) {
                        ((volatile __local
                          float *) red_arr_mem_44358)[sext_i32_i64(squot32(local_tid_44354,
                                                                           32))] =
                            x_39101;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44369;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44354, 32) == 0 &&
                            ltid_in_bounds_44366) {
                            x_44364 = ((volatile __local
                                        float *) red_arr_mem_44358)[sext_i32_i64(local_tid_44354)];
                            if ((local_tid_44354 - squot32(local_tid_44354,
                                                           32) * 32) == 0) {
                                x_44363 = x_44364;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44369 = 1;
                        while (slt32(skip_threads_44369, 32)) {
                            if (sle32(skip_threads_44369, local_tid_44354 -
                                      squot32(local_tid_44354, 32) * 32) &&
                                (squot32(local_tid_44354, 32) == 0 &&
                                 ltid_in_bounds_44366)) {
                                // read operands
                                {
                                    x_44363 = ((volatile __local
                                                float *) red_arr_mem_44358)[sext_i32_i64(local_tid_44354) -
                                                                            sext_i32_i64(skip_threads_44369)];
                                }
                                // perform operation
                                {
                                    bool inactive_44370 =
                                         slt64(srem64(sext_i32_i64(local_tid_44354 *
                                                      32 + 32 - 1),
                                                      i32_res_28697),
                                               sext_i32_i64(local_tid_44354 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44354 -
                                                             skip_threads_44369) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44370) {
                                        x_44363 = x_44364;
                                    }
                                    if (!inactive_44370) {
                                        float defunc_1_op_res_44365 = x_44363 +
                                              x_44364;
                                        
                                        x_44363 = defunc_1_op_res_44365;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44356, skip_threads_44369)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44369, local_tid_44354 -
                                      squot32(local_tid_44354, 32) * 32) &&
                                (squot32(local_tid_44354, 32) == 0 &&
                                 ltid_in_bounds_44366)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44358)[sext_i32_i64(local_tid_44354)] =
                                        x_44363;
                                    x_44364 = x_44363;
                                }
                            }
                            if (sle32(wave_sizze_44356, skip_threads_44369)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44369 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44354, 32) == 0 ||
                          !ltid_in_bounds_44366)) {
                        // read operands
                        {
                            x_39102 = x_39101;
                            x_39101 = ((__local
                                        float *) red_arr_mem_44358)[sext_i32_i64(squot32(local_tid_44354,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44371 =
                                 slt64(srem64(sext_i32_i64(local_tid_44354),
                                              i32_res_28697),
                                       sext_i32_i64(local_tid_44354) -
                                       sext_i32_i64(squot32(local_tid_44354,
                                                            32) * 32 - 1));
                            
                            if (inactive_44371) {
                                x_39101 = x_39102;
                            }
                            if (!inactive_44371) {
                                float defunc_1_op_res_39103 = x_39101 + x_39102;
                                
                                x_39101 = defunc_1_op_res_39103;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44358)[sext_i32_i64(local_tid_44354)] =
                                x_39101;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44354, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44358)[sext_i32_i64(local_tid_44354)] =
                            x_39102;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44362) *
                      squot64(segred_group_sizze_39097,
                              segment_sizze_nonzzero_44351) +
                      sext_i32_i64(local_tid_44354), m_28682 * N_28681) &&
                slt64(sext_i32_i64(local_tid_44354),
                      squot64(segred_group_sizze_39097,
                              segment_sizze_nonzzero_44351))) {
                ((__global
                  float *) mem_43312)[squot64(sext_i32_i64(virt_group_id_44362) *
                                              squot64(segred_group_sizze_39097,
                                                      segment_sizze_nonzzero_44351) +
                                              sext_i32_i64(local_tid_44354),
                                              N_28681) * N_28681 +
                                      (sext_i32_i64(virt_group_id_44362) *
                                       squot64(segred_group_sizze_39097,
                                               segment_sizze_nonzzero_44351) +
                                       sext_i32_i64(local_tid_44354) -
                                       squot64(sext_i32_i64(virt_group_id_44362) *
                                               squot64(segred_group_sizze_39097,
                                                       segment_sizze_nonzzero_44351) +
                                               sext_i32_i64(local_tid_44354),
                                               N_28681) * N_28681)] = ((__local
                                                                        float *) red_arr_mem_44358)[(sext_i32_i64(local_tid_44354) +
                                                                                                     (int64_t) 1) *
                                                                                                    segment_sizze_nonzzero_44351 -
                                                                                                    (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39097
}
__kernel void mainzisegred_small_39617(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44610_backing_aligned_0,
                                       int64_t N_28681, int64_t m_28682,
                                       int64_t i32_res_28691,
                                       int64_t num_groups_39664,
                                       int64_t segment_sizze_nonzzero_44603,
                                       __global
                                       unsigned char *defunc_4_map_res_mem_43356,
                                       __global unsigned char *mem_43410,
                                       __global unsigned char *mem_43413)
{
    #define segred_group_sizze_39663 (mainzisegred_group_sizze_39611)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44610_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44610_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44605;
    int32_t local_tid_44606;
    int64_t group_sizze_44609;
    int32_t wave_sizze_44608;
    int32_t group_tid_44607;
    
    global_tid_44605 = get_global_id(0);
    local_tid_44606 = get_local_id(0);
    group_sizze_44609 = get_local_size(0);
    wave_sizze_44608 = LOCKSTEP_WIDTH;
    group_tid_44607 = get_group_id(0);
    
    int32_t phys_tid_39617;
    
    phys_tid_39617 = global_tid_44605;
    
    __local char *red_arr_mem_44610;
    
    red_arr_mem_44610 = (__local char *) red_arr_mem_44610_backing_0;
    
    int32_t phys_group_id_44612;
    
    phys_group_id_44612 = get_group_id(0);
    for (int32_t i_44613 = 0; i_44613 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28682,
                                          squot64(segred_group_sizze_39663,
                                                  segment_sizze_nonzzero_44603))) -
                   phys_group_id_44612, sext_i64_i32(num_groups_39664));
         i_44613++) {
        int32_t virt_group_id_44614 = phys_group_id_44612 + i_44613 *
                sext_i64_i32(num_groups_39664);
        int64_t gtid_39608 = squot64(sext_i32_i64(local_tid_44606),
                                     segment_sizze_nonzzero_44603) +
                sext_i32_i64(virt_group_id_44614) *
                squot64(segred_group_sizze_39663, segment_sizze_nonzzero_44603);
        int64_t gtid_39616 = srem64(sext_i32_i64(local_tid_44606),
                                    i32_res_28691);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28691) && (slt64(gtid_39608,
                                                            m_28682) &&
                                                      slt64(sext_i32_i64(local_tid_44606),
                                                            i32_res_28691 *
                                                            squot64(segred_group_sizze_39663,
                                                                    segment_sizze_nonzzero_44603)))) {
                int32_t defunc_0_f_res_39671 = ((__global
                                                 int32_t *) mem_43410)[gtid_39608];
                int32_t index_primexp_40595 = sext_i64_i32(gtid_39616);
                bool cond_39673 = slt32(index_primexp_40595,
                                        defunc_0_f_res_39671);
                float defunc_0_f_res_39674;
                
                if (cond_39673) {
                    int64_t i_39675 = sext_i32_i64(index_primexp_40595);
                    float defunc_0_f_res_t_res_39676 = ((__global
                                                         float *) defunc_4_map_res_mem_43356)[gtid_39608 *
                                                                                              N_28681 +
                                                                                              i_39675];
                    
                    defunc_0_f_res_39674 = defunc_0_f_res_t_res_39676;
                } else {
                    defunc_0_f_res_39674 = 0.0F;
                }
                
                float defunc_0_f_res_39677 = defunc_0_f_res_39674 *
                      defunc_0_f_res_39674;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44610)[sext_i32_i64(local_tid_44606)] =
                        defunc_0_f_res_39677;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44610)[sext_i32_i64(local_tid_44606)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28691)) {
            // perform segmented scan to imitate reduction
            {
                float x_39667;
                float x_39668;
                float x_44615;
                float x_44616;
                bool ltid_in_bounds_44618;
                
                ltid_in_bounds_44618 = slt64(sext_i32_i64(local_tid_44606),
                                             i32_res_28691 *
                                             squot64(segred_group_sizze_39663,
                                                     segment_sizze_nonzzero_44603));
                
                int32_t skip_threads_44619;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44618) {
                        x_39668 = ((volatile __local
                                    float *) red_arr_mem_44610)[sext_i32_i64(local_tid_44606)];
                        if ((local_tid_44606 - squot32(local_tid_44606, 32) *
                             32) == 0) {
                            x_39667 = x_39668;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44619 = 1;
                    while (slt32(skip_threads_44619, 32)) {
                        if (sle32(skip_threads_44619, local_tid_44606 -
                                  squot32(local_tid_44606, 32) * 32) &&
                            ltid_in_bounds_44618) {
                            // read operands
                            {
                                x_39667 = ((volatile __local
                                            float *) red_arr_mem_44610)[sext_i32_i64(local_tid_44606) -
                                                                        sext_i32_i64(skip_threads_44619)];
                            }
                            // perform operation
                            {
                                bool inactive_44620 =
                                     slt64(srem64(sext_i32_i64(local_tid_44606),
                                                  i32_res_28691),
                                           sext_i32_i64(local_tid_44606) -
                                           sext_i32_i64(local_tid_44606 -
                                           skip_threads_44619));
                                
                                if (inactive_44620) {
                                    x_39667 = x_39668;
                                }
                                if (!inactive_44620) {
                                    float defunc_1_op_res_39669 = x_39667 +
                                          x_39668;
                                    
                                    x_39667 = defunc_1_op_res_39669;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44608, skip_threads_44619)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44619, local_tid_44606 -
                                  squot32(local_tid_44606, 32) * 32) &&
                            ltid_in_bounds_44618) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44610)[sext_i32_i64(local_tid_44606)] =
                                    x_39667;
                                x_39668 = x_39667;
                            }
                        }
                        if (sle32(wave_sizze_44608, skip_threads_44619)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44619 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44606 - squot32(local_tid_44606, 32) * 32) ==
                        31 && ltid_in_bounds_44618) {
                        ((volatile __local
                          float *) red_arr_mem_44610)[sext_i32_i64(squot32(local_tid_44606,
                                                                           32))] =
                            x_39667;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44621;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44606, 32) == 0 &&
                            ltid_in_bounds_44618) {
                            x_44616 = ((volatile __local
                                        float *) red_arr_mem_44610)[sext_i32_i64(local_tid_44606)];
                            if ((local_tid_44606 - squot32(local_tid_44606,
                                                           32) * 32) == 0) {
                                x_44615 = x_44616;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44621 = 1;
                        while (slt32(skip_threads_44621, 32)) {
                            if (sle32(skip_threads_44621, local_tid_44606 -
                                      squot32(local_tid_44606, 32) * 32) &&
                                (squot32(local_tid_44606, 32) == 0 &&
                                 ltid_in_bounds_44618)) {
                                // read operands
                                {
                                    x_44615 = ((volatile __local
                                                float *) red_arr_mem_44610)[sext_i32_i64(local_tid_44606) -
                                                                            sext_i32_i64(skip_threads_44621)];
                                }
                                // perform operation
                                {
                                    bool inactive_44622 =
                                         slt64(srem64(sext_i32_i64(local_tid_44606 *
                                                      32 + 32 - 1),
                                                      i32_res_28691),
                                               sext_i32_i64(local_tid_44606 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44606 -
                                                             skip_threads_44621) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44622) {
                                        x_44615 = x_44616;
                                    }
                                    if (!inactive_44622) {
                                        float defunc_1_op_res_44617 = x_44615 +
                                              x_44616;
                                        
                                        x_44615 = defunc_1_op_res_44617;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44608, skip_threads_44621)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44621, local_tid_44606 -
                                      squot32(local_tid_44606, 32) * 32) &&
                                (squot32(local_tid_44606, 32) == 0 &&
                                 ltid_in_bounds_44618)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44610)[sext_i32_i64(local_tid_44606)] =
                                        x_44615;
                                    x_44616 = x_44615;
                                }
                            }
                            if (sle32(wave_sizze_44608, skip_threads_44621)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44621 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44606, 32) == 0 ||
                          !ltid_in_bounds_44618)) {
                        // read operands
                        {
                            x_39668 = x_39667;
                            x_39667 = ((__local
                                        float *) red_arr_mem_44610)[sext_i32_i64(squot32(local_tid_44606,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44623 =
                                 slt64(srem64(sext_i32_i64(local_tid_44606),
                                              i32_res_28691),
                                       sext_i32_i64(local_tid_44606) -
                                       sext_i32_i64(squot32(local_tid_44606,
                                                            32) * 32 - 1));
                            
                            if (inactive_44623) {
                                x_39667 = x_39668;
                            }
                            if (!inactive_44623) {
                                float defunc_1_op_res_39669 = x_39667 + x_39668;
                                
                                x_39667 = defunc_1_op_res_39669;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44610)[sext_i32_i64(local_tid_44606)] =
                                x_39667;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44606, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44610)[sext_i32_i64(local_tid_44606)] =
                            x_39668;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44614) *
                      squot64(segred_group_sizze_39663,
                              segment_sizze_nonzzero_44603) +
                      sext_i32_i64(local_tid_44606), m_28682) &&
                slt64(sext_i32_i64(local_tid_44606),
                      squot64(segred_group_sizze_39663,
                              segment_sizze_nonzzero_44603))) {
                ((__global
                  float *) mem_43413)[sext_i32_i64(virt_group_id_44614) *
                                      squot64(segred_group_sizze_39663,
                                              segment_sizze_nonzzero_44603) +
                                      sext_i32_i64(local_tid_44606)] = ((__local
                                                                         float *) red_arr_mem_44610)[(sext_i32_i64(local_tid_44606) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_44603 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39663
}
__kernel void mainzisegred_small_39638(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44550_backing_aligned_0,
                                       int64_t N_28681, int64_t m_28682,
                                       int64_t i32_res_28691,
                                       int64_t num_groups_39650,
                                       int64_t segment_sizze_nonzzero_44543,
                                       __global unsigned char *images_mem_42559,
                                       __global unsigned char *mem_43410)
{
    #define segred_group_sizze_39649 (mainzisegred_group_sizze_39632)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44550_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44550_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44545;
    int32_t local_tid_44546;
    int64_t group_sizze_44549;
    int32_t wave_sizze_44548;
    int32_t group_tid_44547;
    
    global_tid_44545 = get_global_id(0);
    local_tid_44546 = get_local_id(0);
    group_sizze_44549 = get_local_size(0);
    wave_sizze_44548 = LOCKSTEP_WIDTH;
    group_tid_44547 = get_group_id(0);
    
    int32_t phys_tid_39638;
    
    phys_tid_39638 = global_tid_44545;
    
    __local char *red_arr_mem_44550;
    
    red_arr_mem_44550 = (__local char *) red_arr_mem_44550_backing_0;
    
    int32_t phys_group_id_44552;
    
    phys_group_id_44552 = get_group_id(0);
    for (int32_t i_44553 = 0; i_44553 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28682,
                                          squot64(segred_group_sizze_39649,
                                                  segment_sizze_nonzzero_44543))) -
                   phys_group_id_44552, sext_i64_i32(num_groups_39650));
         i_44553++) {
        int32_t virt_group_id_44554 = phys_group_id_44552 + i_44553 *
                sext_i64_i32(num_groups_39650);
        int64_t gtid_39629 = squot64(sext_i32_i64(local_tid_44546),
                                     segment_sizze_nonzzero_44543) +
                sext_i32_i64(virt_group_id_44554) *
                squot64(segred_group_sizze_39649, segment_sizze_nonzzero_44543);
        int64_t gtid_39637 = srem64(sext_i32_i64(local_tid_44546),
                                    i32_res_28691);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28691) && (slt64(gtid_39629,
                                                            m_28682) &&
                                                      slt64(sext_i32_i64(local_tid_44546),
                                                            i32_res_28691 *
                                                            squot64(segred_group_sizze_39649,
                                                                    segment_sizze_nonzzero_44543)))) {
                float x_39657 = ((__global
                                  float *) images_mem_42559)[gtid_39629 *
                                                             N_28681 +
                                                             gtid_39637];
                bool isnan_res_39658;
                
                isnan_res_39658 = futrts_isnan32(x_39657);
                
                bool cond_39659 = !isnan_res_39658;
                int32_t defunc_0_f_res_39660 = btoi_bool_i32(cond_39659);
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      int32_t *) red_arr_mem_44550)[sext_i32_i64(local_tid_44546)] =
                        defunc_0_f_res_39660;
                }
            } else {
                ((__local
                  int32_t *) red_arr_mem_44550)[sext_i32_i64(local_tid_44546)] =
                    0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28691)) {
            // perform segmented scan to imitate reduction
            {
                int32_t x_39653;
                int32_t x_39654;
                int32_t x_44555;
                int32_t x_44556;
                bool ltid_in_bounds_44558;
                
                ltid_in_bounds_44558 = slt64(sext_i32_i64(local_tid_44546),
                                             i32_res_28691 *
                                             squot64(segred_group_sizze_39649,
                                                     segment_sizze_nonzzero_44543));
                
                int32_t skip_threads_44559;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44558) {
                        x_39654 = ((volatile __local
                                    int32_t *) red_arr_mem_44550)[sext_i32_i64(local_tid_44546)];
                        if ((local_tid_44546 - squot32(local_tid_44546, 32) *
                             32) == 0) {
                            x_39653 = x_39654;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44559 = 1;
                    while (slt32(skip_threads_44559, 32)) {
                        if (sle32(skip_threads_44559, local_tid_44546 -
                                  squot32(local_tid_44546, 32) * 32) &&
                            ltid_in_bounds_44558) {
                            // read operands
                            {
                                x_39653 = ((volatile __local
                                            int32_t *) red_arr_mem_44550)[sext_i32_i64(local_tid_44546) -
                                                                          sext_i32_i64(skip_threads_44559)];
                            }
                            // perform operation
                            {
                                bool inactive_44560 =
                                     slt64(srem64(sext_i32_i64(local_tid_44546),
                                                  i32_res_28691),
                                           sext_i32_i64(local_tid_44546) -
                                           sext_i32_i64(local_tid_44546 -
                                           skip_threads_44559));
                                
                                if (inactive_44560) {
                                    x_39653 = x_39654;
                                }
                                if (!inactive_44560) {
                                    int32_t defunc_1_op_res_39655 =
                                            add32(x_39653, x_39654);
                                    
                                    x_39653 = defunc_1_op_res_39655;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44548, skip_threads_44559)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44559, local_tid_44546 -
                                  squot32(local_tid_44546, 32) * 32) &&
                            ltid_in_bounds_44558) {
                            // write result
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_44550)[sext_i32_i64(local_tid_44546)] =
                                    x_39653;
                                x_39654 = x_39653;
                            }
                        }
                        if (sle32(wave_sizze_44548, skip_threads_44559)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44559 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44546 - squot32(local_tid_44546, 32) * 32) ==
                        31 && ltid_in_bounds_44558) {
                        ((volatile __local
                          int32_t *) red_arr_mem_44550)[sext_i32_i64(squot32(local_tid_44546,
                                                                             32))] =
                            x_39653;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44561;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44546, 32) == 0 &&
                            ltid_in_bounds_44558) {
                            x_44556 = ((volatile __local
                                        int32_t *) red_arr_mem_44550)[sext_i32_i64(local_tid_44546)];
                            if ((local_tid_44546 - squot32(local_tid_44546,
                                                           32) * 32) == 0) {
                                x_44555 = x_44556;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44561 = 1;
                        while (slt32(skip_threads_44561, 32)) {
                            if (sle32(skip_threads_44561, local_tid_44546 -
                                      squot32(local_tid_44546, 32) * 32) &&
                                (squot32(local_tid_44546, 32) == 0 &&
                                 ltid_in_bounds_44558)) {
                                // read operands
                                {
                                    x_44555 = ((volatile __local
                                                int32_t *) red_arr_mem_44550)[sext_i32_i64(local_tid_44546) -
                                                                              sext_i32_i64(skip_threads_44561)];
                                }
                                // perform operation
                                {
                                    bool inactive_44562 =
                                         slt64(srem64(sext_i32_i64(local_tid_44546 *
                                                      32 + 32 - 1),
                                                      i32_res_28691),
                                               sext_i32_i64(local_tid_44546 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44546 -
                                                             skip_threads_44561) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44562) {
                                        x_44555 = x_44556;
                                    }
                                    if (!inactive_44562) {
                                        int32_t defunc_1_op_res_44557 =
                                                add32(x_44555, x_44556);
                                        
                                        x_44555 = defunc_1_op_res_44557;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44548, skip_threads_44561)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44561, local_tid_44546 -
                                      squot32(local_tid_44546, 32) * 32) &&
                                (squot32(local_tid_44546, 32) == 0 &&
                                 ltid_in_bounds_44558)) {
                                // write result
                                {
                                    ((volatile __local
                                      int32_t *) red_arr_mem_44550)[sext_i32_i64(local_tid_44546)] =
                                        x_44555;
                                    x_44556 = x_44555;
                                }
                            }
                            if (sle32(wave_sizze_44548, skip_threads_44561)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44561 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44546, 32) == 0 ||
                          !ltid_in_bounds_44558)) {
                        // read operands
                        {
                            x_39654 = x_39653;
                            x_39653 = ((__local
                                        int32_t *) red_arr_mem_44550)[sext_i32_i64(squot32(local_tid_44546,
                                                                                           32)) -
                                                                      (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44563 =
                                 slt64(srem64(sext_i32_i64(local_tid_44546),
                                              i32_res_28691),
                                       sext_i32_i64(local_tid_44546) -
                                       sext_i32_i64(squot32(local_tid_44546,
                                                            32) * 32 - 1));
                            
                            if (inactive_44563) {
                                x_39653 = x_39654;
                            }
                            if (!inactive_44563) {
                                int32_t defunc_1_op_res_39655 = add32(x_39653,
                                                                      x_39654);
                                
                                x_39653 = defunc_1_op_res_39655;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              int32_t *) red_arr_mem_44550)[sext_i32_i64(local_tid_44546)] =
                                x_39653;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44546, 32) == 0) {
                        ((__local
                          int32_t *) red_arr_mem_44550)[sext_i32_i64(local_tid_44546)] =
                            x_39654;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44554) *
                      squot64(segred_group_sizze_39649,
                              segment_sizze_nonzzero_44543) +
                      sext_i32_i64(local_tid_44546), m_28682) &&
                slt64(sext_i32_i64(local_tid_44546),
                      squot64(segred_group_sizze_39649,
                              segment_sizze_nonzzero_44543))) {
                ((__global
                  int32_t *) mem_43410)[sext_i32_i64(virt_group_id_44554) *
                                        squot64(segred_group_sizze_39649,
                                                segment_sizze_nonzzero_44543) +
                                        sext_i32_i64(local_tid_44546)] =
                    ((__local
                      int32_t *) red_arr_mem_44550)[(sext_i32_i64(local_tid_44546) +
                                                     (int64_t) 1) *
                                                    segment_sizze_nonzzero_44543 -
                                                    (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39649
}
__kernel void mainzisegred_small_39789(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44719_backing_aligned_0,
                                       int64_t N_28681, int64_t m_28682,
                                       int64_t i32_res_29052,
                                       int64_t num_groups_39807,
                                       int64_t segment_sizze_nonzzero_44712,
                                       __global
                                       unsigned char *defunc_4_map_res_mem_43356,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43422,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43423,
                                       __global unsigned char *mem_43456)
{
    #define segred_group_sizze_39806 (mainzisegred_group_sizze_39783)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44719_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44719_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44714;
    int32_t local_tid_44715;
    int64_t group_sizze_44718;
    int32_t wave_sizze_44717;
    int32_t group_tid_44716;
    
    global_tid_44714 = get_global_id(0);
    local_tid_44715 = get_local_id(0);
    group_sizze_44718 = get_local_size(0);
    wave_sizze_44717 = LOCKSTEP_WIDTH;
    group_tid_44716 = get_group_id(0);
    
    int32_t phys_tid_39789;
    
    phys_tid_39789 = global_tid_44714;
    
    __local char *red_arr_mem_44719;
    
    red_arr_mem_44719 = (__local char *) red_arr_mem_44719_backing_0;
    
    int32_t phys_group_id_44721;
    
    phys_group_id_44721 = get_group_id(0);
    for (int32_t i_44722 = 0; i_44722 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28682,
                                          squot64(segred_group_sizze_39806,
                                                  segment_sizze_nonzzero_44712))) -
                   phys_group_id_44721, sext_i64_i32(num_groups_39807));
         i_44722++) {
        int32_t virt_group_id_44723 = phys_group_id_44721 + i_44722 *
                sext_i64_i32(num_groups_39807);
        int64_t gtid_39780 = squot64(sext_i32_i64(local_tid_44715),
                                     segment_sizze_nonzzero_44712) +
                sext_i32_i64(virt_group_id_44723) *
                squot64(segred_group_sizze_39806, segment_sizze_nonzzero_44712);
        int64_t gtid_39788 = srem64(sext_i32_i64(local_tid_44715),
                                    i32_res_29052);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_29052) && (slt64(gtid_39780,
                                                            m_28682) &&
                                                      slt64(sext_i32_i64(local_tid_44715),
                                                            i32_res_29052 *
                                                            squot64(segred_group_sizze_39806,
                                                                    segment_sizze_nonzzero_44712)))) {
                int32_t x_39815 = ((__global
                                    int32_t *) defunc_3_map_res_mem_43422)[gtid_39780];
                int32_t index_primexp_40600 = sext_i64_i32(gtid_39788);
                bool cond_39817 = slt32(index_primexp_40600, x_39815);
                float defunc_0_f_res_39818;
                
                if (cond_39817) {
                    int32_t x_39814 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43423)[gtid_39780];
                    int32_t x_39819 = add32(x_39814, index_primexp_40600);
                    int32_t x_39820 = sub32(x_39819, x_39815);
                    int32_t i_39821 = add32(1, x_39820);
                    int64_t i_39822 = sext_i32_i64(i_39821);
                    float defunc_0_f_res_t_res_39823 = ((__global
                                                         float *) defunc_4_map_res_mem_43356)[gtid_39780 *
                                                                                              N_28681 +
                                                                                              i_39822];
                    
                    defunc_0_f_res_39818 = defunc_0_f_res_t_res_39823;
                } else {
                    defunc_0_f_res_39818 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44719)[sext_i32_i64(local_tid_44715)] =
                        defunc_0_f_res_39818;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44719)[sext_i32_i64(local_tid_44715)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_29052)) {
            // perform segmented scan to imitate reduction
            {
                float x_39810;
                float x_39811;
                float x_44724;
                float x_44725;
                bool ltid_in_bounds_44727;
                
                ltid_in_bounds_44727 = slt64(sext_i32_i64(local_tid_44715),
                                             i32_res_29052 *
                                             squot64(segred_group_sizze_39806,
                                                     segment_sizze_nonzzero_44712));
                
                int32_t skip_threads_44728;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44727) {
                        x_39811 = ((volatile __local
                                    float *) red_arr_mem_44719)[sext_i32_i64(local_tid_44715)];
                        if ((local_tid_44715 - squot32(local_tid_44715, 32) *
                             32) == 0) {
                            x_39810 = x_39811;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44728 = 1;
                    while (slt32(skip_threads_44728, 32)) {
                        if (sle32(skip_threads_44728, local_tid_44715 -
                                  squot32(local_tid_44715, 32) * 32) &&
                            ltid_in_bounds_44727) {
                            // read operands
                            {
                                x_39810 = ((volatile __local
                                            float *) red_arr_mem_44719)[sext_i32_i64(local_tid_44715) -
                                                                        sext_i32_i64(skip_threads_44728)];
                            }
                            // perform operation
                            {
                                bool inactive_44729 =
                                     slt64(srem64(sext_i32_i64(local_tid_44715),
                                                  i32_res_29052),
                                           sext_i32_i64(local_tid_44715) -
                                           sext_i32_i64(local_tid_44715 -
                                           skip_threads_44728));
                                
                                if (inactive_44729) {
                                    x_39810 = x_39811;
                                }
                                if (!inactive_44729) {
                                    float defunc_1_op_res_39812 = x_39810 +
                                          x_39811;
                                    
                                    x_39810 = defunc_1_op_res_39812;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44717, skip_threads_44728)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44728, local_tid_44715 -
                                  squot32(local_tid_44715, 32) * 32) &&
                            ltid_in_bounds_44727) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44719)[sext_i32_i64(local_tid_44715)] =
                                    x_39810;
                                x_39811 = x_39810;
                            }
                        }
                        if (sle32(wave_sizze_44717, skip_threads_44728)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44728 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44715 - squot32(local_tid_44715, 32) * 32) ==
                        31 && ltid_in_bounds_44727) {
                        ((volatile __local
                          float *) red_arr_mem_44719)[sext_i32_i64(squot32(local_tid_44715,
                                                                           32))] =
                            x_39810;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44730;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44715, 32) == 0 &&
                            ltid_in_bounds_44727) {
                            x_44725 = ((volatile __local
                                        float *) red_arr_mem_44719)[sext_i32_i64(local_tid_44715)];
                            if ((local_tid_44715 - squot32(local_tid_44715,
                                                           32) * 32) == 0) {
                                x_44724 = x_44725;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44730 = 1;
                        while (slt32(skip_threads_44730, 32)) {
                            if (sle32(skip_threads_44730, local_tid_44715 -
                                      squot32(local_tid_44715, 32) * 32) &&
                                (squot32(local_tid_44715, 32) == 0 &&
                                 ltid_in_bounds_44727)) {
                                // read operands
                                {
                                    x_44724 = ((volatile __local
                                                float *) red_arr_mem_44719)[sext_i32_i64(local_tid_44715) -
                                                                            sext_i32_i64(skip_threads_44730)];
                                }
                                // perform operation
                                {
                                    bool inactive_44731 =
                                         slt64(srem64(sext_i32_i64(local_tid_44715 *
                                                      32 + 32 - 1),
                                                      i32_res_29052),
                                               sext_i32_i64(local_tid_44715 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44715 -
                                                             skip_threads_44730) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44731) {
                                        x_44724 = x_44725;
                                    }
                                    if (!inactive_44731) {
                                        float defunc_1_op_res_44726 = x_44724 +
                                              x_44725;
                                        
                                        x_44724 = defunc_1_op_res_44726;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44717, skip_threads_44730)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44730, local_tid_44715 -
                                      squot32(local_tid_44715, 32) * 32) &&
                                (squot32(local_tid_44715, 32) == 0 &&
                                 ltid_in_bounds_44727)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44719)[sext_i32_i64(local_tid_44715)] =
                                        x_44724;
                                    x_44725 = x_44724;
                                }
                            }
                            if (sle32(wave_sizze_44717, skip_threads_44730)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44730 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44715, 32) == 0 ||
                          !ltid_in_bounds_44727)) {
                        // read operands
                        {
                            x_39811 = x_39810;
                            x_39810 = ((__local
                                        float *) red_arr_mem_44719)[sext_i32_i64(squot32(local_tid_44715,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44732 =
                                 slt64(srem64(sext_i32_i64(local_tid_44715),
                                              i32_res_29052),
                                       sext_i32_i64(local_tid_44715) -
                                       sext_i32_i64(squot32(local_tid_44715,
                                                            32) * 32 - 1));
                            
                            if (inactive_44732) {
                                x_39810 = x_39811;
                            }
                            if (!inactive_44732) {
                                float defunc_1_op_res_39812 = x_39810 + x_39811;
                                
                                x_39810 = defunc_1_op_res_39812;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44719)[sext_i32_i64(local_tid_44715)] =
                                x_39810;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44715, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44719)[sext_i32_i64(local_tid_44715)] =
                            x_39811;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44723) *
                      squot64(segred_group_sizze_39806,
                              segment_sizze_nonzzero_44712) +
                      sext_i32_i64(local_tid_44715), m_28682) &&
                slt64(sext_i32_i64(local_tid_44715),
                      squot64(segred_group_sizze_39806,
                              segment_sizze_nonzzero_44712))) {
                ((__global
                  float *) mem_43456)[sext_i32_i64(virt_group_id_44723) *
                                      squot64(segred_group_sizze_39806,
                                              segment_sizze_nonzzero_44712) +
                                      sext_i32_i64(local_tid_44715)] = ((__local
                                                                         float *) red_arr_mem_44719)[(sext_i32_i64(local_tid_44715) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_44712 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39806
}
__kernel void mainzisegred_small_40290(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44881_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44879_backing_aligned_1,
                                       __local volatile
                                       int64_t *red_arr_mem_44877_backing_aligned_2,
                                       int64_t m_28682,
                                       int64_t iota32_arg_29077,
                                       int64_t num_groups_40461,
                                       int64_t segment_sizze_nonzzero_44870,
                                       __global unsigned char *mem_43462,
                                       __global unsigned char *mem_43474,
                                       __global unsigned char *mem_43476,
                                       __global unsigned char *mem_43480,
                                       __global unsigned char *mem_43483,
                                       __global unsigned char *mem_43485,
                                       __global unsigned char *mem_43487)
{
    #define segred_group_sizze_40460 (mainzisegred_group_sizze_40284)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44881_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_44881_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44879_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44879_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_44877_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44877_backing_aligned_2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44872;
    int32_t local_tid_44873;
    int64_t group_sizze_44876;
    int32_t wave_sizze_44875;
    int32_t group_tid_44874;
    
    global_tid_44872 = get_global_id(0);
    local_tid_44873 = get_local_id(0);
    group_sizze_44876 = get_local_size(0);
    wave_sizze_44875 = LOCKSTEP_WIDTH;
    group_tid_44874 = get_group_id(0);
    
    int32_t phys_tid_40290;
    
    phys_tid_40290 = global_tid_44872;
    
    __local char *red_arr_mem_44877;
    
    red_arr_mem_44877 = (__local char *) red_arr_mem_44877_backing_0;
    
    __local char *red_arr_mem_44879;
    
    red_arr_mem_44879 = (__local char *) red_arr_mem_44879_backing_1;
    
    __local char *red_arr_mem_44881;
    
    red_arr_mem_44881 = (__local char *) red_arr_mem_44881_backing_2;
    
    int32_t phys_group_id_44883;
    
    phys_group_id_44883 = get_group_id(0);
    for (int32_t i_44884 = 0; i_44884 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28682,
                                          squot64(segred_group_sizze_40460,
                                                  segment_sizze_nonzzero_44870))) -
                   phys_group_id_44883, sext_i64_i32(num_groups_40461));
         i_44884++) {
        int32_t virt_group_id_44885 = phys_group_id_44883 + i_44884 *
                sext_i64_i32(num_groups_40461);
        int64_t gtid_40281 = squot64(sext_i32_i64(local_tid_44873),
                                     segment_sizze_nonzzero_44870) +
                sext_i32_i64(virt_group_id_44885) *
                squot64(segred_group_sizze_40460, segment_sizze_nonzzero_44870);
        int64_t gtid_40289 = srem64(sext_i32_i64(local_tid_44873),
                                    iota32_arg_29077);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, iota32_arg_29077) && (slt64(gtid_40281,
                                                               m_28682) &&
                                                         slt64(sext_i32_i64(local_tid_44873),
                                                               iota32_arg_29077 *
                                                               squot64(segred_group_sizze_40460,
                                                                       segment_sizze_nonzzero_44870)))) {
                int32_t y_40480 = ((__global int32_t *) mem_43476)[gtid_40281];
                float y_40481 = ((__global float *) mem_43474)[gtid_40281];
                float x_40485 = ((__global float *) mem_43480)[gtid_40281 *
                                                               iota32_arg_29077 +
                                                               gtid_40289];
                float x_40486 = ((__global float *) mem_43462)[gtid_40289];
                int32_t index_primexp_40614 = sext_i64_i32(gtid_40289);
                float defunc_0_f_res_40489 = x_40485 / y_40481;
                bool cond_40490 = slt32(index_primexp_40614, y_40480);
                bool isnan_res_40491;
                
                isnan_res_40491 = futrts_isnan32(defunc_0_f_res_40489);
                
                bool cond_t_res_40492 = !isnan_res_40491;
                bool x_40493 = cond_40490 && cond_t_res_40492;
                float abs_res_40494 = (float) fabs(defunc_0_f_res_40489);
                bool defunc_2_f_res_t_res_40495 = x_40486 < abs_res_40494;
                bool x_40496 = x_40493 && defunc_2_f_res_t_res_40495;
                float defunc_1_f_res_40497;
                
                if (cond_40490) {
                    defunc_1_f_res_40497 = defunc_0_f_res_40489;
                } else {
                    defunc_1_f_res_40497 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      bool *) red_arr_mem_44877)[sext_i32_i64(local_tid_44873)] =
                        x_40496;
                    ((__local
                      int32_t *) red_arr_mem_44879)[sext_i32_i64(local_tid_44873)] =
                        index_primexp_40614;
                    ((__local
                      float *) red_arr_mem_44881)[sext_i32_i64(local_tid_44873)] =
                        defunc_1_f_res_40497;
                }
            } else {
                ((__local
                  bool *) red_arr_mem_44877)[sext_i32_i64(local_tid_44873)] = 0;
                ((__local
                  int32_t *) red_arr_mem_44879)[sext_i32_i64(local_tid_44873)] =
                    -1;
                ((__local
                  float *) red_arr_mem_44881)[sext_i32_i64(local_tid_44873)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, iota32_arg_29077)) {
            // perform segmented scan to imitate reduction
            {
                bool x_40466;
                int32_t x_40467;
                float x_40468;
                bool x_40469;
                int32_t x_40470;
                float x_40471;
                bool x_44886;
                int32_t x_44887;
                float x_44888;
                bool x_44889;
                int32_t x_44890;
                float x_44891;
                bool ltid_in_bounds_44900;
                
                ltid_in_bounds_44900 = slt64(sext_i32_i64(local_tid_44873),
                                             iota32_arg_29077 *
                                             squot64(segred_group_sizze_40460,
                                                     segment_sizze_nonzzero_44870));
                
                int32_t skip_threads_44901;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44900) {
                        x_40469 = ((volatile __local
                                    bool *) red_arr_mem_44877)[sext_i32_i64(local_tid_44873)];
                        x_40470 = ((volatile __local
                                    int32_t *) red_arr_mem_44879)[sext_i32_i64(local_tid_44873)];
                        x_40471 = ((volatile __local
                                    float *) red_arr_mem_44881)[sext_i32_i64(local_tid_44873)];
                        if ((local_tid_44873 - squot32(local_tid_44873, 32) *
                             32) == 0) {
                            x_40466 = x_40469;
                            x_40467 = x_40470;
                            x_40468 = x_40471;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44901 = 1;
                    while (slt32(skip_threads_44901, 32)) {
                        if (sle32(skip_threads_44901, local_tid_44873 -
                                  squot32(local_tid_44873, 32) * 32) &&
                            ltid_in_bounds_44900) {
                            // read operands
                            {
                                x_40466 = ((volatile __local
                                            bool *) red_arr_mem_44877)[sext_i32_i64(local_tid_44873) -
                                                                       sext_i32_i64(skip_threads_44901)];
                                x_40467 = ((volatile __local
                                            int32_t *) red_arr_mem_44879)[sext_i32_i64(local_tid_44873) -
                                                                          sext_i32_i64(skip_threads_44901)];
                                x_40468 = ((volatile __local
                                            float *) red_arr_mem_44881)[sext_i32_i64(local_tid_44873) -
                                                                        sext_i32_i64(skip_threads_44901)];
                            }
                            // perform operation
                            {
                                bool inactive_44902 =
                                     slt64(srem64(sext_i32_i64(local_tid_44873),
                                                  iota32_arg_29077),
                                           sext_i32_i64(local_tid_44873) -
                                           sext_i32_i64(local_tid_44873 -
                                           skip_threads_44901));
                                
                                if (inactive_44902) {
                                    x_40466 = x_40469;
                                    x_40467 = x_40470;
                                    x_40468 = x_40471;
                                }
                                if (!inactive_44902) {
                                    bool defunc_1_op_res_40472;
                                    int32_t defunc_1_op_res_40473;
                                    
                                    if (x_40466) {
                                        defunc_1_op_res_40472 = x_40466;
                                        defunc_1_op_res_40473 = x_40467;
                                    } else {
                                        bool x_40474 = x_40469 && x_40469;
                                        bool x_40475 = !x_40469;
                                        bool y_40476 = x_40466 && x_40475;
                                        bool defunc_1_op_res_f_res_40477 =
                                             x_40474 || y_40476;
                                        int32_t defunc_1_op_res_f_res_40478;
                                        
                                        if (x_40469) {
                                            defunc_1_op_res_f_res_40478 =
                                                x_40470;
                                        } else {
                                            defunc_1_op_res_f_res_40478 =
                                                x_40467;
                                        }
                                        defunc_1_op_res_40472 =
                                            defunc_1_op_res_f_res_40477;
                                        defunc_1_op_res_40473 =
                                            defunc_1_op_res_f_res_40478;
                                    }
                                    
                                    float defunc_1_op_res_40479 = x_40468 +
                                          x_40471;
                                    
                                    x_40466 = defunc_1_op_res_40472;
                                    x_40467 = defunc_1_op_res_40473;
                                    x_40468 = defunc_1_op_res_40479;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44875, skip_threads_44901)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44901, local_tid_44873 -
                                  squot32(local_tid_44873, 32) * 32) &&
                            ltid_in_bounds_44900) {
                            // write result
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_44877)[sext_i32_i64(local_tid_44873)] =
                                    x_40466;
                                x_40469 = x_40466;
                                ((volatile __local
                                  int32_t *) red_arr_mem_44879)[sext_i32_i64(local_tid_44873)] =
                                    x_40467;
                                x_40470 = x_40467;
                                ((volatile __local
                                  float *) red_arr_mem_44881)[sext_i32_i64(local_tid_44873)] =
                                    x_40468;
                                x_40471 = x_40468;
                            }
                        }
                        if (sle32(wave_sizze_44875, skip_threads_44901)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44901 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44873 - squot32(local_tid_44873, 32) * 32) ==
                        31 && ltid_in_bounds_44900) {
                        ((volatile __local
                          bool *) red_arr_mem_44877)[sext_i32_i64(squot32(local_tid_44873,
                                                                          32))] =
                            x_40466;
                        ((volatile __local
                          int32_t *) red_arr_mem_44879)[sext_i32_i64(squot32(local_tid_44873,
                                                                             32))] =
                            x_40467;
                        ((volatile __local
                          float *) red_arr_mem_44881)[sext_i32_i64(squot32(local_tid_44873,
                                                                           32))] =
                            x_40468;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44903;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44873, 32) == 0 &&
                            ltid_in_bounds_44900) {
                            x_44889 = ((volatile __local
                                        bool *) red_arr_mem_44877)[sext_i32_i64(local_tid_44873)];
                            x_44890 = ((volatile __local
                                        int32_t *) red_arr_mem_44879)[sext_i32_i64(local_tid_44873)];
                            x_44891 = ((volatile __local
                                        float *) red_arr_mem_44881)[sext_i32_i64(local_tid_44873)];
                            if ((local_tid_44873 - squot32(local_tid_44873,
                                                           32) * 32) == 0) {
                                x_44886 = x_44889;
                                x_44887 = x_44890;
                                x_44888 = x_44891;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44903 = 1;
                        while (slt32(skip_threads_44903, 32)) {
                            if (sle32(skip_threads_44903, local_tid_44873 -
                                      squot32(local_tid_44873, 32) * 32) &&
                                (squot32(local_tid_44873, 32) == 0 &&
                                 ltid_in_bounds_44900)) {
                                // read operands
                                {
                                    x_44886 = ((volatile __local
                                                bool *) red_arr_mem_44877)[sext_i32_i64(local_tid_44873) -
                                                                           sext_i32_i64(skip_threads_44903)];
                                    x_44887 = ((volatile __local
                                                int32_t *) red_arr_mem_44879)[sext_i32_i64(local_tid_44873) -
                                                                              sext_i32_i64(skip_threads_44903)];
                                    x_44888 = ((volatile __local
                                                float *) red_arr_mem_44881)[sext_i32_i64(local_tid_44873) -
                                                                            sext_i32_i64(skip_threads_44903)];
                                }
                                // perform operation
                                {
                                    bool inactive_44904 =
                                         slt64(srem64(sext_i32_i64(local_tid_44873 *
                                                      32 + 32 - 1),
                                                      iota32_arg_29077),
                                               sext_i32_i64(local_tid_44873 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44873 -
                                                             skip_threads_44903) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44904) {
                                        x_44886 = x_44889;
                                        x_44887 = x_44890;
                                        x_44888 = x_44891;
                                    }
                                    if (!inactive_44904) {
                                        bool defunc_1_op_res_44892;
                                        int32_t defunc_1_op_res_44893;
                                        
                                        if (x_44886) {
                                            defunc_1_op_res_44892 = x_44886;
                                            defunc_1_op_res_44893 = x_44887;
                                        } else {
                                            bool x_44894 = x_44889 && x_44889;
                                            bool x_44895 = !x_44889;
                                            bool y_44896 = x_44886 && x_44895;
                                            bool defunc_1_op_res_f_res_44897 =
                                                 x_44894 || y_44896;
                                            int32_t defunc_1_op_res_f_res_44898;
                                            
                                            if (x_44889) {
                                                defunc_1_op_res_f_res_44898 =
                                                    x_44890;
                                            } else {
                                                defunc_1_op_res_f_res_44898 =
                                                    x_44887;
                                            }
                                            defunc_1_op_res_44892 =
                                                defunc_1_op_res_f_res_44897;
                                            defunc_1_op_res_44893 =
                                                defunc_1_op_res_f_res_44898;
                                        }
                                        
                                        float defunc_1_op_res_44899 = x_44888 +
                                              x_44891;
                                        
                                        x_44886 = defunc_1_op_res_44892;
                                        x_44887 = defunc_1_op_res_44893;
                                        x_44888 = defunc_1_op_res_44899;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44875, skip_threads_44903)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44903, local_tid_44873 -
                                      squot32(local_tid_44873, 32) * 32) &&
                                (squot32(local_tid_44873, 32) == 0 &&
                                 ltid_in_bounds_44900)) {
                                // write result
                                {
                                    ((volatile __local
                                      bool *) red_arr_mem_44877)[sext_i32_i64(local_tid_44873)] =
                                        x_44886;
                                    x_44889 = x_44886;
                                    ((volatile __local
                                      int32_t *) red_arr_mem_44879)[sext_i32_i64(local_tid_44873)] =
                                        x_44887;
                                    x_44890 = x_44887;
                                    ((volatile __local
                                      float *) red_arr_mem_44881)[sext_i32_i64(local_tid_44873)] =
                                        x_44888;
                                    x_44891 = x_44888;
                                }
                            }
                            if (sle32(wave_sizze_44875, skip_threads_44903)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44903 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44873, 32) == 0 ||
                          !ltid_in_bounds_44900)) {
                        // read operands
                        {
                            x_40469 = x_40466;
                            x_40470 = x_40467;
                            x_40471 = x_40468;
                            x_40466 = ((__local
                                        bool *) red_arr_mem_44877)[sext_i32_i64(squot32(local_tid_44873,
                                                                                        32)) -
                                                                   (int64_t) 1];
                            x_40467 = ((__local
                                        int32_t *) red_arr_mem_44879)[sext_i32_i64(squot32(local_tid_44873,
                                                                                           32)) -
                                                                      (int64_t) 1];
                            x_40468 = ((__local
                                        float *) red_arr_mem_44881)[sext_i32_i64(squot32(local_tid_44873,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44905 =
                                 slt64(srem64(sext_i32_i64(local_tid_44873),
                                              iota32_arg_29077),
                                       sext_i32_i64(local_tid_44873) -
                                       sext_i32_i64(squot32(local_tid_44873,
                                                            32) * 32 - 1));
                            
                            if (inactive_44905) {
                                x_40466 = x_40469;
                                x_40467 = x_40470;
                                x_40468 = x_40471;
                            }
                            if (!inactive_44905) {
                                bool defunc_1_op_res_40472;
                                int32_t defunc_1_op_res_40473;
                                
                                if (x_40466) {
                                    defunc_1_op_res_40472 = x_40466;
                                    defunc_1_op_res_40473 = x_40467;
                                } else {
                                    bool x_40474 = x_40469 && x_40469;
                                    bool x_40475 = !x_40469;
                                    bool y_40476 = x_40466 && x_40475;
                                    bool defunc_1_op_res_f_res_40477 =
                                         x_40474 || y_40476;
                                    int32_t defunc_1_op_res_f_res_40478;
                                    
                                    if (x_40469) {
                                        defunc_1_op_res_f_res_40478 = x_40470;
                                    } else {
                                        defunc_1_op_res_f_res_40478 = x_40467;
                                    }
                                    defunc_1_op_res_40472 =
                                        defunc_1_op_res_f_res_40477;
                                    defunc_1_op_res_40473 =
                                        defunc_1_op_res_f_res_40478;
                                }
                                
                                float defunc_1_op_res_40479 = x_40468 + x_40471;
                                
                                x_40466 = defunc_1_op_res_40472;
                                x_40467 = defunc_1_op_res_40473;
                                x_40468 = defunc_1_op_res_40479;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              bool *) red_arr_mem_44877)[sext_i32_i64(local_tid_44873)] =
                                x_40466;
                            ((__local
                              int32_t *) red_arr_mem_44879)[sext_i32_i64(local_tid_44873)] =
                                x_40467;
                            ((__local
                              float *) red_arr_mem_44881)[sext_i32_i64(local_tid_44873)] =
                                x_40468;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44873, 32) == 0) {
                        ((__local
                          bool *) red_arr_mem_44877)[sext_i32_i64(local_tid_44873)] =
                            x_40469;
                        ((__local
                          int32_t *) red_arr_mem_44879)[sext_i32_i64(local_tid_44873)] =
                            x_40470;
                        ((__local
                          float *) red_arr_mem_44881)[sext_i32_i64(local_tid_44873)] =
                            x_40471;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44885) *
                      squot64(segred_group_sizze_40460,
                              segment_sizze_nonzzero_44870) +
                      sext_i32_i64(local_tid_44873), m_28682) &&
                slt64(sext_i32_i64(local_tid_44873),
                      squot64(segred_group_sizze_40460,
                              segment_sizze_nonzzero_44870))) {
                ((__global
                  bool *) mem_43483)[sext_i32_i64(virt_group_id_44885) *
                                     squot64(segred_group_sizze_40460,
                                             segment_sizze_nonzzero_44870) +
                                     sext_i32_i64(local_tid_44873)] = ((__local
                                                                        bool *) red_arr_mem_44877)[(sext_i32_i64(local_tid_44873) +
                                                                                                    (int64_t) 1) *
                                                                                                   segment_sizze_nonzzero_44870 -
                                                                                                   (int64_t) 1];
                ((__global
                  int32_t *) mem_43485)[sext_i32_i64(virt_group_id_44885) *
                                        squot64(segred_group_sizze_40460,
                                                segment_sizze_nonzzero_44870) +
                                        sext_i32_i64(local_tid_44873)] =
                    ((__local
                      int32_t *) red_arr_mem_44879)[(sext_i32_i64(local_tid_44873) +
                                                     (int64_t) 1) *
                                                    segment_sizze_nonzzero_44870 -
                                                    (int64_t) 1];
                ((__global
                  float *) mem_43487)[sext_i32_i64(virt_group_id_44885) *
                                      squot64(segred_group_sizze_40460,
                                              segment_sizze_nonzzero_44870) +
                                      sext_i32_i64(local_tid_44873)] = ((__local
                                                                         float *) red_arr_mem_44881)[(sext_i32_i64(local_tid_44873) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_44870 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40460
}
__kernel void mainDetailedzicopy_44039(int64_t m_27392, int64_t i32_res_27540,
                                       int64_t ctx_param_ext_42758,
                                       int64_t ctx_param_ext_42759,
                                       int64_t ctx_param_ext_42761, __global
                                       unsigned char *mem_param_42763, __global
                                       unsigned char *mem_42768)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_44039;
    int32_t copy_ltid_44040;
    int32_t copy_gid_44041;
    
    copy_gtid_44039 = get_global_id(0);
    copy_ltid_44040 = get_local_id(0);
    copy_gid_44041 = get_group_id(0);
    if (slt64(sext_i32_i64(copy_gtid_44039), m_27392 * i32_res_27540)) {
        ((__global float *) mem_42768)[(sext_i32_i64(copy_gtid_44039) -
                                        squot64(sext_i32_i64(copy_gtid_44039),
                                                i32_res_27540) *
                                        i32_res_27540) * m_27392 +
                                       squot64(sext_i32_i64(copy_gtid_44039),
                                               i32_res_27540)] = ((__global
                                                                   float *) mem_param_42763)[ctx_param_ext_42758 +
                                                                                             (squot64(sext_i32_i64(copy_gtid_44039),
                                                                                                      i32_res_27540) *
                                                                                              ctx_param_ext_42759 +
                                                                                              (sext_i32_i64(copy_gtid_44039) -
                                                                                               squot64(sext_i32_i64(copy_gtid_44039),
                                                                                                       i32_res_27540) *
                                                                                               i32_res_27540) *
                                                                                              ctx_param_ext_42761)];
    }
    
  error_0:
    return;
}
__kernel void mainDetailedziscan_stage1_31518(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_44451_backing_aligned_0,
                                              int64_t N_27391, int64_t m_27392,
                                              int32_t num_threads_44445,
                                              __global
                                              unsigned char *images_mem_42559,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_43318,
                                              __global unsigned char *mem_43341,
                                              __global unsigned char *mem_43344)
{
    #define segscan_group_sizze_31535 (mainDetailedzisegscan_group_sizze_31512)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44451_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44451_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44446;
    int32_t local_tid_44447;
    int64_t group_sizze_44450;
    int32_t wave_sizze_44449;
    int32_t group_tid_44448;
    
    global_tid_44446 = get_global_id(0);
    local_tid_44447 = get_local_id(0);
    group_sizze_44450 = get_local_size(0);
    wave_sizze_44449 = LOCKSTEP_WIDTH;
    group_tid_44448 = get_group_id(0);
    
    int32_t phys_tid_31518;
    
    phys_tid_31518 = global_tid_44446;
    
    __local char *scan_arr_mem_44451;
    
    scan_arr_mem_44451 = (__local char *) scan_arr_mem_44451_backing_0;
    
    int64_t x_31540;
    int64_t x_31541;
    
    x_31540 = (int64_t) 0;
    for (int64_t j_44453 = 0; j_44453 < sdiv_up64(m_27392 * N_27391,
                                                  sext_i32_i64(num_threads_44445));
         j_44453++) {
        int64_t chunk_offset_44454 = segscan_group_sizze_31535 * j_44453 +
                sext_i32_i64(group_tid_44448) * (segscan_group_sizze_31535 *
                                                 sdiv_up64(m_27392 * N_27391,
                                                           sext_i32_i64(num_threads_44445)));
        int64_t flat_idx_44455 = chunk_offset_44454 +
                sext_i32_i64(local_tid_44447);
        int64_t gtid_31509 = squot64(flat_idx_44455, N_27391);
        int64_t gtid_31517 = flat_idx_44455 - squot64(flat_idx_44455, N_27391) *
                N_27391;
        
        // threads in bounds read input
        {
            if (slt64(gtid_31509, m_27392) && slt64(gtid_31517, N_27391)) {
                float x_31545 = ((__global
                                  float *) images_mem_42559)[gtid_31509 *
                                                             N_27391 +
                                                             gtid_31517];
                bool isnan_res_31547;
                
                isnan_res_31547 = futrts_isnan32(x_31545);
                
                bool cond_31548 = !isnan_res_31547;
                float defunc_0_f_res_31549;
                
                if (cond_31548) {
                    float x_31546 = ((__global
                                      float *) defunc_3_map_res_mem_43318)[gtid_31509 *
                                                                           N_27391 +
                                                                           gtid_31517];
                    float defunc_0_f_res_t_res_31550 = x_31545 - x_31546;
                    
                    defunc_0_f_res_31549 = defunc_0_f_res_t_res_31550;
                } else {
                    defunc_0_f_res_31549 = NAN;
                }
                
                bool isnan_res_31551;
                
                isnan_res_31551 = futrts_isnan32(defunc_0_f_res_31549);
                
                bool defunc_0_p_res_31552 = !isnan_res_31551;
                int64_t defunc_0_f_res_31553 =
                        btoi_bool_i64(defunc_0_p_res_31552);
                
                // write to-scan values to parameters
                {
                    x_31541 = defunc_0_f_res_31553;
                }
                // write mapped values results to global memory
                {
                    ((__global float *) mem_43344)[gtid_31509 * N_27391 +
                                                   gtid_31517] =
                        defunc_0_f_res_31549;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_31509, m_27392) && slt64(gtid_31517,
                                                          N_27391))) {
                    x_31541 = (int64_t) 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_31542 = add64(x_31540, x_31541);
                
                ((__local
                  int64_t *) scan_arr_mem_44451)[sext_i32_i64(local_tid_44447)] =
                    defunc_1_op_res_31542;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_44456;
            int64_t x_44457;
            int64_t x_44459;
            int64_t x_44460;
            bool ltid_in_bounds_44462;
            
            ltid_in_bounds_44462 = slt64(sext_i32_i64(local_tid_44447),
                                         segscan_group_sizze_31535);
            
            int32_t skip_threads_44463;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_44462) {
                    x_44457 = ((volatile __local
                                int64_t *) scan_arr_mem_44451)[sext_i32_i64(local_tid_44447)];
                    if ((local_tid_44447 - squot32(local_tid_44447, 32) * 32) ==
                        0) {
                        x_44456 = x_44457;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_44463 = 1;
                while (slt32(skip_threads_44463, 32)) {
                    if (sle32(skip_threads_44463, local_tid_44447 -
                              squot32(local_tid_44447, 32) * 32) &&
                        ltid_in_bounds_44462) {
                        // read operands
                        {
                            x_44456 = ((volatile __local
                                        int64_t *) scan_arr_mem_44451)[sext_i32_i64(local_tid_44447) -
                                                                       sext_i32_i64(skip_threads_44463)];
                        }
                        // perform operation
                        {
                            bool inactive_44464 =
                                 slt64(srem64(sext_i32_i64(local_tid_44447) +
                                              chunk_offset_44454, N_27391),
                                       sext_i32_i64(local_tid_44447) +
                                       chunk_offset_44454 -
                                       (sext_i32_i64(local_tid_44447 -
                                        skip_threads_44463) +
                                        chunk_offset_44454));
                            
                            if (inactive_44464) {
                                x_44456 = x_44457;
                            }
                            if (!inactive_44464) {
                                int64_t defunc_1_op_res_44458 = add64(x_44456,
                                                                      x_44457);
                                
                                x_44456 = defunc_1_op_res_44458;
                            }
                        }
                    }
                    if (sle32(wave_sizze_44449, skip_threads_44463)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_44463, local_tid_44447 -
                              squot32(local_tid_44447, 32) * 32) &&
                        ltid_in_bounds_44462) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_44451)[sext_i32_i64(local_tid_44447)] =
                                x_44456;
                            x_44457 = x_44456;
                        }
                    }
                    if (sle32(wave_sizze_44449, skip_threads_44463)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_44463 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_44447 - squot32(local_tid_44447, 32) * 32) ==
                    31 && ltid_in_bounds_44462) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_44451)[sext_i32_i64(squot32(local_tid_44447,
                                                                          32))] =
                        x_44456;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_44465;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_44447, 32) == 0 &&
                        ltid_in_bounds_44462) {
                        x_44460 = ((volatile __local
                                    int64_t *) scan_arr_mem_44451)[sext_i32_i64(local_tid_44447)];
                        if ((local_tid_44447 - squot32(local_tid_44447, 32) *
                             32) == 0) {
                            x_44459 = x_44460;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44465 = 1;
                    while (slt32(skip_threads_44465, 32)) {
                        if (sle32(skip_threads_44465, local_tid_44447 -
                                  squot32(local_tid_44447, 32) * 32) &&
                            (squot32(local_tid_44447, 32) == 0 &&
                             ltid_in_bounds_44462)) {
                            // read operands
                            {
                                x_44459 = ((volatile __local
                                            int64_t *) scan_arr_mem_44451)[sext_i32_i64(local_tid_44447) -
                                                                           sext_i32_i64(skip_threads_44465)];
                            }
                            // perform operation
                            {
                                bool inactive_44466 =
                                     slt64(srem64(sext_i32_i64(local_tid_44447 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_44454, N_27391),
                                           sext_i32_i64(local_tid_44447 * 32 +
                                           32 - 1) + chunk_offset_44454 -
                                           (sext_i32_i64((local_tid_44447 -
                                                          skip_threads_44465) *
                                            32 + 32 - 1) + chunk_offset_44454));
                                
                                if (inactive_44466) {
                                    x_44459 = x_44460;
                                }
                                if (!inactive_44466) {
                                    int64_t defunc_1_op_res_44461 =
                                            add64(x_44459, x_44460);
                                    
                                    x_44459 = defunc_1_op_res_44461;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44449, skip_threads_44465)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44465, local_tid_44447 -
                                  squot32(local_tid_44447, 32) * 32) &&
                            (squot32(local_tid_44447, 32) == 0 &&
                             ltid_in_bounds_44462)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_44451)[sext_i32_i64(local_tid_44447)] =
                                    x_44459;
                                x_44460 = x_44459;
                            }
                        }
                        if (sle32(wave_sizze_44449, skip_threads_44465)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44465 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_44447, 32) == 0 ||
                      !ltid_in_bounds_44462)) {
                    // read operands
                    {
                        x_44457 = x_44456;
                        x_44456 = ((__local
                                    int64_t *) scan_arr_mem_44451)[sext_i32_i64(squot32(local_tid_44447,
                                                                                        32)) -
                                                                   (int64_t) 1];
                    }
                    // perform operation
                    {
                        bool inactive_44467 =
                             slt64(srem64(sext_i32_i64(local_tid_44447) +
                                          chunk_offset_44454, N_27391),
                                   sext_i32_i64(local_tid_44447) +
                                   chunk_offset_44454 -
                                   (sext_i32_i64(squot32(local_tid_44447, 32) *
                                    32 - 1) + chunk_offset_44454));
                        
                        if (inactive_44467) {
                            x_44456 = x_44457;
                        }
                        if (!inactive_44467) {
                            int64_t defunc_1_op_res_44458 = add64(x_44456,
                                                                  x_44457);
                            
                            x_44456 = defunc_1_op_res_44458;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_44451)[sext_i32_i64(local_tid_44447)] =
                            x_44456;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_44447, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_44451)[sext_i32_i64(local_tid_44447)] =
                        x_44457;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_31509, m_27392) && slt64(gtid_31517, N_27391)) {
                    ((__global int64_t *) mem_43341)[gtid_31509 * N_27391 +
                                                     gtid_31517] = ((__local
                                                                     int64_t *) scan_arr_mem_44451)[sext_i32_i64(local_tid_44447)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_44468 = slt64(srem64(chunk_offset_44454 +
                                                          segscan_group_sizze_31535,
                                                          N_27391),
                                                   chunk_offset_44454 +
                                                   segscan_group_sizze_31535 -
                                                   (chunk_offset_44454 +
                                                    segscan_group_sizze_31535 -
                                                    (int64_t) 1));
                bool should_load_carry_44469 = local_tid_44447 == 0 &&
                     !crosses_segment_44468;
                
                if (should_load_carry_44469) {
                    x_31540 = ((__local
                                int64_t *) scan_arr_mem_44451)[segscan_group_sizze_31535 -
                                                               (int64_t) 1];
                }
                if (!should_load_carry_44469) {
                    x_31540 = (int64_t) 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_31535
}
__kernel void mainDetailedziscan_stage1_33103(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_44875_backing_aligned_0,
                                              int64_t N_27391, int64_t m_27392,
                                              int64_t iota32_arg_27815,
                                              int32_t num_threads_44869,
                                              __global
                                              unsigned char *defunc_4_map_res_mem_43356,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_43422,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_43423,
                                              __global
                                              unsigned char *defunc_0_f_res_mem_43457,
                                              __global unsigned char *mem_43577,
                                              __global unsigned char *mem_43581)
{
    #define segscan_group_sizze_33143 (mainDetailedzisegscan_group_sizze_33097)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44875_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44875_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44870;
    int32_t local_tid_44871;
    int64_t group_sizze_44874;
    int32_t wave_sizze_44873;
    int32_t group_tid_44872;
    
    global_tid_44870 = get_global_id(0);
    local_tid_44871 = get_local_id(0);
    group_sizze_44874 = get_local_size(0);
    wave_sizze_44873 = LOCKSTEP_WIDTH;
    group_tid_44872 = get_group_id(0);
    
    int32_t phys_tid_33103;
    
    phys_tid_33103 = global_tid_44870;
    
    __local char *scan_arr_mem_44875;
    
    scan_arr_mem_44875 = (__local char *) scan_arr_mem_44875_backing_0;
    
    float x_33147;
    float x_33148;
    
    x_33147 = 0.0F;
    for (int64_t j_44877 = 0; j_44877 < sdiv_up64(m_27392 * iota32_arg_27815,
                                                  sext_i32_i64(num_threads_44869));
         j_44877++) {
        int64_t chunk_offset_44878 = segscan_group_sizze_33143 * j_44877 +
                sext_i32_i64(group_tid_44872) * (segscan_group_sizze_33143 *
                                                 sdiv_up64(m_27392 *
                                                           iota32_arg_27815,
                                                           sext_i32_i64(num_threads_44869)));
        int64_t flat_idx_44879 = chunk_offset_44878 +
                sext_i32_i64(local_tid_44871);
        int64_t gtid_33094 = squot64(flat_idx_44879, iota32_arg_27815);
        int64_t gtid_33102 = flat_idx_44879 - squot64(flat_idx_44879,
                                                      iota32_arg_27815) *
                iota32_arg_27815;
        
        // threads in bounds read input
        {
            if (slt64(gtid_33094, m_27392) && slt64(gtid_33102,
                                                    iota32_arg_27815)) {
                int32_t y_33154 = ((__global int32_t *) mem_43577)[gtid_33094];
                int32_t index_primexp_40621 = sext_i64_i32(gtid_33102);
                bool cond_33156 = sle32(y_33154, index_primexp_40621);
                float defunc_0_f_res_33157;
                
                if (cond_33156) {
                    defunc_0_f_res_33157 = 0.0F;
                } else {
                    int32_t x_33150 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43423)[gtid_33094];
                    int32_t x_33151 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43422)[gtid_33094];
                    float x_33152 = ((__global
                                      float *) defunc_0_f_res_mem_43457)[gtid_33094];
                    bool cond_33158 = index_primexp_40621 == 0;
                    float defunc_0_f_res_f_res_33159;
                    
                    if (cond_33158) {
                        defunc_0_f_res_f_res_33159 = x_33152;
                    } else {
                        int32_t i_33160 = add32(x_33150, index_primexp_40621);
                        int64_t i_33161 = sext_i32_i64(i_33160);
                        float x_33162 = ((__global
                                          float *) defunc_4_map_res_mem_43356)[gtid_33094 *
                                                                               N_27391 +
                                                                               i_33161];
                        int32_t x_33163 = sub32(x_33150, x_33151);
                        int32_t i_33164 = add32(x_33163, index_primexp_40621);
                        int64_t i_33165 = sext_i32_i64(i_33164);
                        float y_33166 = ((__global
                                          float *) defunc_4_map_res_mem_43356)[gtid_33094 *
                                                                               N_27391 +
                                                                               i_33165];
                        float defunc_0_f_res_f_res_f_res_33167 = x_33162 -
                              y_33166;
                        
                        defunc_0_f_res_f_res_33159 =
                            defunc_0_f_res_f_res_f_res_33167;
                    }
                    defunc_0_f_res_33157 = defunc_0_f_res_f_res_33159;
                }
                // write to-scan values to parameters
                {
                    x_33148 = defunc_0_f_res_33157;
                }
                // write mapped values results to global memory
                { }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_33094, m_27392) && slt64(gtid_33102,
                                                          iota32_arg_27815))) {
                    x_33148 = 0.0F;
                }
            }
            // combine with carry and write to local memory
            {
                float defunc_1_op_res_33149 = x_33147 + x_33148;
                
                ((__local
                  float *) scan_arr_mem_44875)[sext_i32_i64(local_tid_44871)] =
                    defunc_1_op_res_33149;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float x_44880;
            float x_44881;
            float x_44883;
            float x_44884;
            bool ltid_in_bounds_44886;
            
            ltid_in_bounds_44886 = slt64(sext_i32_i64(local_tid_44871),
                                         segscan_group_sizze_33143);
            
            int32_t skip_threads_44887;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_44886) {
                    x_44881 = ((volatile __local
                                float *) scan_arr_mem_44875)[sext_i32_i64(local_tid_44871)];
                    if ((local_tid_44871 - squot32(local_tid_44871, 32) * 32) ==
                        0) {
                        x_44880 = x_44881;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_44887 = 1;
                while (slt32(skip_threads_44887, 32)) {
                    if (sle32(skip_threads_44887, local_tid_44871 -
                              squot32(local_tid_44871, 32) * 32) &&
                        ltid_in_bounds_44886) {
                        // read operands
                        {
                            x_44880 = ((volatile __local
                                        float *) scan_arr_mem_44875)[sext_i32_i64(local_tid_44871) -
                                                                     sext_i32_i64(skip_threads_44887)];
                        }
                        // perform operation
                        {
                            bool inactive_44888 =
                                 slt64(srem64(sext_i32_i64(local_tid_44871) +
                                              chunk_offset_44878,
                                              iota32_arg_27815),
                                       sext_i32_i64(local_tid_44871) +
                                       chunk_offset_44878 -
                                       (sext_i32_i64(local_tid_44871 -
                                        skip_threads_44887) +
                                        chunk_offset_44878));
                            
                            if (inactive_44888) {
                                x_44880 = x_44881;
                            }
                            if (!inactive_44888) {
                                float defunc_1_op_res_44882 = x_44880 + x_44881;
                                
                                x_44880 = defunc_1_op_res_44882;
                            }
                        }
                    }
                    if (sle32(wave_sizze_44873, skip_threads_44887)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_44887, local_tid_44871 -
                              squot32(local_tid_44871, 32) * 32) &&
                        ltid_in_bounds_44886) {
                        // write result
                        {
                            ((volatile __local
                              float *) scan_arr_mem_44875)[sext_i32_i64(local_tid_44871)] =
                                x_44880;
                            x_44881 = x_44880;
                        }
                    }
                    if (sle32(wave_sizze_44873, skip_threads_44887)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_44887 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_44871 - squot32(local_tid_44871, 32) * 32) ==
                    31 && ltid_in_bounds_44886) {
                    ((volatile __local
                      float *) scan_arr_mem_44875)[sext_i32_i64(squot32(local_tid_44871,
                                                                        32))] =
                        x_44880;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_44889;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_44871, 32) == 0 &&
                        ltid_in_bounds_44886) {
                        x_44884 = ((volatile __local
                                    float *) scan_arr_mem_44875)[sext_i32_i64(local_tid_44871)];
                        if ((local_tid_44871 - squot32(local_tid_44871, 32) *
                             32) == 0) {
                            x_44883 = x_44884;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44889 = 1;
                    while (slt32(skip_threads_44889, 32)) {
                        if (sle32(skip_threads_44889, local_tid_44871 -
                                  squot32(local_tid_44871, 32) * 32) &&
                            (squot32(local_tid_44871, 32) == 0 &&
                             ltid_in_bounds_44886)) {
                            // read operands
                            {
                                x_44883 = ((volatile __local
                                            float *) scan_arr_mem_44875)[sext_i32_i64(local_tid_44871) -
                                                                         sext_i32_i64(skip_threads_44889)];
                            }
                            // perform operation
                            {
                                bool inactive_44890 =
                                     slt64(srem64(sext_i32_i64(local_tid_44871 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_44878,
                                                  iota32_arg_27815),
                                           sext_i32_i64(local_tid_44871 * 32 +
                                           32 - 1) + chunk_offset_44878 -
                                           (sext_i32_i64((local_tid_44871 -
                                                          skip_threads_44889) *
                                            32 + 32 - 1) + chunk_offset_44878));
                                
                                if (inactive_44890) {
                                    x_44883 = x_44884;
                                }
                                if (!inactive_44890) {
                                    float defunc_1_op_res_44885 = x_44883 +
                                          x_44884;
                                    
                                    x_44883 = defunc_1_op_res_44885;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44873, skip_threads_44889)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44889, local_tid_44871 -
                                  squot32(local_tid_44871, 32) * 32) &&
                            (squot32(local_tid_44871, 32) == 0 &&
                             ltid_in_bounds_44886)) {
                            // write result
                            {
                                ((volatile __local
                                  float *) scan_arr_mem_44875)[sext_i32_i64(local_tid_44871)] =
                                    x_44883;
                                x_44884 = x_44883;
                            }
                        }
                        if (sle32(wave_sizze_44873, skip_threads_44889)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44889 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_44871, 32) == 0 ||
                      !ltid_in_bounds_44886)) {
                    // read operands
                    {
                        x_44881 = x_44880;
                        x_44880 = ((__local
                                    float *) scan_arr_mem_44875)[sext_i32_i64(squot32(local_tid_44871,
                                                                                      32)) -
                                                                 (int64_t) 1];
                    }
                    // perform operation
                    {
                        bool inactive_44891 =
                             slt64(srem64(sext_i32_i64(local_tid_44871) +
                                          chunk_offset_44878, iota32_arg_27815),
                                   sext_i32_i64(local_tid_44871) +
                                   chunk_offset_44878 -
                                   (sext_i32_i64(squot32(local_tid_44871, 32) *
                                    32 - 1) + chunk_offset_44878));
                        
                        if (inactive_44891) {
                            x_44880 = x_44881;
                        }
                        if (!inactive_44891) {
                            float defunc_1_op_res_44882 = x_44880 + x_44881;
                            
                            x_44880 = defunc_1_op_res_44882;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          float *) scan_arr_mem_44875)[sext_i32_i64(local_tid_44871)] =
                            x_44880;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_44871, 32) == 0) {
                    ((__local
                      float *) scan_arr_mem_44875)[sext_i32_i64(local_tid_44871)] =
                        x_44881;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_33094, m_27392) && slt64(gtid_33102,
                                                        iota32_arg_27815)) {
                    ((__global float *) mem_43581)[gtid_33094 *
                                                   iota32_arg_27815 +
                                                   gtid_33102] = ((__local
                                                                   float *) scan_arr_mem_44875)[sext_i32_i64(local_tid_44871)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_44892 = slt64(srem64(chunk_offset_44878 +
                                                          segscan_group_sizze_33143,
                                                          iota32_arg_27815),
                                                   chunk_offset_44878 +
                                                   segscan_group_sizze_33143 -
                                                   (chunk_offset_44878 +
                                                    segscan_group_sizze_33143 -
                                                    (int64_t) 1));
                bool should_load_carry_44893 = local_tid_44871 == 0 &&
                     !crosses_segment_44892;
                
                if (should_load_carry_44893) {
                    x_33147 = ((__local
                                float *) scan_arr_mem_44875)[segscan_group_sizze_33143 -
                                                             (int64_t) 1];
                }
                if (!should_load_carry_44893) {
                    x_33147 = 0.0F;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_33143
}
__kernel void mainDetailedziscan_stage2_31518(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_44475_backing_aligned_0,
                                              int64_t N_27391, int64_t m_27392,
                                              int64_t stage1_num_groups_44444,
                                              int32_t num_threads_44445,
                                              __global unsigned char *mem_43341)
{
    #define segscan_group_sizze_31535 (mainDetailedzisegscan_group_sizze_31512)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44475_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44475_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44470;
    int32_t local_tid_44471;
    int64_t group_sizze_44474;
    int32_t wave_sizze_44473;
    int32_t group_tid_44472;
    
    global_tid_44470 = get_global_id(0);
    local_tid_44471 = get_local_id(0);
    group_sizze_44474 = get_local_size(0);
    wave_sizze_44473 = LOCKSTEP_WIDTH;
    group_tid_44472 = get_group_id(0);
    
    int32_t phys_tid_31518;
    
    phys_tid_31518 = global_tid_44470;
    
    __local char *scan_arr_mem_44475;
    
    scan_arr_mem_44475 = (__local char *) scan_arr_mem_44475_backing_0;
    
    int64_t flat_idx_44477;
    
    flat_idx_44477 = (sext_i32_i64(local_tid_44471) + (int64_t) 1) *
        (segscan_group_sizze_31535 * sdiv_up64(m_27392 * N_27391,
                                               sext_i32_i64(num_threads_44445))) -
        (int64_t) 1;
    
    int64_t gtid_31509;
    
    gtid_31509 = squot64(flat_idx_44477, N_27391);
    
    int64_t gtid_31517;
    
    gtid_31517 = flat_idx_44477 - squot64(flat_idx_44477, N_27391) * N_27391;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_31509, m_27392) && slt64(gtid_31517, N_27391)) {
            ((__local
              int64_t *) scan_arr_mem_44475)[sext_i32_i64(local_tid_44471)] =
                ((__global int64_t *) mem_43341)[gtid_31509 * N_27391 +
                                                 gtid_31517];
        } else {
            ((__local
              int64_t *) scan_arr_mem_44475)[sext_i32_i64(local_tid_44471)] =
                (int64_t) 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_31540;
    int64_t x_31541;
    int64_t x_44478;
    int64_t x_44479;
    bool ltid_in_bounds_44481;
    
    ltid_in_bounds_44481 = slt64(sext_i32_i64(local_tid_44471),
                                 stage1_num_groups_44444);
    
    int32_t skip_threads_44482;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44481) {
            x_31541 = ((volatile __local
                        int64_t *) scan_arr_mem_44475)[sext_i32_i64(local_tid_44471)];
            if ((local_tid_44471 - squot32(local_tid_44471, 32) * 32) == 0) {
                x_31540 = x_31541;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44482 = 1;
        while (slt32(skip_threads_44482, 32)) {
            if (sle32(skip_threads_44482, local_tid_44471 -
                      squot32(local_tid_44471, 32) * 32) &&
                ltid_in_bounds_44481) {
                // read operands
                {
                    x_31540 = ((volatile __local
                                int64_t *) scan_arr_mem_44475)[sext_i32_i64(local_tid_44471) -
                                                               sext_i32_i64(skip_threads_44482)];
                }
                // perform operation
                {
                    bool inactive_44483 =
                         slt64(srem64((sext_i32_i64(local_tid_44471) +
                                       (int64_t) 1) *
                                      (segscan_group_sizze_31535 *
                                       sdiv_up64(m_27392 * N_27391,
                                                 sext_i32_i64(num_threads_44445))) -
                                      (int64_t) 1, N_27391),
                               (sext_i32_i64(local_tid_44471) + (int64_t) 1) *
                               (segscan_group_sizze_31535 * sdiv_up64(m_27392 *
                                                                      N_27391,
                                                                      sext_i32_i64(num_threads_44445))) -
                               (int64_t) 1 - ((sext_i32_i64(local_tid_44471 -
                                               skip_threads_44482) +
                                               (int64_t) 1) *
                                              (segscan_group_sizze_31535 *
                                               sdiv_up64(m_27392 * N_27391,
                                                         sext_i32_i64(num_threads_44445))) -
                                              (int64_t) 1));
                    
                    if (inactive_44483) {
                        x_31540 = x_31541;
                    }
                    if (!inactive_44483) {
                        int64_t defunc_1_op_res_31542 = add64(x_31540, x_31541);
                        
                        x_31540 = defunc_1_op_res_31542;
                    }
                }
            }
            if (sle32(wave_sizze_44473, skip_threads_44482)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44482, local_tid_44471 -
                      squot32(local_tid_44471, 32) * 32) &&
                ltid_in_bounds_44481) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_44475)[sext_i32_i64(local_tid_44471)] =
                        x_31540;
                    x_31541 = x_31540;
                }
            }
            if (sle32(wave_sizze_44473, skip_threads_44482)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44482 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44471 - squot32(local_tid_44471, 32) * 32) == 31 &&
            ltid_in_bounds_44481) {
            ((volatile __local
              int64_t *) scan_arr_mem_44475)[sext_i32_i64(squot32(local_tid_44471,
                                                                  32))] =
                x_31540;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44484;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44471, 32) == 0 && ltid_in_bounds_44481) {
                x_44479 = ((volatile __local
                            int64_t *) scan_arr_mem_44475)[sext_i32_i64(local_tid_44471)];
                if ((local_tid_44471 - squot32(local_tid_44471, 32) * 32) ==
                    0) {
                    x_44478 = x_44479;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44484 = 1;
            while (slt32(skip_threads_44484, 32)) {
                if (sle32(skip_threads_44484, local_tid_44471 -
                          squot32(local_tid_44471, 32) * 32) &&
                    (squot32(local_tid_44471, 32) == 0 &&
                     ltid_in_bounds_44481)) {
                    // read operands
                    {
                        x_44478 = ((volatile __local
                                    int64_t *) scan_arr_mem_44475)[sext_i32_i64(local_tid_44471) -
                                                                   sext_i32_i64(skip_threads_44484)];
                    }
                    // perform operation
                    {
                        bool inactive_44485 =
                             slt64(srem64((sext_i32_i64(local_tid_44471 * 32 +
                                           32 - 1) + (int64_t) 1) *
                                          (segscan_group_sizze_31535 *
                                           sdiv_up64(m_27392 * N_27391,
                                                     sext_i32_i64(num_threads_44445))) -
                                          (int64_t) 1, N_27391),
                                   (sext_i32_i64(local_tid_44471 * 32 + 32 -
                                    1) + (int64_t) 1) *
                                   (segscan_group_sizze_31535 *
                                    sdiv_up64(m_27392 * N_27391,
                                              sext_i32_i64(num_threads_44445))) -
                                   (int64_t) 1 -
                                   ((sext_i32_i64((local_tid_44471 -
                                                   skip_threads_44484) * 32 +
                                     32 - 1) + (int64_t) 1) *
                                    (segscan_group_sizze_31535 *
                                     sdiv_up64(m_27392 * N_27391,
                                               sext_i32_i64(num_threads_44445))) -
                                    (int64_t) 1));
                        
                        if (inactive_44485) {
                            x_44478 = x_44479;
                        }
                        if (!inactive_44485) {
                            int64_t defunc_1_op_res_44480 = add64(x_44478,
                                                                  x_44479);
                            
                            x_44478 = defunc_1_op_res_44480;
                        }
                    }
                }
                if (sle32(wave_sizze_44473, skip_threads_44484)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44484, local_tid_44471 -
                          squot32(local_tid_44471, 32) * 32) &&
                    (squot32(local_tid_44471, 32) == 0 &&
                     ltid_in_bounds_44481)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_44475)[sext_i32_i64(local_tid_44471)] =
                            x_44478;
                        x_44479 = x_44478;
                    }
                }
                if (sle32(wave_sizze_44473, skip_threads_44484)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44484 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44471, 32) == 0 || !ltid_in_bounds_44481)) {
            // read operands
            {
                x_31541 = x_31540;
                x_31540 = ((__local
                            int64_t *) scan_arr_mem_44475)[sext_i32_i64(squot32(local_tid_44471,
                                                                                32)) -
                                                           (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44486 =
                     slt64(srem64((sext_i32_i64(local_tid_44471) +
                                   (int64_t) 1) * (segscan_group_sizze_31535 *
                                                   sdiv_up64(m_27392 * N_27391,
                                                             sext_i32_i64(num_threads_44445))) -
                                  (int64_t) 1, N_27391),
                           (sext_i32_i64(local_tid_44471) + (int64_t) 1) *
                           (segscan_group_sizze_31535 * sdiv_up64(m_27392 *
                                                                  N_27391,
                                                                  sext_i32_i64(num_threads_44445))) -
                           (int64_t) 1 - ((sext_i32_i64(squot32(local_tid_44471,
                                                                32) * 32 - 1) +
                                           (int64_t) 1) *
                                          (segscan_group_sizze_31535 *
                                           sdiv_up64(m_27392 * N_27391,
                                                     sext_i32_i64(num_threads_44445))) -
                                          (int64_t) 1));
                
                if (inactive_44486) {
                    x_31540 = x_31541;
                }
                if (!inactive_44486) {
                    int64_t defunc_1_op_res_31542 = add64(x_31540, x_31541);
                    
                    x_31540 = defunc_1_op_res_31542;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_44475)[sext_i32_i64(local_tid_44471)] =
                    x_31540;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44471, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_44475)[sext_i32_i64(local_tid_44471)] =
                x_31541;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_31509, m_27392) && slt64(gtid_31517, N_27391)) {
            ((__global int64_t *) mem_43341)[gtid_31509 * N_27391 +
                                             gtid_31517] = ((__local
                                                             int64_t *) scan_arr_mem_44475)[sext_i32_i64(local_tid_44471)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_31535
}
__kernel void mainDetailedziscan_stage2_33103(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_44899_backing_aligned_0,
                                              int64_t m_27392,
                                              int64_t iota32_arg_27815,
                                              int64_t stage1_num_groups_44868,
                                              int32_t num_threads_44869,
                                              __global unsigned char *mem_43581)
{
    #define segscan_group_sizze_33143 (mainDetailedzisegscan_group_sizze_33097)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44899_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44899_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44894;
    int32_t local_tid_44895;
    int64_t group_sizze_44898;
    int32_t wave_sizze_44897;
    int32_t group_tid_44896;
    
    global_tid_44894 = get_global_id(0);
    local_tid_44895 = get_local_id(0);
    group_sizze_44898 = get_local_size(0);
    wave_sizze_44897 = LOCKSTEP_WIDTH;
    group_tid_44896 = get_group_id(0);
    
    int32_t phys_tid_33103;
    
    phys_tid_33103 = global_tid_44894;
    
    __local char *scan_arr_mem_44899;
    
    scan_arr_mem_44899 = (__local char *) scan_arr_mem_44899_backing_0;
    
    int64_t flat_idx_44901;
    
    flat_idx_44901 = (sext_i32_i64(local_tid_44895) + (int64_t) 1) *
        (segscan_group_sizze_33143 * sdiv_up64(m_27392 * iota32_arg_27815,
                                               sext_i32_i64(num_threads_44869))) -
        (int64_t) 1;
    
    int64_t gtid_33094;
    
    gtid_33094 = squot64(flat_idx_44901, iota32_arg_27815);
    
    int64_t gtid_33102;
    
    gtid_33102 = flat_idx_44901 - squot64(flat_idx_44901, iota32_arg_27815) *
        iota32_arg_27815;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_33094, m_27392) && slt64(gtid_33102, iota32_arg_27815)) {
            ((__local
              float *) scan_arr_mem_44899)[sext_i32_i64(local_tid_44895)] =
                ((__global float *) mem_43581)[gtid_33094 * iota32_arg_27815 +
                                               gtid_33102];
        } else {
            ((__local
              float *) scan_arr_mem_44899)[sext_i32_i64(local_tid_44895)] =
                0.0F;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float x_33147;
    float x_33148;
    float x_44902;
    float x_44903;
    bool ltid_in_bounds_44905;
    
    ltid_in_bounds_44905 = slt64(sext_i32_i64(local_tid_44895),
                                 stage1_num_groups_44868);
    
    int32_t skip_threads_44906;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44905) {
            x_33148 = ((volatile __local
                        float *) scan_arr_mem_44899)[sext_i32_i64(local_tid_44895)];
            if ((local_tid_44895 - squot32(local_tid_44895, 32) * 32) == 0) {
                x_33147 = x_33148;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44906 = 1;
        while (slt32(skip_threads_44906, 32)) {
            if (sle32(skip_threads_44906, local_tid_44895 -
                      squot32(local_tid_44895, 32) * 32) &&
                ltid_in_bounds_44905) {
                // read operands
                {
                    x_33147 = ((volatile __local
                                float *) scan_arr_mem_44899)[sext_i32_i64(local_tid_44895) -
                                                             sext_i32_i64(skip_threads_44906)];
                }
                // perform operation
                {
                    bool inactive_44907 =
                         slt64(srem64((sext_i32_i64(local_tid_44895) +
                                       (int64_t) 1) *
                                      (segscan_group_sizze_33143 *
                                       sdiv_up64(m_27392 * iota32_arg_27815,
                                                 sext_i32_i64(num_threads_44869))) -
                                      (int64_t) 1, iota32_arg_27815),
                               (sext_i32_i64(local_tid_44895) + (int64_t) 1) *
                               (segscan_group_sizze_33143 * sdiv_up64(m_27392 *
                                                                      iota32_arg_27815,
                                                                      sext_i32_i64(num_threads_44869))) -
                               (int64_t) 1 - ((sext_i32_i64(local_tid_44895 -
                                               skip_threads_44906) +
                                               (int64_t) 1) *
                                              (segscan_group_sizze_33143 *
                                               sdiv_up64(m_27392 *
                                                         iota32_arg_27815,
                                                         sext_i32_i64(num_threads_44869))) -
                                              (int64_t) 1));
                    
                    if (inactive_44907) {
                        x_33147 = x_33148;
                    }
                    if (!inactive_44907) {
                        float defunc_1_op_res_33149 = x_33147 + x_33148;
                        
                        x_33147 = defunc_1_op_res_33149;
                    }
                }
            }
            if (sle32(wave_sizze_44897, skip_threads_44906)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44906, local_tid_44895 -
                      squot32(local_tid_44895, 32) * 32) &&
                ltid_in_bounds_44905) {
                // write result
                {
                    ((volatile __local
                      float *) scan_arr_mem_44899)[sext_i32_i64(local_tid_44895)] =
                        x_33147;
                    x_33148 = x_33147;
                }
            }
            if (sle32(wave_sizze_44897, skip_threads_44906)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44906 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44895 - squot32(local_tid_44895, 32) * 32) == 31 &&
            ltid_in_bounds_44905) {
            ((volatile __local
              float *) scan_arr_mem_44899)[sext_i32_i64(squot32(local_tid_44895,
                                                                32))] = x_33147;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44908;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44895, 32) == 0 && ltid_in_bounds_44905) {
                x_44903 = ((volatile __local
                            float *) scan_arr_mem_44899)[sext_i32_i64(local_tid_44895)];
                if ((local_tid_44895 - squot32(local_tid_44895, 32) * 32) ==
                    0) {
                    x_44902 = x_44903;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44908 = 1;
            while (slt32(skip_threads_44908, 32)) {
                if (sle32(skip_threads_44908, local_tid_44895 -
                          squot32(local_tid_44895, 32) * 32) &&
                    (squot32(local_tid_44895, 32) == 0 &&
                     ltid_in_bounds_44905)) {
                    // read operands
                    {
                        x_44902 = ((volatile __local
                                    float *) scan_arr_mem_44899)[sext_i32_i64(local_tid_44895) -
                                                                 sext_i32_i64(skip_threads_44908)];
                    }
                    // perform operation
                    {
                        bool inactive_44909 =
                             slt64(srem64((sext_i32_i64(local_tid_44895 * 32 +
                                           32 - 1) + (int64_t) 1) *
                                          (segscan_group_sizze_33143 *
                                           sdiv_up64(m_27392 * iota32_arg_27815,
                                                     sext_i32_i64(num_threads_44869))) -
                                          (int64_t) 1, iota32_arg_27815),
                                   (sext_i32_i64(local_tid_44895 * 32 + 32 -
                                    1) + (int64_t) 1) *
                                   (segscan_group_sizze_33143 *
                                    sdiv_up64(m_27392 * iota32_arg_27815,
                                              sext_i32_i64(num_threads_44869))) -
                                   (int64_t) 1 -
                                   ((sext_i32_i64((local_tid_44895 -
                                                   skip_threads_44908) * 32 +
                                     32 - 1) + (int64_t) 1) *
                                    (segscan_group_sizze_33143 *
                                     sdiv_up64(m_27392 * iota32_arg_27815,
                                               sext_i32_i64(num_threads_44869))) -
                                    (int64_t) 1));
                        
                        if (inactive_44909) {
                            x_44902 = x_44903;
                        }
                        if (!inactive_44909) {
                            float defunc_1_op_res_44904 = x_44902 + x_44903;
                            
                            x_44902 = defunc_1_op_res_44904;
                        }
                    }
                }
                if (sle32(wave_sizze_44897, skip_threads_44908)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44908, local_tid_44895 -
                          squot32(local_tid_44895, 32) * 32) &&
                    (squot32(local_tid_44895, 32) == 0 &&
                     ltid_in_bounds_44905)) {
                    // write result
                    {
                        ((volatile __local
                          float *) scan_arr_mem_44899)[sext_i32_i64(local_tid_44895)] =
                            x_44902;
                        x_44903 = x_44902;
                    }
                }
                if (sle32(wave_sizze_44897, skip_threads_44908)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44908 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44895, 32) == 0 || !ltid_in_bounds_44905)) {
            // read operands
            {
                x_33148 = x_33147;
                x_33147 = ((__local
                            float *) scan_arr_mem_44899)[sext_i32_i64(squot32(local_tid_44895,
                                                                              32)) -
                                                         (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44910 =
                     slt64(srem64((sext_i32_i64(local_tid_44895) +
                                   (int64_t) 1) * (segscan_group_sizze_33143 *
                                                   sdiv_up64(m_27392 *
                                                             iota32_arg_27815,
                                                             sext_i32_i64(num_threads_44869))) -
                                  (int64_t) 1, iota32_arg_27815),
                           (sext_i32_i64(local_tid_44895) + (int64_t) 1) *
                           (segscan_group_sizze_33143 * sdiv_up64(m_27392 *
                                                                  iota32_arg_27815,
                                                                  sext_i32_i64(num_threads_44869))) -
                           (int64_t) 1 - ((sext_i32_i64(squot32(local_tid_44895,
                                                                32) * 32 - 1) +
                                           (int64_t) 1) *
                                          (segscan_group_sizze_33143 *
                                           sdiv_up64(m_27392 * iota32_arg_27815,
                                                     sext_i32_i64(num_threads_44869))) -
                                          (int64_t) 1));
                
                if (inactive_44910) {
                    x_33147 = x_33148;
                }
                if (!inactive_44910) {
                    float defunc_1_op_res_33149 = x_33147 + x_33148;
                    
                    x_33147 = defunc_1_op_res_33149;
                }
            }
            // write final result
            {
                ((__local
                  float *) scan_arr_mem_44899)[sext_i32_i64(local_tid_44895)] =
                    x_33147;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44895, 32) == 0) {
            ((__local
              float *) scan_arr_mem_44899)[sext_i32_i64(local_tid_44895)] =
                x_33148;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_33094, m_27392) && slt64(gtid_33102, iota32_arg_27815)) {
            ((__global float *) mem_43581)[gtid_33094 * iota32_arg_27815 +
                                           gtid_33102] = ((__local
                                                           float *) scan_arr_mem_44899)[sext_i32_i64(local_tid_44895)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_33143
}
__kernel void mainDetailedziscan_stage3_31518(__global int *global_failure,
                                              int64_t N_27391, int64_t m_27392,
                                              int64_t num_groups_31536,
                                              int32_t num_threads_44445,
                                              int32_t required_groups_44487,
                                              __global unsigned char *mem_43341)
{
    #define segscan_group_sizze_31535 (mainDetailedzisegscan_group_sizze_31512)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44488;
    int32_t local_tid_44489;
    int64_t group_sizze_44492;
    int32_t wave_sizze_44491;
    int32_t group_tid_44490;
    
    global_tid_44488 = get_global_id(0);
    local_tid_44489 = get_local_id(0);
    group_sizze_44492 = get_local_size(0);
    wave_sizze_44491 = LOCKSTEP_WIDTH;
    group_tid_44490 = get_group_id(0);
    
    int32_t phys_tid_31518;
    
    phys_tid_31518 = global_tid_44488;
    
    int32_t phys_group_id_44493;
    
    phys_group_id_44493 = get_group_id(0);
    for (int32_t i_44494 = 0; i_44494 < sdiv_up32(required_groups_44487 -
                                                  phys_group_id_44493,
                                                  sext_i64_i32(num_groups_31536));
         i_44494++) {
        int32_t virt_group_id_44495 = phys_group_id_44493 + i_44494 *
                sext_i64_i32(num_groups_31536);
        int64_t flat_idx_44496 = sext_i32_i64(virt_group_id_44495) *
                segscan_group_sizze_31535 + sext_i32_i64(local_tid_44489);
        int64_t gtid_31509 = squot64(flat_idx_44496, N_27391);
        int64_t gtid_31517 = flat_idx_44496 - squot64(flat_idx_44496, N_27391) *
                N_27391;
        int64_t orig_group_44497 = squot64(flat_idx_44496,
                                           segscan_group_sizze_31535 *
                                           sdiv_up64(m_27392 * N_27391,
                                                     sext_i32_i64(num_threads_44445)));
        int64_t carry_in_flat_idx_44498 = orig_group_44497 *
                (segscan_group_sizze_31535 * sdiv_up64(m_27392 * N_27391,
                                                       sext_i32_i64(num_threads_44445))) -
                (int64_t) 1;
        
        if (slt64(gtid_31509, m_27392) && slt64(gtid_31517, N_27391)) {
            if (!(orig_group_44497 == (int64_t) 0 || (flat_idx_44496 ==
                                                      (orig_group_44497 +
                                                       (int64_t) 1) *
                                                      (segscan_group_sizze_31535 *
                                                       sdiv_up64(m_27392 *
                                                                 N_27391,
                                                                 sext_i32_i64(num_threads_44445))) -
                                                      (int64_t) 1 ||
                                                      slt64(srem64(flat_idx_44496,
                                                                   N_27391),
                                                            flat_idx_44496 -
                                                            carry_in_flat_idx_44498)))) {
                int64_t x_31540;
                int64_t x_31541;
                
                x_31540 = ((__global
                            int64_t *) mem_43341)[squot64(carry_in_flat_idx_44498,
                                                          N_27391) * N_27391 +
                                                  (carry_in_flat_idx_44498 -
                                                   squot64(carry_in_flat_idx_44498,
                                                           N_27391) * N_27391)];
                x_31541 = ((__global int64_t *) mem_43341)[gtid_31509 *
                                                           N_27391 +
                                                           gtid_31517];
                
                int64_t defunc_1_op_res_31542;
                
                defunc_1_op_res_31542 = add64(x_31540, x_31541);
                x_31540 = defunc_1_op_res_31542;
                ((__global int64_t *) mem_43341)[gtid_31509 * N_27391 +
                                                 gtid_31517] = x_31540;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_31535
}
__kernel void mainDetailedziscan_stage3_33103(__global int *global_failure,
                                              int64_t m_27392,
                                              int64_t iota32_arg_27815,
                                              int64_t num_groups_33144,
                                              int32_t num_threads_44869,
                                              int32_t required_groups_44911,
                                              __global unsigned char *mem_43581)
{
    #define segscan_group_sizze_33143 (mainDetailedzisegscan_group_sizze_33097)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44912;
    int32_t local_tid_44913;
    int64_t group_sizze_44916;
    int32_t wave_sizze_44915;
    int32_t group_tid_44914;
    
    global_tid_44912 = get_global_id(0);
    local_tid_44913 = get_local_id(0);
    group_sizze_44916 = get_local_size(0);
    wave_sizze_44915 = LOCKSTEP_WIDTH;
    group_tid_44914 = get_group_id(0);
    
    int32_t phys_tid_33103;
    
    phys_tid_33103 = global_tid_44912;
    
    int32_t phys_group_id_44917;
    
    phys_group_id_44917 = get_group_id(0);
    for (int32_t i_44918 = 0; i_44918 < sdiv_up32(required_groups_44911 -
                                                  phys_group_id_44917,
                                                  sext_i64_i32(num_groups_33144));
         i_44918++) {
        int32_t virt_group_id_44919 = phys_group_id_44917 + i_44918 *
                sext_i64_i32(num_groups_33144);
        int64_t flat_idx_44920 = sext_i32_i64(virt_group_id_44919) *
                segscan_group_sizze_33143 + sext_i32_i64(local_tid_44913);
        int64_t gtid_33094 = squot64(flat_idx_44920, iota32_arg_27815);
        int64_t gtid_33102 = flat_idx_44920 - squot64(flat_idx_44920,
                                                      iota32_arg_27815) *
                iota32_arg_27815;
        int64_t orig_group_44921 = squot64(flat_idx_44920,
                                           segscan_group_sizze_33143 *
                                           sdiv_up64(m_27392 * iota32_arg_27815,
                                                     sext_i32_i64(num_threads_44869)));
        int64_t carry_in_flat_idx_44922 = orig_group_44921 *
                (segscan_group_sizze_33143 * sdiv_up64(m_27392 *
                                                       iota32_arg_27815,
                                                       sext_i32_i64(num_threads_44869))) -
                (int64_t) 1;
        
        if (slt64(gtid_33094, m_27392) && slt64(gtid_33102, iota32_arg_27815)) {
            if (!(orig_group_44921 == (int64_t) 0 || (flat_idx_44920 ==
                                                      (orig_group_44921 +
                                                       (int64_t) 1) *
                                                      (segscan_group_sizze_33143 *
                                                       sdiv_up64(m_27392 *
                                                                 iota32_arg_27815,
                                                                 sext_i32_i64(num_threads_44869))) -
                                                      (int64_t) 1 ||
                                                      slt64(srem64(flat_idx_44920,
                                                                   iota32_arg_27815),
                                                            flat_idx_44920 -
                                                            carry_in_flat_idx_44922)))) {
                float x_33147;
                float x_33148;
                
                x_33147 = ((__global
                            float *) mem_43581)[squot64(carry_in_flat_idx_44922,
                                                        iota32_arg_27815) *
                                                iota32_arg_27815 +
                                                (carry_in_flat_idx_44922 -
                                                 squot64(carry_in_flat_idx_44922,
                                                         iota32_arg_27815) *
                                                 iota32_arg_27815)];
                x_33148 = ((__global float *) mem_43581)[gtid_33094 *
                                                         iota32_arg_27815 +
                                                         gtid_33102];
                
                float defunc_1_op_res_33149;
                
                defunc_1_op_res_33149 = x_33147 + x_33148;
                x_33147 = defunc_1_op_res_33149;
                ((__global float *) mem_43581)[gtid_33094 * iota32_arg_27815 +
                                               gtid_33102] = x_33147;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_33143
}
__kernel void mainDetailedzisegmap_29441(__global int *global_failure,
                                         int64_t N_27391, float freq_27396,
                                         int64_t i32_res_27407, __global
                                         unsigned char *mappingindices_mem_42558,
                                         __global unsigned char *mem_42563)
{
    #define segmap_group_sizze_29514 (mainDetailedzisegmap_group_sizze_29444)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43869;
    int32_t local_tid_43870;
    int64_t group_sizze_43873;
    int32_t wave_sizze_43872;
    int32_t group_tid_43871;
    
    global_tid_43869 = get_global_id(0);
    local_tid_43870 = get_local_id(0);
    group_sizze_43873 = get_local_size(0);
    wave_sizze_43872 = LOCKSTEP_WIDTH;
    group_tid_43871 = get_group_id(0);
    
    int32_t phys_tid_29441;
    
    phys_tid_29441 = global_tid_43869;
    
    int64_t gtid_29439;
    
    gtid_29439 = squot64(sext_i32_i64(group_tid_43871) *
                         segmap_group_sizze_29514 +
                         sext_i32_i64(local_tid_43870), N_27391);
    
    int64_t gtid_29440;
    
    gtid_29440 = sext_i32_i64(group_tid_43871) * segmap_group_sizze_29514 +
        sext_i32_i64(local_tid_43870) - squot64(sext_i32_i64(group_tid_43871) *
                                                segmap_group_sizze_29514 +
                                                sext_i32_i64(local_tid_43870),
                                                N_27391) * N_27391;
    if (slt64(gtid_29439, i32_res_27407) && slt64(gtid_29440, N_27391)) {
        int32_t index_primexp_40550 = sext_i64_i32(gtid_29439);
        bool index_primexp_40547 = index_primexp_40550 == 0;
        float defunc_0_f_res_29520;
        
        if (index_primexp_40547) {
            defunc_0_f_res_29520 = 1.0F;
        } else {
            int32_t x_29519 = ((__global
                                int32_t *) mappingindices_mem_42558)[gtid_29440];
            bool cond_29521 = index_primexp_40550 == 1;
            float defunc_0_f_res_f_res_29522;
            
            if (cond_29521) {
                float i32_res_29523 = sitofp_i32_f32(x_29519);
                
                defunc_0_f_res_f_res_29522 = i32_res_29523;
            } else {
                int32_t r32_arg_29524 = sdiv32(index_primexp_40550, 2);
                float i32_res_29525 = sitofp_i32_f32(r32_arg_29524);
                float i32_res_29526 = sitofp_i32_f32(x_29519);
                float x_29527 = 6.2831855F * i32_res_29525;
                float x_29528 = i32_res_29526 * x_29527;
                float angle_29529 = x_29528 / freq_27396;
                int32_t x_29530 = smod32(index_primexp_40550, 2);
                bool cond_29531 = x_29530 == 0;
                float defunc_0_f_res_f_res_f_res_29532;
                
                if (cond_29531) {
                    float sin_res_29533;
                    
                    sin_res_29533 = futrts_sin32(angle_29529);
                    defunc_0_f_res_f_res_f_res_29532 = sin_res_29533;
                } else {
                    float cos_res_29534;
                    
                    cos_res_29534 = futrts_cos32(angle_29529);
                    defunc_0_f_res_f_res_f_res_29532 = cos_res_29534;
                }
                defunc_0_f_res_f_res_29522 = defunc_0_f_res_f_res_f_res_29532;
            }
            defunc_0_f_res_29520 = defunc_0_f_res_f_res_29522;
        }
        ((__global float *) mem_42563)[gtid_29439 * N_27391 + gtid_29440] =
            defunc_0_f_res_29520;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_29514
}
__kernel void mainDetailedzisegmap_29619(__global int *global_failure,
                                         int64_t N_27391, float freq_27396,
                                         int64_t i32_res_27407, __global
                                         unsigned char *mappingindices_mem_42558,
                                         __global unsigned char *mem_42567)
{
    #define segmap_group_sizze_29688 (mainDetailedzisegmap_group_sizze_29622)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43874;
    int32_t local_tid_43875;
    int64_t group_sizze_43878;
    int32_t wave_sizze_43877;
    int32_t group_tid_43876;
    
    global_tid_43874 = get_global_id(0);
    local_tid_43875 = get_local_id(0);
    group_sizze_43878 = get_local_size(0);
    wave_sizze_43877 = LOCKSTEP_WIDTH;
    group_tid_43876 = get_group_id(0);
    
    int32_t phys_tid_29619;
    
    phys_tid_29619 = global_tid_43874;
    
    int64_t gtid_29617;
    
    gtid_29617 = squot64(sext_i32_i64(group_tid_43876) *
                         segmap_group_sizze_29688 +
                         sext_i32_i64(local_tid_43875), N_27391);
    
    int64_t gtid_29618;
    
    gtid_29618 = sext_i32_i64(group_tid_43876) * segmap_group_sizze_29688 +
        sext_i32_i64(local_tid_43875) - squot64(sext_i32_i64(group_tid_43876) *
                                                segmap_group_sizze_29688 +
                                                sext_i32_i64(local_tid_43875),
                                                N_27391) * N_27391;
    if (slt64(gtid_29617, i32_res_27407) && slt64(gtid_29618, N_27391)) {
        int32_t index_primexp_40559 = sext_i64_i32(gtid_29617);
        bool index_primexp_40556 = index_primexp_40559 == 0;
        float defunc_0_f_res_29694;
        
        if (index_primexp_40556) {
            defunc_0_f_res_29694 = 1.0F;
        } else {
            int32_t x_29693 = ((__global
                                int32_t *) mappingindices_mem_42558)[gtid_29618];
            int32_t i_29695 = add32(1, index_primexp_40559);
            int32_t r32_arg_29696 = sdiv32(i_29695, 2);
            float i32_res_29697 = sitofp_i32_f32(r32_arg_29696);
            float i32_res_29698 = sitofp_i32_f32(x_29693);
            float x_29699 = 6.2831855F * i32_res_29697;
            float x_29700 = i32_res_29698 * x_29699;
            float angle_29701 = x_29700 / freq_27396;
            int32_t x_29702 = smod32(i_29695, 2);
            bool cond_29703 = x_29702 == 0;
            float defunc_0_f_res_f_res_29704;
            
            if (cond_29703) {
                float sin_res_29705;
                
                sin_res_29705 = futrts_sin32(angle_29701);
                defunc_0_f_res_f_res_29704 = sin_res_29705;
            } else {
                float cos_res_29706;
                
                cos_res_29706 = futrts_cos32(angle_29701);
                defunc_0_f_res_f_res_29704 = cos_res_29706;
            }
            defunc_0_f_res_29694 = defunc_0_f_res_f_res_29704;
        }
        ((__global float *) mem_42567)[gtid_29617 * N_27391 + gtid_29618] =
            defunc_0_f_res_29694;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_29688
}
__kernel void mainDetailedzisegmap_29747(__global int *global_failure,
                                         int64_t N_27391, int64_t i32_res_27407,
                                         float i32_res_27472, __global
                                         unsigned char *mem_42571, __global
                                         unsigned char *mem_42575)
{
    #define segmap_group_sizze_29771 (mainDetailedzisegmap_group_sizze_29750)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43879;
    int32_t local_tid_43880;
    int64_t group_sizze_43883;
    int32_t wave_sizze_43882;
    int32_t group_tid_43881;
    
    global_tid_43879 = get_global_id(0);
    local_tid_43880 = get_local_id(0);
    group_sizze_43883 = get_local_size(0);
    wave_sizze_43882 = LOCKSTEP_WIDTH;
    group_tid_43881 = get_group_id(0);
    
    int32_t phys_tid_29747;
    
    phys_tid_29747 = global_tid_43879;
    
    int64_t gtid_29745;
    
    gtid_29745 = squot64(sext_i32_i64(group_tid_43881) *
                         segmap_group_sizze_29771 +
                         sext_i32_i64(local_tid_43880), i32_res_27407);
    
    int64_t gtid_29746;
    
    gtid_29746 = sext_i32_i64(group_tid_43881) * segmap_group_sizze_29771 +
        sext_i32_i64(local_tid_43880) - squot64(sext_i32_i64(group_tid_43881) *
                                                segmap_group_sizze_29771 +
                                                sext_i32_i64(local_tid_43880),
                                                i32_res_27407) * i32_res_27407;
    if (slt64(gtid_29745, N_27391) && slt64(gtid_29746, i32_res_27407)) {
        float x_29774 = ((__global float *) mem_42571)[gtid_29745 *
                                                       i32_res_27407 +
                                                       gtid_29746];
        float defunc_0_f_res_29775 = i32_res_27472 + x_29774;
        
        ((__global float *) mem_42575)[gtid_29745 * i32_res_27407 +
                                       gtid_29746] = defunc_0_f_res_29775;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_29771
}
__kernel void mainDetailedzisegmap_29780(__global int *global_failure,
                                         int64_t N_27391, int64_t m_27392,
                                         int32_t n_27395, int32_t k2p2zq_27405,
                                         int64_t i32_res_27407,
                                         int64_t num_groups_29805, __global
                                         unsigned char *binop_p_mem_42568,
                                         __global unsigned char *mem_42575,
                                         __global unsigned char *mem_42578,
                                         __global unsigned char *mem_42582,
                                         __global unsigned char *mem_42624)
{
    #define segmap_group_sizze_29804 (mainDetailedzisegmap_group_sizze_29782)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43887;
    int32_t local_tid_43888;
    int64_t group_sizze_43891;
    int32_t wave_sizze_43890;
    int32_t group_tid_43889;
    
    global_tid_43887 = get_global_id(0);
    local_tid_43888 = get_local_id(0);
    group_sizze_43891 = get_local_size(0);
    wave_sizze_43890 = LOCKSTEP_WIDTH;
    group_tid_43889 = get_group_id(0);
    
    int32_t phys_tid_29780;
    
    phys_tid_29780 = global_tid_43887;
    
    int32_t phys_group_id_43892;
    
    phys_group_id_43892 = get_group_id(0);
    for (int32_t i_43893 = 0; i_43893 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27392, segmap_group_sizze_29804)) -
                   phys_group_id_43892, sext_i64_i32(num_groups_29805));
         i_43893++) {
        int32_t virt_group_id_43894 = phys_group_id_43892 + i_43893 *
                sext_i64_i32(num_groups_29805);
        int64_t gtid_29779 = sext_i32_i64(virt_group_id_43894) *
                segmap_group_sizze_29804 + sext_i32_i64(local_tid_43888);
        
        if (slt64(gtid_29779, m_27392)) {
            for (int32_t i_42538 = 0; i_42538 < k2p2zq_27405; i_42538++) {
                int64_t i_42467 = sext_i32_i64(i_42538);
                
                for (int32_t i_42537 = 0; i_42537 < k2p2zq_27405; i_42537++) {
                    int64_t i_42471 = sext_i32_i64(i_42537);
                    float defunc_2_reduce_res_29813;
                    float redout_42473 = 0.0F;
                    
                    for (int32_t i_42536 = 0; i_42536 < n_27395; i_42536++) {
                        int64_t i_42474 = sext_i32_i64(i_42536);
                        float x_29817 = ((__global float *) mem_42578)[i_42474 *
                                                                       m_27392 +
                                                                       gtid_29779];
                        float x_29818 = ((__global
                                          float *) binop_p_mem_42568)[i_42467 *
                                                                      N_27391 +
                                                                      i_42474];
                        float x_29819 = ((__global float *) mem_42575)[i_42474 *
                                                                       i32_res_27407 +
                                                                       i_42471];
                        float x_29820 = x_29818 * x_29819;
                        bool isnan_res_29821;
                        
                        isnan_res_29821 = futrts_isnan32(x_29817);
                        
                        float y_29822;
                        
                        if (isnan_res_29821) {
                            y_29822 = 0.0F;
                        } else {
                            y_29822 = 1.0F;
                        }
                        
                        float defunc_2_f_res_29823 = x_29820 * y_29822;
                        float defunc_1_op_res_29816 = defunc_2_f_res_29823 +
                              redout_42473;
                        float redout_tmp_43897 = defunc_1_op_res_29816;
                        
                        redout_42473 = redout_tmp_43897;
                    }
                    defunc_2_reduce_res_29813 = redout_42473;
                    ((__global float *) mem_42582)[phys_tid_29780 + (i_42467 *
                                                                     (num_groups_29805 *
                                                                      segmap_group_sizze_29804 *
                                                                      i32_res_27407) +
                                                                     i_42471 *
                                                                     (num_groups_29805 *
                                                                      segmap_group_sizze_29804))] =
                        defunc_2_reduce_res_29813;
                }
            }
            for (int64_t i_43898 = 0; i_43898 < i32_res_27407; i_43898++) {
                for (int64_t i_43899 = 0; i_43899 < i32_res_27407; i_43899++) {
                    ((__global float *) mem_42624)[i_43898 * (m_27392 *
                                                              i32_res_27407) +
                                                   i_43899 * m_27392 +
                                                   gtid_29779] = ((__global
                                                                   float *) mem_42582)[phys_tid_29780 +
                                                                                       (i_43898 *
                                                                                        (num_groups_29805 *
                                                                                         segmap_group_sizze_29804 *
                                                                                         i32_res_27407) +
                                                                                        i_43899 *
                                                                                        (num_groups_29805 *
                                                                                         segmap_group_sizze_29804))];
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_29804
}
__kernel void mainDetailedzisegmap_29826(__global int *global_failure,
                                         int64_t N_27391, int64_t m_27392,
                                         int32_t n_27395, int32_t k2p2zq_27405,
                                         int64_t i32_res_27407,
                                         int64_t num_groups_29982, __global
                                         unsigned char *images_mem_42559,
                                         __global unsigned char *mem_42571,
                                         __global unsigned char *mem_42575,
                                         __global unsigned char *mem_42627,
                                         __global unsigned char *mem_42643)
{
    #define segmap_group_sizze_29981 (mainDetailedzisegmap_group_sizze_29829)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43900;
    int32_t local_tid_43901;
    int64_t group_sizze_43904;
    int32_t wave_sizze_43903;
    int32_t group_tid_43902;
    
    global_tid_43900 = get_global_id(0);
    local_tid_43901 = get_local_id(0);
    group_sizze_43904 = get_local_size(0);
    wave_sizze_43903 = LOCKSTEP_WIDTH;
    group_tid_43902 = get_group_id(0);
    
    int32_t phys_tid_29826;
    
    phys_tid_29826 = global_tid_43900;
    
    int32_t phys_group_id_43905;
    
    phys_group_id_43905 = get_group_id(0);
    for (int32_t i_43906 = 0; i_43906 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27392 * i32_res_27407,
                                          segmap_group_sizze_29981)) -
                   phys_group_id_43905, sext_i64_i32(num_groups_29982));
         i_43906++) {
        int32_t virt_group_id_43907 = phys_group_id_43905 + i_43906 *
                sext_i64_i32(num_groups_29982);
        int64_t gtid_29824 = squot64(sext_i32_i64(virt_group_id_43907) *
                                     segmap_group_sizze_29981 +
                                     sext_i32_i64(local_tid_43901),
                                     i32_res_27407);
        int64_t gtid_29825 = sext_i32_i64(virt_group_id_43907) *
                segmap_group_sizze_29981 + sext_i32_i64(local_tid_43901) -
                squot64(sext_i32_i64(virt_group_id_43907) *
                        segmap_group_sizze_29981 +
                        sext_i32_i64(local_tid_43901), i32_res_27407) *
                i32_res_27407;
        
        if (slt64(gtid_29824, m_27392) && slt64(gtid_29825, i32_res_27407)) {
            for (int32_t i_42540 = 0; i_42540 < k2p2zq_27405; i_42540++) {
                int64_t i_42477 = sext_i32_i64(i_42540);
                float defunc_2_reduce_res_29993;
                float redout_42479 = 0.0F;
                
                for (int32_t i_42539 = 0; i_42539 < n_27395; i_42539++) {
                    int64_t i_42480 = sext_i32_i64(i_42539);
                    float x_29997 = ((__global
                                      float *) images_mem_42559)[gtid_29824 *
                                                                 N_27391 +
                                                                 i_42480];
                    float x_29998 = ((__global float *) mem_42571)[i_42480 *
                                                                   i32_res_27407 +
                                                                   gtid_29825];
                    float x_29999 = ((__global float *) mem_42575)[i_42480 *
                                                                   i32_res_27407 +
                                                                   i_42477];
                    float x_30000 = x_29998 * x_29999;
                    bool isnan_res_30001;
                    
                    isnan_res_30001 = futrts_isnan32(x_29997);
                    
                    float y_30002;
                    
                    if (isnan_res_30001) {
                        y_30002 = 0.0F;
                    } else {
                        y_30002 = 1.0F;
                    }
                    
                    float defunc_2_f_res_30003 = x_30000 * y_30002;
                    float defunc_1_op_res_29996 = defunc_2_f_res_30003 +
                          redout_42479;
                    float redout_tmp_43909 = defunc_1_op_res_29996;
                    
                    redout_42479 = redout_tmp_43909;
                }
                defunc_2_reduce_res_29993 = redout_42479;
                ((__global float *) mem_42627)[phys_tid_29826 + i_42477 *
                                               (num_groups_29982 *
                                                segmap_group_sizze_29981)] =
                    defunc_2_reduce_res_29993;
            }
            for (int64_t i_43910 = 0; i_43910 < i32_res_27407; i_43910++) {
                ((__global float *) mem_42643)[i_43910 * (i32_res_27407 *
                                                          m_27392) +
                                               gtid_29824 * i32_res_27407 +
                                               gtid_29825] = ((__global
                                                               float *) mem_42627)[phys_tid_29826 +
                                                                                   i_43910 *
                                                                                   (num_groups_29982 *
                                                                                    segmap_group_sizze_29981)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_29981
}
__kernel void mainDetailedzisegmap_30310(__global int *global_failure,
                                         int64_t m_27392, int64_t i32_res_27407,
                                         int64_t i32_res_27540,
                                         int64_t i32_res_27555, int64_t x_27556,
                                         int64_t j_m_i_27559,
                                         int64_t gauss_jordan_res_r_ixfn_42795,
                                         int64_t gauss_jordan_res_r_ixfn_42796,
                                         int64_t gauss_jordan_res_r_ixfn_42798,
                                         __global
                                         unsigned char *gauss_jordan_res_r_mem_42800,
                                         __global unsigned char *mem_42805)
{
    #define segmap_group_sizze_30861 (mainDetailedzisegmap_group_sizze_30314)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44067;
    int32_t local_tid_44068;
    int64_t group_sizze_44071;
    int32_t wave_sizze_44070;
    int32_t group_tid_44069;
    
    global_tid_44067 = get_global_id(0);
    local_tid_44068 = get_local_id(0);
    group_sizze_44071 = get_local_size(0);
    wave_sizze_44070 = LOCKSTEP_WIDTH;
    group_tid_44069 = get_group_id(0);
    
    int32_t phys_tid_30310;
    
    phys_tid_30310 = global_tid_44067;
    
    int64_t gtid_30307;
    
    gtid_30307 = squot64(sext_i32_i64(group_tid_44069) *
                         segmap_group_sizze_30861 +
                         sext_i32_i64(local_tid_44068), i32_res_27407 *
                         j_m_i_27559);
    
    int64_t gtid_slice_30305;
    
    gtid_slice_30305 = squot64(sext_i32_i64(group_tid_44069) *
                               segmap_group_sizze_30861 +
                               sext_i32_i64(local_tid_44068) -
                               squot64(sext_i32_i64(group_tid_44069) *
                                       segmap_group_sizze_30861 +
                                       sext_i32_i64(local_tid_44068),
                                       i32_res_27407 * j_m_i_27559) *
                               (i32_res_27407 * j_m_i_27559), j_m_i_27559);
    
    int64_t gtid_slice_30306;
    
    gtid_slice_30306 = sext_i32_i64(group_tid_44069) *
        segmap_group_sizze_30861 + sext_i32_i64(local_tid_44068) -
        squot64(sext_i32_i64(group_tid_44069) * segmap_group_sizze_30861 +
                sext_i32_i64(local_tid_44068), i32_res_27407 * j_m_i_27559) *
        (i32_res_27407 * j_m_i_27559) - squot64(sext_i32_i64(group_tid_44069) *
                                                segmap_group_sizze_30861 +
                                                sext_i32_i64(local_tid_44068) -
                                                squot64(sext_i32_i64(group_tid_44069) *
                                                        segmap_group_sizze_30861 +
                                                        sext_i32_i64(local_tid_44068),
                                                        i32_res_27407 *
                                                        j_m_i_27559) *
                                                (i32_res_27407 * j_m_i_27559),
                                                j_m_i_27559) * j_m_i_27559;
    if ((slt64(gtid_30307, m_27392) && slt64(gtid_slice_30305,
                                             i32_res_27407)) &&
        slt64(gtid_slice_30306, j_m_i_27559)) {
        int64_t slice_30865 = i32_res_27407 + gtid_slice_30306;
        int64_t binop_x_40640 = x_27556 * gtid_30307;
        int64_t binop_y_40641 = i32_res_27555 * gtid_slice_30305;
        int64_t binop_x_40642 = binop_x_40640 + binop_y_40641;
        int64_t binop_x_40643 = slice_30865 + binop_x_40642;
        int64_t new_index_40644 = squot64(binop_x_40643, i32_res_27540);
        int64_t binop_y_40656 = i32_res_27540 * new_index_40644;
        int64_t new_index_40657 = binop_x_40643 - binop_y_40656;
        float v_30866 = ((__global
                          float *) gauss_jordan_res_r_mem_42800)[gauss_jordan_res_r_ixfn_42795 +
                                                                 (new_index_40644 *
                                                                  gauss_jordan_res_r_ixfn_42796 +
                                                                  new_index_40657 *
                                                                  gauss_jordan_res_r_ixfn_42798)];
        
        ((__global float *) mem_42805)[gtid_30307 * (j_m_i_27559 *
                                                     i32_res_27407) +
                                       gtid_slice_30305 * j_m_i_27559 +
                                       gtid_slice_30306] = v_30866;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30861
}
__kernel void mainDetailedzisegmap_30476(__global int *global_failure,
                                         int64_t m_27392, int64_t i32_res_27540,
                                         int64_t ctx_param_ext_42758,
                                         int64_t ctx_param_ext_42759,
                                         int64_t ctx_param_ext_42761, __global
                                         unsigned char *mem_param_42763,
                                         __global unsigned char *mem_42783)
{
    #define segmap_group_sizze_30849 (mainDetailedzisegmap_group_sizze_30479)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44061;
    int32_t local_tid_44062;
    int64_t group_sizze_44065;
    int32_t wave_sizze_44064;
    int32_t group_tid_44063;
    
    global_tid_44061 = get_global_id(0);
    local_tid_44062 = get_local_id(0);
    group_sizze_44065 = get_local_size(0);
    wave_sizze_44064 = LOCKSTEP_WIDTH;
    group_tid_44063 = get_group_id(0);
    
    int32_t phys_tid_30476;
    
    phys_tid_30476 = global_tid_44061;
    
    int64_t gtid_30474;
    
    gtid_30474 = squot64(sext_i32_i64(group_tid_44063) *
                         segmap_group_sizze_30849 +
                         sext_i32_i64(local_tid_44062), i32_res_27540);
    
    int64_t gtid_30475;
    
    gtid_30475 = sext_i32_i64(group_tid_44063) * segmap_group_sizze_30849 +
        sext_i32_i64(local_tid_44062) - squot64(sext_i32_i64(group_tid_44063) *
                                                segmap_group_sizze_30849 +
                                                sext_i32_i64(local_tid_44062),
                                                i32_res_27540) * i32_res_27540;
    if (slt64(gtid_30474, m_27392) && slt64(gtid_30475, i32_res_27540)) {
        float write_value_30855 = ((__global float *) mem_42783)[gtid_30474 *
                                                                 i32_res_27540 +
                                                                 gtid_30475];
        
        if ((sle64((int64_t) 0, gtid_30474) && slt64(gtid_30474, m_27392)) &&
            (sle64((int64_t) 0, gtid_30475) && slt64(gtid_30475,
                                                     i32_res_27540))) {
            ((__global float *) mem_param_42763)[ctx_param_ext_42758 +
                                                 (gtid_30474 *
                                                  ctx_param_ext_42759 +
                                                  gtid_30475 *
                                                  ctx_param_ext_42761)] =
                write_value_30855;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30849
}
__kernel void mainDetailedzisegmap_30530(__global int *global_failure,
                                         int64_t m_27392, int32_t k2p2zq_27405,
                                         int32_t m_27538, int64_t i32_res_27540,
                                         int32_t i_30752, int64_t i32_res_30754,
                                         int64_t ctx_param_ext_42758,
                                         int64_t ctx_param_ext_42759,
                                         int64_t ctx_param_ext_42761, __global
                                         unsigned char *mem_param_42763,
                                         __global unsigned char *mem_42779,
                                         __global unsigned char *mem_42783)
{
    #define segmap_group_sizze_30815 (mainDetailedzisegmap_group_sizze_30533)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44056;
    int32_t local_tid_44057;
    int64_t group_sizze_44060;
    int32_t wave_sizze_44059;
    int32_t group_tid_44058;
    
    global_tid_44056 = get_global_id(0);
    local_tid_44057 = get_local_id(0);
    group_sizze_44060 = get_local_size(0);
    wave_sizze_44059 = LOCKSTEP_WIDTH;
    group_tid_44058 = get_group_id(0);
    
    int32_t phys_tid_30530;
    
    phys_tid_30530 = global_tid_44056;
    
    int64_t gtid_30528;
    
    gtid_30528 = squot64(sext_i32_i64(group_tid_44058) *
                         segmap_group_sizze_30815 +
                         sext_i32_i64(local_tid_44057), i32_res_27540);
    
    int64_t gtid_30529;
    
    gtid_30529 = sext_i32_i64(group_tid_44058) * segmap_group_sizze_30815 +
        sext_i32_i64(local_tid_44057) - squot64(sext_i32_i64(group_tid_44058) *
                                                segmap_group_sizze_30815 +
                                                sext_i32_i64(local_tid_44057),
                                                i32_res_27540) * i32_res_27540;
    if (slt64(gtid_30528, m_27392) && slt64(gtid_30529, i32_res_27540)) {
        bool cond_30820 = ((__global bool *) mem_42779)[gtid_30528];
        int32_t defunc_0_f_res_30822 = sext_i64_i32(gtid_30529);
        int32_t defunc_0_f_res_30823 = sdiv32(defunc_0_f_res_30822, m_27538);
        int32_t defunc_0_f_res_30824 = smod32(defunc_0_f_res_30822, m_27538);
        float defunc_0_f_res_30825;
        
        if (cond_30820) {
            int32_t x_30826 = mul32(m_27538, defunc_0_f_res_30823);
            int32_t i32_arg_30827 = add32(defunc_0_f_res_30824, x_30826);
            int64_t i32_res_30828 = sext_i32_i64(i32_arg_30827);
            float defunc_0_f_res_t_res_30829 = ((__global
                                                 float *) mem_param_42763)[ctx_param_ext_42758 +
                                                                           (gtid_30528 *
                                                                            ctx_param_ext_42759 +
                                                                            i32_res_30828 *
                                                                            ctx_param_ext_42761)];
            
            defunc_0_f_res_30825 = defunc_0_f_res_t_res_30829;
        } else {
            float v1_30819 = ((__global
                               float *) mem_param_42763)[ctx_param_ext_42758 +
                                                         (gtid_30528 *
                                                          ctx_param_ext_42759 +
                                                          i32_res_30754 *
                                                          ctx_param_ext_42761)];
            int64_t i32_res_30830 = sext_i32_i64(defunc_0_f_res_30824);
            float x_30831 = ((__global
                              float *) mem_param_42763)[ctx_param_ext_42758 +
                                                        (gtid_30528 *
                                                         ctx_param_ext_42759 +
                                                         i32_res_30830 *
                                                         ctx_param_ext_42761)];
            float x_30832 = x_30831 / v1_30819;
            int32_t y_30833 = sub32(k2p2zq_27405, 1);
            bool cond_30834 = slt32(defunc_0_f_res_30823, y_30833);
            float defunc_0_f_res_f_res_30835;
            
            if (cond_30834) {
                int32_t x_30836 = add32(1, defunc_0_f_res_30823);
                int32_t x_30837 = mul32(m_27538, x_30836);
                int32_t i32_arg_30838 = add32(defunc_0_f_res_30824, x_30837);
                int64_t i32_res_30839 = sext_i32_i64(i32_arg_30838);
                float x_30840 = ((__global
                                  float *) mem_param_42763)[ctx_param_ext_42758 +
                                                            (gtid_30528 *
                                                             ctx_param_ext_42759 +
                                                             i32_res_30839 *
                                                             ctx_param_ext_42761)];
                int32_t i32_arg_30841 = add32(i_30752, x_30837);
                int64_t i32_res_30842 = sext_i32_i64(i32_arg_30841);
                float x_30843 = ((__global
                                  float *) mem_param_42763)[ctx_param_ext_42758 +
                                                            (gtid_30528 *
                                                             ctx_param_ext_42759 +
                                                             i32_res_30842 *
                                                             ctx_param_ext_42761)];
                float y_30844 = x_30832 * x_30843;
                float defunc_0_f_res_f_res_t_res_30845 = x_30840 - y_30844;
                
                defunc_0_f_res_f_res_30835 = defunc_0_f_res_f_res_t_res_30845;
            } else {
                defunc_0_f_res_f_res_30835 = x_30832;
            }
            defunc_0_f_res_30825 = defunc_0_f_res_f_res_30835;
        }
        ((__global float *) mem_42783)[gtid_30528 * i32_res_27540 +
                                       gtid_30529] = defunc_0_f_res_30825;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30815
}
__kernel void mainDetailedzisegmap_30598(__global int *global_failure,
                                         int64_t m_27392, int64_t i32_res_30754,
                                         int64_t ctx_param_ext_42758,
                                         int64_t ctx_param_ext_42759,
                                         int64_t ctx_param_ext_42761, __global
                                         unsigned char *mem_param_42763,
                                         __global unsigned char *mem_42779)
{
    #define segmap_group_sizze_30799 (mainDetailedzisegmap_group_sizze_30600)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44051;
    int32_t local_tid_44052;
    int64_t group_sizze_44055;
    int32_t wave_sizze_44054;
    int32_t group_tid_44053;
    
    global_tid_44051 = get_global_id(0);
    local_tid_44052 = get_local_id(0);
    group_sizze_44055 = get_local_size(0);
    wave_sizze_44054 = LOCKSTEP_WIDTH;
    group_tid_44053 = get_group_id(0);
    
    int32_t phys_tid_30598;
    
    phys_tid_30598 = global_tid_44051;
    
    int64_t gtid_30597;
    
    gtid_30597 = sext_i32_i64(group_tid_44053) * segmap_group_sizze_30799 +
        sext_i32_i64(local_tid_44052);
    if (slt64(gtid_30597, m_27392)) {
        float v1_30804 = ((__global
                           float *) mem_param_42763)[ctx_param_ext_42758 +
                                                     (gtid_30597 *
                                                      ctx_param_ext_42759 +
                                                      i32_res_30754 *
                                                      ctx_param_ext_42761)];
        bool cond_30805 = v1_30804 == 0.0F;
        
        ((__global bool *) mem_42779)[gtid_30597] = cond_30805;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30799
}
__kernel void mainDetailedzisegmap_30691(__global int *global_failure,
                                         int64_t m_27392, int32_t k2p2zq_27405,
                                         int64_t i32_res_27407, int32_t m_27538,
                                         int64_t i32_res_27540, __global
                                         unsigned char *defunc_3_map_res_mem_42727,
                                         __global unsigned char *mem_42755)
{
    #define segmap_group_sizze_30735 (mainDetailedzisegmap_group_sizze_30694)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44018;
    int32_t local_tid_44019;
    int64_t group_sizze_44022;
    int32_t wave_sizze_44021;
    int32_t group_tid_44020;
    
    global_tid_44018 = get_global_id(0);
    local_tid_44019 = get_local_id(0);
    group_sizze_44022 = get_local_size(0);
    wave_sizze_44021 = LOCKSTEP_WIDTH;
    group_tid_44020 = get_group_id(0);
    
    int32_t phys_tid_30691;
    
    phys_tid_30691 = global_tid_44018;
    
    int64_t gtid_30689;
    
    gtid_30689 = squot64(sext_i32_i64(group_tid_44020) *
                         segmap_group_sizze_30735 +
                         sext_i32_i64(local_tid_44019), i32_res_27540);
    
    int64_t gtid_30690;
    
    gtid_30690 = sext_i32_i64(group_tid_44020) * segmap_group_sizze_30735 +
        sext_i32_i64(local_tid_44019) - squot64(sext_i32_i64(group_tid_44020) *
                                                segmap_group_sizze_30735 +
                                                sext_i32_i64(local_tid_44019),
                                                i32_res_27540) * i32_res_27540;
    if (slt64(gtid_30689, m_27392) && slt64(gtid_30690, i32_res_27540)) {
        int32_t index_primexp_40571 = sext_i64_i32(gtid_30690);
        int32_t defunc_0_f_res_30740 = sdiv32(index_primexp_40571, m_27538);
        int32_t defunc_0_f_res_30741 = smod32(index_primexp_40571, m_27538);
        bool cond_30742 = slt32(defunc_0_f_res_30741, k2p2zq_27405);
        float defunc_0_f_res_30743;
        
        if (cond_30742) {
            int64_t i_30744 = sext_i32_i64(defunc_0_f_res_30740);
            int64_t j_30745 = sext_i32_i64(defunc_0_f_res_30741);
            float defunc_0_f_res_t_res_30746 = ((__global
                                                 float *) defunc_3_map_res_mem_42727)[gtid_30689 *
                                                                                      (i32_res_27407 *
                                                                                       i32_res_27407) +
                                                                                      i_30744 *
                                                                                      i32_res_27407 +
                                                                                      j_30745];
            
            defunc_0_f_res_30743 = defunc_0_f_res_t_res_30746;
        } else {
            int32_t y_30747 = add32(k2p2zq_27405, defunc_0_f_res_30740);
            bool cond_30748 = defunc_0_f_res_30741 == y_30747;
            float defunc_0_f_res_f_res_30749;
            
            if (cond_30748) {
                defunc_0_f_res_f_res_30749 = 1.0F;
            } else {
                defunc_0_f_res_f_res_30749 = 0.0F;
            }
            defunc_0_f_res_30743 = defunc_0_f_res_f_res_30749;
        }
        ((__global float *) mem_42755)[gtid_30689 * i32_res_27540 +
                                       gtid_30690] = defunc_0_f_res_30743;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30735
}
__kernel void mainDetailedzisegmap_30872(__global int *global_failure,
                                         int64_t N_27391, int64_t m_27392,
                                         int32_t n_27395, int32_t k2p2zq_27405,
                                         int64_t i32_res_27407,
                                         int64_t num_groups_30893, __global
                                         unsigned char *binop_p_mem_42568,
                                         __global unsigned char *mem_42810,
                                         __global unsigned char *mem_42813,
                                         __global unsigned char *mem_42828)
{
    #define segmap_group_sizze_30892 (mainDetailedzisegmap_group_sizze_30874)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44075;
    int32_t local_tid_44076;
    int64_t group_sizze_44079;
    int32_t wave_sizze_44078;
    int32_t group_tid_44077;
    
    global_tid_44075 = get_global_id(0);
    local_tid_44076 = get_local_id(0);
    group_sizze_44079 = get_local_size(0);
    wave_sizze_44078 = LOCKSTEP_WIDTH;
    group_tid_44077 = get_group_id(0);
    
    int32_t phys_tid_30872;
    
    phys_tid_30872 = global_tid_44075;
    
    int32_t phys_group_id_44080;
    
    phys_group_id_44080 = get_group_id(0);
    for (int32_t i_44081 = 0; i_44081 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27392, segmap_group_sizze_30892)) -
                   phys_group_id_44080, sext_i64_i32(num_groups_30893));
         i_44081++) {
        int32_t virt_group_id_44082 = phys_group_id_44080 + i_44081 *
                sext_i64_i32(num_groups_30893);
        int64_t gtid_30871 = sext_i32_i64(virt_group_id_44082) *
                segmap_group_sizze_30892 + sext_i32_i64(local_tid_44076);
        
        if (slt64(gtid_30871, m_27392)) {
            for (int32_t i_42542 = 0; i_42542 < k2p2zq_27405; i_42542++) {
                int64_t i_42483 = sext_i32_i64(i_42542);
                float defunc_2_reduce_res_30899;
                float redout_42485 = 0.0F;
                
                for (int32_t i_42541 = 0; i_42541 < n_27395; i_42541++) {
                    int64_t i_42486 = sext_i32_i64(i_42541);
                    float x_30904 = ((__global float *) mem_42810)[i_42486 *
                                                                   m_27392 +
                                                                   gtid_30871];
                    bool isnan_res_30905;
                    
                    isnan_res_30905 = futrts_isnan32(x_30904);
                    
                    float defunc_1_f_res_30906;
                    
                    if (isnan_res_30905) {
                        defunc_1_f_res_30906 = 0.0F;
                    } else {
                        float x_30903 = ((__global
                                          float *) binop_p_mem_42568)[i_42483 *
                                                                      N_27391 +
                                                                      i_42486];
                        float defunc_1_f_res_f_res_30907 = x_30903 * x_30904;
                        
                        defunc_1_f_res_30906 = defunc_1_f_res_f_res_30907;
                    }
                    
                    float defunc_1_op_res_30902 = defunc_1_f_res_30906 +
                          redout_42485;
                    float redout_tmp_44084 = defunc_1_op_res_30902;
                    
                    redout_42485 = redout_tmp_44084;
                }
                defunc_2_reduce_res_30899 = redout_42485;
                ((__global float *) mem_42813)[phys_tid_30872 + i_42483 *
                                               (num_groups_30893 *
                                                segmap_group_sizze_30892)] =
                    defunc_2_reduce_res_30899;
            }
            for (int64_t i_44085 = 0; i_44085 < i32_res_27407; i_44085++) {
                ((__global float *) mem_42828)[i_44085 * m_27392 + gtid_30871] =
                    ((__global float *) mem_42813)[phys_tid_30872 + i_44085 *
                                                   (num_groups_30893 *
                                                    segmap_group_sizze_30892)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30892
}
__kernel void mainDetailedzisegmap_31013(__global int *global_failure,
                                         int64_t m_27392, int32_t k2p2zq_27405,
                                         int64_t i32_res_27407,
                                         int64_t num_groups_31033, __global
                                         unsigned char *mem_43032, __global
                                         unsigned char *mem_43035, __global
                                         unsigned char *mem_43038, __global
                                         unsigned char *mem_43053)
{
    #define segmap_group_sizze_31032 (mainDetailedzisegmap_group_sizze_31015)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44207;
    int32_t local_tid_44208;
    int64_t group_sizze_44211;
    int32_t wave_sizze_44210;
    int32_t group_tid_44209;
    
    global_tid_44207 = get_global_id(0);
    local_tid_44208 = get_local_id(0);
    group_sizze_44211 = get_local_size(0);
    wave_sizze_44210 = LOCKSTEP_WIDTH;
    group_tid_44209 = get_group_id(0);
    
    int32_t phys_tid_31013;
    
    phys_tid_31013 = global_tid_44207;
    
    int32_t phys_group_id_44212;
    
    phys_group_id_44212 = get_group_id(0);
    for (int32_t i_44213 = 0; i_44213 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27392, segmap_group_sizze_31032)) -
                   phys_group_id_44212, sext_i64_i32(num_groups_31033));
         i_44213++) {
        int32_t virt_group_id_44214 = phys_group_id_44212 + i_44213 *
                sext_i64_i32(num_groups_31033);
        int64_t gtid_31012 = sext_i32_i64(virt_group_id_44214) *
                segmap_group_sizze_31032 + sext_i32_i64(local_tid_44208);
        
        if (slt64(gtid_31012, m_27392)) {
            for (int32_t i_42544 = 0; i_42544 < k2p2zq_27405; i_42544++) {
                int64_t i_42489 = sext_i32_i64(i_42544);
                float defunc_0_f_res_31040;
                float redout_42491 = 0.0F;
                
                for (int32_t i_42543 = 0; i_42543 < k2p2zq_27405; i_42543++) {
                    int64_t i_42492 = sext_i32_i64(i_42543);
                    float x_31044 = ((__global float *) mem_43035)[i_42492 *
                                                                   m_27392 +
                                                                   gtid_31012];
                    float x_31045 = ((__global float *) mem_43032)[i_42489 *
                                                                   (m_27392 *
                                                                    i32_res_27407) +
                                                                   i_42492 *
                                                                   m_27392 +
                                                                   gtid_31012];
                    float defunc_1_f_res_31046 = x_31044 * x_31045;
                    float defunc_1_op_res_31043 = defunc_1_f_res_31046 +
                          redout_42491;
                    float redout_tmp_44216 = defunc_1_op_res_31043;
                    
                    redout_42491 = redout_tmp_44216;
                }
                defunc_0_f_res_31040 = redout_42491;
                ((__global float *) mem_43038)[phys_tid_31013 + i_42489 *
                                               (num_groups_31033 *
                                                segmap_group_sizze_31032)] =
                    defunc_0_f_res_31040;
            }
            for (int64_t i_44217 = 0; i_44217 < i32_res_27407; i_44217++) {
                ((__global float *) mem_43053)[i_44217 * m_27392 + gtid_31012] =
                    ((__global float *) mem_43038)[phys_tid_31013 + i_44217 *
                                                   (num_groups_31033 *
                                                    segmap_group_sizze_31032)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31032
}
__kernel void mainDetailedzisegmap_31145(__global int *global_failure,
                                         int64_t N_27391, int64_t m_27392,
                                         int32_t k2p2zq_27405,
                                         int64_t i32_res_27407,
                                         int64_t num_groups_31164, __global
                                         unsigned char *mem_42575, __global
                                         unsigned char *mem_43097, __global
                                         unsigned char *mem_43100, __global
                                         unsigned char *mem_43115)
{
    #define segmap_group_sizze_31163 (mainDetailedzisegmap_group_sizze_31147)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44295;
    int32_t local_tid_44296;
    int64_t group_sizze_44299;
    int32_t wave_sizze_44298;
    int32_t group_tid_44297;
    
    global_tid_44295 = get_global_id(0);
    local_tid_44296 = get_local_id(0);
    group_sizze_44299 = get_local_size(0);
    wave_sizze_44298 = LOCKSTEP_WIDTH;
    group_tid_44297 = get_group_id(0);
    
    int32_t phys_tid_31145;
    
    phys_tid_31145 = global_tid_44295;
    
    int32_t phys_group_id_44300;
    
    phys_group_id_44300 = get_group_id(0);
    for (int32_t i_44301 = 0; i_44301 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27392, segmap_group_sizze_31163)) -
                   phys_group_id_44300, sext_i64_i32(num_groups_31164));
         i_44301++) {
        int32_t virt_group_id_44302 = phys_group_id_44300 + i_44301 *
                sext_i64_i32(num_groups_31164);
        int64_t gtid_31144 = sext_i32_i64(virt_group_id_44302) *
                segmap_group_sizze_31163 + sext_i32_i64(local_tid_44296);
        
        if (slt64(gtid_31144, m_27392)) {
            for (int64_t i_42499 = 0; i_42499 < N_27391; i_42499++) {
                float defunc_0_f_res_31170;
                float redout_42501 = 0.0F;
                
                for (int32_t i_42547 = 0; i_42547 < k2p2zq_27405; i_42547++) {
                    int64_t i_42502 = sext_i32_i64(i_42547);
                    float x_31174 = ((__global float *) mem_43097)[i_42502 *
                                                                   m_27392 +
                                                                   gtid_31144];
                    float x_31175 = ((__global float *) mem_42575)[i_42499 *
                                                                   i32_res_27407 +
                                                                   i_42502];
                    float defunc_1_f_res_31176 = x_31174 * x_31175;
                    float defunc_1_op_res_31173 = defunc_1_f_res_31176 +
                          redout_42501;
                    float redout_tmp_44304 = defunc_1_op_res_31173;
                    
                    redout_42501 = redout_tmp_44304;
                }
                defunc_0_f_res_31170 = redout_42501;
                ((__global float *) mem_43100)[phys_tid_31145 + i_42499 *
                                               (num_groups_31164 *
                                                segmap_group_sizze_31163)] =
                    defunc_0_f_res_31170;
            }
            for (int64_t i_44305 = 0; i_44305 < N_27391; i_44305++) {
                ((__global float *) mem_43115)[i_44305 * m_27392 + gtid_31144] =
                    ((__global float *) mem_43100)[phys_tid_31145 + i_44305 *
                                                   (num_groups_31164 *
                                                    segmap_group_sizze_31163)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31163
}
__kernel void mainDetailedzisegmap_31425(__global int *global_failure,
                                         int64_t N_27391, int64_t m_27392,
                                         __global unsigned char *mem_43341,
                                         __global unsigned char *mem_43344,
                                         __global unsigned char *mem_43350,
                                         __global unsigned char *mem_43353)
{
    #define segmap_group_sizze_31591 (mainDetailedzisegmap_group_sizze_31428)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44522;
    int32_t local_tid_44523;
    int64_t group_sizze_44526;
    int32_t wave_sizze_44525;
    int32_t group_tid_44524;
    
    global_tid_44522 = get_global_id(0);
    local_tid_44523 = get_local_id(0);
    group_sizze_44526 = get_local_size(0);
    wave_sizze_44525 = LOCKSTEP_WIDTH;
    group_tid_44524 = get_group_id(0);
    
    int32_t phys_tid_31425;
    
    phys_tid_31425 = global_tid_44522;
    
    int64_t gtid_31423;
    
    gtid_31423 = squot64(sext_i32_i64(group_tid_44524) *
                         segmap_group_sizze_31591 +
                         sext_i32_i64(local_tid_44523), N_27391);
    
    int64_t gtid_31424;
    
    gtid_31424 = sext_i32_i64(group_tid_44524) * segmap_group_sizze_31591 +
        sext_i32_i64(local_tid_44523) - squot64(sext_i32_i64(group_tid_44524) *
                                                segmap_group_sizze_31591 +
                                                sext_i32_i64(local_tid_44523),
                                                N_27391) * N_27391;
    if (slt64(gtid_31423, m_27392) && slt64(gtid_31424, N_27391)) {
        float x_31599 = ((__global float *) mem_43344)[gtid_31423 * N_27391 +
                                                       gtid_31424];
        int32_t index_primexp_40587 = sext_i64_i32(gtid_31424);
        bool isnan_res_31602;
        
        isnan_res_31602 = futrts_isnan32(x_31599);
        
        bool defunc_0_p_res_31603 = !isnan_res_31602;
        int64_t defunc_1_f_res_31604;
        
        if (defunc_0_p_res_31603) {
            int64_t x_31600 = ((__global int64_t *) mem_43341)[gtid_31423 *
                                                               N_27391 +
                                                               gtid_31424];
            int64_t defunc_1_f_res_t_res_31605 = sub64(x_31600, (int64_t) 1);
            
            defunc_1_f_res_31604 = defunc_1_f_res_t_res_31605;
        } else {
            defunc_1_f_res_31604 = (int64_t) -1;
        }
        if ((sle64((int64_t) 0, gtid_31423) && slt64(gtid_31423, m_27392)) &&
            (sle64((int64_t) 0, defunc_1_f_res_31604) &&
             slt64(defunc_1_f_res_31604, N_27391))) {
            ((__global int32_t *) mem_43353)[gtid_31423 * N_27391 +
                                             defunc_1_f_res_31604] =
                index_primexp_40587;
        }
        if ((sle64((int64_t) 0, gtid_31423) && slt64(gtid_31423, m_27392)) &&
            (sle64((int64_t) 0, defunc_1_f_res_31604) &&
             slt64(defunc_1_f_res_31604, N_27391))) {
            ((__global float *) mem_43350)[gtid_31423 * N_27391 +
                                           defunc_1_f_res_31604] = x_31599;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31591
}
__kernel void mainDetailedzisegmap_31501(__global int *global_failure,
                                         int64_t N_27391, int64_t m_27392,
                                         int64_t i_27667, __global
                                         unsigned char *mem_43341, __global
                                         unsigned char *mem_43347)
{
    #define segmap_group_sizze_31555 (mainDetailedzisegmap_group_sizze_31503)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44499;
    int32_t local_tid_44500;
    int64_t group_sizze_44503;
    int32_t wave_sizze_44502;
    int32_t group_tid_44501;
    
    global_tid_44499 = get_global_id(0);
    local_tid_44500 = get_local_id(0);
    group_sizze_44503 = get_local_size(0);
    wave_sizze_44502 = LOCKSTEP_WIDTH;
    group_tid_44501 = get_group_id(0);
    
    int32_t phys_tid_31501;
    
    phys_tid_31501 = global_tid_44499;
    
    int64_t gtid_31500;
    
    gtid_31500 = sext_i32_i64(group_tid_44501) * segmap_group_sizze_31555 +
        sext_i32_i64(local_tid_44500);
    if (slt64(gtid_31500, m_27392)) {
        int64_t last_res_31559 = ((__global int64_t *) mem_43341)[gtid_31500 *
                                                                  N_27391 +
                                                                  i_27667];
        int32_t defunc_0_f_res_31560 = sext_i64_i32(last_res_31559);
        
        ((__global int32_t *) mem_43347)[gtid_31500] = defunc_0_f_res_31560;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31555
}
__kernel void mainDetailedzisegmap_31752(__global int *global_failure,
                                         int64_t m_27392, float hfrac_27397,
                                         int32_t k2p2_27403, __global
                                         unsigned char *mem_43410, __global
                                         unsigned char *mem_43413, __global
                                         unsigned char *mem_43416, __global
                                         unsigned char *mem_43418)
{
    #define segmap_group_sizze_31837 (mainDetailedzisegmap_group_sizze_31754)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44675;
    int32_t local_tid_44676;
    int64_t group_sizze_44679;
    int32_t wave_sizze_44678;
    int32_t group_tid_44677;
    
    global_tid_44675 = get_global_id(0);
    local_tid_44676 = get_local_id(0);
    group_sizze_44679 = get_local_size(0);
    wave_sizze_44678 = LOCKSTEP_WIDTH;
    group_tid_44677 = get_group_id(0);
    
    int32_t phys_tid_31752;
    
    phys_tid_31752 = global_tid_44675;
    
    int64_t gtid_31751;
    
    gtid_31751 = sext_i32_i64(group_tid_44677) * segmap_group_sizze_31837 +
        sext_i32_i64(local_tid_44676);
    if (slt64(gtid_31751, m_27392)) {
        int32_t defunc_0_f_res_31841 = ((__global
                                         int32_t *) mem_43410)[gtid_31751];
        float defunc_0_f_res_31842 = ((__global float *) mem_43413)[gtid_31751];
        int32_t r32_arg_31843 = sub32(defunc_0_f_res_31841, k2p2_27403);
        float i32_res_31844 = sitofp_i32_f32(r32_arg_31843);
        float sqrt_arg_31845 = defunc_0_f_res_31842 / i32_res_31844;
        float sqrt_res_31846;
        
        sqrt_res_31846 = futrts_sqrt32(sqrt_arg_31845);
        
        float i32_res_31847 = sitofp_i32_f32(defunc_0_f_res_31841);
        float t32_arg_31848 = hfrac_27397 * i32_res_31847;
        int32_t f32_res_31849 = fptosi_f32_i32(t32_arg_31848);
        
        ((__global int32_t *) mem_43416)[gtid_31751] = f32_res_31849;
        ((__global float *) mem_43418)[gtid_31751] = sqrt_res_31846;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31837
}
__kernel void mainDetailedzisegmap_32022(__global int *global_failure,
                                         float lam_27398,
                                         int64_t iota32_arg_27787,
                                         int32_t x_27792, float i32_res_27800,
                                         __global
                                         unsigned char *mappingindices_mem_42558,
                                         __global unsigned char *mem_43460)
{
    #define segmap_group_sizze_32041 (mainDetailedzisegmap_group_sizze_32024)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44785;
    int32_t local_tid_44786;
    int64_t group_sizze_44789;
    int32_t wave_sizze_44788;
    int32_t group_tid_44787;
    
    global_tid_44785 = get_global_id(0);
    local_tid_44786 = get_local_id(0);
    group_sizze_44789 = get_local_size(0);
    wave_sizze_44788 = LOCKSTEP_WIDTH;
    group_tid_44787 = get_group_id(0);
    
    int32_t phys_tid_32022;
    
    phys_tid_32022 = global_tid_44785;
    
    int64_t gtid_32021;
    
    gtid_32021 = sext_i32_i64(group_tid_44787) * segmap_group_sizze_32041 +
        sext_i32_i64(local_tid_44786);
    if (slt64(gtid_32021, iota32_arg_27787)) {
        int32_t defunc_0_f_res_32045 = sext_i64_i32(gtid_32021);
        int32_t t_32046 = add32(x_27792, defunc_0_f_res_32045);
        int32_t i_32047 = sub32(t_32046, 1);
        int64_t i_32048 = sext_i32_i64(i_32047);
        int32_t time_32049 = ((__global
                               int32_t *) mappingindices_mem_42558)[i_32048];
        float i32_res_32050 = sitofp_i32_f32(time_32049);
        float logplus_arg_32051 = i32_res_32050 / i32_res_27800;
        bool cond_32052 = 2.7182817F < logplus_arg_32051;
        float logplus_res_32053;
        
        if (cond_32052) {
            float log_res_32054;
            
            log_res_32054 = futrts_log32(logplus_arg_32051);
            logplus_res_32053 = log_res_32054;
        } else {
            logplus_res_32053 = 1.0F;
        }
        
        float sqrt_res_32055;
        
        sqrt_res_32055 = futrts_sqrt32(logplus_res_32053);
        
        float defunc_0_f_res_32056 = lam_27398 * sqrt_res_32055;
        
        ((__global float *) mem_43460)[gtid_32021] = defunc_0_f_res_32056;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32041
}
__kernel void mainDetailedzisegmap_32302(__global int *global_failure,
                                         int failure_is_an_option, __global
                                         int64_t *global_failure_args,
                                         int64_t m_27392,
                                         int64_t iota32_arg_27787,
                                         int64_t iota32_arg_27815,
                                         int64_t distance_27825,
                                         int64_t segmap_usable_groups_32535,
                                         __global
                                         unsigned char *defunc_4_map_res_mem_43355,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43423,
                                         __global unsigned char *mem_43463,
                                         __global unsigned char *mem_43470,
                                         __global unsigned char *mem_43481,
                                         __global unsigned char *mem_43501)
{
    #define segmap_group_sizze_32534 (mainDetailedzisegmap_group_sizze_32304)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44800;
    int32_t local_tid_44801;
    int64_t group_sizze_44804;
    int32_t wave_sizze_44803;
    int32_t group_tid_44802;
    
    global_tid_44800 = get_global_id(0);
    local_tid_44801 = get_local_id(0);
    group_sizze_44804 = get_local_size(0);
    wave_sizze_44803 = LOCKSTEP_WIDTH;
    group_tid_44802 = get_group_id(0);
    
    int32_t phys_tid_32302;
    
    phys_tid_32302 = global_tid_44800;
    
    int64_t gtid_32301;
    
    gtid_32301 = sext_i32_i64(group_tid_44802) * segmap_group_sizze_32534 +
        sext_i32_i64(local_tid_44801);
    if (slt64(gtid_32301, m_27392)) {
        int32_t x_32537 = ((__global
                            int32_t *) defunc_4_map_res_mem_43355)[gtid_32301];
        int32_t x_32538 = ((__global
                            int32_t *) defunc_3_map_res_mem_43423)[gtid_32301];
        int32_t y_32539 = ((__global int32_t *) mem_43463)[gtid_32301];
        
        for (int64_t i_44805 = 0; i_44805 < iota32_arg_27815; i_44805++) {
            ((__global float *) mem_43481)[phys_tid_32302 + i_44805 *
                                           (segmap_usable_groups_32535 *
                                            segmap_group_sizze_32534)] =
                ((__global float *) mem_43470)[gtid_32301 + i_44805 * m_27392];
        }
        for (int64_t i_32542 = 0; i_32542 < distance_27825; i_32542++) {
            int64_t index_primexp_32544 = add64((int64_t) 1, i_32542);
            bool cond_32545 = slt64((int64_t) 0, index_primexp_32544);
            bool loop_cond_32546;
            
            if (cond_32545) {
                bool x_32547 = sle64((int64_t) 0, index_primexp_32544);
                bool y_32548 = slt64(index_primexp_32544, iota32_arg_27815);
                bool bounds_check_32549 = x_32547 && y_32548;
                bool index_certs_32550;
                
                if (!bounds_check_32549) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 2) ==
                            -1) {
                            global_failure_args[0] = index_primexp_32544;
                            global_failure_args[1] = iota32_arg_27815;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_2_lifted_gt_arg_32551 = ((__global
                                                       float *) mem_43481)[phys_tid_32302 +
                                                                           index_primexp_32544 *
                                                                           (segmap_usable_groups_32535 *
                                                                            segmap_group_sizze_32534)];
                bool y_32552 = slt64(i_32542, iota32_arg_27815);
                bool index_certs_32553;
                
                if (!y_32552) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 3) ==
                            -1) {
                            global_failure_args[0] = i_32542;
                            global_failure_args[1] = iota32_arg_27815;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_1_lifted_gt_arg_32554 = ((__global
                                                       float *) mem_43481)[phys_tid_32302 +
                                                                           i_32542 *
                                                                           (segmap_usable_groups_32535 *
                                                                            segmap_group_sizze_32534)];
                bool defunc_1_zlze_res_32555 = defunc_1_lifted_gt_arg_32554 <=
                     defunc_2_lifted_gt_arg_32551;
                bool defunc_2_lifted_gt_res_32556 = !defunc_1_zlze_res_32555;
                
                loop_cond_32546 = defunc_2_lifted_gt_res_32556;
            } else {
                loop_cond_32546 = 0;
            }
            
            bool xszq_32557;
            int64_t xszq_32558;
            bool loop_while_32560;
            int64_t j_32561;
            
            loop_while_32560 = loop_cond_32546;
            j_32561 = index_primexp_32544;
            while (loop_while_32560) {
                int64_t loopres_32563 = sub64(j_32561, (int64_t) 1);
                bool x_32564 = sle64((int64_t) 0, j_32561);
                bool y_32565 = slt64(j_32561, iota32_arg_27815);
                bool bounds_check_32566 = x_32564 && y_32565;
                bool index_certs_32567;
                
                if (!bounds_check_32566) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 4) ==
                            -1) {
                            global_failure_args[0] = j_32561;
                            global_failure_args[1] = iota32_arg_27815;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_32568 = ((__global
                                         float *) mem_43481)[phys_tid_32302 +
                                                             j_32561 *
                                                             (segmap_usable_groups_32535 *
                                                              segmap_group_sizze_32534)];
                bool x_32569 = sle64((int64_t) 0, loopres_32563);
                bool y_32570 = slt64(loopres_32563, iota32_arg_27815);
                bool bounds_check_32571 = x_32569 && y_32570;
                bool index_certs_32572;
                
                if (!bounds_check_32571) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 5) ==
                            -1) {
                            global_failure_args[0] = loopres_32563;
                            global_failure_args[1] = iota32_arg_27815;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_32573 = ((__global
                                         float *) mem_43481)[phys_tid_32302 +
                                                             loopres_32563 *
                                                             (segmap_usable_groups_32535 *
                                                              segmap_group_sizze_32534)];
                
                ((__global float *) mem_43481)[phys_tid_32302 + j_32561 *
                                               (segmap_usable_groups_32535 *
                                                segmap_group_sizze_32534)] =
                    copy_arg_32573;
                ((__global float *) mem_43481)[phys_tid_32302 + loopres_32563 *
                                               (segmap_usable_groups_32535 *
                                                segmap_group_sizze_32534)] =
                    copy_arg_32568;
                
                bool cond_32576 = slt64((int64_t) 0, loopres_32563);
                bool loop_cond_32577;
                
                if (cond_32576) {
                    bool index_certs_32578;
                    
                    if (!bounds_check_32571) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          6) == -1) {
                                global_failure_args[0] = loopres_32563;
                                global_failure_args[1] = iota32_arg_27815;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_2_lifted_gt_arg_32579 = ((__global
                                                           float *) mem_43481)[phys_tid_32302 +
                                                                               loopres_32563 *
                                                                               (segmap_usable_groups_32535 *
                                                                                segmap_group_sizze_32534)];
                    int64_t i_32580 = sub64(loopres_32563, (int64_t) 1);
                    bool x_32581 = sle64((int64_t) 0, i_32580);
                    bool y_32582 = slt64(i_32580, iota32_arg_27815);
                    bool bounds_check_32583 = x_32581 && y_32582;
                    bool index_certs_32584;
                    
                    if (!bounds_check_32583) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          7) == -1) {
                                global_failure_args[0] = i_32580;
                                global_failure_args[1] = iota32_arg_27815;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_1_lifted_gt_arg_32585 = ((__global
                                                           float *) mem_43481)[phys_tid_32302 +
                                                                               i_32580 *
                                                                               (segmap_usable_groups_32535 *
                                                                                segmap_group_sizze_32534)];
                    bool defunc_1_zlze_res_32586 =
                         defunc_1_lifted_gt_arg_32585 <=
                         defunc_2_lifted_gt_arg_32579;
                    bool defunc_2_lifted_gt_res_32587 =
                         !defunc_1_zlze_res_32586;
                    
                    loop_cond_32577 = defunc_2_lifted_gt_res_32587;
                } else {
                    loop_cond_32577 = 0;
                }
                
                bool loop_while_tmp_44807 = loop_cond_32577;
                int64_t j_tmp_44808 = loopres_32563;
                
                loop_while_32560 = loop_while_tmp_44807;
                j_32561 = j_tmp_44808;
            }
            xszq_32557 = loop_while_32560;
            xszq_32558 = j_32561;
        }
        
        int32_t i_32588 = sdiv32(y_32539, 2);
        int32_t j_32589 = sub32(i_32588, 1);
        bool cond_32590 = x_32537 == x_32538;
        float defunc_0_f_res_32591;
        
        if (cond_32590) {
            defunc_0_f_res_32591 = 0.0F;
        } else {
            int32_t x_32592 = smod32(y_32539, 2);
            bool cond_32593 = x_32592 == 0;
            float defunc_0_f_res_f_res_32594;
            
            if (cond_32593) {
                int64_t j_32595 = sext_i32_i64(j_32589);
                bool x_32596 = sle64((int64_t) 0, j_32595);
                bool y_32597 = slt64(j_32595, iota32_arg_27787);
                bool bounds_check_32598 = x_32596 && y_32597;
                bool index_certs_32599;
                
                if (!bounds_check_32598) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 8) ==
                            -1) {
                            global_failure_args[0] = j_32595;
                            global_failure_args[1] = iota32_arg_27787;
                            ;
                        }
                        return;
                    }
                }
                
                float x_32600 = ((__global float *) mem_43481)[phys_tid_32302 +
                                                               j_32595 *
                                                               (segmap_usable_groups_32535 *
                                                                segmap_group_sizze_32534)];
                int64_t i_32601 = sext_i32_i64(i_32588);
                bool x_32602 = sle64((int64_t) 0, i_32601);
                bool y_32603 = slt64(i_32601, iota32_arg_27787);
                bool bounds_check_32604 = x_32602 && y_32603;
                bool index_certs_32605;
                
                if (!bounds_check_32604) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 9) ==
                            -1) {
                            global_failure_args[0] = i_32601;
                            global_failure_args[1] = iota32_arg_27787;
                            ;
                        }
                        return;
                    }
                }
                
                float y_32606 = ((__global float *) mem_43481)[phys_tid_32302 +
                                                               i_32601 *
                                                               (segmap_usable_groups_32535 *
                                                                segmap_group_sizze_32534)];
                float x_32607 = x_32600 + y_32606;
                float defunc_0_f_res_f_res_t_res_32608 = x_32607 / 2.0F;
                
                defunc_0_f_res_f_res_32594 = defunc_0_f_res_f_res_t_res_32608;
            } else {
                int64_t i_32609 = sext_i32_i64(i_32588);
                bool x_32610 = sle64((int64_t) 0, i_32609);
                bool y_32611 = slt64(i_32609, iota32_arg_27787);
                bool bounds_check_32612 = x_32610 && y_32611;
                bool index_certs_32613;
                
                if (!bounds_check_32612) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 10) ==
                            -1) {
                            global_failure_args[0] = i_32609;
                            global_failure_args[1] = iota32_arg_27787;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_0_f_res_f_res_f_res_32614 = ((__global
                                                           float *) mem_43481)[phys_tid_32302 +
                                                                               i_32609 *
                                                                               (segmap_usable_groups_32535 *
                                                                                segmap_group_sizze_32534)];
                
                defunc_0_f_res_f_res_32594 = defunc_0_f_res_f_res_f_res_32614;
            }
            defunc_0_f_res_32591 = defunc_0_f_res_f_res_32594;
        }
        ((__global float *) mem_43501)[gtid_32301] = defunc_0_f_res_32591;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32534
}
__kernel void mainDetailedzisegmap_32423(__global int *global_failure,
                                         int failure_is_an_option, __global
                                         int64_t *global_failure_args,
                                         int64_t N_27391, int64_t m_27392,
                                         int64_t iota32_arg_27815, __global
                                         unsigned char *defunc_4_map_res_mem_43356,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43423,
                                         __global unsigned char *mem_43463,
                                         __global unsigned char *mem_43467)
{
    #define segmap_group_sizze_32505 (mainDetailedzisegmap_group_sizze_32426)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44795;
    int32_t local_tid_44796;
    int64_t group_sizze_44799;
    int32_t wave_sizze_44798;
    int32_t group_tid_44797;
    
    global_tid_44795 = get_global_id(0);
    local_tid_44796 = get_local_id(0);
    group_sizze_44799 = get_local_size(0);
    wave_sizze_44798 = LOCKSTEP_WIDTH;
    group_tid_44797 = get_group_id(0);
    
    int32_t phys_tid_32423;
    
    phys_tid_32423 = global_tid_44795;
    
    int64_t gtid_32421;
    
    gtid_32421 = squot64(sext_i32_i64(group_tid_44797) *
                         segmap_group_sizze_32505 +
                         sext_i32_i64(local_tid_44796), iota32_arg_27815);
    
    int64_t gtid_32422;
    
    gtid_32422 = sext_i32_i64(group_tid_44797) * segmap_group_sizze_32505 +
        sext_i32_i64(local_tid_44796) - squot64(sext_i32_i64(group_tid_44797) *
                                                segmap_group_sizze_32505 +
                                                sext_i32_i64(local_tid_44796),
                                                iota32_arg_27815) *
        iota32_arg_27815;
    if (slt64(gtid_32421, m_27392) && slt64(gtid_32422, iota32_arg_27815)) {
        int32_t x_32508 = ((__global
                            int32_t *) defunc_3_map_res_mem_43423)[gtid_32421];
        int32_t y_32510 = ((__global int32_t *) mem_43463)[gtid_32421];
        int32_t index_primexp_40607 = sext_i64_i32(gtid_32422);
        bool cond_32512 = slt32(index_primexp_40607, y_32510);
        bool cond_32513;
        
        if (cond_32512) {
            int32_t i_32514 = add32(x_32508, index_primexp_40607);
            int64_t i_32515 = sext_i32_i64(i_32514);
            bool x_32516 = sle64((int64_t) 0, i_32515);
            bool y_32517 = slt64(i_32515, N_27391);
            bool bounds_check_32518 = x_32516 && y_32517;
            bool index_certs_32519;
            
            if (!bounds_check_32518) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 0) ==
                        -1) {
                        global_failure_args[0] = i_32515;
                        global_failure_args[1] = N_27391;
                        ;
                    }
                    return;
                }
            }
            
            float isnan_arg_32520 = ((__global
                                      float *) defunc_4_map_res_mem_43356)[gtid_32421 *
                                                                           N_27391 +
                                                                           i_32515];
            bool isnan_res_32521;
            
            isnan_res_32521 = futrts_isnan32(isnan_arg_32520);
            
            bool cond_t_res_32522 = !isnan_res_32521;
            
            cond_32513 = cond_t_res_32522;
        } else {
            cond_32513 = 0;
        }
        
        float defunc_0_f_res_32523;
        
        if (cond_32513) {
            int32_t i_32524 = add32(x_32508, index_primexp_40607);
            int64_t i_32525 = sext_i32_i64(i_32524);
            bool x_32526 = sle64((int64_t) 0, i_32525);
            bool y_32527 = slt64(i_32525, N_27391);
            bool bounds_check_32528 = x_32526 && y_32527;
            bool index_certs_32529;
            
            if (!bounds_check_32528) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 1) ==
                        -1) {
                        global_failure_args[0] = i_32525;
                        global_failure_args[1] = N_27391;
                        ;
                    }
                    return;
                }
            }
            
            float defunc_0_f_res_t_res_32530 = ((__global
                                                 float *) defunc_4_map_res_mem_43356)[gtid_32421 *
                                                                                      N_27391 +
                                                                                      i_32525];
            
            defunc_0_f_res_32523 = defunc_0_f_res_t_res_32530;
        } else {
            defunc_0_f_res_32523 = INFINITY;
        }
        ((__global float *) mem_43467)[gtid_32421 * iota32_arg_27815 +
                                       gtid_32422] = defunc_0_f_res_32523;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32505
}
__kernel void mainDetailedzisegmap_32481(__global int *global_failure,
                                         int64_t m_27392, __global
                                         unsigned char *defunc_4_map_res_mem_43355,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43423,
                                         __global unsigned char *mem_43463)
{
    #define segmap_group_sizze_32490 (mainDetailedzisegmap_group_sizze_32483)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44790;
    int32_t local_tid_44791;
    int64_t group_sizze_44794;
    int32_t wave_sizze_44793;
    int32_t group_tid_44792;
    
    global_tid_44790 = get_global_id(0);
    local_tid_44791 = get_local_id(0);
    group_sizze_44794 = get_local_size(0);
    wave_sizze_44793 = LOCKSTEP_WIDTH;
    group_tid_44792 = get_group_id(0);
    
    int32_t phys_tid_32481;
    
    phys_tid_32481 = global_tid_44790;
    
    int64_t gtid_32480;
    
    gtid_32480 = sext_i32_i64(group_tid_44792) * segmap_group_sizze_32490 +
        sext_i32_i64(local_tid_44791);
    if (slt64(gtid_32480, m_27392)) {
        int32_t x_32493 = ((__global
                            int32_t *) defunc_4_map_res_mem_43355)[gtid_32480];
        int32_t x_32494 = ((__global
                            int32_t *) defunc_3_map_res_mem_43423)[gtid_32480];
        int32_t y_32495 = sub32(x_32493, x_32494);
        
        ((__global int32_t *) mem_43463)[gtid_32480] = y_32495;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32490
}
__kernel void mainDetailedzisegmap_32659(__global int *global_failure,
                                         int64_t N_27391, int64_t m_27392,
                                         int32_t n_27395,
                                         int64_t iota32_arg_27787,
                                         int64_t iota32_arg_27815,
                                         int64_t num_groups_32758, __global
                                         unsigned char *defunc_4_map_res_mem_43355,
                                         __global
                                         unsigned char *defunc_4_map_res_mem_43356,
                                         __global
                                         unsigned char *defunc_4_map_res_mem_43357,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43422,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43423,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43424,
                                         __global
                                         unsigned char *defunc_0_f_res_mem_43457,
                                         __global unsigned char *mem_43460,
                                         __global unsigned char *mem_43504,
                                         __global unsigned char *mem_43518,
                                         __global unsigned char *mem_43532,
                                         __global unsigned char *mem_43547,
                                         __global unsigned char *mem_43550,
                                         __global unsigned char *mem_43552,
                                         __global unsigned char *mem_43554)
{
    #define segmap_group_sizze_32757 (mainDetailedzisegmap_group_sizze_32661)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44814;
    int32_t local_tid_44815;
    int64_t group_sizze_44818;
    int32_t wave_sizze_44817;
    int32_t group_tid_44816;
    
    global_tid_44814 = get_global_id(0);
    local_tid_44815 = get_local_id(0);
    group_sizze_44818 = get_local_size(0);
    wave_sizze_44817 = LOCKSTEP_WIDTH;
    group_tid_44816 = get_group_id(0);
    
    int32_t phys_tid_32659;
    
    phys_tid_32659 = global_tid_44814;
    
    int32_t phys_group_id_44819;
    
    phys_group_id_44819 = get_group_id(0);
    for (int32_t i_44820 = 0; i_44820 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27392, segmap_group_sizze_32757)) -
                   phys_group_id_44819, sext_i64_i32(num_groups_32758));
         i_44820++) {
        int32_t virt_group_id_44821 = phys_group_id_44819 + i_44820 *
                sext_i64_i32(num_groups_32758);
        int64_t gtid_32658 = sext_i32_i64(virt_group_id_44821) *
                segmap_group_sizze_32757 + sext_i32_i64(local_tid_44815);
        
        if (slt64(gtid_32658, m_27392)) {
            int32_t x_32764 = ((__global
                                int32_t *) defunc_4_map_res_mem_43355)[gtid_32658];
            int32_t x_32765 = ((__global
                                int32_t *) defunc_3_map_res_mem_43423)[gtid_32658];
            float x_32766 = ((__global
                              float *) defunc_3_map_res_mem_43424)[gtid_32658];
            int32_t x_32767 = ((__global
                                int32_t *) defunc_3_map_res_mem_43422)[gtid_32658];
            float x_32768 = ((__global
                              float *) defunc_0_f_res_mem_43457)[gtid_32658];
            int32_t y_32771 = sub32(x_32764, x_32765);
            float discard_42518;
            float scanacc_42514 = 0.0F;
            
            for (int64_t i_42516 = 0; i_42516 < iota32_arg_27815; i_42516++) {
                int32_t index_primexp_42549 = sext_i64_i32(i_42516);
                bool cond_32777 = sle32(y_32771, index_primexp_42549);
                float defunc_0_f_res_32778;
                
                if (cond_32777) {
                    defunc_0_f_res_32778 = 0.0F;
                } else {
                    bool cond_32779 = index_primexp_42549 == 0;
                    float defunc_0_f_res_f_res_32780;
                    
                    if (cond_32779) {
                        defunc_0_f_res_f_res_32780 = x_32768;
                    } else {
                        int32_t i_32781 = add32(x_32765, index_primexp_42549);
                        int64_t i_32782 = sext_i32_i64(i_32781);
                        float x_32783 = ((__global
                                          float *) defunc_4_map_res_mem_43356)[gtid_32658 *
                                                                               N_27391 +
                                                                               i_32782];
                        int32_t x_32784 = sub32(x_32765, x_32767);
                        int32_t i_32785 = add32(x_32784, index_primexp_42549);
                        int64_t i_32786 = sext_i32_i64(i_32785);
                        float y_32787 = ((__global
                                          float *) defunc_4_map_res_mem_43356)[gtid_32658 *
                                                                               N_27391 +
                                                                               i_32786];
                        float defunc_0_f_res_f_res_f_res_32788 = x_32783 -
                              y_32787;
                        
                        defunc_0_f_res_f_res_32780 =
                            defunc_0_f_res_f_res_f_res_32788;
                    }
                    defunc_0_f_res_32778 = defunc_0_f_res_f_res_32780;
                }
                
                float defunc_1_op_res_32775 = defunc_0_f_res_32778 +
                      scanacc_42514;
                
                ((__global float *) mem_43504)[phys_tid_32659 + i_42516 *
                                               (num_groups_32758 *
                                                segmap_group_sizze_32757)] =
                    defunc_1_op_res_32775;
                
                float scanacc_tmp_44822 = defunc_1_op_res_32775;
                
                scanacc_42514 = scanacc_tmp_44822;
            }
            discard_42518 = scanacc_42514;
            
            float i32_res_32789 = sitofp_i32_f32(x_32765);
            float sqrt_res_32790;
            
            sqrt_res_32790 = futrts_sqrt32(i32_res_32789);
            
            float y_32791 = x_32766 * sqrt_res_32790;
            bool defunc_0_f_res_32793;
            int32_t defunc_0_f_res_32794;
            float defunc_0_f_res_32795;
            bool redout_42520;
            int32_t redout_42521;
            float redout_42522;
            
            redout_42520 = 0;
            redout_42521 = -1;
            redout_42522 = 0.0F;
            for (int64_t i_42524 = 0; i_42524 < iota32_arg_27787; i_42524++) {
                float x_32811 = ((__global float *) mem_43504)[phys_tid_32659 +
                                                               i_42524 *
                                                               (num_groups_32758 *
                                                                segmap_group_sizze_32757)];
                float x_32812 = ((__global float *) mem_43460)[i_42524];
                int32_t index_primexp_42550 = sext_i64_i32(i_42524);
                int32_t x_32813 = index_primexp_42550;
                float defunc_0_f_res_32814 = x_32811 / y_32791;
                bool cond_32815 = slt32(index_primexp_42550, y_32771);
                bool isnan_res_32816;
                
                isnan_res_32816 = futrts_isnan32(defunc_0_f_res_32814);
                
                bool cond_t_res_32817 = !isnan_res_32816;
                bool x_32818 = cond_32815 && cond_t_res_32817;
                float abs_res_32819 = (float) fabs(defunc_0_f_res_32814);
                bool defunc_2_f_res_t_res_32820 = x_32812 < abs_res_32819;
                bool x_32821 = x_32818 && defunc_2_f_res_t_res_32820;
                float defunc_1_f_res_32822;
                
                if (cond_32815) {
                    defunc_1_f_res_32822 = defunc_0_f_res_32814;
                } else {
                    defunc_1_f_res_32822 = 0.0F;
                }
                
                bool defunc_1_op_res_32801;
                int32_t defunc_1_op_res_32802;
                
                if (redout_42520) {
                    defunc_1_op_res_32801 = redout_42520;
                    defunc_1_op_res_32802 = redout_42521;
                } else {
                    bool x_32803 = x_32821 && x_32821;
                    bool x_32804 = !x_32821;
                    bool y_32805 = x_32804 && redout_42520;
                    bool defunc_1_op_res_f_res_32806 = x_32803 || y_32805;
                    int32_t defunc_1_op_res_f_res_32807;
                    
                    if (x_32821) {
                        defunc_1_op_res_f_res_32807 = x_32813;
                    } else {
                        defunc_1_op_res_f_res_32807 = redout_42521;
                    }
                    defunc_1_op_res_32801 = defunc_1_op_res_f_res_32806;
                    defunc_1_op_res_32802 = defunc_1_op_res_f_res_32807;
                }
                
                float defunc_1_op_res_32810 = defunc_1_f_res_32822 +
                      redout_42522;
                
                ((__global float *) mem_43518)[phys_tid_32659 + i_42524 *
                                               (num_groups_32758 *
                                                segmap_group_sizze_32757)] =
                    defunc_0_f_res_32814;
                
                bool redout_tmp_44824 = defunc_1_op_res_32801;
                int32_t redout_tmp_44825 = defunc_1_op_res_32802;
                float redout_tmp_44826 = defunc_1_op_res_32810;
                
                redout_42520 = redout_tmp_44824;
                redout_42521 = redout_tmp_44825;
                redout_42522 = redout_tmp_44826;
            }
            defunc_0_f_res_32793 = redout_42520;
            defunc_0_f_res_32794 = redout_42521;
            defunc_0_f_res_32795 = redout_42522;
            
            bool cond_32823 = y_32771 == 0;
            float defunc_0_f_res_32824;
            
            if (cond_32823) {
                defunc_0_f_res_32824 = 0.0F;
            } else {
                float i32_res_32825 = sitofp_i32_f32(y_32771);
                float defunc_0_f_res_f_res_32826 = defunc_0_f_res_32795 /
                      i32_res_32825;
                
                defunc_0_f_res_32824 = defunc_0_f_res_f_res_32826;
            }
            
            bool cond_32827 = !defunc_0_f_res_32793;
            int32_t fst_breakzq_32828;
            
            if (cond_32827) {
                fst_breakzq_32828 = -1;
            } else {
                bool cond_32829 = slt32(defunc_0_f_res_32794, y_32771);
                int32_t adjustValInds_res_32830;
                
                if (cond_32829) {
                    int32_t i_32831 = add32(x_32765, defunc_0_f_res_32794);
                    int64_t i_32832 = sext_i32_i64(i_32831);
                    int32_t x_32833 = ((__global
                                        int32_t *) defunc_4_map_res_mem_43357)[gtid_32658 *
                                                                               N_27391 +
                                                                               i_32832];
                    int32_t adjustValInds_res_t_res_32834 = sub32(x_32833,
                                                                  n_27395);
                    
                    adjustValInds_res_32830 = adjustValInds_res_t_res_32834;
                } else {
                    adjustValInds_res_32830 = -1;
                }
                fst_breakzq_32828 = adjustValInds_res_32830;
            }
            
            bool cond_32835 = sle32(x_32765, 5);
            bool cond_f_res_32836 = sle32(y_32771, 5);
            bool x_32837 = !cond_32835;
            bool y_32838 = cond_f_res_32836 && x_32837;
            bool cond_32839 = cond_32835 || y_32838;
            int32_t fst_breakzq_32840;
            
            if (cond_32839) {
                fst_breakzq_32840 = -2;
            } else {
                fst_breakzq_32840 = fst_breakzq_32828;
            }
            for (int64_t i_44828 = 0; i_44828 < iota32_arg_27815; i_44828++) {
                ((__global float *) mem_43532)[phys_tid_32659 + i_44828 *
                                               (num_groups_32758 *
                                                segmap_group_sizze_32757)] =
                    NAN;
            }
            for (int64_t write_iter_42526 = 0; write_iter_42526 <
                 iota32_arg_27815; write_iter_42526++) {
                int32_t index_primexp_42552 = sext_i64_i32(write_iter_42526);
                bool cond_32846 = slt32(index_primexp_42552, y_32771);
                int32_t defunc_0_f_res_32847;
                
                if (cond_32846) {
                    int32_t i_32848 = add32(x_32765, index_primexp_42552);
                    int64_t i_32849 = sext_i32_i64(i_32848);
                    int32_t x_32850 = ((__global
                                        int32_t *) defunc_4_map_res_mem_43357)[gtid_32658 *
                                                                               N_27391 +
                                                                               i_32849];
                    int32_t defunc_0_f_res_t_res_32851 = sub32(x_32850,
                                                               n_27395);
                    
                    defunc_0_f_res_32847 = defunc_0_f_res_t_res_32851;
                } else {
                    defunc_0_f_res_32847 = -1;
                }
                
                int64_t defunc_0_f_res_32852 =
                        sext_i32_i64(defunc_0_f_res_32847);
                bool less_than_zzero_42530 = slt64(defunc_0_f_res_32852,
                                                   (int64_t) 0);
                bool greater_than_sizze_42531 = sle64(iota32_arg_27815,
                                                      defunc_0_f_res_32852);
                bool outside_bounds_dim_42532 = less_than_zzero_42530 ||
                     greater_than_sizze_42531;
                
                if (!outside_bounds_dim_42532) {
                    for (int64_t i_44830 = 0; i_44830 < (int64_t) 1;
                         i_44830++) {
                        ((__global float *) mem_43532)[phys_tid_32659 +
                                                       (defunc_0_f_res_32852 +
                                                        i_44830) *
                                                       (num_groups_32758 *
                                                        segmap_group_sizze_32757)] =
                            ((__global float *) mem_43518)[phys_tid_32659 +
                                                           num_groups_32758 *
                                                           segmap_group_sizze_32757 *
                                                           write_iter_42526 +
                                                           i_44830 *
                                                           (num_groups_32758 *
                                                            segmap_group_sizze_32757)];
                    }
                }
            }
            for (int64_t i_44831 = 0; i_44831 < iota32_arg_27787; i_44831++) {
                ((__global float *) mem_43547)[i_44831 * m_27392 + gtid_32658] =
                    ((__global float *) mem_43532)[phys_tid_32659 + i_44831 *
                                                   (num_groups_32758 *
                                                    segmap_group_sizze_32757)];
            }
            for (int64_t i_44832 = 0; i_44832 < iota32_arg_27787; i_44832++) {
                ((__global float *) mem_43550)[i_44832 * m_27392 + gtid_32658] =
                    ((__global float *) mem_43518)[phys_tid_32659 + i_44832 *
                                                   (num_groups_32758 *
                                                    segmap_group_sizze_32757)];
            }
            ((__global int32_t *) mem_43552)[gtid_32658] = fst_breakzq_32840;
            ((__global float *) mem_43554)[gtid_32658] = defunc_0_f_res_32824;
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32757
}
__kernel void mainDetailedzisegmap_32959(__global int *global_failure,
                                         int64_t N_27391, int64_t m_27392,
                                         int32_t n_27395,
                                         int64_t iota32_arg_27787,
                                         int64_t iota32_arg_27815, __global
                                         unsigned char *defunc_4_map_res_mem_43357,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43423,
                                         __global unsigned char *mem_43577,
                                         __global unsigned char *mem_43594,
                                         __global unsigned char *mem_43602)
{
    #define segmap_group_sizze_33262 (mainDetailedzisegmap_group_sizze_32962)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45031;
    int32_t local_tid_45032;
    int64_t group_sizze_45035;
    int32_t wave_sizze_45034;
    int32_t group_tid_45033;
    
    global_tid_45031 = get_global_id(0);
    local_tid_45032 = get_local_id(0);
    group_sizze_45035 = get_local_size(0);
    wave_sizze_45034 = LOCKSTEP_WIDTH;
    group_tid_45033 = get_group_id(0);
    
    int32_t phys_tid_32959;
    
    phys_tid_32959 = global_tid_45031;
    
    int64_t gtid_32957;
    
    gtid_32957 = squot64(sext_i32_i64(group_tid_45033) *
                         segmap_group_sizze_33262 +
                         sext_i32_i64(local_tid_45032), iota32_arg_27815);
    
    int64_t gtid_32958;
    
    gtid_32958 = sext_i32_i64(group_tid_45033) * segmap_group_sizze_33262 +
        sext_i32_i64(local_tid_45032) - squot64(sext_i32_i64(group_tid_45033) *
                                                segmap_group_sizze_33262 +
                                                sext_i32_i64(local_tid_45032),
                                                iota32_arg_27815) *
        iota32_arg_27815;
    if (slt64(gtid_32957, m_27392) && slt64(gtid_32958, iota32_arg_27815)) {
        int32_t y_33267 = ((__global int32_t *) mem_43577)[gtid_32957];
        int32_t index_primexp_40637 = sext_i64_i32(gtid_32958);
        int64_t binop_x_40625 = iota32_arg_27815 * gtid_32957;
        int64_t binop_x_40626 = gtid_32958 + binop_x_40625;
        int64_t new_index_40627 = squot64(binop_x_40626, iota32_arg_27787);
        int64_t binop_y_40633 = iota32_arg_27787 * new_index_40627;
        int64_t new_index_40634 = binop_x_40626 - binop_y_40633;
        float write_value_33271 = ((__global
                                    float *) mem_43594)[new_index_40627 *
                                                        iota32_arg_27787 +
                                                        new_index_40634];
        bool cond_33272 = slt32(index_primexp_40637, y_33267);
        int32_t defunc_0_f_res_33273;
        
        if (cond_33272) {
            int32_t x_33265 = ((__global
                                int32_t *) defunc_3_map_res_mem_43423)[gtid_32957];
            int32_t i_33274 = add32(x_33265, index_primexp_40637);
            int64_t i_33275 = sext_i32_i64(i_33274);
            int32_t x_33276 = ((__global
                                int32_t *) defunc_4_map_res_mem_43357)[gtid_32957 *
                                                                       N_27391 +
                                                                       i_33275];
            int32_t defunc_0_f_res_t_res_33277 = sub32(x_33276, n_27395);
            
            defunc_0_f_res_33273 = defunc_0_f_res_t_res_33277;
        } else {
            defunc_0_f_res_33273 = -1;
        }
        
        int64_t defunc_0_f_res_33278 = sext_i32_i64(defunc_0_f_res_33273);
        
        if ((sle64((int64_t) 0, gtid_32957) && slt64(gtid_32957, m_27392)) &&
            (sle64((int64_t) 0, defunc_0_f_res_33278) &&
             slt64(defunc_0_f_res_33278, iota32_arg_27815))) {
            ((__global float *) mem_43602)[gtid_32957 * iota32_arg_27815 +
                                           defunc_0_f_res_33278] =
                write_value_33271;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33262
}
__kernel void mainDetailedzisegmap_33012(__global int *global_failure,
                                         int64_t N_27391, int64_t m_27392,
                                         int32_t n_27395, __global
                                         unsigned char *defunc_4_map_res_mem_43357,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43423,
                                         __global unsigned char *mem_43577,
                                         __global unsigned char *mem_43587,
                                         __global unsigned char *mem_43589,
                                         __global unsigned char *mem_43591,
                                         __global unsigned char *mem_43597,
                                         __global unsigned char *mem_43599)
{
    #define segmap_group_sizze_33217 (mainDetailedzisegmap_group_sizze_33014)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45026;
    int32_t local_tid_45027;
    int64_t group_sizze_45030;
    int32_t wave_sizze_45029;
    int32_t group_tid_45028;
    
    global_tid_45026 = get_global_id(0);
    local_tid_45027 = get_local_id(0);
    group_sizze_45030 = get_local_size(0);
    wave_sizze_45029 = LOCKSTEP_WIDTH;
    group_tid_45028 = get_group_id(0);
    
    int32_t phys_tid_33012;
    
    phys_tid_33012 = global_tid_45026;
    
    int64_t gtid_33011;
    
    gtid_33011 = sext_i32_i64(group_tid_45028) * segmap_group_sizze_33217 +
        sext_i32_i64(local_tid_45027);
    if (slt64(gtid_33011, m_27392)) {
        int32_t x_33221 = ((__global
                            int32_t *) defunc_3_map_res_mem_43423)[gtid_33011];
        int32_t y_33223 = ((__global int32_t *) mem_43577)[gtid_33011];
        bool defunc_0_f_res_33224 = ((__global bool *) mem_43587)[gtid_33011];
        bool cond_33227 = y_33223 == 0;
        float defunc_0_f_res_33228;
        
        if (cond_33227) {
            defunc_0_f_res_33228 = 0.0F;
        } else {
            float defunc_0_f_res_33226 = ((__global
                                           float *) mem_43591)[gtid_33011];
            float i32_res_33229 = sitofp_i32_f32(y_33223);
            float defunc_0_f_res_f_res_33230 = defunc_0_f_res_33226 /
                  i32_res_33229;
            
            defunc_0_f_res_33228 = defunc_0_f_res_f_res_33230;
        }
        
        bool cond_33231 = !defunc_0_f_res_33224;
        int32_t fst_breakzq_33232;
        
        if (cond_33231) {
            fst_breakzq_33232 = -1;
        } else {
            int32_t defunc_0_f_res_33225 = ((__global
                                             int32_t *) mem_43589)[gtid_33011];
            bool cond_33233 = slt32(defunc_0_f_res_33225, y_33223);
            int32_t adjustValInds_res_33234;
            
            if (cond_33233) {
                int32_t i_33235 = add32(x_33221, defunc_0_f_res_33225);
                int64_t i_33236 = sext_i32_i64(i_33235);
                int32_t x_33237 = ((__global
                                    int32_t *) defunc_4_map_res_mem_43357)[gtid_33011 *
                                                                           N_27391 +
                                                                           i_33236];
                int32_t adjustValInds_res_t_res_33238 = sub32(x_33237, n_27395);
                
                adjustValInds_res_33234 = adjustValInds_res_t_res_33238;
            } else {
                adjustValInds_res_33234 = -1;
            }
            fst_breakzq_33232 = adjustValInds_res_33234;
        }
        
        bool cond_33239 = sle32(x_33221, 5);
        bool cond_f_res_33240 = sle32(y_33223, 5);
        bool x_33241 = !cond_33239;
        bool y_33242 = cond_f_res_33240 && x_33241;
        bool cond_33243 = cond_33239 || y_33242;
        int32_t fst_breakzq_33244;
        
        if (cond_33243) {
            fst_breakzq_33244 = -2;
        } else {
            fst_breakzq_33244 = fst_breakzq_33232;
        }
        ((__global int32_t *) mem_43597)[gtid_33011] = fst_breakzq_33244;
        ((__global float *) mem_43599)[gtid_33011] = defunc_0_f_res_33228;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33217
}
__kernel void mainDetailedzisegmap_33084(__global int *global_failure,
                                         int64_t m_27392, __global
                                         unsigned char *defunc_3_map_res_mem_43423,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43424,
                                         __global unsigned char *mem_43584)
{
    #define segmap_group_sizze_33169 (mainDetailedzisegmap_group_sizze_33086)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44923;
    int32_t local_tid_44924;
    int64_t group_sizze_44927;
    int32_t wave_sizze_44926;
    int32_t group_tid_44925;
    
    global_tid_44923 = get_global_id(0);
    local_tid_44924 = get_local_id(0);
    group_sizze_44927 = get_local_size(0);
    wave_sizze_44926 = LOCKSTEP_WIDTH;
    group_tid_44925 = get_group_id(0);
    
    int32_t phys_tid_33084;
    
    phys_tid_33084 = global_tid_44923;
    
    int64_t gtid_33083;
    
    gtid_33083 = sext_i32_i64(group_tid_44925) * segmap_group_sizze_33169 +
        sext_i32_i64(local_tid_44924);
    if (slt64(gtid_33083, m_27392)) {
        int32_t x_33172 = ((__global
                            int32_t *) defunc_3_map_res_mem_43423)[gtid_33083];
        float x_33173 = ((__global
                          float *) defunc_3_map_res_mem_43424)[gtid_33083];
        float i32_res_33174 = sitofp_i32_f32(x_33172);
        float sqrt_res_33175;
        
        sqrt_res_33175 = futrts_sqrt32(i32_res_33174);
        
        float y_33176 = x_33173 * sqrt_res_33175;
        
        ((__global float *) mem_43584)[gtid_33083] = y_33176;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33169
}
__kernel void mainDetailedzisegmap_33126(__global int *global_failure,
                                         int64_t m_27392, __global
                                         unsigned char *defunc_4_map_res_mem_43355,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43423,
                                         __global unsigned char *mem_43577)
{
    #define segmap_group_sizze_33135 (mainDetailedzisegmap_group_sizze_33128)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44862;
    int32_t local_tid_44863;
    int64_t group_sizze_44866;
    int32_t wave_sizze_44865;
    int32_t group_tid_44864;
    
    global_tid_44862 = get_global_id(0);
    local_tid_44863 = get_local_id(0);
    group_sizze_44866 = get_local_size(0);
    wave_sizze_44865 = LOCKSTEP_WIDTH;
    group_tid_44864 = get_group_id(0);
    
    int32_t phys_tid_33126;
    
    phys_tid_33126 = global_tid_44862;
    
    int64_t gtid_33125;
    
    gtid_33125 = sext_i32_i64(group_tid_44864) * segmap_group_sizze_33135 +
        sext_i32_i64(local_tid_44863);
    if (slt64(gtid_33125, m_27392)) {
        int32_t x_33138 = ((__global
                            int32_t *) defunc_4_map_res_mem_43355)[gtid_33125];
        int32_t x_33139 = ((__global
                            int32_t *) defunc_3_map_res_mem_43423)[gtid_33125];
        int32_t y_33140 = sub32(x_33138, x_33139);
        
        ((__global int32_t *) mem_43577)[gtid_33125] = y_33140;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33135
}
__kernel void mainDetailedzisegmap_intragroup_30130(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_42741_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_42731_backing_aligned_1,
                                                    int32_t k2p2zq_27405,
                                                    int64_t i32_res_27407,
                                                    int32_t m_27538,
                                                    int64_t i32_res_27540,
                                                    int64_t i32_res_27555,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_42727,
                                                    __global
                                                    unsigned char *mem_42751)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42741_backing_1 = (__local volatile
                                                           char *) mem_42741_backing_aligned_0;
    __local volatile char *restrict mem_42731_backing_0 = (__local volatile
                                                           char *) mem_42731_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44010;
    int32_t local_tid_44011;
    int64_t group_sizze_44014;
    int32_t wave_sizze_44013;
    int32_t group_tid_44012;
    
    global_tid_44010 = get_global_id(0);
    local_tid_44011 = get_local_id(0);
    group_sizze_44014 = get_local_size(0);
    wave_sizze_44013 = LOCKSTEP_WIDTH;
    group_tid_44012 = get_group_id(0);
    
    int32_t phys_tid_30130;
    
    phys_tid_30130 = group_tid_44012;
    
    int32_t ltid_pre_44015;
    
    ltid_pre_44015 = local_tid_44011;
    
    int64_t gtid_30085;
    
    gtid_30085 = sext_i32_i64(group_tid_44012);
    
    __local char *mem_42731;
    
    mem_42731 = (__local char *) mem_42731_backing_0;
    
    int64_t gtid_30088 = sext_i32_i64(ltid_pre_44015);
    int32_t phys_tid_30089 = local_tid_44011;
    int32_t index_primexp_40564 = sext_i64_i32(gtid_30088);
    int32_t defunc_0_f_res_30255 = sdiv32(index_primexp_40564, m_27538);
    int32_t defunc_0_f_res_30256 = smod32(index_primexp_40564, m_27538);
    bool cond_30257 = slt32(defunc_0_f_res_30256, k2p2zq_27405);
    float defunc_0_f_res_30258;
    
    if (cond_30257) {
        int64_t i_30259 = sext_i32_i64(defunc_0_f_res_30255);
        int64_t j_30260 = sext_i32_i64(defunc_0_f_res_30256);
        float defunc_0_f_res_t_res_30261 = ((__global
                                             float *) defunc_3_map_res_mem_42727)[gtid_30085 *
                                                                                  (i32_res_27407 *
                                                                                   i32_res_27407) +
                                                                                  i_30259 *
                                                                                  i32_res_27407 +
                                                                                  j_30260];
        
        defunc_0_f_res_30258 = defunc_0_f_res_t_res_30261;
    } else {
        int32_t y_30262 = add32(k2p2zq_27405, defunc_0_f_res_30255);
        bool cond_30263 = defunc_0_f_res_30256 == y_30262;
        float defunc_0_f_res_f_res_30264;
        
        if (cond_30263) {
            defunc_0_f_res_f_res_30264 = 1.0F;
        } else {
            defunc_0_f_res_f_res_30264 = 0.0F;
        }
        defunc_0_f_res_30258 = defunc_0_f_res_f_res_30264;
    }
    ((__local float *) mem_42731)[gtid_30088] = defunc_0_f_res_30258;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_42741;
    
    mem_42741 = (__local char *) mem_42741_backing_1;
    for (int32_t i_30266 = 0; i_30266 < k2p2zq_27405; i_30266++) {
        int64_t i32_res_30268 = sext_i32_i64(i_30266);
        float v1_30269 = ((__local float *) mem_42731)[i32_res_30268];
        bool cond_30270 = v1_30269 == 0.0F;
        int64_t gtid_30101 = sext_i32_i64(ltid_pre_44015);
        int32_t phys_tid_30102 = local_tid_44011;
        int32_t defunc_0_f_res_30273 = sext_i64_i32(gtid_30101);
        int32_t defunc_0_f_res_30274 = sdiv32(defunc_0_f_res_30273, m_27538);
        int32_t defunc_0_f_res_30275 = smod32(defunc_0_f_res_30273, m_27538);
        float defunc_0_f_res_30276;
        
        if (cond_30270) {
            int32_t x_30277 = mul32(m_27538, defunc_0_f_res_30274);
            int32_t i32_arg_30278 = add32(defunc_0_f_res_30275, x_30277);
            int64_t i32_res_30279 = sext_i32_i64(i32_arg_30278);
            float defunc_0_f_res_t_res_30280 = ((__local
                                                 float *) mem_42731)[i32_res_30279];
            
            defunc_0_f_res_30276 = defunc_0_f_res_t_res_30280;
        } else {
            int64_t i32_res_30281 = sext_i32_i64(defunc_0_f_res_30275);
            float x_30282 = ((__local float *) mem_42731)[i32_res_30281];
            float x_30283 = x_30282 / v1_30269;
            int32_t y_30284 = sub32(k2p2zq_27405, 1);
            bool cond_30285 = slt32(defunc_0_f_res_30274, y_30284);
            float defunc_0_f_res_f_res_30286;
            
            if (cond_30285) {
                int32_t x_30287 = add32(1, defunc_0_f_res_30274);
                int32_t x_30288 = mul32(m_27538, x_30287);
                int32_t i32_arg_30289 = add32(defunc_0_f_res_30275, x_30288);
                int64_t i32_res_30290 = sext_i32_i64(i32_arg_30289);
                float x_30291 = ((__local float *) mem_42731)[i32_res_30290];
                int32_t i32_arg_30292 = add32(i_30266, x_30288);
                int64_t i32_res_30293 = sext_i32_i64(i32_arg_30292);
                float x_30294 = ((__local float *) mem_42731)[i32_res_30293];
                float y_30295 = x_30283 * x_30294;
                float defunc_0_f_res_f_res_t_res_30296 = x_30291 - y_30295;
                
                defunc_0_f_res_f_res_30286 = defunc_0_f_res_f_res_t_res_30296;
            } else {
                defunc_0_f_res_f_res_30286 = x_30283;
            }
            defunc_0_f_res_30276 = defunc_0_f_res_f_res_30286;
        }
        ((__local float *) mem_42741)[gtid_30101] = defunc_0_f_res_30276;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_30128 = sext_i32_i64(ltid_pre_44015);
        int32_t phys_tid_30129 = local_tid_44011;
        float write_value_30299 = ((__local float *) mem_42741)[write_i_30128];
        
        if (sle64((int64_t) 0, write_i_30128) && slt64(write_i_30128,
                                                       i32_res_27540)) {
            ((__local float *) mem_42731)[write_i_30128] = write_value_30299;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    for (int64_t i_44017 = 0; i_44017 < sdiv_up64(i32_res_27407 *
                                                  i32_res_27407 -
                                                  sext_i32_i64(local_tid_44011),
                                                  i32_res_27540); i_44017++) {
        ((__global float *) mem_42751)[gtid_30085 * (i32_res_27407 *
                                                     i32_res_27407) +
                                       squot64(i_44017 * i32_res_27540 +
                                               sext_i32_i64(local_tid_44011),
                                               i32_res_27407) * i32_res_27407 +
                                       (i_44017 * i32_res_27540 +
                                        sext_i32_i64(local_tid_44011) -
                                        squot64(i_44017 * i32_res_27540 +
                                                sext_i32_i64(local_tid_44011),
                                                i32_res_27407) *
                                        i32_res_27407)] = ((__local
                                                            float *) mem_42731)[i32_res_27407 +
                                                                                (squot64(i_44017 *
                                                                                         i32_res_27540 +
                                                                                         sext_i32_i64(local_tid_44011),
                                                                                         i32_res_27407) *
                                                                                 i32_res_27555 +
                                                                                 (i_44017 *
                                                                                  i32_res_27540 +
                                                                                  sext_i32_i64(local_tid_44011) -
                                                                                  squot64(i_44017 *
                                                                                          i32_res_27540 +
                                                                                          sext_i32_i64(local_tid_44011),
                                                                                          i32_res_27407) *
                                                                                  i32_res_27407))];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_3:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_30357(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_42772_backing_aligned_0,
                                                    int64_t m_27392,
                                                    int32_t k2p2zq_27405,
                                                    int32_t m_27538,
                                                    int64_t i32_res_27540,
                                                    int32_t i_30752,
                                                    int64_t i32_res_30754,
                                                    int64_t ctx_param_ext_42758,
                                                    int64_t ctx_param_ext_42759,
                                                    int64_t ctx_param_ext_42761,
                                                    __global
                                                    unsigned char *mem_param_42763,
                                                    __global
                                                    unsigned char *mem_42768,
                                                    __global
                                                    unsigned char *mem_42776)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42772_backing_0 = (__local volatile
                                                           char *) mem_42772_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44044;
    int32_t local_tid_44045;
    int64_t group_sizze_44048;
    int32_t wave_sizze_44047;
    int32_t group_tid_44046;
    
    global_tid_44044 = get_global_id(0);
    local_tid_44045 = get_local_id(0);
    group_sizze_44048 = get_local_size(0);
    wave_sizze_44047 = LOCKSTEP_WIDTH;
    group_tid_44046 = get_group_id(0);
    
    int32_t phys_tid_30357;
    
    phys_tid_30357 = group_tid_44046;
    
    int32_t ltid_pre_44049;
    
    ltid_pre_44049 = local_tid_44045;
    
    int64_t gtid_30325;
    
    gtid_30325 = sext_i32_i64(group_tid_44046);
    
    float v1_30767 = ((__global float *) mem_param_42763)[ctx_param_ext_42758 +
                                                          (gtid_30325 *
                                                           ctx_param_ext_42759 +
                                                           i32_res_30754 *
                                                           ctx_param_ext_42761)];
    bool cond_30768 = v1_30767 == 0.0F;
    __local char *mem_42772;
    
    mem_42772 = (__local char *) mem_42772_backing_0;
    
    int64_t gtid_30328 = sext_i32_i64(ltid_pre_44049);
    int32_t phys_tid_30329 = local_tid_44045;
    int32_t defunc_0_f_res_30771 = sext_i64_i32(gtid_30328);
    int32_t defunc_0_f_res_30772 = sdiv32(defunc_0_f_res_30771, m_27538);
    int32_t defunc_0_f_res_30773 = smod32(defunc_0_f_res_30771, m_27538);
    float defunc_0_f_res_30774;
    
    if (cond_30768) {
        int32_t x_30775 = mul32(m_27538, defunc_0_f_res_30772);
        int32_t i32_arg_30776 = add32(defunc_0_f_res_30773, x_30775);
        int64_t i32_res_30777 = sext_i32_i64(i32_arg_30776);
        float defunc_0_f_res_t_res_30778 = ((__global
                                             float *) mem_param_42763)[ctx_param_ext_42758 +
                                                                       (gtid_30325 *
                                                                        ctx_param_ext_42759 +
                                                                        i32_res_30777 *
                                                                        ctx_param_ext_42761)];
        
        defunc_0_f_res_30774 = defunc_0_f_res_t_res_30778;
    } else {
        int64_t i32_res_30779 = sext_i32_i64(defunc_0_f_res_30773);
        float x_30780 = ((__global
                          float *) mem_param_42763)[ctx_param_ext_42758 +
                                                    (gtid_30325 *
                                                     ctx_param_ext_42759 +
                                                     i32_res_30779 *
                                                     ctx_param_ext_42761)];
        float x_30781 = x_30780 / v1_30767;
        int32_t y_30782 = sub32(k2p2zq_27405, 1);
        bool cond_30783 = slt32(defunc_0_f_res_30772, y_30782);
        float defunc_0_f_res_f_res_30784;
        
        if (cond_30783) {
            int32_t x_30785 = add32(1, defunc_0_f_res_30772);
            int32_t x_30786 = mul32(m_27538, x_30785);
            int32_t i32_arg_30787 = add32(defunc_0_f_res_30773, x_30786);
            int64_t i32_res_30788 = sext_i32_i64(i32_arg_30787);
            float x_30789 = ((__global
                              float *) mem_param_42763)[ctx_param_ext_42758 +
                                                        (gtid_30325 *
                                                         ctx_param_ext_42759 +
                                                         i32_res_30788 *
                                                         ctx_param_ext_42761)];
            int32_t i32_arg_30790 = add32(i_30752, x_30786);
            int64_t i32_res_30791 = sext_i32_i64(i32_arg_30790);
            float x_30792 = ((__global
                              float *) mem_param_42763)[ctx_param_ext_42758 +
                                                        (gtid_30325 *
                                                         ctx_param_ext_42759 +
                                                         i32_res_30791 *
                                                         ctx_param_ext_42761)];
            float y_30793 = x_30781 * x_30792;
            float defunc_0_f_res_f_res_t_res_30794 = x_30789 - y_30793;
            
            defunc_0_f_res_f_res_30784 = defunc_0_f_res_f_res_t_res_30794;
        } else {
            defunc_0_f_res_f_res_30784 = x_30781;
        }
        defunc_0_f_res_30774 = defunc_0_f_res_f_res_30784;
    }
    ((__local float *) mem_42772)[gtid_30328] = defunc_0_f_res_30774;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_30355 = sext_i32_i64(ltid_pre_44049);
    int32_t phys_tid_30356 = local_tid_44045;
    float write_value_30797 = ((__local float *) mem_42772)[write_i_30355];
    
    if (sle64((int64_t) 0, write_i_30355) && slt64(write_i_30355,
                                                   i32_res_27540)) {
        ((__global float *) mem_42768)[gtid_30325 + write_i_30355 * m_27392] =
            write_value_30797;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44045 == 0) {
        for (int64_t i_44050 = 0; i_44050 < i32_res_27540; i_44050++) {
            ((__global float *) mem_42776)[gtid_30325 * i32_res_27540 +
                                           i_44050] = ((__global
                                                        float *) mem_42768)[gtid_30325 +
                                                                            i_44050 *
                                                                            m_27392];
        }
    }
    
  error_2:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_31308(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43328_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43326_backing_aligned_1,
                                                    __local volatile
                                                    int64_t *mem_43324_backing_aligned_2,
                                                    __local volatile
                                                    int64_t *mem_43322_backing_aligned_3,
                                                    int64_t N_27391,
                                                    int64_t i_27667, __global
                                                    unsigned char *images_mem_42559,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43318,
                                                    __global
                                                    unsigned char *mem_43331,
                                                    __global
                                                    unsigned char *mem_43334,
                                                    __global
                                                    unsigned char *mem_43337)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43328_backing_3 = (__local volatile
                                                           char *) mem_43328_backing_aligned_0;
    __local volatile char *restrict mem_43326_backing_2 = (__local volatile
                                                           char *) mem_43326_backing_aligned_1;
    __local volatile char *restrict mem_43324_backing_1 = (__local volatile
                                                           char *) mem_43324_backing_aligned_2;
    __local volatile char *restrict mem_43322_backing_0 = (__local volatile
                                                           char *) mem_43322_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44426;
    int32_t local_tid_44427;
    int64_t group_sizze_44430;
    int32_t wave_sizze_44429;
    int32_t group_tid_44428;
    
    global_tid_44426 = get_global_id(0);
    local_tid_44427 = get_local_id(0);
    group_sizze_44430 = get_local_size(0);
    wave_sizze_44429 = LOCKSTEP_WIDTH;
    group_tid_44428 = get_group_id(0);
    
    int32_t phys_tid_31308;
    
    phys_tid_31308 = group_tid_44428;
    
    int32_t ltid_pre_44431;
    
    ltid_pre_44431 = local_tid_44427;
    
    int64_t gtid_31301;
    
    gtid_31301 = sext_i32_i64(group_tid_44428);
    
    __local char *mem_43322;
    
    mem_43322 = (__local char *) mem_43322_backing_0;
    
    __local char *mem_43324;
    
    mem_43324 = (__local char *) mem_43324_backing_1;
    
    int64_t gtid_31304 = sext_i32_i64(ltid_pre_44431);
    int32_t phys_tid_31305 = local_tid_44427;
    float x_31397 = ((__global float *) images_mem_42559)[gtid_31301 * N_27391 +
                                                          gtid_31304];
    bool isnan_res_31399;
    
    isnan_res_31399 = futrts_isnan32(x_31397);
    
    bool cond_31400 = !isnan_res_31399;
    float defunc_0_f_res_31401;
    
    if (cond_31400) {
        float x_31398 = ((__global
                          float *) defunc_3_map_res_mem_43318)[gtid_31301 *
                                                               N_27391 +
                                                               gtid_31304];
        float defunc_0_f_res_t_res_31402 = x_31397 - x_31398;
        
        defunc_0_f_res_31401 = defunc_0_f_res_t_res_31402;
    } else {
        defunc_0_f_res_31401 = NAN;
    }
    
    bool isnan_res_31403;
    
    isnan_res_31403 = futrts_isnan32(defunc_0_f_res_31401);
    
    bool defunc_0_p_res_31404 = !isnan_res_31403;
    int64_t defunc_0_f_res_31405 = btoi_bool_i64(defunc_0_p_res_31404);
    
    ((__local int64_t *) mem_43322)[gtid_31304] = defunc_0_f_res_31405;
    ((__local float *) mem_43324)[gtid_31304] = defunc_0_f_res_31401;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_44432;
    
    dims_flat_44432 = N_27391;
    
    int64_t x_31394;
    int64_t x_31395;
    int64_t x_44434;
    int64_t x_44435;
    bool ltid_in_bounds_44437;
    
    ltid_in_bounds_44437 = slt64(sext_i32_i64(local_tid_44427), N_27391);
    
    int32_t skip_threads_44438;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44437) {
            x_31395 = ((volatile __local
                        int64_t *) mem_43322)[sext_i32_i64(local_tid_44427)];
            if ((local_tid_44427 - squot32(local_tid_44427, 32) * 32) == 0) {
                x_31394 = x_31395;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44438 = 1;
        while (slt32(skip_threads_44438, 32)) {
            if (sle32(skip_threads_44438, local_tid_44427 -
                      squot32(local_tid_44427, 32) * 32) &&
                ltid_in_bounds_44437) {
                // read operands
                {
                    x_31394 = ((volatile __local
                                int64_t *) mem_43322)[sext_i32_i64(local_tid_44427) -
                                                      sext_i32_i64(skip_threads_44438)];
                }
                // perform operation
                {
                    bool inactive_44439 =
                         slt64(srem64(sext_i32_i64(local_tid_44427), N_27391),
                               sext_i32_i64(local_tid_44427) -
                               sext_i32_i64(local_tid_44427 -
                               skip_threads_44438));
                    
                    if (inactive_44439) {
                        x_31394 = x_31395;
                    }
                    if (!inactive_44439) {
                        int64_t defunc_1_op_res_31396 = add64(x_31394, x_31395);
                        
                        x_31394 = defunc_1_op_res_31396;
                    }
                }
            }
            if (sle32(wave_sizze_44429, skip_threads_44438)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44438, local_tid_44427 -
                      squot32(local_tid_44427, 32) * 32) &&
                ltid_in_bounds_44437) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_43322)[sext_i32_i64(local_tid_44427)] =
                        x_31394;
                    x_31395 = x_31394;
                }
            }
            if (sle32(wave_sizze_44429, skip_threads_44438)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44438 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44427 - squot32(local_tid_44427, 32) * 32) == 31 &&
            ltid_in_bounds_44437) {
            ((volatile __local
              int64_t *) mem_43322)[sext_i32_i64(squot32(local_tid_44427,
                                                         32))] = x_31394;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44440;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44427, 32) == 0 && ltid_in_bounds_44437) {
                x_44435 = ((volatile __local
                            int64_t *) mem_43322)[sext_i32_i64(local_tid_44427)];
                if ((local_tid_44427 - squot32(local_tid_44427, 32) * 32) ==
                    0) {
                    x_44434 = x_44435;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44440 = 1;
            while (slt32(skip_threads_44440, 32)) {
                if (sle32(skip_threads_44440, local_tid_44427 -
                          squot32(local_tid_44427, 32) * 32) &&
                    (squot32(local_tid_44427, 32) == 0 &&
                     ltid_in_bounds_44437)) {
                    // read operands
                    {
                        x_44434 = ((volatile __local
                                    int64_t *) mem_43322)[sext_i32_i64(local_tid_44427) -
                                                          sext_i32_i64(skip_threads_44440)];
                    }
                    // perform operation
                    {
                        bool inactive_44441 =
                             slt64(srem64(sext_i32_i64(local_tid_44427 * 32 +
                                          32 - 1), N_27391),
                                   sext_i32_i64(local_tid_44427 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_44427 -
                                                 skip_threads_44440) * 32 + 32 -
                                   1));
                        
                        if (inactive_44441) {
                            x_44434 = x_44435;
                        }
                        if (!inactive_44441) {
                            int64_t defunc_1_op_res_44436 = add64(x_44434,
                                                                  x_44435);
                            
                            x_44434 = defunc_1_op_res_44436;
                        }
                    }
                }
                if (sle32(wave_sizze_44429, skip_threads_44440)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44440, local_tid_44427 -
                          squot32(local_tid_44427, 32) * 32) &&
                    (squot32(local_tid_44427, 32) == 0 &&
                     ltid_in_bounds_44437)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_43322)[sext_i32_i64(local_tid_44427)] =
                            x_44434;
                        x_44435 = x_44434;
                    }
                }
                if (sle32(wave_sizze_44429, skip_threads_44440)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44440 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44427, 32) == 0 || !ltid_in_bounds_44437)) {
            // read operands
            {
                x_31395 = x_31394;
                x_31394 = ((__local
                            int64_t *) mem_43322)[sext_i32_i64(squot32(local_tid_44427,
                                                                       32)) -
                                                  (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44442 =
                     slt64(srem64(sext_i32_i64(local_tid_44427), N_27391),
                           sext_i32_i64(local_tid_44427) -
                           sext_i32_i64(squot32(local_tid_44427, 32) * 32 - 1));
                
                if (inactive_44442) {
                    x_31394 = x_31395;
                }
                if (!inactive_44442) {
                    int64_t defunc_1_op_res_31396 = add64(x_31394, x_31395);
                    
                    x_31394 = defunc_1_op_res_31396;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_43322)[sext_i32_i64(local_tid_44427)] =
                    x_31394;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44427, 32) == 0) {
            ((__local int64_t *) mem_43322)[sext_i32_i64(local_tid_44427)] =
                x_31395;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_31406 = ((__local int64_t *) mem_43322)[i_27667];
    int32_t defunc_0_f_res_31407 = sext_i64_i32(last_res_31406);
    __local char *mem_43326;
    
    mem_43326 = (__local char *) mem_43326_backing_2;
    ((__local float *) mem_43326)[sext_i32_i64(local_tid_44427)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43328;
    
    mem_43328 = (__local char *) mem_43328_backing_3;
    ((__local int32_t *) mem_43328)[sext_i32_i64(local_tid_44427)] = 0;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_31306 = sext_i32_i64(ltid_pre_44431);
    int32_t phys_tid_31307 = local_tid_44427;
    float x_31412 = ((__local float *) mem_43324)[write_i_31306];
    int32_t index_primexp_40584 = sext_i64_i32(write_i_31306);
    bool isnan_res_31415;
    
    isnan_res_31415 = futrts_isnan32(x_31412);
    
    bool defunc_0_p_res_31416 = !isnan_res_31415;
    int64_t defunc_1_f_res_31417;
    
    if (defunc_0_p_res_31416) {
        int64_t x_31413 = ((__local int64_t *) mem_43322)[write_i_31306];
        int64_t defunc_1_f_res_t_res_31418 = sub64(x_31413, (int64_t) 1);
        
        defunc_1_f_res_31417 = defunc_1_f_res_t_res_31418;
    } else {
        defunc_1_f_res_31417 = (int64_t) -1;
    }
    if (sle64((int64_t) 0, defunc_1_f_res_31417) && slt64(defunc_1_f_res_31417,
                                                          N_27391)) {
        ((__local int32_t *) mem_43328)[defunc_1_f_res_31417] =
            index_primexp_40584;
    }
    if (sle64((int64_t) 0, defunc_1_f_res_31417) && slt64(defunc_1_f_res_31417,
                                                          N_27391)) {
        ((__local float *) mem_43326)[defunc_1_f_res_31417] = x_31412;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44427 == 0) {
        ((__global int32_t *) mem_43331)[gtid_31301] = defunc_0_f_res_31407;
    }
    ((__global float *) mem_43334)[gtid_31301 * N_27391 +
                                   sext_i32_i64(local_tid_44427)] = ((__local
                                                                      float *) mem_43326)[sext_i32_i64(local_tid_44427)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global int32_t *) mem_43337)[gtid_31301 * N_27391 +
                                     sext_i32_i64(local_tid_44427)] = ((__local
                                                                        int32_t *) mem_43328)[sext_i32_i64(local_tid_44427)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_31648(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *red_arr_mem_44551_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *red_arr_mem_44547_backing_aligned_1,
                                                    int64_t N_27391,
                                                    float hfrac_27397,
                                                    int64_t i32_res_27401,
                                                    int32_t k2p2_27403, __global
                                                    unsigned char *images_mem_42559,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_43356,
                                                    __global
                                                    unsigned char *mem_43403,
                                                    __global
                                                    unsigned char *mem_43405,
                                                    __global
                                                    unsigned char *mem_43407)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44551_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44551_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44547_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44547_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44541;
    int32_t local_tid_44542;
    int64_t group_sizze_44545;
    int32_t wave_sizze_44544;
    int32_t group_tid_44543;
    
    global_tid_44541 = get_global_id(0);
    local_tid_44542 = get_local_id(0);
    group_sizze_44545 = get_local_size(0);
    wave_sizze_44544 = LOCKSTEP_WIDTH;
    group_tid_44543 = get_group_id(0);
    
    int32_t phys_tid_31648;
    
    phys_tid_31648 = group_tid_44543;
    
    int32_t ltid_pre_44546;
    
    ltid_pre_44546 = local_tid_44542;
    
    int64_t gtid_31641;
    
    gtid_31641 = sext_i32_i64(group_tid_44543);
    
    int32_t defunc_0_f_res_31725;
    int64_t gtid_31644 = sext_i32_i64(ltid_pre_44546);
    int32_t phys_tid_31645 = local_tid_44542;
    __local char *red_arr_mem_44547;
    
    red_arr_mem_44547 = (__local char *) red_arr_mem_44547_backing_0;
    
    float x_31729;
    
    x_31729 = ((__global float *) images_mem_42559)[gtid_31641 * N_27391 +
                                                    gtid_31644];
    
    bool isnan_res_31730;
    
    isnan_res_31730 = futrts_isnan32(x_31729);
    
    bool cond_31731 = !isnan_res_31730;
    int32_t defunc_0_f_res_31732 = btoi_bool_i32(cond_31731);
    
    ((__local int32_t *) red_arr_mem_44547)[gtid_31644] = defunc_0_f_res_31732;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44549;
    int32_t skip_waves_44550;
    
    skip_waves_44550 = 1;
    
    int32_t x_31726;
    int32_t x_31727;
    
    offset_44549 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44542, sext_i64_i32(i32_res_27401))) {
            x_31726 = ((__local
                        int32_t *) red_arr_mem_44547)[sext_i32_i64(local_tid_44542 +
                                                      offset_44549)];
        }
    }
    offset_44549 = 1;
    while (slt32(offset_44549, wave_sizze_44544)) {
        if (slt32(local_tid_44542 + offset_44549,
                  sext_i64_i32(i32_res_27401)) && ((local_tid_44542 -
                                                    squot32(local_tid_44542,
                                                            wave_sizze_44544) *
                                                    wave_sizze_44544) & (2 *
                                                                         offset_44549 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_31727 = ((volatile __local
                            int32_t *) red_arr_mem_44547)[sext_i32_i64(local_tid_44542 +
                                                          offset_44549)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_31728 = add32(x_31726, x_31727);
                
                x_31726 = defunc_1_op_res_31728;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_44547)[sext_i32_i64(local_tid_44542)] =
                    x_31726;
            }
        }
        offset_44549 *= 2;
    }
    while (slt32(skip_waves_44550, squot32(sext_i64_i32(i32_res_27401) +
                                           wave_sizze_44544 - 1,
                                           wave_sizze_44544))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44549 = skip_waves_44550 * wave_sizze_44544;
        if (slt32(local_tid_44542 + offset_44549,
                  sext_i64_i32(i32_res_27401)) && ((local_tid_44542 -
                                                    squot32(local_tid_44542,
                                                            wave_sizze_44544) *
                                                    wave_sizze_44544) == 0 &&
                                                   (squot32(local_tid_44542,
                                                            wave_sizze_44544) &
                                                    (2 * skip_waves_44550 -
                                                     1)) == 0)) {
            // read array element
            {
                x_31727 = ((__local
                            int32_t *) red_arr_mem_44547)[sext_i32_i64(local_tid_44542 +
                                                          offset_44549)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_31728 = add32(x_31726, x_31727);
                
                x_31726 = defunc_1_op_res_31728;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_44547)[sext_i32_i64(local_tid_44542)] =
                    x_31726;
            }
        }
        skip_waves_44550 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_31725 = ((__local int32_t *) red_arr_mem_44547)[(int64_t) 0];
    
    float defunc_0_f_res_31733;
    int64_t gtid_31646 = sext_i32_i64(ltid_pre_44546);
    int32_t phys_tid_31647 = local_tid_44542;
    __local char *red_arr_mem_44551;
    
    red_arr_mem_44551 = (__local char *) red_arr_mem_44551_backing_1;
    
    int32_t index_primexp_40592;
    
    index_primexp_40592 = sext_i64_i32(gtid_31646);
    
    bool cond_31738 = slt32(index_primexp_40592, defunc_0_f_res_31725);
    float defunc_0_f_res_31739;
    
    if (cond_31738) {
        int64_t i_31740 = sext_i32_i64(index_primexp_40592);
        float defunc_0_f_res_t_res_31741 = ((__global
                                             float *) defunc_4_map_res_mem_43356)[gtid_31641 *
                                                                                  N_27391 +
                                                                                  i_31740];
        
        defunc_0_f_res_31739 = defunc_0_f_res_t_res_31741;
    } else {
        defunc_0_f_res_31739 = 0.0F;
    }
    
    float defunc_0_f_res_31742 = defunc_0_f_res_31739 * defunc_0_f_res_31739;
    
    ((__local float *) red_arr_mem_44551)[gtid_31646] = defunc_0_f_res_31742;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44553;
    int32_t skip_waves_44554;
    
    skip_waves_44554 = 1;
    
    float x_31734;
    float x_31735;
    
    offset_44553 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44542, sext_i64_i32(i32_res_27401))) {
            x_31734 = ((__local
                        float *) red_arr_mem_44551)[sext_i32_i64(local_tid_44542 +
                                                    offset_44553)];
        }
    }
    offset_44553 = 1;
    while (slt32(offset_44553, wave_sizze_44544)) {
        if (slt32(local_tid_44542 + offset_44553,
                  sext_i64_i32(i32_res_27401)) && ((local_tid_44542 -
                                                    squot32(local_tid_44542,
                                                            wave_sizze_44544) *
                                                    wave_sizze_44544) & (2 *
                                                                         offset_44553 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_31735 = ((volatile __local
                            float *) red_arr_mem_44551)[sext_i32_i64(local_tid_44542 +
                                                        offset_44553)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_31736 = x_31734 + x_31735;
                
                x_31734 = defunc_1_op_res_31736;
            }
            // write result of operation
            {
                ((volatile __local
                  float *) red_arr_mem_44551)[sext_i32_i64(local_tid_44542)] =
                    x_31734;
            }
        }
        offset_44553 *= 2;
    }
    while (slt32(skip_waves_44554, squot32(sext_i64_i32(i32_res_27401) +
                                           wave_sizze_44544 - 1,
                                           wave_sizze_44544))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44553 = skip_waves_44554 * wave_sizze_44544;
        if (slt32(local_tid_44542 + offset_44553,
                  sext_i64_i32(i32_res_27401)) && ((local_tid_44542 -
                                                    squot32(local_tid_44542,
                                                            wave_sizze_44544) *
                                                    wave_sizze_44544) == 0 &&
                                                   (squot32(local_tid_44542,
                                                            wave_sizze_44544) &
                                                    (2 * skip_waves_44554 -
                                                     1)) == 0)) {
            // read array element
            {
                x_31735 = ((__local
                            float *) red_arr_mem_44551)[sext_i32_i64(local_tid_44542 +
                                                        offset_44553)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_31736 = x_31734 + x_31735;
                
                x_31734 = defunc_1_op_res_31736;
            }
            // write result of operation
            {
                ((__local
                  float *) red_arr_mem_44551)[sext_i32_i64(local_tid_44542)] =
                    x_31734;
            }
        }
        skip_waves_44554 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_31733 = ((__local float *) red_arr_mem_44551)[(int64_t) 0];
    
    int32_t r32_arg_31743 = sub32(defunc_0_f_res_31725, k2p2_27403);
    float i32_res_31744 = sitofp_i32_f32(r32_arg_31743);
    float sqrt_arg_31745 = defunc_0_f_res_31733 / i32_res_31744;
    float sqrt_res_31746;
    
    sqrt_res_31746 = futrts_sqrt32(sqrt_arg_31745);
    
    float i32_res_31747 = sitofp_i32_f32(defunc_0_f_res_31725);
    float t32_arg_31748 = hfrac_27397 * i32_res_31747;
    int32_t f32_res_31749 = fptosi_f32_i32(t32_arg_31748);
    
    if (local_tid_44542 == 0) {
        ((__global int32_t *) mem_43403)[gtid_31641] = f32_res_31749;
    }
    if (local_tid_44542 == 0) {
        ((__global int32_t *) mem_43405)[gtid_31641] = defunc_0_f_res_31725;
    }
    if (local_tid_44542 == 0) {
        ((__global float *) mem_43407)[gtid_31641] = sqrt_res_31746;
    }
    
  error_4:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_32657(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43563_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *red_arr_mem_44855_backing_aligned_1,
                                                    __local volatile
                                                    int64_t *red_arr_mem_44853_backing_aligned_2,
                                                    __local volatile
                                                    int64_t *red_arr_mem_44851_backing_aligned_3,
                                                    __local volatile
                                                    int64_t *mem_43561_backing_aligned_4,
                                                    __local volatile
                                                    int64_t *mem_43558_backing_aligned_5,
                                                    int64_t N_27391,
                                                    int32_t n_27395,
                                                    int64_t iota32_arg_27787,
                                                    int64_t iota32_arg_27815,
                                                    int64_t computed_group_sizze_32649,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_43355,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_43356,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_43357,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43422,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43423,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43424,
                                                    __global
                                                    unsigned char *defunc_0_f_res_mem_43457,
                                                    __global
                                                    unsigned char *mem_43460,
                                                    __global
                                                    unsigned char *mem_43567,
                                                    __global
                                                    unsigned char *mem_43570,
                                                    __global
                                                    unsigned char *mem_43572,
                                                    __global
                                                    unsigned char *mem_43574)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43563_backing_5 = (__local volatile
                                                           char *) mem_43563_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44855_backing_4 =
                          (__local volatile
                           char *) red_arr_mem_44855_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_44853_backing_3 =
                          (__local volatile
                           char *) red_arr_mem_44853_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_44851_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_44851_backing_aligned_3;
    __local volatile char *restrict mem_43561_backing_1 = (__local volatile
                                                           char *) mem_43561_backing_aligned_4;
    __local volatile char *restrict mem_43558_backing_0 = (__local volatile
                                                           char *) mem_43558_backing_aligned_5;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44833;
    int32_t local_tid_44834;
    int64_t group_sizze_44837;
    int32_t wave_sizze_44836;
    int32_t group_tid_44835;
    
    global_tid_44833 = get_global_id(0);
    local_tid_44834 = get_local_id(0);
    group_sizze_44837 = get_local_size(0);
    wave_sizze_44836 = LOCKSTEP_WIDTH;
    group_tid_44835 = get_group_id(0);
    
    int32_t phys_tid_32657;
    
    phys_tid_32657 = group_tid_44835;
    
    int32_t ltid_pre_44838;
    
    ltid_pre_44838 = local_tid_44834;
    
    int32_t ltid_pre_44839;
    
    ltid_pre_44839 = local_tid_44834;
    
    int64_t gtid_32647;
    
    gtid_32647 = sext_i32_i64(group_tid_44835);
    
    int32_t x_32863;
    
    x_32863 = ((__global int32_t *) defunc_4_map_res_mem_43355)[gtid_32647];
    
    int32_t x_32864 = ((__global
                        int32_t *) defunc_3_map_res_mem_43423)[gtid_32647];
    float x_32865 = ((__global float *) defunc_3_map_res_mem_43424)[gtid_32647];
    int32_t x_32866 = ((__global
                        int32_t *) defunc_3_map_res_mem_43422)[gtid_32647];
    float x_32867 = ((__global float *) defunc_0_f_res_mem_43457)[gtid_32647];
    int32_t y_32870 = sub32(x_32863, x_32864);
    __local char *mem_43558;
    
    mem_43558 = (__local char *) mem_43558_backing_0;
    
    int64_t gtid_32650 = sext_i32_i64(ltid_pre_44839);
    int32_t phys_tid_32651 = local_tid_44834;
    
    if (slt64(gtid_32650, iota32_arg_27815)) {
        int32_t index_primexp_40612 = sext_i64_i32(gtid_32650);
        bool cond_32876 = sle32(y_32870, index_primexp_40612);
        float defunc_0_f_res_32877;
        
        if (cond_32876) {
            defunc_0_f_res_32877 = 0.0F;
        } else {
            bool cond_32878 = index_primexp_40612 == 0;
            float defunc_0_f_res_f_res_32879;
            
            if (cond_32878) {
                defunc_0_f_res_f_res_32879 = x_32867;
            } else {
                int32_t i_32880 = add32(x_32864, index_primexp_40612);
                int64_t i_32881 = sext_i32_i64(i_32880);
                float x_32882 = ((__global
                                  float *) defunc_4_map_res_mem_43356)[gtid_32647 *
                                                                       N_27391 +
                                                                       i_32881];
                int32_t x_32883 = sub32(x_32864, x_32866);
                int32_t i_32884 = add32(x_32883, index_primexp_40612);
                int64_t i_32885 = sext_i32_i64(i_32884);
                float y_32886 = ((__global
                                  float *) defunc_4_map_res_mem_43356)[gtid_32647 *
                                                                       N_27391 +
                                                                       i_32885];
                float defunc_0_f_res_f_res_f_res_32887 = x_32882 - y_32886;
                
                defunc_0_f_res_f_res_32879 = defunc_0_f_res_f_res_f_res_32887;
            }
            defunc_0_f_res_32877 = defunc_0_f_res_f_res_32879;
        }
        ((__local float *) mem_43558)[gtid_32650] = defunc_0_f_res_32877;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_44840;
    
    dims_flat_44840 = iota32_arg_27815;
    
    float x_32872;
    float x_32873;
    float x_44842;
    float x_44843;
    bool ltid_in_bounds_44845;
    
    ltid_in_bounds_44845 = slt64(sext_i32_i64(local_tid_44834),
                                 iota32_arg_27815);
    
    int32_t skip_threads_44846;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44845) {
            x_32873 = ((volatile __local
                        float *) mem_43558)[sext_i32_i64(local_tid_44834)];
            if ((local_tid_44834 - squot32(local_tid_44834, 32) * 32) == 0) {
                x_32872 = x_32873;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44846 = 1;
        while (slt32(skip_threads_44846, 32)) {
            if (sle32(skip_threads_44846, local_tid_44834 -
                      squot32(local_tid_44834, 32) * 32) &&
                ltid_in_bounds_44845) {
                // read operands
                {
                    x_32872 = ((volatile __local
                                float *) mem_43558)[sext_i32_i64(local_tid_44834) -
                                                    sext_i32_i64(skip_threads_44846)];
                }
                // perform operation
                {
                    bool inactive_44847 =
                         slt64(srem64(sext_i32_i64(local_tid_44834),
                                      iota32_arg_27815),
                               sext_i32_i64(local_tid_44834) -
                               sext_i32_i64(local_tid_44834 -
                               skip_threads_44846));
                    
                    if (inactive_44847) {
                        x_32872 = x_32873;
                    }
                    if (!inactive_44847) {
                        float defunc_1_op_res_32874 = x_32872 + x_32873;
                        
                        x_32872 = defunc_1_op_res_32874;
                    }
                }
            }
            if (sle32(wave_sizze_44836, skip_threads_44846)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44846, local_tid_44834 -
                      squot32(local_tid_44834, 32) * 32) &&
                ltid_in_bounds_44845) {
                // write result
                {
                    ((volatile __local
                      float *) mem_43558)[sext_i32_i64(local_tid_44834)] =
                        x_32872;
                    x_32873 = x_32872;
                }
            }
            if (sle32(wave_sizze_44836, skip_threads_44846)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44846 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44834 - squot32(local_tid_44834, 32) * 32) == 31 &&
            ltid_in_bounds_44845) {
            ((volatile __local
              float *) mem_43558)[sext_i32_i64(squot32(local_tid_44834, 32))] =
                x_32872;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44848;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44834, 32) == 0 && ltid_in_bounds_44845) {
                x_44843 = ((volatile __local
                            float *) mem_43558)[sext_i32_i64(local_tid_44834)];
                if ((local_tid_44834 - squot32(local_tid_44834, 32) * 32) ==
                    0) {
                    x_44842 = x_44843;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44848 = 1;
            while (slt32(skip_threads_44848, 32)) {
                if (sle32(skip_threads_44848, local_tid_44834 -
                          squot32(local_tid_44834, 32) * 32) &&
                    (squot32(local_tid_44834, 32) == 0 &&
                     ltid_in_bounds_44845)) {
                    // read operands
                    {
                        x_44842 = ((volatile __local
                                    float *) mem_43558)[sext_i32_i64(local_tid_44834) -
                                                        sext_i32_i64(skip_threads_44848)];
                    }
                    // perform operation
                    {
                        bool inactive_44849 =
                             slt64(srem64(sext_i32_i64(local_tid_44834 * 32 +
                                          32 - 1), iota32_arg_27815),
                                   sext_i32_i64(local_tid_44834 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_44834 -
                                                 skip_threads_44848) * 32 + 32 -
                                   1));
                        
                        if (inactive_44849) {
                            x_44842 = x_44843;
                        }
                        if (!inactive_44849) {
                            float defunc_1_op_res_44844 = x_44842 + x_44843;
                            
                            x_44842 = defunc_1_op_res_44844;
                        }
                    }
                }
                if (sle32(wave_sizze_44836, skip_threads_44848)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44848, local_tid_44834 -
                          squot32(local_tid_44834, 32) * 32) &&
                    (squot32(local_tid_44834, 32) == 0 &&
                     ltid_in_bounds_44845)) {
                    // write result
                    {
                        ((volatile __local
                          float *) mem_43558)[sext_i32_i64(local_tid_44834)] =
                            x_44842;
                        x_44843 = x_44842;
                    }
                }
                if (sle32(wave_sizze_44836, skip_threads_44848)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44848 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44834, 32) == 0 || !ltid_in_bounds_44845)) {
            // read operands
            {
                x_32873 = x_32872;
                x_32872 = ((__local
                            float *) mem_43558)[sext_i32_i64(squot32(local_tid_44834,
                                                                     32)) -
                                                (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44850 =
                     slt64(srem64(sext_i32_i64(local_tid_44834),
                                  iota32_arg_27815),
                           sext_i32_i64(local_tid_44834) -
                           sext_i32_i64(squot32(local_tid_44834, 32) * 32 - 1));
                
                if (inactive_44850) {
                    x_32872 = x_32873;
                }
                if (!inactive_44850) {
                    float defunc_1_op_res_32874 = x_32872 + x_32873;
                    
                    x_32872 = defunc_1_op_res_32874;
                }
            }
            // write final result
            {
                ((__local float *) mem_43558)[sext_i32_i64(local_tid_44834)] =
                    x_32872;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44834, 32) == 0) {
            ((__local float *) mem_43558)[sext_i32_i64(local_tid_44834)] =
                x_32873;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float i32_res_32888 = sitofp_i32_f32(x_32864);
    float sqrt_res_32889;
    
    sqrt_res_32889 = futrts_sqrt32(i32_res_32888);
    
    float y_32890 = x_32865 * sqrt_res_32889;
    __local char *mem_43561;
    
    mem_43561 = (__local char *) mem_43561_backing_1;
    
    bool defunc_0_f_res_32892;
    int32_t defunc_0_f_res_32893;
    float defunc_0_f_res_32894;
    int64_t gtid_32652 = sext_i32_i64(ltid_pre_44838);
    int32_t phys_tid_32653 = local_tid_44834;
    __local char *red_arr_mem_44851;
    
    red_arr_mem_44851 = (__local char *) red_arr_mem_44851_backing_2;
    
    __local char *red_arr_mem_44853;
    
    red_arr_mem_44853 = (__local char *) red_arr_mem_44853_backing_3;
    
    __local char *red_arr_mem_44855;
    
    red_arr_mem_44855 = (__local char *) red_arr_mem_44855_backing_4;
    if (slt64(gtid_32652, iota32_arg_27787)) {
        float x_32910 = ((__local float *) mem_43558)[gtid_32652];
        float x_32911 = ((__global float *) mem_43460)[gtid_32652];
        int32_t index_primexp_40615 = sext_i64_i32(gtid_32652);
        float defunc_0_f_res_32913 = x_32910 / y_32890;
        bool cond_32914 = slt32(index_primexp_40615, y_32870);
        bool isnan_res_32915;
        
        isnan_res_32915 = futrts_isnan32(defunc_0_f_res_32913);
        
        bool cond_t_res_32916 = !isnan_res_32915;
        bool x_32917 = cond_32914 && cond_t_res_32916;
        float abs_res_32918 = (float) fabs(defunc_0_f_res_32913);
        bool defunc_2_f_res_t_res_32919 = x_32911 < abs_res_32918;
        bool x_32920 = x_32917 && defunc_2_f_res_t_res_32919;
        float defunc_1_f_res_32921;
        
        if (cond_32914) {
            defunc_1_f_res_32921 = defunc_0_f_res_32913;
        } else {
            defunc_1_f_res_32921 = 0.0F;
        }
        ((__local bool *) red_arr_mem_44851)[gtid_32652] = x_32920;
        ((__local int32_t *) red_arr_mem_44853)[gtid_32652] =
            index_primexp_40615;
        ((__local float *) red_arr_mem_44855)[gtid_32652] =
            defunc_1_f_res_32921;
        ((__local float *) mem_43561)[gtid_32652] = defunc_0_f_res_32913;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44857;
    int32_t skip_waves_44858;
    
    skip_waves_44858 = 1;
    
    bool x_32896;
    int32_t x_32897;
    float x_32898;
    bool x_32899;
    int32_t x_32900;
    float x_32901;
    
    offset_44857 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44834, sext_i64_i32(iota32_arg_27787))) {
            x_32896 = ((__local
                        bool *) red_arr_mem_44851)[sext_i32_i64(local_tid_44834 +
                                                   offset_44857)];
            x_32897 = ((__local
                        int32_t *) red_arr_mem_44853)[sext_i32_i64(local_tid_44834 +
                                                      offset_44857)];
            x_32898 = ((__local
                        float *) red_arr_mem_44855)[sext_i32_i64(local_tid_44834 +
                                                    offset_44857)];
        }
    }
    offset_44857 = 1;
    while (slt32(offset_44857, wave_sizze_44836)) {
        if (slt32(local_tid_44834 + offset_44857,
                  sext_i64_i32(iota32_arg_27787)) && ((local_tid_44834 -
                                                       squot32(local_tid_44834,
                                                               wave_sizze_44836) *
                                                       wave_sizze_44836) & (2 *
                                                                            offset_44857 -
                                                                            1)) ==
            0) {
            // read array element
            {
                x_32899 = ((volatile __local
                            bool *) red_arr_mem_44851)[sext_i32_i64(local_tid_44834 +
                                                       offset_44857)];
                x_32900 = ((volatile __local
                            int32_t *) red_arr_mem_44853)[sext_i32_i64(local_tid_44834 +
                                                          offset_44857)];
                x_32901 = ((volatile __local
                            float *) red_arr_mem_44855)[sext_i32_i64(local_tid_44834 +
                                                        offset_44857)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_32902;
                int32_t defunc_1_op_res_32903;
                
                if (x_32896) {
                    defunc_1_op_res_32902 = x_32896;
                    defunc_1_op_res_32903 = x_32897;
                } else {
                    bool x_32904 = x_32899 && x_32899;
                    bool x_32905 = !x_32899;
                    bool y_32906 = x_32896 && x_32905;
                    bool defunc_1_op_res_f_res_32907 = x_32904 || y_32906;
                    int32_t defunc_1_op_res_f_res_32908;
                    
                    if (x_32899) {
                        defunc_1_op_res_f_res_32908 = x_32900;
                    } else {
                        defunc_1_op_res_f_res_32908 = x_32897;
                    }
                    defunc_1_op_res_32902 = defunc_1_op_res_f_res_32907;
                    defunc_1_op_res_32903 = defunc_1_op_res_f_res_32908;
                }
                
                float defunc_1_op_res_32909 = x_32898 + x_32901;
                
                x_32896 = defunc_1_op_res_32902;
                x_32897 = defunc_1_op_res_32903;
                x_32898 = defunc_1_op_res_32909;
            }
            // write result of operation
            {
                ((volatile __local
                  bool *) red_arr_mem_44851)[sext_i32_i64(local_tid_44834)] =
                    x_32896;
                ((volatile __local
                  int32_t *) red_arr_mem_44853)[sext_i32_i64(local_tid_44834)] =
                    x_32897;
                ((volatile __local
                  float *) red_arr_mem_44855)[sext_i32_i64(local_tid_44834)] =
                    x_32898;
            }
        }
        offset_44857 *= 2;
    }
    while (slt32(skip_waves_44858,
                 squot32(sext_i64_i32(computed_group_sizze_32649) +
                         wave_sizze_44836 - 1, wave_sizze_44836))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44857 = skip_waves_44858 * wave_sizze_44836;
        if (slt32(local_tid_44834 + offset_44857,
                  sext_i64_i32(iota32_arg_27787)) && ((local_tid_44834 -
                                                       squot32(local_tid_44834,
                                                               wave_sizze_44836) *
                                                       wave_sizze_44836) == 0 &&
                                                      (squot32(local_tid_44834,
                                                               wave_sizze_44836) &
                                                       (2 * skip_waves_44858 -
                                                        1)) == 0)) {
            // read array element
            {
                x_32899 = ((__local
                            bool *) red_arr_mem_44851)[sext_i32_i64(local_tid_44834 +
                                                       offset_44857)];
                x_32900 = ((__local
                            int32_t *) red_arr_mem_44853)[sext_i32_i64(local_tid_44834 +
                                                          offset_44857)];
                x_32901 = ((__local
                            float *) red_arr_mem_44855)[sext_i32_i64(local_tid_44834 +
                                                        offset_44857)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_32902;
                int32_t defunc_1_op_res_32903;
                
                if (x_32896) {
                    defunc_1_op_res_32902 = x_32896;
                    defunc_1_op_res_32903 = x_32897;
                } else {
                    bool x_32904 = x_32899 && x_32899;
                    bool x_32905 = !x_32899;
                    bool y_32906 = x_32896 && x_32905;
                    bool defunc_1_op_res_f_res_32907 = x_32904 || y_32906;
                    int32_t defunc_1_op_res_f_res_32908;
                    
                    if (x_32899) {
                        defunc_1_op_res_f_res_32908 = x_32900;
                    } else {
                        defunc_1_op_res_f_res_32908 = x_32897;
                    }
                    defunc_1_op_res_32902 = defunc_1_op_res_f_res_32907;
                    defunc_1_op_res_32903 = defunc_1_op_res_f_res_32908;
                }
                
                float defunc_1_op_res_32909 = x_32898 + x_32901;
                
                x_32896 = defunc_1_op_res_32902;
                x_32897 = defunc_1_op_res_32903;
                x_32898 = defunc_1_op_res_32909;
            }
            // write result of operation
            {
                ((__local
                  bool *) red_arr_mem_44851)[sext_i32_i64(local_tid_44834)] =
                    x_32896;
                ((__local
                  int32_t *) red_arr_mem_44853)[sext_i32_i64(local_tid_44834)] =
                    x_32897;
                ((__local
                  float *) red_arr_mem_44855)[sext_i32_i64(local_tid_44834)] =
                    x_32898;
            }
        }
        skip_waves_44858 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_32892 = ((__local bool *) red_arr_mem_44851)[(int64_t) 0];
    defunc_0_f_res_32893 = ((__local int32_t *) red_arr_mem_44853)[(int64_t) 0];
    defunc_0_f_res_32894 = ((__local float *) red_arr_mem_44855)[(int64_t) 0];
    
    bool cond_32922 = y_32870 == 0;
    float defunc_0_f_res_32923;
    
    if (cond_32922) {
        defunc_0_f_res_32923 = 0.0F;
    } else {
        float i32_res_32924 = sitofp_i32_f32(y_32870);
        float defunc_0_f_res_f_res_32925 = defunc_0_f_res_32894 / i32_res_32924;
        
        defunc_0_f_res_32923 = defunc_0_f_res_f_res_32925;
    }
    
    bool cond_32926 = !defunc_0_f_res_32892;
    int32_t fst_breakzq_32927;
    
    if (cond_32926) {
        fst_breakzq_32927 = -1;
    } else {
        bool cond_32928 = slt32(defunc_0_f_res_32893, y_32870);
        int32_t adjustValInds_res_32929;
        
        if (cond_32928) {
            int32_t i_32930 = add32(x_32864, defunc_0_f_res_32893);
            int64_t i_32931 = sext_i32_i64(i_32930);
            int32_t x_32932 = ((__global
                                int32_t *) defunc_4_map_res_mem_43357)[gtid_32647 *
                                                                       N_27391 +
                                                                       i_32931];
            int32_t adjustValInds_res_t_res_32933 = sub32(x_32932, n_27395);
            
            adjustValInds_res_32929 = adjustValInds_res_t_res_32933;
        } else {
            adjustValInds_res_32929 = -1;
        }
        fst_breakzq_32927 = adjustValInds_res_32929;
    }
    
    bool cond_32934 = sle32(x_32864, 5);
    bool cond_f_res_32935 = sle32(y_32870, 5);
    bool x_32936 = !cond_32934;
    bool y_32937 = cond_f_res_32935 && x_32936;
    bool cond_32938 = cond_32934 || y_32937;
    int32_t fst_breakzq_32939;
    
    if (cond_32938) {
        fst_breakzq_32939 = -2;
    } else {
        fst_breakzq_32939 = fst_breakzq_32927;
    }
    
    __local char *mem_43563;
    
    mem_43563 = (__local char *) mem_43563_backing_5;
    for (int64_t i_44859 = 0; i_44859 < sdiv_up64(iota32_arg_27815 -
                                                  sext_i32_i64(local_tid_44834),
                                                  computed_group_sizze_32649);
         i_44859++) {
        ((__local float *) mem_43563)[i_44859 * computed_group_sizze_32649 +
                                      sext_i32_i64(local_tid_44834)] = NAN;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_32654 = sext_i32_i64(ltid_pre_44839);
    int32_t phys_tid_32655 = local_tid_44834;
    
    if (slt64(write_i_32654, iota32_arg_27815)) {
        int32_t index_primexp_40618 = sext_i64_i32(write_i_32654);
        float write_value_32944 = ((__local float *) mem_43561)[write_i_32654];
        bool cond_32945 = slt32(index_primexp_40618, y_32870);
        int32_t defunc_0_f_res_32946;
        
        if (cond_32945) {
            int32_t i_32947 = add32(x_32864, index_primexp_40618);
            int64_t i_32948 = sext_i32_i64(i_32947);
            int32_t x_32949 = ((__global
                                int32_t *) defunc_4_map_res_mem_43357)[gtid_32647 *
                                                                       N_27391 +
                                                                       i_32948];
            int32_t defunc_0_f_res_t_res_32950 = sub32(x_32949, n_27395);
            
            defunc_0_f_res_32946 = defunc_0_f_res_t_res_32950;
        } else {
            defunc_0_f_res_32946 = -1;
        }
        
        int64_t defunc_0_f_res_32951 = sext_i32_i64(defunc_0_f_res_32946);
        
        if (sle64((int64_t) 0, defunc_0_f_res_32951) &&
            slt64(defunc_0_f_res_32951, iota32_arg_27815)) {
            ((__local float *) mem_43563)[defunc_0_f_res_32951] =
                write_value_32944;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    for (int64_t i_44860 = 0; i_44860 < sdiv_up64(iota32_arg_27787 -
                                                  sext_i32_i64(local_tid_44834),
                                                  computed_group_sizze_32649);
         i_44860++) {
        ((__global float *) mem_43567)[gtid_32647 * iota32_arg_27787 +
                                       (i_44860 * computed_group_sizze_32649 +
                                        sext_i32_i64(local_tid_44834))] =
            ((__local float *) mem_43563)[i_44860 * computed_group_sizze_32649 +
                                          sext_i32_i64(local_tid_44834)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    for (int64_t i_44861 = 0; i_44861 < sdiv_up64(iota32_arg_27787 -
                                                  sext_i32_i64(local_tid_44834),
                                                  computed_group_sizze_32649);
         i_44861++) {
        ((__global float *) mem_43570)[gtid_32647 * iota32_arg_27787 +
                                       (i_44861 * computed_group_sizze_32649 +
                                        sext_i32_i64(local_tid_44834))] =
            ((__local float *) mem_43561)[i_44861 * computed_group_sizze_32649 +
                                          sext_i32_i64(local_tid_44834)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44834 == 0) {
        ((__global int32_t *) mem_43572)[gtid_32647] = fst_breakzq_32939;
    }
    if (local_tid_44834 == 0) {
        ((__global float *) mem_43574)[gtid_32647] = defunc_0_f_res_32923;
    }
    
  error_4:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_40751(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_42658_backing_aligned_0,
                                                    int64_t m_27392,
                                                    int32_t n_27395,
                                                    int64_t i32_res_27407,
                                                    int64_t Ty_40739,
                                                    int64_t Tx_40740,
                                                    int64_t gridDim_x_40741,
                                                    int64_t gridDim_y_40742,
                                                    int64_t group_sizze_tile3d_40746,
                                                    int64_t count_shmem_40747,
                                                    __global
                                                    unsigned char *mem_42571,
                                                    __global
                                                    unsigned char *mem_42575,
                                                    __global
                                                    unsigned char *mem_42646,
                                                    __global
                                                    unsigned char *mem_42706)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42658_backing_0 = (__local volatile
                                                           char *) mem_42658_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43911;
    int32_t local_tid_43912;
    int64_t group_sizze_43915;
    int32_t wave_sizze_43914;
    int32_t group_tid_43913;
    
    global_tid_43911 = get_global_id(0);
    local_tid_43912 = get_local_id(0);
    group_sizze_43915 = get_local_size(0);
    wave_sizze_43914 = LOCKSTEP_WIDTH;
    group_tid_43913 = get_group_id(0);
    
    int32_t gid_flat_40751;
    
    gid_flat_40751 = group_tid_43913;
    
    int32_t ltid_pre_43916;
    
    ltid_pre_43916 = squot32(local_tid_43912, sext_i64_i32(Ty_40739) *
                             sext_i64_i32(Tx_40740));
    
    int32_t ltid_pre_43917;
    
    ltid_pre_43917 = squot32(local_tid_43912 - squot32(local_tid_43912,
                                                       sext_i64_i32(Ty_40739) *
                                                       sext_i64_i32(Tx_40740)) *
                             (sext_i64_i32(Ty_40739) * sext_i64_i32(Tx_40740)),
                             sext_i64_i32(Tx_40740));
    
    int32_t ltid_pre_43918;
    
    ltid_pre_43918 = local_tid_43912 - squot32(local_tid_43912,
                                               sext_i64_i32(Ty_40739) *
                                               sext_i64_i32(Tx_40740)) *
        (sext_i64_i32(Ty_40739) * sext_i64_i32(Tx_40740)) -
        squot32(local_tid_43912 - squot32(local_tid_43912,
                                          sext_i64_i32(Ty_40739) *
                                          sext_i64_i32(Tx_40740)) *
                (sext_i64_i32(Ty_40739) * sext_i64_i32(Tx_40740)),
                sext_i64_i32(Tx_40740)) * sext_i64_i32(Tx_40740);
    
    int32_t ltid_pre_43919;
    
    ltid_pre_43919 = squot32(local_tid_43912, sext_i64_i32(Tx_40740));
    
    int32_t ltid_pre_43920;
    
    ltid_pre_43920 = local_tid_43912 - squot32(local_tid_43912,
                                               sext_i64_i32(Tx_40740)) *
        sext_i64_i32(Tx_40740);
    
    int32_t ltid_pre_43921;
    
    ltid_pre_43921 = local_tid_43912;
    
    int64_t gid_zz_40750;
    
    gid_zz_40750 = squot64(sext_i32_i64(group_tid_43913), gridDim_y_40742 *
                           gridDim_x_40741);
    
    int64_t gid_y_40749;
    
    gid_y_40749 = squot64(sext_i32_i64(group_tid_43913) -
                          squot64(sext_i32_i64(group_tid_43913),
                                  gridDim_y_40742 * gridDim_x_40741) *
                          (gridDim_y_40742 * gridDim_x_40741), gridDim_x_40741);
    
    int64_t gid_x_40748;
    
    gid_x_40748 = sext_i32_i64(group_tid_43913) -
        squot64(sext_i32_i64(group_tid_43913), gridDim_y_40742 *
                gridDim_x_40741) * (gridDim_y_40742 * gridDim_x_40741) -
        squot64(sext_i32_i64(group_tid_43913) -
                squot64(sext_i32_i64(group_tid_43913), gridDim_y_40742 *
                        gridDim_x_40741) * (gridDim_y_40742 * gridDim_x_40741),
                gridDim_x_40741) * gridDim_x_40741;
    
    int64_t ii_40752;
    
    ii_40752 = (int64_t) 30 * gid_zz_40750;
    
    int64_t jj1_40753 = Ty_40739 * gid_y_40749;
    int64_t jj2_40754 = Tx_40740 * gid_x_40748;
    float mem_42656[30];
    int64_t ltid_y_40757 = sext_i32_i64(ltid_pre_43919);
    int64_t ltid_x_40755 = sext_i32_i64(ltid_pre_43920);
    int32_t ltid_flat_40756 = local_tid_43912;
    float mem_42650[30];
    
    for (int32_t i_42448 = 0; i_42448 < 30; i_42448++) {
        int64_t i_40765 = sext_i32_i64(i_42448);
        
        mem_42650[i_40765] = 0.0F;
    }
    for (int64_t i_43923 = 0; i_43923 < (int64_t) 30; i_43923++) {
        mem_42656[i_43923] = mem_42650[i_43923];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_42658;
    
    mem_42658 = (__local char *) mem_42658_backing_0;
    
    float loop_mem_42688[30];
    float mem_param_42659[30];
    
    for (int32_t i_1 = 0; i_1 < 30; i_1++)
        mem_param_42659[i_1] = mem_42656[i_1];
    for (int32_t i_42450 = 0; i_42450 < n_27395; i_42450++) {
        int64_t i_40770 = sext_i32_i64(i_42450);
        
        for (int64_t i_40773 = 0; i_40773 < count_shmem_40747; i_40773++) {
            int64_t offs_40786 = group_sizze_tile3d_40746 * i_40773;
            int64_t ltid_40776 = sext_i32_i64(ltid_pre_43921);
            int32_t ltid_flat_40775 = local_tid_43912;
            int64_t loc_ind_40787 = ltid_40776 + offs_40786;
            int64_t gtid_40788 = ii_40752 + loc_ind_40787;
            bool cond_40789 = slt64(gtid_40788, m_27392);
            float y_elem_40790;
            
            if (cond_40789) {
                float Y_elem_40792 = ((__global float *) mem_42646)[i_40770 *
                                                                    m_27392 +
                                                                    gtid_40788];
                
                y_elem_40790 = Y_elem_40792;
            } else {
                y_elem_40790 = 0.0F;
            }
            
            bool cond_40794 = slt64(loc_ind_40787, (int64_t) 30);
            int64_t y_loc_ind_40795;
            
            if (cond_40794) {
                y_loc_ind_40795 = loc_ind_40787;
            } else {
                y_loc_ind_40795 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, y_loc_ind_40795) && slt64(y_loc_ind_40795,
                                                             (int64_t) 30)) {
                ((__local float *) mem_42658)[y_loc_ind_40795] = y_elem_40790;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
        
        float mem_42687[30];
        int64_t ltid_y_40801 = sext_i32_i64(ltid_pre_43919);
        int64_t ltid_x_40799 = sext_i32_i64(ltid_pre_43920);
        int32_t ltid_flat_40800 = local_tid_43912;
        int64_t gtid_40828 = jj1_40753 + ltid_y_40801;
        int64_t gtid_40829 = jj2_40754 + ltid_x_40799;
        bool binop_x_40831 = slt64(gtid_40828, i32_res_27407);
        bool binop_y_40832 = slt64(gtid_40829, i32_res_27407);
        bool cond_40833 = binop_x_40831 && binop_y_40832;
        float mem_43628[30];
        
        if (cond_40833) {
            float x_40836 = ((__global float *) mem_42571)[i_40770 *
                                                           i32_res_27407 +
                                                           gtid_40828];
            float x_40838 = ((__global float *) mem_42575)[i_40770 *
                                                           i32_res_27407 +
                                                           gtid_40829];
            
            for (int32_t i_42449 = 0; i_42449 < 30; i_42449++) {
                int64_t i_40840 = sext_i32_i64(i_42449);
                int64_t gtid_40842 = ii_40752 + i_40840;
                bool cond_40843 = slt64(gtid_40842, m_27392);
                
                if (cond_40843) {
                    float inp_reg_var2zz_40845 = ((__local
                                                   float *) mem_42658)[i_40840];
                    float res_reg_var2zz_40846 = mem_param_42659[i_40840];
                    float x_40850 = x_40836 * x_40838;
                    bool isnan_res_40851;
                    
                    isnan_res_40851 = futrts_isnan32(inp_reg_var2zz_40845);
                    
                    float y_40852;
                    
                    if (isnan_res_40851) {
                        y_40852 = 0.0F;
                    } else {
                        y_40852 = 1.0F;
                    }
                    
                    float defunc_2_f_res_40853 = x_40850 * y_40852;
                    float defunc_1_op_res_40857 = res_reg_var2zz_40846 +
                          defunc_2_f_res_40853;
                    
                    mem_param_42659[i_40840] = defunc_1_op_res_40857;
                }
            }
            for (int64_t i_43929 = 0; i_43929 < (int64_t) 30; i_43929++) {
                mem_43628[i_43929] = mem_param_42659[i_43929];
            }
        } else {
            for (int64_t i_43930 = 0; i_43930 < (int64_t) 30; i_43930++) {
                mem_43628[i_43930] = mem_param_42659[i_43930];
            }
        }
        for (int64_t i_43931 = 0; i_43931 < (int64_t) 30; i_43931++) {
            mem_42687[i_43931] = mem_43628[i_43931];
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_43924[30];
        
        for (int32_t i_2 = 0; i_2 < 30; i_2++)
            mem_param_tmp_43924[i_2] = mem_42687[i_2];
        for (int32_t i_3 = 0; i_3 < 30; i_3++)
            mem_param_42659[i_3] = mem_param_tmp_43924[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 30; i_4++)
        loop_mem_42688[i_4] = mem_param_42659[i_4];
    
    float mem_42702[30 * 1 * 1];
    int64_t ltid_zz_40866 = sext_i32_i64(ltid_pre_43916);
    int64_t ltid_y_40865 = sext_i32_i64(ltid_pre_43917);
    int64_t ltid_x_40863 = sext_i32_i64(ltid_pre_43918);
    int32_t ltid_flat_40864 = local_tid_43912;
    float mem_42696[30 * 1 * 1];
    
    for (int32_t i_42452 = 0; i_42452 < 30; i_42452++) {
        int64_t i_40875 = sext_i32_i64(i_42452);
        
        for (int64_t i_43933 = 0; i_43933 < (int64_t) 1; i_43933++) {
            mem_42696[i_40875 + i_43933] = loop_mem_42688[i_40875 + i_43933];
        }
    }
    for (int64_t i_43934 = 0; i_43934 < (int64_t) 30; i_43934++) {
        for (int64_t i_43935 = 0; i_43935 < (int64_t) 1; i_43935++) {
            for (int64_t i_43936 = 0; i_43936 < (int64_t) 1; i_43936++) {
                mem_42702[i_43934 + i_43935 + i_43936] = mem_42696[i_43934 +
                                                                   i_43935 +
                                                                   i_43936];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t reg_tile_i_43937 = squot64(sext_i32_i64(local_tid_43912), Ty_40739 *
                                       Tx_40740);
    int64_t reg_tile_i_43938 = squot64(sext_i32_i64(local_tid_43912) -
                                       squot64(sext_i32_i64(local_tid_43912),
                                               Ty_40739 * Tx_40740) *
                                       (Ty_40739 * Tx_40740), Tx_40740);
    int64_t reg_tile_i_43939 = sext_i32_i64(local_tid_43912) -
            squot64(sext_i32_i64(local_tid_43912), Ty_40739 * Tx_40740) *
            (Ty_40739 * Tx_40740) - squot64(sext_i32_i64(local_tid_43912) -
                                            squot64(sext_i32_i64(local_tid_43912),
                                                    Ty_40739 * Tx_40740) *
                                            (Ty_40739 * Tx_40740), Tx_40740) *
            Tx_40740;
    int64_t tile_dim_start_43940 = (int64_t) 30 * (gid_zz_40750 +
                                                   reg_tile_i_43937);
    int64_t tile_dim_start_43941 = Ty_40739 * gid_y_40749 + reg_tile_i_43938;
    int64_t tile_dim_start_43942 = Tx_40740 * gid_x_40748 + reg_tile_i_43939;
    
    for (int64_t nest_i_43943 = 0; nest_i_43943 < (int64_t) 30;
         nest_i_43943++) {
        for (int64_t nest_i_43944 = 0; nest_i_43944 < (int64_t) 1;
             nest_i_43944++) {
            for (int64_t nest_i_43945 = 0; nest_i_43945 < (int64_t) 1;
                 nest_i_43945++) {
                if ((slt64(tile_dim_start_43940 + nest_i_43943, m_27392) &&
                     slt64(tile_dim_start_43941 + nest_i_43944,
                           i32_res_27407)) && slt64(tile_dim_start_43942 +
                                                    nest_i_43945,
                                                    i32_res_27407)) {
                    ((__global float *) mem_42706)[(tile_dim_start_43940 +
                                                    nest_i_43943) *
                                                   (i32_res_27407 *
                                                    i32_res_27407) +
                                                   (tile_dim_start_43941 +
                                                    nest_i_43944) *
                                                   i32_res_27407 +
                                                   (tile_dim_start_43942 +
                                                    nest_i_43945)] =
                        mem_42702[nest_i_43943 + nest_i_43944 + nest_i_43945];
                }
            }
        }
    }
    
  error_4:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_40904(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_42846_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_42844_backing_aligned_1,
                                                    int64_t N_27391,
                                                    int64_t m_27392,
                                                    int64_t i32_res_27401,
                                                    int64_t i32_res_27407,
                                                    int64_t gridDim_x_40898,
                                                    int64_t full_tiles_40929,
                                                    int64_t kk_41136, __global
                                                    unsigned char *images_mem_42559,
                                                    __global
                                                    unsigned char *mem_42571,
                                                    __global
                                                    unsigned char *mem_43018)
{
    #define Ty_40885 (mainDetailedziTy_40882)
    #define Ry_40886 (mainDetailedziRy_40884)
    #define Tx_40887 (mainDetailedziTx_40881)
    #define Rx_40888 (mainDetailedziRx_40883)
    #define Tk_40889 (mainDetailedziTk_40880)
    #define tk_div_tx_40890 (sdiv_up64(mainDetailedziTk_40880, mainDetailedziTx_40881))
    #define tk_div_ty_40891 (sdiv_up64(mainDetailedziTk_40880, mainDetailedziTy_40882))
    #define TxRx_40892 (mainDetailedziTx_40881 * mainDetailedziRx_40883)
    #define TyRy_40893 (mainDetailedziTy_40882 * mainDetailedziRy_40884)
    #define a_loc_szz_40895 (mainDetailedziTk_40880 * (mainDetailedziTy_40882 * mainDetailedziRy_40884))
    #define b_loc_szz_40897 (mainDetailedziRx_40883 * (mainDetailedziTx_40881 * mainDetailedziTk_40880))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42846_backing_1 = (__local volatile
                                                           char *) mem_42846_backing_aligned_0;
    __local volatile char *restrict mem_42844_backing_0 = (__local volatile
                                                           char *) mem_42844_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44086;
    int32_t local_tid_44087;
    int64_t group_sizze_44090;
    int32_t wave_sizze_44089;
    int32_t group_tid_44088;
    
    global_tid_44086 = get_global_id(0);
    local_tid_44087 = get_local_id(0);
    group_sizze_44090 = get_local_size(0);
    wave_sizze_44089 = LOCKSTEP_WIDTH;
    group_tid_44088 = get_group_id(0);
    
    int32_t gid_flat_40904;
    
    gid_flat_40904 = group_tid_44088;
    
    int32_t ltid_pre_44091;
    
    ltid_pre_44091 = squot32(local_tid_44087, sext_i64_i32(Tx_40887));
    
    int32_t ltid_pre_44092;
    
    ltid_pre_44092 = local_tid_44087 - squot32(local_tid_44087,
                                               sext_i64_i32(Tx_40887)) *
        sext_i64_i32(Tx_40887);
    
    int64_t gid_y_40903;
    
    gid_y_40903 = squot64(sext_i32_i64(group_tid_44088), gridDim_x_40898);
    
    int64_t gid_x_40902;
    
    gid_x_40902 = sext_i32_i64(group_tid_44088) -
        squot64(sext_i32_i64(group_tid_44088), gridDim_x_40898) *
        gridDim_x_40898;
    
    int64_t iii_40905;
    
    iii_40905 = TyRy_40893 * gid_y_40903;
    
    int64_t jjj_40906 = TxRx_40892 * gid_x_40902;
    float mem_42842[Ry_40886 * Rx_40888];
    int64_t ltid_y_40909 = sext_i32_i64(ltid_pre_44091);
    int64_t ltid_x_40907 = sext_i32_i64(ltid_pre_44092);
    int32_t ltid_flat_40908 = local_tid_44087;
    float mem_42833[Ry_40886 * Rx_40888];
    
    for (int64_t i_40920 = 0; i_40920 < Ry_40886; i_40920++) {
        for (int64_t i_40923 = 0; i_40923 < Rx_40888; i_40923++) {
            mem_42833[i_40920 * Rx_40888 + i_40923] = 0.0F;
        }
    }
    for (int64_t i_44095 = 0; i_44095 < Ry_40886; i_44095++) {
        for (int64_t i_44096 = 0; i_44096 < Rx_40888; i_44096++) {
            mem_42842[i_44095 * Rx_40888 + i_44096] = mem_42833[i_44095 *
                                                                Rx_40888 +
                                                                i_44096];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_42844;
    
    mem_42844 = (__local char *) mem_42844_backing_0;
    
    __local char *mem_42846;
    
    mem_42846 = (__local char *) mem_42846_backing_1;
    
    float mem_42917[Ry_40886];
    float mem_42921[Rx_40888];
    float loop_mem_42933[Ry_40886 * Rx_40888];
    float mem_param_42847[Ry_40886 * Rx_40888];
    
    for (int32_t i_2 = 0; i_2 < Ry_40886 * Rx_40888; i_2++)
        mem_param_42847[i_2] = mem_42842[i_2];
    for (int64_t i_40930 = 0; i_40930 < full_tiles_40929; i_40930++) {
        int64_t kk_40934 = Tk_40889 * i_40930;
        
        for (int64_t i_40935 = 0; i_40935 < Ry_40886; i_40935++) {
            int64_t binop_y_40958 = Ty_40885 * i_40935;
            
            for (int64_t i_40937 = 0; i_40937 < tk_div_tx_40890; i_40937++) {
                int64_t binop_y_40956 = Tx_40887 * i_40937;
                int64_t ltid_x_40939 = sext_i32_i64(ltid_pre_44091);
                int64_t ltid_y_40940 = sext_i32_i64(ltid_pre_44092);
                int32_t ltid_flat_40941 = local_tid_44087;
                int64_t k_40957 = ltid_y_40940 + binop_y_40956;
                int64_t i_40959 = ltid_x_40939 + binop_y_40958;
                int64_t gtid_40960 = iii_40905 + i_40959;
                int64_t A_col_idx_40961 = kk_40934 + k_40957;
                bool cond_40962 = slt64(gtid_40960, m_27392);
                float A_elem_40963;
                
                if (cond_40962) {
                    float A_elem_40965 = ((__global
                                           float *) images_mem_42559)[gtid_40960 *
                                                                      N_27391 +
                                                                      A_col_idx_40961];
                    
                    A_elem_40963 = A_elem_40965;
                } else {
                    A_elem_40963 = 0.0F;
                }
                
                bool cond_40967 = slt64(k_40957, Tk_40889);
                int64_t a_loc_ind_40968;
                
                if (cond_40967) {
                    int64_t binop_y_40969 = Tk_40889 * i_40959;
                    int64_t loc_fi_40970 = k_40957 + binop_y_40969;
                    
                    a_loc_ind_40968 = loc_fi_40970;
                } else {
                    a_loc_ind_40968 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, a_loc_ind_40968) &&
                    slt64(a_loc_ind_40968, a_loc_szz_40895)) {
                    ((__local float *) mem_42844)[a_loc_ind_40968] =
                        A_elem_40963;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_40975 = 0; i_40975 < tk_div_ty_40891; i_40975++) {
            int64_t binop_y_40996 = Ty_40885 * i_40975;
            
            for (int64_t i_40977 = 0; i_40977 < Rx_40888; i_40977++) {
                int64_t binop_y_40998 = Tx_40887 * i_40977;
                int64_t ltid_x_40979 = sext_i32_i64(ltid_pre_44091);
                int64_t ltid_y_40980 = sext_i32_i64(ltid_pre_44092);
                int32_t ltid_flat_40981 = local_tid_44087;
                int64_t k_40997 = ltid_x_40979 + binop_y_40996;
                int64_t j_40999 = ltid_y_40980 + binop_y_40998;
                int64_t gtid_41000 = jjj_40906 + j_40999;
                int64_t B_row_idx_41001 = kk_40934 + k_40997;
                bool cond_41002 = slt64(gtid_41000, i32_res_27407);
                float B_elem_41003;
                
                if (cond_41002) {
                    float B_elem_41005 = ((__global
                                           float *) mem_42571)[B_row_idx_41001 *
                                                               i32_res_27407 +
                                                               gtid_41000];
                    
                    B_elem_41003 = B_elem_41005;
                } else {
                    B_elem_41003 = 0.0F;
                }
                
                bool cond_41007 = slt64(k_40997, Tk_40889);
                int64_t b_loc_ind_41008;
                
                if (cond_41007) {
                    int64_t binop_y_41009 = TxRx_40892 * k_40997;
                    int64_t loc_fi_41010 = j_40999 + binop_y_41009;
                    
                    b_loc_ind_41008 = loc_fi_41010;
                } else {
                    b_loc_ind_41008 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, b_loc_ind_41008) &&
                    slt64(b_loc_ind_41008, b_loc_szz_40897)) {
                    ((__local float *) mem_42846)[b_loc_ind_41008] =
                        B_elem_41003;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_42932[Ry_40886 * Rx_40888];
        float mem_param_42904[Ry_40886 * Rx_40888];
        
        for (int32_t i_3 = 0; i_3 < Ry_40886 * Rx_40888; i_3++)
            mem_param_42904[i_3] = mem_param_42847[i_3];
        for (int64_t i_41015 = 0; i_41015 < Tk_40889; i_41015++) {
            int64_t binop_y_41054 = TxRx_40892 * i_41015;
            int64_t ltid_y_41019 = sext_i32_i64(ltid_pre_44091);
            int64_t ltid_x_41017 = sext_i32_i64(ltid_pre_44092);
            int32_t ltid_flat_41018 = local_tid_44087;
            float mem_42907[Ry_40886];
            float mem_42909[Rx_40888];
            int64_t binop_x_41045 = Ry_40886 * ltid_y_41019;
            
            for (int64_t i_41043 = 0; i_41043 < Ry_40886; i_41043++) {
                int64_t binop_x_41046 = i_41043 + binop_x_41045;
                int64_t binop_y_41047 = Tk_40889 * binop_x_41046;
                int64_t a_loc_ind_41048 = i_41015 + binop_y_41047;
                
                for (int64_t i_44108 = 0; i_44108 < (int64_t) 1; i_44108++) {
                    mem_42907[i_41043 + i_44108] = ((__local
                                                     float *) mem_42844)[a_loc_ind_41048 +
                                                                         i_44108];
                }
            }
            
            int64_t binop_y_41056 = Rx_40888 * ltid_x_41017;
            
            for (int64_t i_41052 = 0; i_41052 < Rx_40888; i_41052++) {
                int64_t binop_x_41055 = i_41052 + binop_y_41054;
                int64_t b_loc_ind_41057 = binop_x_41055 + binop_y_41056;
                
                for (int64_t i_44110 = 0; i_44110 < (int64_t) 1; i_44110++) {
                    mem_42909[i_41052 + i_44110] = ((__local
                                                     float *) mem_42846)[b_loc_ind_41057 +
                                                                         i_44110];
                }
            }
            for (int64_t i_44111 = 0; i_44111 < Ry_40886; i_44111++) {
                mem_42917[i_44111] = mem_42907[i_44111];
            }
            for (int64_t i_44112 = 0; i_44112 < Rx_40888; i_44112++) {
                mem_42921[i_44112] = mem_42909[i_44112];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_42931[Ry_40886 * Rx_40888];
            int64_t ltid_y_41064 = sext_i32_i64(ltid_pre_44091);
            int64_t ltid_x_41062 = sext_i32_i64(ltid_pre_44092);
            int32_t ltid_flat_41063 = local_tid_44087;
            int64_t binop_y_41107 = Ry_40886 * ltid_y_41064;
            int64_t binop_y_41111 = Rx_40888 * ltid_x_41062;
            
            for (int64_t i_41101 = 0; i_41101 < Ry_40886; i_41101++) {
                int64_t binop_x_41106 = iii_40905 + i_41101;
                int64_t cmpop_x_41108 = binop_x_41106 + binop_y_41107;
                bool binop_x_41109 = slt64(cmpop_x_41108, m_27392);
                
                for (int64_t i_41104 = 0; i_41104 < Rx_40888; i_41104++) {
                    int64_t binop_x_41110 = jjj_40906 + i_41104;
                    int64_t cmpop_x_41112 = binop_x_41110 + binop_y_41111;
                    bool binop_y_41113 = slt64(cmpop_x_41112, i32_res_27407);
                    bool cond_41114 = binop_x_41109 && binop_y_41113;
                    
                    if (cond_41114) {
                        float a_41116 = mem_42917[i_41101];
                        float c_41118 = mem_param_42904[i_41101 * Rx_40888 +
                                                        i_41104];
                        bool isnan_res_41121;
                        
                        isnan_res_41121 = futrts_isnan32(a_41116);
                        
                        float defunc_1_f_res_41122;
                        
                        if (isnan_res_41121) {
                            defunc_1_f_res_41122 = 0.0F;
                        } else {
                            float b_41117 = mem_42921[i_41104];
                            float defunc_1_f_res_f_res_41123 = a_41116 *
                                  b_41117;
                            
                            defunc_1_f_res_41122 = defunc_1_f_res_f_res_41123;
                        }
                        
                        float defunc_1_op_res_41127 = c_41118 +
                              defunc_1_f_res_41122;
                        
                        mem_param_42904[i_41101 * Rx_40888 + i_41104] =
                            defunc_1_op_res_41127;
                    }
                }
            }
            for (int64_t i_44115 = 0; i_44115 < Ry_40886; i_44115++) {
                for (int64_t i_44116 = 0; i_44116 < Rx_40888; i_44116++) {
                    mem_42931[i_44115 * Rx_40888 + i_44116] =
                        mem_param_42904[i_44115 * Rx_40888 + i_44116];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44105[Ry_40886 * Rx_40888];
            
            for (int32_t i_4 = 0; i_4 < Ry_40886 * Rx_40888; i_4++)
                mem_param_tmp_44105[i_4] = mem_42931[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_40886 * Rx_40888; i_5++)
                mem_param_42904[i_5] = mem_param_tmp_44105[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_40886 * Rx_40888; i_6++)
            loop_mem_42932[i_6] = mem_param_42904[i_6];
        
        float mem_param_tmp_44097[Ry_40886 * Rx_40888];
        
        for (int32_t i_7 = 0; i_7 < Ry_40886 * Rx_40888; i_7++)
            mem_param_tmp_44097[i_7] = loop_mem_42932[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_40886 * Rx_40888; i_8++)
            mem_param_42847[i_8] = mem_param_tmp_44097[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_40886 * Rx_40888; i_9++)
        loop_mem_42933[i_9] = mem_param_42847[i_9];
    for (int64_t i_41137 = 0; i_41137 < Ry_40886; i_41137++) {
        int64_t binop_y_41162 = Ty_40885 * i_41137;
        
        for (int64_t i_41139 = 0; i_41139 < tk_div_tx_40890; i_41139++) {
            int64_t binop_y_41160 = Tx_40887 * i_41139;
            int64_t ltid_x_41141 = sext_i32_i64(ltid_pre_44091);
            int64_t ltid_y_41142 = sext_i32_i64(ltid_pre_44092);
            int32_t ltid_flat_41143 = local_tid_44087;
            int64_t k_41161 = ltid_y_41142 + binop_y_41160;
            int64_t i_41163 = ltid_x_41141 + binop_y_41162;
            int64_t gtid_41164 = iii_40905 + i_41163;
            int64_t A_col_idx_41165 = kk_41136 + k_41161;
            bool binop_x_41166 = slt64(gtid_41164, m_27392);
            bool binop_y_41167 = slt64(A_col_idx_41165, i32_res_27401);
            bool cond_41168 = binop_x_41166 && binop_y_41167;
            float A_elem_41169;
            
            if (cond_41168) {
                float A_elem_41171 = ((__global
                                       float *) images_mem_42559)[gtid_41164 *
                                                                  N_27391 +
                                                                  A_col_idx_41165];
                
                A_elem_41169 = A_elem_41171;
            } else {
                A_elem_41169 = 0.0F;
            }
            
            bool cond_41173 = slt64(k_41161, Tk_40889);
            int64_t a_loc_ind_41174;
            
            if (cond_41173) {
                int64_t binop_y_41175 = Tk_40889 * i_41163;
                int64_t loc_fi_41176 = k_41161 + binop_y_41175;
                
                a_loc_ind_41174 = loc_fi_41176;
            } else {
                a_loc_ind_41174 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, a_loc_ind_41174) && slt64(a_loc_ind_41174,
                                                             a_loc_szz_40895)) {
                ((__local float *) mem_42844)[a_loc_ind_41174] = A_elem_41169;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_41181 = 0; i_41181 < tk_div_ty_40891; i_41181++) {
        int64_t binop_y_41204 = Ty_40885 * i_41181;
        
        for (int64_t i_41183 = 0; i_41183 < Rx_40888; i_41183++) {
            int64_t binop_y_41206 = Tx_40887 * i_41183;
            int64_t ltid_x_41185 = sext_i32_i64(ltid_pre_44091);
            int64_t ltid_y_41186 = sext_i32_i64(ltid_pre_44092);
            int32_t ltid_flat_41187 = local_tid_44087;
            int64_t k_41205 = ltid_x_41185 + binop_y_41204;
            int64_t j_41207 = ltid_y_41186 + binop_y_41206;
            int64_t gtid_41208 = jjj_40906 + j_41207;
            int64_t B_row_idx_41209 = kk_41136 + k_41205;
            bool binop_x_41210 = slt64(gtid_41208, i32_res_27407);
            bool binop_y_41211 = slt64(B_row_idx_41209, i32_res_27401);
            bool cond_41212 = binop_x_41210 && binop_y_41211;
            float B_elem_41213;
            
            if (cond_41212) {
                float B_elem_41215 = ((__global
                                       float *) mem_42571)[B_row_idx_41209 *
                                                           i32_res_27407 +
                                                           gtid_41208];
                
                B_elem_41213 = B_elem_41215;
            } else {
                B_elem_41213 = 0.0F;
            }
            
            bool cond_41217 = slt64(k_41205, Tk_40889);
            int64_t b_loc_ind_41218;
            
            if (cond_41217) {
                int64_t binop_y_41219 = TxRx_40892 * k_41205;
                int64_t loc_fi_41220 = j_41207 + binop_y_41219;
                
                b_loc_ind_41218 = loc_fi_41220;
            } else {
                b_loc_ind_41218 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, b_loc_ind_41218) && slt64(b_loc_ind_41218,
                                                             b_loc_szz_40897)) {
                ((__local float *) mem_42846)[b_loc_ind_41218] = B_elem_41213;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_42999[Ry_40886];
    float mem_43003[Rx_40888];
    float mem_43013[Ry_40886 * Rx_40888];
    float loop_mem_43015[Ry_40886 * Rx_40888];
    float mem_param_42986[Ry_40886 * Rx_40888];
    
    for (int32_t i_10 = 0; i_10 < Ry_40886 * Rx_40888; i_10++)
        mem_param_42986[i_10] = loop_mem_42933[i_10];
    for (int64_t i_41225 = 0; i_41225 < Tk_40889; i_41225++) {
        int64_t cmpop_x_41227 = kk_41136 + i_41225;
        bool cond_41228 = slt64(cmpop_x_41227, i32_res_27401);
        float mem_43646[Ry_40886 * Rx_40888];
        
        if (cond_41228) {
            int64_t binop_y_41266 = TxRx_40892 * i_41225;
            int64_t bytes_42988 = (int64_t) 4 * Ry_40886;
            int64_t bytes_42990 = (int64_t) 4 * Rx_40888;
            int64_t ltid_y_41231 = sext_i32_i64(ltid_pre_44091);
            int64_t ltid_x_41229 = sext_i32_i64(ltid_pre_44092);
            int32_t ltid_flat_41230 = local_tid_44087;
            float mem_42989[Ry_40886];
            float mem_42991[Rx_40888];
            int64_t binop_x_41257 = Ry_40886 * ltid_y_41231;
            
            for (int64_t i_41255 = 0; i_41255 < Ry_40886; i_41255++) {
                int64_t binop_x_41258 = i_41255 + binop_x_41257;
                int64_t binop_y_41259 = Tk_40889 * binop_x_41258;
                int64_t a_loc_ind_41260 = i_41225 + binop_y_41259;
                
                for (int64_t i_44124 = 0; i_44124 < (int64_t) 1; i_44124++) {
                    mem_42989[i_41255 + i_44124] = ((__local
                                                     float *) mem_42844)[a_loc_ind_41260 +
                                                                         i_44124];
                }
            }
            
            int64_t binop_y_41268 = Rx_40888 * ltid_x_41229;
            
            for (int64_t i_41264 = 0; i_41264 < Rx_40888; i_41264++) {
                int64_t binop_x_41267 = i_41264 + binop_y_41266;
                int64_t b_loc_ind_41269 = binop_x_41267 + binop_y_41268;
                
                for (int64_t i_44126 = 0; i_44126 < (int64_t) 1; i_44126++) {
                    mem_42991[i_41264 + i_44126] = ((__local
                                                     float *) mem_42846)[b_loc_ind_41269 +
                                                                         i_44126];
                }
            }
            for (int64_t i_44127 = 0; i_44127 < Ry_40886; i_44127++) {
                mem_42999[i_44127] = mem_42989[i_44127];
            }
            for (int64_t i_44128 = 0; i_44128 < Rx_40888; i_44128++) {
                mem_43003[i_44128] = mem_42991[i_44128];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_41276 = sext_i32_i64(ltid_pre_44091);
            int64_t ltid_x_41274 = sext_i32_i64(ltid_pre_44092);
            int32_t ltid_flat_41275 = local_tid_44087;
            int64_t binop_y_41319 = Ry_40886 * ltid_y_41276;
            int64_t binop_y_41323 = Rx_40888 * ltid_x_41274;
            
            for (int64_t i_41313 = 0; i_41313 < Ry_40886; i_41313++) {
                int64_t binop_x_41318 = iii_40905 + i_41313;
                int64_t cmpop_x_41320 = binop_x_41318 + binop_y_41319;
                bool binop_x_41321 = slt64(cmpop_x_41320, m_27392);
                
                for (int64_t i_41316 = 0; i_41316 < Rx_40888; i_41316++) {
                    int64_t binop_x_41322 = jjj_40906 + i_41316;
                    int64_t cmpop_x_41324 = binop_x_41322 + binop_y_41323;
                    bool binop_y_41325 = slt64(cmpop_x_41324, i32_res_27407);
                    bool cond_41326 = binop_x_41321 && binop_y_41325;
                    
                    if (cond_41326) {
                        float a_41328 = mem_42999[i_41313];
                        float c_41330 = mem_param_42986[i_41313 * Rx_40888 +
                                                        i_41316];
                        bool isnan_res_41333;
                        
                        isnan_res_41333 = futrts_isnan32(a_41328);
                        
                        float defunc_1_f_res_41334;
                        
                        if (isnan_res_41333) {
                            defunc_1_f_res_41334 = 0.0F;
                        } else {
                            float b_41329 = mem_43003[i_41316];
                            float defunc_1_f_res_f_res_41335 = a_41328 *
                                  b_41329;
                            
                            defunc_1_f_res_41334 = defunc_1_f_res_f_res_41335;
                        }
                        
                        float defunc_1_op_res_41339 = c_41330 +
                              defunc_1_f_res_41334;
                        
                        mem_param_42986[i_41313 * Rx_40888 + i_41316] =
                            defunc_1_op_res_41339;
                    }
                }
            }
            for (int64_t i_44131 = 0; i_44131 < Ry_40886; i_44131++) {
                for (int64_t i_44132 = 0; i_44132 < Rx_40888; i_44132++) {
                    mem_43013[i_44131 * Rx_40888 + i_44132] =
                        mem_param_42986[i_44131 * Rx_40888 + i_44132];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44133 = 0; i_44133 < Ry_40886; i_44133++) {
                for (int64_t i_44134 = 0; i_44134 < Rx_40888; i_44134++) {
                    mem_43646[i_44133 * Rx_40888 + i_44134] =
                        mem_43013[i_44133 * Rx_40888 + i_44134];
                }
            }
        } else {
            for (int64_t i_44135 = 0; i_44135 < Ry_40886; i_44135++) {
                for (int64_t i_44136 = 0; i_44136 < Rx_40888; i_44136++) {
                    mem_43646[i_44135 * Rx_40888 + i_44136] =
                        mem_param_42986[i_44135 * Rx_40888 + i_44136];
                }
            }
        }
        
        float mem_param_tmp_44121[Ry_40886 * Rx_40888];
        
        for (int32_t i_11 = 0; i_11 < Ry_40886 * Rx_40888; i_11++)
            mem_param_tmp_44121[i_11] = mem_43646[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_40886 * Rx_40888; i_12++)
            mem_param_42986[i_12] = mem_param_tmp_44121[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_40886 * Rx_40888; i_13++)
        loop_mem_43015[i_13] = mem_param_42986[i_13];
    
    int64_t reg_tile_i_44137 = squot64(sext_i32_i64(local_tid_44087), Tx_40887);
    int64_t reg_tile_i_44138 = sext_i32_i64(local_tid_44087) -
            squot64(sext_i32_i64(local_tid_44087), Tx_40887) * Tx_40887;
    int64_t tile_dim_start_44139 = Ry_40886 * (Ty_40885 * gid_y_40903 +
                                               reg_tile_i_44137);
    int64_t tile_dim_start_44140 = Rx_40888 * (Tx_40887 * gid_x_40902 +
                                               reg_tile_i_44138);
    
    for (int64_t nest_i_44141 = 0; nest_i_44141 < Ry_40886; nest_i_44141++) {
        for (int64_t nest_i_44142 = 0; nest_i_44142 < Rx_40888;
             nest_i_44142++) {
            if (slt64(tile_dim_start_44139 + nest_i_44141, m_27392) &&
                slt64(tile_dim_start_44140 + nest_i_44142, i32_res_27407)) {
                ((__global float *) mem_43018)[(tile_dim_start_44139 +
                                                nest_i_44141) * i32_res_27407 +
                                               (tile_dim_start_44140 +
                                                nest_i_44142)] =
                    loop_mem_43015[nest_i_44141 * Rx_40888 + nest_i_44142];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_40885
    #undef Ry_40886
    #undef Tx_40887
    #undef Rx_40888
    #undef Tk_40889
    #undef tk_div_tx_40890
    #undef tk_div_ty_40891
    #undef TxRx_40892
    #undef TyRy_40893
    #undef a_loc_szz_40895
    #undef b_loc_szz_40897
}
__kernel void mainDetailedzisegmap_intragroup_41353(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43076_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43067_backing_aligned_1,
                                                    int64_t m_27392,
                                                    int64_t i32_res_27407,
                                                    int64_t num_groups_y_41351,
                                                    int64_t num_whole_tiles_41369,
                                                    int64_t residual_input_41496,
                                                    unsigned char cond_41497,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43028,
                                                    __global
                                                    unsigned char *mem_43057,
                                                    __global
                                                    unsigned char *mem_43084)
{
    #define tile_sizze_41348 (mainDetailedzitile_sizze_41347)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43076_backing_5 = (__local volatile
                                                           char *) mem_43076_backing_aligned_0;
    __local volatile char *restrict mem_43067_backing_0 = (__local volatile
                                                           char *) mem_43067_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44218;
    int32_t local_tid_44219;
    int64_t group_sizze_44222;
    int32_t wave_sizze_44221;
    int32_t group_tid_44220;
    
    global_tid_44218 = get_global_id(0);
    local_tid_44219 = get_local_id(0);
    group_sizze_44222 = get_local_size(0);
    wave_sizze_44221 = LOCKSTEP_WIDTH;
    group_tid_44220 = get_group_id(0);
    
    int32_t gid_flat_41353;
    
    gid_flat_41353 = group_tid_44220;
    
    int32_t ltid_pre_44223;
    
    ltid_pre_44223 = squot32(local_tid_44219, sext_i64_i32(tile_sizze_41348));
    
    int32_t ltid_pre_44224;
    
    ltid_pre_44224 = local_tid_44219 - squot32(local_tid_44219,
                                               sext_i64_i32(tile_sizze_41348)) *
        sext_i64_i32(tile_sizze_41348);
    
    int64_t gid_x_41345;
    
    gid_x_41345 = squot64(sext_i32_i64(group_tid_44220), num_groups_y_41351);
    
    int64_t gid_y_41346;
    
    gid_y_41346 = sext_i32_i64(group_tid_44220) -
        squot64(sext_i32_i64(group_tid_44220), num_groups_y_41351) *
        num_groups_y_41351;
    
    float mem_43062[1];
    int64_t ltid_y_41372 = sext_i32_i64(ltid_pre_44223);
    int64_t ltid_x_41370 = sext_i32_i64(ltid_pre_44224);
    int32_t ltid_flat_41371 = local_tid_44219;
    
    if (slt64(ltid_y_41372, tile_sizze_41348) && slt64(ltid_x_41370,
                                                       tile_sizze_41348)) {
        mem_43062[(int64_t) 0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_41455 = gid_x_41345 * tile_sizze_41348;
    int64_t binop_x_41470 = gid_y_41346 * tile_sizze_41348;
    __local char *mem_43067;
    
    mem_43067 = (__local char *) mem_43067_backing_0;
    
    float accs_mem_43072[1];
    float mem_param_43063[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43063[i_1] = mem_43062[i_1];
    for (int64_t tile_id_41381 = 0; tile_id_41381 < num_whole_tiles_41369;
         tile_id_41381++) {
        int64_t binop_x_41453 = tile_sizze_41348 * tile_id_41381;
        int64_t ltid_y_41384 = sext_i32_i64(ltid_pre_44223);
        int64_t ltid_x_41382 = sext_i32_i64(ltid_pre_44224);
        int32_t ltid_flat_41383 = local_tid_44219;
        int64_t j_41454 = ltid_x_41382 + binop_x_41453;
        int64_t gtid_41456 = ltid_y_41384 + binop_x_41455;
        bool binop_x_41461 = slt64(j_41454, i32_res_27407);
        bool binop_y_41462 = slt64(gtid_41456, m_27392);
        bool cond_41463 = binop_x_41461 && binop_y_41462;
        float pre_41464;
        
        if (cond_41463) {
            float x_41465 = ((__global
                              float *) defunc_3_map_res_mem_43028)[gtid_41456 *
                                                                   i32_res_27407 +
                                                                   j_41454];
            
            pre_41464 = x_41465;
        } else {
            pre_41464 = 0.0F;
        }
        ((__local float *) mem_43067)[ltid_y_41384 * tile_sizze_41348 +
                                      ltid_x_41382] = pre_41464;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43071[1];
        int64_t ltid_y_41416 = sext_i32_i64(ltid_pre_44223);
        int64_t ltid_x_41414 = sext_i32_i64(ltid_pre_44224);
        int32_t ltid_flat_41415 = local_tid_44219;
        int64_t gtid_41469 = ltid_y_41416 + binop_x_41455;
        int64_t gtid_41471 = ltid_x_41414 + binop_x_41470;
        float acc_41474 = mem_param_43063[(int64_t) 0];
        bool binop_x_41478 = slt64(gtid_41469, m_27392);
        bool binop_y_41479 = slt64(gtid_41471, i32_res_27407);
        bool cond_41480 = binop_x_41478 && binop_y_41479;
        float acc_41481;
        
        if (cond_41480) {
            float x_41482;
            float redout_42493 = acc_41474;
            
            for (int64_t i_42494 = 0; i_42494 < tile_sizze_41348; i_42494++) {
                float x_41486 = ((__local float *) mem_43067)[ltid_y_41416 *
                                                              tile_sizze_41348 +
                                                              i_42494];
                int64_t slice_42545 = binop_x_41453 + i_42494;
                float x_41487 = ((__global float *) mem_43057)[slice_42545 *
                                                               (i32_res_27407 *
                                                                m_27392) +
                                                               gtid_41469 *
                                                               i32_res_27407 +
                                                               gtid_41471];
                float defunc_1_f_res_41488 = x_41486 * x_41487;
                float defunc_1_op_res_41485 = defunc_1_f_res_41488 +
                      redout_42493;
                float redout_tmp_44227 = defunc_1_op_res_41485;
                
                redout_42493 = redout_tmp_44227;
            }
            x_41482 = redout_42493;
            acc_41481 = x_41482;
        } else {
            acc_41481 = acc_41474;
        }
        mem_43071[(int64_t) 0] = acc_41481;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44225[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44225[i_2] = mem_43071[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43063[i_3] = mem_param_tmp_44225[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43072[i_4] = mem_param_43063[i_4];
    
    __local char *mem_43076;
    
    mem_43076 = (__local char *) mem_43076_backing_5;
    
    float mem_43080[1];
    float mem_43660[1];
    
    if (cond_41497) {
        mem_43660[(int64_t) 0] = accs_mem_43072[(int64_t) 0];
    } else {
        int64_t binop_x_41570 = tile_sizze_41348 * num_whole_tiles_41369;
        int64_t ltid_y_41500 = sext_i32_i64(ltid_pre_44223);
        int64_t ltid_x_41498 = sext_i32_i64(ltid_pre_44224);
        int32_t ltid_flat_41499 = local_tid_44219;
        int64_t j_41571 = ltid_x_41498 + binop_x_41570;
        int64_t gtid_41573 = binop_x_41455 + ltid_y_41500;
        bool binop_x_41578 = slt64(j_41571, i32_res_27407);
        bool binop_y_41579 = slt64(gtid_41573, m_27392);
        bool cond_41580 = binop_x_41578 && binop_y_41579;
        float pre_41581;
        
        if (cond_41580) {
            float x_41582 = ((__global
                              float *) defunc_3_map_res_mem_43028)[gtid_41573 *
                                                                   i32_res_27407 +
                                                                   j_41571];
            
            pre_41581 = x_41582;
        } else {
            pre_41581 = 0.0F;
        }
        ((__local float *) mem_43076)[ltid_y_41500 * tile_sizze_41348 +
                                      ltid_x_41498] = pre_41581;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_y_41533 = sext_i32_i64(ltid_pre_44223);
        int64_t ltid_x_41531 = sext_i32_i64(ltid_pre_44224);
        int32_t ltid_flat_41532 = local_tid_44219;
        int64_t gtid_41587 = binop_x_41455 + ltid_y_41533;
        int64_t gtid_41589 = binop_x_41470 + ltid_x_41531;
        float acc_41592 = accs_mem_43072[(int64_t) 0];
        bool binop_x_41596 = slt64(gtid_41587, m_27392);
        bool binop_y_41597 = slt64(gtid_41589, i32_res_27407);
        bool cond_41598 = binop_x_41596 && binop_y_41597;
        float acc_41599;
        
        if (cond_41598) {
            float x_41600;
            float redout_42495 = acc_41592;
            
            for (int64_t i_42496 = 0; i_42496 < residual_input_41496;
                 i_42496++) {
                float x_41604 = ((__local float *) mem_43076)[ltid_y_41533 *
                                                              tile_sizze_41348 +
                                                              i_42496];
                int64_t slice_42546 = binop_x_41570 + i_42496;
                float x_41605 = ((__global float *) mem_43057)[slice_42546 *
                                                               (i32_res_27407 *
                                                                m_27392) +
                                                               gtid_41587 *
                                                               i32_res_27407 +
                                                               gtid_41589];
                float defunc_1_f_res_41606 = x_41604 * x_41605;
                float defunc_1_op_res_41603 = defunc_1_f_res_41606 +
                      redout_42495;
                float redout_tmp_44228 = defunc_1_op_res_41603;
                
                redout_42495 = redout_tmp_44228;
            }
            x_41600 = redout_42495;
            acc_41599 = x_41600;
        } else {
            acc_41599 = acc_41592;
        }
        mem_43080[(int64_t) 0] = acc_41599;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43660[(int64_t) 0] = mem_43080[(int64_t) 0];
    }
    
    int64_t thread_out_index_44229 = gid_x_41345 * tile_sizze_41348 +
            sext_i32_i64(ltid_pre_44223);
    int64_t thread_out_index_44230 = gid_y_41346 * tile_sizze_41348 +
            sext_i32_i64(ltid_pre_44224);
    
    if (slt64(thread_out_index_44229, m_27392) && slt64(thread_out_index_44230,
                                                        i32_res_27407)) {
        ((__global float *) mem_43084)[thread_out_index_44229 * i32_res_27407 +
                                       thread_out_index_44230] =
            mem_43660[(int64_t) 0];
    }
    
  error_5:
    return;
    #undef tile_sizze_41348
}
__kernel void mainDetailedzisegmap_intragroup_41645(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43136_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43134_backing_aligned_1,
                                                    int64_t N_27391,
                                                    int64_t m_27392,
                                                    int64_t i32_res_27407,
                                                    int64_t gridDim_x_41639,
                                                    int64_t full_tiles_41670,
                                                    int64_t kk_41873, __global
                                                    unsigned char *defunc_4_map_res_mem_43094,
                                                    __global
                                                    unsigned char *mem_43118,
                                                    __global
                                                    unsigned char *mem_43308)
{
    #define Ty_41626 (mainDetailedziTy_41623)
    #define Ry_41627 (mainDetailedziRy_41625)
    #define Tx_41628 (mainDetailedziTx_41622)
    #define Rx_41629 (mainDetailedziRx_41624)
    #define Tk_41630 (mainDetailedziTk_41621)
    #define tk_div_tx_41631 (sdiv_up64(mainDetailedziTk_41621, mainDetailedziTx_41622))
    #define tk_div_ty_41632 (sdiv_up64(mainDetailedziTk_41621, mainDetailedziTy_41623))
    #define TxRx_41633 (mainDetailedziTx_41622 * mainDetailedziRx_41624)
    #define TyRy_41634 (mainDetailedziTy_41623 * mainDetailedziRy_41625)
    #define a_loc_szz_41636 (mainDetailedziTk_41621 * (mainDetailedziTy_41623 * mainDetailedziRy_41625))
    #define b_loc_szz_41638 (mainDetailedziRx_41624 * (mainDetailedziTx_41622 * mainDetailedziTk_41621))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43136_backing_1 = (__local volatile
                                                           char *) mem_43136_backing_aligned_0;
    __local volatile char *restrict mem_43134_backing_0 = (__local volatile
                                                           char *) mem_43134_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44306;
    int32_t local_tid_44307;
    int64_t group_sizze_44310;
    int32_t wave_sizze_44309;
    int32_t group_tid_44308;
    
    global_tid_44306 = get_global_id(0);
    local_tid_44307 = get_local_id(0);
    group_sizze_44310 = get_local_size(0);
    wave_sizze_44309 = LOCKSTEP_WIDTH;
    group_tid_44308 = get_group_id(0);
    
    int32_t gid_flat_41645;
    
    gid_flat_41645 = group_tid_44308;
    
    int32_t ltid_pre_44311;
    
    ltid_pre_44311 = squot32(local_tid_44307, sext_i64_i32(Tx_41628));
    
    int32_t ltid_pre_44312;
    
    ltid_pre_44312 = local_tid_44307 - squot32(local_tid_44307,
                                               sext_i64_i32(Tx_41628)) *
        sext_i64_i32(Tx_41628);
    
    int64_t gid_y_41644;
    
    gid_y_41644 = squot64(sext_i32_i64(group_tid_44308), gridDim_x_41639);
    
    int64_t gid_x_41643;
    
    gid_x_41643 = sext_i32_i64(group_tid_44308) -
        squot64(sext_i32_i64(group_tid_44308), gridDim_x_41639) *
        gridDim_x_41639;
    
    int64_t iii_41646;
    
    iii_41646 = TyRy_41634 * gid_y_41644;
    
    int64_t jjj_41647 = TxRx_41633 * gid_x_41643;
    float mem_43132[Ry_41627 * Rx_41629];
    int64_t ltid_y_41650 = sext_i32_i64(ltid_pre_44311);
    int64_t ltid_x_41648 = sext_i32_i64(ltid_pre_44312);
    int32_t ltid_flat_41649 = local_tid_44307;
    float mem_43123[Ry_41627 * Rx_41629];
    
    for (int64_t i_41661 = 0; i_41661 < Ry_41627; i_41661++) {
        for (int64_t i_41664 = 0; i_41664 < Rx_41629; i_41664++) {
            mem_43123[i_41661 * Rx_41629 + i_41664] = 0.0F;
        }
    }
    for (int64_t i_44315 = 0; i_44315 < Ry_41627; i_44315++) {
        for (int64_t i_44316 = 0; i_44316 < Rx_41629; i_44316++) {
            mem_43132[i_44315 * Rx_41629 + i_44316] = mem_43123[i_44315 *
                                                                Rx_41629 +
                                                                i_44316];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43134;
    
    mem_43134 = (__local char *) mem_43134_backing_0;
    
    __local char *mem_43136;
    
    mem_43136 = (__local char *) mem_43136_backing_1;
    
    float mem_43207[Ry_41627];
    float mem_43211[Rx_41629];
    float loop_mem_43223[Ry_41627 * Rx_41629];
    float mem_param_43137[Ry_41627 * Rx_41629];
    
    for (int32_t i_2 = 0; i_2 < Ry_41627 * Rx_41629; i_2++)
        mem_param_43137[i_2] = mem_43132[i_2];
    for (int64_t i_41671 = 0; i_41671 < full_tiles_41670; i_41671++) {
        int64_t kk_41675 = Tk_41630 * i_41671;
        
        for (int64_t i_41676 = 0; i_41676 < Ry_41627; i_41676++) {
            int64_t binop_y_41699 = Ty_41626 * i_41676;
            
            for (int64_t i_41678 = 0; i_41678 < tk_div_tx_41631; i_41678++) {
                int64_t binop_y_41697 = Tx_41628 * i_41678;
                int64_t ltid_x_41680 = sext_i32_i64(ltid_pre_44311);
                int64_t ltid_y_41681 = sext_i32_i64(ltid_pre_44312);
                int32_t ltid_flat_41682 = local_tid_44307;
                int64_t k_41698 = ltid_y_41681 + binop_y_41697;
                int64_t i_41700 = ltid_x_41680 + binop_y_41699;
                int64_t gtid_41701 = iii_41646 + i_41700;
                int64_t A_col_idx_41702 = kk_41675 + k_41698;
                bool cond_41703 = slt64(gtid_41701, m_27392);
                float A_elem_41704;
                
                if (cond_41703) {
                    float A_elem_41706 = ((__global
                                           float *) defunc_4_map_res_mem_43094)[gtid_41701 *
                                                                                i32_res_27407 +
                                                                                A_col_idx_41702];
                    
                    A_elem_41704 = A_elem_41706;
                } else {
                    A_elem_41704 = 0.0F;
                }
                
                bool cond_41708 = slt64(k_41698, Tk_41630);
                int64_t a_loc_ind_41709;
                
                if (cond_41708) {
                    int64_t binop_y_41710 = Tk_41630 * i_41700;
                    int64_t loc_fi_41711 = k_41698 + binop_y_41710;
                    
                    a_loc_ind_41709 = loc_fi_41711;
                } else {
                    a_loc_ind_41709 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, a_loc_ind_41709) &&
                    slt64(a_loc_ind_41709, a_loc_szz_41636)) {
                    ((__local float *) mem_43134)[a_loc_ind_41709] =
                        A_elem_41704;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_41716 = 0; i_41716 < tk_div_ty_41632; i_41716++) {
            int64_t binop_y_41737 = Ty_41626 * i_41716;
            
            for (int64_t i_41718 = 0; i_41718 < Rx_41629; i_41718++) {
                int64_t binop_y_41739 = Tx_41628 * i_41718;
                int64_t ltid_x_41720 = sext_i32_i64(ltid_pre_44311);
                int64_t ltid_y_41721 = sext_i32_i64(ltid_pre_44312);
                int32_t ltid_flat_41722 = local_tid_44307;
                int64_t k_41738 = ltid_x_41720 + binop_y_41737;
                int64_t j_41740 = ltid_y_41721 + binop_y_41739;
                int64_t gtid_41741 = jjj_41647 + j_41740;
                int64_t B_row_idx_41742 = kk_41675 + k_41738;
                bool cond_41743 = slt64(gtid_41741, N_27391);
                float B_elem_41744;
                
                if (cond_41743) {
                    float B_elem_41746 = ((__global
                                           float *) mem_43118)[B_row_idx_41742 *
                                                               N_27391 +
                                                               gtid_41741];
                    
                    B_elem_41744 = B_elem_41746;
                } else {
                    B_elem_41744 = 0.0F;
                }
                
                bool cond_41748 = slt64(k_41738, Tk_41630);
                int64_t b_loc_ind_41749;
                
                if (cond_41748) {
                    int64_t binop_y_41750 = TxRx_41633 * k_41738;
                    int64_t loc_fi_41751 = j_41740 + binop_y_41750;
                    
                    b_loc_ind_41749 = loc_fi_41751;
                } else {
                    b_loc_ind_41749 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, b_loc_ind_41749) &&
                    slt64(b_loc_ind_41749, b_loc_szz_41638)) {
                    ((__local float *) mem_43136)[b_loc_ind_41749] =
                        B_elem_41744;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_43222[Ry_41627 * Rx_41629];
        float mem_param_43194[Ry_41627 * Rx_41629];
        
        for (int32_t i_3 = 0; i_3 < Ry_41627 * Rx_41629; i_3++)
            mem_param_43194[i_3] = mem_param_43137[i_3];
        for (int64_t i_41756 = 0; i_41756 < Tk_41630; i_41756++) {
            int64_t binop_y_41795 = TxRx_41633 * i_41756;
            int64_t ltid_y_41760 = sext_i32_i64(ltid_pre_44311);
            int64_t ltid_x_41758 = sext_i32_i64(ltid_pre_44312);
            int32_t ltid_flat_41759 = local_tid_44307;
            float mem_43197[Ry_41627];
            float mem_43199[Rx_41629];
            int64_t binop_x_41786 = Ry_41627 * ltid_y_41760;
            
            for (int64_t i_41784 = 0; i_41784 < Ry_41627; i_41784++) {
                int64_t binop_x_41787 = i_41784 + binop_x_41786;
                int64_t binop_y_41788 = Tk_41630 * binop_x_41787;
                int64_t a_loc_ind_41789 = i_41756 + binop_y_41788;
                
                for (int64_t i_44328 = 0; i_44328 < (int64_t) 1; i_44328++) {
                    mem_43197[i_41784 + i_44328] = ((__local
                                                     float *) mem_43134)[a_loc_ind_41789 +
                                                                         i_44328];
                }
            }
            
            int64_t binop_y_41797 = Rx_41629 * ltid_x_41758;
            
            for (int64_t i_41793 = 0; i_41793 < Rx_41629; i_41793++) {
                int64_t binop_x_41796 = i_41793 + binop_y_41795;
                int64_t b_loc_ind_41798 = binop_x_41796 + binop_y_41797;
                
                for (int64_t i_44330 = 0; i_44330 < (int64_t) 1; i_44330++) {
                    mem_43199[i_41793 + i_44330] = ((__local
                                                     float *) mem_43136)[b_loc_ind_41798 +
                                                                         i_44330];
                }
            }
            for (int64_t i_44331 = 0; i_44331 < Ry_41627; i_44331++) {
                mem_43207[i_44331] = mem_43197[i_44331];
            }
            for (int64_t i_44332 = 0; i_44332 < Rx_41629; i_44332++) {
                mem_43211[i_44332] = mem_43199[i_44332];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_43221[Ry_41627 * Rx_41629];
            int64_t ltid_y_41805 = sext_i32_i64(ltid_pre_44311);
            int64_t ltid_x_41803 = sext_i32_i64(ltid_pre_44312);
            int32_t ltid_flat_41804 = local_tid_44307;
            int64_t binop_y_41846 = Ry_41627 * ltid_y_41805;
            int64_t binop_y_41850 = Rx_41629 * ltid_x_41803;
            
            for (int64_t i_41840 = 0; i_41840 < Ry_41627; i_41840++) {
                int64_t binop_x_41845 = iii_41646 + i_41840;
                int64_t cmpop_x_41847 = binop_x_41845 + binop_y_41846;
                bool binop_x_41848 = slt64(cmpop_x_41847, m_27392);
                
                for (int64_t i_41843 = 0; i_41843 < Rx_41629; i_41843++) {
                    int64_t binop_x_41849 = jjj_41647 + i_41843;
                    int64_t cmpop_x_41851 = binop_x_41849 + binop_y_41850;
                    bool binop_y_41852 = slt64(cmpop_x_41851, N_27391);
                    bool cond_41853 = binop_x_41848 && binop_y_41852;
                    
                    if (cond_41853) {
                        float a_41855 = mem_43207[i_41840];
                        float b_41856 = mem_43211[i_41843];
                        float c_41857 = mem_param_43194[i_41840 * Rx_41629 +
                                                        i_41843];
                        float defunc_1_f_res_41860 = a_41855 * b_41856;
                        float defunc_1_op_res_41864 = c_41857 +
                              defunc_1_f_res_41860;
                        
                        mem_param_43194[i_41840 * Rx_41629 + i_41843] =
                            defunc_1_op_res_41864;
                    }
                }
            }
            for (int64_t i_44335 = 0; i_44335 < Ry_41627; i_44335++) {
                for (int64_t i_44336 = 0; i_44336 < Rx_41629; i_44336++) {
                    mem_43221[i_44335 * Rx_41629 + i_44336] =
                        mem_param_43194[i_44335 * Rx_41629 + i_44336];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44325[Ry_41627 * Rx_41629];
            
            for (int32_t i_4 = 0; i_4 < Ry_41627 * Rx_41629; i_4++)
                mem_param_tmp_44325[i_4] = mem_43221[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_41627 * Rx_41629; i_5++)
                mem_param_43194[i_5] = mem_param_tmp_44325[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_41627 * Rx_41629; i_6++)
            loop_mem_43222[i_6] = mem_param_43194[i_6];
        
        float mem_param_tmp_44317[Ry_41627 * Rx_41629];
        
        for (int32_t i_7 = 0; i_7 < Ry_41627 * Rx_41629; i_7++)
            mem_param_tmp_44317[i_7] = loop_mem_43222[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_41627 * Rx_41629; i_8++)
            mem_param_43137[i_8] = mem_param_tmp_44317[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_41627 * Rx_41629; i_9++)
        loop_mem_43223[i_9] = mem_param_43137[i_9];
    for (int64_t i_41874 = 0; i_41874 < Ry_41627; i_41874++) {
        int64_t binop_y_41899 = Ty_41626 * i_41874;
        
        for (int64_t i_41876 = 0; i_41876 < tk_div_tx_41631; i_41876++) {
            int64_t binop_y_41897 = Tx_41628 * i_41876;
            int64_t ltid_x_41878 = sext_i32_i64(ltid_pre_44311);
            int64_t ltid_y_41879 = sext_i32_i64(ltid_pre_44312);
            int32_t ltid_flat_41880 = local_tid_44307;
            int64_t k_41898 = ltid_y_41879 + binop_y_41897;
            int64_t i_41900 = ltid_x_41878 + binop_y_41899;
            int64_t gtid_41901 = iii_41646 + i_41900;
            int64_t A_col_idx_41902 = kk_41873 + k_41898;
            bool binop_x_41903 = slt64(gtid_41901, m_27392);
            bool binop_y_41904 = slt64(A_col_idx_41902, i32_res_27407);
            bool cond_41905 = binop_x_41903 && binop_y_41904;
            float A_elem_41906;
            
            if (cond_41905) {
                float A_elem_41908 = ((__global
                                       float *) defunc_4_map_res_mem_43094)[gtid_41901 *
                                                                            i32_res_27407 +
                                                                            A_col_idx_41902];
                
                A_elem_41906 = A_elem_41908;
            } else {
                A_elem_41906 = 0.0F;
            }
            
            bool cond_41910 = slt64(k_41898, Tk_41630);
            int64_t a_loc_ind_41911;
            
            if (cond_41910) {
                int64_t binop_y_41912 = Tk_41630 * i_41900;
                int64_t loc_fi_41913 = k_41898 + binop_y_41912;
                
                a_loc_ind_41911 = loc_fi_41913;
            } else {
                a_loc_ind_41911 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, a_loc_ind_41911) && slt64(a_loc_ind_41911,
                                                             a_loc_szz_41636)) {
                ((__local float *) mem_43134)[a_loc_ind_41911] = A_elem_41906;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_41918 = 0; i_41918 < tk_div_ty_41632; i_41918++) {
        int64_t binop_y_41941 = Ty_41626 * i_41918;
        
        for (int64_t i_41920 = 0; i_41920 < Rx_41629; i_41920++) {
            int64_t binop_y_41943 = Tx_41628 * i_41920;
            int64_t ltid_x_41922 = sext_i32_i64(ltid_pre_44311);
            int64_t ltid_y_41923 = sext_i32_i64(ltid_pre_44312);
            int32_t ltid_flat_41924 = local_tid_44307;
            int64_t k_41942 = ltid_x_41922 + binop_y_41941;
            int64_t j_41944 = ltid_y_41923 + binop_y_41943;
            int64_t gtid_41945 = jjj_41647 + j_41944;
            int64_t B_row_idx_41946 = kk_41873 + k_41942;
            bool binop_x_41947 = slt64(gtid_41945, N_27391);
            bool binop_y_41948 = slt64(B_row_idx_41946, i32_res_27407);
            bool cond_41949 = binop_x_41947 && binop_y_41948;
            float B_elem_41950;
            
            if (cond_41949) {
                float B_elem_41952 = ((__global
                                       float *) mem_43118)[B_row_idx_41946 *
                                                           N_27391 +
                                                           gtid_41945];
                
                B_elem_41950 = B_elem_41952;
            } else {
                B_elem_41950 = 0.0F;
            }
            
            bool cond_41954 = slt64(k_41942, Tk_41630);
            int64_t b_loc_ind_41955;
            
            if (cond_41954) {
                int64_t binop_y_41956 = TxRx_41633 * k_41942;
                int64_t loc_fi_41957 = j_41944 + binop_y_41956;
                
                b_loc_ind_41955 = loc_fi_41957;
            } else {
                b_loc_ind_41955 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, b_loc_ind_41955) && slt64(b_loc_ind_41955,
                                                             b_loc_szz_41638)) {
                ((__local float *) mem_43136)[b_loc_ind_41955] = B_elem_41950;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_43289[Ry_41627];
    float mem_43293[Rx_41629];
    float mem_43303[Ry_41627 * Rx_41629];
    float loop_mem_43305[Ry_41627 * Rx_41629];
    float mem_param_43276[Ry_41627 * Rx_41629];
    
    for (int32_t i_10 = 0; i_10 < Ry_41627 * Rx_41629; i_10++)
        mem_param_43276[i_10] = loop_mem_43223[i_10];
    for (int64_t i_41962 = 0; i_41962 < Tk_41630; i_41962++) {
        int64_t cmpop_x_41964 = kk_41873 + i_41962;
        bool cond_41965 = slt64(cmpop_x_41964, i32_res_27407);
        float mem_43676[Ry_41627 * Rx_41629];
        
        if (cond_41965) {
            int64_t binop_y_42003 = TxRx_41633 * i_41962;
            int64_t bytes_43278 = (int64_t) 4 * Ry_41627;
            int64_t bytes_43280 = (int64_t) 4 * Rx_41629;
            int64_t ltid_y_41968 = sext_i32_i64(ltid_pre_44311);
            int64_t ltid_x_41966 = sext_i32_i64(ltid_pre_44312);
            int32_t ltid_flat_41967 = local_tid_44307;
            float mem_43279[Ry_41627];
            float mem_43281[Rx_41629];
            int64_t binop_x_41994 = Ry_41627 * ltid_y_41968;
            
            for (int64_t i_41992 = 0; i_41992 < Ry_41627; i_41992++) {
                int64_t binop_x_41995 = i_41992 + binop_x_41994;
                int64_t binop_y_41996 = Tk_41630 * binop_x_41995;
                int64_t a_loc_ind_41997 = i_41962 + binop_y_41996;
                
                for (int64_t i_44344 = 0; i_44344 < (int64_t) 1; i_44344++) {
                    mem_43279[i_41992 + i_44344] = ((__local
                                                     float *) mem_43134)[a_loc_ind_41997 +
                                                                         i_44344];
                }
            }
            
            int64_t binop_y_42005 = Rx_41629 * ltid_x_41966;
            
            for (int64_t i_42001 = 0; i_42001 < Rx_41629; i_42001++) {
                int64_t binop_x_42004 = i_42001 + binop_y_42003;
                int64_t b_loc_ind_42006 = binop_x_42004 + binop_y_42005;
                
                for (int64_t i_44346 = 0; i_44346 < (int64_t) 1; i_44346++) {
                    mem_43281[i_42001 + i_44346] = ((__local
                                                     float *) mem_43136)[b_loc_ind_42006 +
                                                                         i_44346];
                }
            }
            for (int64_t i_44347 = 0; i_44347 < Ry_41627; i_44347++) {
                mem_43289[i_44347] = mem_43279[i_44347];
            }
            for (int64_t i_44348 = 0; i_44348 < Rx_41629; i_44348++) {
                mem_43293[i_44348] = mem_43281[i_44348];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_42013 = sext_i32_i64(ltid_pre_44311);
            int64_t ltid_x_42011 = sext_i32_i64(ltid_pre_44312);
            int32_t ltid_flat_42012 = local_tid_44307;
            int64_t binop_y_42054 = Ry_41627 * ltid_y_42013;
            int64_t binop_y_42058 = Rx_41629 * ltid_x_42011;
            
            for (int64_t i_42048 = 0; i_42048 < Ry_41627; i_42048++) {
                int64_t binop_x_42053 = iii_41646 + i_42048;
                int64_t cmpop_x_42055 = binop_x_42053 + binop_y_42054;
                bool binop_x_42056 = slt64(cmpop_x_42055, m_27392);
                
                for (int64_t i_42051 = 0; i_42051 < Rx_41629; i_42051++) {
                    int64_t binop_x_42057 = jjj_41647 + i_42051;
                    int64_t cmpop_x_42059 = binop_x_42057 + binop_y_42058;
                    bool binop_y_42060 = slt64(cmpop_x_42059, N_27391);
                    bool cond_42061 = binop_x_42056 && binop_y_42060;
                    
                    if (cond_42061) {
                        float a_42063 = mem_43289[i_42048];
                        float b_42064 = mem_43293[i_42051];
                        float c_42065 = mem_param_43276[i_42048 * Rx_41629 +
                                                        i_42051];
                        float defunc_1_f_res_42068 = a_42063 * b_42064;
                        float defunc_1_op_res_42072 = c_42065 +
                              defunc_1_f_res_42068;
                        
                        mem_param_43276[i_42048 * Rx_41629 + i_42051] =
                            defunc_1_op_res_42072;
                    }
                }
            }
            for (int64_t i_44351 = 0; i_44351 < Ry_41627; i_44351++) {
                for (int64_t i_44352 = 0; i_44352 < Rx_41629; i_44352++) {
                    mem_43303[i_44351 * Rx_41629 + i_44352] =
                        mem_param_43276[i_44351 * Rx_41629 + i_44352];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44353 = 0; i_44353 < Ry_41627; i_44353++) {
                for (int64_t i_44354 = 0; i_44354 < Rx_41629; i_44354++) {
                    mem_43676[i_44353 * Rx_41629 + i_44354] =
                        mem_43303[i_44353 * Rx_41629 + i_44354];
                }
            }
        } else {
            for (int64_t i_44355 = 0; i_44355 < Ry_41627; i_44355++) {
                for (int64_t i_44356 = 0; i_44356 < Rx_41629; i_44356++) {
                    mem_43676[i_44355 * Rx_41629 + i_44356] =
                        mem_param_43276[i_44355 * Rx_41629 + i_44356];
                }
            }
        }
        
        float mem_param_tmp_44341[Ry_41627 * Rx_41629];
        
        for (int32_t i_11 = 0; i_11 < Ry_41627 * Rx_41629; i_11++)
            mem_param_tmp_44341[i_11] = mem_43676[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_41627 * Rx_41629; i_12++)
            mem_param_43276[i_12] = mem_param_tmp_44341[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_41627 * Rx_41629; i_13++)
        loop_mem_43305[i_13] = mem_param_43276[i_13];
    
    int64_t reg_tile_i_44357 = squot64(sext_i32_i64(local_tid_44307), Tx_41628);
    int64_t reg_tile_i_44358 = sext_i32_i64(local_tid_44307) -
            squot64(sext_i32_i64(local_tid_44307), Tx_41628) * Tx_41628;
    int64_t tile_dim_start_44359 = Ry_41627 * (Ty_41626 * gid_y_41644 +
                                               reg_tile_i_44357);
    int64_t tile_dim_start_44360 = Rx_41629 * (Tx_41628 * gid_x_41643 +
                                               reg_tile_i_44358);
    
    for (int64_t nest_i_44361 = 0; nest_i_44361 < Ry_41627; nest_i_44361++) {
        for (int64_t nest_i_44362 = 0; nest_i_44362 < Rx_41629;
             nest_i_44362++) {
            if (slt64(tile_dim_start_44359 + nest_i_44361, m_27392) &&
                slt64(tile_dim_start_44360 + nest_i_44362, N_27391)) {
                ((__global float *) mem_43308)[(tile_dim_start_44359 +
                                                nest_i_44361) * N_27391 +
                                               (tile_dim_start_44360 +
                                                nest_i_44362)] =
                    loop_mem_43305[nest_i_44361 * Rx_41629 + nest_i_44362];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_41626
    #undef Ry_41627
    #undef Tx_41628
    #undef Rx_41629
    #undef Tk_41630
    #undef tk_div_tx_41631
    #undef tk_div_ty_41632
    #undef TxRx_41633
    #undef TyRy_41634
    #undef a_loc_szz_41636
    #undef b_loc_szz_41638
}
__kernel void mainDetailedzisegmap_intragroup_42079(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43381_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43374_backing_aligned_1,
                                                    int64_t m_27392,
                                                    int32_t n_27395,
                                                    float hfrac_27397,
                                                    int64_t i32_res_27401,
                                                    int32_t k2p2_27403,
                                                    int64_t num_whole_tiles_42101,
                                                    int64_t residual_input_42190,
                                                    unsigned char cond_42191,
                                                    __global
                                                    unsigned char *mem_43360,
                                                    __global
                                                    unsigned char *mem_43363,
                                                    __global
                                                    unsigned char *mem_43394,
                                                    __global
                                                    unsigned char *mem_43396,
                                                    __global
                                                    unsigned char *mem_43398)
{
    #define segmap_group_sizze_31683 (mainDetailedzisegmap_group_sizze_31652)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43381_backing_5 = (__local volatile
                                                           char *) mem_43381_backing_aligned_0;
    __local volatile char *restrict mem_43374_backing_0 = (__local volatile
                                                           char *) mem_43374_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44530;
    int32_t local_tid_44531;
    int64_t group_sizze_44534;
    int32_t wave_sizze_44533;
    int32_t group_tid_44532;
    
    global_tid_44530 = get_global_id(0);
    local_tid_44531 = get_local_id(0);
    group_sizze_44534 = get_local_size(0);
    wave_sizze_44533 = LOCKSTEP_WIDTH;
    group_tid_44532 = get_group_id(0);
    
    int32_t gid_flat_42079;
    
    gid_flat_42079 = group_tid_44532;
    
    int32_t ltid_pre_44535;
    
    ltid_pre_44535 = local_tid_44531;
    
    int64_t gid_42078;
    
    gid_42078 = sext_i32_i64(group_tid_44532);
    
    int64_t binop_x_42086;
    
    binop_x_42086 = segmap_group_sizze_31683 * gid_42078;
    
    int32_t mem_43367[1];
    int64_t ltid_42080 = sext_i32_i64(ltid_pre_44535);
    int32_t ltid_flat_42081 = local_tid_44531;
    int64_t gtid_42087 = ltid_42080 + binop_x_42086;
    bool cond_42088 = slt64(gtid_42087, m_27392);
    int32_t pre_42089;
    
    if (cond_42088) {
        int32_t defunc_0_f_res_42091;
        int32_t redout_42503 = 0;
        
        for (int32_t i_42548 = 0; i_42548 < n_27395; i_42548++) {
            int64_t i_42504 = sext_i32_i64(i_42548);
            float x_42095 = ((__global float *) mem_43360)[i_42504 * m_27392 +
                                                           gtid_42087];
            bool isnan_res_42096;
            
            isnan_res_42096 = futrts_isnan32(x_42095);
            
            bool cond_42097 = !isnan_res_42096;
            int32_t defunc_0_f_res_42098 = btoi_bool_i32(cond_42097);
            int32_t defunc_1_op_res_42094 = add32(defunc_0_f_res_42098,
                                                  redout_42503);
            int32_t redout_tmp_44536 = defunc_1_op_res_42094;
            
            redout_42503 = redout_tmp_44536;
        }
        defunc_0_f_res_42091 = redout_42503;
        pre_42089 = defunc_0_f_res_42091;
    } else {
        pre_42089 = 0;
    }
    mem_43367[(int64_t) 0] = pre_42089;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_43370[1];
    int64_t ltid_42102 = sext_i32_i64(ltid_pre_44535);
    int32_t ltid_flat_42103 = local_tid_44531;
    
    mem_43370[(int64_t) 0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43374;
    
    mem_43374 = (__local char *) mem_43374_backing_0;
    
    float accs_mem_43378[1];
    float mem_param_43371[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43371[i_1] = mem_43370[i_1];
    for (int64_t tile_id_42109 = 0; tile_id_42109 < num_whole_tiles_42101;
         tile_id_42109++) {
        int64_t binop_x_42154 = segmap_group_sizze_31683 * tile_id_42109;
        int64_t ltid_42110 = sext_i32_i64(ltid_pre_44535);
        int32_t ltid_flat_42111 = local_tid_44531;
        int64_t j_42155 = ltid_42110 + binop_x_42154;
        bool cond_42159 = slt64(j_42155, i32_res_27401);
        int32_t pre_42160;
        
        if (cond_42159) {
            int32_t index_primexp_42461 = sext_i64_i32(j_42155);
            
            pre_42160 = index_primexp_42461;
        } else {
            pre_42160 = 0;
        }
        ((__local int32_t *) mem_43374)[ltid_42110] = pre_42160;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43377[1];
        int64_t ltid_42129 = sext_i32_i64(ltid_pre_44535);
        int32_t ltid_flat_42130 = local_tid_44531;
        int64_t gtid_42165 = binop_x_42086 + ltid_42129;
        float acc_42167 = mem_param_43371[(int64_t) 0];
        bool cond_42168 = slt64(gtid_42165, m_27392);
        float acc_42169;
        
        if (cond_42168) {
            int32_t defunc_0_f_res_42166 = mem_43367[(int64_t) 0];
            float x_42170;
            float redout_42505 = acc_42167;
            
            for (int64_t i_42506 = 0; i_42506 < segmap_group_sizze_31683;
                 i_42506++) {
                int32_t x_42174 = ((__local int32_t *) mem_43374)[i_42506];
                bool cond_42175 = slt32(x_42174, defunc_0_f_res_42166);
                float defunc_0_f_res_42176;
                
                if (cond_42175) {
                    int64_t i_42177 = sext_i32_i64(x_42174);
                    float defunc_0_f_res_t_res_42178 = ((__global
                                                         float *) mem_43363)[i_42177 *
                                                                             m_27392 +
                                                                             gtid_42165];
                    
                    defunc_0_f_res_42176 = defunc_0_f_res_t_res_42178;
                } else {
                    defunc_0_f_res_42176 = 0.0F;
                }
                
                float defunc_0_f_res_42179 = defunc_0_f_res_42176 *
                      defunc_0_f_res_42176;
                float defunc_1_op_res_42173 = defunc_0_f_res_42179 +
                      redout_42505;
                float redout_tmp_44539 = defunc_1_op_res_42173;
                
                redout_42505 = redout_tmp_44539;
            }
            x_42170 = redout_42505;
            acc_42169 = x_42170;
        } else {
            acc_42169 = acc_42167;
        }
        mem_43377[(int64_t) 0] = acc_42169;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44537[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44537[i_2] = mem_43377[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43371[i_3] = mem_param_tmp_44537[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43378[i_4] = mem_param_43371[i_4];
    
    __local char *mem_43381;
    
    mem_43381 = (__local char *) mem_43381_backing_5;
    
    float mem_43384[1];
    float mem_43689[1];
    
    if (cond_42191) {
        mem_43689[(int64_t) 0] = accs_mem_43378[(int64_t) 0];
    } else {
        int64_t binop_x_42201 = segmap_group_sizze_31683 *
                num_whole_tiles_42101;
        int64_t ltid_42192 = sext_i32_i64(ltid_pre_44535);
        int32_t ltid_flat_42193 = local_tid_44531;
        int64_t j_42202 = ltid_42192 + binop_x_42201;
        bool cond_42206 = slt64(j_42202, i32_res_27401);
        int32_t pre_42207;
        
        if (cond_42206) {
            int32_t index_primexp_42462 = sext_i64_i32(j_42202);
            
            pre_42207 = index_primexp_42462;
        } else {
            pre_42207 = 0;
        }
        ((__local int32_t *) mem_43381)[ltid_42192] = pre_42207;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_42212 = sext_i32_i64(ltid_pre_44535);
        int32_t ltid_flat_42213 = local_tid_44531;
        int64_t gtid_42220 = binop_x_42086 + ltid_42212;
        float acc_42222 = accs_mem_43378[(int64_t) 0];
        bool cond_42223 = slt64(gtid_42220, m_27392);
        float acc_42224;
        
        if (cond_42223) {
            int32_t defunc_0_f_res_42221 = mem_43367[(int64_t) 0];
            float x_42225;
            float redout_42507 = acc_42222;
            
            for (int64_t i_42508 = 0; i_42508 < residual_input_42190;
                 i_42508++) {
                int32_t x_42229 = ((__local int32_t *) mem_43381)[i_42508];
                bool cond_42230 = slt32(x_42229, defunc_0_f_res_42221);
                float defunc_0_f_res_42231;
                
                if (cond_42230) {
                    int64_t i_42232 = sext_i32_i64(x_42229);
                    float defunc_0_f_res_t_res_42233 = ((__global
                                                         float *) mem_43363)[i_42232 *
                                                                             m_27392 +
                                                                             gtid_42220];
                    
                    defunc_0_f_res_42231 = defunc_0_f_res_t_res_42233;
                } else {
                    defunc_0_f_res_42231 = 0.0F;
                }
                
                float defunc_0_f_res_42234 = defunc_0_f_res_42231 *
                      defunc_0_f_res_42231;
                float defunc_1_op_res_42228 = defunc_0_f_res_42234 +
                      redout_42507;
                float redout_tmp_44540 = defunc_1_op_res_42228;
                
                redout_42507 = redout_tmp_44540;
            }
            x_42225 = redout_42507;
            acc_42224 = x_42225;
        } else {
            acc_42224 = acc_42222;
        }
        mem_43384[(int64_t) 0] = acc_42224;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43689[(int64_t) 0] = mem_43384[(int64_t) 0];
    }
    
    int32_t mem_43388[1];
    int32_t mem_43390[1];
    float mem_43392[1];
    int64_t ltid_42237 = sext_i32_i64(ltid_pre_44535);
    int32_t ltid_flat_42238 = local_tid_44531;
    int64_t gtid_42248 = binop_x_42086 + ltid_42237;
    bool cond_42250 = slt64(gtid_42248, m_27392);
    int32_t postlude_42251;
    int32_t postlude_42252;
    float postlude_42253;
    
    if (cond_42250) {
        float defunc_0_f_res_42249 = mem_43689[(int64_t) 0];
        int32_t defunc_0_f_res_42254 = mem_43367[(int64_t) 0];
        int32_t r32_arg_42255 = sub32(defunc_0_f_res_42254, k2p2_27403);
        float i32_res_42256 = sitofp_i32_f32(r32_arg_42255);
        float sqrt_arg_42257 = defunc_0_f_res_42249 / i32_res_42256;
        float sqrt_res_42258;
        
        sqrt_res_42258 = futrts_sqrt32(sqrt_arg_42257);
        
        float i32_res_42259 = sitofp_i32_f32(defunc_0_f_res_42254);
        float t32_arg_42260 = hfrac_27397 * i32_res_42259;
        int32_t f32_res_42261 = fptosi_f32_i32(t32_arg_42260);
        
        postlude_42251 = f32_res_42261;
        postlude_42252 = defunc_0_f_res_42254;
        postlude_42253 = sqrt_res_42258;
    } else {
        postlude_42251 = 0;
        postlude_42252 = 0;
        postlude_42253 = 0.0F;
    }
    mem_43388[(int64_t) 0] = postlude_42251;
    mem_43390[(int64_t) 0] = postlude_42252;
    mem_43392[(int64_t) 0] = postlude_42253;
    barrier(CLK_LOCAL_MEM_FENCE);
    if (slt64(sext_i32_i64(local_tid_44531) + segmap_group_sizze_31683 *
              sext_i32_i64(group_tid_44532), m_27392)) {
        ((__global int32_t *) mem_43394)[sext_i32_i64(local_tid_44531) +
                                         segmap_group_sizze_31683 *
                                         sext_i32_i64(group_tid_44532)] =
            mem_43388[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44531) + segmap_group_sizze_31683 *
              sext_i32_i64(group_tid_44532), m_27392)) {
        ((__global int32_t *) mem_43396)[sext_i32_i64(local_tid_44531) +
                                         segmap_group_sizze_31683 *
                                         sext_i32_i64(group_tid_44532)] =
            mem_43390[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44531) + segmap_group_sizze_31683 *
              sext_i32_i64(group_tid_44532), m_27392)) {
        ((__global float *) mem_43398)[sext_i32_i64(local_tid_44531) +
                                       segmap_group_sizze_31683 *
                                       sext_i32_i64(group_tid_44532)] =
            mem_43392[(int64_t) 0];
    }
    
  error_7:
    return;
    #undef segmap_group_sizze_31683
}
__kernel void mainDetailedzisegmap_intragroup_42269(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43447_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43440_backing_aligned_1,
                                                    int64_t N_27391,
                                                    int64_t m_27392,
                                                    int64_t i32_res_27762,
                                                    int64_t num_whole_tiles_42289,
                                                    int64_t residual_input_42388,
                                                    unsigned char cond_42389,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_43356,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43422,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43423,
                                                    __global
                                                    unsigned char *mem_43453)
{
    #define segmap_group_sizze_31920 (mainDetailedzisegmap_group_sizze_31901)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43447_backing_5 = (__local volatile
                                                           char *) mem_43447_backing_aligned_0;
    __local volatile char *restrict mem_43440_backing_0 = (__local volatile
                                                           char *) mem_43440_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44714;
    int32_t local_tid_44715;
    int64_t group_sizze_44718;
    int32_t wave_sizze_44717;
    int32_t group_tid_44716;
    
    global_tid_44714 = get_global_id(0);
    local_tid_44715 = get_local_id(0);
    group_sizze_44718 = get_local_size(0);
    wave_sizze_44717 = LOCKSTEP_WIDTH;
    group_tid_44716 = get_group_id(0);
    
    int32_t gid_flat_42269;
    
    gid_flat_42269 = group_tid_44716;
    
    int32_t ltid_pre_44719;
    
    ltid_pre_44719 = local_tid_44715;
    
    int64_t gid_42268;
    
    gid_42268 = sext_i32_i64(group_tid_44716);
    
    int64_t binop_x_42278;
    
    binop_x_42278 = segmap_group_sizze_31920 * gid_42268;
    
    int32_t mem_43431[1];
    int32_t mem_43433[1];
    int64_t ltid_42270 = sext_i32_i64(ltid_pre_44719);
    int32_t ltid_flat_42271 = local_tid_44715;
    int64_t gtid_42279 = ltid_42270 + binop_x_42278;
    bool cond_42280 = slt64(gtid_42279, m_27392);
    int32_t pre_42281;
    int32_t pre_42282;
    
    if (cond_42280) {
        int32_t x_42283 = ((__global
                            int32_t *) defunc_3_map_res_mem_43423)[gtid_42279];
        int32_t x_42284 = ((__global
                            int32_t *) defunc_3_map_res_mem_43422)[gtid_42279];
        
        pre_42281 = x_42283;
        pre_42282 = x_42284;
    } else {
        pre_42281 = 0;
        pre_42282 = 0;
    }
    mem_43431[(int64_t) 0] = pre_42281;
    mem_43433[(int64_t) 0] = pre_42282;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_43436[1];
    int64_t ltid_42290 = sext_i32_i64(ltid_pre_44719);
    int32_t ltid_flat_42291 = local_tid_44715;
    
    mem_43436[(int64_t) 0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43440;
    
    mem_43440 = (__local char *) mem_43440_backing_0;
    
    float accs_mem_43444[1];
    float mem_param_43437[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43437[i_1] = mem_43436[i_1];
    for (int64_t tile_id_42297 = 0; tile_id_42297 < num_whole_tiles_42289;
         tile_id_42297++) {
        int64_t binop_x_42346 = segmap_group_sizze_31920 * tile_id_42297;
        int64_t ltid_42298 = sext_i32_i64(ltid_pre_44719);
        int32_t ltid_flat_42299 = local_tid_44715;
        int64_t j_42347 = ltid_42298 + binop_x_42346;
        bool cond_42352 = slt64(j_42347, i32_res_27762);
        int32_t pre_42353;
        
        if (cond_42352) {
            int32_t index_primexp_42463 = sext_i64_i32(j_42347);
            int32_t tile_elem_42354 = index_primexp_42463;
            
            pre_42353 = tile_elem_42354;
        } else {
            pre_42353 = 0;
        }
        ((__local int32_t *) mem_43440)[ltid_42298] = pre_42353;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43443[1];
        int64_t ltid_42318 = sext_i32_i64(ltid_pre_44719);
        int32_t ltid_flat_42319 = local_tid_44715;
        int64_t gtid_42358 = binop_x_42278 + ltid_42318;
        float acc_42361 = mem_param_43437[(int64_t) 0];
        bool cond_42362 = slt64(gtid_42358, m_27392);
        float acc_42363;
        
        if (cond_42362) {
            int32_t x_42359 = mem_43431[(int64_t) 0];
            int32_t x_42360 = mem_43433[(int64_t) 0];
            float x_42364;
            float redout_42509 = acc_42361;
            
            for (int64_t i_42510 = 0; i_42510 < segmap_group_sizze_31920;
                 i_42510++) {
                int32_t x_42368 = ((__local int32_t *) mem_43440)[i_42510];
                bool cond_42369 = slt32(x_42368, x_42360);
                float defunc_0_f_res_42370;
                
                if (cond_42369) {
                    int32_t x_42371 = add32(x_42359, x_42368);
                    int32_t x_42372 = sub32(x_42371, x_42360);
                    int32_t i_42373 = add32(1, x_42372);
                    int64_t i_42374 = sext_i32_i64(i_42373);
                    float defunc_0_f_res_t_res_42375 = ((__global
                                                         float *) defunc_4_map_res_mem_43356)[gtid_42358 *
                                                                                              N_27391 +
                                                                                              i_42374];
                    
                    defunc_0_f_res_42370 = defunc_0_f_res_t_res_42375;
                } else {
                    defunc_0_f_res_42370 = 0.0F;
                }
                
                float defunc_1_op_res_42367 = defunc_0_f_res_42370 +
                      redout_42509;
                float redout_tmp_44722 = defunc_1_op_res_42367;
                
                redout_42509 = redout_tmp_44722;
            }
            x_42364 = redout_42509;
            acc_42363 = x_42364;
        } else {
            acc_42363 = acc_42361;
        }
        mem_43443[(int64_t) 0] = acc_42363;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44720[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44720[i_2] = mem_43443[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43437[i_3] = mem_param_tmp_44720[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43444[i_4] = mem_param_43437[i_4];
    
    __local char *mem_43447;
    
    mem_43447 = (__local char *) mem_43447_backing_5;
    
    float mem_43450[1];
    float mem_43698[1];
    
    if (cond_42389) {
        mem_43698[(int64_t) 0] = accs_mem_43444[(int64_t) 0];
    } else {
        int64_t binop_x_42399 = segmap_group_sizze_31920 *
                num_whole_tiles_42289;
        int64_t ltid_42390 = sext_i32_i64(ltid_pre_44719);
        int32_t ltid_flat_42391 = local_tid_44715;
        int64_t j_42400 = ltid_42390 + binop_x_42399;
        bool cond_42405 = slt64(j_42400, i32_res_27762);
        int32_t pre_42406;
        
        if (cond_42405) {
            int32_t index_primexp_42464 = sext_i64_i32(j_42400);
            int32_t tile_elem_42407 = index_primexp_42464;
            
            pre_42406 = tile_elem_42407;
        } else {
            pre_42406 = 0;
        }
        ((__local int32_t *) mem_43447)[ltid_42390] = pre_42406;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_42411 = sext_i32_i64(ltid_pre_44719);
        int32_t ltid_flat_42412 = local_tid_44715;
        int64_t gtid_42419 = binop_x_42278 + ltid_42411;
        float acc_42422 = accs_mem_43444[(int64_t) 0];
        bool cond_42423 = slt64(gtid_42419, m_27392);
        float acc_42424;
        
        if (cond_42423) {
            int32_t x_42420 = mem_43431[(int64_t) 0];
            int32_t x_42421 = mem_43433[(int64_t) 0];
            float x_42425;
            float redout_42511 = acc_42422;
            
            for (int64_t i_42512 = 0; i_42512 < residual_input_42388;
                 i_42512++) {
                int32_t x_42429 = ((__local int32_t *) mem_43447)[i_42512];
                bool cond_42430 = slt32(x_42429, x_42421);
                float defunc_0_f_res_42431;
                
                if (cond_42430) {
                    int32_t x_42432 = add32(x_42420, x_42429);
                    int32_t x_42433 = sub32(x_42432, x_42421);
                    int32_t i_42434 = add32(1, x_42433);
                    int64_t i_42435 = sext_i32_i64(i_42434);
                    float defunc_0_f_res_t_res_42436 = ((__global
                                                         float *) defunc_4_map_res_mem_43356)[gtid_42419 *
                                                                                              N_27391 +
                                                                                              i_42435];
                    
                    defunc_0_f_res_42431 = defunc_0_f_res_t_res_42436;
                } else {
                    defunc_0_f_res_42431 = 0.0F;
                }
                
                float defunc_1_op_res_42428 = defunc_0_f_res_42431 +
                      redout_42511;
                float redout_tmp_44723 = defunc_1_op_res_42428;
                
                redout_42511 = redout_tmp_44723;
            }
            x_42425 = redout_42511;
            acc_42424 = x_42425;
        } else {
            acc_42424 = acc_42422;
        }
        mem_43450[(int64_t) 0] = acc_42424;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43698[(int64_t) 0] = mem_43450[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44715) + segmap_group_sizze_31920 *
              sext_i32_i64(group_tid_44716), m_27392)) {
        ((__global float *) mem_43453)[sext_i32_i64(local_tid_44715) +
                                       segmap_group_sizze_31920 *
                                       sext_i32_i64(group_tid_44716)] =
            mem_43698[(int64_t) 0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_31920
}
__kernel void mainDetailedzisegred_large_29895(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_43983_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_43981_backing_aligned_1,
                                               int64_t N_27391,
                                               int64_t i32_res_27401,
                                               int64_t i32_res_27407,
                                               int64_t num_groups_30034,
                                               int64_t groups_per_segment_43967,
                                               int64_t elements_per_thread_43968,
                                               int64_t virt_num_groups_43969,
                                               int64_t threads_per_segment_43971,
                                               __global
                                               unsigned char *images_mem_42559,
                                               __global
                                               unsigned char *binop_p_mem_42568,
                                               __global
                                               unsigned char *mem_42709,
                                               __global
                                               unsigned char *mem_42714,
                                               __global
                                               unsigned char *group_res_arr_mem_43972,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_43974)
{
    #define segred_group_sizze_30033 (mainDetailedzisegred_group_sizze_29889)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_43983_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_43983_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_43981_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_43981_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43976;
    int32_t local_tid_43977;
    int64_t group_sizze_43980;
    int32_t wave_sizze_43979;
    int32_t group_tid_43978;
    
    global_tid_43976 = get_global_id(0);
    local_tid_43977 = get_local_id(0);
    group_sizze_43980 = get_local_size(0);
    wave_sizze_43979 = LOCKSTEP_WIDTH;
    group_tid_43978 = get_group_id(0);
    
    int32_t phys_tid_29895;
    
    phys_tid_29895 = global_tid_43976;
    
    __local char *red_arr_mem_43981;
    
    red_arr_mem_43981 = (__local char *) red_arr_mem_43981_backing_0;
    
    __local char *sync_arr_mem_43983;
    
    sync_arr_mem_43983 = (__local char *) sync_arr_mem_43983_backing_1;
    
    int32_t phys_group_id_43985;
    
    phys_group_id_43985 = get_group_id(0);
    for (int32_t i_43986 = 0; i_43986 <
         sdiv_up32(sext_i64_i32(virt_num_groups_43969) - phys_group_id_43985,
                   sext_i64_i32(num_groups_30034)); i_43986++) {
        int32_t virt_group_id_43987 = phys_group_id_43985 + i_43986 *
                sext_i64_i32(num_groups_30034);
        int32_t flat_segment_id_43988 = squot32(virt_group_id_43987,
                                                sext_i64_i32(groups_per_segment_43967));
        int64_t global_tid_43989 = srem64(sext_i32_i64(virt_group_id_43987) *
                                          segred_group_sizze_30033 +
                                          sext_i32_i64(local_tid_43977),
                                          segred_group_sizze_30033 *
                                          groups_per_segment_43967);
        int64_t gtid_29882 = squot64(sext_i32_i64(flat_segment_id_43988),
                                     i32_res_27407 * i32_res_27407);
        int64_t gtid_29883 = squot64(sext_i32_i64(flat_segment_id_43988) -
                                     squot64(sext_i32_i64(flat_segment_id_43988),
                                             i32_res_27407 * i32_res_27407) *
                                     (i32_res_27407 * i32_res_27407),
                                     i32_res_27407);
        int64_t gtid_29884 = sext_i32_i64(flat_segment_id_43988) -
                squot64(sext_i32_i64(flat_segment_id_43988), i32_res_27407 *
                        i32_res_27407) * (i32_res_27407 * i32_res_27407) -
                squot64(sext_i32_i64(flat_segment_id_43988) -
                        squot64(sext_i32_i64(flat_segment_id_43988),
                                i32_res_27407 * i32_res_27407) *
                        (i32_res_27407 * i32_res_27407), i32_res_27407) *
                i32_res_27407;
        int64_t gtid_29894;
        float x_acc_43990;
        int64_t chunk_sizze_43991;
        
        chunk_sizze_43991 = smin64(elements_per_thread_43968,
                                   sdiv_up64(i32_res_27401 -
                                             sext_i32_i64(sext_i64_i32(global_tid_43989)),
                                             threads_per_segment_43971));
        
        float x_30037;
        float x_30038;
        
        // neutral-initialise the accumulators
        {
            x_acc_43990 = 0.0F;
        }
        for (int64_t i_43995 = 0; i_43995 < chunk_sizze_43991; i_43995++) {
            gtid_29894 = sext_i32_i64(sext_i64_i32(global_tid_43989)) +
                threads_per_segment_43971 * i_43995;
            // apply map function
            {
                float x_30043 = ((__global
                                  float *) images_mem_42559)[gtid_29882 *
                                                             N_27391 +
                                                             gtid_29894];
                float x_30044 = ((__global
                                  float *) binop_p_mem_42568)[gtid_29883 *
                                                              N_27391 +
                                                              gtid_29894];
                float x_30045 = ((__global float *) mem_42709)[gtid_29884 *
                                                               N_27391 +
                                                               gtid_29894];
                float x_30046 = x_30044 * x_30045;
                bool isnan_res_30047;
                
                isnan_res_30047 = futrts_isnan32(x_30043);
                
                float y_30048;
                
                if (isnan_res_30047) {
                    y_30048 = 0.0F;
                } else {
                    y_30048 = 1.0F;
                }
                
                float defunc_2_f_res_30049 = x_30046 * y_30048;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_30037 = x_acc_43990;
                }
                // load new values
                {
                    x_30038 = defunc_2_f_res_30049;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_30039 = x_30037 + x_30038;
                    
                    // store in accumulator
                    {
                        x_acc_43990 = defunc_1_op_res_30039;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_30037 = x_acc_43990;
            ((__local
              float *) red_arr_mem_43981)[sext_i32_i64(local_tid_43977)] =
                x_30037;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_43996;
        int32_t skip_waves_43997;
        
        skip_waves_43997 = 1;
        
        float x_43992;
        float x_43993;
        
        offset_43996 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_43977,
                      sext_i64_i32(segred_group_sizze_30033))) {
                x_43992 = ((__local
                            float *) red_arr_mem_43981)[sext_i32_i64(local_tid_43977 +
                                                        offset_43996)];
            }
        }
        offset_43996 = 1;
        while (slt32(offset_43996, wave_sizze_43979)) {
            if (slt32(local_tid_43977 + offset_43996,
                      sext_i64_i32(segred_group_sizze_30033)) &&
                ((local_tid_43977 - squot32(local_tid_43977, wave_sizze_43979) *
                  wave_sizze_43979) & (2 * offset_43996 - 1)) == 0) {
                // read array element
                {
                    x_43993 = ((volatile __local
                                float *) red_arr_mem_43981)[sext_i32_i64(local_tid_43977 +
                                                            offset_43996)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_43994 = x_43992 + x_43993;
                    
                    x_43992 = defunc_1_op_res_43994;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_43981)[sext_i32_i64(local_tid_43977)] =
                        x_43992;
                }
            }
            offset_43996 *= 2;
        }
        while (slt32(skip_waves_43997,
                     squot32(sext_i64_i32(segred_group_sizze_30033) +
                             wave_sizze_43979 - 1, wave_sizze_43979))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_43996 = skip_waves_43997 * wave_sizze_43979;
            if (slt32(local_tid_43977 + offset_43996,
                      sext_i64_i32(segred_group_sizze_30033)) &&
                ((local_tid_43977 - squot32(local_tid_43977, wave_sizze_43979) *
                  wave_sizze_43979) == 0 && (squot32(local_tid_43977,
                                                     wave_sizze_43979) & (2 *
                                                                          skip_waves_43997 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_43993 = ((__local
                                float *) red_arr_mem_43981)[sext_i32_i64(local_tid_43977 +
                                                            offset_43996)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_43994 = x_43992 + x_43993;
                    
                    x_43992 = defunc_1_op_res_43994;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_43981)[sext_i32_i64(local_tid_43977)] =
                        x_43992;
                }
            }
            skip_waves_43997 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_43977) == (int64_t) 0) {
                x_acc_43990 = x_43992;
            }
        }
        if (groups_per_segment_43967 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_43977 == 0) {
                    ((__global float *) mem_42714)[gtid_29882 * (i32_res_27407 *
                                                                 i32_res_27407) +
                                                   gtid_29883 * i32_res_27407 +
                                                   gtid_29884] = x_acc_43990;
                }
            }
        } else {
            int32_t old_counter_43998;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_43977 == 0) {
                    ((__global
                      float *) group_res_arr_mem_43972)[sext_i32_i64(virt_group_id_43987) *
                                                        segred_group_sizze_30033] =
                        x_acc_43990;
                    mem_fence_global();
                    old_counter_43998 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_43974)[sext_i32_i64(srem32(flat_segment_id_43988,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_43983)[(int64_t) 0] =
                        old_counter_43998 == groups_per_segment_43967 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_43999;
            
            is_last_group_43999 = ((__local
                                    bool *) sync_arr_mem_43983)[(int64_t) 0];
            if (is_last_group_43999) {
                if (local_tid_43977 == 0) {
                    old_counter_43998 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_43974)[sext_i32_i64(srem32(flat_segment_id_43988,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_43967));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44000 =
                            sdiv_up64(groups_per_segment_43967,
                                      segred_group_sizze_30033);
                    
                    x_30037 = 0.0F;
                    for (int64_t i_44001 = 0; i_44001 < read_per_thread_44000;
                         i_44001++) {
                        int64_t group_res_id_44002 =
                                sext_i32_i64(local_tid_43977) *
                                read_per_thread_44000 + i_44001;
                        int64_t index_of_group_res_44003 =
                                sext_i32_i64(flat_segment_id_43988) *
                                groups_per_segment_43967 + group_res_id_44002;
                        
                        if (slt64(group_res_id_44002,
                                  groups_per_segment_43967)) {
                            x_30038 = ((__global
                                        float *) group_res_arr_mem_43972)[index_of_group_res_44003 *
                                                                          segred_group_sizze_30033];
                            
                            float defunc_1_op_res_30039;
                            
                            defunc_1_op_res_30039 = x_30037 + x_30038;
                            x_30037 = defunc_1_op_res_30039;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_43981)[sext_i32_i64(local_tid_43977)] =
                    x_30037;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44004;
                    int32_t skip_waves_44005;
                    
                    skip_waves_44005 = 1;
                    
                    float x_43992;
                    float x_43993;
                    
                    offset_44004 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_43977,
                                  sext_i64_i32(segred_group_sizze_30033))) {
                            x_43992 = ((__local
                                        float *) red_arr_mem_43981)[sext_i32_i64(local_tid_43977 +
                                                                    offset_44004)];
                        }
                    }
                    offset_44004 = 1;
                    while (slt32(offset_44004, wave_sizze_43979)) {
                        if (slt32(local_tid_43977 + offset_44004,
                                  sext_i64_i32(segred_group_sizze_30033)) &&
                            ((local_tid_43977 - squot32(local_tid_43977,
                                                        wave_sizze_43979) *
                              wave_sizze_43979) & (2 * offset_44004 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_43993 = ((volatile __local
                                            float *) red_arr_mem_43981)[sext_i32_i64(local_tid_43977 +
                                                                        offset_44004)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_43994 = x_43992 + x_43993;
                                
                                x_43992 = defunc_1_op_res_43994;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_43981)[sext_i32_i64(local_tid_43977)] =
                                    x_43992;
                            }
                        }
                        offset_44004 *= 2;
                    }
                    while (slt32(skip_waves_44005,
                                 squot32(sext_i64_i32(segred_group_sizze_30033) +
                                         wave_sizze_43979 - 1,
                                         wave_sizze_43979))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44004 = skip_waves_44005 * wave_sizze_43979;
                        if (slt32(local_tid_43977 + offset_44004,
                                  sext_i64_i32(segred_group_sizze_30033)) &&
                            ((local_tid_43977 - squot32(local_tid_43977,
                                                        wave_sizze_43979) *
                              wave_sizze_43979) == 0 &&
                             (squot32(local_tid_43977, wave_sizze_43979) & (2 *
                                                                            skip_waves_44005 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_43993 = ((__local
                                            float *) red_arr_mem_43981)[sext_i32_i64(local_tid_43977 +
                                                                        offset_44004)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_43994 = x_43992 + x_43993;
                                
                                x_43992 = defunc_1_op_res_43994;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_43981)[sext_i32_i64(local_tid_43977)] =
                                    x_43992;
                            }
                        }
                        skip_waves_44005 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_43977 == 0) {
                            ((__global float *) mem_42714)[gtid_29882 *
                                                           (i32_res_27407 *
                                                            i32_res_27407) +
                                                           gtid_29883 *
                                                           i32_res_27407 +
                                                           gtid_29884] =
                                x_43992;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_30033
}
__kernel void mainDetailedzisegred_large_30942(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44180_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44178_backing_aligned_1,
                                               int64_t N_27391,
                                               int64_t i32_res_27401,
                                               int64_t i32_res_27407,
                                               int64_t num_groups_30995,
                                               int64_t groups_per_segment_44164,
                                               int64_t elements_per_thread_44165,
                                               int64_t virt_num_groups_44166,
                                               int64_t threads_per_segment_44168,
                                               __global
                                               unsigned char *images_mem_42559,
                                               __global
                                               unsigned char *binop_p_mem_42568,
                                               __global
                                               unsigned char *mem_43022,
                                               __global
                                               unsigned char *group_res_arr_mem_44169,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44171)
{
    #define segred_group_sizze_30994 (mainDetailedzisegred_group_sizze_30936)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44180_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44180_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44178_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44178_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44173;
    int32_t local_tid_44174;
    int64_t group_sizze_44177;
    int32_t wave_sizze_44176;
    int32_t group_tid_44175;
    
    global_tid_44173 = get_global_id(0);
    local_tid_44174 = get_local_id(0);
    group_sizze_44177 = get_local_size(0);
    wave_sizze_44176 = LOCKSTEP_WIDTH;
    group_tid_44175 = get_group_id(0);
    
    int32_t phys_tid_30942;
    
    phys_tid_30942 = global_tid_44173;
    
    __local char *red_arr_mem_44178;
    
    red_arr_mem_44178 = (__local char *) red_arr_mem_44178_backing_0;
    
    __local char *sync_arr_mem_44180;
    
    sync_arr_mem_44180 = (__local char *) sync_arr_mem_44180_backing_1;
    
    int32_t phys_group_id_44182;
    
    phys_group_id_44182 = get_group_id(0);
    for (int32_t i_44183 = 0; i_44183 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44166) - phys_group_id_44182,
                   sext_i64_i32(num_groups_30995)); i_44183++) {
        int32_t virt_group_id_44184 = phys_group_id_44182 + i_44183 *
                sext_i64_i32(num_groups_30995);
        int32_t flat_segment_id_44185 = squot32(virt_group_id_44184,
                                                sext_i64_i32(groups_per_segment_44164));
        int64_t global_tid_44186 = srem64(sext_i32_i64(virt_group_id_44184) *
                                          segred_group_sizze_30994 +
                                          sext_i32_i64(local_tid_44174),
                                          segred_group_sizze_30994 *
                                          groups_per_segment_44164);
        int64_t gtid_30931 = squot64(sext_i32_i64(flat_segment_id_44185),
                                     i32_res_27407);
        int64_t gtid_30932 = sext_i32_i64(flat_segment_id_44185) -
                squot64(sext_i32_i64(flat_segment_id_44185), i32_res_27407) *
                i32_res_27407;
        int64_t gtid_30941;
        float x_acc_44187;
        int64_t chunk_sizze_44188;
        
        chunk_sizze_44188 = smin64(elements_per_thread_44165,
                                   sdiv_up64(i32_res_27401 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44186)),
                                             threads_per_segment_44168));
        
        float x_30998;
        float x_30999;
        
        // neutral-initialise the accumulators
        {
            x_acc_44187 = 0.0F;
        }
        for (int64_t i_44192 = 0; i_44192 < chunk_sizze_44188; i_44192++) {
            gtid_30941 = sext_i32_i64(sext_i64_i32(global_tid_44186)) +
                threads_per_segment_44168 * i_44192;
            // apply map function
            {
                float x_31004 = ((__global
                                  float *) images_mem_42559)[gtid_30931 *
                                                             N_27391 +
                                                             gtid_30941];
                bool isnan_res_31005;
                
                isnan_res_31005 = futrts_isnan32(x_31004);
                
                float defunc_1_f_res_31006;
                
                if (isnan_res_31005) {
                    defunc_1_f_res_31006 = 0.0F;
                } else {
                    float x_31003 = ((__global
                                      float *) binop_p_mem_42568)[gtid_30932 *
                                                                  N_27391 +
                                                                  gtid_30941];
                    float defunc_1_f_res_f_res_31007 = x_31003 * x_31004;
                    
                    defunc_1_f_res_31006 = defunc_1_f_res_f_res_31007;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_30998 = x_acc_44187;
                }
                // load new values
                {
                    x_30999 = defunc_1_f_res_31006;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_31000 = x_30998 + x_30999;
                    
                    // store in accumulator
                    {
                        x_acc_44187 = defunc_1_op_res_31000;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_30998 = x_acc_44187;
            ((__local
              float *) red_arr_mem_44178)[sext_i32_i64(local_tid_44174)] =
                x_30998;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44193;
        int32_t skip_waves_44194;
        
        skip_waves_44194 = 1;
        
        float x_44189;
        float x_44190;
        
        offset_44193 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44174,
                      sext_i64_i32(segred_group_sizze_30994))) {
                x_44189 = ((__local
                            float *) red_arr_mem_44178)[sext_i32_i64(local_tid_44174 +
                                                        offset_44193)];
            }
        }
        offset_44193 = 1;
        while (slt32(offset_44193, wave_sizze_44176)) {
            if (slt32(local_tid_44174 + offset_44193,
                      sext_i64_i32(segred_group_sizze_30994)) &&
                ((local_tid_44174 - squot32(local_tid_44174, wave_sizze_44176) *
                  wave_sizze_44176) & (2 * offset_44193 - 1)) == 0) {
                // read array element
                {
                    x_44190 = ((volatile __local
                                float *) red_arr_mem_44178)[sext_i32_i64(local_tid_44174 +
                                                            offset_44193)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44191 = x_44189 + x_44190;
                    
                    x_44189 = defunc_1_op_res_44191;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44178)[sext_i32_i64(local_tid_44174)] =
                        x_44189;
                }
            }
            offset_44193 *= 2;
        }
        while (slt32(skip_waves_44194,
                     squot32(sext_i64_i32(segred_group_sizze_30994) +
                             wave_sizze_44176 - 1, wave_sizze_44176))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44193 = skip_waves_44194 * wave_sizze_44176;
            if (slt32(local_tid_44174 + offset_44193,
                      sext_i64_i32(segred_group_sizze_30994)) &&
                ((local_tid_44174 - squot32(local_tid_44174, wave_sizze_44176) *
                  wave_sizze_44176) == 0 && (squot32(local_tid_44174,
                                                     wave_sizze_44176) & (2 *
                                                                          skip_waves_44194 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44190 = ((__local
                                float *) red_arr_mem_44178)[sext_i32_i64(local_tid_44174 +
                                                            offset_44193)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44191 = x_44189 + x_44190;
                    
                    x_44189 = defunc_1_op_res_44191;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44178)[sext_i32_i64(local_tid_44174)] =
                        x_44189;
                }
            }
            skip_waves_44194 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44174) == (int64_t) 0) {
                x_acc_44187 = x_44189;
            }
        }
        if (groups_per_segment_44164 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44174 == 0) {
                    ((__global float *) mem_43022)[gtid_30931 * i32_res_27407 +
                                                   gtid_30932] = x_acc_44187;
                }
            }
        } else {
            int32_t old_counter_44195;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44174 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44169)[sext_i32_i64(virt_group_id_44184) *
                                                        segred_group_sizze_30994] =
                        x_acc_44187;
                    mem_fence_global();
                    old_counter_44195 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44171)[sext_i32_i64(srem32(flat_segment_id_44185,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44180)[(int64_t) 0] =
                        old_counter_44195 == groups_per_segment_44164 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44196;
            
            is_last_group_44196 = ((__local
                                    bool *) sync_arr_mem_44180)[(int64_t) 0];
            if (is_last_group_44196) {
                if (local_tid_44174 == 0) {
                    old_counter_44195 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44171)[sext_i32_i64(srem32(flat_segment_id_44185,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44164));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44197 =
                            sdiv_up64(groups_per_segment_44164,
                                      segred_group_sizze_30994);
                    
                    x_30998 = 0.0F;
                    for (int64_t i_44198 = 0; i_44198 < read_per_thread_44197;
                         i_44198++) {
                        int64_t group_res_id_44199 =
                                sext_i32_i64(local_tid_44174) *
                                read_per_thread_44197 + i_44198;
                        int64_t index_of_group_res_44200 =
                                sext_i32_i64(flat_segment_id_44185) *
                                groups_per_segment_44164 + group_res_id_44199;
                        
                        if (slt64(group_res_id_44199,
                                  groups_per_segment_44164)) {
                            x_30999 = ((__global
                                        float *) group_res_arr_mem_44169)[index_of_group_res_44200 *
                                                                          segred_group_sizze_30994];
                            
                            float defunc_1_op_res_31000;
                            
                            defunc_1_op_res_31000 = x_30998 + x_30999;
                            x_30998 = defunc_1_op_res_31000;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44178)[sext_i32_i64(local_tid_44174)] =
                    x_30998;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44201;
                    int32_t skip_waves_44202;
                    
                    skip_waves_44202 = 1;
                    
                    float x_44189;
                    float x_44190;
                    
                    offset_44201 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44174,
                                  sext_i64_i32(segred_group_sizze_30994))) {
                            x_44189 = ((__local
                                        float *) red_arr_mem_44178)[sext_i32_i64(local_tid_44174 +
                                                                    offset_44201)];
                        }
                    }
                    offset_44201 = 1;
                    while (slt32(offset_44201, wave_sizze_44176)) {
                        if (slt32(local_tid_44174 + offset_44201,
                                  sext_i64_i32(segred_group_sizze_30994)) &&
                            ((local_tid_44174 - squot32(local_tid_44174,
                                                        wave_sizze_44176) *
                              wave_sizze_44176) & (2 * offset_44201 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44190 = ((volatile __local
                                            float *) red_arr_mem_44178)[sext_i32_i64(local_tid_44174 +
                                                                        offset_44201)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44191 = x_44189 + x_44190;
                                
                                x_44189 = defunc_1_op_res_44191;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44178)[sext_i32_i64(local_tid_44174)] =
                                    x_44189;
                            }
                        }
                        offset_44201 *= 2;
                    }
                    while (slt32(skip_waves_44202,
                                 squot32(sext_i64_i32(segred_group_sizze_30994) +
                                         wave_sizze_44176 - 1,
                                         wave_sizze_44176))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44201 = skip_waves_44202 * wave_sizze_44176;
                        if (slt32(local_tid_44174 + offset_44201,
                                  sext_i64_i32(segred_group_sizze_30994)) &&
                            ((local_tid_44174 - squot32(local_tid_44174,
                                                        wave_sizze_44176) *
                              wave_sizze_44176) == 0 &&
                             (squot32(local_tid_44174, wave_sizze_44176) & (2 *
                                                                            skip_waves_44202 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44190 = ((__local
                                            float *) red_arr_mem_44178)[sext_i32_i64(local_tid_44174 +
                                                                        offset_44201)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44191 = x_44189 + x_44190;
                                
                                x_44189 = defunc_1_op_res_44191;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44178)[sext_i32_i64(local_tid_44174)] =
                                    x_44189;
                            }
                        }
                        skip_waves_44202 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44174 == 0) {
                            ((__global float *) mem_43022)[gtid_30931 *
                                                           i32_res_27407 +
                                                           gtid_30932] =
                                x_44189;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_30994
}
__kernel void mainDetailedzisegred_large_31079(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44268_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44266_backing_aligned_1,
                                               int64_t i32_res_27407,
                                               int64_t num_groups_31128,
                                               int64_t groups_per_segment_44252,
                                               int64_t elements_per_thread_44253,
                                               int64_t virt_num_groups_44254,
                                               int64_t threads_per_segment_44256,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_42807,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43028,
                                               __global
                                               unsigned char *mem_43088,
                                               __global
                                               unsigned char *group_res_arr_mem_44257,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44259)
{
    #define segred_group_sizze_31127 (mainDetailedzisegred_group_sizze_31073)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44268_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44268_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44266_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44266_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44261;
    int32_t local_tid_44262;
    int64_t group_sizze_44265;
    int32_t wave_sizze_44264;
    int32_t group_tid_44263;
    
    global_tid_44261 = get_global_id(0);
    local_tid_44262 = get_local_id(0);
    group_sizze_44265 = get_local_size(0);
    wave_sizze_44264 = LOCKSTEP_WIDTH;
    group_tid_44263 = get_group_id(0);
    
    int32_t phys_tid_31079;
    
    phys_tid_31079 = global_tid_44261;
    
    __local char *red_arr_mem_44266;
    
    red_arr_mem_44266 = (__local char *) red_arr_mem_44266_backing_0;
    
    __local char *sync_arr_mem_44268;
    
    sync_arr_mem_44268 = (__local char *) sync_arr_mem_44268_backing_1;
    
    int32_t phys_group_id_44270;
    
    phys_group_id_44270 = get_group_id(0);
    for (int32_t i_44271 = 0; i_44271 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44254) - phys_group_id_44270,
                   sext_i64_i32(num_groups_31128)); i_44271++) {
        int32_t virt_group_id_44272 = phys_group_id_44270 + i_44271 *
                sext_i64_i32(num_groups_31128);
        int32_t flat_segment_id_44273 = squot32(virt_group_id_44272,
                                                sext_i64_i32(groups_per_segment_44252));
        int64_t global_tid_44274 = srem64(sext_i32_i64(virt_group_id_44272) *
                                          segred_group_sizze_31127 +
                                          sext_i32_i64(local_tid_44262),
                                          segred_group_sizze_31127 *
                                          groups_per_segment_44252);
        int64_t gtid_31068 = squot64(sext_i32_i64(flat_segment_id_44273),
                                     i32_res_27407);
        int64_t gtid_31069 = sext_i32_i64(flat_segment_id_44273) -
                squot64(sext_i32_i64(flat_segment_id_44273), i32_res_27407) *
                i32_res_27407;
        int64_t gtid_31078;
        float x_acc_44275;
        int64_t chunk_sizze_44276;
        
        chunk_sizze_44276 = smin64(elements_per_thread_44253,
                                   sdiv_up64(i32_res_27407 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44274)),
                                             threads_per_segment_44256));
        
        float x_31131;
        float x_31132;
        
        // neutral-initialise the accumulators
        {
            x_acc_44275 = 0.0F;
        }
        for (int64_t i_44280 = 0; i_44280 < chunk_sizze_44276; i_44280++) {
            gtid_31078 = sext_i32_i64(sext_i64_i32(global_tid_44274)) +
                threads_per_segment_44256 * i_44280;
            // apply map function
            {
                float x_31137 = ((__global
                                  float *) defunc_3_map_res_mem_43028)[gtid_31068 *
                                                                       i32_res_27407 +
                                                                       gtid_31078];
                float x_31138 = ((__global
                                  float *) defunc_3_map_res_mem_42807)[gtid_31068 *
                                                                       (i32_res_27407 *
                                                                        i32_res_27407) +
                                                                       gtid_31069 *
                                                                       i32_res_27407 +
                                                                       gtid_31078];
                float defunc_1_f_res_31139 = x_31137 * x_31138;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_31131 = x_acc_44275;
                }
                // load new values
                {
                    x_31132 = defunc_1_f_res_31139;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_31133 = x_31131 + x_31132;
                    
                    // store in accumulator
                    {
                        x_acc_44275 = defunc_1_op_res_31133;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_31131 = x_acc_44275;
            ((__local
              float *) red_arr_mem_44266)[sext_i32_i64(local_tid_44262)] =
                x_31131;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44281;
        int32_t skip_waves_44282;
        
        skip_waves_44282 = 1;
        
        float x_44277;
        float x_44278;
        
        offset_44281 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44262,
                      sext_i64_i32(segred_group_sizze_31127))) {
                x_44277 = ((__local
                            float *) red_arr_mem_44266)[sext_i32_i64(local_tid_44262 +
                                                        offset_44281)];
            }
        }
        offset_44281 = 1;
        while (slt32(offset_44281, wave_sizze_44264)) {
            if (slt32(local_tid_44262 + offset_44281,
                      sext_i64_i32(segred_group_sizze_31127)) &&
                ((local_tid_44262 - squot32(local_tid_44262, wave_sizze_44264) *
                  wave_sizze_44264) & (2 * offset_44281 - 1)) == 0) {
                // read array element
                {
                    x_44278 = ((volatile __local
                                float *) red_arr_mem_44266)[sext_i32_i64(local_tid_44262 +
                                                            offset_44281)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44279 = x_44277 + x_44278;
                    
                    x_44277 = defunc_1_op_res_44279;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44266)[sext_i32_i64(local_tid_44262)] =
                        x_44277;
                }
            }
            offset_44281 *= 2;
        }
        while (slt32(skip_waves_44282,
                     squot32(sext_i64_i32(segred_group_sizze_31127) +
                             wave_sizze_44264 - 1, wave_sizze_44264))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44281 = skip_waves_44282 * wave_sizze_44264;
            if (slt32(local_tid_44262 + offset_44281,
                      sext_i64_i32(segred_group_sizze_31127)) &&
                ((local_tid_44262 - squot32(local_tid_44262, wave_sizze_44264) *
                  wave_sizze_44264) == 0 && (squot32(local_tid_44262,
                                                     wave_sizze_44264) & (2 *
                                                                          skip_waves_44282 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44278 = ((__local
                                float *) red_arr_mem_44266)[sext_i32_i64(local_tid_44262 +
                                                            offset_44281)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44279 = x_44277 + x_44278;
                    
                    x_44277 = defunc_1_op_res_44279;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44266)[sext_i32_i64(local_tid_44262)] =
                        x_44277;
                }
            }
            skip_waves_44282 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44262) == (int64_t) 0) {
                x_acc_44275 = x_44277;
            }
        }
        if (groups_per_segment_44252 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44262 == 0) {
                    ((__global float *) mem_43088)[gtid_31068 * i32_res_27407 +
                                                   gtid_31069] = x_acc_44275;
                }
            }
        } else {
            int32_t old_counter_44283;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44262 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44257)[sext_i32_i64(virt_group_id_44272) *
                                                        segred_group_sizze_31127] =
                        x_acc_44275;
                    mem_fence_global();
                    old_counter_44283 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44259)[sext_i32_i64(srem32(flat_segment_id_44273,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44268)[(int64_t) 0] =
                        old_counter_44283 == groups_per_segment_44252 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44284;
            
            is_last_group_44284 = ((__local
                                    bool *) sync_arr_mem_44268)[(int64_t) 0];
            if (is_last_group_44284) {
                if (local_tid_44262 == 0) {
                    old_counter_44283 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44259)[sext_i32_i64(srem32(flat_segment_id_44273,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44252));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44285 =
                            sdiv_up64(groups_per_segment_44252,
                                      segred_group_sizze_31127);
                    
                    x_31131 = 0.0F;
                    for (int64_t i_44286 = 0; i_44286 < read_per_thread_44285;
                         i_44286++) {
                        int64_t group_res_id_44287 =
                                sext_i32_i64(local_tid_44262) *
                                read_per_thread_44285 + i_44286;
                        int64_t index_of_group_res_44288 =
                                sext_i32_i64(flat_segment_id_44273) *
                                groups_per_segment_44252 + group_res_id_44287;
                        
                        if (slt64(group_res_id_44287,
                                  groups_per_segment_44252)) {
                            x_31132 = ((__global
                                        float *) group_res_arr_mem_44257)[index_of_group_res_44288 *
                                                                          segred_group_sizze_31127];
                            
                            float defunc_1_op_res_31133;
                            
                            defunc_1_op_res_31133 = x_31131 + x_31132;
                            x_31131 = defunc_1_op_res_31133;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44266)[sext_i32_i64(local_tid_44262)] =
                    x_31131;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44289;
                    int32_t skip_waves_44290;
                    
                    skip_waves_44290 = 1;
                    
                    float x_44277;
                    float x_44278;
                    
                    offset_44289 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44262,
                                  sext_i64_i32(segred_group_sizze_31127))) {
                            x_44277 = ((__local
                                        float *) red_arr_mem_44266)[sext_i32_i64(local_tid_44262 +
                                                                    offset_44289)];
                        }
                    }
                    offset_44289 = 1;
                    while (slt32(offset_44289, wave_sizze_44264)) {
                        if (slt32(local_tid_44262 + offset_44289,
                                  sext_i64_i32(segred_group_sizze_31127)) &&
                            ((local_tid_44262 - squot32(local_tid_44262,
                                                        wave_sizze_44264) *
                              wave_sizze_44264) & (2 * offset_44289 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44278 = ((volatile __local
                                            float *) red_arr_mem_44266)[sext_i32_i64(local_tid_44262 +
                                                                        offset_44289)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44279 = x_44277 + x_44278;
                                
                                x_44277 = defunc_1_op_res_44279;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44266)[sext_i32_i64(local_tid_44262)] =
                                    x_44277;
                            }
                        }
                        offset_44289 *= 2;
                    }
                    while (slt32(skip_waves_44290,
                                 squot32(sext_i64_i32(segred_group_sizze_31127) +
                                         wave_sizze_44264 - 1,
                                         wave_sizze_44264))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44289 = skip_waves_44290 * wave_sizze_44264;
                        if (slt32(local_tid_44262 + offset_44289,
                                  sext_i64_i32(segred_group_sizze_31127)) &&
                            ((local_tid_44262 - squot32(local_tid_44262,
                                                        wave_sizze_44264) *
                              wave_sizze_44264) == 0 &&
                             (squot32(local_tid_44262, wave_sizze_44264) & (2 *
                                                                            skip_waves_44290 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44278 = ((__local
                                            float *) red_arr_mem_44266)[sext_i32_i64(local_tid_44262 +
                                                                        offset_44289)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44279 = x_44277 + x_44278;
                                
                                x_44277 = defunc_1_op_res_44279;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44266)[sext_i32_i64(local_tid_44262)] =
                                    x_44277;
                            }
                        }
                        skip_waves_44290 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44262 == 0) {
                            ((__global float *) mem_43088)[gtid_31068 *
                                                           i32_res_27407 +
                                                           gtid_31069] =
                                x_44277;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31127
}
__kernel void mainDetailedzisegred_large_31209(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44400_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44398_backing_aligned_1,
                                               int64_t N_27391,
                                               int64_t i32_res_27407,
                                               int64_t num_groups_31256,
                                               int64_t groups_per_segment_44384,
                                               int64_t elements_per_thread_44385,
                                               int64_t virt_num_groups_44386,
                                               int64_t threads_per_segment_44388,
                                               __global
                                               unsigned char *mem_42575,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43094,
                                               __global
                                               unsigned char *mem_43312,
                                               __global
                                               unsigned char *group_res_arr_mem_44389,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44391)
{
    #define segred_group_sizze_31255 (mainDetailedzisegred_group_sizze_31203)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44400_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44400_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44398_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44398_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44393;
    int32_t local_tid_44394;
    int64_t group_sizze_44397;
    int32_t wave_sizze_44396;
    int32_t group_tid_44395;
    
    global_tid_44393 = get_global_id(0);
    local_tid_44394 = get_local_id(0);
    group_sizze_44397 = get_local_size(0);
    wave_sizze_44396 = LOCKSTEP_WIDTH;
    group_tid_44395 = get_group_id(0);
    
    int32_t phys_tid_31209;
    
    phys_tid_31209 = global_tid_44393;
    
    __local char *red_arr_mem_44398;
    
    red_arr_mem_44398 = (__local char *) red_arr_mem_44398_backing_0;
    
    __local char *sync_arr_mem_44400;
    
    sync_arr_mem_44400 = (__local char *) sync_arr_mem_44400_backing_1;
    
    int32_t phys_group_id_44402;
    
    phys_group_id_44402 = get_group_id(0);
    for (int32_t i_44403 = 0; i_44403 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44386) - phys_group_id_44402,
                   sext_i64_i32(num_groups_31256)); i_44403++) {
        int32_t virt_group_id_44404 = phys_group_id_44402 + i_44403 *
                sext_i64_i32(num_groups_31256);
        int32_t flat_segment_id_44405 = squot32(virt_group_id_44404,
                                                sext_i64_i32(groups_per_segment_44384));
        int64_t global_tid_44406 = srem64(sext_i32_i64(virt_group_id_44404) *
                                          segred_group_sizze_31255 +
                                          sext_i32_i64(local_tid_44394),
                                          segred_group_sizze_31255 *
                                          groups_per_segment_44384);
        int64_t gtid_31198 = squot64(sext_i32_i64(flat_segment_id_44405),
                                     N_27391);
        int64_t gtid_31199 = sext_i32_i64(flat_segment_id_44405) -
                squot64(sext_i32_i64(flat_segment_id_44405), N_27391) * N_27391;
        int64_t gtid_31208;
        float x_acc_44407;
        int64_t chunk_sizze_44408;
        
        chunk_sizze_44408 = smin64(elements_per_thread_44385,
                                   sdiv_up64(i32_res_27407 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44406)),
                                             threads_per_segment_44388));
        
        float x_31259;
        float x_31260;
        
        // neutral-initialise the accumulators
        {
            x_acc_44407 = 0.0F;
        }
        for (int64_t i_44412 = 0; i_44412 < chunk_sizze_44408; i_44412++) {
            gtid_31208 = sext_i32_i64(sext_i64_i32(global_tid_44406)) +
                threads_per_segment_44388 * i_44412;
            // apply map function
            {
                float x_31264 = ((__global
                                  float *) defunc_4_map_res_mem_43094)[gtid_31198 *
                                                                       i32_res_27407 +
                                                                       gtid_31208];
                float x_31265 = ((__global float *) mem_42575)[gtid_31199 *
                                                               i32_res_27407 +
                                                               gtid_31208];
                float defunc_1_f_res_31266 = x_31264 * x_31265;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_31259 = x_acc_44407;
                }
                // load new values
                {
                    x_31260 = defunc_1_f_res_31266;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_31261 = x_31259 + x_31260;
                    
                    // store in accumulator
                    {
                        x_acc_44407 = defunc_1_op_res_31261;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_31259 = x_acc_44407;
            ((__local
              float *) red_arr_mem_44398)[sext_i32_i64(local_tid_44394)] =
                x_31259;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44413;
        int32_t skip_waves_44414;
        
        skip_waves_44414 = 1;
        
        float x_44409;
        float x_44410;
        
        offset_44413 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44394,
                      sext_i64_i32(segred_group_sizze_31255))) {
                x_44409 = ((__local
                            float *) red_arr_mem_44398)[sext_i32_i64(local_tid_44394 +
                                                        offset_44413)];
            }
        }
        offset_44413 = 1;
        while (slt32(offset_44413, wave_sizze_44396)) {
            if (slt32(local_tid_44394 + offset_44413,
                      sext_i64_i32(segred_group_sizze_31255)) &&
                ((local_tid_44394 - squot32(local_tid_44394, wave_sizze_44396) *
                  wave_sizze_44396) & (2 * offset_44413 - 1)) == 0) {
                // read array element
                {
                    x_44410 = ((volatile __local
                                float *) red_arr_mem_44398)[sext_i32_i64(local_tid_44394 +
                                                            offset_44413)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44411 = x_44409 + x_44410;
                    
                    x_44409 = defunc_1_op_res_44411;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44398)[sext_i32_i64(local_tid_44394)] =
                        x_44409;
                }
            }
            offset_44413 *= 2;
        }
        while (slt32(skip_waves_44414,
                     squot32(sext_i64_i32(segred_group_sizze_31255) +
                             wave_sizze_44396 - 1, wave_sizze_44396))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44413 = skip_waves_44414 * wave_sizze_44396;
            if (slt32(local_tid_44394 + offset_44413,
                      sext_i64_i32(segred_group_sizze_31255)) &&
                ((local_tid_44394 - squot32(local_tid_44394, wave_sizze_44396) *
                  wave_sizze_44396) == 0 && (squot32(local_tid_44394,
                                                     wave_sizze_44396) & (2 *
                                                                          skip_waves_44414 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44410 = ((__local
                                float *) red_arr_mem_44398)[sext_i32_i64(local_tid_44394 +
                                                            offset_44413)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44411 = x_44409 + x_44410;
                    
                    x_44409 = defunc_1_op_res_44411;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44398)[sext_i32_i64(local_tid_44394)] =
                        x_44409;
                }
            }
            skip_waves_44414 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44394) == (int64_t) 0) {
                x_acc_44407 = x_44409;
            }
        }
        if (groups_per_segment_44384 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44394 == 0) {
                    ((__global float *) mem_43312)[gtid_31198 * N_27391 +
                                                   gtid_31199] = x_acc_44407;
                }
            }
        } else {
            int32_t old_counter_44415;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44394 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44389)[sext_i32_i64(virt_group_id_44404) *
                                                        segred_group_sizze_31255] =
                        x_acc_44407;
                    mem_fence_global();
                    old_counter_44415 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44391)[sext_i32_i64(srem32(flat_segment_id_44405,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44400)[(int64_t) 0] =
                        old_counter_44415 == groups_per_segment_44384 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44416;
            
            is_last_group_44416 = ((__local
                                    bool *) sync_arr_mem_44400)[(int64_t) 0];
            if (is_last_group_44416) {
                if (local_tid_44394 == 0) {
                    old_counter_44415 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44391)[sext_i32_i64(srem32(flat_segment_id_44405,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44384));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44417 =
                            sdiv_up64(groups_per_segment_44384,
                                      segred_group_sizze_31255);
                    
                    x_31259 = 0.0F;
                    for (int64_t i_44418 = 0; i_44418 < read_per_thread_44417;
                         i_44418++) {
                        int64_t group_res_id_44419 =
                                sext_i32_i64(local_tid_44394) *
                                read_per_thread_44417 + i_44418;
                        int64_t index_of_group_res_44420 =
                                sext_i32_i64(flat_segment_id_44405) *
                                groups_per_segment_44384 + group_res_id_44419;
                        
                        if (slt64(group_res_id_44419,
                                  groups_per_segment_44384)) {
                            x_31260 = ((__global
                                        float *) group_res_arr_mem_44389)[index_of_group_res_44420 *
                                                                          segred_group_sizze_31255];
                            
                            float defunc_1_op_res_31261;
                            
                            defunc_1_op_res_31261 = x_31259 + x_31260;
                            x_31259 = defunc_1_op_res_31261;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44398)[sext_i32_i64(local_tid_44394)] =
                    x_31259;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44421;
                    int32_t skip_waves_44422;
                    
                    skip_waves_44422 = 1;
                    
                    float x_44409;
                    float x_44410;
                    
                    offset_44421 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44394,
                                  sext_i64_i32(segred_group_sizze_31255))) {
                            x_44409 = ((__local
                                        float *) red_arr_mem_44398)[sext_i32_i64(local_tid_44394 +
                                                                    offset_44421)];
                        }
                    }
                    offset_44421 = 1;
                    while (slt32(offset_44421, wave_sizze_44396)) {
                        if (slt32(local_tid_44394 + offset_44421,
                                  sext_i64_i32(segred_group_sizze_31255)) &&
                            ((local_tid_44394 - squot32(local_tid_44394,
                                                        wave_sizze_44396) *
                              wave_sizze_44396) & (2 * offset_44421 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44410 = ((volatile __local
                                            float *) red_arr_mem_44398)[sext_i32_i64(local_tid_44394 +
                                                                        offset_44421)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44411 = x_44409 + x_44410;
                                
                                x_44409 = defunc_1_op_res_44411;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44398)[sext_i32_i64(local_tid_44394)] =
                                    x_44409;
                            }
                        }
                        offset_44421 *= 2;
                    }
                    while (slt32(skip_waves_44422,
                                 squot32(sext_i64_i32(segred_group_sizze_31255) +
                                         wave_sizze_44396 - 1,
                                         wave_sizze_44396))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44421 = skip_waves_44422 * wave_sizze_44396;
                        if (slt32(local_tid_44394 + offset_44421,
                                  sext_i64_i32(segred_group_sizze_31255)) &&
                            ((local_tid_44394 - squot32(local_tid_44394,
                                                        wave_sizze_44396) *
                              wave_sizze_44396) == 0 &&
                             (squot32(local_tid_44394, wave_sizze_44396) & (2 *
                                                                            skip_waves_44422 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44410 = ((__local
                                            float *) red_arr_mem_44398)[sext_i32_i64(local_tid_44394 +
                                                                        offset_44421)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44411 = x_44409 + x_44410;
                                
                                x_44409 = defunc_1_op_res_44411;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44398)[sext_i32_i64(local_tid_44394)] =
                                    x_44409;
                            }
                        }
                        skip_waves_44422 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44394 == 0) {
                            ((__global float *) mem_43312)[gtid_31198 *
                                                           N_27391 +
                                                           gtid_31199] =
                                x_44409;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31255
}
__kernel void mainDetailedzisegred_large_31775(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44652_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44650_backing_aligned_1,
                                               int64_t N_27391,
                                               int64_t i32_res_27401,
                                               int64_t num_groups_31822,
                                               int64_t groups_per_segment_44636,
                                               int64_t elements_per_thread_44637,
                                               int64_t virt_num_groups_44638,
                                               int64_t threads_per_segment_44640,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43356,
                                               __global
                                               unsigned char *mem_43410,
                                               __global
                                               unsigned char *mem_43413,
                                               __global
                                               unsigned char *group_res_arr_mem_44641,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44643)
{
    #define segred_group_sizze_31821 (mainDetailedzisegred_group_sizze_31769)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44652_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44652_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44650_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44650_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44645;
    int32_t local_tid_44646;
    int64_t group_sizze_44649;
    int32_t wave_sizze_44648;
    int32_t group_tid_44647;
    
    global_tid_44645 = get_global_id(0);
    local_tid_44646 = get_local_id(0);
    group_sizze_44649 = get_local_size(0);
    wave_sizze_44648 = LOCKSTEP_WIDTH;
    group_tid_44647 = get_group_id(0);
    
    int32_t phys_tid_31775;
    
    phys_tid_31775 = global_tid_44645;
    
    __local char *red_arr_mem_44650;
    
    red_arr_mem_44650 = (__local char *) red_arr_mem_44650_backing_0;
    
    __local char *sync_arr_mem_44652;
    
    sync_arr_mem_44652 = (__local char *) sync_arr_mem_44652_backing_1;
    
    int32_t phys_group_id_44654;
    
    phys_group_id_44654 = get_group_id(0);
    for (int32_t i_44655 = 0; i_44655 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44638) - phys_group_id_44654,
                   sext_i64_i32(num_groups_31822)); i_44655++) {
        int32_t virt_group_id_44656 = phys_group_id_44654 + i_44655 *
                sext_i64_i32(num_groups_31822);
        int32_t flat_segment_id_44657 = squot32(virt_group_id_44656,
                                                sext_i64_i32(groups_per_segment_44636));
        int64_t global_tid_44658 = srem64(sext_i32_i64(virt_group_id_44656) *
                                          segred_group_sizze_31821 +
                                          sext_i32_i64(local_tid_44646),
                                          segred_group_sizze_31821 *
                                          groups_per_segment_44636);
        int64_t gtid_31766 = sext_i32_i64(flat_segment_id_44657);
        int64_t gtid_31774;
        float x_acc_44659;
        int64_t chunk_sizze_44660;
        
        chunk_sizze_44660 = smin64(elements_per_thread_44637,
                                   sdiv_up64(i32_res_27401 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44658)),
                                             threads_per_segment_44640));
        
        float x_31825;
        float x_31826;
        
        // neutral-initialise the accumulators
        {
            x_acc_44659 = 0.0F;
        }
        for (int64_t i_44664 = 0; i_44664 < chunk_sizze_44660; i_44664++) {
            gtid_31774 = sext_i32_i64(sext_i64_i32(global_tid_44658)) +
                threads_per_segment_44640 * i_44664;
            // apply map function
            {
                int32_t defunc_0_f_res_31829 = ((__global
                                                 int32_t *) mem_43410)[gtid_31766];
                int32_t index_primexp_40595 = sext_i64_i32(gtid_31774);
                bool cond_31831 = slt32(index_primexp_40595,
                                        defunc_0_f_res_31829);
                float defunc_0_f_res_31832;
                
                if (cond_31831) {
                    int64_t i_31833 = sext_i32_i64(index_primexp_40595);
                    float defunc_0_f_res_t_res_31834 = ((__global
                                                         float *) defunc_4_map_res_mem_43356)[gtid_31766 *
                                                                                              N_27391 +
                                                                                              i_31833];
                    
                    defunc_0_f_res_31832 = defunc_0_f_res_t_res_31834;
                } else {
                    defunc_0_f_res_31832 = 0.0F;
                }
                
                float defunc_0_f_res_31835 = defunc_0_f_res_31832 *
                      defunc_0_f_res_31832;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_31825 = x_acc_44659;
                }
                // load new values
                {
                    x_31826 = defunc_0_f_res_31835;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_31827 = x_31825 + x_31826;
                    
                    // store in accumulator
                    {
                        x_acc_44659 = defunc_1_op_res_31827;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_31825 = x_acc_44659;
            ((__local
              float *) red_arr_mem_44650)[sext_i32_i64(local_tid_44646)] =
                x_31825;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44665;
        int32_t skip_waves_44666;
        
        skip_waves_44666 = 1;
        
        float x_44661;
        float x_44662;
        
        offset_44665 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44646,
                      sext_i64_i32(segred_group_sizze_31821))) {
                x_44661 = ((__local
                            float *) red_arr_mem_44650)[sext_i32_i64(local_tid_44646 +
                                                        offset_44665)];
            }
        }
        offset_44665 = 1;
        while (slt32(offset_44665, wave_sizze_44648)) {
            if (slt32(local_tid_44646 + offset_44665,
                      sext_i64_i32(segred_group_sizze_31821)) &&
                ((local_tid_44646 - squot32(local_tid_44646, wave_sizze_44648) *
                  wave_sizze_44648) & (2 * offset_44665 - 1)) == 0) {
                // read array element
                {
                    x_44662 = ((volatile __local
                                float *) red_arr_mem_44650)[sext_i32_i64(local_tid_44646 +
                                                            offset_44665)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44663 = x_44661 + x_44662;
                    
                    x_44661 = defunc_1_op_res_44663;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44650)[sext_i32_i64(local_tid_44646)] =
                        x_44661;
                }
            }
            offset_44665 *= 2;
        }
        while (slt32(skip_waves_44666,
                     squot32(sext_i64_i32(segred_group_sizze_31821) +
                             wave_sizze_44648 - 1, wave_sizze_44648))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44665 = skip_waves_44666 * wave_sizze_44648;
            if (slt32(local_tid_44646 + offset_44665,
                      sext_i64_i32(segred_group_sizze_31821)) &&
                ((local_tid_44646 - squot32(local_tid_44646, wave_sizze_44648) *
                  wave_sizze_44648) == 0 && (squot32(local_tid_44646,
                                                     wave_sizze_44648) & (2 *
                                                                          skip_waves_44666 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44662 = ((__local
                                float *) red_arr_mem_44650)[sext_i32_i64(local_tid_44646 +
                                                            offset_44665)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44663 = x_44661 + x_44662;
                    
                    x_44661 = defunc_1_op_res_44663;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44650)[sext_i32_i64(local_tid_44646)] =
                        x_44661;
                }
            }
            skip_waves_44666 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44646) == (int64_t) 0) {
                x_acc_44659 = x_44661;
            }
        }
        if (groups_per_segment_44636 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44646 == 0) {
                    ((__global float *) mem_43413)[gtid_31766] = x_acc_44659;
                }
            }
        } else {
            int32_t old_counter_44667;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44646 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44641)[sext_i32_i64(virt_group_id_44656) *
                                                        segred_group_sizze_31821] =
                        x_acc_44659;
                    mem_fence_global();
                    old_counter_44667 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44643)[sext_i32_i64(srem32(flat_segment_id_44657,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44652)[(int64_t) 0] =
                        old_counter_44667 == groups_per_segment_44636 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44668;
            
            is_last_group_44668 = ((__local
                                    bool *) sync_arr_mem_44652)[(int64_t) 0];
            if (is_last_group_44668) {
                if (local_tid_44646 == 0) {
                    old_counter_44667 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44643)[sext_i32_i64(srem32(flat_segment_id_44657,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44636));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44669 =
                            sdiv_up64(groups_per_segment_44636,
                                      segred_group_sizze_31821);
                    
                    x_31825 = 0.0F;
                    for (int64_t i_44670 = 0; i_44670 < read_per_thread_44669;
                         i_44670++) {
                        int64_t group_res_id_44671 =
                                sext_i32_i64(local_tid_44646) *
                                read_per_thread_44669 + i_44670;
                        int64_t index_of_group_res_44672 =
                                sext_i32_i64(flat_segment_id_44657) *
                                groups_per_segment_44636 + group_res_id_44671;
                        
                        if (slt64(group_res_id_44671,
                                  groups_per_segment_44636)) {
                            x_31826 = ((__global
                                        float *) group_res_arr_mem_44641)[index_of_group_res_44672 *
                                                                          segred_group_sizze_31821];
                            
                            float defunc_1_op_res_31827;
                            
                            defunc_1_op_res_31827 = x_31825 + x_31826;
                            x_31825 = defunc_1_op_res_31827;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44650)[sext_i32_i64(local_tid_44646)] =
                    x_31825;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44673;
                    int32_t skip_waves_44674;
                    
                    skip_waves_44674 = 1;
                    
                    float x_44661;
                    float x_44662;
                    
                    offset_44673 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44646,
                                  sext_i64_i32(segred_group_sizze_31821))) {
                            x_44661 = ((__local
                                        float *) red_arr_mem_44650)[sext_i32_i64(local_tid_44646 +
                                                                    offset_44673)];
                        }
                    }
                    offset_44673 = 1;
                    while (slt32(offset_44673, wave_sizze_44648)) {
                        if (slt32(local_tid_44646 + offset_44673,
                                  sext_i64_i32(segred_group_sizze_31821)) &&
                            ((local_tid_44646 - squot32(local_tid_44646,
                                                        wave_sizze_44648) *
                              wave_sizze_44648) & (2 * offset_44673 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44662 = ((volatile __local
                                            float *) red_arr_mem_44650)[sext_i32_i64(local_tid_44646 +
                                                                        offset_44673)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44663 = x_44661 + x_44662;
                                
                                x_44661 = defunc_1_op_res_44663;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44650)[sext_i32_i64(local_tid_44646)] =
                                    x_44661;
                            }
                        }
                        offset_44673 *= 2;
                    }
                    while (slt32(skip_waves_44674,
                                 squot32(sext_i64_i32(segred_group_sizze_31821) +
                                         wave_sizze_44648 - 1,
                                         wave_sizze_44648))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44673 = skip_waves_44674 * wave_sizze_44648;
                        if (slt32(local_tid_44646 + offset_44673,
                                  sext_i64_i32(segred_group_sizze_31821)) &&
                            ((local_tid_44646 - squot32(local_tid_44646,
                                                        wave_sizze_44648) *
                              wave_sizze_44648) == 0 &&
                             (squot32(local_tid_44646, wave_sizze_44648) & (2 *
                                                                            skip_waves_44674 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44662 = ((__local
                                            float *) red_arr_mem_44650)[sext_i32_i64(local_tid_44646 +
                                                                        offset_44673)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44663 = x_44661 + x_44662;
                                
                                x_44661 = defunc_1_op_res_44663;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44650)[sext_i32_i64(local_tid_44646)] =
                                    x_44661;
                            }
                        }
                        skip_waves_44674 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44646 == 0) {
                            ((__global float *) mem_43413)[gtid_31766] =
                                x_44661;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31821
}
__kernel void mainDetailedzisegred_large_31796(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44592_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44590_backing_aligned_1,
                                               int64_t N_27391,
                                               int64_t i32_res_27401,
                                               int64_t num_groups_31808,
                                               int64_t groups_per_segment_44576,
                                               int64_t elements_per_thread_44577,
                                               int64_t virt_num_groups_44578,
                                               int64_t threads_per_segment_44580,
                                               __global
                                               unsigned char *images_mem_42559,
                                               __global
                                               unsigned char *mem_43410,
                                               __global
                                               unsigned char *group_res_arr_mem_44581,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44583)
{
    #define segred_group_sizze_31807 (mainDetailedzisegred_group_sizze_31790)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44592_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44592_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44590_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44590_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44585;
    int32_t local_tid_44586;
    int64_t group_sizze_44589;
    int32_t wave_sizze_44588;
    int32_t group_tid_44587;
    
    global_tid_44585 = get_global_id(0);
    local_tid_44586 = get_local_id(0);
    group_sizze_44589 = get_local_size(0);
    wave_sizze_44588 = LOCKSTEP_WIDTH;
    group_tid_44587 = get_group_id(0);
    
    int32_t phys_tid_31796;
    
    phys_tid_31796 = global_tid_44585;
    
    __local char *red_arr_mem_44590;
    
    red_arr_mem_44590 = (__local char *) red_arr_mem_44590_backing_0;
    
    __local char *sync_arr_mem_44592;
    
    sync_arr_mem_44592 = (__local char *) sync_arr_mem_44592_backing_1;
    
    int32_t phys_group_id_44594;
    
    phys_group_id_44594 = get_group_id(0);
    for (int32_t i_44595 = 0; i_44595 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44578) - phys_group_id_44594,
                   sext_i64_i32(num_groups_31808)); i_44595++) {
        int32_t virt_group_id_44596 = phys_group_id_44594 + i_44595 *
                sext_i64_i32(num_groups_31808);
        int32_t flat_segment_id_44597 = squot32(virt_group_id_44596,
                                                sext_i64_i32(groups_per_segment_44576));
        int64_t global_tid_44598 = srem64(sext_i32_i64(virt_group_id_44596) *
                                          segred_group_sizze_31807 +
                                          sext_i32_i64(local_tid_44586),
                                          segred_group_sizze_31807 *
                                          groups_per_segment_44576);
        int64_t gtid_31787 = sext_i32_i64(flat_segment_id_44597);
        int64_t gtid_31795;
        int32_t x_acc_44599;
        int64_t chunk_sizze_44600;
        
        chunk_sizze_44600 = smin64(elements_per_thread_44577,
                                   sdiv_up64(i32_res_27401 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44598)),
                                             threads_per_segment_44580));
        
        int32_t x_31811;
        int32_t x_31812;
        
        // neutral-initialise the accumulators
        {
            x_acc_44599 = 0;
        }
        for (int64_t i_44604 = 0; i_44604 < chunk_sizze_44600; i_44604++) {
            gtid_31795 = sext_i32_i64(sext_i64_i32(global_tid_44598)) +
                threads_per_segment_44580 * i_44604;
            // apply map function
            {
                float x_31815 = ((__global
                                  float *) images_mem_42559)[gtid_31787 *
                                                             N_27391 +
                                                             gtid_31795];
                bool isnan_res_31816;
                
                isnan_res_31816 = futrts_isnan32(x_31815);
                
                bool cond_31817 = !isnan_res_31816;
                int32_t defunc_0_f_res_31818 = btoi_bool_i32(cond_31817);
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_31811 = x_acc_44599;
                }
                // load new values
                {
                    x_31812 = defunc_0_f_res_31818;
                }
                // apply reduction operator
                {
                    int32_t defunc_1_op_res_31813 = add32(x_31811, x_31812);
                    
                    // store in accumulator
                    {
                        x_acc_44599 = defunc_1_op_res_31813;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_31811 = x_acc_44599;
            ((__local
              int32_t *) red_arr_mem_44590)[sext_i32_i64(local_tid_44586)] =
                x_31811;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44605;
        int32_t skip_waves_44606;
        
        skip_waves_44606 = 1;
        
        int32_t x_44601;
        int32_t x_44602;
        
        offset_44605 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44586,
                      sext_i64_i32(segred_group_sizze_31807))) {
                x_44601 = ((__local
                            int32_t *) red_arr_mem_44590)[sext_i32_i64(local_tid_44586 +
                                                          offset_44605)];
            }
        }
        offset_44605 = 1;
        while (slt32(offset_44605, wave_sizze_44588)) {
            if (slt32(local_tid_44586 + offset_44605,
                      sext_i64_i32(segred_group_sizze_31807)) &&
                ((local_tid_44586 - squot32(local_tid_44586, wave_sizze_44588) *
                  wave_sizze_44588) & (2 * offset_44605 - 1)) == 0) {
                // read array element
                {
                    x_44602 = ((volatile __local
                                int32_t *) red_arr_mem_44590)[sext_i32_i64(local_tid_44586 +
                                                              offset_44605)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_44603 = add32(x_44601, x_44602);
                    
                    x_44601 = defunc_1_op_res_44603;
                }
                // write result of operation
                {
                    ((volatile __local
                      int32_t *) red_arr_mem_44590)[sext_i32_i64(local_tid_44586)] =
                        x_44601;
                }
            }
            offset_44605 *= 2;
        }
        while (slt32(skip_waves_44606,
                     squot32(sext_i64_i32(segred_group_sizze_31807) +
                             wave_sizze_44588 - 1, wave_sizze_44588))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44605 = skip_waves_44606 * wave_sizze_44588;
            if (slt32(local_tid_44586 + offset_44605,
                      sext_i64_i32(segred_group_sizze_31807)) &&
                ((local_tid_44586 - squot32(local_tid_44586, wave_sizze_44588) *
                  wave_sizze_44588) == 0 && (squot32(local_tid_44586,
                                                     wave_sizze_44588) & (2 *
                                                                          skip_waves_44606 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44602 = ((__local
                                int32_t *) red_arr_mem_44590)[sext_i32_i64(local_tid_44586 +
                                                              offset_44605)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_44603 = add32(x_44601, x_44602);
                    
                    x_44601 = defunc_1_op_res_44603;
                }
                // write result of operation
                {
                    ((__local
                      int32_t *) red_arr_mem_44590)[sext_i32_i64(local_tid_44586)] =
                        x_44601;
                }
            }
            skip_waves_44606 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44586) == (int64_t) 0) {
                x_acc_44599 = x_44601;
            }
        }
        if (groups_per_segment_44576 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44586 == 0) {
                    ((__global int32_t *) mem_43410)[gtid_31787] = x_acc_44599;
                }
            }
        } else {
            int32_t old_counter_44607;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44586 == 0) {
                    ((__global
                      int32_t *) group_res_arr_mem_44581)[sext_i32_i64(virt_group_id_44596) *
                                                          segred_group_sizze_31807] =
                        x_acc_44599;
                    mem_fence_global();
                    old_counter_44607 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44583)[sext_i32_i64(srem32(flat_segment_id_44597,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44592)[(int64_t) 0] =
                        old_counter_44607 == groups_per_segment_44576 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44608;
            
            is_last_group_44608 = ((__local
                                    bool *) sync_arr_mem_44592)[(int64_t) 0];
            if (is_last_group_44608) {
                if (local_tid_44586 == 0) {
                    old_counter_44607 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44583)[sext_i32_i64(srem32(flat_segment_id_44597,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44576));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44609 =
                            sdiv_up64(groups_per_segment_44576,
                                      segred_group_sizze_31807);
                    
                    x_31811 = 0;
                    for (int64_t i_44610 = 0; i_44610 < read_per_thread_44609;
                         i_44610++) {
                        int64_t group_res_id_44611 =
                                sext_i32_i64(local_tid_44586) *
                                read_per_thread_44609 + i_44610;
                        int64_t index_of_group_res_44612 =
                                sext_i32_i64(flat_segment_id_44597) *
                                groups_per_segment_44576 + group_res_id_44611;
                        
                        if (slt64(group_res_id_44611,
                                  groups_per_segment_44576)) {
                            x_31812 = ((__global
                                        int32_t *) group_res_arr_mem_44581)[index_of_group_res_44612 *
                                                                            segred_group_sizze_31807];
                            
                            int32_t defunc_1_op_res_31813;
                            
                            defunc_1_op_res_31813 = add32(x_31811, x_31812);
                            x_31811 = defunc_1_op_res_31813;
                        }
                    }
                }
                ((__local
                  int32_t *) red_arr_mem_44590)[sext_i32_i64(local_tid_44586)] =
                    x_31811;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44613;
                    int32_t skip_waves_44614;
                    
                    skip_waves_44614 = 1;
                    
                    int32_t x_44601;
                    int32_t x_44602;
                    
                    offset_44613 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44586,
                                  sext_i64_i32(segred_group_sizze_31807))) {
                            x_44601 = ((__local
                                        int32_t *) red_arr_mem_44590)[sext_i32_i64(local_tid_44586 +
                                                                      offset_44613)];
                        }
                    }
                    offset_44613 = 1;
                    while (slt32(offset_44613, wave_sizze_44588)) {
                        if (slt32(local_tid_44586 + offset_44613,
                                  sext_i64_i32(segred_group_sizze_31807)) &&
                            ((local_tid_44586 - squot32(local_tid_44586,
                                                        wave_sizze_44588) *
                              wave_sizze_44588) & (2 * offset_44613 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44602 = ((volatile __local
                                            int32_t *) red_arr_mem_44590)[sext_i32_i64(local_tid_44586 +
                                                                          offset_44613)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_44603 = add32(x_44601,
                                                                      x_44602);
                                
                                x_44601 = defunc_1_op_res_44603;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_44590)[sext_i32_i64(local_tid_44586)] =
                                    x_44601;
                            }
                        }
                        offset_44613 *= 2;
                    }
                    while (slt32(skip_waves_44614,
                                 squot32(sext_i64_i32(segred_group_sizze_31807) +
                                         wave_sizze_44588 - 1,
                                         wave_sizze_44588))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44613 = skip_waves_44614 * wave_sizze_44588;
                        if (slt32(local_tid_44586 + offset_44613,
                                  sext_i64_i32(segred_group_sizze_31807)) &&
                            ((local_tid_44586 - squot32(local_tid_44586,
                                                        wave_sizze_44588) *
                              wave_sizze_44588) == 0 &&
                             (squot32(local_tid_44586, wave_sizze_44588) & (2 *
                                                                            skip_waves_44614 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44602 = ((__local
                                            int32_t *) red_arr_mem_44590)[sext_i32_i64(local_tid_44586 +
                                                                          offset_44613)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_44603 = add32(x_44601,
                                                                      x_44602);
                                
                                x_44601 = defunc_1_op_res_44603;
                            }
                            // write result of operation
                            {
                                ((__local
                                  int32_t *) red_arr_mem_44590)[sext_i32_i64(local_tid_44586)] =
                                    x_44601;
                            }
                        }
                        skip_waves_44614 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44586 == 0) {
                            ((__global int32_t *) mem_43410)[gtid_31787] =
                                x_44601;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31807
}
__kernel void mainDetailedzisegred_large_31947(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44761_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44759_backing_aligned_1,
                                               int64_t N_27391,
                                               int64_t i32_res_27762,
                                               int64_t num_groups_31965,
                                               int64_t groups_per_segment_44745,
                                               int64_t elements_per_thread_44746,
                                               int64_t virt_num_groups_44747,
                                               int64_t threads_per_segment_44749,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43356,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43422,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43423,
                                               __global
                                               unsigned char *mem_43456,
                                               __global
                                               unsigned char *group_res_arr_mem_44750,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44752)
{
    #define segred_group_sizze_31964 (mainDetailedzisegred_group_sizze_31941)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44761_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44761_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44759_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44759_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44754;
    int32_t local_tid_44755;
    int64_t group_sizze_44758;
    int32_t wave_sizze_44757;
    int32_t group_tid_44756;
    
    global_tid_44754 = get_global_id(0);
    local_tid_44755 = get_local_id(0);
    group_sizze_44758 = get_local_size(0);
    wave_sizze_44757 = LOCKSTEP_WIDTH;
    group_tid_44756 = get_group_id(0);
    
    int32_t phys_tid_31947;
    
    phys_tid_31947 = global_tid_44754;
    
    __local char *red_arr_mem_44759;
    
    red_arr_mem_44759 = (__local char *) red_arr_mem_44759_backing_0;
    
    __local char *sync_arr_mem_44761;
    
    sync_arr_mem_44761 = (__local char *) sync_arr_mem_44761_backing_1;
    
    int32_t phys_group_id_44763;
    
    phys_group_id_44763 = get_group_id(0);
    for (int32_t i_44764 = 0; i_44764 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44747) - phys_group_id_44763,
                   sext_i64_i32(num_groups_31965)); i_44764++) {
        int32_t virt_group_id_44765 = phys_group_id_44763 + i_44764 *
                sext_i64_i32(num_groups_31965);
        int32_t flat_segment_id_44766 = squot32(virt_group_id_44765,
                                                sext_i64_i32(groups_per_segment_44745));
        int64_t global_tid_44767 = srem64(sext_i32_i64(virt_group_id_44765) *
                                          segred_group_sizze_31964 +
                                          sext_i32_i64(local_tid_44755),
                                          segred_group_sizze_31964 *
                                          groups_per_segment_44745);
        int64_t gtid_31938 = sext_i32_i64(flat_segment_id_44766);
        int64_t gtid_31946;
        float x_acc_44768;
        int64_t chunk_sizze_44769;
        
        chunk_sizze_44769 = smin64(elements_per_thread_44746,
                                   sdiv_up64(i32_res_27762 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44767)),
                                             threads_per_segment_44749));
        
        float x_31968;
        float x_31969;
        
        // neutral-initialise the accumulators
        {
            x_acc_44768 = 0.0F;
        }
        for (int64_t i_44773 = 0; i_44773 < chunk_sizze_44769; i_44773++) {
            gtid_31946 = sext_i32_i64(sext_i64_i32(global_tid_44767)) +
                threads_per_segment_44749 * i_44773;
            // apply map function
            {
                int32_t x_31973 = ((__global
                                    int32_t *) defunc_3_map_res_mem_43422)[gtid_31938];
                int32_t index_primexp_40600 = sext_i64_i32(gtid_31946);
                bool cond_31975 = slt32(index_primexp_40600, x_31973);
                float defunc_0_f_res_31976;
                
                if (cond_31975) {
                    int32_t x_31972 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43423)[gtid_31938];
                    int32_t x_31977 = add32(x_31972, index_primexp_40600);
                    int32_t x_31978 = sub32(x_31977, x_31973);
                    int32_t i_31979 = add32(1, x_31978);
                    int64_t i_31980 = sext_i32_i64(i_31979);
                    float defunc_0_f_res_t_res_31981 = ((__global
                                                         float *) defunc_4_map_res_mem_43356)[gtid_31938 *
                                                                                              N_27391 +
                                                                                              i_31980];
                    
                    defunc_0_f_res_31976 = defunc_0_f_res_t_res_31981;
                } else {
                    defunc_0_f_res_31976 = 0.0F;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_31968 = x_acc_44768;
                }
                // load new values
                {
                    x_31969 = defunc_0_f_res_31976;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_31970 = x_31968 + x_31969;
                    
                    // store in accumulator
                    {
                        x_acc_44768 = defunc_1_op_res_31970;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_31968 = x_acc_44768;
            ((__local
              float *) red_arr_mem_44759)[sext_i32_i64(local_tid_44755)] =
                x_31968;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44774;
        int32_t skip_waves_44775;
        
        skip_waves_44775 = 1;
        
        float x_44770;
        float x_44771;
        
        offset_44774 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44755,
                      sext_i64_i32(segred_group_sizze_31964))) {
                x_44770 = ((__local
                            float *) red_arr_mem_44759)[sext_i32_i64(local_tid_44755 +
                                                        offset_44774)];
            }
        }
        offset_44774 = 1;
        while (slt32(offset_44774, wave_sizze_44757)) {
            if (slt32(local_tid_44755 + offset_44774,
                      sext_i64_i32(segred_group_sizze_31964)) &&
                ((local_tid_44755 - squot32(local_tid_44755, wave_sizze_44757) *
                  wave_sizze_44757) & (2 * offset_44774 - 1)) == 0) {
                // read array element
                {
                    x_44771 = ((volatile __local
                                float *) red_arr_mem_44759)[sext_i32_i64(local_tid_44755 +
                                                            offset_44774)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44772 = x_44770 + x_44771;
                    
                    x_44770 = defunc_1_op_res_44772;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44759)[sext_i32_i64(local_tid_44755)] =
                        x_44770;
                }
            }
            offset_44774 *= 2;
        }
        while (slt32(skip_waves_44775,
                     squot32(sext_i64_i32(segred_group_sizze_31964) +
                             wave_sizze_44757 - 1, wave_sizze_44757))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44774 = skip_waves_44775 * wave_sizze_44757;
            if (slt32(local_tid_44755 + offset_44774,
                      sext_i64_i32(segred_group_sizze_31964)) &&
                ((local_tid_44755 - squot32(local_tid_44755, wave_sizze_44757) *
                  wave_sizze_44757) == 0 && (squot32(local_tid_44755,
                                                     wave_sizze_44757) & (2 *
                                                                          skip_waves_44775 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44771 = ((__local
                                float *) red_arr_mem_44759)[sext_i32_i64(local_tid_44755 +
                                                            offset_44774)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44772 = x_44770 + x_44771;
                    
                    x_44770 = defunc_1_op_res_44772;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44759)[sext_i32_i64(local_tid_44755)] =
                        x_44770;
                }
            }
            skip_waves_44775 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44755) == (int64_t) 0) {
                x_acc_44768 = x_44770;
            }
        }
        if (groups_per_segment_44745 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44755 == 0) {
                    ((__global float *) mem_43456)[gtid_31938] = x_acc_44768;
                }
            }
        } else {
            int32_t old_counter_44776;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44755 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44750)[sext_i32_i64(virt_group_id_44765) *
                                                        segred_group_sizze_31964] =
                        x_acc_44768;
                    mem_fence_global();
                    old_counter_44776 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44752)[sext_i32_i64(srem32(flat_segment_id_44766,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44761)[(int64_t) 0] =
                        old_counter_44776 == groups_per_segment_44745 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44777;
            
            is_last_group_44777 = ((__local
                                    bool *) sync_arr_mem_44761)[(int64_t) 0];
            if (is_last_group_44777) {
                if (local_tid_44755 == 0) {
                    old_counter_44776 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44752)[sext_i32_i64(srem32(flat_segment_id_44766,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44745));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44778 =
                            sdiv_up64(groups_per_segment_44745,
                                      segred_group_sizze_31964);
                    
                    x_31968 = 0.0F;
                    for (int64_t i_44779 = 0; i_44779 < read_per_thread_44778;
                         i_44779++) {
                        int64_t group_res_id_44780 =
                                sext_i32_i64(local_tid_44755) *
                                read_per_thread_44778 + i_44779;
                        int64_t index_of_group_res_44781 =
                                sext_i32_i64(flat_segment_id_44766) *
                                groups_per_segment_44745 + group_res_id_44780;
                        
                        if (slt64(group_res_id_44780,
                                  groups_per_segment_44745)) {
                            x_31969 = ((__global
                                        float *) group_res_arr_mem_44750)[index_of_group_res_44781 *
                                                                          segred_group_sizze_31964];
                            
                            float defunc_1_op_res_31970;
                            
                            defunc_1_op_res_31970 = x_31968 + x_31969;
                            x_31968 = defunc_1_op_res_31970;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44759)[sext_i32_i64(local_tid_44755)] =
                    x_31968;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44782;
                    int32_t skip_waves_44783;
                    
                    skip_waves_44783 = 1;
                    
                    float x_44770;
                    float x_44771;
                    
                    offset_44782 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44755,
                                  sext_i64_i32(segred_group_sizze_31964))) {
                            x_44770 = ((__local
                                        float *) red_arr_mem_44759)[sext_i32_i64(local_tid_44755 +
                                                                    offset_44782)];
                        }
                    }
                    offset_44782 = 1;
                    while (slt32(offset_44782, wave_sizze_44757)) {
                        if (slt32(local_tid_44755 + offset_44782,
                                  sext_i64_i32(segred_group_sizze_31964)) &&
                            ((local_tid_44755 - squot32(local_tid_44755,
                                                        wave_sizze_44757) *
                              wave_sizze_44757) & (2 * offset_44782 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44771 = ((volatile __local
                                            float *) red_arr_mem_44759)[sext_i32_i64(local_tid_44755 +
                                                                        offset_44782)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44772 = x_44770 + x_44771;
                                
                                x_44770 = defunc_1_op_res_44772;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44759)[sext_i32_i64(local_tid_44755)] =
                                    x_44770;
                            }
                        }
                        offset_44782 *= 2;
                    }
                    while (slt32(skip_waves_44783,
                                 squot32(sext_i64_i32(segred_group_sizze_31964) +
                                         wave_sizze_44757 - 1,
                                         wave_sizze_44757))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44782 = skip_waves_44783 * wave_sizze_44757;
                        if (slt32(local_tid_44755 + offset_44782,
                                  sext_i64_i32(segred_group_sizze_31964)) &&
                            ((local_tid_44755 - squot32(local_tid_44755,
                                                        wave_sizze_44757) *
                              wave_sizze_44757) == 0 &&
                             (squot32(local_tid_44755, wave_sizze_44757) & (2 *
                                                                            skip_waves_44783 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44771 = ((__local
                                            float *) red_arr_mem_44759)[sext_i32_i64(local_tid_44755 +
                                                                        offset_44782)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44772 = x_44770 + x_44771;
                                
                                x_44770 = defunc_1_op_res_44772;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44759)[sext_i32_i64(local_tid_44755)] =
                                    x_44770;
                            }
                        }
                        skip_waves_44783 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44755 == 0) {
                            ((__global float *) mem_43456)[gtid_31938] =
                                x_44770;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31964
}
__kernel void mainDetailedzisegred_large_33052(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44988_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44986_backing_aligned_1,
                                               __local volatile
                                               int64_t *red_arr_mem_44984_backing_aligned_2,
                                               __local volatile
                                               int64_t *red_arr_mem_44982_backing_aligned_3,
                                               int64_t iota32_arg_27787,
                                               int64_t iota32_arg_27815,
                                               int64_t num_groups_33181,
                                               int64_t groups_per_segment_44964,
                                               int64_t elements_per_thread_44965,
                                               int64_t virt_num_groups_44966,
                                               __global
                                               unsigned char *mem_43460,
                                               __global
                                               unsigned char *mem_43577,
                                               __global
                                               unsigned char *mem_43581,
                                               __global
                                               unsigned char *mem_43584,
                                               __global
                                               unsigned char *mem_43587,
                                               __global
                                               unsigned char *mem_43589,
                                               __global
                                               unsigned char *mem_43591,
                                               __global
                                               unsigned char *mem_43594,
                                               __global
                                               unsigned char *group_res_arr_mem_44969,
                                               __global
                                               unsigned char *group_res_arr_mem_44971,
                                               __global
                                               unsigned char *group_res_arr_mem_44973,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44975)
{
    #define segred_group_sizze_33180 (mainDetailedzisegred_group_sizze_33046)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44988_backing_3 =
                          (__local volatile
                           char *) sync_arr_mem_44988_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44986_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_44986_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_44984_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44984_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_44982_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44982_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44977;
    int32_t local_tid_44978;
    int64_t group_sizze_44981;
    int32_t wave_sizze_44980;
    int32_t group_tid_44979;
    
    global_tid_44977 = get_global_id(0);
    local_tid_44978 = get_local_id(0);
    group_sizze_44981 = get_local_size(0);
    wave_sizze_44980 = LOCKSTEP_WIDTH;
    group_tid_44979 = get_group_id(0);
    
    int32_t phys_tid_33052;
    
    phys_tid_33052 = global_tid_44977;
    
    __local char *red_arr_mem_44982;
    
    red_arr_mem_44982 = (__local char *) red_arr_mem_44982_backing_0;
    
    __local char *red_arr_mem_44984;
    
    red_arr_mem_44984 = (__local char *) red_arr_mem_44984_backing_1;
    
    __local char *red_arr_mem_44986;
    
    red_arr_mem_44986 = (__local char *) red_arr_mem_44986_backing_2;
    
    __local char *sync_arr_mem_44988;
    
    sync_arr_mem_44988 = (__local char *) sync_arr_mem_44988_backing_3;
    
    int32_t phys_group_id_44990;
    
    phys_group_id_44990 = get_group_id(0);
    for (int32_t i_44991 = 0; i_44991 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44966) - phys_group_id_44990,
                   sext_i64_i32(num_groups_33181)); i_44991++) {
        int32_t virt_group_id_44992 = phys_group_id_44990 + i_44991 *
                sext_i64_i32(num_groups_33181);
        int32_t flat_segment_id_44993 = squot32(virt_group_id_44992,
                                                sext_i64_i32(groups_per_segment_44964));
        int64_t global_tid_44994 = srem64(sext_i32_i64(virt_group_id_44992) *
                                          segred_group_sizze_33180 +
                                          sext_i32_i64(local_tid_44978),
                                          segred_group_sizze_33180 *
                                          groups_per_segment_44964);
        int64_t gtid_33043 = sext_i32_i64(flat_segment_id_44993);
        int64_t gtid_33051;
        bool x_acc_44995;
        int32_t x_acc_44996;
        float x_acc_44997;
        int64_t chunk_sizze_44998;
        int64_t starting_point_44999;
        
        starting_point_44999 = sext_i32_i64(sext_i64_i32(global_tid_44994)) *
            elements_per_thread_44965;
        
        int64_t remaining_elements_45000;
        
        remaining_elements_45000 = iota32_arg_27787 - starting_point_44999;
        if (sle64(remaining_elements_45000, (int64_t) 0) ||
            sle64(iota32_arg_27787, starting_point_44999)) {
            chunk_sizze_44998 = (int64_t) 0;
        } else {
            if (slt64(iota32_arg_27787,
                      (sext_i32_i64(sext_i64_i32(global_tid_44994)) +
                       (int64_t) 1) * elements_per_thread_44965)) {
                chunk_sizze_44998 = iota32_arg_27787 -
                    sext_i32_i64(sext_i64_i32(global_tid_44994)) *
                    elements_per_thread_44965;
            } else {
                chunk_sizze_44998 = elements_per_thread_44965;
            }
        }
        
        bool x_33187;
        int32_t x_33188;
        float x_33189;
        bool x_33190;
        int32_t x_33191;
        float x_33192;
        
        // neutral-initialise the accumulators
        {
            x_acc_44995 = 0;
            x_acc_44996 = -1;
            x_acc_44997 = 0.0F;
        }
        for (int64_t i_45015 = 0; i_45015 < elements_per_thread_44965;
             i_45015++) {
            gtid_33051 = sext_i32_i64(local_tid_44978) +
                (sext_i32_i64(squot32(sext_i64_i32(global_tid_44994),
                                      sext_i64_i32(segred_group_sizze_33180))) *
                 elements_per_thread_44965 + i_45015) *
                segred_group_sizze_33180;
            if (slt64(gtid_33051, iota32_arg_27787)) {
                // apply map function
                {
                    int32_t y_33201 = ((__global
                                        int32_t *) mem_43577)[gtid_33043];
                    float y_33202 = ((__global float *) mem_43584)[gtid_33043];
                    int64_t binop_x_40658 = iota32_arg_27787 * gtid_33043;
                    int64_t binop_x_40659 = gtid_33051 + binop_x_40658;
                    int64_t new_index_40660 = squot64(binop_x_40659,
                                                      iota32_arg_27815);
                    int64_t binop_y_40666 = iota32_arg_27815 * new_index_40660;
                    int64_t new_index_40667 = binop_x_40659 - binop_y_40666;
                    float x_33204 = ((__global
                                      float *) mem_43581)[new_index_40660 *
                                                          iota32_arg_27815 +
                                                          new_index_40667];
                    float x_33205 = ((__global float *) mem_43460)[gtid_33051];
                    int32_t index_primexp_40624 = sext_i64_i32(gtid_33051);
                    float defunc_0_f_res_33207 = x_33204 / y_33202;
                    bool cond_33208 = slt32(index_primexp_40624, y_33201);
                    bool isnan_res_33209;
                    
                    isnan_res_33209 = futrts_isnan32(defunc_0_f_res_33207);
                    
                    bool cond_t_res_33210 = !isnan_res_33209;
                    bool x_33211 = cond_33208 && cond_t_res_33210;
                    float abs_res_33212 = (float) fabs(defunc_0_f_res_33207);
                    bool defunc_2_f_res_t_res_33213 = x_33205 < abs_res_33212;
                    bool x_33214 = x_33211 && defunc_2_f_res_t_res_33213;
                    float defunc_1_f_res_33215;
                    
                    if (cond_33208) {
                        defunc_1_f_res_33215 = defunc_0_f_res_33207;
                    } else {
                        defunc_1_f_res_33215 = 0.0F;
                    }
                    // save map-out results
                    {
                        ((__global float *) mem_43594)[gtid_33043 *
                                                       iota32_arg_27787 +
                                                       gtid_33051] =
                            defunc_0_f_res_33207;
                    }
                    // load accumulator
                    {
                        x_33187 = x_acc_44995;
                        x_33188 = x_acc_44996;
                        x_33189 = x_acc_44997;
                    }
                    // load new values
                    {
                        x_33190 = x_33214;
                        x_33191 = index_primexp_40624;
                        x_33192 = defunc_1_f_res_33215;
                    }
                    // apply reduction operator
                    {
                        bool defunc_1_op_res_33193;
                        int32_t defunc_1_op_res_33194;
                        
                        if (x_33187) {
                            defunc_1_op_res_33193 = x_33187;
                            defunc_1_op_res_33194 = x_33188;
                        } else {
                            bool x_33195 = x_33190 && x_33190;
                            bool x_33196 = !x_33190;
                            bool y_33197 = x_33187 && x_33196;
                            bool defunc_1_op_res_f_res_33198 = x_33195 ||
                                 y_33197;
                            int32_t defunc_1_op_res_f_res_33199;
                            
                            if (x_33190) {
                                defunc_1_op_res_f_res_33199 = x_33191;
                            } else {
                                defunc_1_op_res_f_res_33199 = x_33188;
                            }
                            defunc_1_op_res_33193 = defunc_1_op_res_f_res_33198;
                            defunc_1_op_res_33194 = defunc_1_op_res_f_res_33199;
                        }
                        
                        float defunc_1_op_res_33200 = x_33189 + x_33192;
                        
                        // store in accumulator
                        {
                            x_acc_44995 = defunc_1_op_res_33193;
                            x_acc_44996 = defunc_1_op_res_33194;
                            x_acc_44997 = defunc_1_op_res_33200;
                        }
                    }
                }
            }
            // to reduce current chunk, first store our result in memory
            {
                x_33187 = x_acc_44995;
                x_33188 = x_acc_44996;
                x_33189 = x_acc_44997;
                ((__local
                  bool *) red_arr_mem_44982)[sext_i32_i64(local_tid_44978)] =
                    x_33187;
                ((__local
                  int32_t *) red_arr_mem_44984)[sext_i32_i64(local_tid_44978)] =
                    x_33188;
                ((__local
                  float *) red_arr_mem_44986)[sext_i32_i64(local_tid_44978)] =
                    x_33189;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t offset_45016;
            int32_t skip_waves_45017;
            
            skip_waves_45017 = 1;
            
            bool x_45001;
            int32_t x_45002;
            float x_45003;
            bool x_45004;
            int32_t x_45005;
            float x_45006;
            
            offset_45016 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_44978,
                          sext_i64_i32(segred_group_sizze_33180))) {
                    x_45001 = ((__local
                                bool *) red_arr_mem_44982)[sext_i32_i64(local_tid_44978 +
                                                           offset_45016)];
                    x_45002 = ((__local
                                int32_t *) red_arr_mem_44984)[sext_i32_i64(local_tid_44978 +
                                                              offset_45016)];
                    x_45003 = ((__local
                                float *) red_arr_mem_44986)[sext_i32_i64(local_tid_44978 +
                                                            offset_45016)];
                }
            }
            offset_45016 = 1;
            while (slt32(offset_45016, wave_sizze_44980)) {
                if (slt32(local_tid_44978 + offset_45016,
                          sext_i64_i32(segred_group_sizze_33180)) &&
                    ((local_tid_44978 - squot32(local_tid_44978,
                                                wave_sizze_44980) *
                      wave_sizze_44980) & (2 * offset_45016 - 1)) == 0) {
                    // read array element
                    {
                        x_45004 = ((volatile __local
                                    bool *) red_arr_mem_44982)[sext_i32_i64(local_tid_44978 +
                                                               offset_45016)];
                        x_45005 = ((volatile __local
                                    int32_t *) red_arr_mem_44984)[sext_i32_i64(local_tid_44978 +
                                                                  offset_45016)];
                        x_45006 = ((volatile __local
                                    float *) red_arr_mem_44986)[sext_i32_i64(local_tid_44978 +
                                                                offset_45016)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_45007;
                        int32_t defunc_1_op_res_45008;
                        
                        if (x_45001) {
                            defunc_1_op_res_45007 = x_45001;
                            defunc_1_op_res_45008 = x_45002;
                        } else {
                            bool x_45009 = x_45004 && x_45004;
                            bool x_45010 = !x_45004;
                            bool y_45011 = x_45001 && x_45010;
                            bool defunc_1_op_res_f_res_45012 = x_45009 ||
                                 y_45011;
                            int32_t defunc_1_op_res_f_res_45013;
                            
                            if (x_45004) {
                                defunc_1_op_res_f_res_45013 = x_45005;
                            } else {
                                defunc_1_op_res_f_res_45013 = x_45002;
                            }
                            defunc_1_op_res_45007 = defunc_1_op_res_f_res_45012;
                            defunc_1_op_res_45008 = defunc_1_op_res_f_res_45013;
                        }
                        
                        float defunc_1_op_res_45014 = x_45003 + x_45006;
                        
                        x_45001 = defunc_1_op_res_45007;
                        x_45002 = defunc_1_op_res_45008;
                        x_45003 = defunc_1_op_res_45014;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          bool *) red_arr_mem_44982)[sext_i32_i64(local_tid_44978)] =
                            x_45001;
                        ((volatile __local
                          int32_t *) red_arr_mem_44984)[sext_i32_i64(local_tid_44978)] =
                            x_45002;
                        ((volatile __local
                          float *) red_arr_mem_44986)[sext_i32_i64(local_tid_44978)] =
                            x_45003;
                    }
                }
                offset_45016 *= 2;
            }
            while (slt32(skip_waves_45017,
                         squot32(sext_i64_i32(segred_group_sizze_33180) +
                                 wave_sizze_44980 - 1, wave_sizze_44980))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_45016 = skip_waves_45017 * wave_sizze_44980;
                if (slt32(local_tid_44978 + offset_45016,
                          sext_i64_i32(segred_group_sizze_33180)) &&
                    ((local_tid_44978 - squot32(local_tid_44978,
                                                wave_sizze_44980) *
                      wave_sizze_44980) == 0 && (squot32(local_tid_44978,
                                                         wave_sizze_44980) &
                                                 (2 * skip_waves_45017 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_45004 = ((__local
                                    bool *) red_arr_mem_44982)[sext_i32_i64(local_tid_44978 +
                                                               offset_45016)];
                        x_45005 = ((__local
                                    int32_t *) red_arr_mem_44984)[sext_i32_i64(local_tid_44978 +
                                                                  offset_45016)];
                        x_45006 = ((__local
                                    float *) red_arr_mem_44986)[sext_i32_i64(local_tid_44978 +
                                                                offset_45016)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_45007;
                        int32_t defunc_1_op_res_45008;
                        
                        if (x_45001) {
                            defunc_1_op_res_45007 = x_45001;
                            defunc_1_op_res_45008 = x_45002;
                        } else {
                            bool x_45009 = x_45004 && x_45004;
                            bool x_45010 = !x_45004;
                            bool y_45011 = x_45001 && x_45010;
                            bool defunc_1_op_res_f_res_45012 = x_45009 ||
                                 y_45011;
                            int32_t defunc_1_op_res_f_res_45013;
                            
                            if (x_45004) {
                                defunc_1_op_res_f_res_45013 = x_45005;
                            } else {
                                defunc_1_op_res_f_res_45013 = x_45002;
                            }
                            defunc_1_op_res_45007 = defunc_1_op_res_f_res_45012;
                            defunc_1_op_res_45008 = defunc_1_op_res_f_res_45013;
                        }
                        
                        float defunc_1_op_res_45014 = x_45003 + x_45006;
                        
                        x_45001 = defunc_1_op_res_45007;
                        x_45002 = defunc_1_op_res_45008;
                        x_45003 = defunc_1_op_res_45014;
                    }
                    // write result of operation
                    {
                        ((__local
                          bool *) red_arr_mem_44982)[sext_i32_i64(local_tid_44978)] =
                            x_45001;
                        ((__local
                          int32_t *) red_arr_mem_44984)[sext_i32_i64(local_tid_44978)] =
                            x_45002;
                        ((__local
                          float *) red_arr_mem_44986)[sext_i32_i64(local_tid_44978)] =
                            x_45003;
                    }
                }
                skip_waves_45017 *= 2;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread saves the result in accumulator
            {
                if (sext_i32_i64(local_tid_44978) == (int64_t) 0) {
                    x_acc_44995 = x_45001;
                    x_acc_44996 = x_45002;
                    x_acc_44997 = x_45003;
                }
            }
            // first thread keeps accumulator; others reset to neutral element
            {
                if (!(sext_i32_i64(local_tid_44978) == (int64_t) 0)) {
                    x_acc_44995 = 0;
                    x_acc_44996 = -1;
                    x_acc_44997 = 0.0F;
                }
            }
        }
        x_33187 = x_acc_44995;
        x_33188 = x_acc_44996;
        x_33189 = x_acc_44997;
        if (groups_per_segment_44964 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44978 == 0) {
                    ((__global bool *) mem_43587)[gtid_33043] = x_acc_44995;
                    ((__global int32_t *) mem_43589)[gtid_33043] = x_acc_44996;
                    ((__global float *) mem_43591)[gtid_33043] = x_acc_44997;
                }
            }
        } else {
            int32_t old_counter_45018;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44978 == 0) {
                    ((__global
                      bool *) group_res_arr_mem_44969)[sext_i32_i64(virt_group_id_44992) *
                                                       segred_group_sizze_33180] =
                        x_acc_44995;
                    ((__global
                      int32_t *) group_res_arr_mem_44971)[sext_i32_i64(virt_group_id_44992) *
                                                          segred_group_sizze_33180] =
                        x_acc_44996;
                    ((__global
                      float *) group_res_arr_mem_44973)[sext_i32_i64(virt_group_id_44992) *
                                                        segred_group_sizze_33180] =
                        x_acc_44997;
                    mem_fence_global();
                    old_counter_45018 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44975)[sext_i32_i64(srem32(flat_segment_id_44993,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44988)[(int64_t) 0] =
                        old_counter_45018 == groups_per_segment_44964 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45019;
            
            is_last_group_45019 = ((__local
                                    bool *) sync_arr_mem_44988)[(int64_t) 0];
            if (is_last_group_45019) {
                if (local_tid_44978 == 0) {
                    old_counter_45018 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44975)[sext_i32_i64(srem32(flat_segment_id_44993,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44964));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45020 =
                            sdiv_up64(groups_per_segment_44964,
                                      segred_group_sizze_33180);
                    
                    x_33187 = 0;
                    x_33188 = -1;
                    x_33189 = 0.0F;
                    for (int64_t i_45021 = 0; i_45021 < read_per_thread_45020;
                         i_45021++) {
                        int64_t group_res_id_45022 =
                                sext_i32_i64(local_tid_44978) *
                                read_per_thread_45020 + i_45021;
                        int64_t index_of_group_res_45023 =
                                sext_i32_i64(flat_segment_id_44993) *
                                groups_per_segment_44964 + group_res_id_45022;
                        
                        if (slt64(group_res_id_45022,
                                  groups_per_segment_44964)) {
                            x_33190 = ((__global
                                        bool *) group_res_arr_mem_44969)[index_of_group_res_45023 *
                                                                         segred_group_sizze_33180];
                            x_33191 = ((__global
                                        int32_t *) group_res_arr_mem_44971)[index_of_group_res_45023 *
                                                                            segred_group_sizze_33180];
                            x_33192 = ((__global
                                        float *) group_res_arr_mem_44973)[index_of_group_res_45023 *
                                                                          segred_group_sizze_33180];
                            
                            bool defunc_1_op_res_33193;
                            int32_t defunc_1_op_res_33194;
                            
                            if (x_33187) {
                                defunc_1_op_res_33193 = x_33187;
                                defunc_1_op_res_33194 = x_33188;
                            } else {
                                bool x_33195 = x_33190 && x_33190;
                                bool x_33196 = !x_33190;
                                bool y_33197 = x_33187 && x_33196;
                                bool defunc_1_op_res_f_res_33198 = x_33195 ||
                                     y_33197;
                                int32_t defunc_1_op_res_f_res_33199;
                                
                                if (x_33190) {
                                    defunc_1_op_res_f_res_33199 = x_33191;
                                } else {
                                    defunc_1_op_res_f_res_33199 = x_33188;
                                }
                                defunc_1_op_res_33193 =
                                    defunc_1_op_res_f_res_33198;
                                defunc_1_op_res_33194 =
                                    defunc_1_op_res_f_res_33199;
                            }
                            
                            float defunc_1_op_res_33200 = x_33189 + x_33192;
                            
                            x_33187 = defunc_1_op_res_33193;
                            x_33188 = defunc_1_op_res_33194;
                            x_33189 = defunc_1_op_res_33200;
                        }
                    }
                }
                ((__local
                  bool *) red_arr_mem_44982)[sext_i32_i64(local_tid_44978)] =
                    x_33187;
                ((__local
                  int32_t *) red_arr_mem_44984)[sext_i32_i64(local_tid_44978)] =
                    x_33188;
                ((__local
                  float *) red_arr_mem_44986)[sext_i32_i64(local_tid_44978)] =
                    x_33189;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45024;
                    int32_t skip_waves_45025;
                    
                    skip_waves_45025 = 1;
                    
                    bool x_45001;
                    int32_t x_45002;
                    float x_45003;
                    bool x_45004;
                    int32_t x_45005;
                    float x_45006;
                    
                    offset_45024 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44978,
                                  sext_i64_i32(segred_group_sizze_33180))) {
                            x_45001 = ((__local
                                        bool *) red_arr_mem_44982)[sext_i32_i64(local_tid_44978 +
                                                                   offset_45024)];
                            x_45002 = ((__local
                                        int32_t *) red_arr_mem_44984)[sext_i32_i64(local_tid_44978 +
                                                                      offset_45024)];
                            x_45003 = ((__local
                                        float *) red_arr_mem_44986)[sext_i32_i64(local_tid_44978 +
                                                                    offset_45024)];
                        }
                    }
                    offset_45024 = 1;
                    while (slt32(offset_45024, wave_sizze_44980)) {
                        if (slt32(local_tid_44978 + offset_45024,
                                  sext_i64_i32(segred_group_sizze_33180)) &&
                            ((local_tid_44978 - squot32(local_tid_44978,
                                                        wave_sizze_44980) *
                              wave_sizze_44980) & (2 * offset_45024 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45004 = ((volatile __local
                                            bool *) red_arr_mem_44982)[sext_i32_i64(local_tid_44978 +
                                                                       offset_45024)];
                                x_45005 = ((volatile __local
                                            int32_t *) red_arr_mem_44984)[sext_i32_i64(local_tid_44978 +
                                                                          offset_45024)];
                                x_45006 = ((volatile __local
                                            float *) red_arr_mem_44986)[sext_i32_i64(local_tid_44978 +
                                                                        offset_45024)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_45007;
                                int32_t defunc_1_op_res_45008;
                                
                                if (x_45001) {
                                    defunc_1_op_res_45007 = x_45001;
                                    defunc_1_op_res_45008 = x_45002;
                                } else {
                                    bool x_45009 = x_45004 && x_45004;
                                    bool x_45010 = !x_45004;
                                    bool y_45011 = x_45001 && x_45010;
                                    bool defunc_1_op_res_f_res_45012 =
                                         x_45009 || y_45011;
                                    int32_t defunc_1_op_res_f_res_45013;
                                    
                                    if (x_45004) {
                                        defunc_1_op_res_f_res_45013 = x_45005;
                                    } else {
                                        defunc_1_op_res_f_res_45013 = x_45002;
                                    }
                                    defunc_1_op_res_45007 =
                                        defunc_1_op_res_f_res_45012;
                                    defunc_1_op_res_45008 =
                                        defunc_1_op_res_f_res_45013;
                                }
                                
                                float defunc_1_op_res_45014 = x_45003 + x_45006;
                                
                                x_45001 = defunc_1_op_res_45007;
                                x_45002 = defunc_1_op_res_45008;
                                x_45003 = defunc_1_op_res_45014;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_44982)[sext_i32_i64(local_tid_44978)] =
                                    x_45001;
                                ((volatile __local
                                  int32_t *) red_arr_mem_44984)[sext_i32_i64(local_tid_44978)] =
                                    x_45002;
                                ((volatile __local
                                  float *) red_arr_mem_44986)[sext_i32_i64(local_tid_44978)] =
                                    x_45003;
                            }
                        }
                        offset_45024 *= 2;
                    }
                    while (slt32(skip_waves_45025,
                                 squot32(sext_i64_i32(segred_group_sizze_33180) +
                                         wave_sizze_44980 - 1,
                                         wave_sizze_44980))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45024 = skip_waves_45025 * wave_sizze_44980;
                        if (slt32(local_tid_44978 + offset_45024,
                                  sext_i64_i32(segred_group_sizze_33180)) &&
                            ((local_tid_44978 - squot32(local_tid_44978,
                                                        wave_sizze_44980) *
                              wave_sizze_44980) == 0 &&
                             (squot32(local_tid_44978, wave_sizze_44980) & (2 *
                                                                            skip_waves_45025 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45004 = ((__local
                                            bool *) red_arr_mem_44982)[sext_i32_i64(local_tid_44978 +
                                                                       offset_45024)];
                                x_45005 = ((__local
                                            int32_t *) red_arr_mem_44984)[sext_i32_i64(local_tid_44978 +
                                                                          offset_45024)];
                                x_45006 = ((__local
                                            float *) red_arr_mem_44986)[sext_i32_i64(local_tid_44978 +
                                                                        offset_45024)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_45007;
                                int32_t defunc_1_op_res_45008;
                                
                                if (x_45001) {
                                    defunc_1_op_res_45007 = x_45001;
                                    defunc_1_op_res_45008 = x_45002;
                                } else {
                                    bool x_45009 = x_45004 && x_45004;
                                    bool x_45010 = !x_45004;
                                    bool y_45011 = x_45001 && x_45010;
                                    bool defunc_1_op_res_f_res_45012 =
                                         x_45009 || y_45011;
                                    int32_t defunc_1_op_res_f_res_45013;
                                    
                                    if (x_45004) {
                                        defunc_1_op_res_f_res_45013 = x_45005;
                                    } else {
                                        defunc_1_op_res_f_res_45013 = x_45002;
                                    }
                                    defunc_1_op_res_45007 =
                                        defunc_1_op_res_f_res_45012;
                                    defunc_1_op_res_45008 =
                                        defunc_1_op_res_f_res_45013;
                                }
                                
                                float defunc_1_op_res_45014 = x_45003 + x_45006;
                                
                                x_45001 = defunc_1_op_res_45007;
                                x_45002 = defunc_1_op_res_45008;
                                x_45003 = defunc_1_op_res_45014;
                            }
                            // write result of operation
                            {
                                ((__local
                                  bool *) red_arr_mem_44982)[sext_i32_i64(local_tid_44978)] =
                                    x_45001;
                                ((__local
                                  int32_t *) red_arr_mem_44984)[sext_i32_i64(local_tid_44978)] =
                                    x_45002;
                                ((__local
                                  float *) red_arr_mem_44986)[sext_i32_i64(local_tid_44978)] =
                                    x_45003;
                            }
                        }
                        skip_waves_45025 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44978 == 0) {
                            ((__global bool *) mem_43587)[gtid_33043] = x_45001;
                            ((__global int32_t *) mem_43589)[gtid_33043] =
                                x_45002;
                            ((__global float *) mem_43591)[gtid_33043] =
                                x_45003;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33180
}
__kernel void mainDetailedzisegred_nonseg_31865(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44695_backing_aligned_0,
                                                __local volatile
                                                int64_t *sync_arr_mem_44693_backing_aligned_1,
                                                int64_t m_27392,
                                                int64_t num_groups_31860,
                                                int64_t num_threads_44687,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43422,
                                                __global
                                                unsigned char *mem_43427,
                                                __global
                                                unsigned char *mainDetailedzicounter_mem_44683,
                                                __global
                                                unsigned char *group_res_arr_mem_44685)
{
    #define segred_group_sizze_31858 (mainDetailedzisegred_group_sizze_31857)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44695_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44695_backing_aligned_0;
    __local volatile char *restrict sync_arr_mem_44693_backing_0 =
                          (__local volatile
                           char *) sync_arr_mem_44693_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44688;
    int32_t local_tid_44689;
    int64_t group_sizze_44692;
    int32_t wave_sizze_44691;
    int32_t group_tid_44690;
    
    global_tid_44688 = get_global_id(0);
    local_tid_44689 = get_local_id(0);
    group_sizze_44692 = get_local_size(0);
    wave_sizze_44691 = LOCKSTEP_WIDTH;
    group_tid_44690 = get_group_id(0);
    
    int32_t phys_tid_31865;
    
    phys_tid_31865 = global_tid_44688;
    
    __local char *sync_arr_mem_44693;
    
    sync_arr_mem_44693 = (__local char *) sync_arr_mem_44693_backing_0;
    
    __local char *red_arr_mem_44695;
    
    red_arr_mem_44695 = (__local char *) red_arr_mem_44695_backing_1;
    
    int64_t dummy_31863;
    
    dummy_31863 = (int64_t) 0;
    
    int64_t gtid_31864;
    
    gtid_31864 = (int64_t) 0;
    
    int32_t x_acc_44697;
    int64_t chunk_sizze_44698;
    
    chunk_sizze_44698 = smin64(sdiv_up64(m_27392,
                                         sext_i32_i64(sext_i64_i32(segred_group_sizze_31858 *
                                         num_groups_31860))),
                               sdiv_up64(m_27392 - sext_i32_i64(phys_tid_31865),
                                         num_threads_44687));
    
    int32_t x_27758;
    int32_t x_27759;
    
    // neutral-initialise the accumulators
    {
        x_acc_44697 = 0;
    }
    for (int64_t i_44702 = 0; i_44702 < chunk_sizze_44698; i_44702++) {
        gtid_31864 = sext_i32_i64(phys_tid_31865) + num_threads_44687 * i_44702;
        // apply map function
        {
            int32_t x_27761 = ((__global
                                int32_t *) defunc_3_map_res_mem_43422)[gtid_31864];
            
            // save map-out results
            { }
            // load accumulator
            {
                x_27758 = x_acc_44697;
            }
            // load new values
            {
                x_27759 = x_27761;
            }
            // apply reduction operator
            {
                int32_t defunc_1_op_res_27760 = smax32(x_27758, x_27759);
                
                // store in accumulator
                {
                    x_acc_44697 = defunc_1_op_res_27760;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_27758 = x_acc_44697;
        ((__local int32_t *) red_arr_mem_44695)[sext_i32_i64(local_tid_44689)] =
            x_27758;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44703;
    int32_t skip_waves_44704;
    
    skip_waves_44704 = 1;
    
    int32_t x_44699;
    int32_t x_44700;
    
    offset_44703 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44689, sext_i64_i32(segred_group_sizze_31858))) {
            x_44699 = ((__local
                        int32_t *) red_arr_mem_44695)[sext_i32_i64(local_tid_44689 +
                                                      offset_44703)];
        }
    }
    offset_44703 = 1;
    while (slt32(offset_44703, wave_sizze_44691)) {
        if (slt32(local_tid_44689 + offset_44703,
                  sext_i64_i32(segred_group_sizze_31858)) && ((local_tid_44689 -
                                                               squot32(local_tid_44689,
                                                                       wave_sizze_44691) *
                                                               wave_sizze_44691) &
                                                              (2 *
                                                               offset_44703 -
                                                               1)) == 0) {
            // read array element
            {
                x_44700 = ((volatile __local
                            int32_t *) red_arr_mem_44695)[sext_i32_i64(local_tid_44689 +
                                                          offset_44703)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_44701 = smax32(x_44699, x_44700);
                
                x_44699 = defunc_1_op_res_44701;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_44695)[sext_i32_i64(local_tid_44689)] =
                    x_44699;
            }
        }
        offset_44703 *= 2;
    }
    while (slt32(skip_waves_44704,
                 squot32(sext_i64_i32(segred_group_sizze_31858) +
                         wave_sizze_44691 - 1, wave_sizze_44691))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44703 = skip_waves_44704 * wave_sizze_44691;
        if (slt32(local_tid_44689 + offset_44703,
                  sext_i64_i32(segred_group_sizze_31858)) && ((local_tid_44689 -
                                                               squot32(local_tid_44689,
                                                                       wave_sizze_44691) *
                                                               wave_sizze_44691) ==
                                                              0 &&
                                                              (squot32(local_tid_44689,
                                                                       wave_sizze_44691) &
                                                               (2 *
                                                                skip_waves_44704 -
                                                                1)) == 0)) {
            // read array element
            {
                x_44700 = ((__local
                            int32_t *) red_arr_mem_44695)[sext_i32_i64(local_tid_44689 +
                                                          offset_44703)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_44701 = smax32(x_44699, x_44700);
                
                x_44699 = defunc_1_op_res_44701;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_44695)[sext_i32_i64(local_tid_44689)] =
                    x_44699;
            }
        }
        skip_waves_44704 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_44689) == (int64_t) 0) {
            x_acc_44697 = x_44699;
        }
    }
    
    int32_t old_counter_44705;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_44689 == 0) {
            ((__global
              int32_t *) group_res_arr_mem_44685)[sext_i32_i64(group_tid_44690) *
                                                  segred_group_sizze_31858] =
                x_acc_44697;
            mem_fence_global();
            old_counter_44705 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainDetailedzicounter_mem_44683)[(int64_t) 0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_44693)[(int64_t) 0] =
                old_counter_44705 == num_groups_31860 - (int64_t) 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_44706;
    
    is_last_group_44706 = ((__local bool *) sync_arr_mem_44693)[(int64_t) 0];
    if (is_last_group_44706) {
        if (local_tid_44689 == 0) {
            old_counter_44705 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainDetailedzicounter_mem_44683)[(int64_t) 0],
                                                      (int) ((int64_t) 0 -
                                                             num_groups_31860));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_44707 = sdiv_up64(num_groups_31860,
                                                      segred_group_sizze_31858);
            
            x_27758 = 0;
            for (int64_t i_44708 = 0; i_44708 < read_per_thread_44707;
                 i_44708++) {
                int64_t group_res_id_44709 = sext_i32_i64(local_tid_44689) *
                        read_per_thread_44707 + i_44708;
                int64_t index_of_group_res_44710 = group_res_id_44709;
                
                if (slt64(group_res_id_44709, num_groups_31860)) {
                    x_27759 = ((__global
                                int32_t *) group_res_arr_mem_44685)[index_of_group_res_44710 *
                                                                    segred_group_sizze_31858];
                    
                    int32_t defunc_1_op_res_27760;
                    
                    defunc_1_op_res_27760 = smax32(x_27758, x_27759);
                    x_27758 = defunc_1_op_res_27760;
                }
            }
        }
        ((__local int32_t *) red_arr_mem_44695)[sext_i32_i64(local_tid_44689)] =
            x_27758;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_44711;
            int32_t skip_waves_44712;
            
            skip_waves_44712 = 1;
            
            int32_t x_44699;
            int32_t x_44700;
            
            offset_44711 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_44689,
                          sext_i64_i32(segred_group_sizze_31858))) {
                    x_44699 = ((__local
                                int32_t *) red_arr_mem_44695)[sext_i32_i64(local_tid_44689 +
                                                              offset_44711)];
                }
            }
            offset_44711 = 1;
            while (slt32(offset_44711, wave_sizze_44691)) {
                if (slt32(local_tid_44689 + offset_44711,
                          sext_i64_i32(segred_group_sizze_31858)) &&
                    ((local_tid_44689 - squot32(local_tid_44689,
                                                wave_sizze_44691) *
                      wave_sizze_44691) & (2 * offset_44711 - 1)) == 0) {
                    // read array element
                    {
                        x_44700 = ((volatile __local
                                    int32_t *) red_arr_mem_44695)[sext_i32_i64(local_tid_44689 +
                                                                  offset_44711)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_44701 = smax32(x_44699,
                                                               x_44700);
                        
                        x_44699 = defunc_1_op_res_44701;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          int32_t *) red_arr_mem_44695)[sext_i32_i64(local_tid_44689)] =
                            x_44699;
                    }
                }
                offset_44711 *= 2;
            }
            while (slt32(skip_waves_44712,
                         squot32(sext_i64_i32(segred_group_sizze_31858) +
                                 wave_sizze_44691 - 1, wave_sizze_44691))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_44711 = skip_waves_44712 * wave_sizze_44691;
                if (slt32(local_tid_44689 + offset_44711,
                          sext_i64_i32(segred_group_sizze_31858)) &&
                    ((local_tid_44689 - squot32(local_tid_44689,
                                                wave_sizze_44691) *
                      wave_sizze_44691) == 0 && (squot32(local_tid_44689,
                                                         wave_sizze_44691) &
                                                 (2 * skip_waves_44712 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_44700 = ((__local
                                    int32_t *) red_arr_mem_44695)[sext_i32_i64(local_tid_44689 +
                                                                  offset_44711)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_44701 = smax32(x_44699,
                                                               x_44700);
                        
                        x_44699 = defunc_1_op_res_44701;
                    }
                    // write result of operation
                    {
                        ((__local
                          int32_t *) red_arr_mem_44695)[sext_i32_i64(local_tid_44689)] =
                            x_44699;
                    }
                }
                skip_waves_44712 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_44689 == 0) {
                    ((__global int32_t *) mem_43427)[(int64_t) 0] = x_44699;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31858
}
__kernel void mainDetailedzisegred_small_29895(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_43953_backing_aligned_0,
                                               int64_t N_27391, int64_t m_27392,
                                               int64_t i32_res_27401,
                                               int64_t i32_res_27407,
                                               int64_t num_groups_30034,
                                               int64_t segment_sizze_nonzzero_43946,
                                               __global
                                               unsigned char *images_mem_42559,
                                               __global
                                               unsigned char *binop_p_mem_42568,
                                               __global
                                               unsigned char *mem_42709,
                                               __global
                                               unsigned char *mem_42714)
{
    #define segred_group_sizze_30033 (mainDetailedzisegred_group_sizze_29889)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_43953_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_43953_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43948;
    int32_t local_tid_43949;
    int64_t group_sizze_43952;
    int32_t wave_sizze_43951;
    int32_t group_tid_43950;
    
    global_tid_43948 = get_global_id(0);
    local_tid_43949 = get_local_id(0);
    group_sizze_43952 = get_local_size(0);
    wave_sizze_43951 = LOCKSTEP_WIDTH;
    group_tid_43950 = get_group_id(0);
    
    int32_t phys_tid_29895;
    
    phys_tid_29895 = global_tid_43948;
    
    __local char *red_arr_mem_43953;
    
    red_arr_mem_43953 = (__local char *) red_arr_mem_43953_backing_0;
    
    int32_t phys_group_id_43955;
    
    phys_group_id_43955 = get_group_id(0);
    for (int32_t i_43956 = 0; i_43956 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27392 * i32_res_27407 *
                                          i32_res_27407,
                                          squot64(segred_group_sizze_30033,
                                                  segment_sizze_nonzzero_43946))) -
                   phys_group_id_43955, sext_i64_i32(num_groups_30034));
         i_43956++) {
        int32_t virt_group_id_43957 = phys_group_id_43955 + i_43956 *
                sext_i64_i32(num_groups_30034);
        int64_t gtid_29882 = squot64(squot64(sext_i32_i64(local_tid_43949),
                                             segment_sizze_nonzzero_43946) +
                                     sext_i32_i64(virt_group_id_43957) *
                                     squot64(segred_group_sizze_30033,
                                             segment_sizze_nonzzero_43946),
                                     i32_res_27407 * i32_res_27407);
        int64_t gtid_29883 = squot64(squot64(sext_i32_i64(local_tid_43949),
                                             segment_sizze_nonzzero_43946) +
                                     sext_i32_i64(virt_group_id_43957) *
                                     squot64(segred_group_sizze_30033,
                                             segment_sizze_nonzzero_43946) -
                                     squot64(squot64(sext_i32_i64(local_tid_43949),
                                                     segment_sizze_nonzzero_43946) +
                                             sext_i32_i64(virt_group_id_43957) *
                                             squot64(segred_group_sizze_30033,
                                                     segment_sizze_nonzzero_43946),
                                             i32_res_27407 * i32_res_27407) *
                                     (i32_res_27407 * i32_res_27407),
                                     i32_res_27407);
        int64_t gtid_29884 = squot64(sext_i32_i64(local_tid_43949),
                                     segment_sizze_nonzzero_43946) +
                sext_i32_i64(virt_group_id_43957) *
                squot64(segred_group_sizze_30033,
                        segment_sizze_nonzzero_43946) -
                squot64(squot64(sext_i32_i64(local_tid_43949),
                                segment_sizze_nonzzero_43946) +
                        sext_i32_i64(virt_group_id_43957) *
                        squot64(segred_group_sizze_30033,
                                segment_sizze_nonzzero_43946), i32_res_27407 *
                        i32_res_27407) * (i32_res_27407 * i32_res_27407) -
                squot64(squot64(sext_i32_i64(local_tid_43949),
                                segment_sizze_nonzzero_43946) +
                        sext_i32_i64(virt_group_id_43957) *
                        squot64(segred_group_sizze_30033,
                                segment_sizze_nonzzero_43946) -
                        squot64(squot64(sext_i32_i64(local_tid_43949),
                                        segment_sizze_nonzzero_43946) +
                                sext_i32_i64(virt_group_id_43957) *
                                squot64(segred_group_sizze_30033,
                                        segment_sizze_nonzzero_43946),
                                i32_res_27407 * i32_res_27407) *
                        (i32_res_27407 * i32_res_27407), i32_res_27407) *
                i32_res_27407;
        int64_t gtid_29894 = srem64(sext_i32_i64(local_tid_43949),
                                    i32_res_27401);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27401) && (((slt64(gtid_29882,
                                                              m_27392) &&
                                                        slt64(gtid_29883,
                                                              i32_res_27407)) &&
                                                       slt64(gtid_29884,
                                                             i32_res_27407)) &&
                                                      slt64(sext_i32_i64(local_tid_43949),
                                                            i32_res_27401 *
                                                            squot64(segred_group_sizze_30033,
                                                                    segment_sizze_nonzzero_43946)))) {
                float x_30043 = ((__global
                                  float *) images_mem_42559)[gtid_29882 *
                                                             N_27391 +
                                                             gtid_29894];
                float x_30044 = ((__global
                                  float *) binop_p_mem_42568)[gtid_29883 *
                                                              N_27391 +
                                                              gtid_29894];
                float x_30045 = ((__global float *) mem_42709)[gtid_29884 *
                                                               N_27391 +
                                                               gtid_29894];
                float x_30046 = x_30044 * x_30045;
                bool isnan_res_30047;
                
                isnan_res_30047 = futrts_isnan32(x_30043);
                
                float y_30048;
                
                if (isnan_res_30047) {
                    y_30048 = 0.0F;
                } else {
                    y_30048 = 1.0F;
                }
                
                float defunc_2_f_res_30049 = x_30046 * y_30048;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_43953)[sext_i32_i64(local_tid_43949)] =
                        defunc_2_f_res_30049;
                }
            } else {
                ((__local
                  float *) red_arr_mem_43953)[sext_i32_i64(local_tid_43949)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27401)) {
            // perform segmented scan to imitate reduction
            {
                float x_30037;
                float x_30038;
                float x_43958;
                float x_43959;
                bool ltid_in_bounds_43961;
                
                ltid_in_bounds_43961 = slt64(sext_i32_i64(local_tid_43949),
                                             i32_res_27401 *
                                             squot64(segred_group_sizze_30033,
                                                     segment_sizze_nonzzero_43946));
                
                int32_t skip_threads_43962;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_43961) {
                        x_30038 = ((volatile __local
                                    float *) red_arr_mem_43953)[sext_i32_i64(local_tid_43949)];
                        if ((local_tid_43949 - squot32(local_tid_43949, 32) *
                             32) == 0) {
                            x_30037 = x_30038;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_43962 = 1;
                    while (slt32(skip_threads_43962, 32)) {
                        if (sle32(skip_threads_43962, local_tid_43949 -
                                  squot32(local_tid_43949, 32) * 32) &&
                            ltid_in_bounds_43961) {
                            // read operands
                            {
                                x_30037 = ((volatile __local
                                            float *) red_arr_mem_43953)[sext_i32_i64(local_tid_43949) -
                                                                        sext_i32_i64(skip_threads_43962)];
                            }
                            // perform operation
                            {
                                bool inactive_43963 =
                                     slt64(srem64(sext_i32_i64(local_tid_43949),
                                                  i32_res_27401),
                                           sext_i32_i64(local_tid_43949) -
                                           sext_i32_i64(local_tid_43949 -
                                           skip_threads_43962));
                                
                                if (inactive_43963) {
                                    x_30037 = x_30038;
                                }
                                if (!inactive_43963) {
                                    float defunc_1_op_res_30039 = x_30037 +
                                          x_30038;
                                    
                                    x_30037 = defunc_1_op_res_30039;
                                }
                            }
                        }
                        if (sle32(wave_sizze_43951, skip_threads_43962)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_43962, local_tid_43949 -
                                  squot32(local_tid_43949, 32) * 32) &&
                            ltid_in_bounds_43961) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_43953)[sext_i32_i64(local_tid_43949)] =
                                    x_30037;
                                x_30038 = x_30037;
                            }
                        }
                        if (sle32(wave_sizze_43951, skip_threads_43962)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_43962 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_43949 - squot32(local_tid_43949, 32) * 32) ==
                        31 && ltid_in_bounds_43961) {
                        ((volatile __local
                          float *) red_arr_mem_43953)[sext_i32_i64(squot32(local_tid_43949,
                                                                           32))] =
                            x_30037;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_43964;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_43949, 32) == 0 &&
                            ltid_in_bounds_43961) {
                            x_43959 = ((volatile __local
                                        float *) red_arr_mem_43953)[sext_i32_i64(local_tid_43949)];
                            if ((local_tid_43949 - squot32(local_tid_43949,
                                                           32) * 32) == 0) {
                                x_43958 = x_43959;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_43964 = 1;
                        while (slt32(skip_threads_43964, 32)) {
                            if (sle32(skip_threads_43964, local_tid_43949 -
                                      squot32(local_tid_43949, 32) * 32) &&
                                (squot32(local_tid_43949, 32) == 0 &&
                                 ltid_in_bounds_43961)) {
                                // read operands
                                {
                                    x_43958 = ((volatile __local
                                                float *) red_arr_mem_43953)[sext_i32_i64(local_tid_43949) -
                                                                            sext_i32_i64(skip_threads_43964)];
                                }
                                // perform operation
                                {
                                    bool inactive_43965 =
                                         slt64(srem64(sext_i32_i64(local_tid_43949 *
                                                      32 + 32 - 1),
                                                      i32_res_27401),
                                               sext_i32_i64(local_tid_43949 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_43949 -
                                                             skip_threads_43964) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_43965) {
                                        x_43958 = x_43959;
                                    }
                                    if (!inactive_43965) {
                                        float defunc_1_op_res_43960 = x_43958 +
                                              x_43959;
                                        
                                        x_43958 = defunc_1_op_res_43960;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_43951, skip_threads_43964)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_43964, local_tid_43949 -
                                      squot32(local_tid_43949, 32) * 32) &&
                                (squot32(local_tid_43949, 32) == 0 &&
                                 ltid_in_bounds_43961)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_43953)[sext_i32_i64(local_tid_43949)] =
                                        x_43958;
                                    x_43959 = x_43958;
                                }
                            }
                            if (sle32(wave_sizze_43951, skip_threads_43964)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_43964 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_43949, 32) == 0 ||
                          !ltid_in_bounds_43961)) {
                        // read operands
                        {
                            x_30038 = x_30037;
                            x_30037 = ((__local
                                        float *) red_arr_mem_43953)[sext_i32_i64(squot32(local_tid_43949,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_43966 =
                                 slt64(srem64(sext_i32_i64(local_tid_43949),
                                              i32_res_27401),
                                       sext_i32_i64(local_tid_43949) -
                                       sext_i32_i64(squot32(local_tid_43949,
                                                            32) * 32 - 1));
                            
                            if (inactive_43966) {
                                x_30037 = x_30038;
                            }
                            if (!inactive_43966) {
                                float defunc_1_op_res_30039 = x_30037 + x_30038;
                                
                                x_30037 = defunc_1_op_res_30039;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_43953)[sext_i32_i64(local_tid_43949)] =
                                x_30037;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_43949, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_43953)[sext_i32_i64(local_tid_43949)] =
                            x_30038;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_43957) *
                      squot64(segred_group_sizze_30033,
                              segment_sizze_nonzzero_43946) +
                      sext_i32_i64(local_tid_43949), m_27392 * i32_res_27407 *
                      i32_res_27407) && slt64(sext_i32_i64(local_tid_43949),
                                              squot64(segred_group_sizze_30033,
                                                      segment_sizze_nonzzero_43946))) {
                ((__global
                  float *) mem_42714)[squot64(sext_i32_i64(virt_group_id_43957) *
                                              squot64(segred_group_sizze_30033,
                                                      segment_sizze_nonzzero_43946) +
                                              sext_i32_i64(local_tid_43949),
                                              i32_res_27407 * i32_res_27407) *
                                      (i32_res_27407 * i32_res_27407) +
                                      squot64(sext_i32_i64(virt_group_id_43957) *
                                              squot64(segred_group_sizze_30033,
                                                      segment_sizze_nonzzero_43946) +
                                              sext_i32_i64(local_tid_43949) -
                                              squot64(sext_i32_i64(virt_group_id_43957) *
                                                      squot64(segred_group_sizze_30033,
                                                              segment_sizze_nonzzero_43946) +
                                                      sext_i32_i64(local_tid_43949),
                                                      i32_res_27407 *
                                                      i32_res_27407) *
                                              (i32_res_27407 * i32_res_27407),
                                              i32_res_27407) * i32_res_27407 +
                                      (sext_i32_i64(virt_group_id_43957) *
                                       squot64(segred_group_sizze_30033,
                                               segment_sizze_nonzzero_43946) +
                                       sext_i32_i64(local_tid_43949) -
                                       squot64(sext_i32_i64(virt_group_id_43957) *
                                               squot64(segred_group_sizze_30033,
                                                       segment_sizze_nonzzero_43946) +
                                               sext_i32_i64(local_tid_43949),
                                               i32_res_27407 * i32_res_27407) *
                                       (i32_res_27407 * i32_res_27407) -
                                       squot64(sext_i32_i64(virt_group_id_43957) *
                                               squot64(segred_group_sizze_30033,
                                                       segment_sizze_nonzzero_43946) +
                                               sext_i32_i64(local_tid_43949) -
                                               squot64(sext_i32_i64(virt_group_id_43957) *
                                                       squot64(segred_group_sizze_30033,
                                                               segment_sizze_nonzzero_43946) +
                                                       sext_i32_i64(local_tid_43949),
                                                       i32_res_27407 *
                                                       i32_res_27407) *
                                               (i32_res_27407 * i32_res_27407),
                                               i32_res_27407) *
                                       i32_res_27407)] = ((__local
                                                           float *) red_arr_mem_43953)[(sext_i32_i64(local_tid_43949) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_43946 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_30033
}
__kernel void mainDetailedzisegred_small_30942(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44150_backing_aligned_0,
                                               int64_t N_27391, int64_t m_27392,
                                               int64_t i32_res_27401,
                                               int64_t i32_res_27407,
                                               int64_t num_groups_30995,
                                               int64_t segment_sizze_nonzzero_44143,
                                               __global
                                               unsigned char *images_mem_42559,
                                               __global
                                               unsigned char *binop_p_mem_42568,
                                               __global
                                               unsigned char *mem_43022)
{
    #define segred_group_sizze_30994 (mainDetailedzisegred_group_sizze_30936)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44150_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44150_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44145;
    int32_t local_tid_44146;
    int64_t group_sizze_44149;
    int32_t wave_sizze_44148;
    int32_t group_tid_44147;
    
    global_tid_44145 = get_global_id(0);
    local_tid_44146 = get_local_id(0);
    group_sizze_44149 = get_local_size(0);
    wave_sizze_44148 = LOCKSTEP_WIDTH;
    group_tid_44147 = get_group_id(0);
    
    int32_t phys_tid_30942;
    
    phys_tid_30942 = global_tid_44145;
    
    __local char *red_arr_mem_44150;
    
    red_arr_mem_44150 = (__local char *) red_arr_mem_44150_backing_0;
    
    int32_t phys_group_id_44152;
    
    phys_group_id_44152 = get_group_id(0);
    for (int32_t i_44153 = 0; i_44153 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27392 * i32_res_27407,
                                          squot64(segred_group_sizze_30994,
                                                  segment_sizze_nonzzero_44143))) -
                   phys_group_id_44152, sext_i64_i32(num_groups_30995));
         i_44153++) {
        int32_t virt_group_id_44154 = phys_group_id_44152 + i_44153 *
                sext_i64_i32(num_groups_30995);
        int64_t gtid_30931 = squot64(squot64(sext_i32_i64(local_tid_44146),
                                             segment_sizze_nonzzero_44143) +
                                     sext_i32_i64(virt_group_id_44154) *
                                     squot64(segred_group_sizze_30994,
                                             segment_sizze_nonzzero_44143),
                                     i32_res_27407);
        int64_t gtid_30932 = squot64(sext_i32_i64(local_tid_44146),
                                     segment_sizze_nonzzero_44143) +
                sext_i32_i64(virt_group_id_44154) *
                squot64(segred_group_sizze_30994,
                        segment_sizze_nonzzero_44143) -
                squot64(squot64(sext_i32_i64(local_tid_44146),
                                segment_sizze_nonzzero_44143) +
                        sext_i32_i64(virt_group_id_44154) *
                        squot64(segred_group_sizze_30994,
                                segment_sizze_nonzzero_44143), i32_res_27407) *
                i32_res_27407;
        int64_t gtid_30941 = srem64(sext_i32_i64(local_tid_44146),
                                    i32_res_27401);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27401) && ((slt64(gtid_30931,
                                                             m_27392) &&
                                                       slt64(gtid_30932,
                                                             i32_res_27407)) &&
                                                      slt64(sext_i32_i64(local_tid_44146),
                                                            i32_res_27401 *
                                                            squot64(segred_group_sizze_30994,
                                                                    segment_sizze_nonzzero_44143)))) {
                float x_31004 = ((__global
                                  float *) images_mem_42559)[gtid_30931 *
                                                             N_27391 +
                                                             gtid_30941];
                bool isnan_res_31005;
                
                isnan_res_31005 = futrts_isnan32(x_31004);
                
                float defunc_1_f_res_31006;
                
                if (isnan_res_31005) {
                    defunc_1_f_res_31006 = 0.0F;
                } else {
                    float x_31003 = ((__global
                                      float *) binop_p_mem_42568)[gtid_30932 *
                                                                  N_27391 +
                                                                  gtid_30941];
                    float defunc_1_f_res_f_res_31007 = x_31003 * x_31004;
                    
                    defunc_1_f_res_31006 = defunc_1_f_res_f_res_31007;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44150)[sext_i32_i64(local_tid_44146)] =
                        defunc_1_f_res_31006;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44150)[sext_i32_i64(local_tid_44146)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27401)) {
            // perform segmented scan to imitate reduction
            {
                float x_30998;
                float x_30999;
                float x_44155;
                float x_44156;
                bool ltid_in_bounds_44158;
                
                ltid_in_bounds_44158 = slt64(sext_i32_i64(local_tid_44146),
                                             i32_res_27401 *
                                             squot64(segred_group_sizze_30994,
                                                     segment_sizze_nonzzero_44143));
                
                int32_t skip_threads_44159;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44158) {
                        x_30999 = ((volatile __local
                                    float *) red_arr_mem_44150)[sext_i32_i64(local_tid_44146)];
                        if ((local_tid_44146 - squot32(local_tid_44146, 32) *
                             32) == 0) {
                            x_30998 = x_30999;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44159 = 1;
                    while (slt32(skip_threads_44159, 32)) {
                        if (sle32(skip_threads_44159, local_tid_44146 -
                                  squot32(local_tid_44146, 32) * 32) &&
                            ltid_in_bounds_44158) {
                            // read operands
                            {
                                x_30998 = ((volatile __local
                                            float *) red_arr_mem_44150)[sext_i32_i64(local_tid_44146) -
                                                                        sext_i32_i64(skip_threads_44159)];
                            }
                            // perform operation
                            {
                                bool inactive_44160 =
                                     slt64(srem64(sext_i32_i64(local_tid_44146),
                                                  i32_res_27401),
                                           sext_i32_i64(local_tid_44146) -
                                           sext_i32_i64(local_tid_44146 -
                                           skip_threads_44159));
                                
                                if (inactive_44160) {
                                    x_30998 = x_30999;
                                }
                                if (!inactive_44160) {
                                    float defunc_1_op_res_31000 = x_30998 +
                                          x_30999;
                                    
                                    x_30998 = defunc_1_op_res_31000;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44148, skip_threads_44159)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44159, local_tid_44146 -
                                  squot32(local_tid_44146, 32) * 32) &&
                            ltid_in_bounds_44158) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44150)[sext_i32_i64(local_tid_44146)] =
                                    x_30998;
                                x_30999 = x_30998;
                            }
                        }
                        if (sle32(wave_sizze_44148, skip_threads_44159)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44159 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44146 - squot32(local_tid_44146, 32) * 32) ==
                        31 && ltid_in_bounds_44158) {
                        ((volatile __local
                          float *) red_arr_mem_44150)[sext_i32_i64(squot32(local_tid_44146,
                                                                           32))] =
                            x_30998;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44161;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44146, 32) == 0 &&
                            ltid_in_bounds_44158) {
                            x_44156 = ((volatile __local
                                        float *) red_arr_mem_44150)[sext_i32_i64(local_tid_44146)];
                            if ((local_tid_44146 - squot32(local_tid_44146,
                                                           32) * 32) == 0) {
                                x_44155 = x_44156;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44161 = 1;
                        while (slt32(skip_threads_44161, 32)) {
                            if (sle32(skip_threads_44161, local_tid_44146 -
                                      squot32(local_tid_44146, 32) * 32) &&
                                (squot32(local_tid_44146, 32) == 0 &&
                                 ltid_in_bounds_44158)) {
                                // read operands
                                {
                                    x_44155 = ((volatile __local
                                                float *) red_arr_mem_44150)[sext_i32_i64(local_tid_44146) -
                                                                            sext_i32_i64(skip_threads_44161)];
                                }
                                // perform operation
                                {
                                    bool inactive_44162 =
                                         slt64(srem64(sext_i32_i64(local_tid_44146 *
                                                      32 + 32 - 1),
                                                      i32_res_27401),
                                               sext_i32_i64(local_tid_44146 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44146 -
                                                             skip_threads_44161) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44162) {
                                        x_44155 = x_44156;
                                    }
                                    if (!inactive_44162) {
                                        float defunc_1_op_res_44157 = x_44155 +
                                              x_44156;
                                        
                                        x_44155 = defunc_1_op_res_44157;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44148, skip_threads_44161)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44161, local_tid_44146 -
                                      squot32(local_tid_44146, 32) * 32) &&
                                (squot32(local_tid_44146, 32) == 0 &&
                                 ltid_in_bounds_44158)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44150)[sext_i32_i64(local_tid_44146)] =
                                        x_44155;
                                    x_44156 = x_44155;
                                }
                            }
                            if (sle32(wave_sizze_44148, skip_threads_44161)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44161 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44146, 32) == 0 ||
                          !ltid_in_bounds_44158)) {
                        // read operands
                        {
                            x_30999 = x_30998;
                            x_30998 = ((__local
                                        float *) red_arr_mem_44150)[sext_i32_i64(squot32(local_tid_44146,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44163 =
                                 slt64(srem64(sext_i32_i64(local_tid_44146),
                                              i32_res_27401),
                                       sext_i32_i64(local_tid_44146) -
                                       sext_i32_i64(squot32(local_tid_44146,
                                                            32) * 32 - 1));
                            
                            if (inactive_44163) {
                                x_30998 = x_30999;
                            }
                            if (!inactive_44163) {
                                float defunc_1_op_res_31000 = x_30998 + x_30999;
                                
                                x_30998 = defunc_1_op_res_31000;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44150)[sext_i32_i64(local_tid_44146)] =
                                x_30998;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44146, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44150)[sext_i32_i64(local_tid_44146)] =
                            x_30999;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44154) *
                      squot64(segred_group_sizze_30994,
                              segment_sizze_nonzzero_44143) +
                      sext_i32_i64(local_tid_44146), m_27392 * i32_res_27407) &&
                slt64(sext_i32_i64(local_tid_44146),
                      squot64(segred_group_sizze_30994,
                              segment_sizze_nonzzero_44143))) {
                ((__global
                  float *) mem_43022)[squot64(sext_i32_i64(virt_group_id_44154) *
                                              squot64(segred_group_sizze_30994,
                                                      segment_sizze_nonzzero_44143) +
                                              sext_i32_i64(local_tid_44146),
                                              i32_res_27407) * i32_res_27407 +
                                      (sext_i32_i64(virt_group_id_44154) *
                                       squot64(segred_group_sizze_30994,
                                               segment_sizze_nonzzero_44143) +
                                       sext_i32_i64(local_tid_44146) -
                                       squot64(sext_i32_i64(virt_group_id_44154) *
                                               squot64(segred_group_sizze_30994,
                                                       segment_sizze_nonzzero_44143) +
                                               sext_i32_i64(local_tid_44146),
                                               i32_res_27407) *
                                       i32_res_27407)] = ((__local
                                                           float *) red_arr_mem_44150)[(sext_i32_i64(local_tid_44146) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_44143 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_30994
}
__kernel void mainDetailedzisegred_small_31079(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44238_backing_aligned_0,
                                               int64_t m_27392,
                                               int64_t i32_res_27407,
                                               int64_t num_groups_31128,
                                               int64_t segment_sizze_nonzzero_44231,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_42807,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43028,
                                               __global
                                               unsigned char *mem_43088)
{
    #define segred_group_sizze_31127 (mainDetailedzisegred_group_sizze_31073)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44238_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44238_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44233;
    int32_t local_tid_44234;
    int64_t group_sizze_44237;
    int32_t wave_sizze_44236;
    int32_t group_tid_44235;
    
    global_tid_44233 = get_global_id(0);
    local_tid_44234 = get_local_id(0);
    group_sizze_44237 = get_local_size(0);
    wave_sizze_44236 = LOCKSTEP_WIDTH;
    group_tid_44235 = get_group_id(0);
    
    int32_t phys_tid_31079;
    
    phys_tid_31079 = global_tid_44233;
    
    __local char *red_arr_mem_44238;
    
    red_arr_mem_44238 = (__local char *) red_arr_mem_44238_backing_0;
    
    int32_t phys_group_id_44240;
    
    phys_group_id_44240 = get_group_id(0);
    for (int32_t i_44241 = 0; i_44241 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27392 * i32_res_27407,
                                          squot64(segred_group_sizze_31127,
                                                  segment_sizze_nonzzero_44231))) -
                   phys_group_id_44240, sext_i64_i32(num_groups_31128));
         i_44241++) {
        int32_t virt_group_id_44242 = phys_group_id_44240 + i_44241 *
                sext_i64_i32(num_groups_31128);
        int64_t gtid_31068 = squot64(squot64(sext_i32_i64(local_tid_44234),
                                             segment_sizze_nonzzero_44231) +
                                     sext_i32_i64(virt_group_id_44242) *
                                     squot64(segred_group_sizze_31127,
                                             segment_sizze_nonzzero_44231),
                                     i32_res_27407);
        int64_t gtid_31069 = squot64(sext_i32_i64(local_tid_44234),
                                     segment_sizze_nonzzero_44231) +
                sext_i32_i64(virt_group_id_44242) *
                squot64(segred_group_sizze_31127,
                        segment_sizze_nonzzero_44231) -
                squot64(squot64(sext_i32_i64(local_tid_44234),
                                segment_sizze_nonzzero_44231) +
                        sext_i32_i64(virt_group_id_44242) *
                        squot64(segred_group_sizze_31127,
                                segment_sizze_nonzzero_44231), i32_res_27407) *
                i32_res_27407;
        int64_t gtid_31078 = srem64(sext_i32_i64(local_tid_44234),
                                    i32_res_27407);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27407) && ((slt64(gtid_31068,
                                                             m_27392) &&
                                                       slt64(gtid_31069,
                                                             i32_res_27407)) &&
                                                      slt64(sext_i32_i64(local_tid_44234),
                                                            i32_res_27407 *
                                                            squot64(segred_group_sizze_31127,
                                                                    segment_sizze_nonzzero_44231)))) {
                float x_31137 = ((__global
                                  float *) defunc_3_map_res_mem_43028)[gtid_31068 *
                                                                       i32_res_27407 +
                                                                       gtid_31078];
                float x_31138 = ((__global
                                  float *) defunc_3_map_res_mem_42807)[gtid_31068 *
                                                                       (i32_res_27407 *
                                                                        i32_res_27407) +
                                                                       gtid_31069 *
                                                                       i32_res_27407 +
                                                                       gtid_31078];
                float defunc_1_f_res_31139 = x_31137 * x_31138;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44238)[sext_i32_i64(local_tid_44234)] =
                        defunc_1_f_res_31139;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44238)[sext_i32_i64(local_tid_44234)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27407)) {
            // perform segmented scan to imitate reduction
            {
                float x_31131;
                float x_31132;
                float x_44243;
                float x_44244;
                bool ltid_in_bounds_44246;
                
                ltid_in_bounds_44246 = slt64(sext_i32_i64(local_tid_44234),
                                             i32_res_27407 *
                                             squot64(segred_group_sizze_31127,
                                                     segment_sizze_nonzzero_44231));
                
                int32_t skip_threads_44247;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44246) {
                        x_31132 = ((volatile __local
                                    float *) red_arr_mem_44238)[sext_i32_i64(local_tid_44234)];
                        if ((local_tid_44234 - squot32(local_tid_44234, 32) *
                             32) == 0) {
                            x_31131 = x_31132;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44247 = 1;
                    while (slt32(skip_threads_44247, 32)) {
                        if (sle32(skip_threads_44247, local_tid_44234 -
                                  squot32(local_tid_44234, 32) * 32) &&
                            ltid_in_bounds_44246) {
                            // read operands
                            {
                                x_31131 = ((volatile __local
                                            float *) red_arr_mem_44238)[sext_i32_i64(local_tid_44234) -
                                                                        sext_i32_i64(skip_threads_44247)];
                            }
                            // perform operation
                            {
                                bool inactive_44248 =
                                     slt64(srem64(sext_i32_i64(local_tid_44234),
                                                  i32_res_27407),
                                           sext_i32_i64(local_tid_44234) -
                                           sext_i32_i64(local_tid_44234 -
                                           skip_threads_44247));
                                
                                if (inactive_44248) {
                                    x_31131 = x_31132;
                                }
                                if (!inactive_44248) {
                                    float defunc_1_op_res_31133 = x_31131 +
                                          x_31132;
                                    
                                    x_31131 = defunc_1_op_res_31133;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44236, skip_threads_44247)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44247, local_tid_44234 -
                                  squot32(local_tid_44234, 32) * 32) &&
                            ltid_in_bounds_44246) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44238)[sext_i32_i64(local_tid_44234)] =
                                    x_31131;
                                x_31132 = x_31131;
                            }
                        }
                        if (sle32(wave_sizze_44236, skip_threads_44247)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44247 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44234 - squot32(local_tid_44234, 32) * 32) ==
                        31 && ltid_in_bounds_44246) {
                        ((volatile __local
                          float *) red_arr_mem_44238)[sext_i32_i64(squot32(local_tid_44234,
                                                                           32))] =
                            x_31131;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44249;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44234, 32) == 0 &&
                            ltid_in_bounds_44246) {
                            x_44244 = ((volatile __local
                                        float *) red_arr_mem_44238)[sext_i32_i64(local_tid_44234)];
                            if ((local_tid_44234 - squot32(local_tid_44234,
                                                           32) * 32) == 0) {
                                x_44243 = x_44244;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44249 = 1;
                        while (slt32(skip_threads_44249, 32)) {
                            if (sle32(skip_threads_44249, local_tid_44234 -
                                      squot32(local_tid_44234, 32) * 32) &&
                                (squot32(local_tid_44234, 32) == 0 &&
                                 ltid_in_bounds_44246)) {
                                // read operands
                                {
                                    x_44243 = ((volatile __local
                                                float *) red_arr_mem_44238)[sext_i32_i64(local_tid_44234) -
                                                                            sext_i32_i64(skip_threads_44249)];
                                }
                                // perform operation
                                {
                                    bool inactive_44250 =
                                         slt64(srem64(sext_i32_i64(local_tid_44234 *
                                                      32 + 32 - 1),
                                                      i32_res_27407),
                                               sext_i32_i64(local_tid_44234 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44234 -
                                                             skip_threads_44249) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44250) {
                                        x_44243 = x_44244;
                                    }
                                    if (!inactive_44250) {
                                        float defunc_1_op_res_44245 = x_44243 +
                                              x_44244;
                                        
                                        x_44243 = defunc_1_op_res_44245;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44236, skip_threads_44249)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44249, local_tid_44234 -
                                      squot32(local_tid_44234, 32) * 32) &&
                                (squot32(local_tid_44234, 32) == 0 &&
                                 ltid_in_bounds_44246)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44238)[sext_i32_i64(local_tid_44234)] =
                                        x_44243;
                                    x_44244 = x_44243;
                                }
                            }
                            if (sle32(wave_sizze_44236, skip_threads_44249)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44249 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44234, 32) == 0 ||
                          !ltid_in_bounds_44246)) {
                        // read operands
                        {
                            x_31132 = x_31131;
                            x_31131 = ((__local
                                        float *) red_arr_mem_44238)[sext_i32_i64(squot32(local_tid_44234,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44251 =
                                 slt64(srem64(sext_i32_i64(local_tid_44234),
                                              i32_res_27407),
                                       sext_i32_i64(local_tid_44234) -
                                       sext_i32_i64(squot32(local_tid_44234,
                                                            32) * 32 - 1));
                            
                            if (inactive_44251) {
                                x_31131 = x_31132;
                            }
                            if (!inactive_44251) {
                                float defunc_1_op_res_31133 = x_31131 + x_31132;
                                
                                x_31131 = defunc_1_op_res_31133;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44238)[sext_i32_i64(local_tid_44234)] =
                                x_31131;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44234, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44238)[sext_i32_i64(local_tid_44234)] =
                            x_31132;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44242) *
                      squot64(segred_group_sizze_31127,
                              segment_sizze_nonzzero_44231) +
                      sext_i32_i64(local_tid_44234), m_27392 * i32_res_27407) &&
                slt64(sext_i32_i64(local_tid_44234),
                      squot64(segred_group_sizze_31127,
                              segment_sizze_nonzzero_44231))) {
                ((__global
                  float *) mem_43088)[squot64(sext_i32_i64(virt_group_id_44242) *
                                              squot64(segred_group_sizze_31127,
                                                      segment_sizze_nonzzero_44231) +
                                              sext_i32_i64(local_tid_44234),
                                              i32_res_27407) * i32_res_27407 +
                                      (sext_i32_i64(virt_group_id_44242) *
                                       squot64(segred_group_sizze_31127,
                                               segment_sizze_nonzzero_44231) +
                                       sext_i32_i64(local_tid_44234) -
                                       squot64(sext_i32_i64(virt_group_id_44242) *
                                               squot64(segred_group_sizze_31127,
                                                       segment_sizze_nonzzero_44231) +
                                               sext_i32_i64(local_tid_44234),
                                               i32_res_27407) *
                                       i32_res_27407)] = ((__local
                                                           float *) red_arr_mem_44238)[(sext_i32_i64(local_tid_44234) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_44231 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31127
}
__kernel void mainDetailedzisegred_small_31209(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44370_backing_aligned_0,
                                               int64_t N_27391, int64_t m_27392,
                                               int64_t i32_res_27407,
                                               int64_t num_groups_31256,
                                               int64_t segment_sizze_nonzzero_44363,
                                               __global
                                               unsigned char *mem_42575,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43094,
                                               __global
                                               unsigned char *mem_43312)
{
    #define segred_group_sizze_31255 (mainDetailedzisegred_group_sizze_31203)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44370_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44370_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44365;
    int32_t local_tid_44366;
    int64_t group_sizze_44369;
    int32_t wave_sizze_44368;
    int32_t group_tid_44367;
    
    global_tid_44365 = get_global_id(0);
    local_tid_44366 = get_local_id(0);
    group_sizze_44369 = get_local_size(0);
    wave_sizze_44368 = LOCKSTEP_WIDTH;
    group_tid_44367 = get_group_id(0);
    
    int32_t phys_tid_31209;
    
    phys_tid_31209 = global_tid_44365;
    
    __local char *red_arr_mem_44370;
    
    red_arr_mem_44370 = (__local char *) red_arr_mem_44370_backing_0;
    
    int32_t phys_group_id_44372;
    
    phys_group_id_44372 = get_group_id(0);
    for (int32_t i_44373 = 0; i_44373 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27392 * N_27391,
                                          squot64(segred_group_sizze_31255,
                                                  segment_sizze_nonzzero_44363))) -
                   phys_group_id_44372, sext_i64_i32(num_groups_31256));
         i_44373++) {
        int32_t virt_group_id_44374 = phys_group_id_44372 + i_44373 *
                sext_i64_i32(num_groups_31256);
        int64_t gtid_31198 = squot64(squot64(sext_i32_i64(local_tid_44366),
                                             segment_sizze_nonzzero_44363) +
                                     sext_i32_i64(virt_group_id_44374) *
                                     squot64(segred_group_sizze_31255,
                                             segment_sizze_nonzzero_44363),
                                     N_27391);
        int64_t gtid_31199 = squot64(sext_i32_i64(local_tid_44366),
                                     segment_sizze_nonzzero_44363) +
                sext_i32_i64(virt_group_id_44374) *
                squot64(segred_group_sizze_31255,
                        segment_sizze_nonzzero_44363) -
                squot64(squot64(sext_i32_i64(local_tid_44366),
                                segment_sizze_nonzzero_44363) +
                        sext_i32_i64(virt_group_id_44374) *
                        squot64(segred_group_sizze_31255,
                                segment_sizze_nonzzero_44363), N_27391) *
                N_27391;
        int64_t gtid_31208 = srem64(sext_i32_i64(local_tid_44366),
                                    i32_res_27407);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27407) && ((slt64(gtid_31198,
                                                             m_27392) &&
                                                       slt64(gtid_31199,
                                                             N_27391)) &&
                                                      slt64(sext_i32_i64(local_tid_44366),
                                                            i32_res_27407 *
                                                            squot64(segred_group_sizze_31255,
                                                                    segment_sizze_nonzzero_44363)))) {
                float x_31264 = ((__global
                                  float *) defunc_4_map_res_mem_43094)[gtid_31198 *
                                                                       i32_res_27407 +
                                                                       gtid_31208];
                float x_31265 = ((__global float *) mem_42575)[gtid_31199 *
                                                               i32_res_27407 +
                                                               gtid_31208];
                float defunc_1_f_res_31266 = x_31264 * x_31265;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44370)[sext_i32_i64(local_tid_44366)] =
                        defunc_1_f_res_31266;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44370)[sext_i32_i64(local_tid_44366)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27407)) {
            // perform segmented scan to imitate reduction
            {
                float x_31259;
                float x_31260;
                float x_44375;
                float x_44376;
                bool ltid_in_bounds_44378;
                
                ltid_in_bounds_44378 = slt64(sext_i32_i64(local_tid_44366),
                                             i32_res_27407 *
                                             squot64(segred_group_sizze_31255,
                                                     segment_sizze_nonzzero_44363));
                
                int32_t skip_threads_44379;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44378) {
                        x_31260 = ((volatile __local
                                    float *) red_arr_mem_44370)[sext_i32_i64(local_tid_44366)];
                        if ((local_tid_44366 - squot32(local_tid_44366, 32) *
                             32) == 0) {
                            x_31259 = x_31260;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44379 = 1;
                    while (slt32(skip_threads_44379, 32)) {
                        if (sle32(skip_threads_44379, local_tid_44366 -
                                  squot32(local_tid_44366, 32) * 32) &&
                            ltid_in_bounds_44378) {
                            // read operands
                            {
                                x_31259 = ((volatile __local
                                            float *) red_arr_mem_44370)[sext_i32_i64(local_tid_44366) -
                                                                        sext_i32_i64(skip_threads_44379)];
                            }
                            // perform operation
                            {
                                bool inactive_44380 =
                                     slt64(srem64(sext_i32_i64(local_tid_44366),
                                                  i32_res_27407),
                                           sext_i32_i64(local_tid_44366) -
                                           sext_i32_i64(local_tid_44366 -
                                           skip_threads_44379));
                                
                                if (inactive_44380) {
                                    x_31259 = x_31260;
                                }
                                if (!inactive_44380) {
                                    float defunc_1_op_res_31261 = x_31259 +
                                          x_31260;
                                    
                                    x_31259 = defunc_1_op_res_31261;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44368, skip_threads_44379)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44379, local_tid_44366 -
                                  squot32(local_tid_44366, 32) * 32) &&
                            ltid_in_bounds_44378) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44370)[sext_i32_i64(local_tid_44366)] =
                                    x_31259;
                                x_31260 = x_31259;
                            }
                        }
                        if (sle32(wave_sizze_44368, skip_threads_44379)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44379 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44366 - squot32(local_tid_44366, 32) * 32) ==
                        31 && ltid_in_bounds_44378) {
                        ((volatile __local
                          float *) red_arr_mem_44370)[sext_i32_i64(squot32(local_tid_44366,
                                                                           32))] =
                            x_31259;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44381;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44366, 32) == 0 &&
                            ltid_in_bounds_44378) {
                            x_44376 = ((volatile __local
                                        float *) red_arr_mem_44370)[sext_i32_i64(local_tid_44366)];
                            if ((local_tid_44366 - squot32(local_tid_44366,
                                                           32) * 32) == 0) {
                                x_44375 = x_44376;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44381 = 1;
                        while (slt32(skip_threads_44381, 32)) {
                            if (sle32(skip_threads_44381, local_tid_44366 -
                                      squot32(local_tid_44366, 32) * 32) &&
                                (squot32(local_tid_44366, 32) == 0 &&
                                 ltid_in_bounds_44378)) {
                                // read operands
                                {
                                    x_44375 = ((volatile __local
                                                float *) red_arr_mem_44370)[sext_i32_i64(local_tid_44366) -
                                                                            sext_i32_i64(skip_threads_44381)];
                                }
                                // perform operation
                                {
                                    bool inactive_44382 =
                                         slt64(srem64(sext_i32_i64(local_tid_44366 *
                                                      32 + 32 - 1),
                                                      i32_res_27407),
                                               sext_i32_i64(local_tid_44366 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44366 -
                                                             skip_threads_44381) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44382) {
                                        x_44375 = x_44376;
                                    }
                                    if (!inactive_44382) {
                                        float defunc_1_op_res_44377 = x_44375 +
                                              x_44376;
                                        
                                        x_44375 = defunc_1_op_res_44377;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44368, skip_threads_44381)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44381, local_tid_44366 -
                                      squot32(local_tid_44366, 32) * 32) &&
                                (squot32(local_tid_44366, 32) == 0 &&
                                 ltid_in_bounds_44378)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44370)[sext_i32_i64(local_tid_44366)] =
                                        x_44375;
                                    x_44376 = x_44375;
                                }
                            }
                            if (sle32(wave_sizze_44368, skip_threads_44381)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44381 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44366, 32) == 0 ||
                          !ltid_in_bounds_44378)) {
                        // read operands
                        {
                            x_31260 = x_31259;
                            x_31259 = ((__local
                                        float *) red_arr_mem_44370)[sext_i32_i64(squot32(local_tid_44366,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44383 =
                                 slt64(srem64(sext_i32_i64(local_tid_44366),
                                              i32_res_27407),
                                       sext_i32_i64(local_tid_44366) -
                                       sext_i32_i64(squot32(local_tid_44366,
                                                            32) * 32 - 1));
                            
                            if (inactive_44383) {
                                x_31259 = x_31260;
                            }
                            if (!inactive_44383) {
                                float defunc_1_op_res_31261 = x_31259 + x_31260;
                                
                                x_31259 = defunc_1_op_res_31261;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44370)[sext_i32_i64(local_tid_44366)] =
                                x_31259;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44366, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44370)[sext_i32_i64(local_tid_44366)] =
                            x_31260;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44374) *
                      squot64(segred_group_sizze_31255,
                              segment_sizze_nonzzero_44363) +
                      sext_i32_i64(local_tid_44366), m_27392 * N_27391) &&
                slt64(sext_i32_i64(local_tid_44366),
                      squot64(segred_group_sizze_31255,
                              segment_sizze_nonzzero_44363))) {
                ((__global
                  float *) mem_43312)[squot64(sext_i32_i64(virt_group_id_44374) *
                                              squot64(segred_group_sizze_31255,
                                                      segment_sizze_nonzzero_44363) +
                                              sext_i32_i64(local_tid_44366),
                                              N_27391) * N_27391 +
                                      (sext_i32_i64(virt_group_id_44374) *
                                       squot64(segred_group_sizze_31255,
                                               segment_sizze_nonzzero_44363) +
                                       sext_i32_i64(local_tid_44366) -
                                       squot64(sext_i32_i64(virt_group_id_44374) *
                                               squot64(segred_group_sizze_31255,
                                                       segment_sizze_nonzzero_44363) +
                                               sext_i32_i64(local_tid_44366),
                                               N_27391) * N_27391)] = ((__local
                                                                        float *) red_arr_mem_44370)[(sext_i32_i64(local_tid_44366) +
                                                                                                     (int64_t) 1) *
                                                                                                    segment_sizze_nonzzero_44363 -
                                                                                                    (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31255
}
__kernel void mainDetailedzisegred_small_31775(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44622_backing_aligned_0,
                                               int64_t N_27391, int64_t m_27392,
                                               int64_t i32_res_27401,
                                               int64_t num_groups_31822,
                                               int64_t segment_sizze_nonzzero_44615,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43356,
                                               __global
                                               unsigned char *mem_43410,
                                               __global
                                               unsigned char *mem_43413)
{
    #define segred_group_sizze_31821 (mainDetailedzisegred_group_sizze_31769)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44622_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44622_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44617;
    int32_t local_tid_44618;
    int64_t group_sizze_44621;
    int32_t wave_sizze_44620;
    int32_t group_tid_44619;
    
    global_tid_44617 = get_global_id(0);
    local_tid_44618 = get_local_id(0);
    group_sizze_44621 = get_local_size(0);
    wave_sizze_44620 = LOCKSTEP_WIDTH;
    group_tid_44619 = get_group_id(0);
    
    int32_t phys_tid_31775;
    
    phys_tid_31775 = global_tid_44617;
    
    __local char *red_arr_mem_44622;
    
    red_arr_mem_44622 = (__local char *) red_arr_mem_44622_backing_0;
    
    int32_t phys_group_id_44624;
    
    phys_group_id_44624 = get_group_id(0);
    for (int32_t i_44625 = 0; i_44625 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27392,
                                          squot64(segred_group_sizze_31821,
                                                  segment_sizze_nonzzero_44615))) -
                   phys_group_id_44624, sext_i64_i32(num_groups_31822));
         i_44625++) {
        int32_t virt_group_id_44626 = phys_group_id_44624 + i_44625 *
                sext_i64_i32(num_groups_31822);
        int64_t gtid_31766 = squot64(sext_i32_i64(local_tid_44618),
                                     segment_sizze_nonzzero_44615) +
                sext_i32_i64(virt_group_id_44626) *
                squot64(segred_group_sizze_31821, segment_sizze_nonzzero_44615);
        int64_t gtid_31774 = srem64(sext_i32_i64(local_tid_44618),
                                    i32_res_27401);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27401) && (slt64(gtid_31766,
                                                            m_27392) &&
                                                      slt64(sext_i32_i64(local_tid_44618),
                                                            i32_res_27401 *
                                                            squot64(segred_group_sizze_31821,
                                                                    segment_sizze_nonzzero_44615)))) {
                int32_t defunc_0_f_res_31829 = ((__global
                                                 int32_t *) mem_43410)[gtid_31766];
                int32_t index_primexp_40595 = sext_i64_i32(gtid_31774);
                bool cond_31831 = slt32(index_primexp_40595,
                                        defunc_0_f_res_31829);
                float defunc_0_f_res_31832;
                
                if (cond_31831) {
                    int64_t i_31833 = sext_i32_i64(index_primexp_40595);
                    float defunc_0_f_res_t_res_31834 = ((__global
                                                         float *) defunc_4_map_res_mem_43356)[gtid_31766 *
                                                                                              N_27391 +
                                                                                              i_31833];
                    
                    defunc_0_f_res_31832 = defunc_0_f_res_t_res_31834;
                } else {
                    defunc_0_f_res_31832 = 0.0F;
                }
                
                float defunc_0_f_res_31835 = defunc_0_f_res_31832 *
                      defunc_0_f_res_31832;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44622)[sext_i32_i64(local_tid_44618)] =
                        defunc_0_f_res_31835;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44622)[sext_i32_i64(local_tid_44618)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27401)) {
            // perform segmented scan to imitate reduction
            {
                float x_31825;
                float x_31826;
                float x_44627;
                float x_44628;
                bool ltid_in_bounds_44630;
                
                ltid_in_bounds_44630 = slt64(sext_i32_i64(local_tid_44618),
                                             i32_res_27401 *
                                             squot64(segred_group_sizze_31821,
                                                     segment_sizze_nonzzero_44615));
                
                int32_t skip_threads_44631;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44630) {
                        x_31826 = ((volatile __local
                                    float *) red_arr_mem_44622)[sext_i32_i64(local_tid_44618)];
                        if ((local_tid_44618 - squot32(local_tid_44618, 32) *
                             32) == 0) {
                            x_31825 = x_31826;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44631 = 1;
                    while (slt32(skip_threads_44631, 32)) {
                        if (sle32(skip_threads_44631, local_tid_44618 -
                                  squot32(local_tid_44618, 32) * 32) &&
                            ltid_in_bounds_44630) {
                            // read operands
                            {
                                x_31825 = ((volatile __local
                                            float *) red_arr_mem_44622)[sext_i32_i64(local_tid_44618) -
                                                                        sext_i32_i64(skip_threads_44631)];
                            }
                            // perform operation
                            {
                                bool inactive_44632 =
                                     slt64(srem64(sext_i32_i64(local_tid_44618),
                                                  i32_res_27401),
                                           sext_i32_i64(local_tid_44618) -
                                           sext_i32_i64(local_tid_44618 -
                                           skip_threads_44631));
                                
                                if (inactive_44632) {
                                    x_31825 = x_31826;
                                }
                                if (!inactive_44632) {
                                    float defunc_1_op_res_31827 = x_31825 +
                                          x_31826;
                                    
                                    x_31825 = defunc_1_op_res_31827;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44620, skip_threads_44631)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44631, local_tid_44618 -
                                  squot32(local_tid_44618, 32) * 32) &&
                            ltid_in_bounds_44630) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44622)[sext_i32_i64(local_tid_44618)] =
                                    x_31825;
                                x_31826 = x_31825;
                            }
                        }
                        if (sle32(wave_sizze_44620, skip_threads_44631)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44631 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44618 - squot32(local_tid_44618, 32) * 32) ==
                        31 && ltid_in_bounds_44630) {
                        ((volatile __local
                          float *) red_arr_mem_44622)[sext_i32_i64(squot32(local_tid_44618,
                                                                           32))] =
                            x_31825;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44633;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44618, 32) == 0 &&
                            ltid_in_bounds_44630) {
                            x_44628 = ((volatile __local
                                        float *) red_arr_mem_44622)[sext_i32_i64(local_tid_44618)];
                            if ((local_tid_44618 - squot32(local_tid_44618,
                                                           32) * 32) == 0) {
                                x_44627 = x_44628;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44633 = 1;
                        while (slt32(skip_threads_44633, 32)) {
                            if (sle32(skip_threads_44633, local_tid_44618 -
                                      squot32(local_tid_44618, 32) * 32) &&
                                (squot32(local_tid_44618, 32) == 0 &&
                                 ltid_in_bounds_44630)) {
                                // read operands
                                {
                                    x_44627 = ((volatile __local
                                                float *) red_arr_mem_44622)[sext_i32_i64(local_tid_44618) -
                                                                            sext_i32_i64(skip_threads_44633)];
                                }
                                // perform operation
                                {
                                    bool inactive_44634 =
                                         slt64(srem64(sext_i32_i64(local_tid_44618 *
                                                      32 + 32 - 1),
                                                      i32_res_27401),
                                               sext_i32_i64(local_tid_44618 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44618 -
                                                             skip_threads_44633) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44634) {
                                        x_44627 = x_44628;
                                    }
                                    if (!inactive_44634) {
                                        float defunc_1_op_res_44629 = x_44627 +
                                              x_44628;
                                        
                                        x_44627 = defunc_1_op_res_44629;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44620, skip_threads_44633)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44633, local_tid_44618 -
                                      squot32(local_tid_44618, 32) * 32) &&
                                (squot32(local_tid_44618, 32) == 0 &&
                                 ltid_in_bounds_44630)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44622)[sext_i32_i64(local_tid_44618)] =
                                        x_44627;
                                    x_44628 = x_44627;
                                }
                            }
                            if (sle32(wave_sizze_44620, skip_threads_44633)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44633 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44618, 32) == 0 ||
                          !ltid_in_bounds_44630)) {
                        // read operands
                        {
                            x_31826 = x_31825;
                            x_31825 = ((__local
                                        float *) red_arr_mem_44622)[sext_i32_i64(squot32(local_tid_44618,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44635 =
                                 slt64(srem64(sext_i32_i64(local_tid_44618),
                                              i32_res_27401),
                                       sext_i32_i64(local_tid_44618) -
                                       sext_i32_i64(squot32(local_tid_44618,
                                                            32) * 32 - 1));
                            
                            if (inactive_44635) {
                                x_31825 = x_31826;
                            }
                            if (!inactive_44635) {
                                float defunc_1_op_res_31827 = x_31825 + x_31826;
                                
                                x_31825 = defunc_1_op_res_31827;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44622)[sext_i32_i64(local_tid_44618)] =
                                x_31825;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44618, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44622)[sext_i32_i64(local_tid_44618)] =
                            x_31826;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44626) *
                      squot64(segred_group_sizze_31821,
                              segment_sizze_nonzzero_44615) +
                      sext_i32_i64(local_tid_44618), m_27392) &&
                slt64(sext_i32_i64(local_tid_44618),
                      squot64(segred_group_sizze_31821,
                              segment_sizze_nonzzero_44615))) {
                ((__global
                  float *) mem_43413)[sext_i32_i64(virt_group_id_44626) *
                                      squot64(segred_group_sizze_31821,
                                              segment_sizze_nonzzero_44615) +
                                      sext_i32_i64(local_tid_44618)] = ((__local
                                                                         float *) red_arr_mem_44622)[(sext_i32_i64(local_tid_44618) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_44615 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31821
}
__kernel void mainDetailedzisegred_small_31796(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44562_backing_aligned_0,
                                               int64_t N_27391, int64_t m_27392,
                                               int64_t i32_res_27401,
                                               int64_t num_groups_31808,
                                               int64_t segment_sizze_nonzzero_44555,
                                               __global
                                               unsigned char *images_mem_42559,
                                               __global
                                               unsigned char *mem_43410)
{
    #define segred_group_sizze_31807 (mainDetailedzisegred_group_sizze_31790)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44562_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44562_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44557;
    int32_t local_tid_44558;
    int64_t group_sizze_44561;
    int32_t wave_sizze_44560;
    int32_t group_tid_44559;
    
    global_tid_44557 = get_global_id(0);
    local_tid_44558 = get_local_id(0);
    group_sizze_44561 = get_local_size(0);
    wave_sizze_44560 = LOCKSTEP_WIDTH;
    group_tid_44559 = get_group_id(0);
    
    int32_t phys_tid_31796;
    
    phys_tid_31796 = global_tid_44557;
    
    __local char *red_arr_mem_44562;
    
    red_arr_mem_44562 = (__local char *) red_arr_mem_44562_backing_0;
    
    int32_t phys_group_id_44564;
    
    phys_group_id_44564 = get_group_id(0);
    for (int32_t i_44565 = 0; i_44565 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27392,
                                          squot64(segred_group_sizze_31807,
                                                  segment_sizze_nonzzero_44555))) -
                   phys_group_id_44564, sext_i64_i32(num_groups_31808));
         i_44565++) {
        int32_t virt_group_id_44566 = phys_group_id_44564 + i_44565 *
                sext_i64_i32(num_groups_31808);
        int64_t gtid_31787 = squot64(sext_i32_i64(local_tid_44558),
                                     segment_sizze_nonzzero_44555) +
                sext_i32_i64(virt_group_id_44566) *
                squot64(segred_group_sizze_31807, segment_sizze_nonzzero_44555);
        int64_t gtid_31795 = srem64(sext_i32_i64(local_tid_44558),
                                    i32_res_27401);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27401) && (slt64(gtid_31787,
                                                            m_27392) &&
                                                      slt64(sext_i32_i64(local_tid_44558),
                                                            i32_res_27401 *
                                                            squot64(segred_group_sizze_31807,
                                                                    segment_sizze_nonzzero_44555)))) {
                float x_31815 = ((__global
                                  float *) images_mem_42559)[gtid_31787 *
                                                             N_27391 +
                                                             gtid_31795];
                bool isnan_res_31816;
                
                isnan_res_31816 = futrts_isnan32(x_31815);
                
                bool cond_31817 = !isnan_res_31816;
                int32_t defunc_0_f_res_31818 = btoi_bool_i32(cond_31817);
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      int32_t *) red_arr_mem_44562)[sext_i32_i64(local_tid_44558)] =
                        defunc_0_f_res_31818;
                }
            } else {
                ((__local
                  int32_t *) red_arr_mem_44562)[sext_i32_i64(local_tid_44558)] =
                    0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27401)) {
            // perform segmented scan to imitate reduction
            {
                int32_t x_31811;
                int32_t x_31812;
                int32_t x_44567;
                int32_t x_44568;
                bool ltid_in_bounds_44570;
                
                ltid_in_bounds_44570 = slt64(sext_i32_i64(local_tid_44558),
                                             i32_res_27401 *
                                             squot64(segred_group_sizze_31807,
                                                     segment_sizze_nonzzero_44555));
                
                int32_t skip_threads_44571;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44570) {
                        x_31812 = ((volatile __local
                                    int32_t *) red_arr_mem_44562)[sext_i32_i64(local_tid_44558)];
                        if ((local_tid_44558 - squot32(local_tid_44558, 32) *
                             32) == 0) {
                            x_31811 = x_31812;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44571 = 1;
                    while (slt32(skip_threads_44571, 32)) {
                        if (sle32(skip_threads_44571, local_tid_44558 -
                                  squot32(local_tid_44558, 32) * 32) &&
                            ltid_in_bounds_44570) {
                            // read operands
                            {
                                x_31811 = ((volatile __local
                                            int32_t *) red_arr_mem_44562)[sext_i32_i64(local_tid_44558) -
                                                                          sext_i32_i64(skip_threads_44571)];
                            }
                            // perform operation
                            {
                                bool inactive_44572 =
                                     slt64(srem64(sext_i32_i64(local_tid_44558),
                                                  i32_res_27401),
                                           sext_i32_i64(local_tid_44558) -
                                           sext_i32_i64(local_tid_44558 -
                                           skip_threads_44571));
                                
                                if (inactive_44572) {
                                    x_31811 = x_31812;
                                }
                                if (!inactive_44572) {
                                    int32_t defunc_1_op_res_31813 =
                                            add32(x_31811, x_31812);
                                    
                                    x_31811 = defunc_1_op_res_31813;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44560, skip_threads_44571)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44571, local_tid_44558 -
                                  squot32(local_tid_44558, 32) * 32) &&
                            ltid_in_bounds_44570) {
                            // write result
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_44562)[sext_i32_i64(local_tid_44558)] =
                                    x_31811;
                                x_31812 = x_31811;
                            }
                        }
                        if (sle32(wave_sizze_44560, skip_threads_44571)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44571 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44558 - squot32(local_tid_44558, 32) * 32) ==
                        31 && ltid_in_bounds_44570) {
                        ((volatile __local
                          int32_t *) red_arr_mem_44562)[sext_i32_i64(squot32(local_tid_44558,
                                                                             32))] =
                            x_31811;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44573;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44558, 32) == 0 &&
                            ltid_in_bounds_44570) {
                            x_44568 = ((volatile __local
                                        int32_t *) red_arr_mem_44562)[sext_i32_i64(local_tid_44558)];
                            if ((local_tid_44558 - squot32(local_tid_44558,
                                                           32) * 32) == 0) {
                                x_44567 = x_44568;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44573 = 1;
                        while (slt32(skip_threads_44573, 32)) {
                            if (sle32(skip_threads_44573, local_tid_44558 -
                                      squot32(local_tid_44558, 32) * 32) &&
                                (squot32(local_tid_44558, 32) == 0 &&
                                 ltid_in_bounds_44570)) {
                                // read operands
                                {
                                    x_44567 = ((volatile __local
                                                int32_t *) red_arr_mem_44562)[sext_i32_i64(local_tid_44558) -
                                                                              sext_i32_i64(skip_threads_44573)];
                                }
                                // perform operation
                                {
                                    bool inactive_44574 =
                                         slt64(srem64(sext_i32_i64(local_tid_44558 *
                                                      32 + 32 - 1),
                                                      i32_res_27401),
                                               sext_i32_i64(local_tid_44558 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44558 -
                                                             skip_threads_44573) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44574) {
                                        x_44567 = x_44568;
                                    }
                                    if (!inactive_44574) {
                                        int32_t defunc_1_op_res_44569 =
                                                add32(x_44567, x_44568);
                                        
                                        x_44567 = defunc_1_op_res_44569;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44560, skip_threads_44573)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44573, local_tid_44558 -
                                      squot32(local_tid_44558, 32) * 32) &&
                                (squot32(local_tid_44558, 32) == 0 &&
                                 ltid_in_bounds_44570)) {
                                // write result
                                {
                                    ((volatile __local
                                      int32_t *) red_arr_mem_44562)[sext_i32_i64(local_tid_44558)] =
                                        x_44567;
                                    x_44568 = x_44567;
                                }
                            }
                            if (sle32(wave_sizze_44560, skip_threads_44573)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44573 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44558, 32) == 0 ||
                          !ltid_in_bounds_44570)) {
                        // read operands
                        {
                            x_31812 = x_31811;
                            x_31811 = ((__local
                                        int32_t *) red_arr_mem_44562)[sext_i32_i64(squot32(local_tid_44558,
                                                                                           32)) -
                                                                      (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44575 =
                                 slt64(srem64(sext_i32_i64(local_tid_44558),
                                              i32_res_27401),
                                       sext_i32_i64(local_tid_44558) -
                                       sext_i32_i64(squot32(local_tid_44558,
                                                            32) * 32 - 1));
                            
                            if (inactive_44575) {
                                x_31811 = x_31812;
                            }
                            if (!inactive_44575) {
                                int32_t defunc_1_op_res_31813 = add32(x_31811,
                                                                      x_31812);
                                
                                x_31811 = defunc_1_op_res_31813;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              int32_t *) red_arr_mem_44562)[sext_i32_i64(local_tid_44558)] =
                                x_31811;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44558, 32) == 0) {
                        ((__local
                          int32_t *) red_arr_mem_44562)[sext_i32_i64(local_tid_44558)] =
                            x_31812;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44566) *
                      squot64(segred_group_sizze_31807,
                              segment_sizze_nonzzero_44555) +
                      sext_i32_i64(local_tid_44558), m_27392) &&
                slt64(sext_i32_i64(local_tid_44558),
                      squot64(segred_group_sizze_31807,
                              segment_sizze_nonzzero_44555))) {
                ((__global
                  int32_t *) mem_43410)[sext_i32_i64(virt_group_id_44566) *
                                        squot64(segred_group_sizze_31807,
                                                segment_sizze_nonzzero_44555) +
                                        sext_i32_i64(local_tid_44558)] =
                    ((__local
                      int32_t *) red_arr_mem_44562)[(sext_i32_i64(local_tid_44558) +
                                                     (int64_t) 1) *
                                                    segment_sizze_nonzzero_44555 -
                                                    (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31807
}
__kernel void mainDetailedzisegred_small_31947(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44731_backing_aligned_0,
                                               int64_t N_27391, int64_t m_27392,
                                               int64_t i32_res_27762,
                                               int64_t num_groups_31965,
                                               int64_t segment_sizze_nonzzero_44724,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43356,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43422,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43423,
                                               __global
                                               unsigned char *mem_43456)
{
    #define segred_group_sizze_31964 (mainDetailedzisegred_group_sizze_31941)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44731_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44731_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44726;
    int32_t local_tid_44727;
    int64_t group_sizze_44730;
    int32_t wave_sizze_44729;
    int32_t group_tid_44728;
    
    global_tid_44726 = get_global_id(0);
    local_tid_44727 = get_local_id(0);
    group_sizze_44730 = get_local_size(0);
    wave_sizze_44729 = LOCKSTEP_WIDTH;
    group_tid_44728 = get_group_id(0);
    
    int32_t phys_tid_31947;
    
    phys_tid_31947 = global_tid_44726;
    
    __local char *red_arr_mem_44731;
    
    red_arr_mem_44731 = (__local char *) red_arr_mem_44731_backing_0;
    
    int32_t phys_group_id_44733;
    
    phys_group_id_44733 = get_group_id(0);
    for (int32_t i_44734 = 0; i_44734 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27392,
                                          squot64(segred_group_sizze_31964,
                                                  segment_sizze_nonzzero_44724))) -
                   phys_group_id_44733, sext_i64_i32(num_groups_31965));
         i_44734++) {
        int32_t virt_group_id_44735 = phys_group_id_44733 + i_44734 *
                sext_i64_i32(num_groups_31965);
        int64_t gtid_31938 = squot64(sext_i32_i64(local_tid_44727),
                                     segment_sizze_nonzzero_44724) +
                sext_i32_i64(virt_group_id_44735) *
                squot64(segred_group_sizze_31964, segment_sizze_nonzzero_44724);
        int64_t gtid_31946 = srem64(sext_i32_i64(local_tid_44727),
                                    i32_res_27762);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27762) && (slt64(gtid_31938,
                                                            m_27392) &&
                                                      slt64(sext_i32_i64(local_tid_44727),
                                                            i32_res_27762 *
                                                            squot64(segred_group_sizze_31964,
                                                                    segment_sizze_nonzzero_44724)))) {
                int32_t x_31973 = ((__global
                                    int32_t *) defunc_3_map_res_mem_43422)[gtid_31938];
                int32_t index_primexp_40600 = sext_i64_i32(gtid_31946);
                bool cond_31975 = slt32(index_primexp_40600, x_31973);
                float defunc_0_f_res_31976;
                
                if (cond_31975) {
                    int32_t x_31972 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43423)[gtid_31938];
                    int32_t x_31977 = add32(x_31972, index_primexp_40600);
                    int32_t x_31978 = sub32(x_31977, x_31973);
                    int32_t i_31979 = add32(1, x_31978);
                    int64_t i_31980 = sext_i32_i64(i_31979);
                    float defunc_0_f_res_t_res_31981 = ((__global
                                                         float *) defunc_4_map_res_mem_43356)[gtid_31938 *
                                                                                              N_27391 +
                                                                                              i_31980];
                    
                    defunc_0_f_res_31976 = defunc_0_f_res_t_res_31981;
                } else {
                    defunc_0_f_res_31976 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44731)[sext_i32_i64(local_tid_44727)] =
                        defunc_0_f_res_31976;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44731)[sext_i32_i64(local_tid_44727)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27762)) {
            // perform segmented scan to imitate reduction
            {
                float x_31968;
                float x_31969;
                float x_44736;
                float x_44737;
                bool ltid_in_bounds_44739;
                
                ltid_in_bounds_44739 = slt64(sext_i32_i64(local_tid_44727),
                                             i32_res_27762 *
                                             squot64(segred_group_sizze_31964,
                                                     segment_sizze_nonzzero_44724));
                
                int32_t skip_threads_44740;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44739) {
                        x_31969 = ((volatile __local
                                    float *) red_arr_mem_44731)[sext_i32_i64(local_tid_44727)];
                        if ((local_tid_44727 - squot32(local_tid_44727, 32) *
                             32) == 0) {
                            x_31968 = x_31969;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44740 = 1;
                    while (slt32(skip_threads_44740, 32)) {
                        if (sle32(skip_threads_44740, local_tid_44727 -
                                  squot32(local_tid_44727, 32) * 32) &&
                            ltid_in_bounds_44739) {
                            // read operands
                            {
                                x_31968 = ((volatile __local
                                            float *) red_arr_mem_44731)[sext_i32_i64(local_tid_44727) -
                                                                        sext_i32_i64(skip_threads_44740)];
                            }
                            // perform operation
                            {
                                bool inactive_44741 =
                                     slt64(srem64(sext_i32_i64(local_tid_44727),
                                                  i32_res_27762),
                                           sext_i32_i64(local_tid_44727) -
                                           sext_i32_i64(local_tid_44727 -
                                           skip_threads_44740));
                                
                                if (inactive_44741) {
                                    x_31968 = x_31969;
                                }
                                if (!inactive_44741) {
                                    float defunc_1_op_res_31970 = x_31968 +
                                          x_31969;
                                    
                                    x_31968 = defunc_1_op_res_31970;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44729, skip_threads_44740)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44740, local_tid_44727 -
                                  squot32(local_tid_44727, 32) * 32) &&
                            ltid_in_bounds_44739) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44731)[sext_i32_i64(local_tid_44727)] =
                                    x_31968;
                                x_31969 = x_31968;
                            }
                        }
                        if (sle32(wave_sizze_44729, skip_threads_44740)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44740 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44727 - squot32(local_tid_44727, 32) * 32) ==
                        31 && ltid_in_bounds_44739) {
                        ((volatile __local
                          float *) red_arr_mem_44731)[sext_i32_i64(squot32(local_tid_44727,
                                                                           32))] =
                            x_31968;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44742;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44727, 32) == 0 &&
                            ltid_in_bounds_44739) {
                            x_44737 = ((volatile __local
                                        float *) red_arr_mem_44731)[sext_i32_i64(local_tid_44727)];
                            if ((local_tid_44727 - squot32(local_tid_44727,
                                                           32) * 32) == 0) {
                                x_44736 = x_44737;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44742 = 1;
                        while (slt32(skip_threads_44742, 32)) {
                            if (sle32(skip_threads_44742, local_tid_44727 -
                                      squot32(local_tid_44727, 32) * 32) &&
                                (squot32(local_tid_44727, 32) == 0 &&
                                 ltid_in_bounds_44739)) {
                                // read operands
                                {
                                    x_44736 = ((volatile __local
                                                float *) red_arr_mem_44731)[sext_i32_i64(local_tid_44727) -
                                                                            sext_i32_i64(skip_threads_44742)];
                                }
                                // perform operation
                                {
                                    bool inactive_44743 =
                                         slt64(srem64(sext_i32_i64(local_tid_44727 *
                                                      32 + 32 - 1),
                                                      i32_res_27762),
                                               sext_i32_i64(local_tid_44727 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44727 -
                                                             skip_threads_44742) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44743) {
                                        x_44736 = x_44737;
                                    }
                                    if (!inactive_44743) {
                                        float defunc_1_op_res_44738 = x_44736 +
                                              x_44737;
                                        
                                        x_44736 = defunc_1_op_res_44738;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44729, skip_threads_44742)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44742, local_tid_44727 -
                                      squot32(local_tid_44727, 32) * 32) &&
                                (squot32(local_tid_44727, 32) == 0 &&
                                 ltid_in_bounds_44739)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44731)[sext_i32_i64(local_tid_44727)] =
                                        x_44736;
                                    x_44737 = x_44736;
                                }
                            }
                            if (sle32(wave_sizze_44729, skip_threads_44742)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44742 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44727, 32) == 0 ||
                          !ltid_in_bounds_44739)) {
                        // read operands
                        {
                            x_31969 = x_31968;
                            x_31968 = ((__local
                                        float *) red_arr_mem_44731)[sext_i32_i64(squot32(local_tid_44727,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44744 =
                                 slt64(srem64(sext_i32_i64(local_tid_44727),
                                              i32_res_27762),
                                       sext_i32_i64(local_tid_44727) -
                                       sext_i32_i64(squot32(local_tid_44727,
                                                            32) * 32 - 1));
                            
                            if (inactive_44744) {
                                x_31968 = x_31969;
                            }
                            if (!inactive_44744) {
                                float defunc_1_op_res_31970 = x_31968 + x_31969;
                                
                                x_31968 = defunc_1_op_res_31970;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44731)[sext_i32_i64(local_tid_44727)] =
                                x_31968;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44727, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44731)[sext_i32_i64(local_tid_44727)] =
                            x_31969;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44735) *
                      squot64(segred_group_sizze_31964,
                              segment_sizze_nonzzero_44724) +
                      sext_i32_i64(local_tid_44727), m_27392) &&
                slt64(sext_i32_i64(local_tid_44727),
                      squot64(segred_group_sizze_31964,
                              segment_sizze_nonzzero_44724))) {
                ((__global
                  float *) mem_43456)[sext_i32_i64(virt_group_id_44735) *
                                      squot64(segred_group_sizze_31964,
                                              segment_sizze_nonzzero_44724) +
                                      sext_i32_i64(local_tid_44727)] = ((__local
                                                                         float *) red_arr_mem_44731)[(sext_i32_i64(local_tid_44727) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_44724 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31964
}
__kernel void mainDetailedzisegred_small_33052(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44939_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44937_backing_aligned_1,
                                               __local volatile
                                               int64_t *red_arr_mem_44935_backing_aligned_2,
                                               int64_t m_27392,
                                               int64_t iota32_arg_27787,
                                               int64_t iota32_arg_27815,
                                               int64_t num_groups_33181,
                                               int64_t segment_sizze_nonzzero_44928,
                                               __global
                                               unsigned char *mem_43460,
                                               __global
                                               unsigned char *mem_43577,
                                               __global
                                               unsigned char *mem_43581,
                                               __global
                                               unsigned char *mem_43584,
                                               __global
                                               unsigned char *mem_43587,
                                               __global
                                               unsigned char *mem_43589,
                                               __global
                                               unsigned char *mem_43591,
                                               __global
                                               unsigned char *mem_43594)
{
    #define segred_group_sizze_33180 (mainDetailedzisegred_group_sizze_33046)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44939_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_44939_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44937_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44937_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_44935_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44935_backing_aligned_2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44930;
    int32_t local_tid_44931;
    int64_t group_sizze_44934;
    int32_t wave_sizze_44933;
    int32_t group_tid_44932;
    
    global_tid_44930 = get_global_id(0);
    local_tid_44931 = get_local_id(0);
    group_sizze_44934 = get_local_size(0);
    wave_sizze_44933 = LOCKSTEP_WIDTH;
    group_tid_44932 = get_group_id(0);
    
    int32_t phys_tid_33052;
    
    phys_tid_33052 = global_tid_44930;
    
    __local char *red_arr_mem_44935;
    
    red_arr_mem_44935 = (__local char *) red_arr_mem_44935_backing_0;
    
    __local char *red_arr_mem_44937;
    
    red_arr_mem_44937 = (__local char *) red_arr_mem_44937_backing_1;
    
    __local char *red_arr_mem_44939;
    
    red_arr_mem_44939 = (__local char *) red_arr_mem_44939_backing_2;
    
    int32_t phys_group_id_44941;
    
    phys_group_id_44941 = get_group_id(0);
    for (int32_t i_44942 = 0; i_44942 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27392,
                                          squot64(segred_group_sizze_33180,
                                                  segment_sizze_nonzzero_44928))) -
                   phys_group_id_44941, sext_i64_i32(num_groups_33181));
         i_44942++) {
        int32_t virt_group_id_44943 = phys_group_id_44941 + i_44942 *
                sext_i64_i32(num_groups_33181);
        int64_t gtid_33043 = squot64(sext_i32_i64(local_tid_44931),
                                     segment_sizze_nonzzero_44928) +
                sext_i32_i64(virt_group_id_44943) *
                squot64(segred_group_sizze_33180, segment_sizze_nonzzero_44928);
        int64_t gtid_33051 = srem64(sext_i32_i64(local_tid_44931),
                                    iota32_arg_27787);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, iota32_arg_27787) && (slt64(gtid_33043,
                                                               m_27392) &&
                                                         slt64(sext_i32_i64(local_tid_44931),
                                                               iota32_arg_27787 *
                                                               squot64(segred_group_sizze_33180,
                                                                       segment_sizze_nonzzero_44928)))) {
                int32_t y_33201 = ((__global int32_t *) mem_43577)[gtid_33043];
                float y_33202 = ((__global float *) mem_43584)[gtid_33043];
                int64_t binop_x_40658 = iota32_arg_27787 * gtid_33043;
                int64_t binop_x_40659 = gtid_33051 + binop_x_40658;
                int64_t new_index_40660 = squot64(binop_x_40659,
                                                  iota32_arg_27815);
                int64_t binop_y_40666 = iota32_arg_27815 * new_index_40660;
                int64_t new_index_40667 = binop_x_40659 - binop_y_40666;
                float x_33204 = ((__global float *) mem_43581)[new_index_40660 *
                                                               iota32_arg_27815 +
                                                               new_index_40667];
                float x_33205 = ((__global float *) mem_43460)[gtid_33051];
                int32_t index_primexp_40624 = sext_i64_i32(gtid_33051);
                float defunc_0_f_res_33207 = x_33204 / y_33202;
                bool cond_33208 = slt32(index_primexp_40624, y_33201);
                bool isnan_res_33209;
                
                isnan_res_33209 = futrts_isnan32(defunc_0_f_res_33207);
                
                bool cond_t_res_33210 = !isnan_res_33209;
                bool x_33211 = cond_33208 && cond_t_res_33210;
                float abs_res_33212 = (float) fabs(defunc_0_f_res_33207);
                bool defunc_2_f_res_t_res_33213 = x_33205 < abs_res_33212;
                bool x_33214 = x_33211 && defunc_2_f_res_t_res_33213;
                float defunc_1_f_res_33215;
                
                if (cond_33208) {
                    defunc_1_f_res_33215 = defunc_0_f_res_33207;
                } else {
                    defunc_1_f_res_33215 = 0.0F;
                }
                // save map-out results
                {
                    ((__global float *) mem_43594)[gtid_33043 *
                                                   iota32_arg_27787 +
                                                   gtid_33051] =
                        defunc_0_f_res_33207;
                }
                // save results to be reduced
                {
                    ((__local
                      bool *) red_arr_mem_44935)[sext_i32_i64(local_tid_44931)] =
                        x_33214;
                    ((__local
                      int32_t *) red_arr_mem_44937)[sext_i32_i64(local_tid_44931)] =
                        index_primexp_40624;
                    ((__local
                      float *) red_arr_mem_44939)[sext_i32_i64(local_tid_44931)] =
                        defunc_1_f_res_33215;
                }
            } else {
                ((__local
                  bool *) red_arr_mem_44935)[sext_i32_i64(local_tid_44931)] = 0;
                ((__local
                  int32_t *) red_arr_mem_44937)[sext_i32_i64(local_tid_44931)] =
                    -1;
                ((__local
                  float *) red_arr_mem_44939)[sext_i32_i64(local_tid_44931)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, iota32_arg_27787)) {
            // perform segmented scan to imitate reduction
            {
                bool x_33187;
                int32_t x_33188;
                float x_33189;
                bool x_33190;
                int32_t x_33191;
                float x_33192;
                bool x_44944;
                int32_t x_44945;
                float x_44946;
                bool x_44947;
                int32_t x_44948;
                float x_44949;
                bool ltid_in_bounds_44958;
                
                ltid_in_bounds_44958 = slt64(sext_i32_i64(local_tid_44931),
                                             iota32_arg_27787 *
                                             squot64(segred_group_sizze_33180,
                                                     segment_sizze_nonzzero_44928));
                
                int32_t skip_threads_44959;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44958) {
                        x_33190 = ((volatile __local
                                    bool *) red_arr_mem_44935)[sext_i32_i64(local_tid_44931)];
                        x_33191 = ((volatile __local
                                    int32_t *) red_arr_mem_44937)[sext_i32_i64(local_tid_44931)];
                        x_33192 = ((volatile __local
                                    float *) red_arr_mem_44939)[sext_i32_i64(local_tid_44931)];
                        if ((local_tid_44931 - squot32(local_tid_44931, 32) *
                             32) == 0) {
                            x_33187 = x_33190;
                            x_33188 = x_33191;
                            x_33189 = x_33192;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44959 = 1;
                    while (slt32(skip_threads_44959, 32)) {
                        if (sle32(skip_threads_44959, local_tid_44931 -
                                  squot32(local_tid_44931, 32) * 32) &&
                            ltid_in_bounds_44958) {
                            // read operands
                            {
                                x_33187 = ((volatile __local
                                            bool *) red_arr_mem_44935)[sext_i32_i64(local_tid_44931) -
                                                                       sext_i32_i64(skip_threads_44959)];
                                x_33188 = ((volatile __local
                                            int32_t *) red_arr_mem_44937)[sext_i32_i64(local_tid_44931) -
                                                                          sext_i32_i64(skip_threads_44959)];
                                x_33189 = ((volatile __local
                                            float *) red_arr_mem_44939)[sext_i32_i64(local_tid_44931) -
                                                                        sext_i32_i64(skip_threads_44959)];
                            }
                            // perform operation
                            {
                                bool inactive_44960 =
                                     slt64(srem64(sext_i32_i64(local_tid_44931),
                                                  iota32_arg_27787),
                                           sext_i32_i64(local_tid_44931) -
                                           sext_i32_i64(local_tid_44931 -
                                           skip_threads_44959));
                                
                                if (inactive_44960) {
                                    x_33187 = x_33190;
                                    x_33188 = x_33191;
                                    x_33189 = x_33192;
                                }
                                if (!inactive_44960) {
                                    bool defunc_1_op_res_33193;
                                    int32_t defunc_1_op_res_33194;
                                    
                                    if (x_33187) {
                                        defunc_1_op_res_33193 = x_33187;
                                        defunc_1_op_res_33194 = x_33188;
                                    } else {
                                        bool x_33195 = x_33190 && x_33190;
                                        bool x_33196 = !x_33190;
                                        bool y_33197 = x_33187 && x_33196;
                                        bool defunc_1_op_res_f_res_33198 =
                                             x_33195 || y_33197;
                                        int32_t defunc_1_op_res_f_res_33199;
                                        
                                        if (x_33190) {
                                            defunc_1_op_res_f_res_33199 =
                                                x_33191;
                                        } else {
                                            defunc_1_op_res_f_res_33199 =
                                                x_33188;
                                        }
                                        defunc_1_op_res_33193 =
                                            defunc_1_op_res_f_res_33198;
                                        defunc_1_op_res_33194 =
                                            defunc_1_op_res_f_res_33199;
                                    }
                                    
                                    float defunc_1_op_res_33200 = x_33189 +
                                          x_33192;
                                    
                                    x_33187 = defunc_1_op_res_33193;
                                    x_33188 = defunc_1_op_res_33194;
                                    x_33189 = defunc_1_op_res_33200;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44933, skip_threads_44959)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44959, local_tid_44931 -
                                  squot32(local_tid_44931, 32) * 32) &&
                            ltid_in_bounds_44958) {
                            // write result
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_44935)[sext_i32_i64(local_tid_44931)] =
                                    x_33187;
                                x_33190 = x_33187;
                                ((volatile __local
                                  int32_t *) red_arr_mem_44937)[sext_i32_i64(local_tid_44931)] =
                                    x_33188;
                                x_33191 = x_33188;
                                ((volatile __local
                                  float *) red_arr_mem_44939)[sext_i32_i64(local_tid_44931)] =
                                    x_33189;
                                x_33192 = x_33189;
                            }
                        }
                        if (sle32(wave_sizze_44933, skip_threads_44959)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44959 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44931 - squot32(local_tid_44931, 32) * 32) ==
                        31 && ltid_in_bounds_44958) {
                        ((volatile __local
                          bool *) red_arr_mem_44935)[sext_i32_i64(squot32(local_tid_44931,
                                                                          32))] =
                            x_33187;
                        ((volatile __local
                          int32_t *) red_arr_mem_44937)[sext_i32_i64(squot32(local_tid_44931,
                                                                             32))] =
                            x_33188;
                        ((volatile __local
                          float *) red_arr_mem_44939)[sext_i32_i64(squot32(local_tid_44931,
                                                                           32))] =
                            x_33189;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44961;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44931, 32) == 0 &&
                            ltid_in_bounds_44958) {
                            x_44947 = ((volatile __local
                                        bool *) red_arr_mem_44935)[sext_i32_i64(local_tid_44931)];
                            x_44948 = ((volatile __local
                                        int32_t *) red_arr_mem_44937)[sext_i32_i64(local_tid_44931)];
                            x_44949 = ((volatile __local
                                        float *) red_arr_mem_44939)[sext_i32_i64(local_tid_44931)];
                            if ((local_tid_44931 - squot32(local_tid_44931,
                                                           32) * 32) == 0) {
                                x_44944 = x_44947;
                                x_44945 = x_44948;
                                x_44946 = x_44949;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44961 = 1;
                        while (slt32(skip_threads_44961, 32)) {
                            if (sle32(skip_threads_44961, local_tid_44931 -
                                      squot32(local_tid_44931, 32) * 32) &&
                                (squot32(local_tid_44931, 32) == 0 &&
                                 ltid_in_bounds_44958)) {
                                // read operands
                                {
                                    x_44944 = ((volatile __local
                                                bool *) red_arr_mem_44935)[sext_i32_i64(local_tid_44931) -
                                                                           sext_i32_i64(skip_threads_44961)];
                                    x_44945 = ((volatile __local
                                                int32_t *) red_arr_mem_44937)[sext_i32_i64(local_tid_44931) -
                                                                              sext_i32_i64(skip_threads_44961)];
                                    x_44946 = ((volatile __local
                                                float *) red_arr_mem_44939)[sext_i32_i64(local_tid_44931) -
                                                                            sext_i32_i64(skip_threads_44961)];
                                }
                                // perform operation
                                {
                                    bool inactive_44962 =
                                         slt64(srem64(sext_i32_i64(local_tid_44931 *
                                                      32 + 32 - 1),
                                                      iota32_arg_27787),
                                               sext_i32_i64(local_tid_44931 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44931 -
                                                             skip_threads_44961) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44962) {
                                        x_44944 = x_44947;
                                        x_44945 = x_44948;
                                        x_44946 = x_44949;
                                    }
                                    if (!inactive_44962) {
                                        bool defunc_1_op_res_44950;
                                        int32_t defunc_1_op_res_44951;
                                        
                                        if (x_44944) {
                                            defunc_1_op_res_44950 = x_44944;
                                            defunc_1_op_res_44951 = x_44945;
                                        } else {
                                            bool x_44952 = x_44947 && x_44947;
                                            bool x_44953 = !x_44947;
                                            bool y_44954 = x_44944 && x_44953;
                                            bool defunc_1_op_res_f_res_44955 =
                                                 x_44952 || y_44954;
                                            int32_t defunc_1_op_res_f_res_44956;
                                            
                                            if (x_44947) {
                                                defunc_1_op_res_f_res_44956 =
                                                    x_44948;
                                            } else {
                                                defunc_1_op_res_f_res_44956 =
                                                    x_44945;
                                            }
                                            defunc_1_op_res_44950 =
                                                defunc_1_op_res_f_res_44955;
                                            defunc_1_op_res_44951 =
                                                defunc_1_op_res_f_res_44956;
                                        }
                                        
                                        float defunc_1_op_res_44957 = x_44946 +
                                              x_44949;
                                        
                                        x_44944 = defunc_1_op_res_44950;
                                        x_44945 = defunc_1_op_res_44951;
                                        x_44946 = defunc_1_op_res_44957;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44933, skip_threads_44961)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44961, local_tid_44931 -
                                      squot32(local_tid_44931, 32) * 32) &&
                                (squot32(local_tid_44931, 32) == 0 &&
                                 ltid_in_bounds_44958)) {
                                // write result
                                {
                                    ((volatile __local
                                      bool *) red_arr_mem_44935)[sext_i32_i64(local_tid_44931)] =
                                        x_44944;
                                    x_44947 = x_44944;
                                    ((volatile __local
                                      int32_t *) red_arr_mem_44937)[sext_i32_i64(local_tid_44931)] =
                                        x_44945;
                                    x_44948 = x_44945;
                                    ((volatile __local
                                      float *) red_arr_mem_44939)[sext_i32_i64(local_tid_44931)] =
                                        x_44946;
                                    x_44949 = x_44946;
                                }
                            }
                            if (sle32(wave_sizze_44933, skip_threads_44961)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44961 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44931, 32) == 0 ||
                          !ltid_in_bounds_44958)) {
                        // read operands
                        {
                            x_33190 = x_33187;
                            x_33191 = x_33188;
                            x_33192 = x_33189;
                            x_33187 = ((__local
                                        bool *) red_arr_mem_44935)[sext_i32_i64(squot32(local_tid_44931,
                                                                                        32)) -
                                                                   (int64_t) 1];
                            x_33188 = ((__local
                                        int32_t *) red_arr_mem_44937)[sext_i32_i64(squot32(local_tid_44931,
                                                                                           32)) -
                                                                      (int64_t) 1];
                            x_33189 = ((__local
                                        float *) red_arr_mem_44939)[sext_i32_i64(squot32(local_tid_44931,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44963 =
                                 slt64(srem64(sext_i32_i64(local_tid_44931),
                                              iota32_arg_27787),
                                       sext_i32_i64(local_tid_44931) -
                                       sext_i32_i64(squot32(local_tid_44931,
                                                            32) * 32 - 1));
                            
                            if (inactive_44963) {
                                x_33187 = x_33190;
                                x_33188 = x_33191;
                                x_33189 = x_33192;
                            }
                            if (!inactive_44963) {
                                bool defunc_1_op_res_33193;
                                int32_t defunc_1_op_res_33194;
                                
                                if (x_33187) {
                                    defunc_1_op_res_33193 = x_33187;
                                    defunc_1_op_res_33194 = x_33188;
                                } else {
                                    bool x_33195 = x_33190 && x_33190;
                                    bool x_33196 = !x_33190;
                                    bool y_33197 = x_33187 && x_33196;
                                    bool defunc_1_op_res_f_res_33198 =
                                         x_33195 || y_33197;
                                    int32_t defunc_1_op_res_f_res_33199;
                                    
                                    if (x_33190) {
                                        defunc_1_op_res_f_res_33199 = x_33191;
                                    } else {
                                        defunc_1_op_res_f_res_33199 = x_33188;
                                    }
                                    defunc_1_op_res_33193 =
                                        defunc_1_op_res_f_res_33198;
                                    defunc_1_op_res_33194 =
                                        defunc_1_op_res_f_res_33199;
                                }
                                
                                float defunc_1_op_res_33200 = x_33189 + x_33192;
                                
                                x_33187 = defunc_1_op_res_33193;
                                x_33188 = defunc_1_op_res_33194;
                                x_33189 = defunc_1_op_res_33200;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              bool *) red_arr_mem_44935)[sext_i32_i64(local_tid_44931)] =
                                x_33187;
                            ((__local
                              int32_t *) red_arr_mem_44937)[sext_i32_i64(local_tid_44931)] =
                                x_33188;
                            ((__local
                              float *) red_arr_mem_44939)[sext_i32_i64(local_tid_44931)] =
                                x_33189;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44931, 32) == 0) {
                        ((__local
                          bool *) red_arr_mem_44935)[sext_i32_i64(local_tid_44931)] =
                            x_33190;
                        ((__local
                          int32_t *) red_arr_mem_44937)[sext_i32_i64(local_tid_44931)] =
                            x_33191;
                        ((__local
                          float *) red_arr_mem_44939)[sext_i32_i64(local_tid_44931)] =
                            x_33192;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44943) *
                      squot64(segred_group_sizze_33180,
                              segment_sizze_nonzzero_44928) +
                      sext_i32_i64(local_tid_44931), m_27392) &&
                slt64(sext_i32_i64(local_tid_44931),
                      squot64(segred_group_sizze_33180,
                              segment_sizze_nonzzero_44928))) {
                ((__global
                  bool *) mem_43587)[sext_i32_i64(virt_group_id_44943) *
                                     squot64(segred_group_sizze_33180,
                                             segment_sizze_nonzzero_44928) +
                                     sext_i32_i64(local_tid_44931)] = ((__local
                                                                        bool *) red_arr_mem_44935)[(sext_i32_i64(local_tid_44931) +
                                                                                                    (int64_t) 1) *
                                                                                                   segment_sizze_nonzzero_44928 -
                                                                                                   (int64_t) 1];
                ((__global
                  int32_t *) mem_43589)[sext_i32_i64(virt_group_id_44943) *
                                        squot64(segred_group_sizze_33180,
                                                segment_sizze_nonzzero_44928) +
                                        sext_i32_i64(local_tid_44931)] =
                    ((__local
                      int32_t *) red_arr_mem_44937)[(sext_i32_i64(local_tid_44931) +
                                                     (int64_t) 1) *
                                                    segment_sizze_nonzzero_44928 -
                                                    (int64_t) 1];
                ((__global
                  float *) mem_43591)[sext_i32_i64(virt_group_id_44943) *
                                      squot64(segred_group_sizze_33180,
                                              segment_sizze_nonzzero_44928) +
                                      sext_i32_i64(local_tid_44931)] = ((__local
                                                                         float *) red_arr_mem_44939)[(sext_i32_i64(local_tid_44931) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_44928 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33180
}
__kernel void mainMagnitudezicopy_44028(int64_t m_28044, int64_t i32_res_28192,
                                        int64_t ctx_param_ext_42758,
                                        int64_t ctx_param_ext_42759,
                                        int64_t ctx_param_ext_42761, __global
                                        unsigned char *mem_param_42763, __global
                                        unsigned char *mem_42768)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_44028;
    int32_t copy_ltid_44029;
    int32_t copy_gid_44030;
    
    copy_gtid_44028 = get_global_id(0);
    copy_ltid_44029 = get_local_id(0);
    copy_gid_44030 = get_group_id(0);
    if (slt64(sext_i32_i64(copy_gtid_44028), m_28044 * i32_res_28192)) {
        ((__global float *) mem_42768)[(sext_i32_i64(copy_gtid_44028) -
                                        squot64(sext_i32_i64(copy_gtid_44028),
                                                i32_res_28192) *
                                        i32_res_28192) * m_28044 +
                                       squot64(sext_i32_i64(copy_gtid_44028),
                                               i32_res_28192)] = ((__global
                                                                   float *) mem_param_42763)[ctx_param_ext_42758 +
                                                                                             (squot64(sext_i32_i64(copy_gtid_44028),
                                                                                                      i32_res_28192) *
                                                                                              ctx_param_ext_42759 +
                                                                                              (sext_i32_i64(copy_gtid_44028) -
                                                                                               squot64(sext_i32_i64(copy_gtid_44028),
                                                                                                       i32_res_28192) *
                                                                                               i32_res_28192) *
                                                                                              ctx_param_ext_42761)];
    }
    
  error_0:
    return;
}
__kernel void mainMagnitudeziscan_stage1_35454(__global int *global_failure,
                                               __local volatile
                                               int64_t *scan_arr_mem_44440_backing_aligned_0,
                                               int64_t N_28043, int64_t m_28044,
                                               int32_t num_threads_44434,
                                               __global
                                               unsigned char *images_mem_42559,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43318,
                                               __global
                                               unsigned char *mem_43341,
                                               __global
                                               unsigned char *mem_43344)
{
    #define segscan_group_sizze_35471 (mainMagnitudezisegscan_group_sizze_35448)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44440_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44440_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44435;
    int32_t local_tid_44436;
    int64_t group_sizze_44439;
    int32_t wave_sizze_44438;
    int32_t group_tid_44437;
    
    global_tid_44435 = get_global_id(0);
    local_tid_44436 = get_local_id(0);
    group_sizze_44439 = get_local_size(0);
    wave_sizze_44438 = LOCKSTEP_WIDTH;
    group_tid_44437 = get_group_id(0);
    
    int32_t phys_tid_35454;
    
    phys_tid_35454 = global_tid_44435;
    
    __local char *scan_arr_mem_44440;
    
    scan_arr_mem_44440 = (__local char *) scan_arr_mem_44440_backing_0;
    
    int64_t x_35476;
    int64_t x_35477;
    
    x_35476 = (int64_t) 0;
    for (int64_t j_44442 = 0; j_44442 < sdiv_up64(m_28044 * N_28043,
                                                  sext_i32_i64(num_threads_44434));
         j_44442++) {
        int64_t chunk_offset_44443 = segscan_group_sizze_35471 * j_44442 +
                sext_i32_i64(group_tid_44437) * (segscan_group_sizze_35471 *
                                                 sdiv_up64(m_28044 * N_28043,
                                                           sext_i32_i64(num_threads_44434)));
        int64_t flat_idx_44444 = chunk_offset_44443 +
                sext_i32_i64(local_tid_44436);
        int64_t gtid_35445 = squot64(flat_idx_44444, N_28043);
        int64_t gtid_35453 = flat_idx_44444 - squot64(flat_idx_44444, N_28043) *
                N_28043;
        
        // threads in bounds read input
        {
            if (slt64(gtid_35445, m_28044) && slt64(gtid_35453, N_28043)) {
                float x_35481 = ((__global
                                  float *) images_mem_42559)[gtid_35445 *
                                                             N_28043 +
                                                             gtid_35453];
                bool isnan_res_35483;
                
                isnan_res_35483 = futrts_isnan32(x_35481);
                
                bool cond_35484 = !isnan_res_35483;
                float defunc_0_f_res_35485;
                
                if (cond_35484) {
                    float x_35482 = ((__global
                                      float *) defunc_3_map_res_mem_43318)[gtid_35445 *
                                                                           N_28043 +
                                                                           gtid_35453];
                    float defunc_0_f_res_t_res_35486 = x_35481 - x_35482;
                    
                    defunc_0_f_res_35485 = defunc_0_f_res_t_res_35486;
                } else {
                    defunc_0_f_res_35485 = NAN;
                }
                
                bool isnan_res_35487;
                
                isnan_res_35487 = futrts_isnan32(defunc_0_f_res_35485);
                
                bool defunc_0_p_res_35488 = !isnan_res_35487;
                int64_t defunc_0_f_res_35489 =
                        btoi_bool_i64(defunc_0_p_res_35488);
                
                // write to-scan values to parameters
                {
                    x_35477 = defunc_0_f_res_35489;
                }
                // write mapped values results to global memory
                {
                    ((__global float *) mem_43344)[gtid_35445 * N_28043 +
                                                   gtid_35453] =
                        defunc_0_f_res_35485;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_35445, m_28044) && slt64(gtid_35453,
                                                          N_28043))) {
                    x_35477 = (int64_t) 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_35478 = add64(x_35476, x_35477);
                
                ((__local
                  int64_t *) scan_arr_mem_44440)[sext_i32_i64(local_tid_44436)] =
                    defunc_1_op_res_35478;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_44445;
            int64_t x_44446;
            int64_t x_44448;
            int64_t x_44449;
            bool ltid_in_bounds_44451;
            
            ltid_in_bounds_44451 = slt64(sext_i32_i64(local_tid_44436),
                                         segscan_group_sizze_35471);
            
            int32_t skip_threads_44452;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_44451) {
                    x_44446 = ((volatile __local
                                int64_t *) scan_arr_mem_44440)[sext_i32_i64(local_tid_44436)];
                    if ((local_tid_44436 - squot32(local_tid_44436, 32) * 32) ==
                        0) {
                        x_44445 = x_44446;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_44452 = 1;
                while (slt32(skip_threads_44452, 32)) {
                    if (sle32(skip_threads_44452, local_tid_44436 -
                              squot32(local_tid_44436, 32) * 32) &&
                        ltid_in_bounds_44451) {
                        // read operands
                        {
                            x_44445 = ((volatile __local
                                        int64_t *) scan_arr_mem_44440)[sext_i32_i64(local_tid_44436) -
                                                                       sext_i32_i64(skip_threads_44452)];
                        }
                        // perform operation
                        {
                            bool inactive_44453 =
                                 slt64(srem64(sext_i32_i64(local_tid_44436) +
                                              chunk_offset_44443, N_28043),
                                       sext_i32_i64(local_tid_44436) +
                                       chunk_offset_44443 -
                                       (sext_i32_i64(local_tid_44436 -
                                        skip_threads_44452) +
                                        chunk_offset_44443));
                            
                            if (inactive_44453) {
                                x_44445 = x_44446;
                            }
                            if (!inactive_44453) {
                                int64_t defunc_1_op_res_44447 = add64(x_44445,
                                                                      x_44446);
                                
                                x_44445 = defunc_1_op_res_44447;
                            }
                        }
                    }
                    if (sle32(wave_sizze_44438, skip_threads_44452)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_44452, local_tid_44436 -
                              squot32(local_tid_44436, 32) * 32) &&
                        ltid_in_bounds_44451) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_44440)[sext_i32_i64(local_tid_44436)] =
                                x_44445;
                            x_44446 = x_44445;
                        }
                    }
                    if (sle32(wave_sizze_44438, skip_threads_44452)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_44452 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_44436 - squot32(local_tid_44436, 32) * 32) ==
                    31 && ltid_in_bounds_44451) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_44440)[sext_i32_i64(squot32(local_tid_44436,
                                                                          32))] =
                        x_44445;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_44454;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_44436, 32) == 0 &&
                        ltid_in_bounds_44451) {
                        x_44449 = ((volatile __local
                                    int64_t *) scan_arr_mem_44440)[sext_i32_i64(local_tid_44436)];
                        if ((local_tid_44436 - squot32(local_tid_44436, 32) *
                             32) == 0) {
                            x_44448 = x_44449;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44454 = 1;
                    while (slt32(skip_threads_44454, 32)) {
                        if (sle32(skip_threads_44454, local_tid_44436 -
                                  squot32(local_tid_44436, 32) * 32) &&
                            (squot32(local_tid_44436, 32) == 0 &&
                             ltid_in_bounds_44451)) {
                            // read operands
                            {
                                x_44448 = ((volatile __local
                                            int64_t *) scan_arr_mem_44440)[sext_i32_i64(local_tid_44436) -
                                                                           sext_i32_i64(skip_threads_44454)];
                            }
                            // perform operation
                            {
                                bool inactive_44455 =
                                     slt64(srem64(sext_i32_i64(local_tid_44436 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_44443, N_28043),
                                           sext_i32_i64(local_tid_44436 * 32 +
                                           32 - 1) + chunk_offset_44443 -
                                           (sext_i32_i64((local_tid_44436 -
                                                          skip_threads_44454) *
                                            32 + 32 - 1) + chunk_offset_44443));
                                
                                if (inactive_44455) {
                                    x_44448 = x_44449;
                                }
                                if (!inactive_44455) {
                                    int64_t defunc_1_op_res_44450 =
                                            add64(x_44448, x_44449);
                                    
                                    x_44448 = defunc_1_op_res_44450;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44438, skip_threads_44454)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44454, local_tid_44436 -
                                  squot32(local_tid_44436, 32) * 32) &&
                            (squot32(local_tid_44436, 32) == 0 &&
                             ltid_in_bounds_44451)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_44440)[sext_i32_i64(local_tid_44436)] =
                                    x_44448;
                                x_44449 = x_44448;
                            }
                        }
                        if (sle32(wave_sizze_44438, skip_threads_44454)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44454 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_44436, 32) == 0 ||
                      !ltid_in_bounds_44451)) {
                    // read operands
                    {
                        x_44446 = x_44445;
                        x_44445 = ((__local
                                    int64_t *) scan_arr_mem_44440)[sext_i32_i64(squot32(local_tid_44436,
                                                                                        32)) -
                                                                   (int64_t) 1];
                    }
                    // perform operation
                    {
                        bool inactive_44456 =
                             slt64(srem64(sext_i32_i64(local_tid_44436) +
                                          chunk_offset_44443, N_28043),
                                   sext_i32_i64(local_tid_44436) +
                                   chunk_offset_44443 -
                                   (sext_i32_i64(squot32(local_tid_44436, 32) *
                                    32 - 1) + chunk_offset_44443));
                        
                        if (inactive_44456) {
                            x_44445 = x_44446;
                        }
                        if (!inactive_44456) {
                            int64_t defunc_1_op_res_44447 = add64(x_44445,
                                                                  x_44446);
                            
                            x_44445 = defunc_1_op_res_44447;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_44440)[sext_i32_i64(local_tid_44436)] =
                            x_44445;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_44436, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_44440)[sext_i32_i64(local_tid_44436)] =
                        x_44446;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_35445, m_28044) && slt64(gtid_35453, N_28043)) {
                    ((__global int64_t *) mem_43341)[gtid_35445 * N_28043 +
                                                     gtid_35453] = ((__local
                                                                     int64_t *) scan_arr_mem_44440)[sext_i32_i64(local_tid_44436)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_44457 = slt64(srem64(chunk_offset_44443 +
                                                          segscan_group_sizze_35471,
                                                          N_28043),
                                                   chunk_offset_44443 +
                                                   segscan_group_sizze_35471 -
                                                   (chunk_offset_44443 +
                                                    segscan_group_sizze_35471 -
                                                    (int64_t) 1));
                bool should_load_carry_44458 = local_tid_44436 == 0 &&
                     !crosses_segment_44457;
                
                if (should_load_carry_44458) {
                    x_35476 = ((__local
                                int64_t *) scan_arr_mem_44440)[segscan_group_sizze_35471 -
                                                               (int64_t) 1];
                }
                if (!should_load_carry_44458) {
                    x_35476 = (int64_t) 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_35471
}
__kernel void mainMagnitudeziscan_stage1_36996(__global int *global_failure,
                                               __local volatile
                                               int64_t *scan_arr_mem_44843_backing_aligned_0,
                                               int64_t N_28043, int64_t m_28044,
                                               int64_t iota32_arg_28439,
                                               int32_t num_threads_44837,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43356,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43422,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43423,
                                               __global
                                               unsigned char *defunc_0_f_res_mem_43457,
                                               __global
                                               unsigned char *mem_43517,
                                               __global
                                               unsigned char *mem_43521)
{
    #define segscan_group_sizze_37074 (mainMagnitudezisegscan_group_sizze_36990)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44843_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44843_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44838;
    int32_t local_tid_44839;
    int64_t group_sizze_44842;
    int32_t wave_sizze_44841;
    int32_t group_tid_44840;
    
    global_tid_44838 = get_global_id(0);
    local_tid_44839 = get_local_id(0);
    group_sizze_44842 = get_local_size(0);
    wave_sizze_44841 = LOCKSTEP_WIDTH;
    group_tid_44840 = get_group_id(0);
    
    int32_t phys_tid_36996;
    
    phys_tid_36996 = global_tid_44838;
    
    __local char *scan_arr_mem_44843;
    
    scan_arr_mem_44843 = (__local char *) scan_arr_mem_44843_backing_0;
    
    float x_37078;
    float x_37079;
    
    x_37078 = 0.0F;
    for (int64_t j_44845 = 0; j_44845 < sdiv_up64(m_28044 * iota32_arg_28439,
                                                  sext_i32_i64(num_threads_44837));
         j_44845++) {
        int64_t chunk_offset_44846 = segscan_group_sizze_37074 * j_44845 +
                sext_i32_i64(group_tid_44840) * (segscan_group_sizze_37074 *
                                                 sdiv_up64(m_28044 *
                                                           iota32_arg_28439,
                                                           sext_i32_i64(num_threads_44837)));
        int64_t flat_idx_44847 = chunk_offset_44846 +
                sext_i32_i64(local_tid_44839);
        int64_t gtid_36987 = squot64(flat_idx_44847, iota32_arg_28439);
        int64_t gtid_36995 = flat_idx_44847 - squot64(flat_idx_44847,
                                                      iota32_arg_28439) *
                iota32_arg_28439;
        
        // threads in bounds read input
        {
            if (slt64(gtid_36987, m_28044) && slt64(gtid_36995,
                                                    iota32_arg_28439)) {
                int32_t y_37085 = ((__global int32_t *) mem_43517)[gtid_36987];
                int32_t index_primexp_40616 = sext_i64_i32(gtid_36995);
                bool cond_37088 = sle32(y_37085, index_primexp_40616);
                float defunc_0_f_res_37089;
                
                if (cond_37088) {
                    defunc_0_f_res_37089 = 0.0F;
                } else {
                    int32_t x_37081 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43423)[gtid_36987];
                    int32_t x_37082 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43422)[gtid_36987];
                    float x_37083 = ((__global
                                      float *) defunc_0_f_res_mem_43457)[gtid_36987];
                    bool cond_37090 = index_primexp_40616 == 0;
                    float defunc_0_f_res_f_res_37091;
                    
                    if (cond_37090) {
                        defunc_0_f_res_f_res_37091 = x_37083;
                    } else {
                        int32_t i_37092 = add32(x_37081, index_primexp_40616);
                        int64_t i_37093 = sext_i32_i64(i_37092);
                        float x_37094 = ((__global
                                          float *) defunc_4_map_res_mem_43356)[gtid_36987 *
                                                                               N_28043 +
                                                                               i_37093];
                        int32_t x_37095 = sub32(x_37081, x_37082);
                        int32_t i_37096 = add32(x_37095, index_primexp_40616);
                        int64_t i_37097 = sext_i32_i64(i_37096);
                        float y_37098 = ((__global
                                          float *) defunc_4_map_res_mem_43356)[gtid_36987 *
                                                                               N_28043 +
                                                                               i_37097];
                        float defunc_0_f_res_f_res_f_res_37099 = x_37094 -
                              y_37098;
                        
                        defunc_0_f_res_f_res_37091 =
                            defunc_0_f_res_f_res_f_res_37099;
                    }
                    defunc_0_f_res_37089 = defunc_0_f_res_f_res_37091;
                }
                // write to-scan values to parameters
                {
                    x_37079 = defunc_0_f_res_37089;
                }
                // write mapped values results to global memory
                { }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_36987, m_28044) && slt64(gtid_36995,
                                                          iota32_arg_28439))) {
                    x_37079 = 0.0F;
                }
            }
            // combine with carry and write to local memory
            {
                float defunc_1_op_res_37080 = x_37078 + x_37079;
                
                ((__local
                  float *) scan_arr_mem_44843)[sext_i32_i64(local_tid_44839)] =
                    defunc_1_op_res_37080;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float x_44848;
            float x_44849;
            float x_44851;
            float x_44852;
            bool ltid_in_bounds_44854;
            
            ltid_in_bounds_44854 = slt64(sext_i32_i64(local_tid_44839),
                                         segscan_group_sizze_37074);
            
            int32_t skip_threads_44855;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_44854) {
                    x_44849 = ((volatile __local
                                float *) scan_arr_mem_44843)[sext_i32_i64(local_tid_44839)];
                    if ((local_tid_44839 - squot32(local_tid_44839, 32) * 32) ==
                        0) {
                        x_44848 = x_44849;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_44855 = 1;
                while (slt32(skip_threads_44855, 32)) {
                    if (sle32(skip_threads_44855, local_tid_44839 -
                              squot32(local_tid_44839, 32) * 32) &&
                        ltid_in_bounds_44854) {
                        // read operands
                        {
                            x_44848 = ((volatile __local
                                        float *) scan_arr_mem_44843)[sext_i32_i64(local_tid_44839) -
                                                                     sext_i32_i64(skip_threads_44855)];
                        }
                        // perform operation
                        {
                            bool inactive_44856 =
                                 slt64(srem64(sext_i32_i64(local_tid_44839) +
                                              chunk_offset_44846,
                                              iota32_arg_28439),
                                       sext_i32_i64(local_tid_44839) +
                                       chunk_offset_44846 -
                                       (sext_i32_i64(local_tid_44839 -
                                        skip_threads_44855) +
                                        chunk_offset_44846));
                            
                            if (inactive_44856) {
                                x_44848 = x_44849;
                            }
                            if (!inactive_44856) {
                                float defunc_1_op_res_44850 = x_44848 + x_44849;
                                
                                x_44848 = defunc_1_op_res_44850;
                            }
                        }
                    }
                    if (sle32(wave_sizze_44841, skip_threads_44855)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_44855, local_tid_44839 -
                              squot32(local_tid_44839, 32) * 32) &&
                        ltid_in_bounds_44854) {
                        // write result
                        {
                            ((volatile __local
                              float *) scan_arr_mem_44843)[sext_i32_i64(local_tid_44839)] =
                                x_44848;
                            x_44849 = x_44848;
                        }
                    }
                    if (sle32(wave_sizze_44841, skip_threads_44855)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_44855 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_44839 - squot32(local_tid_44839, 32) * 32) ==
                    31 && ltid_in_bounds_44854) {
                    ((volatile __local
                      float *) scan_arr_mem_44843)[sext_i32_i64(squot32(local_tid_44839,
                                                                        32))] =
                        x_44848;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_44857;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_44839, 32) == 0 &&
                        ltid_in_bounds_44854) {
                        x_44852 = ((volatile __local
                                    float *) scan_arr_mem_44843)[sext_i32_i64(local_tid_44839)];
                        if ((local_tid_44839 - squot32(local_tid_44839, 32) *
                             32) == 0) {
                            x_44851 = x_44852;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44857 = 1;
                    while (slt32(skip_threads_44857, 32)) {
                        if (sle32(skip_threads_44857, local_tid_44839 -
                                  squot32(local_tid_44839, 32) * 32) &&
                            (squot32(local_tid_44839, 32) == 0 &&
                             ltid_in_bounds_44854)) {
                            // read operands
                            {
                                x_44851 = ((volatile __local
                                            float *) scan_arr_mem_44843)[sext_i32_i64(local_tid_44839) -
                                                                         sext_i32_i64(skip_threads_44857)];
                            }
                            // perform operation
                            {
                                bool inactive_44858 =
                                     slt64(srem64(sext_i32_i64(local_tid_44839 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_44846,
                                                  iota32_arg_28439),
                                           sext_i32_i64(local_tid_44839 * 32 +
                                           32 - 1) + chunk_offset_44846 -
                                           (sext_i32_i64((local_tid_44839 -
                                                          skip_threads_44857) *
                                            32 + 32 - 1) + chunk_offset_44846));
                                
                                if (inactive_44858) {
                                    x_44851 = x_44852;
                                }
                                if (!inactive_44858) {
                                    float defunc_1_op_res_44853 = x_44851 +
                                          x_44852;
                                    
                                    x_44851 = defunc_1_op_res_44853;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44841, skip_threads_44857)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44857, local_tid_44839 -
                                  squot32(local_tid_44839, 32) * 32) &&
                            (squot32(local_tid_44839, 32) == 0 &&
                             ltid_in_bounds_44854)) {
                            // write result
                            {
                                ((volatile __local
                                  float *) scan_arr_mem_44843)[sext_i32_i64(local_tid_44839)] =
                                    x_44851;
                                x_44852 = x_44851;
                            }
                        }
                        if (sle32(wave_sizze_44841, skip_threads_44857)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44857 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_44839, 32) == 0 ||
                      !ltid_in_bounds_44854)) {
                    // read operands
                    {
                        x_44849 = x_44848;
                        x_44848 = ((__local
                                    float *) scan_arr_mem_44843)[sext_i32_i64(squot32(local_tid_44839,
                                                                                      32)) -
                                                                 (int64_t) 1];
                    }
                    // perform operation
                    {
                        bool inactive_44859 =
                             slt64(srem64(sext_i32_i64(local_tid_44839) +
                                          chunk_offset_44846, iota32_arg_28439),
                                   sext_i32_i64(local_tid_44839) +
                                   chunk_offset_44846 -
                                   (sext_i32_i64(squot32(local_tid_44839, 32) *
                                    32 - 1) + chunk_offset_44846));
                        
                        if (inactive_44859) {
                            x_44848 = x_44849;
                        }
                        if (!inactive_44859) {
                            float defunc_1_op_res_44850 = x_44848 + x_44849;
                            
                            x_44848 = defunc_1_op_res_44850;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          float *) scan_arr_mem_44843)[sext_i32_i64(local_tid_44839)] =
                            x_44848;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_44839, 32) == 0) {
                    ((__local
                      float *) scan_arr_mem_44843)[sext_i32_i64(local_tid_44839)] =
                        x_44849;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_36987, m_28044) && slt64(gtid_36995,
                                                        iota32_arg_28439)) {
                    ((__global float *) mem_43521)[gtid_36987 *
                                                   iota32_arg_28439 +
                                                   gtid_36995] = ((__local
                                                                   float *) scan_arr_mem_44843)[sext_i32_i64(local_tid_44839)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_44860 = slt64(srem64(chunk_offset_44846 +
                                                          segscan_group_sizze_37074,
                                                          iota32_arg_28439),
                                                   chunk_offset_44846 +
                                                   segscan_group_sizze_37074 -
                                                   (chunk_offset_44846 +
                                                    segscan_group_sizze_37074 -
                                                    (int64_t) 1));
                bool should_load_carry_44861 = local_tid_44839 == 0 &&
                     !crosses_segment_44860;
                
                if (should_load_carry_44861) {
                    x_37078 = ((__local
                                float *) scan_arr_mem_44843)[segscan_group_sizze_37074 -
                                                             (int64_t) 1];
                }
                if (!should_load_carry_44861) {
                    x_37078 = 0.0F;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_37074
}
__kernel void mainMagnitudeziscan_stage2_35454(__global int *global_failure,
                                               __local volatile
                                               int64_t *scan_arr_mem_44464_backing_aligned_0,
                                               int64_t N_28043, int64_t m_28044,
                                               int64_t stage1_num_groups_44433,
                                               int32_t num_threads_44434,
                                               __global
                                               unsigned char *mem_43341)
{
    #define segscan_group_sizze_35471 (mainMagnitudezisegscan_group_sizze_35448)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44464_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44464_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44459;
    int32_t local_tid_44460;
    int64_t group_sizze_44463;
    int32_t wave_sizze_44462;
    int32_t group_tid_44461;
    
    global_tid_44459 = get_global_id(0);
    local_tid_44460 = get_local_id(0);
    group_sizze_44463 = get_local_size(0);
    wave_sizze_44462 = LOCKSTEP_WIDTH;
    group_tid_44461 = get_group_id(0);
    
    int32_t phys_tid_35454;
    
    phys_tid_35454 = global_tid_44459;
    
    __local char *scan_arr_mem_44464;
    
    scan_arr_mem_44464 = (__local char *) scan_arr_mem_44464_backing_0;
    
    int64_t flat_idx_44466;
    
    flat_idx_44466 = (sext_i32_i64(local_tid_44460) + (int64_t) 1) *
        (segscan_group_sizze_35471 * sdiv_up64(m_28044 * N_28043,
                                               sext_i32_i64(num_threads_44434))) -
        (int64_t) 1;
    
    int64_t gtid_35445;
    
    gtid_35445 = squot64(flat_idx_44466, N_28043);
    
    int64_t gtid_35453;
    
    gtid_35453 = flat_idx_44466 - squot64(flat_idx_44466, N_28043) * N_28043;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_35445, m_28044) && slt64(gtid_35453, N_28043)) {
            ((__local
              int64_t *) scan_arr_mem_44464)[sext_i32_i64(local_tid_44460)] =
                ((__global int64_t *) mem_43341)[gtid_35445 * N_28043 +
                                                 gtid_35453];
        } else {
            ((__local
              int64_t *) scan_arr_mem_44464)[sext_i32_i64(local_tid_44460)] =
                (int64_t) 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_35476;
    int64_t x_35477;
    int64_t x_44467;
    int64_t x_44468;
    bool ltid_in_bounds_44470;
    
    ltid_in_bounds_44470 = slt64(sext_i32_i64(local_tid_44460),
                                 stage1_num_groups_44433);
    
    int32_t skip_threads_44471;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44470) {
            x_35477 = ((volatile __local
                        int64_t *) scan_arr_mem_44464)[sext_i32_i64(local_tid_44460)];
            if ((local_tid_44460 - squot32(local_tid_44460, 32) * 32) == 0) {
                x_35476 = x_35477;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44471 = 1;
        while (slt32(skip_threads_44471, 32)) {
            if (sle32(skip_threads_44471, local_tid_44460 -
                      squot32(local_tid_44460, 32) * 32) &&
                ltid_in_bounds_44470) {
                // read operands
                {
                    x_35476 = ((volatile __local
                                int64_t *) scan_arr_mem_44464)[sext_i32_i64(local_tid_44460) -
                                                               sext_i32_i64(skip_threads_44471)];
                }
                // perform operation
                {
                    bool inactive_44472 =
                         slt64(srem64((sext_i32_i64(local_tid_44460) +
                                       (int64_t) 1) *
                                      (segscan_group_sizze_35471 *
                                       sdiv_up64(m_28044 * N_28043,
                                                 sext_i32_i64(num_threads_44434))) -
                                      (int64_t) 1, N_28043),
                               (sext_i32_i64(local_tid_44460) + (int64_t) 1) *
                               (segscan_group_sizze_35471 * sdiv_up64(m_28044 *
                                                                      N_28043,
                                                                      sext_i32_i64(num_threads_44434))) -
                               (int64_t) 1 - ((sext_i32_i64(local_tid_44460 -
                                               skip_threads_44471) +
                                               (int64_t) 1) *
                                              (segscan_group_sizze_35471 *
                                               sdiv_up64(m_28044 * N_28043,
                                                         sext_i32_i64(num_threads_44434))) -
                                              (int64_t) 1));
                    
                    if (inactive_44472) {
                        x_35476 = x_35477;
                    }
                    if (!inactive_44472) {
                        int64_t defunc_1_op_res_35478 = add64(x_35476, x_35477);
                        
                        x_35476 = defunc_1_op_res_35478;
                    }
                }
            }
            if (sle32(wave_sizze_44462, skip_threads_44471)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44471, local_tid_44460 -
                      squot32(local_tid_44460, 32) * 32) &&
                ltid_in_bounds_44470) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_44464)[sext_i32_i64(local_tid_44460)] =
                        x_35476;
                    x_35477 = x_35476;
                }
            }
            if (sle32(wave_sizze_44462, skip_threads_44471)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44471 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44460 - squot32(local_tid_44460, 32) * 32) == 31 &&
            ltid_in_bounds_44470) {
            ((volatile __local
              int64_t *) scan_arr_mem_44464)[sext_i32_i64(squot32(local_tid_44460,
                                                                  32))] =
                x_35476;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44473;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44460, 32) == 0 && ltid_in_bounds_44470) {
                x_44468 = ((volatile __local
                            int64_t *) scan_arr_mem_44464)[sext_i32_i64(local_tid_44460)];
                if ((local_tid_44460 - squot32(local_tid_44460, 32) * 32) ==
                    0) {
                    x_44467 = x_44468;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44473 = 1;
            while (slt32(skip_threads_44473, 32)) {
                if (sle32(skip_threads_44473, local_tid_44460 -
                          squot32(local_tid_44460, 32) * 32) &&
                    (squot32(local_tid_44460, 32) == 0 &&
                     ltid_in_bounds_44470)) {
                    // read operands
                    {
                        x_44467 = ((volatile __local
                                    int64_t *) scan_arr_mem_44464)[sext_i32_i64(local_tid_44460) -
                                                                   sext_i32_i64(skip_threads_44473)];
                    }
                    // perform operation
                    {
                        bool inactive_44474 =
                             slt64(srem64((sext_i32_i64(local_tid_44460 * 32 +
                                           32 - 1) + (int64_t) 1) *
                                          (segscan_group_sizze_35471 *
                                           sdiv_up64(m_28044 * N_28043,
                                                     sext_i32_i64(num_threads_44434))) -
                                          (int64_t) 1, N_28043),
                                   (sext_i32_i64(local_tid_44460 * 32 + 32 -
                                    1) + (int64_t) 1) *
                                   (segscan_group_sizze_35471 *
                                    sdiv_up64(m_28044 * N_28043,
                                              sext_i32_i64(num_threads_44434))) -
                                   (int64_t) 1 -
                                   ((sext_i32_i64((local_tid_44460 -
                                                   skip_threads_44473) * 32 +
                                     32 - 1) + (int64_t) 1) *
                                    (segscan_group_sizze_35471 *
                                     sdiv_up64(m_28044 * N_28043,
                                               sext_i32_i64(num_threads_44434))) -
                                    (int64_t) 1));
                        
                        if (inactive_44474) {
                            x_44467 = x_44468;
                        }
                        if (!inactive_44474) {
                            int64_t defunc_1_op_res_44469 = add64(x_44467,
                                                                  x_44468);
                            
                            x_44467 = defunc_1_op_res_44469;
                        }
                    }
                }
                if (sle32(wave_sizze_44462, skip_threads_44473)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44473, local_tid_44460 -
                          squot32(local_tid_44460, 32) * 32) &&
                    (squot32(local_tid_44460, 32) == 0 &&
                     ltid_in_bounds_44470)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_44464)[sext_i32_i64(local_tid_44460)] =
                            x_44467;
                        x_44468 = x_44467;
                    }
                }
                if (sle32(wave_sizze_44462, skip_threads_44473)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44473 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44460, 32) == 0 || !ltid_in_bounds_44470)) {
            // read operands
            {
                x_35477 = x_35476;
                x_35476 = ((__local
                            int64_t *) scan_arr_mem_44464)[sext_i32_i64(squot32(local_tid_44460,
                                                                                32)) -
                                                           (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44475 =
                     slt64(srem64((sext_i32_i64(local_tid_44460) +
                                   (int64_t) 1) * (segscan_group_sizze_35471 *
                                                   sdiv_up64(m_28044 * N_28043,
                                                             sext_i32_i64(num_threads_44434))) -
                                  (int64_t) 1, N_28043),
                           (sext_i32_i64(local_tid_44460) + (int64_t) 1) *
                           (segscan_group_sizze_35471 * sdiv_up64(m_28044 *
                                                                  N_28043,
                                                                  sext_i32_i64(num_threads_44434))) -
                           (int64_t) 1 - ((sext_i32_i64(squot32(local_tid_44460,
                                                                32) * 32 - 1) +
                                           (int64_t) 1) *
                                          (segscan_group_sizze_35471 *
                                           sdiv_up64(m_28044 * N_28043,
                                                     sext_i32_i64(num_threads_44434))) -
                                          (int64_t) 1));
                
                if (inactive_44475) {
                    x_35476 = x_35477;
                }
                if (!inactive_44475) {
                    int64_t defunc_1_op_res_35478 = add64(x_35476, x_35477);
                    
                    x_35476 = defunc_1_op_res_35478;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_44464)[sext_i32_i64(local_tid_44460)] =
                    x_35476;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44460, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_44464)[sext_i32_i64(local_tid_44460)] =
                x_35477;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_35445, m_28044) && slt64(gtid_35453, N_28043)) {
            ((__global int64_t *) mem_43341)[gtid_35445 * N_28043 +
                                             gtid_35453] = ((__local
                                                             int64_t *) scan_arr_mem_44464)[sext_i32_i64(local_tid_44460)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_35471
}
__kernel void mainMagnitudeziscan_stage2_36996(__global int *global_failure,
                                               __local volatile
                                               int64_t *scan_arr_mem_44867_backing_aligned_0,
                                               int64_t m_28044,
                                               int64_t iota32_arg_28439,
                                               int64_t stage1_num_groups_44836,
                                               int32_t num_threads_44837,
                                               __global
                                               unsigned char *mem_43521)
{
    #define segscan_group_sizze_37074 (mainMagnitudezisegscan_group_sizze_36990)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44867_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44867_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44862;
    int32_t local_tid_44863;
    int64_t group_sizze_44866;
    int32_t wave_sizze_44865;
    int32_t group_tid_44864;
    
    global_tid_44862 = get_global_id(0);
    local_tid_44863 = get_local_id(0);
    group_sizze_44866 = get_local_size(0);
    wave_sizze_44865 = LOCKSTEP_WIDTH;
    group_tid_44864 = get_group_id(0);
    
    int32_t phys_tid_36996;
    
    phys_tid_36996 = global_tid_44862;
    
    __local char *scan_arr_mem_44867;
    
    scan_arr_mem_44867 = (__local char *) scan_arr_mem_44867_backing_0;
    
    int64_t flat_idx_44869;
    
    flat_idx_44869 = (sext_i32_i64(local_tid_44863) + (int64_t) 1) *
        (segscan_group_sizze_37074 * sdiv_up64(m_28044 * iota32_arg_28439,
                                               sext_i32_i64(num_threads_44837))) -
        (int64_t) 1;
    
    int64_t gtid_36987;
    
    gtid_36987 = squot64(flat_idx_44869, iota32_arg_28439);
    
    int64_t gtid_36995;
    
    gtid_36995 = flat_idx_44869 - squot64(flat_idx_44869, iota32_arg_28439) *
        iota32_arg_28439;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_36987, m_28044) && slt64(gtid_36995, iota32_arg_28439)) {
            ((__local
              float *) scan_arr_mem_44867)[sext_i32_i64(local_tid_44863)] =
                ((__global float *) mem_43521)[gtid_36987 * iota32_arg_28439 +
                                               gtid_36995];
        } else {
            ((__local
              float *) scan_arr_mem_44867)[sext_i32_i64(local_tid_44863)] =
                0.0F;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float x_37078;
    float x_37079;
    float x_44870;
    float x_44871;
    bool ltid_in_bounds_44873;
    
    ltid_in_bounds_44873 = slt64(sext_i32_i64(local_tid_44863),
                                 stage1_num_groups_44836);
    
    int32_t skip_threads_44874;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44873) {
            x_37079 = ((volatile __local
                        float *) scan_arr_mem_44867)[sext_i32_i64(local_tid_44863)];
            if ((local_tid_44863 - squot32(local_tid_44863, 32) * 32) == 0) {
                x_37078 = x_37079;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44874 = 1;
        while (slt32(skip_threads_44874, 32)) {
            if (sle32(skip_threads_44874, local_tid_44863 -
                      squot32(local_tid_44863, 32) * 32) &&
                ltid_in_bounds_44873) {
                // read operands
                {
                    x_37078 = ((volatile __local
                                float *) scan_arr_mem_44867)[sext_i32_i64(local_tid_44863) -
                                                             sext_i32_i64(skip_threads_44874)];
                }
                // perform operation
                {
                    bool inactive_44875 =
                         slt64(srem64((sext_i32_i64(local_tid_44863) +
                                       (int64_t) 1) *
                                      (segscan_group_sizze_37074 *
                                       sdiv_up64(m_28044 * iota32_arg_28439,
                                                 sext_i32_i64(num_threads_44837))) -
                                      (int64_t) 1, iota32_arg_28439),
                               (sext_i32_i64(local_tid_44863) + (int64_t) 1) *
                               (segscan_group_sizze_37074 * sdiv_up64(m_28044 *
                                                                      iota32_arg_28439,
                                                                      sext_i32_i64(num_threads_44837))) -
                               (int64_t) 1 - ((sext_i32_i64(local_tid_44863 -
                                               skip_threads_44874) +
                                               (int64_t) 1) *
                                              (segscan_group_sizze_37074 *
                                               sdiv_up64(m_28044 *
                                                         iota32_arg_28439,
                                                         sext_i32_i64(num_threads_44837))) -
                                              (int64_t) 1));
                    
                    if (inactive_44875) {
                        x_37078 = x_37079;
                    }
                    if (!inactive_44875) {
                        float defunc_1_op_res_37080 = x_37078 + x_37079;
                        
                        x_37078 = defunc_1_op_res_37080;
                    }
                }
            }
            if (sle32(wave_sizze_44865, skip_threads_44874)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44874, local_tid_44863 -
                      squot32(local_tid_44863, 32) * 32) &&
                ltid_in_bounds_44873) {
                // write result
                {
                    ((volatile __local
                      float *) scan_arr_mem_44867)[sext_i32_i64(local_tid_44863)] =
                        x_37078;
                    x_37079 = x_37078;
                }
            }
            if (sle32(wave_sizze_44865, skip_threads_44874)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44874 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44863 - squot32(local_tid_44863, 32) * 32) == 31 &&
            ltid_in_bounds_44873) {
            ((volatile __local
              float *) scan_arr_mem_44867)[sext_i32_i64(squot32(local_tid_44863,
                                                                32))] = x_37078;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44876;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44863, 32) == 0 && ltid_in_bounds_44873) {
                x_44871 = ((volatile __local
                            float *) scan_arr_mem_44867)[sext_i32_i64(local_tid_44863)];
                if ((local_tid_44863 - squot32(local_tid_44863, 32) * 32) ==
                    0) {
                    x_44870 = x_44871;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44876 = 1;
            while (slt32(skip_threads_44876, 32)) {
                if (sle32(skip_threads_44876, local_tid_44863 -
                          squot32(local_tid_44863, 32) * 32) &&
                    (squot32(local_tid_44863, 32) == 0 &&
                     ltid_in_bounds_44873)) {
                    // read operands
                    {
                        x_44870 = ((volatile __local
                                    float *) scan_arr_mem_44867)[sext_i32_i64(local_tid_44863) -
                                                                 sext_i32_i64(skip_threads_44876)];
                    }
                    // perform operation
                    {
                        bool inactive_44877 =
                             slt64(srem64((sext_i32_i64(local_tid_44863 * 32 +
                                           32 - 1) + (int64_t) 1) *
                                          (segscan_group_sizze_37074 *
                                           sdiv_up64(m_28044 * iota32_arg_28439,
                                                     sext_i32_i64(num_threads_44837))) -
                                          (int64_t) 1, iota32_arg_28439),
                                   (sext_i32_i64(local_tid_44863 * 32 + 32 -
                                    1) + (int64_t) 1) *
                                   (segscan_group_sizze_37074 *
                                    sdiv_up64(m_28044 * iota32_arg_28439,
                                              sext_i32_i64(num_threads_44837))) -
                                   (int64_t) 1 -
                                   ((sext_i32_i64((local_tid_44863 -
                                                   skip_threads_44876) * 32 +
                                     32 - 1) + (int64_t) 1) *
                                    (segscan_group_sizze_37074 *
                                     sdiv_up64(m_28044 * iota32_arg_28439,
                                               sext_i32_i64(num_threads_44837))) -
                                    (int64_t) 1));
                        
                        if (inactive_44877) {
                            x_44870 = x_44871;
                        }
                        if (!inactive_44877) {
                            float defunc_1_op_res_44872 = x_44870 + x_44871;
                            
                            x_44870 = defunc_1_op_res_44872;
                        }
                    }
                }
                if (sle32(wave_sizze_44865, skip_threads_44876)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44876, local_tid_44863 -
                          squot32(local_tid_44863, 32) * 32) &&
                    (squot32(local_tid_44863, 32) == 0 &&
                     ltid_in_bounds_44873)) {
                    // write result
                    {
                        ((volatile __local
                          float *) scan_arr_mem_44867)[sext_i32_i64(local_tid_44863)] =
                            x_44870;
                        x_44871 = x_44870;
                    }
                }
                if (sle32(wave_sizze_44865, skip_threads_44876)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44876 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44863, 32) == 0 || !ltid_in_bounds_44873)) {
            // read operands
            {
                x_37079 = x_37078;
                x_37078 = ((__local
                            float *) scan_arr_mem_44867)[sext_i32_i64(squot32(local_tid_44863,
                                                                              32)) -
                                                         (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44878 =
                     slt64(srem64((sext_i32_i64(local_tid_44863) +
                                   (int64_t) 1) * (segscan_group_sizze_37074 *
                                                   sdiv_up64(m_28044 *
                                                             iota32_arg_28439,
                                                             sext_i32_i64(num_threads_44837))) -
                                  (int64_t) 1, iota32_arg_28439),
                           (sext_i32_i64(local_tid_44863) + (int64_t) 1) *
                           (segscan_group_sizze_37074 * sdiv_up64(m_28044 *
                                                                  iota32_arg_28439,
                                                                  sext_i32_i64(num_threads_44837))) -
                           (int64_t) 1 - ((sext_i32_i64(squot32(local_tid_44863,
                                                                32) * 32 - 1) +
                                           (int64_t) 1) *
                                          (segscan_group_sizze_37074 *
                                           sdiv_up64(m_28044 * iota32_arg_28439,
                                                     sext_i32_i64(num_threads_44837))) -
                                          (int64_t) 1));
                
                if (inactive_44878) {
                    x_37078 = x_37079;
                }
                if (!inactive_44878) {
                    float defunc_1_op_res_37080 = x_37078 + x_37079;
                    
                    x_37078 = defunc_1_op_res_37080;
                }
            }
            // write final result
            {
                ((__local
                  float *) scan_arr_mem_44867)[sext_i32_i64(local_tid_44863)] =
                    x_37078;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44863, 32) == 0) {
            ((__local
              float *) scan_arr_mem_44867)[sext_i32_i64(local_tid_44863)] =
                x_37079;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_36987, m_28044) && slt64(gtid_36995, iota32_arg_28439)) {
            ((__global float *) mem_43521)[gtid_36987 * iota32_arg_28439 +
                                           gtid_36995] = ((__local
                                                           float *) scan_arr_mem_44867)[sext_i32_i64(local_tid_44863)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_37074
}
__kernel void mainMagnitudeziscan_stage3_35454(__global int *global_failure,
                                               int64_t N_28043, int64_t m_28044,
                                               int64_t num_groups_35472,
                                               int32_t num_threads_44434,
                                               int32_t required_groups_44476,
                                               __global
                                               unsigned char *mem_43341)
{
    #define segscan_group_sizze_35471 (mainMagnitudezisegscan_group_sizze_35448)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44477;
    int32_t local_tid_44478;
    int64_t group_sizze_44481;
    int32_t wave_sizze_44480;
    int32_t group_tid_44479;
    
    global_tid_44477 = get_global_id(0);
    local_tid_44478 = get_local_id(0);
    group_sizze_44481 = get_local_size(0);
    wave_sizze_44480 = LOCKSTEP_WIDTH;
    group_tid_44479 = get_group_id(0);
    
    int32_t phys_tid_35454;
    
    phys_tid_35454 = global_tid_44477;
    
    int32_t phys_group_id_44482;
    
    phys_group_id_44482 = get_group_id(0);
    for (int32_t i_44483 = 0; i_44483 < sdiv_up32(required_groups_44476 -
                                                  phys_group_id_44482,
                                                  sext_i64_i32(num_groups_35472));
         i_44483++) {
        int32_t virt_group_id_44484 = phys_group_id_44482 + i_44483 *
                sext_i64_i32(num_groups_35472);
        int64_t flat_idx_44485 = sext_i32_i64(virt_group_id_44484) *
                segscan_group_sizze_35471 + sext_i32_i64(local_tid_44478);
        int64_t gtid_35445 = squot64(flat_idx_44485, N_28043);
        int64_t gtid_35453 = flat_idx_44485 - squot64(flat_idx_44485, N_28043) *
                N_28043;
        int64_t orig_group_44486 = squot64(flat_idx_44485,
                                           segscan_group_sizze_35471 *
                                           sdiv_up64(m_28044 * N_28043,
                                                     sext_i32_i64(num_threads_44434)));
        int64_t carry_in_flat_idx_44487 = orig_group_44486 *
                (segscan_group_sizze_35471 * sdiv_up64(m_28044 * N_28043,
                                                       sext_i32_i64(num_threads_44434))) -
                (int64_t) 1;
        
        if (slt64(gtid_35445, m_28044) && slt64(gtid_35453, N_28043)) {
            if (!(orig_group_44486 == (int64_t) 0 || (flat_idx_44485 ==
                                                      (orig_group_44486 +
                                                       (int64_t) 1) *
                                                      (segscan_group_sizze_35471 *
                                                       sdiv_up64(m_28044 *
                                                                 N_28043,
                                                                 sext_i32_i64(num_threads_44434))) -
                                                      (int64_t) 1 ||
                                                      slt64(srem64(flat_idx_44485,
                                                                   N_28043),
                                                            flat_idx_44485 -
                                                            carry_in_flat_idx_44487)))) {
                int64_t x_35476;
                int64_t x_35477;
                
                x_35476 = ((__global
                            int64_t *) mem_43341)[squot64(carry_in_flat_idx_44487,
                                                          N_28043) * N_28043 +
                                                  (carry_in_flat_idx_44487 -
                                                   squot64(carry_in_flat_idx_44487,
                                                           N_28043) * N_28043)];
                x_35477 = ((__global int64_t *) mem_43341)[gtid_35445 *
                                                           N_28043 +
                                                           gtid_35453];
                
                int64_t defunc_1_op_res_35478;
                
                defunc_1_op_res_35478 = add64(x_35476, x_35477);
                x_35476 = defunc_1_op_res_35478;
                ((__global int64_t *) mem_43341)[gtid_35445 * N_28043 +
                                                 gtid_35453] = x_35476;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_35471
}
__kernel void mainMagnitudeziscan_stage3_36996(__global int *global_failure,
                                               int64_t m_28044,
                                               int64_t iota32_arg_28439,
                                               int64_t num_groups_37075,
                                               int32_t num_threads_44837,
                                               int32_t required_groups_44879,
                                               __global
                                               unsigned char *mem_43521)
{
    #define segscan_group_sizze_37074 (mainMagnitudezisegscan_group_sizze_36990)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44880;
    int32_t local_tid_44881;
    int64_t group_sizze_44884;
    int32_t wave_sizze_44883;
    int32_t group_tid_44882;
    
    global_tid_44880 = get_global_id(0);
    local_tid_44881 = get_local_id(0);
    group_sizze_44884 = get_local_size(0);
    wave_sizze_44883 = LOCKSTEP_WIDTH;
    group_tid_44882 = get_group_id(0);
    
    int32_t phys_tid_36996;
    
    phys_tid_36996 = global_tid_44880;
    
    int32_t phys_group_id_44885;
    
    phys_group_id_44885 = get_group_id(0);
    for (int32_t i_44886 = 0; i_44886 < sdiv_up32(required_groups_44879 -
                                                  phys_group_id_44885,
                                                  sext_i64_i32(num_groups_37075));
         i_44886++) {
        int32_t virt_group_id_44887 = phys_group_id_44885 + i_44886 *
                sext_i64_i32(num_groups_37075);
        int64_t flat_idx_44888 = sext_i32_i64(virt_group_id_44887) *
                segscan_group_sizze_37074 + sext_i32_i64(local_tid_44881);
        int64_t gtid_36987 = squot64(flat_idx_44888, iota32_arg_28439);
        int64_t gtid_36995 = flat_idx_44888 - squot64(flat_idx_44888,
                                                      iota32_arg_28439) *
                iota32_arg_28439;
        int64_t orig_group_44889 = squot64(flat_idx_44888,
                                           segscan_group_sizze_37074 *
                                           sdiv_up64(m_28044 * iota32_arg_28439,
                                                     sext_i32_i64(num_threads_44837)));
        int64_t carry_in_flat_idx_44890 = orig_group_44889 *
                (segscan_group_sizze_37074 * sdiv_up64(m_28044 *
                                                       iota32_arg_28439,
                                                       sext_i32_i64(num_threads_44837))) -
                (int64_t) 1;
        
        if (slt64(gtid_36987, m_28044) && slt64(gtid_36995, iota32_arg_28439)) {
            if (!(orig_group_44889 == (int64_t) 0 || (flat_idx_44888 ==
                                                      (orig_group_44889 +
                                                       (int64_t) 1) *
                                                      (segscan_group_sizze_37074 *
                                                       sdiv_up64(m_28044 *
                                                                 iota32_arg_28439,
                                                                 sext_i32_i64(num_threads_44837))) -
                                                      (int64_t) 1 ||
                                                      slt64(srem64(flat_idx_44888,
                                                                   iota32_arg_28439),
                                                            flat_idx_44888 -
                                                            carry_in_flat_idx_44890)))) {
                float x_37078;
                float x_37079;
                
                x_37078 = ((__global
                            float *) mem_43521)[squot64(carry_in_flat_idx_44890,
                                                        iota32_arg_28439) *
                                                iota32_arg_28439 +
                                                (carry_in_flat_idx_44890 -
                                                 squot64(carry_in_flat_idx_44890,
                                                         iota32_arg_28439) *
                                                 iota32_arg_28439)];
                x_37079 = ((__global float *) mem_43521)[gtid_36987 *
                                                         iota32_arg_28439 +
                                                         gtid_36995];
                
                float defunc_1_op_res_37080;
                
                defunc_1_op_res_37080 = x_37078 + x_37079;
                x_37078 = defunc_1_op_res_37080;
                ((__global float *) mem_43521)[gtid_36987 * iota32_arg_28439 +
                                               gtid_36995] = x_37078;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_37074
}
__kernel void mainMagnitudezisegmap_33377(__global int *global_failure,
                                          int64_t N_28043, float freq_28048,
                                          int64_t i32_res_28059, __global
                                          unsigned char *mappingindices_mem_42558,
                                          __global unsigned char *mem_42563)
{
    #define segmap_group_sizze_33450 (mainMagnitudezisegmap_group_sizze_33380)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43858;
    int32_t local_tid_43859;
    int64_t group_sizze_43862;
    int32_t wave_sizze_43861;
    int32_t group_tid_43860;
    
    global_tid_43858 = get_global_id(0);
    local_tid_43859 = get_local_id(0);
    group_sizze_43862 = get_local_size(0);
    wave_sizze_43861 = LOCKSTEP_WIDTH;
    group_tid_43860 = get_group_id(0);
    
    int32_t phys_tid_33377;
    
    phys_tid_33377 = global_tid_43858;
    
    int64_t gtid_33375;
    
    gtid_33375 = squot64(sext_i32_i64(group_tid_43860) *
                         segmap_group_sizze_33450 +
                         sext_i32_i64(local_tid_43859), N_28043);
    
    int64_t gtid_33376;
    
    gtid_33376 = sext_i32_i64(group_tid_43860) * segmap_group_sizze_33450 +
        sext_i32_i64(local_tid_43859) - squot64(sext_i32_i64(group_tid_43860) *
                                                segmap_group_sizze_33450 +
                                                sext_i32_i64(local_tid_43859),
                                                N_28043) * N_28043;
    if (slt64(gtid_33375, i32_res_28059) && slt64(gtid_33376, N_28043)) {
        int32_t index_primexp_40550 = sext_i64_i32(gtid_33375);
        bool index_primexp_40547 = index_primexp_40550 == 0;
        float defunc_0_f_res_33456;
        
        if (index_primexp_40547) {
            defunc_0_f_res_33456 = 1.0F;
        } else {
            int32_t x_33455 = ((__global
                                int32_t *) mappingindices_mem_42558)[gtid_33376];
            bool cond_33457 = index_primexp_40550 == 1;
            float defunc_0_f_res_f_res_33458;
            
            if (cond_33457) {
                float i32_res_33459 = sitofp_i32_f32(x_33455);
                
                defunc_0_f_res_f_res_33458 = i32_res_33459;
            } else {
                int32_t r32_arg_33460 = sdiv32(index_primexp_40550, 2);
                float i32_res_33461 = sitofp_i32_f32(r32_arg_33460);
                float i32_res_33462 = sitofp_i32_f32(x_33455);
                float x_33463 = 6.2831855F * i32_res_33461;
                float x_33464 = i32_res_33462 * x_33463;
                float angle_33465 = x_33464 / freq_28048;
                int32_t x_33466 = smod32(index_primexp_40550, 2);
                bool cond_33467 = x_33466 == 0;
                float defunc_0_f_res_f_res_f_res_33468;
                
                if (cond_33467) {
                    float sin_res_33469;
                    
                    sin_res_33469 = futrts_sin32(angle_33465);
                    defunc_0_f_res_f_res_f_res_33468 = sin_res_33469;
                } else {
                    float cos_res_33470;
                    
                    cos_res_33470 = futrts_cos32(angle_33465);
                    defunc_0_f_res_f_res_f_res_33468 = cos_res_33470;
                }
                defunc_0_f_res_f_res_33458 = defunc_0_f_res_f_res_f_res_33468;
            }
            defunc_0_f_res_33456 = defunc_0_f_res_f_res_33458;
        }
        ((__global float *) mem_42563)[gtid_33375 * N_28043 + gtid_33376] =
            defunc_0_f_res_33456;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33450
}
__kernel void mainMagnitudezisegmap_33555(__global int *global_failure,
                                          int64_t N_28043, float freq_28048,
                                          int64_t i32_res_28059, __global
                                          unsigned char *mappingindices_mem_42558,
                                          __global unsigned char *mem_42567)
{
    #define segmap_group_sizze_33624 (mainMagnitudezisegmap_group_sizze_33558)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43863;
    int32_t local_tid_43864;
    int64_t group_sizze_43867;
    int32_t wave_sizze_43866;
    int32_t group_tid_43865;
    
    global_tid_43863 = get_global_id(0);
    local_tid_43864 = get_local_id(0);
    group_sizze_43867 = get_local_size(0);
    wave_sizze_43866 = LOCKSTEP_WIDTH;
    group_tid_43865 = get_group_id(0);
    
    int32_t phys_tid_33555;
    
    phys_tid_33555 = global_tid_43863;
    
    int64_t gtid_33553;
    
    gtid_33553 = squot64(sext_i32_i64(group_tid_43865) *
                         segmap_group_sizze_33624 +
                         sext_i32_i64(local_tid_43864), N_28043);
    
    int64_t gtid_33554;
    
    gtid_33554 = sext_i32_i64(group_tid_43865) * segmap_group_sizze_33624 +
        sext_i32_i64(local_tid_43864) - squot64(sext_i32_i64(group_tid_43865) *
                                                segmap_group_sizze_33624 +
                                                sext_i32_i64(local_tid_43864),
                                                N_28043) * N_28043;
    if (slt64(gtid_33553, i32_res_28059) && slt64(gtid_33554, N_28043)) {
        int32_t index_primexp_40559 = sext_i64_i32(gtid_33553);
        bool index_primexp_40556 = index_primexp_40559 == 0;
        float defunc_0_f_res_33630;
        
        if (index_primexp_40556) {
            defunc_0_f_res_33630 = 1.0F;
        } else {
            int32_t x_33629 = ((__global
                                int32_t *) mappingindices_mem_42558)[gtid_33554];
            int32_t i_33631 = add32(1, index_primexp_40559);
            int32_t r32_arg_33632 = sdiv32(i_33631, 2);
            float i32_res_33633 = sitofp_i32_f32(r32_arg_33632);
            float i32_res_33634 = sitofp_i32_f32(x_33629);
            float x_33635 = 6.2831855F * i32_res_33633;
            float x_33636 = i32_res_33634 * x_33635;
            float angle_33637 = x_33636 / freq_28048;
            int32_t x_33638 = smod32(i_33631, 2);
            bool cond_33639 = x_33638 == 0;
            float defunc_0_f_res_f_res_33640;
            
            if (cond_33639) {
                float sin_res_33641;
                
                sin_res_33641 = futrts_sin32(angle_33637);
                defunc_0_f_res_f_res_33640 = sin_res_33641;
            } else {
                float cos_res_33642;
                
                cos_res_33642 = futrts_cos32(angle_33637);
                defunc_0_f_res_f_res_33640 = cos_res_33642;
            }
            defunc_0_f_res_33630 = defunc_0_f_res_f_res_33640;
        }
        ((__global float *) mem_42567)[gtid_33553 * N_28043 + gtid_33554] =
            defunc_0_f_res_33630;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33624
}
__kernel void mainMagnitudezisegmap_33683(__global int *global_failure,
                                          int64_t N_28043,
                                          int64_t i32_res_28059,
                                          float i32_res_28124, __global
                                          unsigned char *mem_42571, __global
                                          unsigned char *mem_42575)
{
    #define segmap_group_sizze_33707 (mainMagnitudezisegmap_group_sizze_33686)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43868;
    int32_t local_tid_43869;
    int64_t group_sizze_43872;
    int32_t wave_sizze_43871;
    int32_t group_tid_43870;
    
    global_tid_43868 = get_global_id(0);
    local_tid_43869 = get_local_id(0);
    group_sizze_43872 = get_local_size(0);
    wave_sizze_43871 = LOCKSTEP_WIDTH;
    group_tid_43870 = get_group_id(0);
    
    int32_t phys_tid_33683;
    
    phys_tid_33683 = global_tid_43868;
    
    int64_t gtid_33681;
    
    gtid_33681 = squot64(sext_i32_i64(group_tid_43870) *
                         segmap_group_sizze_33707 +
                         sext_i32_i64(local_tid_43869), i32_res_28059);
    
    int64_t gtid_33682;
    
    gtid_33682 = sext_i32_i64(group_tid_43870) * segmap_group_sizze_33707 +
        sext_i32_i64(local_tid_43869) - squot64(sext_i32_i64(group_tid_43870) *
                                                segmap_group_sizze_33707 +
                                                sext_i32_i64(local_tid_43869),
                                                i32_res_28059) * i32_res_28059;
    if (slt64(gtid_33681, N_28043) && slt64(gtid_33682, i32_res_28059)) {
        float x_33710 = ((__global float *) mem_42571)[gtid_33681 *
                                                       i32_res_28059 +
                                                       gtid_33682];
        float defunc_0_f_res_33711 = i32_res_28124 + x_33710;
        
        ((__global float *) mem_42575)[gtid_33681 * i32_res_28059 +
                                       gtid_33682] = defunc_0_f_res_33711;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33707
}
__kernel void mainMagnitudezisegmap_33716(__global int *global_failure,
                                          int64_t N_28043, int64_t m_28044,
                                          int32_t n_28047, int32_t k2p2zq_28057,
                                          int64_t i32_res_28059,
                                          int64_t num_groups_33741, __global
                                          unsigned char *binop_p_mem_42568,
                                          __global unsigned char *mem_42575,
                                          __global unsigned char *mem_42578,
                                          __global unsigned char *mem_42582,
                                          __global unsigned char *mem_42624)
{
    #define segmap_group_sizze_33740 (mainMagnitudezisegmap_group_sizze_33718)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43876;
    int32_t local_tid_43877;
    int64_t group_sizze_43880;
    int32_t wave_sizze_43879;
    int32_t group_tid_43878;
    
    global_tid_43876 = get_global_id(0);
    local_tid_43877 = get_local_id(0);
    group_sizze_43880 = get_local_size(0);
    wave_sizze_43879 = LOCKSTEP_WIDTH;
    group_tid_43878 = get_group_id(0);
    
    int32_t phys_tid_33716;
    
    phys_tid_33716 = global_tid_43876;
    
    int32_t phys_group_id_43881;
    
    phys_group_id_43881 = get_group_id(0);
    for (int32_t i_43882 = 0; i_43882 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28044, segmap_group_sizze_33740)) -
                   phys_group_id_43881, sext_i64_i32(num_groups_33741));
         i_43882++) {
        int32_t virt_group_id_43883 = phys_group_id_43881 + i_43882 *
                sext_i64_i32(num_groups_33741);
        int64_t gtid_33715 = sext_i32_i64(virt_group_id_43883) *
                segmap_group_sizze_33740 + sext_i32_i64(local_tid_43877);
        
        if (slt64(gtid_33715, m_28044)) {
            for (int32_t i_42538 = 0; i_42538 < k2p2zq_28057; i_42538++) {
                int64_t i_42467 = sext_i32_i64(i_42538);
                
                for (int32_t i_42537 = 0; i_42537 < k2p2zq_28057; i_42537++) {
                    int64_t i_42471 = sext_i32_i64(i_42537);
                    float defunc_2_reduce_res_33749;
                    float redout_42473 = 0.0F;
                    
                    for (int32_t i_42536 = 0; i_42536 < n_28047; i_42536++) {
                        int64_t i_42474 = sext_i32_i64(i_42536);
                        float x_33753 = ((__global float *) mem_42578)[i_42474 *
                                                                       m_28044 +
                                                                       gtid_33715];
                        float x_33754 = ((__global
                                          float *) binop_p_mem_42568)[i_42467 *
                                                                      N_28043 +
                                                                      i_42474];
                        float x_33755 = ((__global float *) mem_42575)[i_42474 *
                                                                       i32_res_28059 +
                                                                       i_42471];
                        float x_33756 = x_33754 * x_33755;
                        bool isnan_res_33757;
                        
                        isnan_res_33757 = futrts_isnan32(x_33753);
                        
                        float y_33758;
                        
                        if (isnan_res_33757) {
                            y_33758 = 0.0F;
                        } else {
                            y_33758 = 1.0F;
                        }
                        
                        float defunc_2_f_res_33759 = x_33756 * y_33758;
                        float defunc_1_op_res_33752 = defunc_2_f_res_33759 +
                              redout_42473;
                        float redout_tmp_43886 = defunc_1_op_res_33752;
                        
                        redout_42473 = redout_tmp_43886;
                    }
                    defunc_2_reduce_res_33749 = redout_42473;
                    ((__global float *) mem_42582)[phys_tid_33716 + (i_42467 *
                                                                     (num_groups_33741 *
                                                                      segmap_group_sizze_33740 *
                                                                      i32_res_28059) +
                                                                     i_42471 *
                                                                     (num_groups_33741 *
                                                                      segmap_group_sizze_33740))] =
                        defunc_2_reduce_res_33749;
                }
            }
            for (int64_t i_43887 = 0; i_43887 < i32_res_28059; i_43887++) {
                for (int64_t i_43888 = 0; i_43888 < i32_res_28059; i_43888++) {
                    ((__global float *) mem_42624)[i_43887 * (m_28044 *
                                                              i32_res_28059) +
                                                   i_43888 * m_28044 +
                                                   gtid_33715] = ((__global
                                                                   float *) mem_42582)[phys_tid_33716 +
                                                                                       (i_43887 *
                                                                                        (num_groups_33741 *
                                                                                         segmap_group_sizze_33740 *
                                                                                         i32_res_28059) +
                                                                                        i_43888 *
                                                                                        (num_groups_33741 *
                                                                                         segmap_group_sizze_33740))];
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33740
}
__kernel void mainMagnitudezisegmap_33762(__global int *global_failure,
                                          int64_t N_28043, int64_t m_28044,
                                          int32_t n_28047, int32_t k2p2zq_28057,
                                          int64_t i32_res_28059,
                                          int64_t num_groups_33918, __global
                                          unsigned char *images_mem_42559,
                                          __global unsigned char *mem_42571,
                                          __global unsigned char *mem_42575,
                                          __global unsigned char *mem_42627,
                                          __global unsigned char *mem_42643)
{
    #define segmap_group_sizze_33917 (mainMagnitudezisegmap_group_sizze_33765)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43889;
    int32_t local_tid_43890;
    int64_t group_sizze_43893;
    int32_t wave_sizze_43892;
    int32_t group_tid_43891;
    
    global_tid_43889 = get_global_id(0);
    local_tid_43890 = get_local_id(0);
    group_sizze_43893 = get_local_size(0);
    wave_sizze_43892 = LOCKSTEP_WIDTH;
    group_tid_43891 = get_group_id(0);
    
    int32_t phys_tid_33762;
    
    phys_tid_33762 = global_tid_43889;
    
    int32_t phys_group_id_43894;
    
    phys_group_id_43894 = get_group_id(0);
    for (int32_t i_43895 = 0; i_43895 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28044 * i32_res_28059,
                                          segmap_group_sizze_33917)) -
                   phys_group_id_43894, sext_i64_i32(num_groups_33918));
         i_43895++) {
        int32_t virt_group_id_43896 = phys_group_id_43894 + i_43895 *
                sext_i64_i32(num_groups_33918);
        int64_t gtid_33760 = squot64(sext_i32_i64(virt_group_id_43896) *
                                     segmap_group_sizze_33917 +
                                     sext_i32_i64(local_tid_43890),
                                     i32_res_28059);
        int64_t gtid_33761 = sext_i32_i64(virt_group_id_43896) *
                segmap_group_sizze_33917 + sext_i32_i64(local_tid_43890) -
                squot64(sext_i32_i64(virt_group_id_43896) *
                        segmap_group_sizze_33917 +
                        sext_i32_i64(local_tid_43890), i32_res_28059) *
                i32_res_28059;
        
        if (slt64(gtid_33760, m_28044) && slt64(gtid_33761, i32_res_28059)) {
            for (int32_t i_42540 = 0; i_42540 < k2p2zq_28057; i_42540++) {
                int64_t i_42477 = sext_i32_i64(i_42540);
                float defunc_2_reduce_res_33929;
                float redout_42479 = 0.0F;
                
                for (int32_t i_42539 = 0; i_42539 < n_28047; i_42539++) {
                    int64_t i_42480 = sext_i32_i64(i_42539);
                    float x_33933 = ((__global
                                      float *) images_mem_42559)[gtid_33760 *
                                                                 N_28043 +
                                                                 i_42480];
                    float x_33934 = ((__global float *) mem_42571)[i_42480 *
                                                                   i32_res_28059 +
                                                                   gtid_33761];
                    float x_33935 = ((__global float *) mem_42575)[i_42480 *
                                                                   i32_res_28059 +
                                                                   i_42477];
                    float x_33936 = x_33934 * x_33935;
                    bool isnan_res_33937;
                    
                    isnan_res_33937 = futrts_isnan32(x_33933);
                    
                    float y_33938;
                    
                    if (isnan_res_33937) {
                        y_33938 = 0.0F;
                    } else {
                        y_33938 = 1.0F;
                    }
                    
                    float defunc_2_f_res_33939 = x_33936 * y_33938;
                    float defunc_1_op_res_33932 = defunc_2_f_res_33939 +
                          redout_42479;
                    float redout_tmp_43898 = defunc_1_op_res_33932;
                    
                    redout_42479 = redout_tmp_43898;
                }
                defunc_2_reduce_res_33929 = redout_42479;
                ((__global float *) mem_42627)[phys_tid_33762 + i_42477 *
                                               (num_groups_33918 *
                                                segmap_group_sizze_33917)] =
                    defunc_2_reduce_res_33929;
            }
            for (int64_t i_43899 = 0; i_43899 < i32_res_28059; i_43899++) {
                ((__global float *) mem_42643)[i_43899 * (i32_res_28059 *
                                                          m_28044) +
                                               gtid_33760 * i32_res_28059 +
                                               gtid_33761] = ((__global
                                                               float *) mem_42627)[phys_tid_33762 +
                                                                                   i_43899 *
                                                                                   (num_groups_33918 *
                                                                                    segmap_group_sizze_33917)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33917
}
__kernel void mainMagnitudezisegmap_34246(__global int *global_failure,
                                          int64_t m_28044,
                                          int64_t i32_res_28059,
                                          int64_t i32_res_28192,
                                          int64_t i32_res_28207,
                                          int64_t x_28208, int64_t j_m_i_28211,
                                          int64_t gauss_jordan_res_r_ixfn_42795,
                                          int64_t gauss_jordan_res_r_ixfn_42796,
                                          int64_t gauss_jordan_res_r_ixfn_42798,
                                          __global
                                          unsigned char *gauss_jordan_res_r_mem_42800,
                                          __global unsigned char *mem_42805)
{
    #define segmap_group_sizze_34797 (mainMagnitudezisegmap_group_sizze_34250)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44056;
    int32_t local_tid_44057;
    int64_t group_sizze_44060;
    int32_t wave_sizze_44059;
    int32_t group_tid_44058;
    
    global_tid_44056 = get_global_id(0);
    local_tid_44057 = get_local_id(0);
    group_sizze_44060 = get_local_size(0);
    wave_sizze_44059 = LOCKSTEP_WIDTH;
    group_tid_44058 = get_group_id(0);
    
    int32_t phys_tid_34246;
    
    phys_tid_34246 = global_tid_44056;
    
    int64_t gtid_34243;
    
    gtid_34243 = squot64(sext_i32_i64(group_tid_44058) *
                         segmap_group_sizze_34797 +
                         sext_i32_i64(local_tid_44057), i32_res_28059 *
                         j_m_i_28211);
    
    int64_t gtid_slice_34241;
    
    gtid_slice_34241 = squot64(sext_i32_i64(group_tid_44058) *
                               segmap_group_sizze_34797 +
                               sext_i32_i64(local_tid_44057) -
                               squot64(sext_i32_i64(group_tid_44058) *
                                       segmap_group_sizze_34797 +
                                       sext_i32_i64(local_tid_44057),
                                       i32_res_28059 * j_m_i_28211) *
                               (i32_res_28059 * j_m_i_28211), j_m_i_28211);
    
    int64_t gtid_slice_34242;
    
    gtid_slice_34242 = sext_i32_i64(group_tid_44058) *
        segmap_group_sizze_34797 + sext_i32_i64(local_tid_44057) -
        squot64(sext_i32_i64(group_tid_44058) * segmap_group_sizze_34797 +
                sext_i32_i64(local_tid_44057), i32_res_28059 * j_m_i_28211) *
        (i32_res_28059 * j_m_i_28211) - squot64(sext_i32_i64(group_tid_44058) *
                                                segmap_group_sizze_34797 +
                                                sext_i32_i64(local_tid_44057) -
                                                squot64(sext_i32_i64(group_tid_44058) *
                                                        segmap_group_sizze_34797 +
                                                        sext_i32_i64(local_tid_44057),
                                                        i32_res_28059 *
                                                        j_m_i_28211) *
                                                (i32_res_28059 * j_m_i_28211),
                                                j_m_i_28211) * j_m_i_28211;
    if ((slt64(gtid_34243, m_28044) && slt64(gtid_slice_34241,
                                             i32_res_28059)) &&
        slt64(gtid_slice_34242, j_m_i_28211)) {
        int64_t slice_34801 = i32_res_28059 + gtid_slice_34242;
        int64_t binop_x_40622 = x_28208 * gtid_34243;
        int64_t binop_y_40623 = i32_res_28207 * gtid_slice_34241;
        int64_t binop_x_40624 = binop_x_40622 + binop_y_40623;
        int64_t binop_x_40625 = slice_34801 + binop_x_40624;
        int64_t new_index_40626 = squot64(binop_x_40625, i32_res_28192);
        int64_t binop_y_40638 = i32_res_28192 * new_index_40626;
        int64_t new_index_40639 = binop_x_40625 - binop_y_40638;
        float v_34802 = ((__global
                          float *) gauss_jordan_res_r_mem_42800)[gauss_jordan_res_r_ixfn_42795 +
                                                                 (new_index_40626 *
                                                                  gauss_jordan_res_r_ixfn_42796 +
                                                                  new_index_40639 *
                                                                  gauss_jordan_res_r_ixfn_42798)];
        
        ((__global float *) mem_42805)[gtid_34243 * (j_m_i_28211 *
                                                     i32_res_28059) +
                                       gtid_slice_34241 * j_m_i_28211 +
                                       gtid_slice_34242] = v_34802;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34797
}
__kernel void mainMagnitudezisegmap_34412(__global int *global_failure,
                                          int64_t m_28044,
                                          int64_t i32_res_28192,
                                          int64_t ctx_param_ext_42758,
                                          int64_t ctx_param_ext_42759,
                                          int64_t ctx_param_ext_42761, __global
                                          unsigned char *mem_param_42763,
                                          __global unsigned char *mem_42783)
{
    #define segmap_group_sizze_34785 (mainMagnitudezisegmap_group_sizze_34415)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44050;
    int32_t local_tid_44051;
    int64_t group_sizze_44054;
    int32_t wave_sizze_44053;
    int32_t group_tid_44052;
    
    global_tid_44050 = get_global_id(0);
    local_tid_44051 = get_local_id(0);
    group_sizze_44054 = get_local_size(0);
    wave_sizze_44053 = LOCKSTEP_WIDTH;
    group_tid_44052 = get_group_id(0);
    
    int32_t phys_tid_34412;
    
    phys_tid_34412 = global_tid_44050;
    
    int64_t gtid_34410;
    
    gtid_34410 = squot64(sext_i32_i64(group_tid_44052) *
                         segmap_group_sizze_34785 +
                         sext_i32_i64(local_tid_44051), i32_res_28192);
    
    int64_t gtid_34411;
    
    gtid_34411 = sext_i32_i64(group_tid_44052) * segmap_group_sizze_34785 +
        sext_i32_i64(local_tid_44051) - squot64(sext_i32_i64(group_tid_44052) *
                                                segmap_group_sizze_34785 +
                                                sext_i32_i64(local_tid_44051),
                                                i32_res_28192) * i32_res_28192;
    if (slt64(gtid_34410, m_28044) && slt64(gtid_34411, i32_res_28192)) {
        float write_value_34791 = ((__global float *) mem_42783)[gtid_34410 *
                                                                 i32_res_28192 +
                                                                 gtid_34411];
        
        if ((sle64((int64_t) 0, gtid_34410) && slt64(gtid_34410, m_28044)) &&
            (sle64((int64_t) 0, gtid_34411) && slt64(gtid_34411,
                                                     i32_res_28192))) {
            ((__global float *) mem_param_42763)[ctx_param_ext_42758 +
                                                 (gtid_34410 *
                                                  ctx_param_ext_42759 +
                                                  gtid_34411 *
                                                  ctx_param_ext_42761)] =
                write_value_34791;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34785
}
__kernel void mainMagnitudezisegmap_34466(__global int *global_failure,
                                          int64_t m_28044, int32_t k2p2zq_28057,
                                          int32_t m_28190,
                                          int64_t i32_res_28192,
                                          int32_t i_34688,
                                          int64_t i32_res_34690,
                                          int64_t ctx_param_ext_42758,
                                          int64_t ctx_param_ext_42759,
                                          int64_t ctx_param_ext_42761, __global
                                          unsigned char *mem_param_42763,
                                          __global unsigned char *mem_42779,
                                          __global unsigned char *mem_42783)
{
    #define segmap_group_sizze_34751 (mainMagnitudezisegmap_group_sizze_34469)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44045;
    int32_t local_tid_44046;
    int64_t group_sizze_44049;
    int32_t wave_sizze_44048;
    int32_t group_tid_44047;
    
    global_tid_44045 = get_global_id(0);
    local_tid_44046 = get_local_id(0);
    group_sizze_44049 = get_local_size(0);
    wave_sizze_44048 = LOCKSTEP_WIDTH;
    group_tid_44047 = get_group_id(0);
    
    int32_t phys_tid_34466;
    
    phys_tid_34466 = global_tid_44045;
    
    int64_t gtid_34464;
    
    gtid_34464 = squot64(sext_i32_i64(group_tid_44047) *
                         segmap_group_sizze_34751 +
                         sext_i32_i64(local_tid_44046), i32_res_28192);
    
    int64_t gtid_34465;
    
    gtid_34465 = sext_i32_i64(group_tid_44047) * segmap_group_sizze_34751 +
        sext_i32_i64(local_tid_44046) - squot64(sext_i32_i64(group_tid_44047) *
                                                segmap_group_sizze_34751 +
                                                sext_i32_i64(local_tid_44046),
                                                i32_res_28192) * i32_res_28192;
    if (slt64(gtid_34464, m_28044) && slt64(gtid_34465, i32_res_28192)) {
        bool cond_34756 = ((__global bool *) mem_42779)[gtid_34464];
        int32_t defunc_0_f_res_34758 = sext_i64_i32(gtid_34465);
        int32_t defunc_0_f_res_34759 = sdiv32(defunc_0_f_res_34758, m_28190);
        int32_t defunc_0_f_res_34760 = smod32(defunc_0_f_res_34758, m_28190);
        float defunc_0_f_res_34761;
        
        if (cond_34756) {
            int32_t x_34762 = mul32(m_28190, defunc_0_f_res_34759);
            int32_t i32_arg_34763 = add32(defunc_0_f_res_34760, x_34762);
            int64_t i32_res_34764 = sext_i32_i64(i32_arg_34763);
            float defunc_0_f_res_t_res_34765 = ((__global
                                                 float *) mem_param_42763)[ctx_param_ext_42758 +
                                                                           (gtid_34464 *
                                                                            ctx_param_ext_42759 +
                                                                            i32_res_34764 *
                                                                            ctx_param_ext_42761)];
            
            defunc_0_f_res_34761 = defunc_0_f_res_t_res_34765;
        } else {
            float v1_34755 = ((__global
                               float *) mem_param_42763)[ctx_param_ext_42758 +
                                                         (gtid_34464 *
                                                          ctx_param_ext_42759 +
                                                          i32_res_34690 *
                                                          ctx_param_ext_42761)];
            int64_t i32_res_34766 = sext_i32_i64(defunc_0_f_res_34760);
            float x_34767 = ((__global
                              float *) mem_param_42763)[ctx_param_ext_42758 +
                                                        (gtid_34464 *
                                                         ctx_param_ext_42759 +
                                                         i32_res_34766 *
                                                         ctx_param_ext_42761)];
            float x_34768 = x_34767 / v1_34755;
            int32_t y_34769 = sub32(k2p2zq_28057, 1);
            bool cond_34770 = slt32(defunc_0_f_res_34759, y_34769);
            float defunc_0_f_res_f_res_34771;
            
            if (cond_34770) {
                int32_t x_34772 = add32(1, defunc_0_f_res_34759);
                int32_t x_34773 = mul32(m_28190, x_34772);
                int32_t i32_arg_34774 = add32(defunc_0_f_res_34760, x_34773);
                int64_t i32_res_34775 = sext_i32_i64(i32_arg_34774);
                float x_34776 = ((__global
                                  float *) mem_param_42763)[ctx_param_ext_42758 +
                                                            (gtid_34464 *
                                                             ctx_param_ext_42759 +
                                                             i32_res_34775 *
                                                             ctx_param_ext_42761)];
                int32_t i32_arg_34777 = add32(i_34688, x_34773);
                int64_t i32_res_34778 = sext_i32_i64(i32_arg_34777);
                float x_34779 = ((__global
                                  float *) mem_param_42763)[ctx_param_ext_42758 +
                                                            (gtid_34464 *
                                                             ctx_param_ext_42759 +
                                                             i32_res_34778 *
                                                             ctx_param_ext_42761)];
                float y_34780 = x_34768 * x_34779;
                float defunc_0_f_res_f_res_t_res_34781 = x_34776 - y_34780;
                
                defunc_0_f_res_f_res_34771 = defunc_0_f_res_f_res_t_res_34781;
            } else {
                defunc_0_f_res_f_res_34771 = x_34768;
            }
            defunc_0_f_res_34761 = defunc_0_f_res_f_res_34771;
        }
        ((__global float *) mem_42783)[gtid_34464 * i32_res_28192 +
                                       gtid_34465] = defunc_0_f_res_34761;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34751
}
__kernel void mainMagnitudezisegmap_34534(__global int *global_failure,
                                          int64_t m_28044,
                                          int64_t i32_res_34690,
                                          int64_t ctx_param_ext_42758,
                                          int64_t ctx_param_ext_42759,
                                          int64_t ctx_param_ext_42761, __global
                                          unsigned char *mem_param_42763,
                                          __global unsigned char *mem_42779)
{
    #define segmap_group_sizze_34735 (mainMagnitudezisegmap_group_sizze_34536)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44040;
    int32_t local_tid_44041;
    int64_t group_sizze_44044;
    int32_t wave_sizze_44043;
    int32_t group_tid_44042;
    
    global_tid_44040 = get_global_id(0);
    local_tid_44041 = get_local_id(0);
    group_sizze_44044 = get_local_size(0);
    wave_sizze_44043 = LOCKSTEP_WIDTH;
    group_tid_44042 = get_group_id(0);
    
    int32_t phys_tid_34534;
    
    phys_tid_34534 = global_tid_44040;
    
    int64_t gtid_34533;
    
    gtid_34533 = sext_i32_i64(group_tid_44042) * segmap_group_sizze_34735 +
        sext_i32_i64(local_tid_44041);
    if (slt64(gtid_34533, m_28044)) {
        float v1_34740 = ((__global
                           float *) mem_param_42763)[ctx_param_ext_42758 +
                                                     (gtid_34533 *
                                                      ctx_param_ext_42759 +
                                                      i32_res_34690 *
                                                      ctx_param_ext_42761)];
        bool cond_34741 = v1_34740 == 0.0F;
        
        ((__global bool *) mem_42779)[gtid_34533] = cond_34741;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34735
}
__kernel void mainMagnitudezisegmap_34627(__global int *global_failure,
                                          int64_t m_28044, int32_t k2p2zq_28057,
                                          int64_t i32_res_28059,
                                          int32_t m_28190,
                                          int64_t i32_res_28192, __global
                                          unsigned char *defunc_3_map_res_mem_42727,
                                          __global unsigned char *mem_42755)
{
    #define segmap_group_sizze_34671 (mainMagnitudezisegmap_group_sizze_34630)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44007;
    int32_t local_tid_44008;
    int64_t group_sizze_44011;
    int32_t wave_sizze_44010;
    int32_t group_tid_44009;
    
    global_tid_44007 = get_global_id(0);
    local_tid_44008 = get_local_id(0);
    group_sizze_44011 = get_local_size(0);
    wave_sizze_44010 = LOCKSTEP_WIDTH;
    group_tid_44009 = get_group_id(0);
    
    int32_t phys_tid_34627;
    
    phys_tid_34627 = global_tid_44007;
    
    int64_t gtid_34625;
    
    gtid_34625 = squot64(sext_i32_i64(group_tid_44009) *
                         segmap_group_sizze_34671 +
                         sext_i32_i64(local_tid_44008), i32_res_28192);
    
    int64_t gtid_34626;
    
    gtid_34626 = sext_i32_i64(group_tid_44009) * segmap_group_sizze_34671 +
        sext_i32_i64(local_tid_44008) - squot64(sext_i32_i64(group_tid_44009) *
                                                segmap_group_sizze_34671 +
                                                sext_i32_i64(local_tid_44008),
                                                i32_res_28192) * i32_res_28192;
    if (slt64(gtid_34625, m_28044) && slt64(gtid_34626, i32_res_28192)) {
        int32_t index_primexp_40571 = sext_i64_i32(gtid_34626);
        int32_t defunc_0_f_res_34676 = sdiv32(index_primexp_40571, m_28190);
        int32_t defunc_0_f_res_34677 = smod32(index_primexp_40571, m_28190);
        bool cond_34678 = slt32(defunc_0_f_res_34677, k2p2zq_28057);
        float defunc_0_f_res_34679;
        
        if (cond_34678) {
            int64_t i_34680 = sext_i32_i64(defunc_0_f_res_34676);
            int64_t j_34681 = sext_i32_i64(defunc_0_f_res_34677);
            float defunc_0_f_res_t_res_34682 = ((__global
                                                 float *) defunc_3_map_res_mem_42727)[gtid_34625 *
                                                                                      (i32_res_28059 *
                                                                                       i32_res_28059) +
                                                                                      i_34680 *
                                                                                      i32_res_28059 +
                                                                                      j_34681];
            
            defunc_0_f_res_34679 = defunc_0_f_res_t_res_34682;
        } else {
            int32_t y_34683 = add32(k2p2zq_28057, defunc_0_f_res_34676);
            bool cond_34684 = defunc_0_f_res_34677 == y_34683;
            float defunc_0_f_res_f_res_34685;
            
            if (cond_34684) {
                defunc_0_f_res_f_res_34685 = 1.0F;
            } else {
                defunc_0_f_res_f_res_34685 = 0.0F;
            }
            defunc_0_f_res_34679 = defunc_0_f_res_f_res_34685;
        }
        ((__global float *) mem_42755)[gtid_34625 * i32_res_28192 +
                                       gtid_34626] = defunc_0_f_res_34679;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34671
}
__kernel void mainMagnitudezisegmap_34808(__global int *global_failure,
                                          int64_t N_28043, int64_t m_28044,
                                          int32_t n_28047, int32_t k2p2zq_28057,
                                          int64_t i32_res_28059,
                                          int64_t num_groups_34829, __global
                                          unsigned char *binop_p_mem_42568,
                                          __global unsigned char *mem_42810,
                                          __global unsigned char *mem_42813,
                                          __global unsigned char *mem_42828)
{
    #define segmap_group_sizze_34828 (mainMagnitudezisegmap_group_sizze_34810)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44064;
    int32_t local_tid_44065;
    int64_t group_sizze_44068;
    int32_t wave_sizze_44067;
    int32_t group_tid_44066;
    
    global_tid_44064 = get_global_id(0);
    local_tid_44065 = get_local_id(0);
    group_sizze_44068 = get_local_size(0);
    wave_sizze_44067 = LOCKSTEP_WIDTH;
    group_tid_44066 = get_group_id(0);
    
    int32_t phys_tid_34808;
    
    phys_tid_34808 = global_tid_44064;
    
    int32_t phys_group_id_44069;
    
    phys_group_id_44069 = get_group_id(0);
    for (int32_t i_44070 = 0; i_44070 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28044, segmap_group_sizze_34828)) -
                   phys_group_id_44069, sext_i64_i32(num_groups_34829));
         i_44070++) {
        int32_t virt_group_id_44071 = phys_group_id_44069 + i_44070 *
                sext_i64_i32(num_groups_34829);
        int64_t gtid_34807 = sext_i32_i64(virt_group_id_44071) *
                segmap_group_sizze_34828 + sext_i32_i64(local_tid_44065);
        
        if (slt64(gtid_34807, m_28044)) {
            for (int32_t i_42542 = 0; i_42542 < k2p2zq_28057; i_42542++) {
                int64_t i_42483 = sext_i32_i64(i_42542);
                float defunc_2_reduce_res_34835;
                float redout_42485 = 0.0F;
                
                for (int32_t i_42541 = 0; i_42541 < n_28047; i_42541++) {
                    int64_t i_42486 = sext_i32_i64(i_42541);
                    float x_34840 = ((__global float *) mem_42810)[i_42486 *
                                                                   m_28044 +
                                                                   gtid_34807];
                    bool isnan_res_34841;
                    
                    isnan_res_34841 = futrts_isnan32(x_34840);
                    
                    float defunc_1_f_res_34842;
                    
                    if (isnan_res_34841) {
                        defunc_1_f_res_34842 = 0.0F;
                    } else {
                        float x_34839 = ((__global
                                          float *) binop_p_mem_42568)[i_42483 *
                                                                      N_28043 +
                                                                      i_42486];
                        float defunc_1_f_res_f_res_34843 = x_34839 * x_34840;
                        
                        defunc_1_f_res_34842 = defunc_1_f_res_f_res_34843;
                    }
                    
                    float defunc_1_op_res_34838 = defunc_1_f_res_34842 +
                          redout_42485;
                    float redout_tmp_44073 = defunc_1_op_res_34838;
                    
                    redout_42485 = redout_tmp_44073;
                }
                defunc_2_reduce_res_34835 = redout_42485;
                ((__global float *) mem_42813)[phys_tid_34808 + i_42483 *
                                               (num_groups_34829 *
                                                segmap_group_sizze_34828)] =
                    defunc_2_reduce_res_34835;
            }
            for (int64_t i_44074 = 0; i_44074 < i32_res_28059; i_44074++) {
                ((__global float *) mem_42828)[i_44074 * m_28044 + gtid_34807] =
                    ((__global float *) mem_42813)[phys_tid_34808 + i_44074 *
                                                   (num_groups_34829 *
                                                    segmap_group_sizze_34828)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34828
}
__kernel void mainMagnitudezisegmap_34949(__global int *global_failure,
                                          int64_t m_28044, int32_t k2p2zq_28057,
                                          int64_t i32_res_28059,
                                          int64_t num_groups_34969, __global
                                          unsigned char *mem_43032, __global
                                          unsigned char *mem_43035, __global
                                          unsigned char *mem_43038, __global
                                          unsigned char *mem_43053)
{
    #define segmap_group_sizze_34968 (mainMagnitudezisegmap_group_sizze_34951)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44196;
    int32_t local_tid_44197;
    int64_t group_sizze_44200;
    int32_t wave_sizze_44199;
    int32_t group_tid_44198;
    
    global_tid_44196 = get_global_id(0);
    local_tid_44197 = get_local_id(0);
    group_sizze_44200 = get_local_size(0);
    wave_sizze_44199 = LOCKSTEP_WIDTH;
    group_tid_44198 = get_group_id(0);
    
    int32_t phys_tid_34949;
    
    phys_tid_34949 = global_tid_44196;
    
    int32_t phys_group_id_44201;
    
    phys_group_id_44201 = get_group_id(0);
    for (int32_t i_44202 = 0; i_44202 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28044, segmap_group_sizze_34968)) -
                   phys_group_id_44201, sext_i64_i32(num_groups_34969));
         i_44202++) {
        int32_t virt_group_id_44203 = phys_group_id_44201 + i_44202 *
                sext_i64_i32(num_groups_34969);
        int64_t gtid_34948 = sext_i32_i64(virt_group_id_44203) *
                segmap_group_sizze_34968 + sext_i32_i64(local_tid_44197);
        
        if (slt64(gtid_34948, m_28044)) {
            for (int32_t i_42544 = 0; i_42544 < k2p2zq_28057; i_42544++) {
                int64_t i_42489 = sext_i32_i64(i_42544);
                float defunc_0_f_res_34976;
                float redout_42491 = 0.0F;
                
                for (int32_t i_42543 = 0; i_42543 < k2p2zq_28057; i_42543++) {
                    int64_t i_42492 = sext_i32_i64(i_42543);
                    float x_34980 = ((__global float *) mem_43035)[i_42492 *
                                                                   m_28044 +
                                                                   gtid_34948];
                    float x_34981 = ((__global float *) mem_43032)[i_42489 *
                                                                   (m_28044 *
                                                                    i32_res_28059) +
                                                                   i_42492 *
                                                                   m_28044 +
                                                                   gtid_34948];
                    float defunc_1_f_res_34982 = x_34980 * x_34981;
                    float defunc_1_op_res_34979 = defunc_1_f_res_34982 +
                          redout_42491;
                    float redout_tmp_44205 = defunc_1_op_res_34979;
                    
                    redout_42491 = redout_tmp_44205;
                }
                defunc_0_f_res_34976 = redout_42491;
                ((__global float *) mem_43038)[phys_tid_34949 + i_42489 *
                                               (num_groups_34969 *
                                                segmap_group_sizze_34968)] =
                    defunc_0_f_res_34976;
            }
            for (int64_t i_44206 = 0; i_44206 < i32_res_28059; i_44206++) {
                ((__global float *) mem_43053)[i_44206 * m_28044 + gtid_34948] =
                    ((__global float *) mem_43038)[phys_tid_34949 + i_44206 *
                                                   (num_groups_34969 *
                                                    segmap_group_sizze_34968)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34968
}
__kernel void mainMagnitudezisegmap_35081(__global int *global_failure,
                                          int64_t N_28043, int64_t m_28044,
                                          int32_t k2p2zq_28057,
                                          int64_t i32_res_28059,
                                          int64_t num_groups_35100, __global
                                          unsigned char *mem_42575, __global
                                          unsigned char *mem_43097, __global
                                          unsigned char *mem_43100, __global
                                          unsigned char *mem_43115)
{
    #define segmap_group_sizze_35099 (mainMagnitudezisegmap_group_sizze_35083)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44284;
    int32_t local_tid_44285;
    int64_t group_sizze_44288;
    int32_t wave_sizze_44287;
    int32_t group_tid_44286;
    
    global_tid_44284 = get_global_id(0);
    local_tid_44285 = get_local_id(0);
    group_sizze_44288 = get_local_size(0);
    wave_sizze_44287 = LOCKSTEP_WIDTH;
    group_tid_44286 = get_group_id(0);
    
    int32_t phys_tid_35081;
    
    phys_tid_35081 = global_tid_44284;
    
    int32_t phys_group_id_44289;
    
    phys_group_id_44289 = get_group_id(0);
    for (int32_t i_44290 = 0; i_44290 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28044, segmap_group_sizze_35099)) -
                   phys_group_id_44289, sext_i64_i32(num_groups_35100));
         i_44290++) {
        int32_t virt_group_id_44291 = phys_group_id_44289 + i_44290 *
                sext_i64_i32(num_groups_35100);
        int64_t gtid_35080 = sext_i32_i64(virt_group_id_44291) *
                segmap_group_sizze_35099 + sext_i32_i64(local_tid_44285);
        
        if (slt64(gtid_35080, m_28044)) {
            for (int64_t i_42499 = 0; i_42499 < N_28043; i_42499++) {
                float defunc_0_f_res_35106;
                float redout_42501 = 0.0F;
                
                for (int32_t i_42547 = 0; i_42547 < k2p2zq_28057; i_42547++) {
                    int64_t i_42502 = sext_i32_i64(i_42547);
                    float x_35110 = ((__global float *) mem_43097)[i_42502 *
                                                                   m_28044 +
                                                                   gtid_35080];
                    float x_35111 = ((__global float *) mem_42575)[i_42499 *
                                                                   i32_res_28059 +
                                                                   i_42502];
                    float defunc_1_f_res_35112 = x_35110 * x_35111;
                    float defunc_1_op_res_35109 = defunc_1_f_res_35112 +
                          redout_42501;
                    float redout_tmp_44293 = defunc_1_op_res_35109;
                    
                    redout_42501 = redout_tmp_44293;
                }
                defunc_0_f_res_35106 = redout_42501;
                ((__global float *) mem_43100)[phys_tid_35081 + i_42499 *
                                               (num_groups_35100 *
                                                segmap_group_sizze_35099)] =
                    defunc_0_f_res_35106;
            }
            for (int64_t i_44294 = 0; i_44294 < N_28043; i_44294++) {
                ((__global float *) mem_43115)[i_44294 * m_28044 + gtid_35080] =
                    ((__global float *) mem_43100)[phys_tid_35081 + i_44294 *
                                                   (num_groups_35100 *
                                                    segmap_group_sizze_35099)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35099
}
__kernel void mainMagnitudezisegmap_35361(__global int *global_failure,
                                          int64_t N_28043, int64_t m_28044,
                                          __global unsigned char *mem_43341,
                                          __global unsigned char *mem_43344,
                                          __global unsigned char *mem_43350,
                                          __global unsigned char *mem_43353)
{
    #define segmap_group_sizze_35527 (mainMagnitudezisegmap_group_sizze_35364)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44511;
    int32_t local_tid_44512;
    int64_t group_sizze_44515;
    int32_t wave_sizze_44514;
    int32_t group_tid_44513;
    
    global_tid_44511 = get_global_id(0);
    local_tid_44512 = get_local_id(0);
    group_sizze_44515 = get_local_size(0);
    wave_sizze_44514 = LOCKSTEP_WIDTH;
    group_tid_44513 = get_group_id(0);
    
    int32_t phys_tid_35361;
    
    phys_tid_35361 = global_tid_44511;
    
    int64_t gtid_35359;
    
    gtid_35359 = squot64(sext_i32_i64(group_tid_44513) *
                         segmap_group_sizze_35527 +
                         sext_i32_i64(local_tid_44512), N_28043);
    
    int64_t gtid_35360;
    
    gtid_35360 = sext_i32_i64(group_tid_44513) * segmap_group_sizze_35527 +
        sext_i32_i64(local_tid_44512) - squot64(sext_i32_i64(group_tid_44513) *
                                                segmap_group_sizze_35527 +
                                                sext_i32_i64(local_tid_44512),
                                                N_28043) * N_28043;
    if (slt64(gtid_35359, m_28044) && slt64(gtid_35360, N_28043)) {
        float x_35535 = ((__global float *) mem_43344)[gtid_35359 * N_28043 +
                                                       gtid_35360];
        int32_t index_primexp_40587 = sext_i64_i32(gtid_35360);
        bool isnan_res_35538;
        
        isnan_res_35538 = futrts_isnan32(x_35535);
        
        bool defunc_0_p_res_35539 = !isnan_res_35538;
        int64_t defunc_1_f_res_35540;
        
        if (defunc_0_p_res_35539) {
            int64_t x_35536 = ((__global int64_t *) mem_43341)[gtid_35359 *
                                                               N_28043 +
                                                               gtid_35360];
            int64_t defunc_1_f_res_t_res_35541 = sub64(x_35536, (int64_t) 1);
            
            defunc_1_f_res_35540 = defunc_1_f_res_t_res_35541;
        } else {
            defunc_1_f_res_35540 = (int64_t) -1;
        }
        if ((sle64((int64_t) 0, gtid_35359) && slt64(gtid_35359, m_28044)) &&
            (sle64((int64_t) 0, defunc_1_f_res_35540) &&
             slt64(defunc_1_f_res_35540, N_28043))) {
            ((__global int32_t *) mem_43353)[gtid_35359 * N_28043 +
                                             defunc_1_f_res_35540] =
                index_primexp_40587;
        }
        if ((sle64((int64_t) 0, gtid_35359) && slt64(gtid_35359, m_28044)) &&
            (sle64((int64_t) 0, defunc_1_f_res_35540) &&
             slt64(defunc_1_f_res_35540, N_28043))) {
            ((__global float *) mem_43350)[gtid_35359 * N_28043 +
                                           defunc_1_f_res_35540] = x_35535;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35527
}
__kernel void mainMagnitudezisegmap_35437(__global int *global_failure,
                                          int64_t N_28043, int64_t m_28044,
                                          int64_t i_28319, __global
                                          unsigned char *mem_43341, __global
                                          unsigned char *mem_43347)
{
    #define segmap_group_sizze_35491 (mainMagnitudezisegmap_group_sizze_35439)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44488;
    int32_t local_tid_44489;
    int64_t group_sizze_44492;
    int32_t wave_sizze_44491;
    int32_t group_tid_44490;
    
    global_tid_44488 = get_global_id(0);
    local_tid_44489 = get_local_id(0);
    group_sizze_44492 = get_local_size(0);
    wave_sizze_44491 = LOCKSTEP_WIDTH;
    group_tid_44490 = get_group_id(0);
    
    int32_t phys_tid_35437;
    
    phys_tid_35437 = global_tid_44488;
    
    int64_t gtid_35436;
    
    gtid_35436 = sext_i32_i64(group_tid_44490) * segmap_group_sizze_35491 +
        sext_i32_i64(local_tid_44489);
    if (slt64(gtid_35436, m_28044)) {
        int64_t last_res_35495 = ((__global int64_t *) mem_43341)[gtid_35436 *
                                                                  N_28043 +
                                                                  i_28319];
        int32_t defunc_0_f_res_35496 = sext_i64_i32(last_res_35495);
        
        ((__global int32_t *) mem_43347)[gtid_35436] = defunc_0_f_res_35496;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35491
}
__kernel void mainMagnitudezisegmap_35688(__global int *global_failure,
                                          int64_t m_28044, float hfrac_28049,
                                          int32_t k2p2_28055, __global
                                          unsigned char *mem_43410, __global
                                          unsigned char *mem_43413, __global
                                          unsigned char *mem_43416, __global
                                          unsigned char *mem_43418)
{
    #define segmap_group_sizze_35773 (mainMagnitudezisegmap_group_sizze_35690)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44664;
    int32_t local_tid_44665;
    int64_t group_sizze_44668;
    int32_t wave_sizze_44667;
    int32_t group_tid_44666;
    
    global_tid_44664 = get_global_id(0);
    local_tid_44665 = get_local_id(0);
    group_sizze_44668 = get_local_size(0);
    wave_sizze_44667 = LOCKSTEP_WIDTH;
    group_tid_44666 = get_group_id(0);
    
    int32_t phys_tid_35688;
    
    phys_tid_35688 = global_tid_44664;
    
    int64_t gtid_35687;
    
    gtid_35687 = sext_i32_i64(group_tid_44666) * segmap_group_sizze_35773 +
        sext_i32_i64(local_tid_44665);
    if (slt64(gtid_35687, m_28044)) {
        int32_t defunc_0_f_res_35777 = ((__global
                                         int32_t *) mem_43410)[gtid_35687];
        float defunc_0_f_res_35778 = ((__global float *) mem_43413)[gtid_35687];
        int32_t r32_arg_35779 = sub32(defunc_0_f_res_35777, k2p2_28055);
        float i32_res_35780 = sitofp_i32_f32(r32_arg_35779);
        float sqrt_arg_35781 = defunc_0_f_res_35778 / i32_res_35780;
        float sqrt_res_35782;
        
        sqrt_res_35782 = futrts_sqrt32(sqrt_arg_35781);
        
        float i32_res_35783 = sitofp_i32_f32(defunc_0_f_res_35777);
        float t32_arg_35784 = hfrac_28049 * i32_res_35783;
        int32_t f32_res_35785 = fptosi_f32_i32(t32_arg_35784);
        
        ((__global int32_t *) mem_43416)[gtid_35687] = f32_res_35785;
        ((__global float *) mem_43418)[gtid_35687] = sqrt_res_35782;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35773
}
__kernel void mainMagnitudezisegmap_35959(__global int *global_failure,
                                          float lam_28050,
                                          int64_t iota32_arg_28439,
                                          int32_t x_28444, float i32_res_28452,
                                          __global
                                          unsigned char *mappingindices_mem_42558,
                                          __global unsigned char *mem_43460,
                                          __global unsigned char *mem_43462)
{
    #define segmap_group_sizze_35978 (mainMagnitudezisegmap_group_sizze_35961)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44774;
    int32_t local_tid_44775;
    int64_t group_sizze_44778;
    int32_t wave_sizze_44777;
    int32_t group_tid_44776;
    
    global_tid_44774 = get_global_id(0);
    local_tid_44775 = get_local_id(0);
    group_sizze_44778 = get_local_size(0);
    wave_sizze_44777 = LOCKSTEP_WIDTH;
    group_tid_44776 = get_group_id(0);
    
    int32_t phys_tid_35959;
    
    phys_tid_35959 = global_tid_44774;
    
    int64_t gtid_35958;
    
    gtid_35958 = sext_i32_i64(group_tid_44776) * segmap_group_sizze_35978 +
        sext_i32_i64(local_tid_44775);
    if (slt64(gtid_35958, iota32_arg_28439)) {
        int32_t defunc_0_f_res_35983 = sext_i64_i32(gtid_35958);
        int32_t t_35984 = add32(x_28444, defunc_0_f_res_35983);
        int32_t i_35985 = sub32(t_35984, 1);
        int64_t i_35986 = sext_i32_i64(i_35985);
        int32_t time_35987 = ((__global
                               int32_t *) mappingindices_mem_42558)[i_35986];
        float i32_res_35988 = sitofp_i32_f32(time_35987);
        float logplus_arg_35989 = i32_res_35988 / i32_res_28452;
        bool cond_35990 = 2.7182817F < logplus_arg_35989;
        float logplus_res_35991;
        
        if (cond_35990) {
            float log_res_35992;
            
            log_res_35992 = futrts_log32(logplus_arg_35989);
            logplus_res_35991 = log_res_35992;
        } else {
            logplus_res_35991 = 1.0F;
        }
        
        float sqrt_res_35993;
        
        sqrt_res_35993 = futrts_sqrt32(logplus_res_35991);
        
        float defunc_0_f_res_35994 = lam_28050 * sqrt_res_35993;
        
        ((__global int32_t *) mem_43460)[gtid_35958] = defunc_0_f_res_35983;
        ((__global float *) mem_43462)[gtid_35958] = defunc_0_f_res_35994;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35978
}
__kernel void mainMagnitudezisegmap_36210(__global int *global_failure,
                                          int failure_is_an_option, __global
                                          int64_t *global_failure_args,
                                          int64_t m_28044,
                                          int64_t iota32_arg_28439,
                                          int64_t distance_28471,
                                          int64_t segmap_usable_groups_36443,
                                          __global
                                          unsigned char *defunc_4_map_res_mem_43355,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_43423,
                                          __global unsigned char *mem_43465,
                                          __global unsigned char *mem_43472,
                                          __global unsigned char *mem_43483,
                                          __global unsigned char *mem_43503)
{
    #define segmap_group_sizze_36442 (mainMagnitudezisegmap_group_sizze_36212)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44789;
    int32_t local_tid_44790;
    int64_t group_sizze_44793;
    int32_t wave_sizze_44792;
    int32_t group_tid_44791;
    
    global_tid_44789 = get_global_id(0);
    local_tid_44790 = get_local_id(0);
    group_sizze_44793 = get_local_size(0);
    wave_sizze_44792 = LOCKSTEP_WIDTH;
    group_tid_44791 = get_group_id(0);
    
    int32_t phys_tid_36210;
    
    phys_tid_36210 = global_tid_44789;
    
    int64_t gtid_36209;
    
    gtid_36209 = sext_i32_i64(group_tid_44791) * segmap_group_sizze_36442 +
        sext_i32_i64(local_tid_44790);
    if (slt64(gtid_36209, m_28044)) {
        int32_t x_36445 = ((__global
                            int32_t *) defunc_4_map_res_mem_43355)[gtid_36209];
        int32_t x_36446 = ((__global
                            int32_t *) defunc_3_map_res_mem_43423)[gtid_36209];
        int32_t y_36447 = ((__global int32_t *) mem_43465)[gtid_36209];
        
        for (int64_t i_44794 = 0; i_44794 < iota32_arg_28439; i_44794++) {
            ((__global float *) mem_43483)[phys_tid_36210 + i_44794 *
                                           (segmap_usable_groups_36443 *
                                            segmap_group_sizze_36442)] =
                ((__global float *) mem_43472)[gtid_36209 + i_44794 * m_28044];
        }
        for (int64_t i_36450 = 0; i_36450 < distance_28471; i_36450++) {
            int64_t index_primexp_36452 = add64((int64_t) 1, i_36450);
            bool cond_36453 = slt64((int64_t) 0, index_primexp_36452);
            bool loop_cond_36454;
            
            if (cond_36453) {
                bool x_36455 = sle64((int64_t) 0, index_primexp_36452);
                bool y_36456 = slt64(index_primexp_36452, iota32_arg_28439);
                bool bounds_check_36457 = x_36455 && y_36456;
                bool index_certs_36458;
                
                if (!bounds_check_36457) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 13) ==
                            -1) {
                            global_failure_args[0] = index_primexp_36452;
                            global_failure_args[1] = iota32_arg_28439;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_2_lifted_gt_arg_36459 = ((__global
                                                       float *) mem_43483)[phys_tid_36210 +
                                                                           index_primexp_36452 *
                                                                           (segmap_usable_groups_36443 *
                                                                            segmap_group_sizze_36442)];
                bool y_36460 = slt64(i_36450, iota32_arg_28439);
                bool index_certs_36461;
                
                if (!y_36460) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 14) ==
                            -1) {
                            global_failure_args[0] = i_36450;
                            global_failure_args[1] = iota32_arg_28439;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_1_lifted_gt_arg_36462 = ((__global
                                                       float *) mem_43483)[phys_tid_36210 +
                                                                           i_36450 *
                                                                           (segmap_usable_groups_36443 *
                                                                            segmap_group_sizze_36442)];
                bool defunc_1_zlze_res_36463 = defunc_1_lifted_gt_arg_36462 <=
                     defunc_2_lifted_gt_arg_36459;
                bool defunc_2_lifted_gt_res_36464 = !defunc_1_zlze_res_36463;
                
                loop_cond_36454 = defunc_2_lifted_gt_res_36464;
            } else {
                loop_cond_36454 = 0;
            }
            
            bool xszq_36465;
            int64_t xszq_36466;
            bool loop_while_36468;
            int64_t j_36469;
            
            loop_while_36468 = loop_cond_36454;
            j_36469 = index_primexp_36452;
            while (loop_while_36468) {
                int64_t loopres_36471 = sub64(j_36469, (int64_t) 1);
                bool x_36472 = sle64((int64_t) 0, j_36469);
                bool y_36473 = slt64(j_36469, iota32_arg_28439);
                bool bounds_check_36474 = x_36472 && y_36473;
                bool index_certs_36475;
                
                if (!bounds_check_36474) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 15) ==
                            -1) {
                            global_failure_args[0] = j_36469;
                            global_failure_args[1] = iota32_arg_28439;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_36476 = ((__global
                                         float *) mem_43483)[phys_tid_36210 +
                                                             j_36469 *
                                                             (segmap_usable_groups_36443 *
                                                              segmap_group_sizze_36442)];
                bool x_36477 = sle64((int64_t) 0, loopres_36471);
                bool y_36478 = slt64(loopres_36471, iota32_arg_28439);
                bool bounds_check_36479 = x_36477 && y_36478;
                bool index_certs_36480;
                
                if (!bounds_check_36479) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 16) ==
                            -1) {
                            global_failure_args[0] = loopres_36471;
                            global_failure_args[1] = iota32_arg_28439;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_36481 = ((__global
                                         float *) mem_43483)[phys_tid_36210 +
                                                             loopres_36471 *
                                                             (segmap_usable_groups_36443 *
                                                              segmap_group_sizze_36442)];
                
                ((__global float *) mem_43483)[phys_tid_36210 + j_36469 *
                                               (segmap_usable_groups_36443 *
                                                segmap_group_sizze_36442)] =
                    copy_arg_36481;
                ((__global float *) mem_43483)[phys_tid_36210 + loopres_36471 *
                                               (segmap_usable_groups_36443 *
                                                segmap_group_sizze_36442)] =
                    copy_arg_36476;
                
                bool cond_36484 = slt64((int64_t) 0, loopres_36471);
                bool loop_cond_36485;
                
                if (cond_36484) {
                    bool index_certs_36486;
                    
                    if (!bounds_check_36479) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          17) == -1) {
                                global_failure_args[0] = loopres_36471;
                                global_failure_args[1] = iota32_arg_28439;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_2_lifted_gt_arg_36487 = ((__global
                                                           float *) mem_43483)[phys_tid_36210 +
                                                                               loopres_36471 *
                                                                               (segmap_usable_groups_36443 *
                                                                                segmap_group_sizze_36442)];
                    int64_t i_36488 = sub64(loopres_36471, (int64_t) 1);
                    bool x_36489 = sle64((int64_t) 0, i_36488);
                    bool y_36490 = slt64(i_36488, iota32_arg_28439);
                    bool bounds_check_36491 = x_36489 && y_36490;
                    bool index_certs_36492;
                    
                    if (!bounds_check_36491) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          18) == -1) {
                                global_failure_args[0] = i_36488;
                                global_failure_args[1] = iota32_arg_28439;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_1_lifted_gt_arg_36493 = ((__global
                                                           float *) mem_43483)[phys_tid_36210 +
                                                                               i_36488 *
                                                                               (segmap_usable_groups_36443 *
                                                                                segmap_group_sizze_36442)];
                    bool defunc_1_zlze_res_36494 =
                         defunc_1_lifted_gt_arg_36493 <=
                         defunc_2_lifted_gt_arg_36487;
                    bool defunc_2_lifted_gt_res_36495 =
                         !defunc_1_zlze_res_36494;
                    
                    loop_cond_36485 = defunc_2_lifted_gt_res_36495;
                } else {
                    loop_cond_36485 = 0;
                }
                
                bool loop_while_tmp_44796 = loop_cond_36485;
                int64_t j_tmp_44797 = loopres_36471;
                
                loop_while_36468 = loop_while_tmp_44796;
                j_36469 = j_tmp_44797;
            }
            xszq_36465 = loop_while_36468;
            xszq_36466 = j_36469;
        }
        
        int32_t i_36496 = sdiv32(y_36447, 2);
        int32_t j_36497 = sub32(i_36496, 1);
        bool cond_36498 = x_36445 == x_36446;
        float defunc_0_f_res_36499;
        
        if (cond_36498) {
            defunc_0_f_res_36499 = 0.0F;
        } else {
            int32_t x_36500 = smod32(y_36447, 2);
            bool cond_36501 = x_36500 == 0;
            float defunc_0_f_res_f_res_36502;
            
            if (cond_36501) {
                int64_t j_36503 = sext_i32_i64(j_36497);
                bool x_36504 = sle64((int64_t) 0, j_36503);
                bool y_36505 = slt64(j_36503, iota32_arg_28439);
                bool bounds_check_36506 = x_36504 && y_36505;
                bool index_certs_36507;
                
                if (!bounds_check_36506) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 19) ==
                            -1) {
                            global_failure_args[0] = j_36503;
                            global_failure_args[1] = iota32_arg_28439;
                            ;
                        }
                        return;
                    }
                }
                
                float x_36508 = ((__global float *) mem_43483)[phys_tid_36210 +
                                                               j_36503 *
                                                               (segmap_usable_groups_36443 *
                                                                segmap_group_sizze_36442)];
                int64_t i_36509 = sext_i32_i64(i_36496);
                bool x_36510 = sle64((int64_t) 0, i_36509);
                bool y_36511 = slt64(i_36509, iota32_arg_28439);
                bool bounds_check_36512 = x_36510 && y_36511;
                bool index_certs_36513;
                
                if (!bounds_check_36512) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 20) ==
                            -1) {
                            global_failure_args[0] = i_36509;
                            global_failure_args[1] = iota32_arg_28439;
                            ;
                        }
                        return;
                    }
                }
                
                float y_36514 = ((__global float *) mem_43483)[phys_tid_36210 +
                                                               i_36509 *
                                                               (segmap_usable_groups_36443 *
                                                                segmap_group_sizze_36442)];
                float x_36515 = x_36508 + y_36514;
                float defunc_0_f_res_f_res_t_res_36516 = x_36515 / 2.0F;
                
                defunc_0_f_res_f_res_36502 = defunc_0_f_res_f_res_t_res_36516;
            } else {
                int64_t i_36517 = sext_i32_i64(i_36496);
                bool x_36518 = sle64((int64_t) 0, i_36517);
                bool y_36519 = slt64(i_36517, iota32_arg_28439);
                bool bounds_check_36520 = x_36518 && y_36519;
                bool index_certs_36521;
                
                if (!bounds_check_36520) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 21) ==
                            -1) {
                            global_failure_args[0] = i_36517;
                            global_failure_args[1] = iota32_arg_28439;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_0_f_res_f_res_f_res_36522 = ((__global
                                                           float *) mem_43483)[phys_tid_36210 +
                                                                               i_36517 *
                                                                               (segmap_usable_groups_36443 *
                                                                                segmap_group_sizze_36442)];
                
                defunc_0_f_res_f_res_36502 = defunc_0_f_res_f_res_f_res_36522;
            }
            defunc_0_f_res_36499 = defunc_0_f_res_f_res_36502;
        }
        ((__global float *) mem_43503)[gtid_36209] = defunc_0_f_res_36499;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36442
}
__kernel void mainMagnitudezisegmap_36331(__global int *global_failure,
                                          int failure_is_an_option, __global
                                          int64_t *global_failure_args,
                                          int64_t N_28043, int64_t m_28044,
                                          int64_t iota32_arg_28439, __global
                                          unsigned char *defunc_4_map_res_mem_43356,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_43423,
                                          __global unsigned char *mem_43465,
                                          __global unsigned char *mem_43469)
{
    #define segmap_group_sizze_36413 (mainMagnitudezisegmap_group_sizze_36334)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44784;
    int32_t local_tid_44785;
    int64_t group_sizze_44788;
    int32_t wave_sizze_44787;
    int32_t group_tid_44786;
    
    global_tid_44784 = get_global_id(0);
    local_tid_44785 = get_local_id(0);
    group_sizze_44788 = get_local_size(0);
    wave_sizze_44787 = LOCKSTEP_WIDTH;
    group_tid_44786 = get_group_id(0);
    
    int32_t phys_tid_36331;
    
    phys_tid_36331 = global_tid_44784;
    
    int64_t gtid_36329;
    
    gtid_36329 = squot64(sext_i32_i64(group_tid_44786) *
                         segmap_group_sizze_36413 +
                         sext_i32_i64(local_tid_44785), iota32_arg_28439);
    
    int64_t gtid_36330;
    
    gtid_36330 = sext_i32_i64(group_tid_44786) * segmap_group_sizze_36413 +
        sext_i32_i64(local_tid_44785) - squot64(sext_i32_i64(group_tid_44786) *
                                                segmap_group_sizze_36413 +
                                                sext_i32_i64(local_tid_44785),
                                                iota32_arg_28439) *
        iota32_arg_28439;
    if (slt64(gtid_36329, m_28044) && slt64(gtid_36330, iota32_arg_28439)) {
        int32_t x_36416 = ((__global
                            int32_t *) defunc_3_map_res_mem_43423)[gtid_36329];
        int32_t y_36418 = ((__global int32_t *) mem_43465)[gtid_36329];
        int32_t index_primexp_40605 = sext_i64_i32(gtid_36330);
        bool cond_36420 = slt32(index_primexp_40605, y_36418);
        bool cond_36421;
        
        if (cond_36420) {
            int32_t i_36422 = add32(x_36416, index_primexp_40605);
            int64_t i_36423 = sext_i32_i64(i_36422);
            bool x_36424 = sle64((int64_t) 0, i_36423);
            bool y_36425 = slt64(i_36423, N_28043);
            bool bounds_check_36426 = x_36424 && y_36425;
            bool index_certs_36427;
            
            if (!bounds_check_36426) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 11) ==
                        -1) {
                        global_failure_args[0] = i_36423;
                        global_failure_args[1] = N_28043;
                        ;
                    }
                    return;
                }
            }
            
            float isnan_arg_36428 = ((__global
                                      float *) defunc_4_map_res_mem_43356)[gtid_36329 *
                                                                           N_28043 +
                                                                           i_36423];
            bool isnan_res_36429;
            
            isnan_res_36429 = futrts_isnan32(isnan_arg_36428);
            
            bool cond_t_res_36430 = !isnan_res_36429;
            
            cond_36421 = cond_t_res_36430;
        } else {
            cond_36421 = 0;
        }
        
        float defunc_0_f_res_36431;
        
        if (cond_36421) {
            int32_t i_36432 = add32(x_36416, index_primexp_40605);
            int64_t i_36433 = sext_i32_i64(i_36432);
            bool x_36434 = sle64((int64_t) 0, i_36433);
            bool y_36435 = slt64(i_36433, N_28043);
            bool bounds_check_36436 = x_36434 && y_36435;
            bool index_certs_36437;
            
            if (!bounds_check_36436) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 12) ==
                        -1) {
                        global_failure_args[0] = i_36433;
                        global_failure_args[1] = N_28043;
                        ;
                    }
                    return;
                }
            }
            
            float defunc_0_f_res_t_res_36438 = ((__global
                                                 float *) defunc_4_map_res_mem_43356)[gtid_36329 *
                                                                                      N_28043 +
                                                                                      i_36433];
            
            defunc_0_f_res_36431 = defunc_0_f_res_t_res_36438;
        } else {
            defunc_0_f_res_36431 = INFINITY;
        }
        ((__global float *) mem_43469)[gtid_36329 * iota32_arg_28439 +
                                       gtid_36330] = defunc_0_f_res_36431;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36413
}
__kernel void mainMagnitudezisegmap_36389(__global int *global_failure,
                                          int64_t m_28044, __global
                                          unsigned char *defunc_4_map_res_mem_43355,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_43423,
                                          __global unsigned char *mem_43465)
{
    #define segmap_group_sizze_36398 (mainMagnitudezisegmap_group_sizze_36391)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44779;
    int32_t local_tid_44780;
    int64_t group_sizze_44783;
    int32_t wave_sizze_44782;
    int32_t group_tid_44781;
    
    global_tid_44779 = get_global_id(0);
    local_tid_44780 = get_local_id(0);
    group_sizze_44783 = get_local_size(0);
    wave_sizze_44782 = LOCKSTEP_WIDTH;
    group_tid_44781 = get_group_id(0);
    
    int32_t phys_tid_36389;
    
    phys_tid_36389 = global_tid_44779;
    
    int64_t gtid_36388;
    
    gtid_36388 = sext_i32_i64(group_tid_44781) * segmap_group_sizze_36398 +
        sext_i32_i64(local_tid_44780);
    if (slt64(gtid_36388, m_28044)) {
        int32_t x_36401 = ((__global
                            int32_t *) defunc_4_map_res_mem_43355)[gtid_36388];
        int32_t x_36402 = ((__global
                            int32_t *) defunc_3_map_res_mem_43423)[gtid_36388];
        int32_t y_36403 = sub32(x_36401, x_36402);
        
        ((__global int32_t *) mem_43465)[gtid_36388] = y_36403;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36398
}
__kernel void mainMagnitudezisegmap_36887(__global int *global_failure,
                                          int64_t N_28043, int64_t m_28044,
                                          int32_t n_28047, __global
                                          unsigned char *defunc_4_map_res_mem_43357,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_43423,
                                          __global unsigned char *mem_43517,
                                          __global unsigned char *mem_43524,
                                          __global unsigned char *mem_43526,
                                          __global unsigned char *mem_43528,
                                          __global unsigned char *mem_43531,
                                          __global unsigned char *mem_43533)
{
    #define segmap_group_sizze_37151 (mainMagnitudezisegmap_group_sizze_36889)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44989;
    int32_t local_tid_44990;
    int64_t group_sizze_44993;
    int32_t wave_sizze_44992;
    int32_t group_tid_44991;
    
    global_tid_44989 = get_global_id(0);
    local_tid_44990 = get_local_id(0);
    group_sizze_44993 = get_local_size(0);
    wave_sizze_44992 = LOCKSTEP_WIDTH;
    group_tid_44991 = get_group_id(0);
    
    int32_t phys_tid_36887;
    
    phys_tid_36887 = global_tid_44989;
    
    int64_t gtid_36886;
    
    gtid_36886 = sext_i32_i64(group_tid_44991) * segmap_group_sizze_37151 +
        sext_i32_i64(local_tid_44990);
    if (slt64(gtid_36886, m_28044)) {
        int32_t x_37155 = ((__global
                            int32_t *) defunc_3_map_res_mem_43423)[gtid_36886];
        int32_t y_37157 = ((__global int32_t *) mem_43517)[gtid_36886];
        bool acc0_37159 = ((__global bool *) mem_43524)[gtid_36886];
        bool x_37164 = acc0_37159 && acc0_37159;
        int32_t defunc_1_op_res_f_res_37168;
        
        if (acc0_37159) {
            int32_t acc0_37160 = ((__global int32_t *) mem_43526)[gtid_36886];
            
            defunc_1_op_res_f_res_37168 = acc0_37160;
        } else {
            defunc_1_op_res_f_res_37168 = -1;
        }
        
        bool cond_37174 = y_37157 == 0;
        float defunc_0_f_res_37175;
        
        if (cond_37174) {
            defunc_0_f_res_37175 = 0.0F;
        } else {
            float acc0_37161 = ((__global float *) mem_43528)[gtid_36886];
            float i32_res_37176 = sitofp_i32_f32(y_37157);
            float defunc_0_f_res_f_res_37177 = acc0_37161 / i32_res_37176;
            
            defunc_0_f_res_37175 = defunc_0_f_res_f_res_37177;
        }
        
        bool cond_37178 = !x_37164;
        int32_t fst_breakzq_37179;
        
        if (cond_37178) {
            fst_breakzq_37179 = -1;
        } else {
            bool cond_37180 = slt32(defunc_1_op_res_f_res_37168, y_37157);
            int32_t adjustValInds_res_37181;
            
            if (cond_37180) {
                int32_t i_37182 = add32(x_37155, defunc_1_op_res_f_res_37168);
                int64_t i_37183 = sext_i32_i64(i_37182);
                int32_t x_37184 = ((__global
                                    int32_t *) defunc_4_map_res_mem_43357)[gtid_36886 *
                                                                           N_28043 +
                                                                           i_37183];
                int32_t adjustValInds_res_t_res_37185 = sub32(x_37184, n_28047);
                
                adjustValInds_res_37181 = adjustValInds_res_t_res_37185;
            } else {
                adjustValInds_res_37181 = -1;
            }
            fst_breakzq_37179 = adjustValInds_res_37181;
        }
        
        bool cond_37186 = sle32(x_37155, 5);
        bool cond_f_res_37187 = sle32(y_37157, 5);
        bool x_37188 = !cond_37186;
        bool y_37189 = cond_f_res_37187 && x_37188;
        bool cond_37190 = cond_37186 || y_37189;
        int32_t fst_breakzq_37191;
        
        if (cond_37190) {
            fst_breakzq_37191 = -2;
        } else {
            fst_breakzq_37191 = fst_breakzq_37179;
        }
        ((__global int32_t *) mem_43531)[gtid_36886] = fst_breakzq_37191;
        ((__global float *) mem_43533)[gtid_36886] = defunc_0_f_res_37175;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37151
}
__kernel void mainMagnitudezisegmap_37029(__global int *global_failure,
                                          int64_t m_28044,
                                          int64_t num_groups_37052, __global
                                          unsigned char *defunc_4_map_res_mem_43355,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_43423,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_43424,
                                          __global unsigned char *mem_43515,
                                          __global unsigned char *mem_43517)
{
    #define segmap_group_sizze_37051 (mainMagnitudezisegmap_group_sizze_37031)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44827;
    int32_t local_tid_44828;
    int64_t group_sizze_44831;
    int32_t wave_sizze_44830;
    int32_t group_tid_44829;
    
    global_tid_44827 = get_global_id(0);
    local_tid_44828 = get_local_id(0);
    group_sizze_44831 = get_local_size(0);
    wave_sizze_44830 = LOCKSTEP_WIDTH;
    group_tid_44829 = get_group_id(0);
    
    int32_t phys_tid_37029;
    
    phys_tid_37029 = global_tid_44827;
    
    int32_t phys_group_id_44832;
    
    phys_group_id_44832 = get_group_id(0);
    for (int32_t i_44833 = 0; i_44833 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28044, segmap_group_sizze_37051)) -
                   phys_group_id_44832, sext_i64_i32(num_groups_37052));
         i_44833++) {
        int32_t virt_group_id_44834 = phys_group_id_44832 + i_44833 *
                sext_i64_i32(num_groups_37052);
        int64_t gtid_37028 = sext_i32_i64(virt_group_id_44834) *
                segmap_group_sizze_37051 + sext_i32_i64(local_tid_44828);
        
        if (slt64(gtid_37028, m_28044)) {
            int32_t x_37058 = ((__global
                                int32_t *) defunc_4_map_res_mem_43355)[gtid_37028];
            int32_t x_37059 = ((__global
                                int32_t *) defunc_3_map_res_mem_43423)[gtid_37028];
            float x_37060 = ((__global
                              float *) defunc_3_map_res_mem_43424)[gtid_37028];
            int32_t y_37061 = sub32(x_37058, x_37059);
            float i32_res_37062 = sitofp_i32_f32(x_37059);
            float sqrt_res_37063;
            
            sqrt_res_37063 = futrts_sqrt32(i32_res_37062);
            
            float y_37064 = x_37060 * sqrt_res_37063;
            
            ((__global float *) mem_43515)[gtid_37028] = y_37064;
            ((__global int32_t *) mem_43517)[gtid_37028] = y_37061;
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37051
}
__kernel void mainMagnitudezisegmap_intragroup_34066(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_42741_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_42731_backing_aligned_1,
                                                     int32_t k2p2zq_28057,
                                                     int64_t i32_res_28059,
                                                     int32_t m_28190,
                                                     int64_t i32_res_28192,
                                                     int64_t i32_res_28207,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_42727,
                                                     __global
                                                     unsigned char *mem_42751)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42741_backing_1 = (__local volatile
                                                           char *) mem_42741_backing_aligned_0;
    __local volatile char *restrict mem_42731_backing_0 = (__local volatile
                                                           char *) mem_42731_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43999;
    int32_t local_tid_44000;
    int64_t group_sizze_44003;
    int32_t wave_sizze_44002;
    int32_t group_tid_44001;
    
    global_tid_43999 = get_global_id(0);
    local_tid_44000 = get_local_id(0);
    group_sizze_44003 = get_local_size(0);
    wave_sizze_44002 = LOCKSTEP_WIDTH;
    group_tid_44001 = get_group_id(0);
    
    int32_t phys_tid_34066;
    
    phys_tid_34066 = group_tid_44001;
    
    int32_t ltid_pre_44004;
    
    ltid_pre_44004 = local_tid_44000;
    
    int64_t gtid_34021;
    
    gtid_34021 = sext_i32_i64(group_tid_44001);
    
    __local char *mem_42731;
    
    mem_42731 = (__local char *) mem_42731_backing_0;
    
    int64_t gtid_34024 = sext_i32_i64(ltid_pre_44004);
    int32_t phys_tid_34025 = local_tid_44000;
    int32_t index_primexp_40564 = sext_i64_i32(gtid_34024);
    int32_t defunc_0_f_res_34191 = sdiv32(index_primexp_40564, m_28190);
    int32_t defunc_0_f_res_34192 = smod32(index_primexp_40564, m_28190);
    bool cond_34193 = slt32(defunc_0_f_res_34192, k2p2zq_28057);
    float defunc_0_f_res_34194;
    
    if (cond_34193) {
        int64_t i_34195 = sext_i32_i64(defunc_0_f_res_34191);
        int64_t j_34196 = sext_i32_i64(defunc_0_f_res_34192);
        float defunc_0_f_res_t_res_34197 = ((__global
                                             float *) defunc_3_map_res_mem_42727)[gtid_34021 *
                                                                                  (i32_res_28059 *
                                                                                   i32_res_28059) +
                                                                                  i_34195 *
                                                                                  i32_res_28059 +
                                                                                  j_34196];
        
        defunc_0_f_res_34194 = defunc_0_f_res_t_res_34197;
    } else {
        int32_t y_34198 = add32(k2p2zq_28057, defunc_0_f_res_34191);
        bool cond_34199 = defunc_0_f_res_34192 == y_34198;
        float defunc_0_f_res_f_res_34200;
        
        if (cond_34199) {
            defunc_0_f_res_f_res_34200 = 1.0F;
        } else {
            defunc_0_f_res_f_res_34200 = 0.0F;
        }
        defunc_0_f_res_34194 = defunc_0_f_res_f_res_34200;
    }
    ((__local float *) mem_42731)[gtid_34024] = defunc_0_f_res_34194;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_42741;
    
    mem_42741 = (__local char *) mem_42741_backing_1;
    for (int32_t i_34202 = 0; i_34202 < k2p2zq_28057; i_34202++) {
        int64_t i32_res_34204 = sext_i32_i64(i_34202);
        float v1_34205 = ((__local float *) mem_42731)[i32_res_34204];
        bool cond_34206 = v1_34205 == 0.0F;
        int64_t gtid_34037 = sext_i32_i64(ltid_pre_44004);
        int32_t phys_tid_34038 = local_tid_44000;
        int32_t defunc_0_f_res_34209 = sext_i64_i32(gtid_34037);
        int32_t defunc_0_f_res_34210 = sdiv32(defunc_0_f_res_34209, m_28190);
        int32_t defunc_0_f_res_34211 = smod32(defunc_0_f_res_34209, m_28190);
        float defunc_0_f_res_34212;
        
        if (cond_34206) {
            int32_t x_34213 = mul32(m_28190, defunc_0_f_res_34210);
            int32_t i32_arg_34214 = add32(defunc_0_f_res_34211, x_34213);
            int64_t i32_res_34215 = sext_i32_i64(i32_arg_34214);
            float defunc_0_f_res_t_res_34216 = ((__local
                                                 float *) mem_42731)[i32_res_34215];
            
            defunc_0_f_res_34212 = defunc_0_f_res_t_res_34216;
        } else {
            int64_t i32_res_34217 = sext_i32_i64(defunc_0_f_res_34211);
            float x_34218 = ((__local float *) mem_42731)[i32_res_34217];
            float x_34219 = x_34218 / v1_34205;
            int32_t y_34220 = sub32(k2p2zq_28057, 1);
            bool cond_34221 = slt32(defunc_0_f_res_34210, y_34220);
            float defunc_0_f_res_f_res_34222;
            
            if (cond_34221) {
                int32_t x_34223 = add32(1, defunc_0_f_res_34210);
                int32_t x_34224 = mul32(m_28190, x_34223);
                int32_t i32_arg_34225 = add32(defunc_0_f_res_34211, x_34224);
                int64_t i32_res_34226 = sext_i32_i64(i32_arg_34225);
                float x_34227 = ((__local float *) mem_42731)[i32_res_34226];
                int32_t i32_arg_34228 = add32(i_34202, x_34224);
                int64_t i32_res_34229 = sext_i32_i64(i32_arg_34228);
                float x_34230 = ((__local float *) mem_42731)[i32_res_34229];
                float y_34231 = x_34219 * x_34230;
                float defunc_0_f_res_f_res_t_res_34232 = x_34227 - y_34231;
                
                defunc_0_f_res_f_res_34222 = defunc_0_f_res_f_res_t_res_34232;
            } else {
                defunc_0_f_res_f_res_34222 = x_34219;
            }
            defunc_0_f_res_34212 = defunc_0_f_res_f_res_34222;
        }
        ((__local float *) mem_42741)[gtid_34037] = defunc_0_f_res_34212;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_34064 = sext_i32_i64(ltid_pre_44004);
        int32_t phys_tid_34065 = local_tid_44000;
        float write_value_34235 = ((__local float *) mem_42741)[write_i_34064];
        
        if (sle64((int64_t) 0, write_i_34064) && slt64(write_i_34064,
                                                       i32_res_28192)) {
            ((__local float *) mem_42731)[write_i_34064] = write_value_34235;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    for (int64_t i_44006 = 0; i_44006 < sdiv_up64(i32_res_28059 *
                                                  i32_res_28059 -
                                                  sext_i32_i64(local_tid_44000),
                                                  i32_res_28192); i_44006++) {
        ((__global float *) mem_42751)[gtid_34021 * (i32_res_28059 *
                                                     i32_res_28059) +
                                       squot64(i_44006 * i32_res_28192 +
                                               sext_i32_i64(local_tid_44000),
                                               i32_res_28059) * i32_res_28059 +
                                       (i_44006 * i32_res_28192 +
                                        sext_i32_i64(local_tid_44000) -
                                        squot64(i_44006 * i32_res_28192 +
                                                sext_i32_i64(local_tid_44000),
                                                i32_res_28059) *
                                        i32_res_28059)] = ((__local
                                                            float *) mem_42731)[i32_res_28059 +
                                                                                (squot64(i_44006 *
                                                                                         i32_res_28192 +
                                                                                         sext_i32_i64(local_tid_44000),
                                                                                         i32_res_28059) *
                                                                                 i32_res_28207 +
                                                                                 (i_44006 *
                                                                                  i32_res_28192 +
                                                                                  sext_i32_i64(local_tid_44000) -
                                                                                  squot64(i_44006 *
                                                                                          i32_res_28192 +
                                                                                          sext_i32_i64(local_tid_44000),
                                                                                          i32_res_28059) *
                                                                                  i32_res_28059))];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_3:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_34293(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_42772_backing_aligned_0,
                                                     int64_t m_28044,
                                                     int32_t k2p2zq_28057,
                                                     int32_t m_28190,
                                                     int64_t i32_res_28192,
                                                     int32_t i_34688,
                                                     int64_t i32_res_34690,
                                                     int64_t ctx_param_ext_42758,
                                                     int64_t ctx_param_ext_42759,
                                                     int64_t ctx_param_ext_42761,
                                                     __global
                                                     unsigned char *mem_param_42763,
                                                     __global
                                                     unsigned char *mem_42768,
                                                     __global
                                                     unsigned char *mem_42776)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42772_backing_0 = (__local volatile
                                                           char *) mem_42772_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44033;
    int32_t local_tid_44034;
    int64_t group_sizze_44037;
    int32_t wave_sizze_44036;
    int32_t group_tid_44035;
    
    global_tid_44033 = get_global_id(0);
    local_tid_44034 = get_local_id(0);
    group_sizze_44037 = get_local_size(0);
    wave_sizze_44036 = LOCKSTEP_WIDTH;
    group_tid_44035 = get_group_id(0);
    
    int32_t phys_tid_34293;
    
    phys_tid_34293 = group_tid_44035;
    
    int32_t ltid_pre_44038;
    
    ltid_pre_44038 = local_tid_44034;
    
    int64_t gtid_34261;
    
    gtid_34261 = sext_i32_i64(group_tid_44035);
    
    float v1_34703 = ((__global float *) mem_param_42763)[ctx_param_ext_42758 +
                                                          (gtid_34261 *
                                                           ctx_param_ext_42759 +
                                                           i32_res_34690 *
                                                           ctx_param_ext_42761)];
    bool cond_34704 = v1_34703 == 0.0F;
    __local char *mem_42772;
    
    mem_42772 = (__local char *) mem_42772_backing_0;
    
    int64_t gtid_34264 = sext_i32_i64(ltid_pre_44038);
    int32_t phys_tid_34265 = local_tid_44034;
    int32_t defunc_0_f_res_34707 = sext_i64_i32(gtid_34264);
    int32_t defunc_0_f_res_34708 = sdiv32(defunc_0_f_res_34707, m_28190);
    int32_t defunc_0_f_res_34709 = smod32(defunc_0_f_res_34707, m_28190);
    float defunc_0_f_res_34710;
    
    if (cond_34704) {
        int32_t x_34711 = mul32(m_28190, defunc_0_f_res_34708);
        int32_t i32_arg_34712 = add32(defunc_0_f_res_34709, x_34711);
        int64_t i32_res_34713 = sext_i32_i64(i32_arg_34712);
        float defunc_0_f_res_t_res_34714 = ((__global
                                             float *) mem_param_42763)[ctx_param_ext_42758 +
                                                                       (gtid_34261 *
                                                                        ctx_param_ext_42759 +
                                                                        i32_res_34713 *
                                                                        ctx_param_ext_42761)];
        
        defunc_0_f_res_34710 = defunc_0_f_res_t_res_34714;
    } else {
        int64_t i32_res_34715 = sext_i32_i64(defunc_0_f_res_34709);
        float x_34716 = ((__global
                          float *) mem_param_42763)[ctx_param_ext_42758 +
                                                    (gtid_34261 *
                                                     ctx_param_ext_42759 +
                                                     i32_res_34715 *
                                                     ctx_param_ext_42761)];
        float x_34717 = x_34716 / v1_34703;
        int32_t y_34718 = sub32(k2p2zq_28057, 1);
        bool cond_34719 = slt32(defunc_0_f_res_34708, y_34718);
        float defunc_0_f_res_f_res_34720;
        
        if (cond_34719) {
            int32_t x_34721 = add32(1, defunc_0_f_res_34708);
            int32_t x_34722 = mul32(m_28190, x_34721);
            int32_t i32_arg_34723 = add32(defunc_0_f_res_34709, x_34722);
            int64_t i32_res_34724 = sext_i32_i64(i32_arg_34723);
            float x_34725 = ((__global
                              float *) mem_param_42763)[ctx_param_ext_42758 +
                                                        (gtid_34261 *
                                                         ctx_param_ext_42759 +
                                                         i32_res_34724 *
                                                         ctx_param_ext_42761)];
            int32_t i32_arg_34726 = add32(i_34688, x_34722);
            int64_t i32_res_34727 = sext_i32_i64(i32_arg_34726);
            float x_34728 = ((__global
                              float *) mem_param_42763)[ctx_param_ext_42758 +
                                                        (gtid_34261 *
                                                         ctx_param_ext_42759 +
                                                         i32_res_34727 *
                                                         ctx_param_ext_42761)];
            float y_34729 = x_34717 * x_34728;
            float defunc_0_f_res_f_res_t_res_34730 = x_34725 - y_34729;
            
            defunc_0_f_res_f_res_34720 = defunc_0_f_res_f_res_t_res_34730;
        } else {
            defunc_0_f_res_f_res_34720 = x_34717;
        }
        defunc_0_f_res_34710 = defunc_0_f_res_f_res_34720;
    }
    ((__local float *) mem_42772)[gtid_34264] = defunc_0_f_res_34710;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_34291 = sext_i32_i64(ltid_pre_44038);
    int32_t phys_tid_34292 = local_tid_44034;
    float write_value_34733 = ((__local float *) mem_42772)[write_i_34291];
    
    if (sle64((int64_t) 0, write_i_34291) && slt64(write_i_34291,
                                                   i32_res_28192)) {
        ((__global float *) mem_42768)[gtid_34261 + write_i_34291 * m_28044] =
            write_value_34733;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44034 == 0) {
        for (int64_t i_44039 = 0; i_44039 < i32_res_28192; i_44039++) {
            ((__global float *) mem_42776)[gtid_34261 * i32_res_28192 +
                                           i_44039] = ((__global
                                                        float *) mem_42768)[gtid_34261 +
                                                                            i_44039 *
                                                                            m_28044];
        }
    }
    
  error_2:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_35244(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43328_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43326_backing_aligned_1,
                                                     __local volatile
                                                     int64_t *mem_43324_backing_aligned_2,
                                                     __local volatile
                                                     int64_t *mem_43322_backing_aligned_3,
                                                     int64_t N_28043,
                                                     int64_t i_28319, __global
                                                     unsigned char *images_mem_42559,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43318,
                                                     __global
                                                     unsigned char *mem_43331,
                                                     __global
                                                     unsigned char *mem_43334,
                                                     __global
                                                     unsigned char *mem_43337)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43328_backing_3 = (__local volatile
                                                           char *) mem_43328_backing_aligned_0;
    __local volatile char *restrict mem_43326_backing_2 = (__local volatile
                                                           char *) mem_43326_backing_aligned_1;
    __local volatile char *restrict mem_43324_backing_1 = (__local volatile
                                                           char *) mem_43324_backing_aligned_2;
    __local volatile char *restrict mem_43322_backing_0 = (__local volatile
                                                           char *) mem_43322_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44415;
    int32_t local_tid_44416;
    int64_t group_sizze_44419;
    int32_t wave_sizze_44418;
    int32_t group_tid_44417;
    
    global_tid_44415 = get_global_id(0);
    local_tid_44416 = get_local_id(0);
    group_sizze_44419 = get_local_size(0);
    wave_sizze_44418 = LOCKSTEP_WIDTH;
    group_tid_44417 = get_group_id(0);
    
    int32_t phys_tid_35244;
    
    phys_tid_35244 = group_tid_44417;
    
    int32_t ltid_pre_44420;
    
    ltid_pre_44420 = local_tid_44416;
    
    int64_t gtid_35237;
    
    gtid_35237 = sext_i32_i64(group_tid_44417);
    
    __local char *mem_43322;
    
    mem_43322 = (__local char *) mem_43322_backing_0;
    
    __local char *mem_43324;
    
    mem_43324 = (__local char *) mem_43324_backing_1;
    
    int64_t gtid_35240 = sext_i32_i64(ltid_pre_44420);
    int32_t phys_tid_35241 = local_tid_44416;
    float x_35333 = ((__global float *) images_mem_42559)[gtid_35237 * N_28043 +
                                                          gtid_35240];
    bool isnan_res_35335;
    
    isnan_res_35335 = futrts_isnan32(x_35333);
    
    bool cond_35336 = !isnan_res_35335;
    float defunc_0_f_res_35337;
    
    if (cond_35336) {
        float x_35334 = ((__global
                          float *) defunc_3_map_res_mem_43318)[gtid_35237 *
                                                               N_28043 +
                                                               gtid_35240];
        float defunc_0_f_res_t_res_35338 = x_35333 - x_35334;
        
        defunc_0_f_res_35337 = defunc_0_f_res_t_res_35338;
    } else {
        defunc_0_f_res_35337 = NAN;
    }
    
    bool isnan_res_35339;
    
    isnan_res_35339 = futrts_isnan32(defunc_0_f_res_35337);
    
    bool defunc_0_p_res_35340 = !isnan_res_35339;
    int64_t defunc_0_f_res_35341 = btoi_bool_i64(defunc_0_p_res_35340);
    
    ((__local int64_t *) mem_43322)[gtid_35240] = defunc_0_f_res_35341;
    ((__local float *) mem_43324)[gtid_35240] = defunc_0_f_res_35337;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_44421;
    
    dims_flat_44421 = N_28043;
    
    int64_t x_35330;
    int64_t x_35331;
    int64_t x_44423;
    int64_t x_44424;
    bool ltid_in_bounds_44426;
    
    ltid_in_bounds_44426 = slt64(sext_i32_i64(local_tid_44416), N_28043);
    
    int32_t skip_threads_44427;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44426) {
            x_35331 = ((volatile __local
                        int64_t *) mem_43322)[sext_i32_i64(local_tid_44416)];
            if ((local_tid_44416 - squot32(local_tid_44416, 32) * 32) == 0) {
                x_35330 = x_35331;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44427 = 1;
        while (slt32(skip_threads_44427, 32)) {
            if (sle32(skip_threads_44427, local_tid_44416 -
                      squot32(local_tid_44416, 32) * 32) &&
                ltid_in_bounds_44426) {
                // read operands
                {
                    x_35330 = ((volatile __local
                                int64_t *) mem_43322)[sext_i32_i64(local_tid_44416) -
                                                      sext_i32_i64(skip_threads_44427)];
                }
                // perform operation
                {
                    bool inactive_44428 =
                         slt64(srem64(sext_i32_i64(local_tid_44416), N_28043),
                               sext_i32_i64(local_tid_44416) -
                               sext_i32_i64(local_tid_44416 -
                               skip_threads_44427));
                    
                    if (inactive_44428) {
                        x_35330 = x_35331;
                    }
                    if (!inactive_44428) {
                        int64_t defunc_1_op_res_35332 = add64(x_35330, x_35331);
                        
                        x_35330 = defunc_1_op_res_35332;
                    }
                }
            }
            if (sle32(wave_sizze_44418, skip_threads_44427)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44427, local_tid_44416 -
                      squot32(local_tid_44416, 32) * 32) &&
                ltid_in_bounds_44426) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_43322)[sext_i32_i64(local_tid_44416)] =
                        x_35330;
                    x_35331 = x_35330;
                }
            }
            if (sle32(wave_sizze_44418, skip_threads_44427)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44427 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44416 - squot32(local_tid_44416, 32) * 32) == 31 &&
            ltid_in_bounds_44426) {
            ((volatile __local
              int64_t *) mem_43322)[sext_i32_i64(squot32(local_tid_44416,
                                                         32))] = x_35330;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44429;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44416, 32) == 0 && ltid_in_bounds_44426) {
                x_44424 = ((volatile __local
                            int64_t *) mem_43322)[sext_i32_i64(local_tid_44416)];
                if ((local_tid_44416 - squot32(local_tid_44416, 32) * 32) ==
                    0) {
                    x_44423 = x_44424;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44429 = 1;
            while (slt32(skip_threads_44429, 32)) {
                if (sle32(skip_threads_44429, local_tid_44416 -
                          squot32(local_tid_44416, 32) * 32) &&
                    (squot32(local_tid_44416, 32) == 0 &&
                     ltid_in_bounds_44426)) {
                    // read operands
                    {
                        x_44423 = ((volatile __local
                                    int64_t *) mem_43322)[sext_i32_i64(local_tid_44416) -
                                                          sext_i32_i64(skip_threads_44429)];
                    }
                    // perform operation
                    {
                        bool inactive_44430 =
                             slt64(srem64(sext_i32_i64(local_tid_44416 * 32 +
                                          32 - 1), N_28043),
                                   sext_i32_i64(local_tid_44416 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_44416 -
                                                 skip_threads_44429) * 32 + 32 -
                                   1));
                        
                        if (inactive_44430) {
                            x_44423 = x_44424;
                        }
                        if (!inactive_44430) {
                            int64_t defunc_1_op_res_44425 = add64(x_44423,
                                                                  x_44424);
                            
                            x_44423 = defunc_1_op_res_44425;
                        }
                    }
                }
                if (sle32(wave_sizze_44418, skip_threads_44429)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44429, local_tid_44416 -
                          squot32(local_tid_44416, 32) * 32) &&
                    (squot32(local_tid_44416, 32) == 0 &&
                     ltid_in_bounds_44426)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_43322)[sext_i32_i64(local_tid_44416)] =
                            x_44423;
                        x_44424 = x_44423;
                    }
                }
                if (sle32(wave_sizze_44418, skip_threads_44429)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44429 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44416, 32) == 0 || !ltid_in_bounds_44426)) {
            // read operands
            {
                x_35331 = x_35330;
                x_35330 = ((__local
                            int64_t *) mem_43322)[sext_i32_i64(squot32(local_tid_44416,
                                                                       32)) -
                                                  (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44431 =
                     slt64(srem64(sext_i32_i64(local_tid_44416), N_28043),
                           sext_i32_i64(local_tid_44416) -
                           sext_i32_i64(squot32(local_tid_44416, 32) * 32 - 1));
                
                if (inactive_44431) {
                    x_35330 = x_35331;
                }
                if (!inactive_44431) {
                    int64_t defunc_1_op_res_35332 = add64(x_35330, x_35331);
                    
                    x_35330 = defunc_1_op_res_35332;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_43322)[sext_i32_i64(local_tid_44416)] =
                    x_35330;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44416, 32) == 0) {
            ((__local int64_t *) mem_43322)[sext_i32_i64(local_tid_44416)] =
                x_35331;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_35342 = ((__local int64_t *) mem_43322)[i_28319];
    int32_t defunc_0_f_res_35343 = sext_i64_i32(last_res_35342);
    __local char *mem_43326;
    
    mem_43326 = (__local char *) mem_43326_backing_2;
    ((__local float *) mem_43326)[sext_i32_i64(local_tid_44416)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43328;
    
    mem_43328 = (__local char *) mem_43328_backing_3;
    ((__local int32_t *) mem_43328)[sext_i32_i64(local_tid_44416)] = 0;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_35242 = sext_i32_i64(ltid_pre_44420);
    int32_t phys_tid_35243 = local_tid_44416;
    float x_35348 = ((__local float *) mem_43324)[write_i_35242];
    int32_t index_primexp_40584 = sext_i64_i32(write_i_35242);
    bool isnan_res_35351;
    
    isnan_res_35351 = futrts_isnan32(x_35348);
    
    bool defunc_0_p_res_35352 = !isnan_res_35351;
    int64_t defunc_1_f_res_35353;
    
    if (defunc_0_p_res_35352) {
        int64_t x_35349 = ((__local int64_t *) mem_43322)[write_i_35242];
        int64_t defunc_1_f_res_t_res_35354 = sub64(x_35349, (int64_t) 1);
        
        defunc_1_f_res_35353 = defunc_1_f_res_t_res_35354;
    } else {
        defunc_1_f_res_35353 = (int64_t) -1;
    }
    if (sle64((int64_t) 0, defunc_1_f_res_35353) && slt64(defunc_1_f_res_35353,
                                                          N_28043)) {
        ((__local int32_t *) mem_43328)[defunc_1_f_res_35353] =
            index_primexp_40584;
    }
    if (sle64((int64_t) 0, defunc_1_f_res_35353) && slt64(defunc_1_f_res_35353,
                                                          N_28043)) {
        ((__local float *) mem_43326)[defunc_1_f_res_35353] = x_35348;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44416 == 0) {
        ((__global int32_t *) mem_43331)[gtid_35237] = defunc_0_f_res_35343;
    }
    ((__global float *) mem_43334)[gtid_35237 * N_28043 +
                                   sext_i32_i64(local_tid_44416)] = ((__local
                                                                      float *) mem_43326)[sext_i32_i64(local_tid_44416)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global int32_t *) mem_43337)[gtid_35237 * N_28043 +
                                     sext_i32_i64(local_tid_44416)] = ((__local
                                                                        int32_t *) mem_43328)[sext_i32_i64(local_tid_44416)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_35584(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *red_arr_mem_44540_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *red_arr_mem_44536_backing_aligned_1,
                                                     int64_t N_28043,
                                                     float hfrac_28049,
                                                     int64_t i32_res_28053,
                                                     int32_t k2p2_28055,
                                                     __global
                                                     unsigned char *images_mem_42559,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_43356,
                                                     __global
                                                     unsigned char *mem_43403,
                                                     __global
                                                     unsigned char *mem_43405,
                                                     __global
                                                     unsigned char *mem_43407)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44540_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44540_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44536_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44536_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44530;
    int32_t local_tid_44531;
    int64_t group_sizze_44534;
    int32_t wave_sizze_44533;
    int32_t group_tid_44532;
    
    global_tid_44530 = get_global_id(0);
    local_tid_44531 = get_local_id(0);
    group_sizze_44534 = get_local_size(0);
    wave_sizze_44533 = LOCKSTEP_WIDTH;
    group_tid_44532 = get_group_id(0);
    
    int32_t phys_tid_35584;
    
    phys_tid_35584 = group_tid_44532;
    
    int32_t ltid_pre_44535;
    
    ltid_pre_44535 = local_tid_44531;
    
    int64_t gtid_35577;
    
    gtid_35577 = sext_i32_i64(group_tid_44532);
    
    int32_t defunc_0_f_res_35661;
    int64_t gtid_35580 = sext_i32_i64(ltid_pre_44535);
    int32_t phys_tid_35581 = local_tid_44531;
    __local char *red_arr_mem_44536;
    
    red_arr_mem_44536 = (__local char *) red_arr_mem_44536_backing_0;
    
    float x_35665;
    
    x_35665 = ((__global float *) images_mem_42559)[gtid_35577 * N_28043 +
                                                    gtid_35580];
    
    bool isnan_res_35666;
    
    isnan_res_35666 = futrts_isnan32(x_35665);
    
    bool cond_35667 = !isnan_res_35666;
    int32_t defunc_0_f_res_35668 = btoi_bool_i32(cond_35667);
    
    ((__local int32_t *) red_arr_mem_44536)[gtid_35580] = defunc_0_f_res_35668;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44538;
    int32_t skip_waves_44539;
    
    skip_waves_44539 = 1;
    
    int32_t x_35662;
    int32_t x_35663;
    
    offset_44538 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44531, sext_i64_i32(i32_res_28053))) {
            x_35662 = ((__local
                        int32_t *) red_arr_mem_44536)[sext_i32_i64(local_tid_44531 +
                                                      offset_44538)];
        }
    }
    offset_44538 = 1;
    while (slt32(offset_44538, wave_sizze_44533)) {
        if (slt32(local_tid_44531 + offset_44538,
                  sext_i64_i32(i32_res_28053)) && ((local_tid_44531 -
                                                    squot32(local_tid_44531,
                                                            wave_sizze_44533) *
                                                    wave_sizze_44533) & (2 *
                                                                         offset_44538 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_35663 = ((volatile __local
                            int32_t *) red_arr_mem_44536)[sext_i32_i64(local_tid_44531 +
                                                          offset_44538)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_35664 = add32(x_35662, x_35663);
                
                x_35662 = defunc_1_op_res_35664;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_44536)[sext_i32_i64(local_tid_44531)] =
                    x_35662;
            }
        }
        offset_44538 *= 2;
    }
    while (slt32(skip_waves_44539, squot32(sext_i64_i32(i32_res_28053) +
                                           wave_sizze_44533 - 1,
                                           wave_sizze_44533))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44538 = skip_waves_44539 * wave_sizze_44533;
        if (slt32(local_tid_44531 + offset_44538,
                  sext_i64_i32(i32_res_28053)) && ((local_tid_44531 -
                                                    squot32(local_tid_44531,
                                                            wave_sizze_44533) *
                                                    wave_sizze_44533) == 0 &&
                                                   (squot32(local_tid_44531,
                                                            wave_sizze_44533) &
                                                    (2 * skip_waves_44539 -
                                                     1)) == 0)) {
            // read array element
            {
                x_35663 = ((__local
                            int32_t *) red_arr_mem_44536)[sext_i32_i64(local_tid_44531 +
                                                          offset_44538)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_35664 = add32(x_35662, x_35663);
                
                x_35662 = defunc_1_op_res_35664;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_44536)[sext_i32_i64(local_tid_44531)] =
                    x_35662;
            }
        }
        skip_waves_44539 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_35661 = ((__local int32_t *) red_arr_mem_44536)[(int64_t) 0];
    
    float defunc_0_f_res_35669;
    int64_t gtid_35582 = sext_i32_i64(ltid_pre_44535);
    int32_t phys_tid_35583 = local_tid_44531;
    __local char *red_arr_mem_44540;
    
    red_arr_mem_44540 = (__local char *) red_arr_mem_44540_backing_1;
    
    int32_t index_primexp_40592;
    
    index_primexp_40592 = sext_i64_i32(gtid_35582);
    
    bool cond_35674 = slt32(index_primexp_40592, defunc_0_f_res_35661);
    float defunc_0_f_res_35675;
    
    if (cond_35674) {
        int64_t i_35676 = sext_i32_i64(index_primexp_40592);
        float defunc_0_f_res_t_res_35677 = ((__global
                                             float *) defunc_4_map_res_mem_43356)[gtid_35577 *
                                                                                  N_28043 +
                                                                                  i_35676];
        
        defunc_0_f_res_35675 = defunc_0_f_res_t_res_35677;
    } else {
        defunc_0_f_res_35675 = 0.0F;
    }
    
    float defunc_0_f_res_35678 = defunc_0_f_res_35675 * defunc_0_f_res_35675;
    
    ((__local float *) red_arr_mem_44540)[gtid_35582] = defunc_0_f_res_35678;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44542;
    int32_t skip_waves_44543;
    
    skip_waves_44543 = 1;
    
    float x_35670;
    float x_35671;
    
    offset_44542 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44531, sext_i64_i32(i32_res_28053))) {
            x_35670 = ((__local
                        float *) red_arr_mem_44540)[sext_i32_i64(local_tid_44531 +
                                                    offset_44542)];
        }
    }
    offset_44542 = 1;
    while (slt32(offset_44542, wave_sizze_44533)) {
        if (slt32(local_tid_44531 + offset_44542,
                  sext_i64_i32(i32_res_28053)) && ((local_tid_44531 -
                                                    squot32(local_tid_44531,
                                                            wave_sizze_44533) *
                                                    wave_sizze_44533) & (2 *
                                                                         offset_44542 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_35671 = ((volatile __local
                            float *) red_arr_mem_44540)[sext_i32_i64(local_tid_44531 +
                                                        offset_44542)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_35672 = x_35670 + x_35671;
                
                x_35670 = defunc_1_op_res_35672;
            }
            // write result of operation
            {
                ((volatile __local
                  float *) red_arr_mem_44540)[sext_i32_i64(local_tid_44531)] =
                    x_35670;
            }
        }
        offset_44542 *= 2;
    }
    while (slt32(skip_waves_44543, squot32(sext_i64_i32(i32_res_28053) +
                                           wave_sizze_44533 - 1,
                                           wave_sizze_44533))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44542 = skip_waves_44543 * wave_sizze_44533;
        if (slt32(local_tid_44531 + offset_44542,
                  sext_i64_i32(i32_res_28053)) && ((local_tid_44531 -
                                                    squot32(local_tid_44531,
                                                            wave_sizze_44533) *
                                                    wave_sizze_44533) == 0 &&
                                                   (squot32(local_tid_44531,
                                                            wave_sizze_44533) &
                                                    (2 * skip_waves_44543 -
                                                     1)) == 0)) {
            // read array element
            {
                x_35671 = ((__local
                            float *) red_arr_mem_44540)[sext_i32_i64(local_tid_44531 +
                                                        offset_44542)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_35672 = x_35670 + x_35671;
                
                x_35670 = defunc_1_op_res_35672;
            }
            // write result of operation
            {
                ((__local
                  float *) red_arr_mem_44540)[sext_i32_i64(local_tid_44531)] =
                    x_35670;
            }
        }
        skip_waves_44543 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_35669 = ((__local float *) red_arr_mem_44540)[(int64_t) 0];
    
    int32_t r32_arg_35679 = sub32(defunc_0_f_res_35661, k2p2_28055);
    float i32_res_35680 = sitofp_i32_f32(r32_arg_35679);
    float sqrt_arg_35681 = defunc_0_f_res_35669 / i32_res_35680;
    float sqrt_res_35682;
    
    sqrt_res_35682 = futrts_sqrt32(sqrt_arg_35681);
    
    float i32_res_35683 = sitofp_i32_f32(defunc_0_f_res_35661);
    float t32_arg_35684 = hfrac_28049 * i32_res_35683;
    int32_t f32_res_35685 = fptosi_f32_i32(t32_arg_35684);
    
    if (local_tid_44531 == 0) {
        ((__global int32_t *) mem_43403)[gtid_35577] = f32_res_35685;
    }
    if (local_tid_44531 == 0) {
        ((__global int32_t *) mem_43405)[gtid_35577] = defunc_0_f_res_35661;
    }
    if (local_tid_44531 == 0) {
        ((__global float *) mem_43407)[gtid_35577] = sqrt_res_35682;
    }
    
  error_4:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_36562(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *red_arr_mem_44823_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *red_arr_mem_44821_backing_aligned_1,
                                                     __local volatile
                                                     int64_t *red_arr_mem_44819_backing_aligned_2,
                                                     __local volatile
                                                     int64_t *mem_43507_backing_aligned_3,
                                                     int64_t N_28043,
                                                     int32_t n_28047,
                                                     int64_t iota32_arg_28439,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_43355,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_43356,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_43357,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43422,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43423,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43424,
                                                     __global
                                                     unsigned char *defunc_0_f_res_mem_43457,
                                                     __global
                                                     unsigned char *mem_43462,
                                                     __global
                                                     unsigned char *mem_43510,
                                                     __global
                                                     unsigned char *mem_43512)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44823_backing_3 =
                          (__local volatile
                           char *) red_arr_mem_44823_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44821_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_44821_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_44819_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44819_backing_aligned_2;
    __local volatile char *restrict mem_43507_backing_0 = (__local volatile
                                                           char *) mem_43507_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44802;
    int32_t local_tid_44803;
    int64_t group_sizze_44806;
    int32_t wave_sizze_44805;
    int32_t group_tid_44804;
    
    global_tid_44802 = get_global_id(0);
    local_tid_44803 = get_local_id(0);
    group_sizze_44806 = get_local_size(0);
    wave_sizze_44805 = LOCKSTEP_WIDTH;
    group_tid_44804 = get_group_id(0);
    
    int32_t phys_tid_36562;
    
    phys_tid_36562 = group_tid_44804;
    
    int32_t ltid_pre_44807;
    
    ltid_pre_44807 = local_tid_44803;
    
    int64_t gtid_36555;
    
    gtid_36555 = sext_i32_i64(group_tid_44804);
    
    int32_t x_36781;
    
    x_36781 = ((__global int32_t *) defunc_4_map_res_mem_43355)[gtid_36555];
    
    int32_t x_36782 = ((__global
                        int32_t *) defunc_3_map_res_mem_43423)[gtid_36555];
    float x_36783 = ((__global float *) defunc_3_map_res_mem_43424)[gtid_36555];
    int32_t x_36784 = ((__global
                        int32_t *) defunc_3_map_res_mem_43422)[gtid_36555];
    float x_36785 = ((__global float *) defunc_0_f_res_mem_43457)[gtid_36555];
    int32_t y_36788 = sub32(x_36781, x_36782);
    float i32_res_36789 = sitofp_i32_f32(x_36782);
    float sqrt_res_36790;
    
    sqrt_res_36790 = futrts_sqrt32(i32_res_36789);
    
    float y_36791 = x_36783 * sqrt_res_36790;
    __local char *mem_43507;
    
    mem_43507 = (__local char *) mem_43507_backing_0;
    
    int64_t gtid_36558 = sext_i32_i64(ltid_pre_44807);
    int32_t phys_tid_36559 = local_tid_44803;
    int32_t index_primexp_40610 = sext_i64_i32(gtid_36558);
    bool cond_36804 = sle32(y_36788, index_primexp_40610);
    float defunc_0_f_res_36805;
    
    if (cond_36804) {
        defunc_0_f_res_36805 = 0.0F;
    } else {
        bool cond_36806 = index_primexp_40610 == 0;
        float defunc_0_f_res_f_res_36807;
        
        if (cond_36806) {
            defunc_0_f_res_f_res_36807 = x_36785;
        } else {
            int32_t i_36808 = add32(x_36782, index_primexp_40610);
            int64_t i_36809 = sext_i32_i64(i_36808);
            float x_36810 = ((__global
                              float *) defunc_4_map_res_mem_43356)[gtid_36555 *
                                                                   N_28043 +
                                                                   i_36809];
            int32_t x_36811 = sub32(x_36782, x_36784);
            int32_t i_36812 = add32(x_36811, index_primexp_40610);
            int64_t i_36813 = sext_i32_i64(i_36812);
            float y_36814 = ((__global
                              float *) defunc_4_map_res_mem_43356)[gtid_36555 *
                                                                   N_28043 +
                                                                   i_36813];
            float defunc_0_f_res_f_res_f_res_36815 = x_36810 - y_36814;
            
            defunc_0_f_res_f_res_36807 = defunc_0_f_res_f_res_f_res_36815;
        }
        defunc_0_f_res_36805 = defunc_0_f_res_f_res_36807;
    }
    ((__local float *) mem_43507)[gtid_36558] = defunc_0_f_res_36805;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_44808;
    
    dims_flat_44808 = iota32_arg_28439;
    
    float x_36800;
    float x_36801;
    float x_44810;
    float x_44811;
    bool ltid_in_bounds_44813;
    
    ltid_in_bounds_44813 = slt64(sext_i32_i64(local_tid_44803),
                                 iota32_arg_28439);
    
    int32_t skip_threads_44814;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44813) {
            x_36801 = ((volatile __local
                        float *) mem_43507)[sext_i32_i64(local_tid_44803)];
            if ((local_tid_44803 - squot32(local_tid_44803, 32) * 32) == 0) {
                x_36800 = x_36801;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44814 = 1;
        while (slt32(skip_threads_44814, 32)) {
            if (sle32(skip_threads_44814, local_tid_44803 -
                      squot32(local_tid_44803, 32) * 32) &&
                ltid_in_bounds_44813) {
                // read operands
                {
                    x_36800 = ((volatile __local
                                float *) mem_43507)[sext_i32_i64(local_tid_44803) -
                                                    sext_i32_i64(skip_threads_44814)];
                }
                // perform operation
                {
                    bool inactive_44815 =
                         slt64(srem64(sext_i32_i64(local_tid_44803),
                                      iota32_arg_28439),
                               sext_i32_i64(local_tid_44803) -
                               sext_i32_i64(local_tid_44803 -
                               skip_threads_44814));
                    
                    if (inactive_44815) {
                        x_36800 = x_36801;
                    }
                    if (!inactive_44815) {
                        float defunc_1_op_res_36802 = x_36800 + x_36801;
                        
                        x_36800 = defunc_1_op_res_36802;
                    }
                }
            }
            if (sle32(wave_sizze_44805, skip_threads_44814)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44814, local_tid_44803 -
                      squot32(local_tid_44803, 32) * 32) &&
                ltid_in_bounds_44813) {
                // write result
                {
                    ((volatile __local
                      float *) mem_43507)[sext_i32_i64(local_tid_44803)] =
                        x_36800;
                    x_36801 = x_36800;
                }
            }
            if (sle32(wave_sizze_44805, skip_threads_44814)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44814 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44803 - squot32(local_tid_44803, 32) * 32) == 31 &&
            ltid_in_bounds_44813) {
            ((volatile __local
              float *) mem_43507)[sext_i32_i64(squot32(local_tid_44803, 32))] =
                x_36800;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44816;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44803, 32) == 0 && ltid_in_bounds_44813) {
                x_44811 = ((volatile __local
                            float *) mem_43507)[sext_i32_i64(local_tid_44803)];
                if ((local_tid_44803 - squot32(local_tid_44803, 32) * 32) ==
                    0) {
                    x_44810 = x_44811;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44816 = 1;
            while (slt32(skip_threads_44816, 32)) {
                if (sle32(skip_threads_44816, local_tid_44803 -
                          squot32(local_tid_44803, 32) * 32) &&
                    (squot32(local_tid_44803, 32) == 0 &&
                     ltid_in_bounds_44813)) {
                    // read operands
                    {
                        x_44810 = ((volatile __local
                                    float *) mem_43507)[sext_i32_i64(local_tid_44803) -
                                                        sext_i32_i64(skip_threads_44816)];
                    }
                    // perform operation
                    {
                        bool inactive_44817 =
                             slt64(srem64(sext_i32_i64(local_tid_44803 * 32 +
                                          32 - 1), iota32_arg_28439),
                                   sext_i32_i64(local_tid_44803 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_44803 -
                                                 skip_threads_44816) * 32 + 32 -
                                   1));
                        
                        if (inactive_44817) {
                            x_44810 = x_44811;
                        }
                        if (!inactive_44817) {
                            float defunc_1_op_res_44812 = x_44810 + x_44811;
                            
                            x_44810 = defunc_1_op_res_44812;
                        }
                    }
                }
                if (sle32(wave_sizze_44805, skip_threads_44816)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44816, local_tid_44803 -
                          squot32(local_tid_44803, 32) * 32) &&
                    (squot32(local_tid_44803, 32) == 0 &&
                     ltid_in_bounds_44813)) {
                    // write result
                    {
                        ((volatile __local
                          float *) mem_43507)[sext_i32_i64(local_tid_44803)] =
                            x_44810;
                        x_44811 = x_44810;
                    }
                }
                if (sle32(wave_sizze_44805, skip_threads_44816)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44816 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44803, 32) == 0 || !ltid_in_bounds_44813)) {
            // read operands
            {
                x_36801 = x_36800;
                x_36800 = ((__local
                            float *) mem_43507)[sext_i32_i64(squot32(local_tid_44803,
                                                                     32)) -
                                                (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44818 =
                     slt64(srem64(sext_i32_i64(local_tid_44803),
                                  iota32_arg_28439),
                           sext_i32_i64(local_tid_44803) -
                           sext_i32_i64(squot32(local_tid_44803, 32) * 32 - 1));
                
                if (inactive_44818) {
                    x_36800 = x_36801;
                }
                if (!inactive_44818) {
                    float defunc_1_op_res_36802 = x_36800 + x_36801;
                    
                    x_36800 = defunc_1_op_res_36802;
                }
            }
            // write final result
            {
                ((__local float *) mem_43507)[sext_i32_i64(local_tid_44803)] =
                    x_36800;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44803, 32) == 0) {
            ((__local float *) mem_43507)[sext_i32_i64(local_tid_44803)] =
                x_36801;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    bool acc0_36821;
    int32_t acc0_36822;
    float acc0_36823;
    int64_t gtid_36560 = sext_i32_i64(ltid_pre_44807);
    int32_t phys_tid_36561 = local_tid_44803;
    __local char *red_arr_mem_44819;
    
    red_arr_mem_44819 = (__local char *) red_arr_mem_44819_backing_1;
    
    __local char *red_arr_mem_44821;
    
    red_arr_mem_44821 = (__local char *) red_arr_mem_44821_backing_2;
    
    __local char *red_arr_mem_44823;
    
    red_arr_mem_44823 = (__local char *) red_arr_mem_44823_backing_3;
    
    float x_36838;
    
    x_36838 = ((__local float *) mem_43507)[gtid_36560];
    
    float x_36839 = ((__global float *) mem_43462)[gtid_36560];
    int32_t index_primexp_40613 = sext_i64_i32(gtid_36560);
    float defunc_0_f_res_36842 = x_36838 / y_36791;
    bool cond_36843 = slt32(index_primexp_40613, y_36788);
    bool isnan_res_36844;
    
    isnan_res_36844 = futrts_isnan32(defunc_0_f_res_36842);
    
    bool cond_t_res_36845 = !isnan_res_36844;
    bool x_36846 = cond_36843 && cond_t_res_36845;
    float abs_res_36847 = (float) fabs(defunc_0_f_res_36842);
    bool defunc_2_f_res_t_res_36848 = x_36839 < abs_res_36847;
    bool x_36849 = x_36846 && defunc_2_f_res_t_res_36848;
    float defunc_1_f_res_36850;
    
    if (cond_36843) {
        defunc_1_f_res_36850 = defunc_0_f_res_36842;
    } else {
        defunc_1_f_res_36850 = 0.0F;
    }
    ((__local bool *) red_arr_mem_44819)[gtid_36560] = x_36849;
    ((__local int32_t *) red_arr_mem_44821)[gtid_36560] = index_primexp_40613;
    ((__local float *) red_arr_mem_44823)[gtid_36560] = defunc_1_f_res_36850;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44825;
    int32_t skip_waves_44826;
    
    skip_waves_44826 = 1;
    
    bool x_36824;
    int32_t x_36825;
    float x_36826;
    bool x_36827;
    int32_t x_36828;
    float x_36829;
    
    offset_44825 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44803, sext_i64_i32(iota32_arg_28439))) {
            x_36824 = ((__local
                        bool *) red_arr_mem_44819)[sext_i32_i64(local_tid_44803 +
                                                   offset_44825)];
            x_36825 = ((__local
                        int32_t *) red_arr_mem_44821)[sext_i32_i64(local_tid_44803 +
                                                      offset_44825)];
            x_36826 = ((__local
                        float *) red_arr_mem_44823)[sext_i32_i64(local_tid_44803 +
                                                    offset_44825)];
        }
    }
    offset_44825 = 1;
    while (slt32(offset_44825, wave_sizze_44805)) {
        if (slt32(local_tid_44803 + offset_44825,
                  sext_i64_i32(iota32_arg_28439)) && ((local_tid_44803 -
                                                       squot32(local_tid_44803,
                                                               wave_sizze_44805) *
                                                       wave_sizze_44805) & (2 *
                                                                            offset_44825 -
                                                                            1)) ==
            0) {
            // read array element
            {
                x_36827 = ((volatile __local
                            bool *) red_arr_mem_44819)[sext_i32_i64(local_tid_44803 +
                                                       offset_44825)];
                x_36828 = ((volatile __local
                            int32_t *) red_arr_mem_44821)[sext_i32_i64(local_tid_44803 +
                                                          offset_44825)];
                x_36829 = ((volatile __local
                            float *) red_arr_mem_44823)[sext_i32_i64(local_tid_44803 +
                                                        offset_44825)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_36830;
                int32_t defunc_1_op_res_36831;
                
                if (x_36824) {
                    defunc_1_op_res_36830 = x_36824;
                    defunc_1_op_res_36831 = x_36825;
                } else {
                    bool x_36832 = x_36827 && x_36827;
                    bool x_36833 = !x_36827;
                    bool y_36834 = x_36824 && x_36833;
                    bool defunc_1_op_res_f_res_36835 = x_36832 || y_36834;
                    int32_t defunc_1_op_res_f_res_36836;
                    
                    if (x_36827) {
                        defunc_1_op_res_f_res_36836 = x_36828;
                    } else {
                        defunc_1_op_res_f_res_36836 = x_36825;
                    }
                    defunc_1_op_res_36830 = defunc_1_op_res_f_res_36835;
                    defunc_1_op_res_36831 = defunc_1_op_res_f_res_36836;
                }
                
                float defunc_1_op_res_36837 = x_36826 + x_36829;
                
                x_36824 = defunc_1_op_res_36830;
                x_36825 = defunc_1_op_res_36831;
                x_36826 = defunc_1_op_res_36837;
            }
            // write result of operation
            {
                ((volatile __local
                  bool *) red_arr_mem_44819)[sext_i32_i64(local_tid_44803)] =
                    x_36824;
                ((volatile __local
                  int32_t *) red_arr_mem_44821)[sext_i32_i64(local_tid_44803)] =
                    x_36825;
                ((volatile __local
                  float *) red_arr_mem_44823)[sext_i32_i64(local_tid_44803)] =
                    x_36826;
            }
        }
        offset_44825 *= 2;
    }
    while (slt32(skip_waves_44826, squot32(sext_i64_i32(iota32_arg_28439) +
                                           wave_sizze_44805 - 1,
                                           wave_sizze_44805))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44825 = skip_waves_44826 * wave_sizze_44805;
        if (slt32(local_tid_44803 + offset_44825,
                  sext_i64_i32(iota32_arg_28439)) && ((local_tid_44803 -
                                                       squot32(local_tid_44803,
                                                               wave_sizze_44805) *
                                                       wave_sizze_44805) == 0 &&
                                                      (squot32(local_tid_44803,
                                                               wave_sizze_44805) &
                                                       (2 * skip_waves_44826 -
                                                        1)) == 0)) {
            // read array element
            {
                x_36827 = ((__local
                            bool *) red_arr_mem_44819)[sext_i32_i64(local_tid_44803 +
                                                       offset_44825)];
                x_36828 = ((__local
                            int32_t *) red_arr_mem_44821)[sext_i32_i64(local_tid_44803 +
                                                          offset_44825)];
                x_36829 = ((__local
                            float *) red_arr_mem_44823)[sext_i32_i64(local_tid_44803 +
                                                        offset_44825)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_36830;
                int32_t defunc_1_op_res_36831;
                
                if (x_36824) {
                    defunc_1_op_res_36830 = x_36824;
                    defunc_1_op_res_36831 = x_36825;
                } else {
                    bool x_36832 = x_36827 && x_36827;
                    bool x_36833 = !x_36827;
                    bool y_36834 = x_36824 && x_36833;
                    bool defunc_1_op_res_f_res_36835 = x_36832 || y_36834;
                    int32_t defunc_1_op_res_f_res_36836;
                    
                    if (x_36827) {
                        defunc_1_op_res_f_res_36836 = x_36828;
                    } else {
                        defunc_1_op_res_f_res_36836 = x_36825;
                    }
                    defunc_1_op_res_36830 = defunc_1_op_res_f_res_36835;
                    defunc_1_op_res_36831 = defunc_1_op_res_f_res_36836;
                }
                
                float defunc_1_op_res_36837 = x_36826 + x_36829;
                
                x_36824 = defunc_1_op_res_36830;
                x_36825 = defunc_1_op_res_36831;
                x_36826 = defunc_1_op_res_36837;
            }
            // write result of operation
            {
                ((__local
                  bool *) red_arr_mem_44819)[sext_i32_i64(local_tid_44803)] =
                    x_36824;
                ((__local
                  int32_t *) red_arr_mem_44821)[sext_i32_i64(local_tid_44803)] =
                    x_36825;
                ((__local
                  float *) red_arr_mem_44823)[sext_i32_i64(local_tid_44803)] =
                    x_36826;
            }
        }
        skip_waves_44826 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    acc0_36821 = ((__local bool *) red_arr_mem_44819)[(int64_t) 0];
    acc0_36822 = ((__local int32_t *) red_arr_mem_44821)[(int64_t) 0];
    acc0_36823 = ((__local float *) red_arr_mem_44823)[(int64_t) 0];
    
    bool x_36853 = acc0_36821 && acc0_36821;
    int32_t defunc_1_op_res_f_res_36857;
    
    if (acc0_36821) {
        defunc_1_op_res_f_res_36857 = acc0_36822;
    } else {
        defunc_1_op_res_f_res_36857 = -1;
    }
    
    bool cond_36863 = y_36788 == 0;
    float defunc_0_f_res_36864;
    
    if (cond_36863) {
        defunc_0_f_res_36864 = 0.0F;
    } else {
        float i32_res_36865 = sitofp_i32_f32(y_36788);
        float defunc_0_f_res_f_res_36866 = acc0_36823 / i32_res_36865;
        
        defunc_0_f_res_36864 = defunc_0_f_res_f_res_36866;
    }
    
    bool cond_36867 = !x_36853;
    int32_t fst_breakzq_36868;
    
    if (cond_36867) {
        fst_breakzq_36868 = -1;
    } else {
        bool cond_36869 = slt32(defunc_1_op_res_f_res_36857, y_36788);
        int32_t adjustValInds_res_36870;
        
        if (cond_36869) {
            int32_t i_36871 = add32(x_36782, defunc_1_op_res_f_res_36857);
            int64_t i_36872 = sext_i32_i64(i_36871);
            int32_t x_36873 = ((__global
                                int32_t *) defunc_4_map_res_mem_43357)[gtid_36555 *
                                                                       N_28043 +
                                                                       i_36872];
            int32_t adjustValInds_res_t_res_36874 = sub32(x_36873, n_28047);
            
            adjustValInds_res_36870 = adjustValInds_res_t_res_36874;
        } else {
            adjustValInds_res_36870 = -1;
        }
        fst_breakzq_36868 = adjustValInds_res_36870;
    }
    
    bool cond_36875 = sle32(x_36782, 5);
    bool cond_f_res_36876 = sle32(y_36788, 5);
    bool x_36877 = !cond_36875;
    bool y_36878 = cond_f_res_36876 && x_36877;
    bool cond_36879 = cond_36875 || y_36878;
    int32_t fst_breakzq_36880;
    
    if (cond_36879) {
        fst_breakzq_36880 = -2;
    } else {
        fst_breakzq_36880 = fst_breakzq_36868;
    }
    if (local_tid_44803 == 0) {
        ((__global int32_t *) mem_43510)[gtid_36555] = fst_breakzq_36880;
    }
    if (local_tid_44803 == 0) {
        ((__global float *) mem_43512)[gtid_36555] = defunc_0_f_res_36864;
    }
    
  error_3:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_40751(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_42658_backing_aligned_0,
                                                     int64_t m_28044,
                                                     int32_t n_28047,
                                                     int64_t i32_res_28059,
                                                     int64_t Ty_40739,
                                                     int64_t Tx_40740,
                                                     int64_t gridDim_x_40741,
                                                     int64_t gridDim_y_40742,
                                                     int64_t group_sizze_tile3d_40746,
                                                     int64_t count_shmem_40747,
                                                     __global
                                                     unsigned char *mem_42571,
                                                     __global
                                                     unsigned char *mem_42575,
                                                     __global
                                                     unsigned char *mem_42646,
                                                     __global
                                                     unsigned char *mem_42706)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42658_backing_0 = (__local volatile
                                                           char *) mem_42658_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43900;
    int32_t local_tid_43901;
    int64_t group_sizze_43904;
    int32_t wave_sizze_43903;
    int32_t group_tid_43902;
    
    global_tid_43900 = get_global_id(0);
    local_tid_43901 = get_local_id(0);
    group_sizze_43904 = get_local_size(0);
    wave_sizze_43903 = LOCKSTEP_WIDTH;
    group_tid_43902 = get_group_id(0);
    
    int32_t gid_flat_40751;
    
    gid_flat_40751 = group_tid_43902;
    
    int32_t ltid_pre_43905;
    
    ltid_pre_43905 = squot32(local_tid_43901, sext_i64_i32(Ty_40739) *
                             sext_i64_i32(Tx_40740));
    
    int32_t ltid_pre_43906;
    
    ltid_pre_43906 = squot32(local_tid_43901 - squot32(local_tid_43901,
                                                       sext_i64_i32(Ty_40739) *
                                                       sext_i64_i32(Tx_40740)) *
                             (sext_i64_i32(Ty_40739) * sext_i64_i32(Tx_40740)),
                             sext_i64_i32(Tx_40740));
    
    int32_t ltid_pre_43907;
    
    ltid_pre_43907 = local_tid_43901 - squot32(local_tid_43901,
                                               sext_i64_i32(Ty_40739) *
                                               sext_i64_i32(Tx_40740)) *
        (sext_i64_i32(Ty_40739) * sext_i64_i32(Tx_40740)) -
        squot32(local_tid_43901 - squot32(local_tid_43901,
                                          sext_i64_i32(Ty_40739) *
                                          sext_i64_i32(Tx_40740)) *
                (sext_i64_i32(Ty_40739) * sext_i64_i32(Tx_40740)),
                sext_i64_i32(Tx_40740)) * sext_i64_i32(Tx_40740);
    
    int32_t ltid_pre_43908;
    
    ltid_pre_43908 = squot32(local_tid_43901, sext_i64_i32(Tx_40740));
    
    int32_t ltid_pre_43909;
    
    ltid_pre_43909 = local_tid_43901 - squot32(local_tid_43901,
                                               sext_i64_i32(Tx_40740)) *
        sext_i64_i32(Tx_40740);
    
    int32_t ltid_pre_43910;
    
    ltid_pre_43910 = local_tid_43901;
    
    int64_t gid_zz_40750;
    
    gid_zz_40750 = squot64(sext_i32_i64(group_tid_43902), gridDim_y_40742 *
                           gridDim_x_40741);
    
    int64_t gid_y_40749;
    
    gid_y_40749 = squot64(sext_i32_i64(group_tid_43902) -
                          squot64(sext_i32_i64(group_tid_43902),
                                  gridDim_y_40742 * gridDim_x_40741) *
                          (gridDim_y_40742 * gridDim_x_40741), gridDim_x_40741);
    
    int64_t gid_x_40748;
    
    gid_x_40748 = sext_i32_i64(group_tid_43902) -
        squot64(sext_i32_i64(group_tid_43902), gridDim_y_40742 *
                gridDim_x_40741) * (gridDim_y_40742 * gridDim_x_40741) -
        squot64(sext_i32_i64(group_tid_43902) -
                squot64(sext_i32_i64(group_tid_43902), gridDim_y_40742 *
                        gridDim_x_40741) * (gridDim_y_40742 * gridDim_x_40741),
                gridDim_x_40741) * gridDim_x_40741;
    
    int64_t ii_40752;
    
    ii_40752 = (int64_t) 30 * gid_zz_40750;
    
    int64_t jj1_40753 = Ty_40739 * gid_y_40749;
    int64_t jj2_40754 = Tx_40740 * gid_x_40748;
    float mem_42656[30];
    int64_t ltid_y_40757 = sext_i32_i64(ltid_pre_43908);
    int64_t ltid_x_40755 = sext_i32_i64(ltid_pre_43909);
    int32_t ltid_flat_40756 = local_tid_43901;
    float mem_42650[30];
    
    for (int32_t i_42448 = 0; i_42448 < 30; i_42448++) {
        int64_t i_40765 = sext_i32_i64(i_42448);
        
        mem_42650[i_40765] = 0.0F;
    }
    for (int64_t i_43912 = 0; i_43912 < (int64_t) 30; i_43912++) {
        mem_42656[i_43912] = mem_42650[i_43912];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_42658;
    
    mem_42658 = (__local char *) mem_42658_backing_0;
    
    float loop_mem_42688[30];
    float mem_param_42659[30];
    
    for (int32_t i_1 = 0; i_1 < 30; i_1++)
        mem_param_42659[i_1] = mem_42656[i_1];
    for (int32_t i_42450 = 0; i_42450 < n_28047; i_42450++) {
        int64_t i_40770 = sext_i32_i64(i_42450);
        
        for (int64_t i_40773 = 0; i_40773 < count_shmem_40747; i_40773++) {
            int64_t offs_40786 = group_sizze_tile3d_40746 * i_40773;
            int64_t ltid_40776 = sext_i32_i64(ltid_pre_43910);
            int32_t ltid_flat_40775 = local_tid_43901;
            int64_t loc_ind_40787 = ltid_40776 + offs_40786;
            int64_t gtid_40788 = ii_40752 + loc_ind_40787;
            bool cond_40789 = slt64(gtid_40788, m_28044);
            float y_elem_40790;
            
            if (cond_40789) {
                float Y_elem_40792 = ((__global float *) mem_42646)[i_40770 *
                                                                    m_28044 +
                                                                    gtid_40788];
                
                y_elem_40790 = Y_elem_40792;
            } else {
                y_elem_40790 = 0.0F;
            }
            
            bool cond_40794 = slt64(loc_ind_40787, (int64_t) 30);
            int64_t y_loc_ind_40795;
            
            if (cond_40794) {
                y_loc_ind_40795 = loc_ind_40787;
            } else {
                y_loc_ind_40795 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, y_loc_ind_40795) && slt64(y_loc_ind_40795,
                                                             (int64_t) 30)) {
                ((__local float *) mem_42658)[y_loc_ind_40795] = y_elem_40790;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
        
        float mem_42687[30];
        int64_t ltid_y_40801 = sext_i32_i64(ltid_pre_43908);
        int64_t ltid_x_40799 = sext_i32_i64(ltid_pre_43909);
        int32_t ltid_flat_40800 = local_tid_43901;
        int64_t gtid_40828 = jj1_40753 + ltid_y_40801;
        int64_t gtid_40829 = jj2_40754 + ltid_x_40799;
        bool binop_x_40831 = slt64(gtid_40828, i32_res_28059);
        bool binop_y_40832 = slt64(gtid_40829, i32_res_28059);
        bool cond_40833 = binop_x_40831 && binop_y_40832;
        float mem_43628[30];
        
        if (cond_40833) {
            float x_40836 = ((__global float *) mem_42571)[i_40770 *
                                                           i32_res_28059 +
                                                           gtid_40828];
            float x_40838 = ((__global float *) mem_42575)[i_40770 *
                                                           i32_res_28059 +
                                                           gtid_40829];
            
            for (int32_t i_42449 = 0; i_42449 < 30; i_42449++) {
                int64_t i_40840 = sext_i32_i64(i_42449);
                int64_t gtid_40842 = ii_40752 + i_40840;
                bool cond_40843 = slt64(gtid_40842, m_28044);
                
                if (cond_40843) {
                    float inp_reg_var2zz_40845 = ((__local
                                                   float *) mem_42658)[i_40840];
                    float res_reg_var2zz_40846 = mem_param_42659[i_40840];
                    float x_40850 = x_40836 * x_40838;
                    bool isnan_res_40851;
                    
                    isnan_res_40851 = futrts_isnan32(inp_reg_var2zz_40845);
                    
                    float y_40852;
                    
                    if (isnan_res_40851) {
                        y_40852 = 0.0F;
                    } else {
                        y_40852 = 1.0F;
                    }
                    
                    float defunc_2_f_res_40853 = x_40850 * y_40852;
                    float defunc_1_op_res_40857 = res_reg_var2zz_40846 +
                          defunc_2_f_res_40853;
                    
                    mem_param_42659[i_40840] = defunc_1_op_res_40857;
                }
            }
            for (int64_t i_43918 = 0; i_43918 < (int64_t) 30; i_43918++) {
                mem_43628[i_43918] = mem_param_42659[i_43918];
            }
        } else {
            for (int64_t i_43919 = 0; i_43919 < (int64_t) 30; i_43919++) {
                mem_43628[i_43919] = mem_param_42659[i_43919];
            }
        }
        for (int64_t i_43920 = 0; i_43920 < (int64_t) 30; i_43920++) {
            mem_42687[i_43920] = mem_43628[i_43920];
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_43913[30];
        
        for (int32_t i_2 = 0; i_2 < 30; i_2++)
            mem_param_tmp_43913[i_2] = mem_42687[i_2];
        for (int32_t i_3 = 0; i_3 < 30; i_3++)
            mem_param_42659[i_3] = mem_param_tmp_43913[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 30; i_4++)
        loop_mem_42688[i_4] = mem_param_42659[i_4];
    
    float mem_42702[30 * 1 * 1];
    int64_t ltid_zz_40866 = sext_i32_i64(ltid_pre_43905);
    int64_t ltid_y_40865 = sext_i32_i64(ltid_pre_43906);
    int64_t ltid_x_40863 = sext_i32_i64(ltid_pre_43907);
    int32_t ltid_flat_40864 = local_tid_43901;
    float mem_42696[30 * 1 * 1];
    
    for (int32_t i_42452 = 0; i_42452 < 30; i_42452++) {
        int64_t i_40875 = sext_i32_i64(i_42452);
        
        for (int64_t i_43922 = 0; i_43922 < (int64_t) 1; i_43922++) {
            mem_42696[i_40875 + i_43922] = loop_mem_42688[i_40875 + i_43922];
        }
    }
    for (int64_t i_43923 = 0; i_43923 < (int64_t) 30; i_43923++) {
        for (int64_t i_43924 = 0; i_43924 < (int64_t) 1; i_43924++) {
            for (int64_t i_43925 = 0; i_43925 < (int64_t) 1; i_43925++) {
                mem_42702[i_43923 + i_43924 + i_43925] = mem_42696[i_43923 +
                                                                   i_43924 +
                                                                   i_43925];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t reg_tile_i_43926 = squot64(sext_i32_i64(local_tid_43901), Ty_40739 *
                                       Tx_40740);
    int64_t reg_tile_i_43927 = squot64(sext_i32_i64(local_tid_43901) -
                                       squot64(sext_i32_i64(local_tid_43901),
                                               Ty_40739 * Tx_40740) *
                                       (Ty_40739 * Tx_40740), Tx_40740);
    int64_t reg_tile_i_43928 = sext_i32_i64(local_tid_43901) -
            squot64(sext_i32_i64(local_tid_43901), Ty_40739 * Tx_40740) *
            (Ty_40739 * Tx_40740) - squot64(sext_i32_i64(local_tid_43901) -
                                            squot64(sext_i32_i64(local_tid_43901),
                                                    Ty_40739 * Tx_40740) *
                                            (Ty_40739 * Tx_40740), Tx_40740) *
            Tx_40740;
    int64_t tile_dim_start_43929 = (int64_t) 30 * (gid_zz_40750 +
                                                   reg_tile_i_43926);
    int64_t tile_dim_start_43930 = Ty_40739 * gid_y_40749 + reg_tile_i_43927;
    int64_t tile_dim_start_43931 = Tx_40740 * gid_x_40748 + reg_tile_i_43928;
    
    for (int64_t nest_i_43932 = 0; nest_i_43932 < (int64_t) 30;
         nest_i_43932++) {
        for (int64_t nest_i_43933 = 0; nest_i_43933 < (int64_t) 1;
             nest_i_43933++) {
            for (int64_t nest_i_43934 = 0; nest_i_43934 < (int64_t) 1;
                 nest_i_43934++) {
                if ((slt64(tile_dim_start_43929 + nest_i_43932, m_28044) &&
                     slt64(tile_dim_start_43930 + nest_i_43933,
                           i32_res_28059)) && slt64(tile_dim_start_43931 +
                                                    nest_i_43934,
                                                    i32_res_28059)) {
                    ((__global float *) mem_42706)[(tile_dim_start_43929 +
                                                    nest_i_43932) *
                                                   (i32_res_28059 *
                                                    i32_res_28059) +
                                                   (tile_dim_start_43930 +
                                                    nest_i_43933) *
                                                   i32_res_28059 +
                                                   (tile_dim_start_43931 +
                                                    nest_i_43934)] =
                        mem_42702[nest_i_43932 + nest_i_43933 + nest_i_43934];
                }
            }
        }
    }
    
  error_4:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_40904(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_42846_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_42844_backing_aligned_1,
                                                     int64_t N_28043,
                                                     int64_t m_28044,
                                                     int64_t i32_res_28053,
                                                     int64_t i32_res_28059,
                                                     int64_t gridDim_x_40898,
                                                     int64_t full_tiles_40929,
                                                     int64_t kk_41136, __global
                                                     unsigned char *images_mem_42559,
                                                     __global
                                                     unsigned char *mem_42571,
                                                     __global
                                                     unsigned char *mem_43018)
{
    #define Ty_40885 (mainMagnitudeziTy_40882)
    #define Ry_40886 (mainMagnitudeziRy_40884)
    #define Tx_40887 (mainMagnitudeziTx_40881)
    #define Rx_40888 (mainMagnitudeziRx_40883)
    #define Tk_40889 (mainMagnitudeziTk_40880)
    #define tk_div_tx_40890 (sdiv_up64(mainMagnitudeziTk_40880, mainMagnitudeziTx_40881))
    #define tk_div_ty_40891 (sdiv_up64(mainMagnitudeziTk_40880, mainMagnitudeziTy_40882))
    #define TxRx_40892 (mainMagnitudeziTx_40881 * mainMagnitudeziRx_40883)
    #define TyRy_40893 (mainMagnitudeziTy_40882 * mainMagnitudeziRy_40884)
    #define a_loc_szz_40895 (mainMagnitudeziTk_40880 * (mainMagnitudeziTy_40882 * mainMagnitudeziRy_40884))
    #define b_loc_szz_40897 (mainMagnitudeziRx_40883 * (mainMagnitudeziTx_40881 * mainMagnitudeziTk_40880))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42846_backing_1 = (__local volatile
                                                           char *) mem_42846_backing_aligned_0;
    __local volatile char *restrict mem_42844_backing_0 = (__local volatile
                                                           char *) mem_42844_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44075;
    int32_t local_tid_44076;
    int64_t group_sizze_44079;
    int32_t wave_sizze_44078;
    int32_t group_tid_44077;
    
    global_tid_44075 = get_global_id(0);
    local_tid_44076 = get_local_id(0);
    group_sizze_44079 = get_local_size(0);
    wave_sizze_44078 = LOCKSTEP_WIDTH;
    group_tid_44077 = get_group_id(0);
    
    int32_t gid_flat_40904;
    
    gid_flat_40904 = group_tid_44077;
    
    int32_t ltid_pre_44080;
    
    ltid_pre_44080 = squot32(local_tid_44076, sext_i64_i32(Tx_40887));
    
    int32_t ltid_pre_44081;
    
    ltid_pre_44081 = local_tid_44076 - squot32(local_tid_44076,
                                               sext_i64_i32(Tx_40887)) *
        sext_i64_i32(Tx_40887);
    
    int64_t gid_y_40903;
    
    gid_y_40903 = squot64(sext_i32_i64(group_tid_44077), gridDim_x_40898);
    
    int64_t gid_x_40902;
    
    gid_x_40902 = sext_i32_i64(group_tid_44077) -
        squot64(sext_i32_i64(group_tid_44077), gridDim_x_40898) *
        gridDim_x_40898;
    
    int64_t iii_40905;
    
    iii_40905 = TyRy_40893 * gid_y_40903;
    
    int64_t jjj_40906 = TxRx_40892 * gid_x_40902;
    float mem_42842[Ry_40886 * Rx_40888];
    int64_t ltid_y_40909 = sext_i32_i64(ltid_pre_44080);
    int64_t ltid_x_40907 = sext_i32_i64(ltid_pre_44081);
    int32_t ltid_flat_40908 = local_tid_44076;
    float mem_42833[Ry_40886 * Rx_40888];
    
    for (int64_t i_40920 = 0; i_40920 < Ry_40886; i_40920++) {
        for (int64_t i_40923 = 0; i_40923 < Rx_40888; i_40923++) {
            mem_42833[i_40920 * Rx_40888 + i_40923] = 0.0F;
        }
    }
    for (int64_t i_44084 = 0; i_44084 < Ry_40886; i_44084++) {
        for (int64_t i_44085 = 0; i_44085 < Rx_40888; i_44085++) {
            mem_42842[i_44084 * Rx_40888 + i_44085] = mem_42833[i_44084 *
                                                                Rx_40888 +
                                                                i_44085];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_42844;
    
    mem_42844 = (__local char *) mem_42844_backing_0;
    
    __local char *mem_42846;
    
    mem_42846 = (__local char *) mem_42846_backing_1;
    
    float mem_42917[Ry_40886];
    float mem_42921[Rx_40888];
    float loop_mem_42933[Ry_40886 * Rx_40888];
    float mem_param_42847[Ry_40886 * Rx_40888];
    
    for (int32_t i_2 = 0; i_2 < Ry_40886 * Rx_40888; i_2++)
        mem_param_42847[i_2] = mem_42842[i_2];
    for (int64_t i_40930 = 0; i_40930 < full_tiles_40929; i_40930++) {
        int64_t kk_40934 = Tk_40889 * i_40930;
        
        for (int64_t i_40935 = 0; i_40935 < Ry_40886; i_40935++) {
            int64_t binop_y_40958 = Ty_40885 * i_40935;
            
            for (int64_t i_40937 = 0; i_40937 < tk_div_tx_40890; i_40937++) {
                int64_t binop_y_40956 = Tx_40887 * i_40937;
                int64_t ltid_x_40939 = sext_i32_i64(ltid_pre_44080);
                int64_t ltid_y_40940 = sext_i32_i64(ltid_pre_44081);
                int32_t ltid_flat_40941 = local_tid_44076;
                int64_t k_40957 = ltid_y_40940 + binop_y_40956;
                int64_t i_40959 = ltid_x_40939 + binop_y_40958;
                int64_t gtid_40960 = iii_40905 + i_40959;
                int64_t A_col_idx_40961 = kk_40934 + k_40957;
                bool cond_40962 = slt64(gtid_40960, m_28044);
                float A_elem_40963;
                
                if (cond_40962) {
                    float A_elem_40965 = ((__global
                                           float *) images_mem_42559)[gtid_40960 *
                                                                      N_28043 +
                                                                      A_col_idx_40961];
                    
                    A_elem_40963 = A_elem_40965;
                } else {
                    A_elem_40963 = 0.0F;
                }
                
                bool cond_40967 = slt64(k_40957, Tk_40889);
                int64_t a_loc_ind_40968;
                
                if (cond_40967) {
                    int64_t binop_y_40969 = Tk_40889 * i_40959;
                    int64_t loc_fi_40970 = k_40957 + binop_y_40969;
                    
                    a_loc_ind_40968 = loc_fi_40970;
                } else {
                    a_loc_ind_40968 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, a_loc_ind_40968) &&
                    slt64(a_loc_ind_40968, a_loc_szz_40895)) {
                    ((__local float *) mem_42844)[a_loc_ind_40968] =
                        A_elem_40963;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_40975 = 0; i_40975 < tk_div_ty_40891; i_40975++) {
            int64_t binop_y_40996 = Ty_40885 * i_40975;
            
            for (int64_t i_40977 = 0; i_40977 < Rx_40888; i_40977++) {
                int64_t binop_y_40998 = Tx_40887 * i_40977;
                int64_t ltid_x_40979 = sext_i32_i64(ltid_pre_44080);
                int64_t ltid_y_40980 = sext_i32_i64(ltid_pre_44081);
                int32_t ltid_flat_40981 = local_tid_44076;
                int64_t k_40997 = ltid_x_40979 + binop_y_40996;
                int64_t j_40999 = ltid_y_40980 + binop_y_40998;
                int64_t gtid_41000 = jjj_40906 + j_40999;
                int64_t B_row_idx_41001 = kk_40934 + k_40997;
                bool cond_41002 = slt64(gtid_41000, i32_res_28059);
                float B_elem_41003;
                
                if (cond_41002) {
                    float B_elem_41005 = ((__global
                                           float *) mem_42571)[B_row_idx_41001 *
                                                               i32_res_28059 +
                                                               gtid_41000];
                    
                    B_elem_41003 = B_elem_41005;
                } else {
                    B_elem_41003 = 0.0F;
                }
                
                bool cond_41007 = slt64(k_40997, Tk_40889);
                int64_t b_loc_ind_41008;
                
                if (cond_41007) {
                    int64_t binop_y_41009 = TxRx_40892 * k_40997;
                    int64_t loc_fi_41010 = j_40999 + binop_y_41009;
                    
                    b_loc_ind_41008 = loc_fi_41010;
                } else {
                    b_loc_ind_41008 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, b_loc_ind_41008) &&
                    slt64(b_loc_ind_41008, b_loc_szz_40897)) {
                    ((__local float *) mem_42846)[b_loc_ind_41008] =
                        B_elem_41003;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_42932[Ry_40886 * Rx_40888];
        float mem_param_42904[Ry_40886 * Rx_40888];
        
        for (int32_t i_3 = 0; i_3 < Ry_40886 * Rx_40888; i_3++)
            mem_param_42904[i_3] = mem_param_42847[i_3];
        for (int64_t i_41015 = 0; i_41015 < Tk_40889; i_41015++) {
            int64_t binop_y_41054 = TxRx_40892 * i_41015;
            int64_t ltid_y_41019 = sext_i32_i64(ltid_pre_44080);
            int64_t ltid_x_41017 = sext_i32_i64(ltid_pre_44081);
            int32_t ltid_flat_41018 = local_tid_44076;
            float mem_42907[Ry_40886];
            float mem_42909[Rx_40888];
            int64_t binop_x_41045 = Ry_40886 * ltid_y_41019;
            
            for (int64_t i_41043 = 0; i_41043 < Ry_40886; i_41043++) {
                int64_t binop_x_41046 = i_41043 + binop_x_41045;
                int64_t binop_y_41047 = Tk_40889 * binop_x_41046;
                int64_t a_loc_ind_41048 = i_41015 + binop_y_41047;
                
                for (int64_t i_44097 = 0; i_44097 < (int64_t) 1; i_44097++) {
                    mem_42907[i_41043 + i_44097] = ((__local
                                                     float *) mem_42844)[a_loc_ind_41048 +
                                                                         i_44097];
                }
            }
            
            int64_t binop_y_41056 = Rx_40888 * ltid_x_41017;
            
            for (int64_t i_41052 = 0; i_41052 < Rx_40888; i_41052++) {
                int64_t binop_x_41055 = i_41052 + binop_y_41054;
                int64_t b_loc_ind_41057 = binop_x_41055 + binop_y_41056;
                
                for (int64_t i_44099 = 0; i_44099 < (int64_t) 1; i_44099++) {
                    mem_42909[i_41052 + i_44099] = ((__local
                                                     float *) mem_42846)[b_loc_ind_41057 +
                                                                         i_44099];
                }
            }
            for (int64_t i_44100 = 0; i_44100 < Ry_40886; i_44100++) {
                mem_42917[i_44100] = mem_42907[i_44100];
            }
            for (int64_t i_44101 = 0; i_44101 < Rx_40888; i_44101++) {
                mem_42921[i_44101] = mem_42909[i_44101];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_42931[Ry_40886 * Rx_40888];
            int64_t ltid_y_41064 = sext_i32_i64(ltid_pre_44080);
            int64_t ltid_x_41062 = sext_i32_i64(ltid_pre_44081);
            int32_t ltid_flat_41063 = local_tid_44076;
            int64_t binop_y_41107 = Ry_40886 * ltid_y_41064;
            int64_t binop_y_41111 = Rx_40888 * ltid_x_41062;
            
            for (int64_t i_41101 = 0; i_41101 < Ry_40886; i_41101++) {
                int64_t binop_x_41106 = iii_40905 + i_41101;
                int64_t cmpop_x_41108 = binop_x_41106 + binop_y_41107;
                bool binop_x_41109 = slt64(cmpop_x_41108, m_28044);
                
                for (int64_t i_41104 = 0; i_41104 < Rx_40888; i_41104++) {
                    int64_t binop_x_41110 = jjj_40906 + i_41104;
                    int64_t cmpop_x_41112 = binop_x_41110 + binop_y_41111;
                    bool binop_y_41113 = slt64(cmpop_x_41112, i32_res_28059);
                    bool cond_41114 = binop_x_41109 && binop_y_41113;
                    
                    if (cond_41114) {
                        float a_41116 = mem_42917[i_41101];
                        float c_41118 = mem_param_42904[i_41101 * Rx_40888 +
                                                        i_41104];
                        bool isnan_res_41121;
                        
                        isnan_res_41121 = futrts_isnan32(a_41116);
                        
                        float defunc_1_f_res_41122;
                        
                        if (isnan_res_41121) {
                            defunc_1_f_res_41122 = 0.0F;
                        } else {
                            float b_41117 = mem_42921[i_41104];
                            float defunc_1_f_res_f_res_41123 = a_41116 *
                                  b_41117;
                            
                            defunc_1_f_res_41122 = defunc_1_f_res_f_res_41123;
                        }
                        
                        float defunc_1_op_res_41127 = c_41118 +
                              defunc_1_f_res_41122;
                        
                        mem_param_42904[i_41101 * Rx_40888 + i_41104] =
                            defunc_1_op_res_41127;
                    }
                }
            }
            for (int64_t i_44104 = 0; i_44104 < Ry_40886; i_44104++) {
                for (int64_t i_44105 = 0; i_44105 < Rx_40888; i_44105++) {
                    mem_42931[i_44104 * Rx_40888 + i_44105] =
                        mem_param_42904[i_44104 * Rx_40888 + i_44105];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44094[Ry_40886 * Rx_40888];
            
            for (int32_t i_4 = 0; i_4 < Ry_40886 * Rx_40888; i_4++)
                mem_param_tmp_44094[i_4] = mem_42931[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_40886 * Rx_40888; i_5++)
                mem_param_42904[i_5] = mem_param_tmp_44094[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_40886 * Rx_40888; i_6++)
            loop_mem_42932[i_6] = mem_param_42904[i_6];
        
        float mem_param_tmp_44086[Ry_40886 * Rx_40888];
        
        for (int32_t i_7 = 0; i_7 < Ry_40886 * Rx_40888; i_7++)
            mem_param_tmp_44086[i_7] = loop_mem_42932[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_40886 * Rx_40888; i_8++)
            mem_param_42847[i_8] = mem_param_tmp_44086[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_40886 * Rx_40888; i_9++)
        loop_mem_42933[i_9] = mem_param_42847[i_9];
    for (int64_t i_41137 = 0; i_41137 < Ry_40886; i_41137++) {
        int64_t binop_y_41162 = Ty_40885 * i_41137;
        
        for (int64_t i_41139 = 0; i_41139 < tk_div_tx_40890; i_41139++) {
            int64_t binop_y_41160 = Tx_40887 * i_41139;
            int64_t ltid_x_41141 = sext_i32_i64(ltid_pre_44080);
            int64_t ltid_y_41142 = sext_i32_i64(ltid_pre_44081);
            int32_t ltid_flat_41143 = local_tid_44076;
            int64_t k_41161 = ltid_y_41142 + binop_y_41160;
            int64_t i_41163 = ltid_x_41141 + binop_y_41162;
            int64_t gtid_41164 = iii_40905 + i_41163;
            int64_t A_col_idx_41165 = kk_41136 + k_41161;
            bool binop_x_41166 = slt64(gtid_41164, m_28044);
            bool binop_y_41167 = slt64(A_col_idx_41165, i32_res_28053);
            bool cond_41168 = binop_x_41166 && binop_y_41167;
            float A_elem_41169;
            
            if (cond_41168) {
                float A_elem_41171 = ((__global
                                       float *) images_mem_42559)[gtid_41164 *
                                                                  N_28043 +
                                                                  A_col_idx_41165];
                
                A_elem_41169 = A_elem_41171;
            } else {
                A_elem_41169 = 0.0F;
            }
            
            bool cond_41173 = slt64(k_41161, Tk_40889);
            int64_t a_loc_ind_41174;
            
            if (cond_41173) {
                int64_t binop_y_41175 = Tk_40889 * i_41163;
                int64_t loc_fi_41176 = k_41161 + binop_y_41175;
                
                a_loc_ind_41174 = loc_fi_41176;
            } else {
                a_loc_ind_41174 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, a_loc_ind_41174) && slt64(a_loc_ind_41174,
                                                             a_loc_szz_40895)) {
                ((__local float *) mem_42844)[a_loc_ind_41174] = A_elem_41169;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_41181 = 0; i_41181 < tk_div_ty_40891; i_41181++) {
        int64_t binop_y_41204 = Ty_40885 * i_41181;
        
        for (int64_t i_41183 = 0; i_41183 < Rx_40888; i_41183++) {
            int64_t binop_y_41206 = Tx_40887 * i_41183;
            int64_t ltid_x_41185 = sext_i32_i64(ltid_pre_44080);
            int64_t ltid_y_41186 = sext_i32_i64(ltid_pre_44081);
            int32_t ltid_flat_41187 = local_tid_44076;
            int64_t k_41205 = ltid_x_41185 + binop_y_41204;
            int64_t j_41207 = ltid_y_41186 + binop_y_41206;
            int64_t gtid_41208 = jjj_40906 + j_41207;
            int64_t B_row_idx_41209 = kk_41136 + k_41205;
            bool binop_x_41210 = slt64(gtid_41208, i32_res_28059);
            bool binop_y_41211 = slt64(B_row_idx_41209, i32_res_28053);
            bool cond_41212 = binop_x_41210 && binop_y_41211;
            float B_elem_41213;
            
            if (cond_41212) {
                float B_elem_41215 = ((__global
                                       float *) mem_42571)[B_row_idx_41209 *
                                                           i32_res_28059 +
                                                           gtid_41208];
                
                B_elem_41213 = B_elem_41215;
            } else {
                B_elem_41213 = 0.0F;
            }
            
            bool cond_41217 = slt64(k_41205, Tk_40889);
            int64_t b_loc_ind_41218;
            
            if (cond_41217) {
                int64_t binop_y_41219 = TxRx_40892 * k_41205;
                int64_t loc_fi_41220 = j_41207 + binop_y_41219;
                
                b_loc_ind_41218 = loc_fi_41220;
            } else {
                b_loc_ind_41218 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, b_loc_ind_41218) && slt64(b_loc_ind_41218,
                                                             b_loc_szz_40897)) {
                ((__local float *) mem_42846)[b_loc_ind_41218] = B_elem_41213;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_42999[Ry_40886];
    float mem_43003[Rx_40888];
    float mem_43013[Ry_40886 * Rx_40888];
    float loop_mem_43015[Ry_40886 * Rx_40888];
    float mem_param_42986[Ry_40886 * Rx_40888];
    
    for (int32_t i_10 = 0; i_10 < Ry_40886 * Rx_40888; i_10++)
        mem_param_42986[i_10] = loop_mem_42933[i_10];
    for (int64_t i_41225 = 0; i_41225 < Tk_40889; i_41225++) {
        int64_t cmpop_x_41227 = kk_41136 + i_41225;
        bool cond_41228 = slt64(cmpop_x_41227, i32_res_28053);
        float mem_43646[Ry_40886 * Rx_40888];
        
        if (cond_41228) {
            int64_t binop_y_41266 = TxRx_40892 * i_41225;
            int64_t bytes_42988 = (int64_t) 4 * Ry_40886;
            int64_t bytes_42990 = (int64_t) 4 * Rx_40888;
            int64_t ltid_y_41231 = sext_i32_i64(ltid_pre_44080);
            int64_t ltid_x_41229 = sext_i32_i64(ltid_pre_44081);
            int32_t ltid_flat_41230 = local_tid_44076;
            float mem_42989[Ry_40886];
            float mem_42991[Rx_40888];
            int64_t binop_x_41257 = Ry_40886 * ltid_y_41231;
            
            for (int64_t i_41255 = 0; i_41255 < Ry_40886; i_41255++) {
                int64_t binop_x_41258 = i_41255 + binop_x_41257;
                int64_t binop_y_41259 = Tk_40889 * binop_x_41258;
                int64_t a_loc_ind_41260 = i_41225 + binop_y_41259;
                
                for (int64_t i_44113 = 0; i_44113 < (int64_t) 1; i_44113++) {
                    mem_42989[i_41255 + i_44113] = ((__local
                                                     float *) mem_42844)[a_loc_ind_41260 +
                                                                         i_44113];
                }
            }
            
            int64_t binop_y_41268 = Rx_40888 * ltid_x_41229;
            
            for (int64_t i_41264 = 0; i_41264 < Rx_40888; i_41264++) {
                int64_t binop_x_41267 = i_41264 + binop_y_41266;
                int64_t b_loc_ind_41269 = binop_x_41267 + binop_y_41268;
                
                for (int64_t i_44115 = 0; i_44115 < (int64_t) 1; i_44115++) {
                    mem_42991[i_41264 + i_44115] = ((__local
                                                     float *) mem_42846)[b_loc_ind_41269 +
                                                                         i_44115];
                }
            }
            for (int64_t i_44116 = 0; i_44116 < Ry_40886; i_44116++) {
                mem_42999[i_44116] = mem_42989[i_44116];
            }
            for (int64_t i_44117 = 0; i_44117 < Rx_40888; i_44117++) {
                mem_43003[i_44117] = mem_42991[i_44117];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_41276 = sext_i32_i64(ltid_pre_44080);
            int64_t ltid_x_41274 = sext_i32_i64(ltid_pre_44081);
            int32_t ltid_flat_41275 = local_tid_44076;
            int64_t binop_y_41319 = Ry_40886 * ltid_y_41276;
            int64_t binop_y_41323 = Rx_40888 * ltid_x_41274;
            
            for (int64_t i_41313 = 0; i_41313 < Ry_40886; i_41313++) {
                int64_t binop_x_41318 = iii_40905 + i_41313;
                int64_t cmpop_x_41320 = binop_x_41318 + binop_y_41319;
                bool binop_x_41321 = slt64(cmpop_x_41320, m_28044);
                
                for (int64_t i_41316 = 0; i_41316 < Rx_40888; i_41316++) {
                    int64_t binop_x_41322 = jjj_40906 + i_41316;
                    int64_t cmpop_x_41324 = binop_x_41322 + binop_y_41323;
                    bool binop_y_41325 = slt64(cmpop_x_41324, i32_res_28059);
                    bool cond_41326 = binop_x_41321 && binop_y_41325;
                    
                    if (cond_41326) {
                        float a_41328 = mem_42999[i_41313];
                        float c_41330 = mem_param_42986[i_41313 * Rx_40888 +
                                                        i_41316];
                        bool isnan_res_41333;
                        
                        isnan_res_41333 = futrts_isnan32(a_41328);
                        
                        float defunc_1_f_res_41334;
                        
                        if (isnan_res_41333) {
                            defunc_1_f_res_41334 = 0.0F;
                        } else {
                            float b_41329 = mem_43003[i_41316];
                            float defunc_1_f_res_f_res_41335 = a_41328 *
                                  b_41329;
                            
                            defunc_1_f_res_41334 = defunc_1_f_res_f_res_41335;
                        }
                        
                        float defunc_1_op_res_41339 = c_41330 +
                              defunc_1_f_res_41334;
                        
                        mem_param_42986[i_41313 * Rx_40888 + i_41316] =
                            defunc_1_op_res_41339;
                    }
                }
            }
            for (int64_t i_44120 = 0; i_44120 < Ry_40886; i_44120++) {
                for (int64_t i_44121 = 0; i_44121 < Rx_40888; i_44121++) {
                    mem_43013[i_44120 * Rx_40888 + i_44121] =
                        mem_param_42986[i_44120 * Rx_40888 + i_44121];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44122 = 0; i_44122 < Ry_40886; i_44122++) {
                for (int64_t i_44123 = 0; i_44123 < Rx_40888; i_44123++) {
                    mem_43646[i_44122 * Rx_40888 + i_44123] =
                        mem_43013[i_44122 * Rx_40888 + i_44123];
                }
            }
        } else {
            for (int64_t i_44124 = 0; i_44124 < Ry_40886; i_44124++) {
                for (int64_t i_44125 = 0; i_44125 < Rx_40888; i_44125++) {
                    mem_43646[i_44124 * Rx_40888 + i_44125] =
                        mem_param_42986[i_44124 * Rx_40888 + i_44125];
                }
            }
        }
        
        float mem_param_tmp_44110[Ry_40886 * Rx_40888];
        
        for (int32_t i_11 = 0; i_11 < Ry_40886 * Rx_40888; i_11++)
            mem_param_tmp_44110[i_11] = mem_43646[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_40886 * Rx_40888; i_12++)
            mem_param_42986[i_12] = mem_param_tmp_44110[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_40886 * Rx_40888; i_13++)
        loop_mem_43015[i_13] = mem_param_42986[i_13];
    
    int64_t reg_tile_i_44126 = squot64(sext_i32_i64(local_tid_44076), Tx_40887);
    int64_t reg_tile_i_44127 = sext_i32_i64(local_tid_44076) -
            squot64(sext_i32_i64(local_tid_44076), Tx_40887) * Tx_40887;
    int64_t tile_dim_start_44128 = Ry_40886 * (Ty_40885 * gid_y_40903 +
                                               reg_tile_i_44126);
    int64_t tile_dim_start_44129 = Rx_40888 * (Tx_40887 * gid_x_40902 +
                                               reg_tile_i_44127);
    
    for (int64_t nest_i_44130 = 0; nest_i_44130 < Ry_40886; nest_i_44130++) {
        for (int64_t nest_i_44131 = 0; nest_i_44131 < Rx_40888;
             nest_i_44131++) {
            if (slt64(tile_dim_start_44128 + nest_i_44130, m_28044) &&
                slt64(tile_dim_start_44129 + nest_i_44131, i32_res_28059)) {
                ((__global float *) mem_43018)[(tile_dim_start_44128 +
                                                nest_i_44130) * i32_res_28059 +
                                               (tile_dim_start_44129 +
                                                nest_i_44131)] =
                    loop_mem_43015[nest_i_44130 * Rx_40888 + nest_i_44131];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_40885
    #undef Ry_40886
    #undef Tx_40887
    #undef Rx_40888
    #undef Tk_40889
    #undef tk_div_tx_40890
    #undef tk_div_ty_40891
    #undef TxRx_40892
    #undef TyRy_40893
    #undef a_loc_szz_40895
    #undef b_loc_szz_40897
}
__kernel void mainMagnitudezisegmap_intragroup_41353(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43076_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43067_backing_aligned_1,
                                                     int64_t m_28044,
                                                     int64_t i32_res_28059,
                                                     int64_t num_groups_y_41351,
                                                     int64_t num_whole_tiles_41369,
                                                     int64_t residual_input_41496,
                                                     unsigned char cond_41497,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43028,
                                                     __global
                                                     unsigned char *mem_43057,
                                                     __global
                                                     unsigned char *mem_43084)
{
    #define tile_sizze_41348 (mainMagnitudezitile_sizze_41347)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43076_backing_5 = (__local volatile
                                                           char *) mem_43076_backing_aligned_0;
    __local volatile char *restrict mem_43067_backing_0 = (__local volatile
                                                           char *) mem_43067_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44207;
    int32_t local_tid_44208;
    int64_t group_sizze_44211;
    int32_t wave_sizze_44210;
    int32_t group_tid_44209;
    
    global_tid_44207 = get_global_id(0);
    local_tid_44208 = get_local_id(0);
    group_sizze_44211 = get_local_size(0);
    wave_sizze_44210 = LOCKSTEP_WIDTH;
    group_tid_44209 = get_group_id(0);
    
    int32_t gid_flat_41353;
    
    gid_flat_41353 = group_tid_44209;
    
    int32_t ltid_pre_44212;
    
    ltid_pre_44212 = squot32(local_tid_44208, sext_i64_i32(tile_sizze_41348));
    
    int32_t ltid_pre_44213;
    
    ltid_pre_44213 = local_tid_44208 - squot32(local_tid_44208,
                                               sext_i64_i32(tile_sizze_41348)) *
        sext_i64_i32(tile_sizze_41348);
    
    int64_t gid_x_41345;
    
    gid_x_41345 = squot64(sext_i32_i64(group_tid_44209), num_groups_y_41351);
    
    int64_t gid_y_41346;
    
    gid_y_41346 = sext_i32_i64(group_tid_44209) -
        squot64(sext_i32_i64(group_tid_44209), num_groups_y_41351) *
        num_groups_y_41351;
    
    float mem_43062[1];
    int64_t ltid_y_41372 = sext_i32_i64(ltid_pre_44212);
    int64_t ltid_x_41370 = sext_i32_i64(ltid_pre_44213);
    int32_t ltid_flat_41371 = local_tid_44208;
    
    if (slt64(ltid_y_41372, tile_sizze_41348) && slt64(ltid_x_41370,
                                                       tile_sizze_41348)) {
        mem_43062[(int64_t) 0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_41455 = gid_x_41345 * tile_sizze_41348;
    int64_t binop_x_41470 = gid_y_41346 * tile_sizze_41348;
    __local char *mem_43067;
    
    mem_43067 = (__local char *) mem_43067_backing_0;
    
    float accs_mem_43072[1];
    float mem_param_43063[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43063[i_1] = mem_43062[i_1];
    for (int64_t tile_id_41381 = 0; tile_id_41381 < num_whole_tiles_41369;
         tile_id_41381++) {
        int64_t binop_x_41453 = tile_sizze_41348 * tile_id_41381;
        int64_t ltid_y_41384 = sext_i32_i64(ltid_pre_44212);
        int64_t ltid_x_41382 = sext_i32_i64(ltid_pre_44213);
        int32_t ltid_flat_41383 = local_tid_44208;
        int64_t j_41454 = ltid_x_41382 + binop_x_41453;
        int64_t gtid_41456 = ltid_y_41384 + binop_x_41455;
        bool binop_x_41461 = slt64(j_41454, i32_res_28059);
        bool binop_y_41462 = slt64(gtid_41456, m_28044);
        bool cond_41463 = binop_x_41461 && binop_y_41462;
        float pre_41464;
        
        if (cond_41463) {
            float x_41465 = ((__global
                              float *) defunc_3_map_res_mem_43028)[gtid_41456 *
                                                                   i32_res_28059 +
                                                                   j_41454];
            
            pre_41464 = x_41465;
        } else {
            pre_41464 = 0.0F;
        }
        ((__local float *) mem_43067)[ltid_y_41384 * tile_sizze_41348 +
                                      ltid_x_41382] = pre_41464;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43071[1];
        int64_t ltid_y_41416 = sext_i32_i64(ltid_pre_44212);
        int64_t ltid_x_41414 = sext_i32_i64(ltid_pre_44213);
        int32_t ltid_flat_41415 = local_tid_44208;
        int64_t gtid_41469 = ltid_y_41416 + binop_x_41455;
        int64_t gtid_41471 = ltid_x_41414 + binop_x_41470;
        float acc_41474 = mem_param_43063[(int64_t) 0];
        bool binop_x_41478 = slt64(gtid_41469, m_28044);
        bool binop_y_41479 = slt64(gtid_41471, i32_res_28059);
        bool cond_41480 = binop_x_41478 && binop_y_41479;
        float acc_41481;
        
        if (cond_41480) {
            float x_41482;
            float redout_42493 = acc_41474;
            
            for (int64_t i_42494 = 0; i_42494 < tile_sizze_41348; i_42494++) {
                float x_41486 = ((__local float *) mem_43067)[ltid_y_41416 *
                                                              tile_sizze_41348 +
                                                              i_42494];
                int64_t slice_42545 = binop_x_41453 + i_42494;
                float x_41487 = ((__global float *) mem_43057)[slice_42545 *
                                                               (i32_res_28059 *
                                                                m_28044) +
                                                               gtid_41469 *
                                                               i32_res_28059 +
                                                               gtid_41471];
                float defunc_1_f_res_41488 = x_41486 * x_41487;
                float defunc_1_op_res_41485 = defunc_1_f_res_41488 +
                      redout_42493;
                float redout_tmp_44216 = defunc_1_op_res_41485;
                
                redout_42493 = redout_tmp_44216;
            }
            x_41482 = redout_42493;
            acc_41481 = x_41482;
        } else {
            acc_41481 = acc_41474;
        }
        mem_43071[(int64_t) 0] = acc_41481;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44214[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44214[i_2] = mem_43071[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43063[i_3] = mem_param_tmp_44214[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43072[i_4] = mem_param_43063[i_4];
    
    __local char *mem_43076;
    
    mem_43076 = (__local char *) mem_43076_backing_5;
    
    float mem_43080[1];
    float mem_43660[1];
    
    if (cond_41497) {
        mem_43660[(int64_t) 0] = accs_mem_43072[(int64_t) 0];
    } else {
        int64_t binop_x_41570 = tile_sizze_41348 * num_whole_tiles_41369;
        int64_t ltid_y_41500 = sext_i32_i64(ltid_pre_44212);
        int64_t ltid_x_41498 = sext_i32_i64(ltid_pre_44213);
        int32_t ltid_flat_41499 = local_tid_44208;
        int64_t j_41571 = ltid_x_41498 + binop_x_41570;
        int64_t gtid_41573 = binop_x_41455 + ltid_y_41500;
        bool binop_x_41578 = slt64(j_41571, i32_res_28059);
        bool binop_y_41579 = slt64(gtid_41573, m_28044);
        bool cond_41580 = binop_x_41578 && binop_y_41579;
        float pre_41581;
        
        if (cond_41580) {
            float x_41582 = ((__global
                              float *) defunc_3_map_res_mem_43028)[gtid_41573 *
                                                                   i32_res_28059 +
                                                                   j_41571];
            
            pre_41581 = x_41582;
        } else {
            pre_41581 = 0.0F;
        }
        ((__local float *) mem_43076)[ltid_y_41500 * tile_sizze_41348 +
                                      ltid_x_41498] = pre_41581;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_y_41533 = sext_i32_i64(ltid_pre_44212);
        int64_t ltid_x_41531 = sext_i32_i64(ltid_pre_44213);
        int32_t ltid_flat_41532 = local_tid_44208;
        int64_t gtid_41587 = binop_x_41455 + ltid_y_41533;
        int64_t gtid_41589 = binop_x_41470 + ltid_x_41531;
        float acc_41592 = accs_mem_43072[(int64_t) 0];
        bool binop_x_41596 = slt64(gtid_41587, m_28044);
        bool binop_y_41597 = slt64(gtid_41589, i32_res_28059);
        bool cond_41598 = binop_x_41596 && binop_y_41597;
        float acc_41599;
        
        if (cond_41598) {
            float x_41600;
            float redout_42495 = acc_41592;
            
            for (int64_t i_42496 = 0; i_42496 < residual_input_41496;
                 i_42496++) {
                float x_41604 = ((__local float *) mem_43076)[ltid_y_41533 *
                                                              tile_sizze_41348 +
                                                              i_42496];
                int64_t slice_42546 = binop_x_41570 + i_42496;
                float x_41605 = ((__global float *) mem_43057)[slice_42546 *
                                                               (i32_res_28059 *
                                                                m_28044) +
                                                               gtid_41587 *
                                                               i32_res_28059 +
                                                               gtid_41589];
                float defunc_1_f_res_41606 = x_41604 * x_41605;
                float defunc_1_op_res_41603 = defunc_1_f_res_41606 +
                      redout_42495;
                float redout_tmp_44217 = defunc_1_op_res_41603;
                
                redout_42495 = redout_tmp_44217;
            }
            x_41600 = redout_42495;
            acc_41599 = x_41600;
        } else {
            acc_41599 = acc_41592;
        }
        mem_43080[(int64_t) 0] = acc_41599;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43660[(int64_t) 0] = mem_43080[(int64_t) 0];
    }
    
    int64_t thread_out_index_44218 = gid_x_41345 * tile_sizze_41348 +
            sext_i32_i64(ltid_pre_44212);
    int64_t thread_out_index_44219 = gid_y_41346 * tile_sizze_41348 +
            sext_i32_i64(ltid_pre_44213);
    
    if (slt64(thread_out_index_44218, m_28044) && slt64(thread_out_index_44219,
                                                        i32_res_28059)) {
        ((__global float *) mem_43084)[thread_out_index_44218 * i32_res_28059 +
                                       thread_out_index_44219] =
            mem_43660[(int64_t) 0];
    }
    
  error_5:
    return;
    #undef tile_sizze_41348
}
__kernel void mainMagnitudezisegmap_intragroup_41645(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43136_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43134_backing_aligned_1,
                                                     int64_t N_28043,
                                                     int64_t m_28044,
                                                     int64_t i32_res_28059,
                                                     int64_t gridDim_x_41639,
                                                     int64_t full_tiles_41670,
                                                     int64_t kk_41873, __global
                                                     unsigned char *defunc_4_map_res_mem_43094,
                                                     __global
                                                     unsigned char *mem_43118,
                                                     __global
                                                     unsigned char *mem_43308)
{
    #define Ty_41626 (mainMagnitudeziTy_41623)
    #define Ry_41627 (mainMagnitudeziRy_41625)
    #define Tx_41628 (mainMagnitudeziTx_41622)
    #define Rx_41629 (mainMagnitudeziRx_41624)
    #define Tk_41630 (mainMagnitudeziTk_41621)
    #define tk_div_tx_41631 (sdiv_up64(mainMagnitudeziTk_41621, mainMagnitudeziTx_41622))
    #define tk_div_ty_41632 (sdiv_up64(mainMagnitudeziTk_41621, mainMagnitudeziTy_41623))
    #define TxRx_41633 (mainMagnitudeziTx_41622 * mainMagnitudeziRx_41624)
    #define TyRy_41634 (mainMagnitudeziTy_41623 * mainMagnitudeziRy_41625)
    #define a_loc_szz_41636 (mainMagnitudeziTk_41621 * (mainMagnitudeziTy_41623 * mainMagnitudeziRy_41625))
    #define b_loc_szz_41638 (mainMagnitudeziRx_41624 * (mainMagnitudeziTx_41622 * mainMagnitudeziTk_41621))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43136_backing_1 = (__local volatile
                                                           char *) mem_43136_backing_aligned_0;
    __local volatile char *restrict mem_43134_backing_0 = (__local volatile
                                                           char *) mem_43134_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44295;
    int32_t local_tid_44296;
    int64_t group_sizze_44299;
    int32_t wave_sizze_44298;
    int32_t group_tid_44297;
    
    global_tid_44295 = get_global_id(0);
    local_tid_44296 = get_local_id(0);
    group_sizze_44299 = get_local_size(0);
    wave_sizze_44298 = LOCKSTEP_WIDTH;
    group_tid_44297 = get_group_id(0);
    
    int32_t gid_flat_41645;
    
    gid_flat_41645 = group_tid_44297;
    
    int32_t ltid_pre_44300;
    
    ltid_pre_44300 = squot32(local_tid_44296, sext_i64_i32(Tx_41628));
    
    int32_t ltid_pre_44301;
    
    ltid_pre_44301 = local_tid_44296 - squot32(local_tid_44296,
                                               sext_i64_i32(Tx_41628)) *
        sext_i64_i32(Tx_41628);
    
    int64_t gid_y_41644;
    
    gid_y_41644 = squot64(sext_i32_i64(group_tid_44297), gridDim_x_41639);
    
    int64_t gid_x_41643;
    
    gid_x_41643 = sext_i32_i64(group_tid_44297) -
        squot64(sext_i32_i64(group_tid_44297), gridDim_x_41639) *
        gridDim_x_41639;
    
    int64_t iii_41646;
    
    iii_41646 = TyRy_41634 * gid_y_41644;
    
    int64_t jjj_41647 = TxRx_41633 * gid_x_41643;
    float mem_43132[Ry_41627 * Rx_41629];
    int64_t ltid_y_41650 = sext_i32_i64(ltid_pre_44300);
    int64_t ltid_x_41648 = sext_i32_i64(ltid_pre_44301);
    int32_t ltid_flat_41649 = local_tid_44296;
    float mem_43123[Ry_41627 * Rx_41629];
    
    for (int64_t i_41661 = 0; i_41661 < Ry_41627; i_41661++) {
        for (int64_t i_41664 = 0; i_41664 < Rx_41629; i_41664++) {
            mem_43123[i_41661 * Rx_41629 + i_41664] = 0.0F;
        }
    }
    for (int64_t i_44304 = 0; i_44304 < Ry_41627; i_44304++) {
        for (int64_t i_44305 = 0; i_44305 < Rx_41629; i_44305++) {
            mem_43132[i_44304 * Rx_41629 + i_44305] = mem_43123[i_44304 *
                                                                Rx_41629 +
                                                                i_44305];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43134;
    
    mem_43134 = (__local char *) mem_43134_backing_0;
    
    __local char *mem_43136;
    
    mem_43136 = (__local char *) mem_43136_backing_1;
    
    float mem_43207[Ry_41627];
    float mem_43211[Rx_41629];
    float loop_mem_43223[Ry_41627 * Rx_41629];
    float mem_param_43137[Ry_41627 * Rx_41629];
    
    for (int32_t i_2 = 0; i_2 < Ry_41627 * Rx_41629; i_2++)
        mem_param_43137[i_2] = mem_43132[i_2];
    for (int64_t i_41671 = 0; i_41671 < full_tiles_41670; i_41671++) {
        int64_t kk_41675 = Tk_41630 * i_41671;
        
        for (int64_t i_41676 = 0; i_41676 < Ry_41627; i_41676++) {
            int64_t binop_y_41699 = Ty_41626 * i_41676;
            
            for (int64_t i_41678 = 0; i_41678 < tk_div_tx_41631; i_41678++) {
                int64_t binop_y_41697 = Tx_41628 * i_41678;
                int64_t ltid_x_41680 = sext_i32_i64(ltid_pre_44300);
                int64_t ltid_y_41681 = sext_i32_i64(ltid_pre_44301);
                int32_t ltid_flat_41682 = local_tid_44296;
                int64_t k_41698 = ltid_y_41681 + binop_y_41697;
                int64_t i_41700 = ltid_x_41680 + binop_y_41699;
                int64_t gtid_41701 = iii_41646 + i_41700;
                int64_t A_col_idx_41702 = kk_41675 + k_41698;
                bool cond_41703 = slt64(gtid_41701, m_28044);
                float A_elem_41704;
                
                if (cond_41703) {
                    float A_elem_41706 = ((__global
                                           float *) defunc_4_map_res_mem_43094)[gtid_41701 *
                                                                                i32_res_28059 +
                                                                                A_col_idx_41702];
                    
                    A_elem_41704 = A_elem_41706;
                } else {
                    A_elem_41704 = 0.0F;
                }
                
                bool cond_41708 = slt64(k_41698, Tk_41630);
                int64_t a_loc_ind_41709;
                
                if (cond_41708) {
                    int64_t binop_y_41710 = Tk_41630 * i_41700;
                    int64_t loc_fi_41711 = k_41698 + binop_y_41710;
                    
                    a_loc_ind_41709 = loc_fi_41711;
                } else {
                    a_loc_ind_41709 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, a_loc_ind_41709) &&
                    slt64(a_loc_ind_41709, a_loc_szz_41636)) {
                    ((__local float *) mem_43134)[a_loc_ind_41709] =
                        A_elem_41704;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_41716 = 0; i_41716 < tk_div_ty_41632; i_41716++) {
            int64_t binop_y_41737 = Ty_41626 * i_41716;
            
            for (int64_t i_41718 = 0; i_41718 < Rx_41629; i_41718++) {
                int64_t binop_y_41739 = Tx_41628 * i_41718;
                int64_t ltid_x_41720 = sext_i32_i64(ltid_pre_44300);
                int64_t ltid_y_41721 = sext_i32_i64(ltid_pre_44301);
                int32_t ltid_flat_41722 = local_tid_44296;
                int64_t k_41738 = ltid_x_41720 + binop_y_41737;
                int64_t j_41740 = ltid_y_41721 + binop_y_41739;
                int64_t gtid_41741 = jjj_41647 + j_41740;
                int64_t B_row_idx_41742 = kk_41675 + k_41738;
                bool cond_41743 = slt64(gtid_41741, N_28043);
                float B_elem_41744;
                
                if (cond_41743) {
                    float B_elem_41746 = ((__global
                                           float *) mem_43118)[B_row_idx_41742 *
                                                               N_28043 +
                                                               gtid_41741];
                    
                    B_elem_41744 = B_elem_41746;
                } else {
                    B_elem_41744 = 0.0F;
                }
                
                bool cond_41748 = slt64(k_41738, Tk_41630);
                int64_t b_loc_ind_41749;
                
                if (cond_41748) {
                    int64_t binop_y_41750 = TxRx_41633 * k_41738;
                    int64_t loc_fi_41751 = j_41740 + binop_y_41750;
                    
                    b_loc_ind_41749 = loc_fi_41751;
                } else {
                    b_loc_ind_41749 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, b_loc_ind_41749) &&
                    slt64(b_loc_ind_41749, b_loc_szz_41638)) {
                    ((__local float *) mem_43136)[b_loc_ind_41749] =
                        B_elem_41744;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_43222[Ry_41627 * Rx_41629];
        float mem_param_43194[Ry_41627 * Rx_41629];
        
        for (int32_t i_3 = 0; i_3 < Ry_41627 * Rx_41629; i_3++)
            mem_param_43194[i_3] = mem_param_43137[i_3];
        for (int64_t i_41756 = 0; i_41756 < Tk_41630; i_41756++) {
            int64_t binop_y_41795 = TxRx_41633 * i_41756;
            int64_t ltid_y_41760 = sext_i32_i64(ltid_pre_44300);
            int64_t ltid_x_41758 = sext_i32_i64(ltid_pre_44301);
            int32_t ltid_flat_41759 = local_tid_44296;
            float mem_43197[Ry_41627];
            float mem_43199[Rx_41629];
            int64_t binop_x_41786 = Ry_41627 * ltid_y_41760;
            
            for (int64_t i_41784 = 0; i_41784 < Ry_41627; i_41784++) {
                int64_t binop_x_41787 = i_41784 + binop_x_41786;
                int64_t binop_y_41788 = Tk_41630 * binop_x_41787;
                int64_t a_loc_ind_41789 = i_41756 + binop_y_41788;
                
                for (int64_t i_44317 = 0; i_44317 < (int64_t) 1; i_44317++) {
                    mem_43197[i_41784 + i_44317] = ((__local
                                                     float *) mem_43134)[a_loc_ind_41789 +
                                                                         i_44317];
                }
            }
            
            int64_t binop_y_41797 = Rx_41629 * ltid_x_41758;
            
            for (int64_t i_41793 = 0; i_41793 < Rx_41629; i_41793++) {
                int64_t binop_x_41796 = i_41793 + binop_y_41795;
                int64_t b_loc_ind_41798 = binop_x_41796 + binop_y_41797;
                
                for (int64_t i_44319 = 0; i_44319 < (int64_t) 1; i_44319++) {
                    mem_43199[i_41793 + i_44319] = ((__local
                                                     float *) mem_43136)[b_loc_ind_41798 +
                                                                         i_44319];
                }
            }
            for (int64_t i_44320 = 0; i_44320 < Ry_41627; i_44320++) {
                mem_43207[i_44320] = mem_43197[i_44320];
            }
            for (int64_t i_44321 = 0; i_44321 < Rx_41629; i_44321++) {
                mem_43211[i_44321] = mem_43199[i_44321];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_43221[Ry_41627 * Rx_41629];
            int64_t ltid_y_41805 = sext_i32_i64(ltid_pre_44300);
            int64_t ltid_x_41803 = sext_i32_i64(ltid_pre_44301);
            int32_t ltid_flat_41804 = local_tid_44296;
            int64_t binop_y_41846 = Ry_41627 * ltid_y_41805;
            int64_t binop_y_41850 = Rx_41629 * ltid_x_41803;
            
            for (int64_t i_41840 = 0; i_41840 < Ry_41627; i_41840++) {
                int64_t binop_x_41845 = iii_41646 + i_41840;
                int64_t cmpop_x_41847 = binop_x_41845 + binop_y_41846;
                bool binop_x_41848 = slt64(cmpop_x_41847, m_28044);
                
                for (int64_t i_41843 = 0; i_41843 < Rx_41629; i_41843++) {
                    int64_t binop_x_41849 = jjj_41647 + i_41843;
                    int64_t cmpop_x_41851 = binop_x_41849 + binop_y_41850;
                    bool binop_y_41852 = slt64(cmpop_x_41851, N_28043);
                    bool cond_41853 = binop_x_41848 && binop_y_41852;
                    
                    if (cond_41853) {
                        float a_41855 = mem_43207[i_41840];
                        float b_41856 = mem_43211[i_41843];
                        float c_41857 = mem_param_43194[i_41840 * Rx_41629 +
                                                        i_41843];
                        float defunc_1_f_res_41860 = a_41855 * b_41856;
                        float defunc_1_op_res_41864 = c_41857 +
                              defunc_1_f_res_41860;
                        
                        mem_param_43194[i_41840 * Rx_41629 + i_41843] =
                            defunc_1_op_res_41864;
                    }
                }
            }
            for (int64_t i_44324 = 0; i_44324 < Ry_41627; i_44324++) {
                for (int64_t i_44325 = 0; i_44325 < Rx_41629; i_44325++) {
                    mem_43221[i_44324 * Rx_41629 + i_44325] =
                        mem_param_43194[i_44324 * Rx_41629 + i_44325];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44314[Ry_41627 * Rx_41629];
            
            for (int32_t i_4 = 0; i_4 < Ry_41627 * Rx_41629; i_4++)
                mem_param_tmp_44314[i_4] = mem_43221[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_41627 * Rx_41629; i_5++)
                mem_param_43194[i_5] = mem_param_tmp_44314[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_41627 * Rx_41629; i_6++)
            loop_mem_43222[i_6] = mem_param_43194[i_6];
        
        float mem_param_tmp_44306[Ry_41627 * Rx_41629];
        
        for (int32_t i_7 = 0; i_7 < Ry_41627 * Rx_41629; i_7++)
            mem_param_tmp_44306[i_7] = loop_mem_43222[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_41627 * Rx_41629; i_8++)
            mem_param_43137[i_8] = mem_param_tmp_44306[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_41627 * Rx_41629; i_9++)
        loop_mem_43223[i_9] = mem_param_43137[i_9];
    for (int64_t i_41874 = 0; i_41874 < Ry_41627; i_41874++) {
        int64_t binop_y_41899 = Ty_41626 * i_41874;
        
        for (int64_t i_41876 = 0; i_41876 < tk_div_tx_41631; i_41876++) {
            int64_t binop_y_41897 = Tx_41628 * i_41876;
            int64_t ltid_x_41878 = sext_i32_i64(ltid_pre_44300);
            int64_t ltid_y_41879 = sext_i32_i64(ltid_pre_44301);
            int32_t ltid_flat_41880 = local_tid_44296;
            int64_t k_41898 = ltid_y_41879 + binop_y_41897;
            int64_t i_41900 = ltid_x_41878 + binop_y_41899;
            int64_t gtid_41901 = iii_41646 + i_41900;
            int64_t A_col_idx_41902 = kk_41873 + k_41898;
            bool binop_x_41903 = slt64(gtid_41901, m_28044);
            bool binop_y_41904 = slt64(A_col_idx_41902, i32_res_28059);
            bool cond_41905 = binop_x_41903 && binop_y_41904;
            float A_elem_41906;
            
            if (cond_41905) {
                float A_elem_41908 = ((__global
                                       float *) defunc_4_map_res_mem_43094)[gtid_41901 *
                                                                            i32_res_28059 +
                                                                            A_col_idx_41902];
                
                A_elem_41906 = A_elem_41908;
            } else {
                A_elem_41906 = 0.0F;
            }
            
            bool cond_41910 = slt64(k_41898, Tk_41630);
            int64_t a_loc_ind_41911;
            
            if (cond_41910) {
                int64_t binop_y_41912 = Tk_41630 * i_41900;
                int64_t loc_fi_41913 = k_41898 + binop_y_41912;
                
                a_loc_ind_41911 = loc_fi_41913;
            } else {
                a_loc_ind_41911 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, a_loc_ind_41911) && slt64(a_loc_ind_41911,
                                                             a_loc_szz_41636)) {
                ((__local float *) mem_43134)[a_loc_ind_41911] = A_elem_41906;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_41918 = 0; i_41918 < tk_div_ty_41632; i_41918++) {
        int64_t binop_y_41941 = Ty_41626 * i_41918;
        
        for (int64_t i_41920 = 0; i_41920 < Rx_41629; i_41920++) {
            int64_t binop_y_41943 = Tx_41628 * i_41920;
            int64_t ltid_x_41922 = sext_i32_i64(ltid_pre_44300);
            int64_t ltid_y_41923 = sext_i32_i64(ltid_pre_44301);
            int32_t ltid_flat_41924 = local_tid_44296;
            int64_t k_41942 = ltid_x_41922 + binop_y_41941;
            int64_t j_41944 = ltid_y_41923 + binop_y_41943;
            int64_t gtid_41945 = jjj_41647 + j_41944;
            int64_t B_row_idx_41946 = kk_41873 + k_41942;
            bool binop_x_41947 = slt64(gtid_41945, N_28043);
            bool binop_y_41948 = slt64(B_row_idx_41946, i32_res_28059);
            bool cond_41949 = binop_x_41947 && binop_y_41948;
            float B_elem_41950;
            
            if (cond_41949) {
                float B_elem_41952 = ((__global
                                       float *) mem_43118)[B_row_idx_41946 *
                                                           N_28043 +
                                                           gtid_41945];
                
                B_elem_41950 = B_elem_41952;
            } else {
                B_elem_41950 = 0.0F;
            }
            
            bool cond_41954 = slt64(k_41942, Tk_41630);
            int64_t b_loc_ind_41955;
            
            if (cond_41954) {
                int64_t binop_y_41956 = TxRx_41633 * k_41942;
                int64_t loc_fi_41957 = j_41944 + binop_y_41956;
                
                b_loc_ind_41955 = loc_fi_41957;
            } else {
                b_loc_ind_41955 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, b_loc_ind_41955) && slt64(b_loc_ind_41955,
                                                             b_loc_szz_41638)) {
                ((__local float *) mem_43136)[b_loc_ind_41955] = B_elem_41950;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_43289[Ry_41627];
    float mem_43293[Rx_41629];
    float mem_43303[Ry_41627 * Rx_41629];
    float loop_mem_43305[Ry_41627 * Rx_41629];
    float mem_param_43276[Ry_41627 * Rx_41629];
    
    for (int32_t i_10 = 0; i_10 < Ry_41627 * Rx_41629; i_10++)
        mem_param_43276[i_10] = loop_mem_43223[i_10];
    for (int64_t i_41962 = 0; i_41962 < Tk_41630; i_41962++) {
        int64_t cmpop_x_41964 = kk_41873 + i_41962;
        bool cond_41965 = slt64(cmpop_x_41964, i32_res_28059);
        float mem_43676[Ry_41627 * Rx_41629];
        
        if (cond_41965) {
            int64_t binop_y_42003 = TxRx_41633 * i_41962;
            int64_t bytes_43278 = (int64_t) 4 * Ry_41627;
            int64_t bytes_43280 = (int64_t) 4 * Rx_41629;
            int64_t ltid_y_41968 = sext_i32_i64(ltid_pre_44300);
            int64_t ltid_x_41966 = sext_i32_i64(ltid_pre_44301);
            int32_t ltid_flat_41967 = local_tid_44296;
            float mem_43279[Ry_41627];
            float mem_43281[Rx_41629];
            int64_t binop_x_41994 = Ry_41627 * ltid_y_41968;
            
            for (int64_t i_41992 = 0; i_41992 < Ry_41627; i_41992++) {
                int64_t binop_x_41995 = i_41992 + binop_x_41994;
                int64_t binop_y_41996 = Tk_41630 * binop_x_41995;
                int64_t a_loc_ind_41997 = i_41962 + binop_y_41996;
                
                for (int64_t i_44333 = 0; i_44333 < (int64_t) 1; i_44333++) {
                    mem_43279[i_41992 + i_44333] = ((__local
                                                     float *) mem_43134)[a_loc_ind_41997 +
                                                                         i_44333];
                }
            }
            
            int64_t binop_y_42005 = Rx_41629 * ltid_x_41966;
            
            for (int64_t i_42001 = 0; i_42001 < Rx_41629; i_42001++) {
                int64_t binop_x_42004 = i_42001 + binop_y_42003;
                int64_t b_loc_ind_42006 = binop_x_42004 + binop_y_42005;
                
                for (int64_t i_44335 = 0; i_44335 < (int64_t) 1; i_44335++) {
                    mem_43281[i_42001 + i_44335] = ((__local
                                                     float *) mem_43136)[b_loc_ind_42006 +
                                                                         i_44335];
                }
            }
            for (int64_t i_44336 = 0; i_44336 < Ry_41627; i_44336++) {
                mem_43289[i_44336] = mem_43279[i_44336];
            }
            for (int64_t i_44337 = 0; i_44337 < Rx_41629; i_44337++) {
                mem_43293[i_44337] = mem_43281[i_44337];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_42013 = sext_i32_i64(ltid_pre_44300);
            int64_t ltid_x_42011 = sext_i32_i64(ltid_pre_44301);
            int32_t ltid_flat_42012 = local_tid_44296;
            int64_t binop_y_42054 = Ry_41627 * ltid_y_42013;
            int64_t binop_y_42058 = Rx_41629 * ltid_x_42011;
            
            for (int64_t i_42048 = 0; i_42048 < Ry_41627; i_42048++) {
                int64_t binop_x_42053 = iii_41646 + i_42048;
                int64_t cmpop_x_42055 = binop_x_42053 + binop_y_42054;
                bool binop_x_42056 = slt64(cmpop_x_42055, m_28044);
                
                for (int64_t i_42051 = 0; i_42051 < Rx_41629; i_42051++) {
                    int64_t binop_x_42057 = jjj_41647 + i_42051;
                    int64_t cmpop_x_42059 = binop_x_42057 + binop_y_42058;
                    bool binop_y_42060 = slt64(cmpop_x_42059, N_28043);
                    bool cond_42061 = binop_x_42056 && binop_y_42060;
                    
                    if (cond_42061) {
                        float a_42063 = mem_43289[i_42048];
                        float b_42064 = mem_43293[i_42051];
                        float c_42065 = mem_param_43276[i_42048 * Rx_41629 +
                                                        i_42051];
                        float defunc_1_f_res_42068 = a_42063 * b_42064;
                        float defunc_1_op_res_42072 = c_42065 +
                              defunc_1_f_res_42068;
                        
                        mem_param_43276[i_42048 * Rx_41629 + i_42051] =
                            defunc_1_op_res_42072;
                    }
                }
            }
            for (int64_t i_44340 = 0; i_44340 < Ry_41627; i_44340++) {
                for (int64_t i_44341 = 0; i_44341 < Rx_41629; i_44341++) {
                    mem_43303[i_44340 * Rx_41629 + i_44341] =
                        mem_param_43276[i_44340 * Rx_41629 + i_44341];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44342 = 0; i_44342 < Ry_41627; i_44342++) {
                for (int64_t i_44343 = 0; i_44343 < Rx_41629; i_44343++) {
                    mem_43676[i_44342 * Rx_41629 + i_44343] =
                        mem_43303[i_44342 * Rx_41629 + i_44343];
                }
            }
        } else {
            for (int64_t i_44344 = 0; i_44344 < Ry_41627; i_44344++) {
                for (int64_t i_44345 = 0; i_44345 < Rx_41629; i_44345++) {
                    mem_43676[i_44344 * Rx_41629 + i_44345] =
                        mem_param_43276[i_44344 * Rx_41629 + i_44345];
                }
            }
        }
        
        float mem_param_tmp_44330[Ry_41627 * Rx_41629];
        
        for (int32_t i_11 = 0; i_11 < Ry_41627 * Rx_41629; i_11++)
            mem_param_tmp_44330[i_11] = mem_43676[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_41627 * Rx_41629; i_12++)
            mem_param_43276[i_12] = mem_param_tmp_44330[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_41627 * Rx_41629; i_13++)
        loop_mem_43305[i_13] = mem_param_43276[i_13];
    
    int64_t reg_tile_i_44346 = squot64(sext_i32_i64(local_tid_44296), Tx_41628);
    int64_t reg_tile_i_44347 = sext_i32_i64(local_tid_44296) -
            squot64(sext_i32_i64(local_tid_44296), Tx_41628) * Tx_41628;
    int64_t tile_dim_start_44348 = Ry_41627 * (Ty_41626 * gid_y_41644 +
                                               reg_tile_i_44346);
    int64_t tile_dim_start_44349 = Rx_41629 * (Tx_41628 * gid_x_41643 +
                                               reg_tile_i_44347);
    
    for (int64_t nest_i_44350 = 0; nest_i_44350 < Ry_41627; nest_i_44350++) {
        for (int64_t nest_i_44351 = 0; nest_i_44351 < Rx_41629;
             nest_i_44351++) {
            if (slt64(tile_dim_start_44348 + nest_i_44350, m_28044) &&
                slt64(tile_dim_start_44349 + nest_i_44351, N_28043)) {
                ((__global float *) mem_43308)[(tile_dim_start_44348 +
                                                nest_i_44350) * N_28043 +
                                               (tile_dim_start_44349 +
                                                nest_i_44351)] =
                    loop_mem_43305[nest_i_44350 * Rx_41629 + nest_i_44351];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_41626
    #undef Ry_41627
    #undef Tx_41628
    #undef Rx_41629
    #undef Tk_41630
    #undef tk_div_tx_41631
    #undef tk_div_ty_41632
    #undef TxRx_41633
    #undef TyRy_41634
    #undef a_loc_szz_41636
    #undef b_loc_szz_41638
}
__kernel void mainMagnitudezisegmap_intragroup_42079(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43381_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43374_backing_aligned_1,
                                                     int64_t m_28044,
                                                     int32_t n_28047,
                                                     float hfrac_28049,
                                                     int64_t i32_res_28053,
                                                     int32_t k2p2_28055,
                                                     int64_t num_whole_tiles_42101,
                                                     int64_t residual_input_42190,
                                                     unsigned char cond_42191,
                                                     __global
                                                     unsigned char *mem_43360,
                                                     __global
                                                     unsigned char *mem_43363,
                                                     __global
                                                     unsigned char *mem_43394,
                                                     __global
                                                     unsigned char *mem_43396,
                                                     __global
                                                     unsigned char *mem_43398)
{
    #define segmap_group_sizze_35619 (mainMagnitudezisegmap_group_sizze_35588)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43381_backing_5 = (__local volatile
                                                           char *) mem_43381_backing_aligned_0;
    __local volatile char *restrict mem_43374_backing_0 = (__local volatile
                                                           char *) mem_43374_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44519;
    int32_t local_tid_44520;
    int64_t group_sizze_44523;
    int32_t wave_sizze_44522;
    int32_t group_tid_44521;
    
    global_tid_44519 = get_global_id(0);
    local_tid_44520 = get_local_id(0);
    group_sizze_44523 = get_local_size(0);
    wave_sizze_44522 = LOCKSTEP_WIDTH;
    group_tid_44521 = get_group_id(0);
    
    int32_t gid_flat_42079;
    
    gid_flat_42079 = group_tid_44521;
    
    int32_t ltid_pre_44524;
    
    ltid_pre_44524 = local_tid_44520;
    
    int64_t gid_42078;
    
    gid_42078 = sext_i32_i64(group_tid_44521);
    
    int64_t binop_x_42086;
    
    binop_x_42086 = segmap_group_sizze_35619 * gid_42078;
    
    int32_t mem_43367[1];
    int64_t ltid_42080 = sext_i32_i64(ltid_pre_44524);
    int32_t ltid_flat_42081 = local_tid_44520;
    int64_t gtid_42087 = ltid_42080 + binop_x_42086;
    bool cond_42088 = slt64(gtid_42087, m_28044);
    int32_t pre_42089;
    
    if (cond_42088) {
        int32_t defunc_0_f_res_42091;
        int32_t redout_42503 = 0;
        
        for (int32_t i_42548 = 0; i_42548 < n_28047; i_42548++) {
            int64_t i_42504 = sext_i32_i64(i_42548);
            float x_42095 = ((__global float *) mem_43360)[i_42504 * m_28044 +
                                                           gtid_42087];
            bool isnan_res_42096;
            
            isnan_res_42096 = futrts_isnan32(x_42095);
            
            bool cond_42097 = !isnan_res_42096;
            int32_t defunc_0_f_res_42098 = btoi_bool_i32(cond_42097);
            int32_t defunc_1_op_res_42094 = add32(defunc_0_f_res_42098,
                                                  redout_42503);
            int32_t redout_tmp_44525 = defunc_1_op_res_42094;
            
            redout_42503 = redout_tmp_44525;
        }
        defunc_0_f_res_42091 = redout_42503;
        pre_42089 = defunc_0_f_res_42091;
    } else {
        pre_42089 = 0;
    }
    mem_43367[(int64_t) 0] = pre_42089;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_43370[1];
    int64_t ltid_42102 = sext_i32_i64(ltid_pre_44524);
    int32_t ltid_flat_42103 = local_tid_44520;
    
    mem_43370[(int64_t) 0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43374;
    
    mem_43374 = (__local char *) mem_43374_backing_0;
    
    float accs_mem_43378[1];
    float mem_param_43371[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43371[i_1] = mem_43370[i_1];
    for (int64_t tile_id_42109 = 0; tile_id_42109 < num_whole_tiles_42101;
         tile_id_42109++) {
        int64_t binop_x_42154 = segmap_group_sizze_35619 * tile_id_42109;
        int64_t ltid_42110 = sext_i32_i64(ltid_pre_44524);
        int32_t ltid_flat_42111 = local_tid_44520;
        int64_t j_42155 = ltid_42110 + binop_x_42154;
        bool cond_42159 = slt64(j_42155, i32_res_28053);
        int32_t pre_42160;
        
        if (cond_42159) {
            int32_t index_primexp_42461 = sext_i64_i32(j_42155);
            
            pre_42160 = index_primexp_42461;
        } else {
            pre_42160 = 0;
        }
        ((__local int32_t *) mem_43374)[ltid_42110] = pre_42160;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43377[1];
        int64_t ltid_42129 = sext_i32_i64(ltid_pre_44524);
        int32_t ltid_flat_42130 = local_tid_44520;
        int64_t gtid_42165 = binop_x_42086 + ltid_42129;
        float acc_42167 = mem_param_43371[(int64_t) 0];
        bool cond_42168 = slt64(gtid_42165, m_28044);
        float acc_42169;
        
        if (cond_42168) {
            int32_t defunc_0_f_res_42166 = mem_43367[(int64_t) 0];
            float x_42170;
            float redout_42505 = acc_42167;
            
            for (int64_t i_42506 = 0; i_42506 < segmap_group_sizze_35619;
                 i_42506++) {
                int32_t x_42174 = ((__local int32_t *) mem_43374)[i_42506];
                bool cond_42175 = slt32(x_42174, defunc_0_f_res_42166);
                float defunc_0_f_res_42176;
                
                if (cond_42175) {
                    int64_t i_42177 = sext_i32_i64(x_42174);
                    float defunc_0_f_res_t_res_42178 = ((__global
                                                         float *) mem_43363)[i_42177 *
                                                                             m_28044 +
                                                                             gtid_42165];
                    
                    defunc_0_f_res_42176 = defunc_0_f_res_t_res_42178;
                } else {
                    defunc_0_f_res_42176 = 0.0F;
                }
                
                float defunc_0_f_res_42179 = defunc_0_f_res_42176 *
                      defunc_0_f_res_42176;
                float defunc_1_op_res_42173 = defunc_0_f_res_42179 +
                      redout_42505;
                float redout_tmp_44528 = defunc_1_op_res_42173;
                
                redout_42505 = redout_tmp_44528;
            }
            x_42170 = redout_42505;
            acc_42169 = x_42170;
        } else {
            acc_42169 = acc_42167;
        }
        mem_43377[(int64_t) 0] = acc_42169;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44526[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44526[i_2] = mem_43377[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43371[i_3] = mem_param_tmp_44526[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43378[i_4] = mem_param_43371[i_4];
    
    __local char *mem_43381;
    
    mem_43381 = (__local char *) mem_43381_backing_5;
    
    float mem_43384[1];
    float mem_43689[1];
    
    if (cond_42191) {
        mem_43689[(int64_t) 0] = accs_mem_43378[(int64_t) 0];
    } else {
        int64_t binop_x_42201 = segmap_group_sizze_35619 *
                num_whole_tiles_42101;
        int64_t ltid_42192 = sext_i32_i64(ltid_pre_44524);
        int32_t ltid_flat_42193 = local_tid_44520;
        int64_t j_42202 = ltid_42192 + binop_x_42201;
        bool cond_42206 = slt64(j_42202, i32_res_28053);
        int32_t pre_42207;
        
        if (cond_42206) {
            int32_t index_primexp_42462 = sext_i64_i32(j_42202);
            
            pre_42207 = index_primexp_42462;
        } else {
            pre_42207 = 0;
        }
        ((__local int32_t *) mem_43381)[ltid_42192] = pre_42207;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_42212 = sext_i32_i64(ltid_pre_44524);
        int32_t ltid_flat_42213 = local_tid_44520;
        int64_t gtid_42220 = binop_x_42086 + ltid_42212;
        float acc_42222 = accs_mem_43378[(int64_t) 0];
        bool cond_42223 = slt64(gtid_42220, m_28044);
        float acc_42224;
        
        if (cond_42223) {
            int32_t defunc_0_f_res_42221 = mem_43367[(int64_t) 0];
            float x_42225;
            float redout_42507 = acc_42222;
            
            for (int64_t i_42508 = 0; i_42508 < residual_input_42190;
                 i_42508++) {
                int32_t x_42229 = ((__local int32_t *) mem_43381)[i_42508];
                bool cond_42230 = slt32(x_42229, defunc_0_f_res_42221);
                float defunc_0_f_res_42231;
                
                if (cond_42230) {
                    int64_t i_42232 = sext_i32_i64(x_42229);
                    float defunc_0_f_res_t_res_42233 = ((__global
                                                         float *) mem_43363)[i_42232 *
                                                                             m_28044 +
                                                                             gtid_42220];
                    
                    defunc_0_f_res_42231 = defunc_0_f_res_t_res_42233;
                } else {
                    defunc_0_f_res_42231 = 0.0F;
                }
                
                float defunc_0_f_res_42234 = defunc_0_f_res_42231 *
                      defunc_0_f_res_42231;
                float defunc_1_op_res_42228 = defunc_0_f_res_42234 +
                      redout_42507;
                float redout_tmp_44529 = defunc_1_op_res_42228;
                
                redout_42507 = redout_tmp_44529;
            }
            x_42225 = redout_42507;
            acc_42224 = x_42225;
        } else {
            acc_42224 = acc_42222;
        }
        mem_43384[(int64_t) 0] = acc_42224;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43689[(int64_t) 0] = mem_43384[(int64_t) 0];
    }
    
    int32_t mem_43388[1];
    int32_t mem_43390[1];
    float mem_43392[1];
    int64_t ltid_42237 = sext_i32_i64(ltid_pre_44524);
    int32_t ltid_flat_42238 = local_tid_44520;
    int64_t gtid_42248 = binop_x_42086 + ltid_42237;
    bool cond_42250 = slt64(gtid_42248, m_28044);
    int32_t postlude_42251;
    int32_t postlude_42252;
    float postlude_42253;
    
    if (cond_42250) {
        float defunc_0_f_res_42249 = mem_43689[(int64_t) 0];
        int32_t defunc_0_f_res_42254 = mem_43367[(int64_t) 0];
        int32_t r32_arg_42255 = sub32(defunc_0_f_res_42254, k2p2_28055);
        float i32_res_42256 = sitofp_i32_f32(r32_arg_42255);
        float sqrt_arg_42257 = defunc_0_f_res_42249 / i32_res_42256;
        float sqrt_res_42258;
        
        sqrt_res_42258 = futrts_sqrt32(sqrt_arg_42257);
        
        float i32_res_42259 = sitofp_i32_f32(defunc_0_f_res_42254);
        float t32_arg_42260 = hfrac_28049 * i32_res_42259;
        int32_t f32_res_42261 = fptosi_f32_i32(t32_arg_42260);
        
        postlude_42251 = f32_res_42261;
        postlude_42252 = defunc_0_f_res_42254;
        postlude_42253 = sqrt_res_42258;
    } else {
        postlude_42251 = 0;
        postlude_42252 = 0;
        postlude_42253 = 0.0F;
    }
    mem_43388[(int64_t) 0] = postlude_42251;
    mem_43390[(int64_t) 0] = postlude_42252;
    mem_43392[(int64_t) 0] = postlude_42253;
    barrier(CLK_LOCAL_MEM_FENCE);
    if (slt64(sext_i32_i64(local_tid_44520) + segmap_group_sizze_35619 *
              sext_i32_i64(group_tid_44521), m_28044)) {
        ((__global int32_t *) mem_43394)[sext_i32_i64(local_tid_44520) +
                                         segmap_group_sizze_35619 *
                                         sext_i32_i64(group_tid_44521)] =
            mem_43388[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44520) + segmap_group_sizze_35619 *
              sext_i32_i64(group_tid_44521), m_28044)) {
        ((__global int32_t *) mem_43396)[sext_i32_i64(local_tid_44520) +
                                         segmap_group_sizze_35619 *
                                         sext_i32_i64(group_tid_44521)] =
            mem_43390[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44520) + segmap_group_sizze_35619 *
              sext_i32_i64(group_tid_44521), m_28044)) {
        ((__global float *) mem_43398)[sext_i32_i64(local_tid_44520) +
                                       segmap_group_sizze_35619 *
                                       sext_i32_i64(group_tid_44521)] =
            mem_43392[(int64_t) 0];
    }
    
  error_7:
    return;
    #undef segmap_group_sizze_35619
}
__kernel void mainMagnitudezisegmap_intragroup_42269(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43447_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43440_backing_aligned_1,
                                                     int64_t N_28043,
                                                     int64_t m_28044,
                                                     int64_t i32_res_28414,
                                                     int64_t num_whole_tiles_42289,
                                                     int64_t residual_input_42388,
                                                     unsigned char cond_42389,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_43356,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43422,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43423,
                                                     __global
                                                     unsigned char *mem_43453)
{
    #define segmap_group_sizze_35856 (mainMagnitudezisegmap_group_sizze_35837)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43447_backing_5 = (__local volatile
                                                           char *) mem_43447_backing_aligned_0;
    __local volatile char *restrict mem_43440_backing_0 = (__local volatile
                                                           char *) mem_43440_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44703;
    int32_t local_tid_44704;
    int64_t group_sizze_44707;
    int32_t wave_sizze_44706;
    int32_t group_tid_44705;
    
    global_tid_44703 = get_global_id(0);
    local_tid_44704 = get_local_id(0);
    group_sizze_44707 = get_local_size(0);
    wave_sizze_44706 = LOCKSTEP_WIDTH;
    group_tid_44705 = get_group_id(0);
    
    int32_t gid_flat_42269;
    
    gid_flat_42269 = group_tid_44705;
    
    int32_t ltid_pre_44708;
    
    ltid_pre_44708 = local_tid_44704;
    
    int64_t gid_42268;
    
    gid_42268 = sext_i32_i64(group_tid_44705);
    
    int64_t binop_x_42278;
    
    binop_x_42278 = segmap_group_sizze_35856 * gid_42268;
    
    int32_t mem_43431[1];
    int32_t mem_43433[1];
    int64_t ltid_42270 = sext_i32_i64(ltid_pre_44708);
    int32_t ltid_flat_42271 = local_tid_44704;
    int64_t gtid_42279 = ltid_42270 + binop_x_42278;
    bool cond_42280 = slt64(gtid_42279, m_28044);
    int32_t pre_42281;
    int32_t pre_42282;
    
    if (cond_42280) {
        int32_t x_42283 = ((__global
                            int32_t *) defunc_3_map_res_mem_43423)[gtid_42279];
        int32_t x_42284 = ((__global
                            int32_t *) defunc_3_map_res_mem_43422)[gtid_42279];
        
        pre_42281 = x_42283;
        pre_42282 = x_42284;
    } else {
        pre_42281 = 0;
        pre_42282 = 0;
    }
    mem_43431[(int64_t) 0] = pre_42281;
    mem_43433[(int64_t) 0] = pre_42282;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_43436[1];
    int64_t ltid_42290 = sext_i32_i64(ltid_pre_44708);
    int32_t ltid_flat_42291 = local_tid_44704;
    
    mem_43436[(int64_t) 0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43440;
    
    mem_43440 = (__local char *) mem_43440_backing_0;
    
    float accs_mem_43444[1];
    float mem_param_43437[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43437[i_1] = mem_43436[i_1];
    for (int64_t tile_id_42297 = 0; tile_id_42297 < num_whole_tiles_42289;
         tile_id_42297++) {
        int64_t binop_x_42346 = segmap_group_sizze_35856 * tile_id_42297;
        int64_t ltid_42298 = sext_i32_i64(ltid_pre_44708);
        int32_t ltid_flat_42299 = local_tid_44704;
        int64_t j_42347 = ltid_42298 + binop_x_42346;
        bool cond_42352 = slt64(j_42347, i32_res_28414);
        int32_t pre_42353;
        
        if (cond_42352) {
            int32_t index_primexp_42463 = sext_i64_i32(j_42347);
            int32_t tile_elem_42354 = index_primexp_42463;
            
            pre_42353 = tile_elem_42354;
        } else {
            pre_42353 = 0;
        }
        ((__local int32_t *) mem_43440)[ltid_42298] = pre_42353;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43443[1];
        int64_t ltid_42318 = sext_i32_i64(ltid_pre_44708);
        int32_t ltid_flat_42319 = local_tid_44704;
        int64_t gtid_42358 = binop_x_42278 + ltid_42318;
        float acc_42361 = mem_param_43437[(int64_t) 0];
        bool cond_42362 = slt64(gtid_42358, m_28044);
        float acc_42363;
        
        if (cond_42362) {
            int32_t x_42359 = mem_43431[(int64_t) 0];
            int32_t x_42360 = mem_43433[(int64_t) 0];
            float x_42364;
            float redout_42509 = acc_42361;
            
            for (int64_t i_42510 = 0; i_42510 < segmap_group_sizze_35856;
                 i_42510++) {
                int32_t x_42368 = ((__local int32_t *) mem_43440)[i_42510];
                bool cond_42369 = slt32(x_42368, x_42360);
                float defunc_0_f_res_42370;
                
                if (cond_42369) {
                    int32_t x_42371 = add32(x_42359, x_42368);
                    int32_t x_42372 = sub32(x_42371, x_42360);
                    int32_t i_42373 = add32(1, x_42372);
                    int64_t i_42374 = sext_i32_i64(i_42373);
                    float defunc_0_f_res_t_res_42375 = ((__global
                                                         float *) defunc_4_map_res_mem_43356)[gtid_42358 *
                                                                                              N_28043 +
                                                                                              i_42374];
                    
                    defunc_0_f_res_42370 = defunc_0_f_res_t_res_42375;
                } else {
                    defunc_0_f_res_42370 = 0.0F;
                }
                
                float defunc_1_op_res_42367 = defunc_0_f_res_42370 +
                      redout_42509;
                float redout_tmp_44711 = defunc_1_op_res_42367;
                
                redout_42509 = redout_tmp_44711;
            }
            x_42364 = redout_42509;
            acc_42363 = x_42364;
        } else {
            acc_42363 = acc_42361;
        }
        mem_43443[(int64_t) 0] = acc_42363;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44709[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44709[i_2] = mem_43443[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43437[i_3] = mem_param_tmp_44709[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43444[i_4] = mem_param_43437[i_4];
    
    __local char *mem_43447;
    
    mem_43447 = (__local char *) mem_43447_backing_5;
    
    float mem_43450[1];
    float mem_43698[1];
    
    if (cond_42389) {
        mem_43698[(int64_t) 0] = accs_mem_43444[(int64_t) 0];
    } else {
        int64_t binop_x_42399 = segmap_group_sizze_35856 *
                num_whole_tiles_42289;
        int64_t ltid_42390 = sext_i32_i64(ltid_pre_44708);
        int32_t ltid_flat_42391 = local_tid_44704;
        int64_t j_42400 = ltid_42390 + binop_x_42399;
        bool cond_42405 = slt64(j_42400, i32_res_28414);
        int32_t pre_42406;
        
        if (cond_42405) {
            int32_t index_primexp_42464 = sext_i64_i32(j_42400);
            int32_t tile_elem_42407 = index_primexp_42464;
            
            pre_42406 = tile_elem_42407;
        } else {
            pre_42406 = 0;
        }
        ((__local int32_t *) mem_43447)[ltid_42390] = pre_42406;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_42411 = sext_i32_i64(ltid_pre_44708);
        int32_t ltid_flat_42412 = local_tid_44704;
        int64_t gtid_42419 = binop_x_42278 + ltid_42411;
        float acc_42422 = accs_mem_43444[(int64_t) 0];
        bool cond_42423 = slt64(gtid_42419, m_28044);
        float acc_42424;
        
        if (cond_42423) {
            int32_t x_42420 = mem_43431[(int64_t) 0];
            int32_t x_42421 = mem_43433[(int64_t) 0];
            float x_42425;
            float redout_42511 = acc_42422;
            
            for (int64_t i_42512 = 0; i_42512 < residual_input_42388;
                 i_42512++) {
                int32_t x_42429 = ((__local int32_t *) mem_43447)[i_42512];
                bool cond_42430 = slt32(x_42429, x_42421);
                float defunc_0_f_res_42431;
                
                if (cond_42430) {
                    int32_t x_42432 = add32(x_42420, x_42429);
                    int32_t x_42433 = sub32(x_42432, x_42421);
                    int32_t i_42434 = add32(1, x_42433);
                    int64_t i_42435 = sext_i32_i64(i_42434);
                    float defunc_0_f_res_t_res_42436 = ((__global
                                                         float *) defunc_4_map_res_mem_43356)[gtid_42419 *
                                                                                              N_28043 +
                                                                                              i_42435];
                    
                    defunc_0_f_res_42431 = defunc_0_f_res_t_res_42436;
                } else {
                    defunc_0_f_res_42431 = 0.0F;
                }
                
                float defunc_1_op_res_42428 = defunc_0_f_res_42431 +
                      redout_42511;
                float redout_tmp_44712 = defunc_1_op_res_42428;
                
                redout_42511 = redout_tmp_44712;
            }
            x_42425 = redout_42511;
            acc_42424 = x_42425;
        } else {
            acc_42424 = acc_42422;
        }
        mem_43450[(int64_t) 0] = acc_42424;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43698[(int64_t) 0] = mem_43450[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44704) + segmap_group_sizze_35856 *
              sext_i32_i64(group_tid_44705), m_28044)) {
        ((__global float *) mem_43453)[sext_i32_i64(local_tid_44704) +
                                       segmap_group_sizze_35856 *
                                       sext_i32_i64(group_tid_44705)] =
            mem_43698[(int64_t) 0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_35856
}
__kernel void mainMagnitudezisegred_large_33831(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_43972_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_43970_backing_aligned_1,
                                                int64_t N_28043,
                                                int64_t i32_res_28053,
                                                int64_t i32_res_28059,
                                                int64_t num_groups_33970,
                                                int64_t groups_per_segment_43956,
                                                int64_t elements_per_thread_43957,
                                                int64_t virt_num_groups_43958,
                                                int64_t threads_per_segment_43960,
                                                __global
                                                unsigned char *images_mem_42559,
                                                __global
                                                unsigned char *binop_p_mem_42568,
                                                __global
                                                unsigned char *mem_42709,
                                                __global
                                                unsigned char *mem_42714,
                                                __global
                                                unsigned char *group_res_arr_mem_43961,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_43963)
{
    #define segred_group_sizze_33969 (mainMagnitudezisegred_group_sizze_33825)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_43972_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_43972_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_43970_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_43970_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43965;
    int32_t local_tid_43966;
    int64_t group_sizze_43969;
    int32_t wave_sizze_43968;
    int32_t group_tid_43967;
    
    global_tid_43965 = get_global_id(0);
    local_tid_43966 = get_local_id(0);
    group_sizze_43969 = get_local_size(0);
    wave_sizze_43968 = LOCKSTEP_WIDTH;
    group_tid_43967 = get_group_id(0);
    
    int32_t phys_tid_33831;
    
    phys_tid_33831 = global_tid_43965;
    
    __local char *red_arr_mem_43970;
    
    red_arr_mem_43970 = (__local char *) red_arr_mem_43970_backing_0;
    
    __local char *sync_arr_mem_43972;
    
    sync_arr_mem_43972 = (__local char *) sync_arr_mem_43972_backing_1;
    
    int32_t phys_group_id_43974;
    
    phys_group_id_43974 = get_group_id(0);
    for (int32_t i_43975 = 0; i_43975 <
         sdiv_up32(sext_i64_i32(virt_num_groups_43958) - phys_group_id_43974,
                   sext_i64_i32(num_groups_33970)); i_43975++) {
        int32_t virt_group_id_43976 = phys_group_id_43974 + i_43975 *
                sext_i64_i32(num_groups_33970);
        int32_t flat_segment_id_43977 = squot32(virt_group_id_43976,
                                                sext_i64_i32(groups_per_segment_43956));
        int64_t global_tid_43978 = srem64(sext_i32_i64(virt_group_id_43976) *
                                          segred_group_sizze_33969 +
                                          sext_i32_i64(local_tid_43966),
                                          segred_group_sizze_33969 *
                                          groups_per_segment_43956);
        int64_t gtid_33818 = squot64(sext_i32_i64(flat_segment_id_43977),
                                     i32_res_28059 * i32_res_28059);
        int64_t gtid_33819 = squot64(sext_i32_i64(flat_segment_id_43977) -
                                     squot64(sext_i32_i64(flat_segment_id_43977),
                                             i32_res_28059 * i32_res_28059) *
                                     (i32_res_28059 * i32_res_28059),
                                     i32_res_28059);
        int64_t gtid_33820 = sext_i32_i64(flat_segment_id_43977) -
                squot64(sext_i32_i64(flat_segment_id_43977), i32_res_28059 *
                        i32_res_28059) * (i32_res_28059 * i32_res_28059) -
                squot64(sext_i32_i64(flat_segment_id_43977) -
                        squot64(sext_i32_i64(flat_segment_id_43977),
                                i32_res_28059 * i32_res_28059) *
                        (i32_res_28059 * i32_res_28059), i32_res_28059) *
                i32_res_28059;
        int64_t gtid_33830;
        float x_acc_43979;
        int64_t chunk_sizze_43980;
        
        chunk_sizze_43980 = smin64(elements_per_thread_43957,
                                   sdiv_up64(i32_res_28053 -
                                             sext_i32_i64(sext_i64_i32(global_tid_43978)),
                                             threads_per_segment_43960));
        
        float x_33973;
        float x_33974;
        
        // neutral-initialise the accumulators
        {
            x_acc_43979 = 0.0F;
        }
        for (int64_t i_43984 = 0; i_43984 < chunk_sizze_43980; i_43984++) {
            gtid_33830 = sext_i32_i64(sext_i64_i32(global_tid_43978)) +
                threads_per_segment_43960 * i_43984;
            // apply map function
            {
                float x_33979 = ((__global
                                  float *) images_mem_42559)[gtid_33818 *
                                                             N_28043 +
                                                             gtid_33830];
                float x_33980 = ((__global
                                  float *) binop_p_mem_42568)[gtid_33819 *
                                                              N_28043 +
                                                              gtid_33830];
                float x_33981 = ((__global float *) mem_42709)[gtid_33820 *
                                                               N_28043 +
                                                               gtid_33830];
                float x_33982 = x_33980 * x_33981;
                bool isnan_res_33983;
                
                isnan_res_33983 = futrts_isnan32(x_33979);
                
                float y_33984;
                
                if (isnan_res_33983) {
                    y_33984 = 0.0F;
                } else {
                    y_33984 = 1.0F;
                }
                
                float defunc_2_f_res_33985 = x_33982 * y_33984;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_33973 = x_acc_43979;
                }
                // load new values
                {
                    x_33974 = defunc_2_f_res_33985;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_33975 = x_33973 + x_33974;
                    
                    // store in accumulator
                    {
                        x_acc_43979 = defunc_1_op_res_33975;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_33973 = x_acc_43979;
            ((__local
              float *) red_arr_mem_43970)[sext_i32_i64(local_tid_43966)] =
                x_33973;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_43985;
        int32_t skip_waves_43986;
        
        skip_waves_43986 = 1;
        
        float x_43981;
        float x_43982;
        
        offset_43985 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_43966,
                      sext_i64_i32(segred_group_sizze_33969))) {
                x_43981 = ((__local
                            float *) red_arr_mem_43970)[sext_i32_i64(local_tid_43966 +
                                                        offset_43985)];
            }
        }
        offset_43985 = 1;
        while (slt32(offset_43985, wave_sizze_43968)) {
            if (slt32(local_tid_43966 + offset_43985,
                      sext_i64_i32(segred_group_sizze_33969)) &&
                ((local_tid_43966 - squot32(local_tid_43966, wave_sizze_43968) *
                  wave_sizze_43968) & (2 * offset_43985 - 1)) == 0) {
                // read array element
                {
                    x_43982 = ((volatile __local
                                float *) red_arr_mem_43970)[sext_i32_i64(local_tid_43966 +
                                                            offset_43985)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_43983 = x_43981 + x_43982;
                    
                    x_43981 = defunc_1_op_res_43983;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_43970)[sext_i32_i64(local_tid_43966)] =
                        x_43981;
                }
            }
            offset_43985 *= 2;
        }
        while (slt32(skip_waves_43986,
                     squot32(sext_i64_i32(segred_group_sizze_33969) +
                             wave_sizze_43968 - 1, wave_sizze_43968))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_43985 = skip_waves_43986 * wave_sizze_43968;
            if (slt32(local_tid_43966 + offset_43985,
                      sext_i64_i32(segred_group_sizze_33969)) &&
                ((local_tid_43966 - squot32(local_tid_43966, wave_sizze_43968) *
                  wave_sizze_43968) == 0 && (squot32(local_tid_43966,
                                                     wave_sizze_43968) & (2 *
                                                                          skip_waves_43986 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_43982 = ((__local
                                float *) red_arr_mem_43970)[sext_i32_i64(local_tid_43966 +
                                                            offset_43985)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_43983 = x_43981 + x_43982;
                    
                    x_43981 = defunc_1_op_res_43983;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_43970)[sext_i32_i64(local_tid_43966)] =
                        x_43981;
                }
            }
            skip_waves_43986 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_43966) == (int64_t) 0) {
                x_acc_43979 = x_43981;
            }
        }
        if (groups_per_segment_43956 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_43966 == 0) {
                    ((__global float *) mem_42714)[gtid_33818 * (i32_res_28059 *
                                                                 i32_res_28059) +
                                                   gtid_33819 * i32_res_28059 +
                                                   gtid_33820] = x_acc_43979;
                }
            }
        } else {
            int32_t old_counter_43987;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_43966 == 0) {
                    ((__global
                      float *) group_res_arr_mem_43961)[sext_i32_i64(virt_group_id_43976) *
                                                        segred_group_sizze_33969] =
                        x_acc_43979;
                    mem_fence_global();
                    old_counter_43987 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_43963)[sext_i32_i64(srem32(flat_segment_id_43977,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_43972)[(int64_t) 0] =
                        old_counter_43987 == groups_per_segment_43956 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_43988;
            
            is_last_group_43988 = ((__local
                                    bool *) sync_arr_mem_43972)[(int64_t) 0];
            if (is_last_group_43988) {
                if (local_tid_43966 == 0) {
                    old_counter_43987 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_43963)[sext_i32_i64(srem32(flat_segment_id_43977,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_43956));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_43989 =
                            sdiv_up64(groups_per_segment_43956,
                                      segred_group_sizze_33969);
                    
                    x_33973 = 0.0F;
                    for (int64_t i_43990 = 0; i_43990 < read_per_thread_43989;
                         i_43990++) {
                        int64_t group_res_id_43991 =
                                sext_i32_i64(local_tid_43966) *
                                read_per_thread_43989 + i_43990;
                        int64_t index_of_group_res_43992 =
                                sext_i32_i64(flat_segment_id_43977) *
                                groups_per_segment_43956 + group_res_id_43991;
                        
                        if (slt64(group_res_id_43991,
                                  groups_per_segment_43956)) {
                            x_33974 = ((__global
                                        float *) group_res_arr_mem_43961)[index_of_group_res_43992 *
                                                                          segred_group_sizze_33969];
                            
                            float defunc_1_op_res_33975;
                            
                            defunc_1_op_res_33975 = x_33973 + x_33974;
                            x_33973 = defunc_1_op_res_33975;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_43970)[sext_i32_i64(local_tid_43966)] =
                    x_33973;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_43993;
                    int32_t skip_waves_43994;
                    
                    skip_waves_43994 = 1;
                    
                    float x_43981;
                    float x_43982;
                    
                    offset_43993 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_43966,
                                  sext_i64_i32(segred_group_sizze_33969))) {
                            x_43981 = ((__local
                                        float *) red_arr_mem_43970)[sext_i32_i64(local_tid_43966 +
                                                                    offset_43993)];
                        }
                    }
                    offset_43993 = 1;
                    while (slt32(offset_43993, wave_sizze_43968)) {
                        if (slt32(local_tid_43966 + offset_43993,
                                  sext_i64_i32(segred_group_sizze_33969)) &&
                            ((local_tid_43966 - squot32(local_tid_43966,
                                                        wave_sizze_43968) *
                              wave_sizze_43968) & (2 * offset_43993 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_43982 = ((volatile __local
                                            float *) red_arr_mem_43970)[sext_i32_i64(local_tid_43966 +
                                                                        offset_43993)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_43983 = x_43981 + x_43982;
                                
                                x_43981 = defunc_1_op_res_43983;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_43970)[sext_i32_i64(local_tid_43966)] =
                                    x_43981;
                            }
                        }
                        offset_43993 *= 2;
                    }
                    while (slt32(skip_waves_43994,
                                 squot32(sext_i64_i32(segred_group_sizze_33969) +
                                         wave_sizze_43968 - 1,
                                         wave_sizze_43968))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_43993 = skip_waves_43994 * wave_sizze_43968;
                        if (slt32(local_tid_43966 + offset_43993,
                                  sext_i64_i32(segred_group_sizze_33969)) &&
                            ((local_tid_43966 - squot32(local_tid_43966,
                                                        wave_sizze_43968) *
                              wave_sizze_43968) == 0 &&
                             (squot32(local_tid_43966, wave_sizze_43968) & (2 *
                                                                            skip_waves_43994 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_43982 = ((__local
                                            float *) red_arr_mem_43970)[sext_i32_i64(local_tid_43966 +
                                                                        offset_43993)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_43983 = x_43981 + x_43982;
                                
                                x_43981 = defunc_1_op_res_43983;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_43970)[sext_i32_i64(local_tid_43966)] =
                                    x_43981;
                            }
                        }
                        skip_waves_43994 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_43966 == 0) {
                            ((__global float *) mem_42714)[gtid_33818 *
                                                           (i32_res_28059 *
                                                            i32_res_28059) +
                                                           gtid_33819 *
                                                           i32_res_28059 +
                                                           gtid_33820] =
                                x_43981;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33969
}
__kernel void mainMagnitudezisegred_large_34878(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44169_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44167_backing_aligned_1,
                                                int64_t N_28043,
                                                int64_t i32_res_28053,
                                                int64_t i32_res_28059,
                                                int64_t num_groups_34931,
                                                int64_t groups_per_segment_44153,
                                                int64_t elements_per_thread_44154,
                                                int64_t virt_num_groups_44155,
                                                int64_t threads_per_segment_44157,
                                                __global
                                                unsigned char *images_mem_42559,
                                                __global
                                                unsigned char *binop_p_mem_42568,
                                                __global
                                                unsigned char *mem_43022,
                                                __global
                                                unsigned char *group_res_arr_mem_44158,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44160)
{
    #define segred_group_sizze_34930 (mainMagnitudezisegred_group_sizze_34872)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44169_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44169_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44167_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44167_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44162;
    int32_t local_tid_44163;
    int64_t group_sizze_44166;
    int32_t wave_sizze_44165;
    int32_t group_tid_44164;
    
    global_tid_44162 = get_global_id(0);
    local_tid_44163 = get_local_id(0);
    group_sizze_44166 = get_local_size(0);
    wave_sizze_44165 = LOCKSTEP_WIDTH;
    group_tid_44164 = get_group_id(0);
    
    int32_t phys_tid_34878;
    
    phys_tid_34878 = global_tid_44162;
    
    __local char *red_arr_mem_44167;
    
    red_arr_mem_44167 = (__local char *) red_arr_mem_44167_backing_0;
    
    __local char *sync_arr_mem_44169;
    
    sync_arr_mem_44169 = (__local char *) sync_arr_mem_44169_backing_1;
    
    int32_t phys_group_id_44171;
    
    phys_group_id_44171 = get_group_id(0);
    for (int32_t i_44172 = 0; i_44172 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44155) - phys_group_id_44171,
                   sext_i64_i32(num_groups_34931)); i_44172++) {
        int32_t virt_group_id_44173 = phys_group_id_44171 + i_44172 *
                sext_i64_i32(num_groups_34931);
        int32_t flat_segment_id_44174 = squot32(virt_group_id_44173,
                                                sext_i64_i32(groups_per_segment_44153));
        int64_t global_tid_44175 = srem64(sext_i32_i64(virt_group_id_44173) *
                                          segred_group_sizze_34930 +
                                          sext_i32_i64(local_tid_44163),
                                          segred_group_sizze_34930 *
                                          groups_per_segment_44153);
        int64_t gtid_34867 = squot64(sext_i32_i64(flat_segment_id_44174),
                                     i32_res_28059);
        int64_t gtid_34868 = sext_i32_i64(flat_segment_id_44174) -
                squot64(sext_i32_i64(flat_segment_id_44174), i32_res_28059) *
                i32_res_28059;
        int64_t gtid_34877;
        float x_acc_44176;
        int64_t chunk_sizze_44177;
        
        chunk_sizze_44177 = smin64(elements_per_thread_44154,
                                   sdiv_up64(i32_res_28053 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44175)),
                                             threads_per_segment_44157));
        
        float x_34934;
        float x_34935;
        
        // neutral-initialise the accumulators
        {
            x_acc_44176 = 0.0F;
        }
        for (int64_t i_44181 = 0; i_44181 < chunk_sizze_44177; i_44181++) {
            gtid_34877 = sext_i32_i64(sext_i64_i32(global_tid_44175)) +
                threads_per_segment_44157 * i_44181;
            // apply map function
            {
                float x_34940 = ((__global
                                  float *) images_mem_42559)[gtid_34867 *
                                                             N_28043 +
                                                             gtid_34877];
                bool isnan_res_34941;
                
                isnan_res_34941 = futrts_isnan32(x_34940);
                
                float defunc_1_f_res_34942;
                
                if (isnan_res_34941) {
                    defunc_1_f_res_34942 = 0.0F;
                } else {
                    float x_34939 = ((__global
                                      float *) binop_p_mem_42568)[gtid_34868 *
                                                                  N_28043 +
                                                                  gtid_34877];
                    float defunc_1_f_res_f_res_34943 = x_34939 * x_34940;
                    
                    defunc_1_f_res_34942 = defunc_1_f_res_f_res_34943;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_34934 = x_acc_44176;
                }
                // load new values
                {
                    x_34935 = defunc_1_f_res_34942;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_34936 = x_34934 + x_34935;
                    
                    // store in accumulator
                    {
                        x_acc_44176 = defunc_1_op_res_34936;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_34934 = x_acc_44176;
            ((__local
              float *) red_arr_mem_44167)[sext_i32_i64(local_tid_44163)] =
                x_34934;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44182;
        int32_t skip_waves_44183;
        
        skip_waves_44183 = 1;
        
        float x_44178;
        float x_44179;
        
        offset_44182 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44163,
                      sext_i64_i32(segred_group_sizze_34930))) {
                x_44178 = ((__local
                            float *) red_arr_mem_44167)[sext_i32_i64(local_tid_44163 +
                                                        offset_44182)];
            }
        }
        offset_44182 = 1;
        while (slt32(offset_44182, wave_sizze_44165)) {
            if (slt32(local_tid_44163 + offset_44182,
                      sext_i64_i32(segred_group_sizze_34930)) &&
                ((local_tid_44163 - squot32(local_tid_44163, wave_sizze_44165) *
                  wave_sizze_44165) & (2 * offset_44182 - 1)) == 0) {
                // read array element
                {
                    x_44179 = ((volatile __local
                                float *) red_arr_mem_44167)[sext_i32_i64(local_tid_44163 +
                                                            offset_44182)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44180 = x_44178 + x_44179;
                    
                    x_44178 = defunc_1_op_res_44180;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44167)[sext_i32_i64(local_tid_44163)] =
                        x_44178;
                }
            }
            offset_44182 *= 2;
        }
        while (slt32(skip_waves_44183,
                     squot32(sext_i64_i32(segred_group_sizze_34930) +
                             wave_sizze_44165 - 1, wave_sizze_44165))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44182 = skip_waves_44183 * wave_sizze_44165;
            if (slt32(local_tid_44163 + offset_44182,
                      sext_i64_i32(segred_group_sizze_34930)) &&
                ((local_tid_44163 - squot32(local_tid_44163, wave_sizze_44165) *
                  wave_sizze_44165) == 0 && (squot32(local_tid_44163,
                                                     wave_sizze_44165) & (2 *
                                                                          skip_waves_44183 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44179 = ((__local
                                float *) red_arr_mem_44167)[sext_i32_i64(local_tid_44163 +
                                                            offset_44182)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44180 = x_44178 + x_44179;
                    
                    x_44178 = defunc_1_op_res_44180;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44167)[sext_i32_i64(local_tid_44163)] =
                        x_44178;
                }
            }
            skip_waves_44183 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44163) == (int64_t) 0) {
                x_acc_44176 = x_44178;
            }
        }
        if (groups_per_segment_44153 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44163 == 0) {
                    ((__global float *) mem_43022)[gtid_34867 * i32_res_28059 +
                                                   gtid_34868] = x_acc_44176;
                }
            }
        } else {
            int32_t old_counter_44184;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44163 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44158)[sext_i32_i64(virt_group_id_44173) *
                                                        segred_group_sizze_34930] =
                        x_acc_44176;
                    mem_fence_global();
                    old_counter_44184 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44160)[sext_i32_i64(srem32(flat_segment_id_44174,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44169)[(int64_t) 0] =
                        old_counter_44184 == groups_per_segment_44153 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44185;
            
            is_last_group_44185 = ((__local
                                    bool *) sync_arr_mem_44169)[(int64_t) 0];
            if (is_last_group_44185) {
                if (local_tid_44163 == 0) {
                    old_counter_44184 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44160)[sext_i32_i64(srem32(flat_segment_id_44174,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44153));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44186 =
                            sdiv_up64(groups_per_segment_44153,
                                      segred_group_sizze_34930);
                    
                    x_34934 = 0.0F;
                    for (int64_t i_44187 = 0; i_44187 < read_per_thread_44186;
                         i_44187++) {
                        int64_t group_res_id_44188 =
                                sext_i32_i64(local_tid_44163) *
                                read_per_thread_44186 + i_44187;
                        int64_t index_of_group_res_44189 =
                                sext_i32_i64(flat_segment_id_44174) *
                                groups_per_segment_44153 + group_res_id_44188;
                        
                        if (slt64(group_res_id_44188,
                                  groups_per_segment_44153)) {
                            x_34935 = ((__global
                                        float *) group_res_arr_mem_44158)[index_of_group_res_44189 *
                                                                          segred_group_sizze_34930];
                            
                            float defunc_1_op_res_34936;
                            
                            defunc_1_op_res_34936 = x_34934 + x_34935;
                            x_34934 = defunc_1_op_res_34936;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44167)[sext_i32_i64(local_tid_44163)] =
                    x_34934;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44190;
                    int32_t skip_waves_44191;
                    
                    skip_waves_44191 = 1;
                    
                    float x_44178;
                    float x_44179;
                    
                    offset_44190 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44163,
                                  sext_i64_i32(segred_group_sizze_34930))) {
                            x_44178 = ((__local
                                        float *) red_arr_mem_44167)[sext_i32_i64(local_tid_44163 +
                                                                    offset_44190)];
                        }
                    }
                    offset_44190 = 1;
                    while (slt32(offset_44190, wave_sizze_44165)) {
                        if (slt32(local_tid_44163 + offset_44190,
                                  sext_i64_i32(segred_group_sizze_34930)) &&
                            ((local_tid_44163 - squot32(local_tid_44163,
                                                        wave_sizze_44165) *
                              wave_sizze_44165) & (2 * offset_44190 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44179 = ((volatile __local
                                            float *) red_arr_mem_44167)[sext_i32_i64(local_tid_44163 +
                                                                        offset_44190)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44180 = x_44178 + x_44179;
                                
                                x_44178 = defunc_1_op_res_44180;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44167)[sext_i32_i64(local_tid_44163)] =
                                    x_44178;
                            }
                        }
                        offset_44190 *= 2;
                    }
                    while (slt32(skip_waves_44191,
                                 squot32(sext_i64_i32(segred_group_sizze_34930) +
                                         wave_sizze_44165 - 1,
                                         wave_sizze_44165))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44190 = skip_waves_44191 * wave_sizze_44165;
                        if (slt32(local_tid_44163 + offset_44190,
                                  sext_i64_i32(segred_group_sizze_34930)) &&
                            ((local_tid_44163 - squot32(local_tid_44163,
                                                        wave_sizze_44165) *
                              wave_sizze_44165) == 0 &&
                             (squot32(local_tid_44163, wave_sizze_44165) & (2 *
                                                                            skip_waves_44191 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44179 = ((__local
                                            float *) red_arr_mem_44167)[sext_i32_i64(local_tid_44163 +
                                                                        offset_44190)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44180 = x_44178 + x_44179;
                                
                                x_44178 = defunc_1_op_res_44180;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44167)[sext_i32_i64(local_tid_44163)] =
                                    x_44178;
                            }
                        }
                        skip_waves_44191 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44163 == 0) {
                            ((__global float *) mem_43022)[gtid_34867 *
                                                           i32_res_28059 +
                                                           gtid_34868] =
                                x_44178;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34930
}
__kernel void mainMagnitudezisegred_large_35015(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44257_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44255_backing_aligned_1,
                                                int64_t i32_res_28059,
                                                int64_t num_groups_35064,
                                                int64_t groups_per_segment_44241,
                                                int64_t elements_per_thread_44242,
                                                int64_t virt_num_groups_44243,
                                                int64_t threads_per_segment_44245,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_42807,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43028,
                                                __global
                                                unsigned char *mem_43088,
                                                __global
                                                unsigned char *group_res_arr_mem_44246,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44248)
{
    #define segred_group_sizze_35063 (mainMagnitudezisegred_group_sizze_35009)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44257_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44257_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44255_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44255_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44250;
    int32_t local_tid_44251;
    int64_t group_sizze_44254;
    int32_t wave_sizze_44253;
    int32_t group_tid_44252;
    
    global_tid_44250 = get_global_id(0);
    local_tid_44251 = get_local_id(0);
    group_sizze_44254 = get_local_size(0);
    wave_sizze_44253 = LOCKSTEP_WIDTH;
    group_tid_44252 = get_group_id(0);
    
    int32_t phys_tid_35015;
    
    phys_tid_35015 = global_tid_44250;
    
    __local char *red_arr_mem_44255;
    
    red_arr_mem_44255 = (__local char *) red_arr_mem_44255_backing_0;
    
    __local char *sync_arr_mem_44257;
    
    sync_arr_mem_44257 = (__local char *) sync_arr_mem_44257_backing_1;
    
    int32_t phys_group_id_44259;
    
    phys_group_id_44259 = get_group_id(0);
    for (int32_t i_44260 = 0; i_44260 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44243) - phys_group_id_44259,
                   sext_i64_i32(num_groups_35064)); i_44260++) {
        int32_t virt_group_id_44261 = phys_group_id_44259 + i_44260 *
                sext_i64_i32(num_groups_35064);
        int32_t flat_segment_id_44262 = squot32(virt_group_id_44261,
                                                sext_i64_i32(groups_per_segment_44241));
        int64_t global_tid_44263 = srem64(sext_i32_i64(virt_group_id_44261) *
                                          segred_group_sizze_35063 +
                                          sext_i32_i64(local_tid_44251),
                                          segred_group_sizze_35063 *
                                          groups_per_segment_44241);
        int64_t gtid_35004 = squot64(sext_i32_i64(flat_segment_id_44262),
                                     i32_res_28059);
        int64_t gtid_35005 = sext_i32_i64(flat_segment_id_44262) -
                squot64(sext_i32_i64(flat_segment_id_44262), i32_res_28059) *
                i32_res_28059;
        int64_t gtid_35014;
        float x_acc_44264;
        int64_t chunk_sizze_44265;
        
        chunk_sizze_44265 = smin64(elements_per_thread_44242,
                                   sdiv_up64(i32_res_28059 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44263)),
                                             threads_per_segment_44245));
        
        float x_35067;
        float x_35068;
        
        // neutral-initialise the accumulators
        {
            x_acc_44264 = 0.0F;
        }
        for (int64_t i_44269 = 0; i_44269 < chunk_sizze_44265; i_44269++) {
            gtid_35014 = sext_i32_i64(sext_i64_i32(global_tid_44263)) +
                threads_per_segment_44245 * i_44269;
            // apply map function
            {
                float x_35073 = ((__global
                                  float *) defunc_3_map_res_mem_43028)[gtid_35004 *
                                                                       i32_res_28059 +
                                                                       gtid_35014];
                float x_35074 = ((__global
                                  float *) defunc_3_map_res_mem_42807)[gtid_35004 *
                                                                       (i32_res_28059 *
                                                                        i32_res_28059) +
                                                                       gtid_35005 *
                                                                       i32_res_28059 +
                                                                       gtid_35014];
                float defunc_1_f_res_35075 = x_35073 * x_35074;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_35067 = x_acc_44264;
                }
                // load new values
                {
                    x_35068 = defunc_1_f_res_35075;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_35069 = x_35067 + x_35068;
                    
                    // store in accumulator
                    {
                        x_acc_44264 = defunc_1_op_res_35069;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_35067 = x_acc_44264;
            ((__local
              float *) red_arr_mem_44255)[sext_i32_i64(local_tid_44251)] =
                x_35067;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44270;
        int32_t skip_waves_44271;
        
        skip_waves_44271 = 1;
        
        float x_44266;
        float x_44267;
        
        offset_44270 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44251,
                      sext_i64_i32(segred_group_sizze_35063))) {
                x_44266 = ((__local
                            float *) red_arr_mem_44255)[sext_i32_i64(local_tid_44251 +
                                                        offset_44270)];
            }
        }
        offset_44270 = 1;
        while (slt32(offset_44270, wave_sizze_44253)) {
            if (slt32(local_tid_44251 + offset_44270,
                      sext_i64_i32(segred_group_sizze_35063)) &&
                ((local_tid_44251 - squot32(local_tid_44251, wave_sizze_44253) *
                  wave_sizze_44253) & (2 * offset_44270 - 1)) == 0) {
                // read array element
                {
                    x_44267 = ((volatile __local
                                float *) red_arr_mem_44255)[sext_i32_i64(local_tid_44251 +
                                                            offset_44270)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44268 = x_44266 + x_44267;
                    
                    x_44266 = defunc_1_op_res_44268;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44255)[sext_i32_i64(local_tid_44251)] =
                        x_44266;
                }
            }
            offset_44270 *= 2;
        }
        while (slt32(skip_waves_44271,
                     squot32(sext_i64_i32(segred_group_sizze_35063) +
                             wave_sizze_44253 - 1, wave_sizze_44253))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44270 = skip_waves_44271 * wave_sizze_44253;
            if (slt32(local_tid_44251 + offset_44270,
                      sext_i64_i32(segred_group_sizze_35063)) &&
                ((local_tid_44251 - squot32(local_tid_44251, wave_sizze_44253) *
                  wave_sizze_44253) == 0 && (squot32(local_tid_44251,
                                                     wave_sizze_44253) & (2 *
                                                                          skip_waves_44271 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44267 = ((__local
                                float *) red_arr_mem_44255)[sext_i32_i64(local_tid_44251 +
                                                            offset_44270)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44268 = x_44266 + x_44267;
                    
                    x_44266 = defunc_1_op_res_44268;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44255)[sext_i32_i64(local_tid_44251)] =
                        x_44266;
                }
            }
            skip_waves_44271 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44251) == (int64_t) 0) {
                x_acc_44264 = x_44266;
            }
        }
        if (groups_per_segment_44241 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44251 == 0) {
                    ((__global float *) mem_43088)[gtid_35004 * i32_res_28059 +
                                                   gtid_35005] = x_acc_44264;
                }
            }
        } else {
            int32_t old_counter_44272;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44251 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44246)[sext_i32_i64(virt_group_id_44261) *
                                                        segred_group_sizze_35063] =
                        x_acc_44264;
                    mem_fence_global();
                    old_counter_44272 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44248)[sext_i32_i64(srem32(flat_segment_id_44262,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44257)[(int64_t) 0] =
                        old_counter_44272 == groups_per_segment_44241 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44273;
            
            is_last_group_44273 = ((__local
                                    bool *) sync_arr_mem_44257)[(int64_t) 0];
            if (is_last_group_44273) {
                if (local_tid_44251 == 0) {
                    old_counter_44272 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44248)[sext_i32_i64(srem32(flat_segment_id_44262,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44241));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44274 =
                            sdiv_up64(groups_per_segment_44241,
                                      segred_group_sizze_35063);
                    
                    x_35067 = 0.0F;
                    for (int64_t i_44275 = 0; i_44275 < read_per_thread_44274;
                         i_44275++) {
                        int64_t group_res_id_44276 =
                                sext_i32_i64(local_tid_44251) *
                                read_per_thread_44274 + i_44275;
                        int64_t index_of_group_res_44277 =
                                sext_i32_i64(flat_segment_id_44262) *
                                groups_per_segment_44241 + group_res_id_44276;
                        
                        if (slt64(group_res_id_44276,
                                  groups_per_segment_44241)) {
                            x_35068 = ((__global
                                        float *) group_res_arr_mem_44246)[index_of_group_res_44277 *
                                                                          segred_group_sizze_35063];
                            
                            float defunc_1_op_res_35069;
                            
                            defunc_1_op_res_35069 = x_35067 + x_35068;
                            x_35067 = defunc_1_op_res_35069;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44255)[sext_i32_i64(local_tid_44251)] =
                    x_35067;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44278;
                    int32_t skip_waves_44279;
                    
                    skip_waves_44279 = 1;
                    
                    float x_44266;
                    float x_44267;
                    
                    offset_44278 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44251,
                                  sext_i64_i32(segred_group_sizze_35063))) {
                            x_44266 = ((__local
                                        float *) red_arr_mem_44255)[sext_i32_i64(local_tid_44251 +
                                                                    offset_44278)];
                        }
                    }
                    offset_44278 = 1;
                    while (slt32(offset_44278, wave_sizze_44253)) {
                        if (slt32(local_tid_44251 + offset_44278,
                                  sext_i64_i32(segred_group_sizze_35063)) &&
                            ((local_tid_44251 - squot32(local_tid_44251,
                                                        wave_sizze_44253) *
                              wave_sizze_44253) & (2 * offset_44278 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44267 = ((volatile __local
                                            float *) red_arr_mem_44255)[sext_i32_i64(local_tid_44251 +
                                                                        offset_44278)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44268 = x_44266 + x_44267;
                                
                                x_44266 = defunc_1_op_res_44268;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44255)[sext_i32_i64(local_tid_44251)] =
                                    x_44266;
                            }
                        }
                        offset_44278 *= 2;
                    }
                    while (slt32(skip_waves_44279,
                                 squot32(sext_i64_i32(segred_group_sizze_35063) +
                                         wave_sizze_44253 - 1,
                                         wave_sizze_44253))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44278 = skip_waves_44279 * wave_sizze_44253;
                        if (slt32(local_tid_44251 + offset_44278,
                                  sext_i64_i32(segred_group_sizze_35063)) &&
                            ((local_tid_44251 - squot32(local_tid_44251,
                                                        wave_sizze_44253) *
                              wave_sizze_44253) == 0 &&
                             (squot32(local_tid_44251, wave_sizze_44253) & (2 *
                                                                            skip_waves_44279 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44267 = ((__local
                                            float *) red_arr_mem_44255)[sext_i32_i64(local_tid_44251 +
                                                                        offset_44278)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44268 = x_44266 + x_44267;
                                
                                x_44266 = defunc_1_op_res_44268;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44255)[sext_i32_i64(local_tid_44251)] =
                                    x_44266;
                            }
                        }
                        skip_waves_44279 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44251 == 0) {
                            ((__global float *) mem_43088)[gtid_35004 *
                                                           i32_res_28059 +
                                                           gtid_35005] =
                                x_44266;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35063
}
__kernel void mainMagnitudezisegred_large_35145(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44389_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44387_backing_aligned_1,
                                                int64_t N_28043,
                                                int64_t i32_res_28059,
                                                int64_t num_groups_35192,
                                                int64_t groups_per_segment_44373,
                                                int64_t elements_per_thread_44374,
                                                int64_t virt_num_groups_44375,
                                                int64_t threads_per_segment_44377,
                                                __global
                                                unsigned char *mem_42575,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_43094,
                                                __global
                                                unsigned char *mem_43312,
                                                __global
                                                unsigned char *group_res_arr_mem_44378,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44380)
{
    #define segred_group_sizze_35191 (mainMagnitudezisegred_group_sizze_35139)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44389_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44389_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44387_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44387_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44382;
    int32_t local_tid_44383;
    int64_t group_sizze_44386;
    int32_t wave_sizze_44385;
    int32_t group_tid_44384;
    
    global_tid_44382 = get_global_id(0);
    local_tid_44383 = get_local_id(0);
    group_sizze_44386 = get_local_size(0);
    wave_sizze_44385 = LOCKSTEP_WIDTH;
    group_tid_44384 = get_group_id(0);
    
    int32_t phys_tid_35145;
    
    phys_tid_35145 = global_tid_44382;
    
    __local char *red_arr_mem_44387;
    
    red_arr_mem_44387 = (__local char *) red_arr_mem_44387_backing_0;
    
    __local char *sync_arr_mem_44389;
    
    sync_arr_mem_44389 = (__local char *) sync_arr_mem_44389_backing_1;
    
    int32_t phys_group_id_44391;
    
    phys_group_id_44391 = get_group_id(0);
    for (int32_t i_44392 = 0; i_44392 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44375) - phys_group_id_44391,
                   sext_i64_i32(num_groups_35192)); i_44392++) {
        int32_t virt_group_id_44393 = phys_group_id_44391 + i_44392 *
                sext_i64_i32(num_groups_35192);
        int32_t flat_segment_id_44394 = squot32(virt_group_id_44393,
                                                sext_i64_i32(groups_per_segment_44373));
        int64_t global_tid_44395 = srem64(sext_i32_i64(virt_group_id_44393) *
                                          segred_group_sizze_35191 +
                                          sext_i32_i64(local_tid_44383),
                                          segred_group_sizze_35191 *
                                          groups_per_segment_44373);
        int64_t gtid_35134 = squot64(sext_i32_i64(flat_segment_id_44394),
                                     N_28043);
        int64_t gtid_35135 = sext_i32_i64(flat_segment_id_44394) -
                squot64(sext_i32_i64(flat_segment_id_44394), N_28043) * N_28043;
        int64_t gtid_35144;
        float x_acc_44396;
        int64_t chunk_sizze_44397;
        
        chunk_sizze_44397 = smin64(elements_per_thread_44374,
                                   sdiv_up64(i32_res_28059 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44395)),
                                             threads_per_segment_44377));
        
        float x_35195;
        float x_35196;
        
        // neutral-initialise the accumulators
        {
            x_acc_44396 = 0.0F;
        }
        for (int64_t i_44401 = 0; i_44401 < chunk_sizze_44397; i_44401++) {
            gtid_35144 = sext_i32_i64(sext_i64_i32(global_tid_44395)) +
                threads_per_segment_44377 * i_44401;
            // apply map function
            {
                float x_35200 = ((__global
                                  float *) defunc_4_map_res_mem_43094)[gtid_35134 *
                                                                       i32_res_28059 +
                                                                       gtid_35144];
                float x_35201 = ((__global float *) mem_42575)[gtid_35135 *
                                                               i32_res_28059 +
                                                               gtid_35144];
                float defunc_1_f_res_35202 = x_35200 * x_35201;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_35195 = x_acc_44396;
                }
                // load new values
                {
                    x_35196 = defunc_1_f_res_35202;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_35197 = x_35195 + x_35196;
                    
                    // store in accumulator
                    {
                        x_acc_44396 = defunc_1_op_res_35197;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_35195 = x_acc_44396;
            ((__local
              float *) red_arr_mem_44387)[sext_i32_i64(local_tid_44383)] =
                x_35195;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44402;
        int32_t skip_waves_44403;
        
        skip_waves_44403 = 1;
        
        float x_44398;
        float x_44399;
        
        offset_44402 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44383,
                      sext_i64_i32(segred_group_sizze_35191))) {
                x_44398 = ((__local
                            float *) red_arr_mem_44387)[sext_i32_i64(local_tid_44383 +
                                                        offset_44402)];
            }
        }
        offset_44402 = 1;
        while (slt32(offset_44402, wave_sizze_44385)) {
            if (slt32(local_tid_44383 + offset_44402,
                      sext_i64_i32(segred_group_sizze_35191)) &&
                ((local_tid_44383 - squot32(local_tid_44383, wave_sizze_44385) *
                  wave_sizze_44385) & (2 * offset_44402 - 1)) == 0) {
                // read array element
                {
                    x_44399 = ((volatile __local
                                float *) red_arr_mem_44387)[sext_i32_i64(local_tid_44383 +
                                                            offset_44402)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44400 = x_44398 + x_44399;
                    
                    x_44398 = defunc_1_op_res_44400;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44387)[sext_i32_i64(local_tid_44383)] =
                        x_44398;
                }
            }
            offset_44402 *= 2;
        }
        while (slt32(skip_waves_44403,
                     squot32(sext_i64_i32(segred_group_sizze_35191) +
                             wave_sizze_44385 - 1, wave_sizze_44385))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44402 = skip_waves_44403 * wave_sizze_44385;
            if (slt32(local_tid_44383 + offset_44402,
                      sext_i64_i32(segred_group_sizze_35191)) &&
                ((local_tid_44383 - squot32(local_tid_44383, wave_sizze_44385) *
                  wave_sizze_44385) == 0 && (squot32(local_tid_44383,
                                                     wave_sizze_44385) & (2 *
                                                                          skip_waves_44403 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44399 = ((__local
                                float *) red_arr_mem_44387)[sext_i32_i64(local_tid_44383 +
                                                            offset_44402)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44400 = x_44398 + x_44399;
                    
                    x_44398 = defunc_1_op_res_44400;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44387)[sext_i32_i64(local_tid_44383)] =
                        x_44398;
                }
            }
            skip_waves_44403 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44383) == (int64_t) 0) {
                x_acc_44396 = x_44398;
            }
        }
        if (groups_per_segment_44373 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44383 == 0) {
                    ((__global float *) mem_43312)[gtid_35134 * N_28043 +
                                                   gtid_35135] = x_acc_44396;
                }
            }
        } else {
            int32_t old_counter_44404;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44383 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44378)[sext_i32_i64(virt_group_id_44393) *
                                                        segred_group_sizze_35191] =
                        x_acc_44396;
                    mem_fence_global();
                    old_counter_44404 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44380)[sext_i32_i64(srem32(flat_segment_id_44394,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44389)[(int64_t) 0] =
                        old_counter_44404 == groups_per_segment_44373 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44405;
            
            is_last_group_44405 = ((__local
                                    bool *) sync_arr_mem_44389)[(int64_t) 0];
            if (is_last_group_44405) {
                if (local_tid_44383 == 0) {
                    old_counter_44404 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44380)[sext_i32_i64(srem32(flat_segment_id_44394,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44373));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44406 =
                            sdiv_up64(groups_per_segment_44373,
                                      segred_group_sizze_35191);
                    
                    x_35195 = 0.0F;
                    for (int64_t i_44407 = 0; i_44407 < read_per_thread_44406;
                         i_44407++) {
                        int64_t group_res_id_44408 =
                                sext_i32_i64(local_tid_44383) *
                                read_per_thread_44406 + i_44407;
                        int64_t index_of_group_res_44409 =
                                sext_i32_i64(flat_segment_id_44394) *
                                groups_per_segment_44373 + group_res_id_44408;
                        
                        if (slt64(group_res_id_44408,
                                  groups_per_segment_44373)) {
                            x_35196 = ((__global
                                        float *) group_res_arr_mem_44378)[index_of_group_res_44409 *
                                                                          segred_group_sizze_35191];
                            
                            float defunc_1_op_res_35197;
                            
                            defunc_1_op_res_35197 = x_35195 + x_35196;
                            x_35195 = defunc_1_op_res_35197;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44387)[sext_i32_i64(local_tid_44383)] =
                    x_35195;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44410;
                    int32_t skip_waves_44411;
                    
                    skip_waves_44411 = 1;
                    
                    float x_44398;
                    float x_44399;
                    
                    offset_44410 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44383,
                                  sext_i64_i32(segred_group_sizze_35191))) {
                            x_44398 = ((__local
                                        float *) red_arr_mem_44387)[sext_i32_i64(local_tid_44383 +
                                                                    offset_44410)];
                        }
                    }
                    offset_44410 = 1;
                    while (slt32(offset_44410, wave_sizze_44385)) {
                        if (slt32(local_tid_44383 + offset_44410,
                                  sext_i64_i32(segred_group_sizze_35191)) &&
                            ((local_tid_44383 - squot32(local_tid_44383,
                                                        wave_sizze_44385) *
                              wave_sizze_44385) & (2 * offset_44410 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44399 = ((volatile __local
                                            float *) red_arr_mem_44387)[sext_i32_i64(local_tid_44383 +
                                                                        offset_44410)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44400 = x_44398 + x_44399;
                                
                                x_44398 = defunc_1_op_res_44400;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44387)[sext_i32_i64(local_tid_44383)] =
                                    x_44398;
                            }
                        }
                        offset_44410 *= 2;
                    }
                    while (slt32(skip_waves_44411,
                                 squot32(sext_i64_i32(segred_group_sizze_35191) +
                                         wave_sizze_44385 - 1,
                                         wave_sizze_44385))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44410 = skip_waves_44411 * wave_sizze_44385;
                        if (slt32(local_tid_44383 + offset_44410,
                                  sext_i64_i32(segred_group_sizze_35191)) &&
                            ((local_tid_44383 - squot32(local_tid_44383,
                                                        wave_sizze_44385) *
                              wave_sizze_44385) == 0 &&
                             (squot32(local_tid_44383, wave_sizze_44385) & (2 *
                                                                            skip_waves_44411 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44399 = ((__local
                                            float *) red_arr_mem_44387)[sext_i32_i64(local_tid_44383 +
                                                                        offset_44410)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44400 = x_44398 + x_44399;
                                
                                x_44398 = defunc_1_op_res_44400;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44387)[sext_i32_i64(local_tid_44383)] =
                                    x_44398;
                            }
                        }
                        skip_waves_44411 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44383 == 0) {
                            ((__global float *) mem_43312)[gtid_35134 *
                                                           N_28043 +
                                                           gtid_35135] =
                                x_44398;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35191
}
__kernel void mainMagnitudezisegred_large_35711(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44641_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44639_backing_aligned_1,
                                                int64_t N_28043,
                                                int64_t i32_res_28053,
                                                int64_t num_groups_35758,
                                                int64_t groups_per_segment_44625,
                                                int64_t elements_per_thread_44626,
                                                int64_t virt_num_groups_44627,
                                                int64_t threads_per_segment_44629,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_43356,
                                                __global
                                                unsigned char *mem_43410,
                                                __global
                                                unsigned char *mem_43413,
                                                __global
                                                unsigned char *group_res_arr_mem_44630,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44632)
{
    #define segred_group_sizze_35757 (mainMagnitudezisegred_group_sizze_35705)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44641_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44641_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44639_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44639_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44634;
    int32_t local_tid_44635;
    int64_t group_sizze_44638;
    int32_t wave_sizze_44637;
    int32_t group_tid_44636;
    
    global_tid_44634 = get_global_id(0);
    local_tid_44635 = get_local_id(0);
    group_sizze_44638 = get_local_size(0);
    wave_sizze_44637 = LOCKSTEP_WIDTH;
    group_tid_44636 = get_group_id(0);
    
    int32_t phys_tid_35711;
    
    phys_tid_35711 = global_tid_44634;
    
    __local char *red_arr_mem_44639;
    
    red_arr_mem_44639 = (__local char *) red_arr_mem_44639_backing_0;
    
    __local char *sync_arr_mem_44641;
    
    sync_arr_mem_44641 = (__local char *) sync_arr_mem_44641_backing_1;
    
    int32_t phys_group_id_44643;
    
    phys_group_id_44643 = get_group_id(0);
    for (int32_t i_44644 = 0; i_44644 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44627) - phys_group_id_44643,
                   sext_i64_i32(num_groups_35758)); i_44644++) {
        int32_t virt_group_id_44645 = phys_group_id_44643 + i_44644 *
                sext_i64_i32(num_groups_35758);
        int32_t flat_segment_id_44646 = squot32(virt_group_id_44645,
                                                sext_i64_i32(groups_per_segment_44625));
        int64_t global_tid_44647 = srem64(sext_i32_i64(virt_group_id_44645) *
                                          segred_group_sizze_35757 +
                                          sext_i32_i64(local_tid_44635),
                                          segred_group_sizze_35757 *
                                          groups_per_segment_44625);
        int64_t gtid_35702 = sext_i32_i64(flat_segment_id_44646);
        int64_t gtid_35710;
        float x_acc_44648;
        int64_t chunk_sizze_44649;
        
        chunk_sizze_44649 = smin64(elements_per_thread_44626,
                                   sdiv_up64(i32_res_28053 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44647)),
                                             threads_per_segment_44629));
        
        float x_35761;
        float x_35762;
        
        // neutral-initialise the accumulators
        {
            x_acc_44648 = 0.0F;
        }
        for (int64_t i_44653 = 0; i_44653 < chunk_sizze_44649; i_44653++) {
            gtid_35710 = sext_i32_i64(sext_i64_i32(global_tid_44647)) +
                threads_per_segment_44629 * i_44653;
            // apply map function
            {
                int32_t defunc_0_f_res_35765 = ((__global
                                                 int32_t *) mem_43410)[gtid_35702];
                int32_t index_primexp_40595 = sext_i64_i32(gtid_35710);
                bool cond_35767 = slt32(index_primexp_40595,
                                        defunc_0_f_res_35765);
                float defunc_0_f_res_35768;
                
                if (cond_35767) {
                    int64_t i_35769 = sext_i32_i64(index_primexp_40595);
                    float defunc_0_f_res_t_res_35770 = ((__global
                                                         float *) defunc_4_map_res_mem_43356)[gtid_35702 *
                                                                                              N_28043 +
                                                                                              i_35769];
                    
                    defunc_0_f_res_35768 = defunc_0_f_res_t_res_35770;
                } else {
                    defunc_0_f_res_35768 = 0.0F;
                }
                
                float defunc_0_f_res_35771 = defunc_0_f_res_35768 *
                      defunc_0_f_res_35768;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_35761 = x_acc_44648;
                }
                // load new values
                {
                    x_35762 = defunc_0_f_res_35771;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_35763 = x_35761 + x_35762;
                    
                    // store in accumulator
                    {
                        x_acc_44648 = defunc_1_op_res_35763;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_35761 = x_acc_44648;
            ((__local
              float *) red_arr_mem_44639)[sext_i32_i64(local_tid_44635)] =
                x_35761;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44654;
        int32_t skip_waves_44655;
        
        skip_waves_44655 = 1;
        
        float x_44650;
        float x_44651;
        
        offset_44654 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44635,
                      sext_i64_i32(segred_group_sizze_35757))) {
                x_44650 = ((__local
                            float *) red_arr_mem_44639)[sext_i32_i64(local_tid_44635 +
                                                        offset_44654)];
            }
        }
        offset_44654 = 1;
        while (slt32(offset_44654, wave_sizze_44637)) {
            if (slt32(local_tid_44635 + offset_44654,
                      sext_i64_i32(segred_group_sizze_35757)) &&
                ((local_tid_44635 - squot32(local_tid_44635, wave_sizze_44637) *
                  wave_sizze_44637) & (2 * offset_44654 - 1)) == 0) {
                // read array element
                {
                    x_44651 = ((volatile __local
                                float *) red_arr_mem_44639)[sext_i32_i64(local_tid_44635 +
                                                            offset_44654)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44652 = x_44650 + x_44651;
                    
                    x_44650 = defunc_1_op_res_44652;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44639)[sext_i32_i64(local_tid_44635)] =
                        x_44650;
                }
            }
            offset_44654 *= 2;
        }
        while (slt32(skip_waves_44655,
                     squot32(sext_i64_i32(segred_group_sizze_35757) +
                             wave_sizze_44637 - 1, wave_sizze_44637))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44654 = skip_waves_44655 * wave_sizze_44637;
            if (slt32(local_tid_44635 + offset_44654,
                      sext_i64_i32(segred_group_sizze_35757)) &&
                ((local_tid_44635 - squot32(local_tid_44635, wave_sizze_44637) *
                  wave_sizze_44637) == 0 && (squot32(local_tid_44635,
                                                     wave_sizze_44637) & (2 *
                                                                          skip_waves_44655 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44651 = ((__local
                                float *) red_arr_mem_44639)[sext_i32_i64(local_tid_44635 +
                                                            offset_44654)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44652 = x_44650 + x_44651;
                    
                    x_44650 = defunc_1_op_res_44652;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44639)[sext_i32_i64(local_tid_44635)] =
                        x_44650;
                }
            }
            skip_waves_44655 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44635) == (int64_t) 0) {
                x_acc_44648 = x_44650;
            }
        }
        if (groups_per_segment_44625 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44635 == 0) {
                    ((__global float *) mem_43413)[gtid_35702] = x_acc_44648;
                }
            }
        } else {
            int32_t old_counter_44656;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44635 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44630)[sext_i32_i64(virt_group_id_44645) *
                                                        segred_group_sizze_35757] =
                        x_acc_44648;
                    mem_fence_global();
                    old_counter_44656 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44632)[sext_i32_i64(srem32(flat_segment_id_44646,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44641)[(int64_t) 0] =
                        old_counter_44656 == groups_per_segment_44625 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44657;
            
            is_last_group_44657 = ((__local
                                    bool *) sync_arr_mem_44641)[(int64_t) 0];
            if (is_last_group_44657) {
                if (local_tid_44635 == 0) {
                    old_counter_44656 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44632)[sext_i32_i64(srem32(flat_segment_id_44646,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44625));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44658 =
                            sdiv_up64(groups_per_segment_44625,
                                      segred_group_sizze_35757);
                    
                    x_35761 = 0.0F;
                    for (int64_t i_44659 = 0; i_44659 < read_per_thread_44658;
                         i_44659++) {
                        int64_t group_res_id_44660 =
                                sext_i32_i64(local_tid_44635) *
                                read_per_thread_44658 + i_44659;
                        int64_t index_of_group_res_44661 =
                                sext_i32_i64(flat_segment_id_44646) *
                                groups_per_segment_44625 + group_res_id_44660;
                        
                        if (slt64(group_res_id_44660,
                                  groups_per_segment_44625)) {
                            x_35762 = ((__global
                                        float *) group_res_arr_mem_44630)[index_of_group_res_44661 *
                                                                          segred_group_sizze_35757];
                            
                            float defunc_1_op_res_35763;
                            
                            defunc_1_op_res_35763 = x_35761 + x_35762;
                            x_35761 = defunc_1_op_res_35763;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44639)[sext_i32_i64(local_tid_44635)] =
                    x_35761;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44662;
                    int32_t skip_waves_44663;
                    
                    skip_waves_44663 = 1;
                    
                    float x_44650;
                    float x_44651;
                    
                    offset_44662 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44635,
                                  sext_i64_i32(segred_group_sizze_35757))) {
                            x_44650 = ((__local
                                        float *) red_arr_mem_44639)[sext_i32_i64(local_tid_44635 +
                                                                    offset_44662)];
                        }
                    }
                    offset_44662 = 1;
                    while (slt32(offset_44662, wave_sizze_44637)) {
                        if (slt32(local_tid_44635 + offset_44662,
                                  sext_i64_i32(segred_group_sizze_35757)) &&
                            ((local_tid_44635 - squot32(local_tid_44635,
                                                        wave_sizze_44637) *
                              wave_sizze_44637) & (2 * offset_44662 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44651 = ((volatile __local
                                            float *) red_arr_mem_44639)[sext_i32_i64(local_tid_44635 +
                                                                        offset_44662)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44652 = x_44650 + x_44651;
                                
                                x_44650 = defunc_1_op_res_44652;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44639)[sext_i32_i64(local_tid_44635)] =
                                    x_44650;
                            }
                        }
                        offset_44662 *= 2;
                    }
                    while (slt32(skip_waves_44663,
                                 squot32(sext_i64_i32(segred_group_sizze_35757) +
                                         wave_sizze_44637 - 1,
                                         wave_sizze_44637))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44662 = skip_waves_44663 * wave_sizze_44637;
                        if (slt32(local_tid_44635 + offset_44662,
                                  sext_i64_i32(segred_group_sizze_35757)) &&
                            ((local_tid_44635 - squot32(local_tid_44635,
                                                        wave_sizze_44637) *
                              wave_sizze_44637) == 0 &&
                             (squot32(local_tid_44635, wave_sizze_44637) & (2 *
                                                                            skip_waves_44663 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44651 = ((__local
                                            float *) red_arr_mem_44639)[sext_i32_i64(local_tid_44635 +
                                                                        offset_44662)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44652 = x_44650 + x_44651;
                                
                                x_44650 = defunc_1_op_res_44652;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44639)[sext_i32_i64(local_tid_44635)] =
                                    x_44650;
                            }
                        }
                        skip_waves_44663 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44635 == 0) {
                            ((__global float *) mem_43413)[gtid_35702] =
                                x_44650;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35757
}
__kernel void mainMagnitudezisegred_large_35732(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44581_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44579_backing_aligned_1,
                                                int64_t N_28043,
                                                int64_t i32_res_28053,
                                                int64_t num_groups_35744,
                                                int64_t groups_per_segment_44565,
                                                int64_t elements_per_thread_44566,
                                                int64_t virt_num_groups_44567,
                                                int64_t threads_per_segment_44569,
                                                __global
                                                unsigned char *images_mem_42559,
                                                __global
                                                unsigned char *mem_43410,
                                                __global
                                                unsigned char *group_res_arr_mem_44570,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44572)
{
    #define segred_group_sizze_35743 (mainMagnitudezisegred_group_sizze_35726)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44581_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44581_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44579_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44579_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44574;
    int32_t local_tid_44575;
    int64_t group_sizze_44578;
    int32_t wave_sizze_44577;
    int32_t group_tid_44576;
    
    global_tid_44574 = get_global_id(0);
    local_tid_44575 = get_local_id(0);
    group_sizze_44578 = get_local_size(0);
    wave_sizze_44577 = LOCKSTEP_WIDTH;
    group_tid_44576 = get_group_id(0);
    
    int32_t phys_tid_35732;
    
    phys_tid_35732 = global_tid_44574;
    
    __local char *red_arr_mem_44579;
    
    red_arr_mem_44579 = (__local char *) red_arr_mem_44579_backing_0;
    
    __local char *sync_arr_mem_44581;
    
    sync_arr_mem_44581 = (__local char *) sync_arr_mem_44581_backing_1;
    
    int32_t phys_group_id_44583;
    
    phys_group_id_44583 = get_group_id(0);
    for (int32_t i_44584 = 0; i_44584 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44567) - phys_group_id_44583,
                   sext_i64_i32(num_groups_35744)); i_44584++) {
        int32_t virt_group_id_44585 = phys_group_id_44583 + i_44584 *
                sext_i64_i32(num_groups_35744);
        int32_t flat_segment_id_44586 = squot32(virt_group_id_44585,
                                                sext_i64_i32(groups_per_segment_44565));
        int64_t global_tid_44587 = srem64(sext_i32_i64(virt_group_id_44585) *
                                          segred_group_sizze_35743 +
                                          sext_i32_i64(local_tid_44575),
                                          segred_group_sizze_35743 *
                                          groups_per_segment_44565);
        int64_t gtid_35723 = sext_i32_i64(flat_segment_id_44586);
        int64_t gtid_35731;
        int32_t x_acc_44588;
        int64_t chunk_sizze_44589;
        
        chunk_sizze_44589 = smin64(elements_per_thread_44566,
                                   sdiv_up64(i32_res_28053 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44587)),
                                             threads_per_segment_44569));
        
        int32_t x_35747;
        int32_t x_35748;
        
        // neutral-initialise the accumulators
        {
            x_acc_44588 = 0;
        }
        for (int64_t i_44593 = 0; i_44593 < chunk_sizze_44589; i_44593++) {
            gtid_35731 = sext_i32_i64(sext_i64_i32(global_tid_44587)) +
                threads_per_segment_44569 * i_44593;
            // apply map function
            {
                float x_35751 = ((__global
                                  float *) images_mem_42559)[gtid_35723 *
                                                             N_28043 +
                                                             gtid_35731];
                bool isnan_res_35752;
                
                isnan_res_35752 = futrts_isnan32(x_35751);
                
                bool cond_35753 = !isnan_res_35752;
                int32_t defunc_0_f_res_35754 = btoi_bool_i32(cond_35753);
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_35747 = x_acc_44588;
                }
                // load new values
                {
                    x_35748 = defunc_0_f_res_35754;
                }
                // apply reduction operator
                {
                    int32_t defunc_1_op_res_35749 = add32(x_35747, x_35748);
                    
                    // store in accumulator
                    {
                        x_acc_44588 = defunc_1_op_res_35749;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_35747 = x_acc_44588;
            ((__local
              int32_t *) red_arr_mem_44579)[sext_i32_i64(local_tid_44575)] =
                x_35747;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44594;
        int32_t skip_waves_44595;
        
        skip_waves_44595 = 1;
        
        int32_t x_44590;
        int32_t x_44591;
        
        offset_44594 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44575,
                      sext_i64_i32(segred_group_sizze_35743))) {
                x_44590 = ((__local
                            int32_t *) red_arr_mem_44579)[sext_i32_i64(local_tid_44575 +
                                                          offset_44594)];
            }
        }
        offset_44594 = 1;
        while (slt32(offset_44594, wave_sizze_44577)) {
            if (slt32(local_tid_44575 + offset_44594,
                      sext_i64_i32(segred_group_sizze_35743)) &&
                ((local_tid_44575 - squot32(local_tid_44575, wave_sizze_44577) *
                  wave_sizze_44577) & (2 * offset_44594 - 1)) == 0) {
                // read array element
                {
                    x_44591 = ((volatile __local
                                int32_t *) red_arr_mem_44579)[sext_i32_i64(local_tid_44575 +
                                                              offset_44594)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_44592 = add32(x_44590, x_44591);
                    
                    x_44590 = defunc_1_op_res_44592;
                }
                // write result of operation
                {
                    ((volatile __local
                      int32_t *) red_arr_mem_44579)[sext_i32_i64(local_tid_44575)] =
                        x_44590;
                }
            }
            offset_44594 *= 2;
        }
        while (slt32(skip_waves_44595,
                     squot32(sext_i64_i32(segred_group_sizze_35743) +
                             wave_sizze_44577 - 1, wave_sizze_44577))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44594 = skip_waves_44595 * wave_sizze_44577;
            if (slt32(local_tid_44575 + offset_44594,
                      sext_i64_i32(segred_group_sizze_35743)) &&
                ((local_tid_44575 - squot32(local_tid_44575, wave_sizze_44577) *
                  wave_sizze_44577) == 0 && (squot32(local_tid_44575,
                                                     wave_sizze_44577) & (2 *
                                                                          skip_waves_44595 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44591 = ((__local
                                int32_t *) red_arr_mem_44579)[sext_i32_i64(local_tid_44575 +
                                                              offset_44594)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_44592 = add32(x_44590, x_44591);
                    
                    x_44590 = defunc_1_op_res_44592;
                }
                // write result of operation
                {
                    ((__local
                      int32_t *) red_arr_mem_44579)[sext_i32_i64(local_tid_44575)] =
                        x_44590;
                }
            }
            skip_waves_44595 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44575) == (int64_t) 0) {
                x_acc_44588 = x_44590;
            }
        }
        if (groups_per_segment_44565 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44575 == 0) {
                    ((__global int32_t *) mem_43410)[gtid_35723] = x_acc_44588;
                }
            }
        } else {
            int32_t old_counter_44596;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44575 == 0) {
                    ((__global
                      int32_t *) group_res_arr_mem_44570)[sext_i32_i64(virt_group_id_44585) *
                                                          segred_group_sizze_35743] =
                        x_acc_44588;
                    mem_fence_global();
                    old_counter_44596 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44572)[sext_i32_i64(srem32(flat_segment_id_44586,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44581)[(int64_t) 0] =
                        old_counter_44596 == groups_per_segment_44565 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44597;
            
            is_last_group_44597 = ((__local
                                    bool *) sync_arr_mem_44581)[(int64_t) 0];
            if (is_last_group_44597) {
                if (local_tid_44575 == 0) {
                    old_counter_44596 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44572)[sext_i32_i64(srem32(flat_segment_id_44586,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44565));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44598 =
                            sdiv_up64(groups_per_segment_44565,
                                      segred_group_sizze_35743);
                    
                    x_35747 = 0;
                    for (int64_t i_44599 = 0; i_44599 < read_per_thread_44598;
                         i_44599++) {
                        int64_t group_res_id_44600 =
                                sext_i32_i64(local_tid_44575) *
                                read_per_thread_44598 + i_44599;
                        int64_t index_of_group_res_44601 =
                                sext_i32_i64(flat_segment_id_44586) *
                                groups_per_segment_44565 + group_res_id_44600;
                        
                        if (slt64(group_res_id_44600,
                                  groups_per_segment_44565)) {
                            x_35748 = ((__global
                                        int32_t *) group_res_arr_mem_44570)[index_of_group_res_44601 *
                                                                            segred_group_sizze_35743];
                            
                            int32_t defunc_1_op_res_35749;
                            
                            defunc_1_op_res_35749 = add32(x_35747, x_35748);
                            x_35747 = defunc_1_op_res_35749;
                        }
                    }
                }
                ((__local
                  int32_t *) red_arr_mem_44579)[sext_i32_i64(local_tid_44575)] =
                    x_35747;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44602;
                    int32_t skip_waves_44603;
                    
                    skip_waves_44603 = 1;
                    
                    int32_t x_44590;
                    int32_t x_44591;
                    
                    offset_44602 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44575,
                                  sext_i64_i32(segred_group_sizze_35743))) {
                            x_44590 = ((__local
                                        int32_t *) red_arr_mem_44579)[sext_i32_i64(local_tid_44575 +
                                                                      offset_44602)];
                        }
                    }
                    offset_44602 = 1;
                    while (slt32(offset_44602, wave_sizze_44577)) {
                        if (slt32(local_tid_44575 + offset_44602,
                                  sext_i64_i32(segred_group_sizze_35743)) &&
                            ((local_tid_44575 - squot32(local_tid_44575,
                                                        wave_sizze_44577) *
                              wave_sizze_44577) & (2 * offset_44602 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44591 = ((volatile __local
                                            int32_t *) red_arr_mem_44579)[sext_i32_i64(local_tid_44575 +
                                                                          offset_44602)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_44592 = add32(x_44590,
                                                                      x_44591);
                                
                                x_44590 = defunc_1_op_res_44592;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_44579)[sext_i32_i64(local_tid_44575)] =
                                    x_44590;
                            }
                        }
                        offset_44602 *= 2;
                    }
                    while (slt32(skip_waves_44603,
                                 squot32(sext_i64_i32(segred_group_sizze_35743) +
                                         wave_sizze_44577 - 1,
                                         wave_sizze_44577))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44602 = skip_waves_44603 * wave_sizze_44577;
                        if (slt32(local_tid_44575 + offset_44602,
                                  sext_i64_i32(segred_group_sizze_35743)) &&
                            ((local_tid_44575 - squot32(local_tid_44575,
                                                        wave_sizze_44577) *
                              wave_sizze_44577) == 0 &&
                             (squot32(local_tid_44575, wave_sizze_44577) & (2 *
                                                                            skip_waves_44603 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44591 = ((__local
                                            int32_t *) red_arr_mem_44579)[sext_i32_i64(local_tid_44575 +
                                                                          offset_44602)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_44592 = add32(x_44590,
                                                                      x_44591);
                                
                                x_44590 = defunc_1_op_res_44592;
                            }
                            // write result of operation
                            {
                                ((__local
                                  int32_t *) red_arr_mem_44579)[sext_i32_i64(local_tid_44575)] =
                                    x_44590;
                            }
                        }
                        skip_waves_44603 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44575 == 0) {
                            ((__global int32_t *) mem_43410)[gtid_35723] =
                                x_44590;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35743
}
__kernel void mainMagnitudezisegred_large_35883(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44750_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44748_backing_aligned_1,
                                                int64_t N_28043,
                                                int64_t i32_res_28414,
                                                int64_t num_groups_35901,
                                                int64_t groups_per_segment_44734,
                                                int64_t elements_per_thread_44735,
                                                int64_t virt_num_groups_44736,
                                                int64_t threads_per_segment_44738,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_43356,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43422,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43423,
                                                __global
                                                unsigned char *mem_43456,
                                                __global
                                                unsigned char *group_res_arr_mem_44739,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44741)
{
    #define segred_group_sizze_35900 (mainMagnitudezisegred_group_sizze_35877)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44750_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44750_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44748_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44748_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44743;
    int32_t local_tid_44744;
    int64_t group_sizze_44747;
    int32_t wave_sizze_44746;
    int32_t group_tid_44745;
    
    global_tid_44743 = get_global_id(0);
    local_tid_44744 = get_local_id(0);
    group_sizze_44747 = get_local_size(0);
    wave_sizze_44746 = LOCKSTEP_WIDTH;
    group_tid_44745 = get_group_id(0);
    
    int32_t phys_tid_35883;
    
    phys_tid_35883 = global_tid_44743;
    
    __local char *red_arr_mem_44748;
    
    red_arr_mem_44748 = (__local char *) red_arr_mem_44748_backing_0;
    
    __local char *sync_arr_mem_44750;
    
    sync_arr_mem_44750 = (__local char *) sync_arr_mem_44750_backing_1;
    
    int32_t phys_group_id_44752;
    
    phys_group_id_44752 = get_group_id(0);
    for (int32_t i_44753 = 0; i_44753 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44736) - phys_group_id_44752,
                   sext_i64_i32(num_groups_35901)); i_44753++) {
        int32_t virt_group_id_44754 = phys_group_id_44752 + i_44753 *
                sext_i64_i32(num_groups_35901);
        int32_t flat_segment_id_44755 = squot32(virt_group_id_44754,
                                                sext_i64_i32(groups_per_segment_44734));
        int64_t global_tid_44756 = srem64(sext_i32_i64(virt_group_id_44754) *
                                          segred_group_sizze_35900 +
                                          sext_i32_i64(local_tid_44744),
                                          segred_group_sizze_35900 *
                                          groups_per_segment_44734);
        int64_t gtid_35874 = sext_i32_i64(flat_segment_id_44755);
        int64_t gtid_35882;
        float x_acc_44757;
        int64_t chunk_sizze_44758;
        
        chunk_sizze_44758 = smin64(elements_per_thread_44735,
                                   sdiv_up64(i32_res_28414 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44756)),
                                             threads_per_segment_44738));
        
        float x_35904;
        float x_35905;
        
        // neutral-initialise the accumulators
        {
            x_acc_44757 = 0.0F;
        }
        for (int64_t i_44762 = 0; i_44762 < chunk_sizze_44758; i_44762++) {
            gtid_35882 = sext_i32_i64(sext_i64_i32(global_tid_44756)) +
                threads_per_segment_44738 * i_44762;
            // apply map function
            {
                int32_t x_35909 = ((__global
                                    int32_t *) defunc_3_map_res_mem_43422)[gtid_35874];
                int32_t index_primexp_40600 = sext_i64_i32(gtid_35882);
                bool cond_35911 = slt32(index_primexp_40600, x_35909);
                float defunc_0_f_res_35912;
                
                if (cond_35911) {
                    int32_t x_35908 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43423)[gtid_35874];
                    int32_t x_35913 = add32(x_35908, index_primexp_40600);
                    int32_t x_35914 = sub32(x_35913, x_35909);
                    int32_t i_35915 = add32(1, x_35914);
                    int64_t i_35916 = sext_i32_i64(i_35915);
                    float defunc_0_f_res_t_res_35917 = ((__global
                                                         float *) defunc_4_map_res_mem_43356)[gtid_35874 *
                                                                                              N_28043 +
                                                                                              i_35916];
                    
                    defunc_0_f_res_35912 = defunc_0_f_res_t_res_35917;
                } else {
                    defunc_0_f_res_35912 = 0.0F;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_35904 = x_acc_44757;
                }
                // load new values
                {
                    x_35905 = defunc_0_f_res_35912;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_35906 = x_35904 + x_35905;
                    
                    // store in accumulator
                    {
                        x_acc_44757 = defunc_1_op_res_35906;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_35904 = x_acc_44757;
            ((__local
              float *) red_arr_mem_44748)[sext_i32_i64(local_tid_44744)] =
                x_35904;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44763;
        int32_t skip_waves_44764;
        
        skip_waves_44764 = 1;
        
        float x_44759;
        float x_44760;
        
        offset_44763 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44744,
                      sext_i64_i32(segred_group_sizze_35900))) {
                x_44759 = ((__local
                            float *) red_arr_mem_44748)[sext_i32_i64(local_tid_44744 +
                                                        offset_44763)];
            }
        }
        offset_44763 = 1;
        while (slt32(offset_44763, wave_sizze_44746)) {
            if (slt32(local_tid_44744 + offset_44763,
                      sext_i64_i32(segred_group_sizze_35900)) &&
                ((local_tid_44744 - squot32(local_tid_44744, wave_sizze_44746) *
                  wave_sizze_44746) & (2 * offset_44763 - 1)) == 0) {
                // read array element
                {
                    x_44760 = ((volatile __local
                                float *) red_arr_mem_44748)[sext_i32_i64(local_tid_44744 +
                                                            offset_44763)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44761 = x_44759 + x_44760;
                    
                    x_44759 = defunc_1_op_res_44761;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44748)[sext_i32_i64(local_tid_44744)] =
                        x_44759;
                }
            }
            offset_44763 *= 2;
        }
        while (slt32(skip_waves_44764,
                     squot32(sext_i64_i32(segred_group_sizze_35900) +
                             wave_sizze_44746 - 1, wave_sizze_44746))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44763 = skip_waves_44764 * wave_sizze_44746;
            if (slt32(local_tid_44744 + offset_44763,
                      sext_i64_i32(segred_group_sizze_35900)) &&
                ((local_tid_44744 - squot32(local_tid_44744, wave_sizze_44746) *
                  wave_sizze_44746) == 0 && (squot32(local_tid_44744,
                                                     wave_sizze_44746) & (2 *
                                                                          skip_waves_44764 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44760 = ((__local
                                float *) red_arr_mem_44748)[sext_i32_i64(local_tid_44744 +
                                                            offset_44763)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44761 = x_44759 + x_44760;
                    
                    x_44759 = defunc_1_op_res_44761;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44748)[sext_i32_i64(local_tid_44744)] =
                        x_44759;
                }
            }
            skip_waves_44764 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44744) == (int64_t) 0) {
                x_acc_44757 = x_44759;
            }
        }
        if (groups_per_segment_44734 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44744 == 0) {
                    ((__global float *) mem_43456)[gtid_35874] = x_acc_44757;
                }
            }
        } else {
            int32_t old_counter_44765;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44744 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44739)[sext_i32_i64(virt_group_id_44754) *
                                                        segred_group_sizze_35900] =
                        x_acc_44757;
                    mem_fence_global();
                    old_counter_44765 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44741)[sext_i32_i64(srem32(flat_segment_id_44755,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44750)[(int64_t) 0] =
                        old_counter_44765 == groups_per_segment_44734 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44766;
            
            is_last_group_44766 = ((__local
                                    bool *) sync_arr_mem_44750)[(int64_t) 0];
            if (is_last_group_44766) {
                if (local_tid_44744 == 0) {
                    old_counter_44765 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44741)[sext_i32_i64(srem32(flat_segment_id_44755,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44734));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44767 =
                            sdiv_up64(groups_per_segment_44734,
                                      segred_group_sizze_35900);
                    
                    x_35904 = 0.0F;
                    for (int64_t i_44768 = 0; i_44768 < read_per_thread_44767;
                         i_44768++) {
                        int64_t group_res_id_44769 =
                                sext_i32_i64(local_tid_44744) *
                                read_per_thread_44767 + i_44768;
                        int64_t index_of_group_res_44770 =
                                sext_i32_i64(flat_segment_id_44755) *
                                groups_per_segment_44734 + group_res_id_44769;
                        
                        if (slt64(group_res_id_44769,
                                  groups_per_segment_44734)) {
                            x_35905 = ((__global
                                        float *) group_res_arr_mem_44739)[index_of_group_res_44770 *
                                                                          segred_group_sizze_35900];
                            
                            float defunc_1_op_res_35906;
                            
                            defunc_1_op_res_35906 = x_35904 + x_35905;
                            x_35904 = defunc_1_op_res_35906;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44748)[sext_i32_i64(local_tid_44744)] =
                    x_35904;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44771;
                    int32_t skip_waves_44772;
                    
                    skip_waves_44772 = 1;
                    
                    float x_44759;
                    float x_44760;
                    
                    offset_44771 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44744,
                                  sext_i64_i32(segred_group_sizze_35900))) {
                            x_44759 = ((__local
                                        float *) red_arr_mem_44748)[sext_i32_i64(local_tid_44744 +
                                                                    offset_44771)];
                        }
                    }
                    offset_44771 = 1;
                    while (slt32(offset_44771, wave_sizze_44746)) {
                        if (slt32(local_tid_44744 + offset_44771,
                                  sext_i64_i32(segred_group_sizze_35900)) &&
                            ((local_tid_44744 - squot32(local_tid_44744,
                                                        wave_sizze_44746) *
                              wave_sizze_44746) & (2 * offset_44771 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44760 = ((volatile __local
                                            float *) red_arr_mem_44748)[sext_i32_i64(local_tid_44744 +
                                                                        offset_44771)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44761 = x_44759 + x_44760;
                                
                                x_44759 = defunc_1_op_res_44761;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44748)[sext_i32_i64(local_tid_44744)] =
                                    x_44759;
                            }
                        }
                        offset_44771 *= 2;
                    }
                    while (slt32(skip_waves_44772,
                                 squot32(sext_i64_i32(segred_group_sizze_35900) +
                                         wave_sizze_44746 - 1,
                                         wave_sizze_44746))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44771 = skip_waves_44772 * wave_sizze_44746;
                        if (slt32(local_tid_44744 + offset_44771,
                                  sext_i64_i32(segred_group_sizze_35900)) &&
                            ((local_tid_44744 - squot32(local_tid_44744,
                                                        wave_sizze_44746) *
                              wave_sizze_44746) == 0 &&
                             (squot32(local_tid_44744, wave_sizze_44746) & (2 *
                                                                            skip_waves_44772 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44760 = ((__local
                                            float *) red_arr_mem_44748)[sext_i32_i64(local_tid_44744 +
                                                                        offset_44771)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44761 = x_44759 + x_44760;
                                
                                x_44759 = defunc_1_op_res_44761;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44748)[sext_i32_i64(local_tid_44744)] =
                                    x_44759;
                            }
                        }
                        skip_waves_44772 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44744 == 0) {
                            ((__global float *) mem_43456)[gtid_35874] =
                                x_44759;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35900
}
__kernel void mainMagnitudezisegred_large_36942(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44951_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44949_backing_aligned_1,
                                                __local volatile
                                                int64_t *red_arr_mem_44947_backing_aligned_2,
                                                __local volatile
                                                int64_t *red_arr_mem_44945_backing_aligned_3,
                                                int64_t iota32_arg_28439,
                                                int64_t num_groups_37113,
                                                int64_t groups_per_segment_44927,
                                                int64_t elements_per_thread_44928,
                                                int64_t virt_num_groups_44929,
                                                __global
                                                unsigned char *mem_43462,
                                                __global
                                                unsigned char *mem_43515,
                                                __global
                                                unsigned char *mem_43517,
                                                __global
                                                unsigned char *mem_43521,
                                                __global
                                                unsigned char *mem_43524,
                                                __global
                                                unsigned char *mem_43526,
                                                __global
                                                unsigned char *mem_43528,
                                                __global
                                                unsigned char *group_res_arr_mem_44932,
                                                __global
                                                unsigned char *group_res_arr_mem_44934,
                                                __global
                                                unsigned char *group_res_arr_mem_44936,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44938)
{
    #define segred_group_sizze_37112 (mainMagnitudezisegred_group_sizze_36936)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44951_backing_3 =
                          (__local volatile
                           char *) sync_arr_mem_44951_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44949_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_44949_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_44947_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44947_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_44945_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44945_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44940;
    int32_t local_tid_44941;
    int64_t group_sizze_44944;
    int32_t wave_sizze_44943;
    int32_t group_tid_44942;
    
    global_tid_44940 = get_global_id(0);
    local_tid_44941 = get_local_id(0);
    group_sizze_44944 = get_local_size(0);
    wave_sizze_44943 = LOCKSTEP_WIDTH;
    group_tid_44942 = get_group_id(0);
    
    int32_t phys_tid_36942;
    
    phys_tid_36942 = global_tid_44940;
    
    __local char *red_arr_mem_44945;
    
    red_arr_mem_44945 = (__local char *) red_arr_mem_44945_backing_0;
    
    __local char *red_arr_mem_44947;
    
    red_arr_mem_44947 = (__local char *) red_arr_mem_44947_backing_1;
    
    __local char *red_arr_mem_44949;
    
    red_arr_mem_44949 = (__local char *) red_arr_mem_44949_backing_2;
    
    __local char *sync_arr_mem_44951;
    
    sync_arr_mem_44951 = (__local char *) sync_arr_mem_44951_backing_3;
    
    int32_t phys_group_id_44953;
    
    phys_group_id_44953 = get_group_id(0);
    for (int32_t i_44954 = 0; i_44954 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44929) - phys_group_id_44953,
                   sext_i64_i32(num_groups_37113)); i_44954++) {
        int32_t virt_group_id_44955 = phys_group_id_44953 + i_44954 *
                sext_i64_i32(num_groups_37113);
        int32_t flat_segment_id_44956 = squot32(virt_group_id_44955,
                                                sext_i64_i32(groups_per_segment_44927));
        int64_t global_tid_44957 = srem64(sext_i32_i64(virt_group_id_44955) *
                                          segred_group_sizze_37112 +
                                          sext_i32_i64(local_tid_44941),
                                          segred_group_sizze_37112 *
                                          groups_per_segment_44927);
        int64_t gtid_36933 = sext_i32_i64(flat_segment_id_44956);
        int64_t gtid_36941;
        bool x_acc_44958;
        int32_t x_acc_44959;
        float x_acc_44960;
        int64_t chunk_sizze_44961;
        int64_t starting_point_44962;
        
        starting_point_44962 = sext_i32_i64(sext_i64_i32(global_tid_44957)) *
            elements_per_thread_44928;
        
        int64_t remaining_elements_44963;
        
        remaining_elements_44963 = iota32_arg_28439 - starting_point_44962;
        if (sle64(remaining_elements_44963, (int64_t) 0) ||
            sle64(iota32_arg_28439, starting_point_44962)) {
            chunk_sizze_44961 = (int64_t) 0;
        } else {
            if (slt64(iota32_arg_28439,
                      (sext_i32_i64(sext_i64_i32(global_tid_44957)) +
                       (int64_t) 1) * elements_per_thread_44928)) {
                chunk_sizze_44961 = iota32_arg_28439 -
                    sext_i32_i64(sext_i64_i32(global_tid_44957)) *
                    elements_per_thread_44928;
            } else {
                chunk_sizze_44961 = elements_per_thread_44928;
            }
        }
        
        bool x_37118;
        int32_t x_37119;
        float x_37120;
        bool x_37121;
        int32_t x_37122;
        float x_37123;
        
        // neutral-initialise the accumulators
        {
            x_acc_44958 = 0;
            x_acc_44959 = -1;
            x_acc_44960 = 0.0F;
        }
        for (int64_t i_44978 = 0; i_44978 < elements_per_thread_44928;
             i_44978++) {
            gtid_36941 = sext_i32_i64(local_tid_44941) +
                (sext_i32_i64(squot32(sext_i64_i32(global_tid_44957),
                                      sext_i64_i32(segred_group_sizze_37112))) *
                 elements_per_thread_44928 + i_44978) *
                segred_group_sizze_37112;
            if (slt64(gtid_36941, iota32_arg_28439)) {
                // apply map function
                {
                    int32_t y_37132 = ((__global
                                        int32_t *) mem_43517)[gtid_36933];
                    float y_37133 = ((__global float *) mem_43515)[gtid_36933];
                    float x_37137 = ((__global float *) mem_43521)[gtid_36933 *
                                                                   iota32_arg_28439 +
                                                                   gtid_36941];
                    float x_37138 = ((__global float *) mem_43462)[gtid_36941];
                    int32_t index_primexp_40619 = sext_i64_i32(gtid_36941);
                    float defunc_0_f_res_37141 = x_37137 / y_37133;
                    bool cond_37142 = slt32(index_primexp_40619, y_37132);
                    bool isnan_res_37143;
                    
                    isnan_res_37143 = futrts_isnan32(defunc_0_f_res_37141);
                    
                    bool cond_t_res_37144 = !isnan_res_37143;
                    bool x_37145 = cond_37142 && cond_t_res_37144;
                    float abs_res_37146 = (float) fabs(defunc_0_f_res_37141);
                    bool defunc_2_f_res_t_res_37147 = x_37138 < abs_res_37146;
                    bool x_37148 = x_37145 && defunc_2_f_res_t_res_37147;
                    float defunc_1_f_res_37149;
                    
                    if (cond_37142) {
                        defunc_1_f_res_37149 = defunc_0_f_res_37141;
                    } else {
                        defunc_1_f_res_37149 = 0.0F;
                    }
                    // save map-out results
                    { }
                    // load accumulator
                    {
                        x_37118 = x_acc_44958;
                        x_37119 = x_acc_44959;
                        x_37120 = x_acc_44960;
                    }
                    // load new values
                    {
                        x_37121 = x_37148;
                        x_37122 = index_primexp_40619;
                        x_37123 = defunc_1_f_res_37149;
                    }
                    // apply reduction operator
                    {
                        bool defunc_1_op_res_37124;
                        int32_t defunc_1_op_res_37125;
                        
                        if (x_37118) {
                            defunc_1_op_res_37124 = x_37118;
                            defunc_1_op_res_37125 = x_37119;
                        } else {
                            bool x_37126 = x_37121 && x_37121;
                            bool x_37127 = !x_37121;
                            bool y_37128 = x_37118 && x_37127;
                            bool defunc_1_op_res_f_res_37129 = x_37126 ||
                                 y_37128;
                            int32_t defunc_1_op_res_f_res_37130;
                            
                            if (x_37121) {
                                defunc_1_op_res_f_res_37130 = x_37122;
                            } else {
                                defunc_1_op_res_f_res_37130 = x_37119;
                            }
                            defunc_1_op_res_37124 = defunc_1_op_res_f_res_37129;
                            defunc_1_op_res_37125 = defunc_1_op_res_f_res_37130;
                        }
                        
                        float defunc_1_op_res_37131 = x_37120 + x_37123;
                        
                        // store in accumulator
                        {
                            x_acc_44958 = defunc_1_op_res_37124;
                            x_acc_44959 = defunc_1_op_res_37125;
                            x_acc_44960 = defunc_1_op_res_37131;
                        }
                    }
                }
            }
            // to reduce current chunk, first store our result in memory
            {
                x_37118 = x_acc_44958;
                x_37119 = x_acc_44959;
                x_37120 = x_acc_44960;
                ((__local
                  bool *) red_arr_mem_44945)[sext_i32_i64(local_tid_44941)] =
                    x_37118;
                ((__local
                  int32_t *) red_arr_mem_44947)[sext_i32_i64(local_tid_44941)] =
                    x_37119;
                ((__local
                  float *) red_arr_mem_44949)[sext_i32_i64(local_tid_44941)] =
                    x_37120;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t offset_44979;
            int32_t skip_waves_44980;
            
            skip_waves_44980 = 1;
            
            bool x_44964;
            int32_t x_44965;
            float x_44966;
            bool x_44967;
            int32_t x_44968;
            float x_44969;
            
            offset_44979 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_44941,
                          sext_i64_i32(segred_group_sizze_37112))) {
                    x_44964 = ((__local
                                bool *) red_arr_mem_44945)[sext_i32_i64(local_tid_44941 +
                                                           offset_44979)];
                    x_44965 = ((__local
                                int32_t *) red_arr_mem_44947)[sext_i32_i64(local_tid_44941 +
                                                              offset_44979)];
                    x_44966 = ((__local
                                float *) red_arr_mem_44949)[sext_i32_i64(local_tid_44941 +
                                                            offset_44979)];
                }
            }
            offset_44979 = 1;
            while (slt32(offset_44979, wave_sizze_44943)) {
                if (slt32(local_tid_44941 + offset_44979,
                          sext_i64_i32(segred_group_sizze_37112)) &&
                    ((local_tid_44941 - squot32(local_tid_44941,
                                                wave_sizze_44943) *
                      wave_sizze_44943) & (2 * offset_44979 - 1)) == 0) {
                    // read array element
                    {
                        x_44967 = ((volatile __local
                                    bool *) red_arr_mem_44945)[sext_i32_i64(local_tid_44941 +
                                                               offset_44979)];
                        x_44968 = ((volatile __local
                                    int32_t *) red_arr_mem_44947)[sext_i32_i64(local_tid_44941 +
                                                                  offset_44979)];
                        x_44969 = ((volatile __local
                                    float *) red_arr_mem_44949)[sext_i32_i64(local_tid_44941 +
                                                                offset_44979)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_44970;
                        int32_t defunc_1_op_res_44971;
                        
                        if (x_44964) {
                            defunc_1_op_res_44970 = x_44964;
                            defunc_1_op_res_44971 = x_44965;
                        } else {
                            bool x_44972 = x_44967 && x_44967;
                            bool x_44973 = !x_44967;
                            bool y_44974 = x_44964 && x_44973;
                            bool defunc_1_op_res_f_res_44975 = x_44972 ||
                                 y_44974;
                            int32_t defunc_1_op_res_f_res_44976;
                            
                            if (x_44967) {
                                defunc_1_op_res_f_res_44976 = x_44968;
                            } else {
                                defunc_1_op_res_f_res_44976 = x_44965;
                            }
                            defunc_1_op_res_44970 = defunc_1_op_res_f_res_44975;
                            defunc_1_op_res_44971 = defunc_1_op_res_f_res_44976;
                        }
                        
                        float defunc_1_op_res_44977 = x_44966 + x_44969;
                        
                        x_44964 = defunc_1_op_res_44970;
                        x_44965 = defunc_1_op_res_44971;
                        x_44966 = defunc_1_op_res_44977;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          bool *) red_arr_mem_44945)[sext_i32_i64(local_tid_44941)] =
                            x_44964;
                        ((volatile __local
                          int32_t *) red_arr_mem_44947)[sext_i32_i64(local_tid_44941)] =
                            x_44965;
                        ((volatile __local
                          float *) red_arr_mem_44949)[sext_i32_i64(local_tid_44941)] =
                            x_44966;
                    }
                }
                offset_44979 *= 2;
            }
            while (slt32(skip_waves_44980,
                         squot32(sext_i64_i32(segred_group_sizze_37112) +
                                 wave_sizze_44943 - 1, wave_sizze_44943))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_44979 = skip_waves_44980 * wave_sizze_44943;
                if (slt32(local_tid_44941 + offset_44979,
                          sext_i64_i32(segred_group_sizze_37112)) &&
                    ((local_tid_44941 - squot32(local_tid_44941,
                                                wave_sizze_44943) *
                      wave_sizze_44943) == 0 && (squot32(local_tid_44941,
                                                         wave_sizze_44943) &
                                                 (2 * skip_waves_44980 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_44967 = ((__local
                                    bool *) red_arr_mem_44945)[sext_i32_i64(local_tid_44941 +
                                                               offset_44979)];
                        x_44968 = ((__local
                                    int32_t *) red_arr_mem_44947)[sext_i32_i64(local_tid_44941 +
                                                                  offset_44979)];
                        x_44969 = ((__local
                                    float *) red_arr_mem_44949)[sext_i32_i64(local_tid_44941 +
                                                                offset_44979)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_44970;
                        int32_t defunc_1_op_res_44971;
                        
                        if (x_44964) {
                            defunc_1_op_res_44970 = x_44964;
                            defunc_1_op_res_44971 = x_44965;
                        } else {
                            bool x_44972 = x_44967 && x_44967;
                            bool x_44973 = !x_44967;
                            bool y_44974 = x_44964 && x_44973;
                            bool defunc_1_op_res_f_res_44975 = x_44972 ||
                                 y_44974;
                            int32_t defunc_1_op_res_f_res_44976;
                            
                            if (x_44967) {
                                defunc_1_op_res_f_res_44976 = x_44968;
                            } else {
                                defunc_1_op_res_f_res_44976 = x_44965;
                            }
                            defunc_1_op_res_44970 = defunc_1_op_res_f_res_44975;
                            defunc_1_op_res_44971 = defunc_1_op_res_f_res_44976;
                        }
                        
                        float defunc_1_op_res_44977 = x_44966 + x_44969;
                        
                        x_44964 = defunc_1_op_res_44970;
                        x_44965 = defunc_1_op_res_44971;
                        x_44966 = defunc_1_op_res_44977;
                    }
                    // write result of operation
                    {
                        ((__local
                          bool *) red_arr_mem_44945)[sext_i32_i64(local_tid_44941)] =
                            x_44964;
                        ((__local
                          int32_t *) red_arr_mem_44947)[sext_i32_i64(local_tid_44941)] =
                            x_44965;
                        ((__local
                          float *) red_arr_mem_44949)[sext_i32_i64(local_tid_44941)] =
                            x_44966;
                    }
                }
                skip_waves_44980 *= 2;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread saves the result in accumulator
            {
                if (sext_i32_i64(local_tid_44941) == (int64_t) 0) {
                    x_acc_44958 = x_44964;
                    x_acc_44959 = x_44965;
                    x_acc_44960 = x_44966;
                }
            }
            // first thread keeps accumulator; others reset to neutral element
            {
                if (!(sext_i32_i64(local_tid_44941) == (int64_t) 0)) {
                    x_acc_44958 = 0;
                    x_acc_44959 = -1;
                    x_acc_44960 = 0.0F;
                }
            }
        }
        x_37118 = x_acc_44958;
        x_37119 = x_acc_44959;
        x_37120 = x_acc_44960;
        if (groups_per_segment_44927 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44941 == 0) {
                    ((__global bool *) mem_43524)[gtid_36933] = x_acc_44958;
                    ((__global int32_t *) mem_43526)[gtid_36933] = x_acc_44959;
                    ((__global float *) mem_43528)[gtid_36933] = x_acc_44960;
                }
            }
        } else {
            int32_t old_counter_44981;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44941 == 0) {
                    ((__global
                      bool *) group_res_arr_mem_44932)[sext_i32_i64(virt_group_id_44955) *
                                                       segred_group_sizze_37112] =
                        x_acc_44958;
                    ((__global
                      int32_t *) group_res_arr_mem_44934)[sext_i32_i64(virt_group_id_44955) *
                                                          segred_group_sizze_37112] =
                        x_acc_44959;
                    ((__global
                      float *) group_res_arr_mem_44936)[sext_i32_i64(virt_group_id_44955) *
                                                        segred_group_sizze_37112] =
                        x_acc_44960;
                    mem_fence_global();
                    old_counter_44981 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44938)[sext_i32_i64(srem32(flat_segment_id_44956,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44951)[(int64_t) 0] =
                        old_counter_44981 == groups_per_segment_44927 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44982;
            
            is_last_group_44982 = ((__local
                                    bool *) sync_arr_mem_44951)[(int64_t) 0];
            if (is_last_group_44982) {
                if (local_tid_44941 == 0) {
                    old_counter_44981 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44938)[sext_i32_i64(srem32(flat_segment_id_44956,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44927));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44983 =
                            sdiv_up64(groups_per_segment_44927,
                                      segred_group_sizze_37112);
                    
                    x_37118 = 0;
                    x_37119 = -1;
                    x_37120 = 0.0F;
                    for (int64_t i_44984 = 0; i_44984 < read_per_thread_44983;
                         i_44984++) {
                        int64_t group_res_id_44985 =
                                sext_i32_i64(local_tid_44941) *
                                read_per_thread_44983 + i_44984;
                        int64_t index_of_group_res_44986 =
                                sext_i32_i64(flat_segment_id_44956) *
                                groups_per_segment_44927 + group_res_id_44985;
                        
                        if (slt64(group_res_id_44985,
                                  groups_per_segment_44927)) {
                            x_37121 = ((__global
                                        bool *) group_res_arr_mem_44932)[index_of_group_res_44986 *
                                                                         segred_group_sizze_37112];
                            x_37122 = ((__global
                                        int32_t *) group_res_arr_mem_44934)[index_of_group_res_44986 *
                                                                            segred_group_sizze_37112];
                            x_37123 = ((__global
                                        float *) group_res_arr_mem_44936)[index_of_group_res_44986 *
                                                                          segred_group_sizze_37112];
                            
                            bool defunc_1_op_res_37124;
                            int32_t defunc_1_op_res_37125;
                            
                            if (x_37118) {
                                defunc_1_op_res_37124 = x_37118;
                                defunc_1_op_res_37125 = x_37119;
                            } else {
                                bool x_37126 = x_37121 && x_37121;
                                bool x_37127 = !x_37121;
                                bool y_37128 = x_37118 && x_37127;
                                bool defunc_1_op_res_f_res_37129 = x_37126 ||
                                     y_37128;
                                int32_t defunc_1_op_res_f_res_37130;
                                
                                if (x_37121) {
                                    defunc_1_op_res_f_res_37130 = x_37122;
                                } else {
                                    defunc_1_op_res_f_res_37130 = x_37119;
                                }
                                defunc_1_op_res_37124 =
                                    defunc_1_op_res_f_res_37129;
                                defunc_1_op_res_37125 =
                                    defunc_1_op_res_f_res_37130;
                            }
                            
                            float defunc_1_op_res_37131 = x_37120 + x_37123;
                            
                            x_37118 = defunc_1_op_res_37124;
                            x_37119 = defunc_1_op_res_37125;
                            x_37120 = defunc_1_op_res_37131;
                        }
                    }
                }
                ((__local
                  bool *) red_arr_mem_44945)[sext_i32_i64(local_tid_44941)] =
                    x_37118;
                ((__local
                  int32_t *) red_arr_mem_44947)[sext_i32_i64(local_tid_44941)] =
                    x_37119;
                ((__local
                  float *) red_arr_mem_44949)[sext_i32_i64(local_tid_44941)] =
                    x_37120;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44987;
                    int32_t skip_waves_44988;
                    
                    skip_waves_44988 = 1;
                    
                    bool x_44964;
                    int32_t x_44965;
                    float x_44966;
                    bool x_44967;
                    int32_t x_44968;
                    float x_44969;
                    
                    offset_44987 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44941,
                                  sext_i64_i32(segred_group_sizze_37112))) {
                            x_44964 = ((__local
                                        bool *) red_arr_mem_44945)[sext_i32_i64(local_tid_44941 +
                                                                   offset_44987)];
                            x_44965 = ((__local
                                        int32_t *) red_arr_mem_44947)[sext_i32_i64(local_tid_44941 +
                                                                      offset_44987)];
                            x_44966 = ((__local
                                        float *) red_arr_mem_44949)[sext_i32_i64(local_tid_44941 +
                                                                    offset_44987)];
                        }
                    }
                    offset_44987 = 1;
                    while (slt32(offset_44987, wave_sizze_44943)) {
                        if (slt32(local_tid_44941 + offset_44987,
                                  sext_i64_i32(segred_group_sizze_37112)) &&
                            ((local_tid_44941 - squot32(local_tid_44941,
                                                        wave_sizze_44943) *
                              wave_sizze_44943) & (2 * offset_44987 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44967 = ((volatile __local
                                            bool *) red_arr_mem_44945)[sext_i32_i64(local_tid_44941 +
                                                                       offset_44987)];
                                x_44968 = ((volatile __local
                                            int32_t *) red_arr_mem_44947)[sext_i32_i64(local_tid_44941 +
                                                                          offset_44987)];
                                x_44969 = ((volatile __local
                                            float *) red_arr_mem_44949)[sext_i32_i64(local_tid_44941 +
                                                                        offset_44987)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_44970;
                                int32_t defunc_1_op_res_44971;
                                
                                if (x_44964) {
                                    defunc_1_op_res_44970 = x_44964;
                                    defunc_1_op_res_44971 = x_44965;
                                } else {
                                    bool x_44972 = x_44967 && x_44967;
                                    bool x_44973 = !x_44967;
                                    bool y_44974 = x_44964 && x_44973;
                                    bool defunc_1_op_res_f_res_44975 =
                                         x_44972 || y_44974;
                                    int32_t defunc_1_op_res_f_res_44976;
                                    
                                    if (x_44967) {
                                        defunc_1_op_res_f_res_44976 = x_44968;
                                    } else {
                                        defunc_1_op_res_f_res_44976 = x_44965;
                                    }
                                    defunc_1_op_res_44970 =
                                        defunc_1_op_res_f_res_44975;
                                    defunc_1_op_res_44971 =
                                        defunc_1_op_res_f_res_44976;
                                }
                                
                                float defunc_1_op_res_44977 = x_44966 + x_44969;
                                
                                x_44964 = defunc_1_op_res_44970;
                                x_44965 = defunc_1_op_res_44971;
                                x_44966 = defunc_1_op_res_44977;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_44945)[sext_i32_i64(local_tid_44941)] =
                                    x_44964;
                                ((volatile __local
                                  int32_t *) red_arr_mem_44947)[sext_i32_i64(local_tid_44941)] =
                                    x_44965;
                                ((volatile __local
                                  float *) red_arr_mem_44949)[sext_i32_i64(local_tid_44941)] =
                                    x_44966;
                            }
                        }
                        offset_44987 *= 2;
                    }
                    while (slt32(skip_waves_44988,
                                 squot32(sext_i64_i32(segred_group_sizze_37112) +
                                         wave_sizze_44943 - 1,
                                         wave_sizze_44943))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44987 = skip_waves_44988 * wave_sizze_44943;
                        if (slt32(local_tid_44941 + offset_44987,
                                  sext_i64_i32(segred_group_sizze_37112)) &&
                            ((local_tid_44941 - squot32(local_tid_44941,
                                                        wave_sizze_44943) *
                              wave_sizze_44943) == 0 &&
                             (squot32(local_tid_44941, wave_sizze_44943) & (2 *
                                                                            skip_waves_44988 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44967 = ((__local
                                            bool *) red_arr_mem_44945)[sext_i32_i64(local_tid_44941 +
                                                                       offset_44987)];
                                x_44968 = ((__local
                                            int32_t *) red_arr_mem_44947)[sext_i32_i64(local_tid_44941 +
                                                                          offset_44987)];
                                x_44969 = ((__local
                                            float *) red_arr_mem_44949)[sext_i32_i64(local_tid_44941 +
                                                                        offset_44987)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_44970;
                                int32_t defunc_1_op_res_44971;
                                
                                if (x_44964) {
                                    defunc_1_op_res_44970 = x_44964;
                                    defunc_1_op_res_44971 = x_44965;
                                } else {
                                    bool x_44972 = x_44967 && x_44967;
                                    bool x_44973 = !x_44967;
                                    bool y_44974 = x_44964 && x_44973;
                                    bool defunc_1_op_res_f_res_44975 =
                                         x_44972 || y_44974;
                                    int32_t defunc_1_op_res_f_res_44976;
                                    
                                    if (x_44967) {
                                        defunc_1_op_res_f_res_44976 = x_44968;
                                    } else {
                                        defunc_1_op_res_f_res_44976 = x_44965;
                                    }
                                    defunc_1_op_res_44970 =
                                        defunc_1_op_res_f_res_44975;
                                    defunc_1_op_res_44971 =
                                        defunc_1_op_res_f_res_44976;
                                }
                                
                                float defunc_1_op_res_44977 = x_44966 + x_44969;
                                
                                x_44964 = defunc_1_op_res_44970;
                                x_44965 = defunc_1_op_res_44971;
                                x_44966 = defunc_1_op_res_44977;
                            }
                            // write result of operation
                            {
                                ((__local
                                  bool *) red_arr_mem_44945)[sext_i32_i64(local_tid_44941)] =
                                    x_44964;
                                ((__local
                                  int32_t *) red_arr_mem_44947)[sext_i32_i64(local_tid_44941)] =
                                    x_44965;
                                ((__local
                                  float *) red_arr_mem_44949)[sext_i32_i64(local_tid_44941)] =
                                    x_44966;
                            }
                        }
                        skip_waves_44988 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44941 == 0) {
                            ((__global bool *) mem_43524)[gtid_36933] = x_44964;
                            ((__global int32_t *) mem_43526)[gtid_36933] =
                                x_44965;
                            ((__global float *) mem_43528)[gtid_36933] =
                                x_44966;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_37112
}
__kernel void mainMagnitudezisegred_nonseg_35801(__global int *global_failure,
                                                 __local volatile
                                                 int64_t *red_arr_mem_44684_backing_aligned_0,
                                                 __local volatile
                                                 int64_t *sync_arr_mem_44682_backing_aligned_1,
                                                 int64_t m_28044,
                                                 int64_t num_groups_35796,
                                                 int64_t num_threads_44676,
                                                 __global
                                                 unsigned char *defunc_3_map_res_mem_43422,
                                                 __global
                                                 unsigned char *mem_43427,
                                                 __global
                                                 unsigned char *mainMagnitudezicounter_mem_44672,
                                                 __global
                                                 unsigned char *group_res_arr_mem_44674)
{
    #define segred_group_sizze_35794 (mainMagnitudezisegred_group_sizze_35793)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44684_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44684_backing_aligned_0;
    __local volatile char *restrict sync_arr_mem_44682_backing_0 =
                          (__local volatile
                           char *) sync_arr_mem_44682_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44677;
    int32_t local_tid_44678;
    int64_t group_sizze_44681;
    int32_t wave_sizze_44680;
    int32_t group_tid_44679;
    
    global_tid_44677 = get_global_id(0);
    local_tid_44678 = get_local_id(0);
    group_sizze_44681 = get_local_size(0);
    wave_sizze_44680 = LOCKSTEP_WIDTH;
    group_tid_44679 = get_group_id(0);
    
    int32_t phys_tid_35801;
    
    phys_tid_35801 = global_tid_44677;
    
    __local char *sync_arr_mem_44682;
    
    sync_arr_mem_44682 = (__local char *) sync_arr_mem_44682_backing_0;
    
    __local char *red_arr_mem_44684;
    
    red_arr_mem_44684 = (__local char *) red_arr_mem_44684_backing_1;
    
    int64_t dummy_35799;
    
    dummy_35799 = (int64_t) 0;
    
    int64_t gtid_35800;
    
    gtid_35800 = (int64_t) 0;
    
    int32_t x_acc_44686;
    int64_t chunk_sizze_44687;
    
    chunk_sizze_44687 = smin64(sdiv_up64(m_28044,
                                         sext_i32_i64(sext_i64_i32(segred_group_sizze_35794 *
                                         num_groups_35796))),
                               sdiv_up64(m_28044 - sext_i32_i64(phys_tid_35801),
                                         num_threads_44676));
    
    int32_t x_28410;
    int32_t x_28411;
    
    // neutral-initialise the accumulators
    {
        x_acc_44686 = 0;
    }
    for (int64_t i_44691 = 0; i_44691 < chunk_sizze_44687; i_44691++) {
        gtid_35800 = sext_i32_i64(phys_tid_35801) + num_threads_44676 * i_44691;
        // apply map function
        {
            int32_t x_28413 = ((__global
                                int32_t *) defunc_3_map_res_mem_43422)[gtid_35800];
            
            // save map-out results
            { }
            // load accumulator
            {
                x_28410 = x_acc_44686;
            }
            // load new values
            {
                x_28411 = x_28413;
            }
            // apply reduction operator
            {
                int32_t defunc_1_op_res_28412 = smax32(x_28410, x_28411);
                
                // store in accumulator
                {
                    x_acc_44686 = defunc_1_op_res_28412;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_28410 = x_acc_44686;
        ((__local int32_t *) red_arr_mem_44684)[sext_i32_i64(local_tid_44678)] =
            x_28410;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44692;
    int32_t skip_waves_44693;
    
    skip_waves_44693 = 1;
    
    int32_t x_44688;
    int32_t x_44689;
    
    offset_44692 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44678, sext_i64_i32(segred_group_sizze_35794))) {
            x_44688 = ((__local
                        int32_t *) red_arr_mem_44684)[sext_i32_i64(local_tid_44678 +
                                                      offset_44692)];
        }
    }
    offset_44692 = 1;
    while (slt32(offset_44692, wave_sizze_44680)) {
        if (slt32(local_tid_44678 + offset_44692,
                  sext_i64_i32(segred_group_sizze_35794)) && ((local_tid_44678 -
                                                               squot32(local_tid_44678,
                                                                       wave_sizze_44680) *
                                                               wave_sizze_44680) &
                                                              (2 *
                                                               offset_44692 -
                                                               1)) == 0) {
            // read array element
            {
                x_44689 = ((volatile __local
                            int32_t *) red_arr_mem_44684)[sext_i32_i64(local_tid_44678 +
                                                          offset_44692)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_44690 = smax32(x_44688, x_44689);
                
                x_44688 = defunc_1_op_res_44690;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_44684)[sext_i32_i64(local_tid_44678)] =
                    x_44688;
            }
        }
        offset_44692 *= 2;
    }
    while (slt32(skip_waves_44693,
                 squot32(sext_i64_i32(segred_group_sizze_35794) +
                         wave_sizze_44680 - 1, wave_sizze_44680))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44692 = skip_waves_44693 * wave_sizze_44680;
        if (slt32(local_tid_44678 + offset_44692,
                  sext_i64_i32(segred_group_sizze_35794)) && ((local_tid_44678 -
                                                               squot32(local_tid_44678,
                                                                       wave_sizze_44680) *
                                                               wave_sizze_44680) ==
                                                              0 &&
                                                              (squot32(local_tid_44678,
                                                                       wave_sizze_44680) &
                                                               (2 *
                                                                skip_waves_44693 -
                                                                1)) == 0)) {
            // read array element
            {
                x_44689 = ((__local
                            int32_t *) red_arr_mem_44684)[sext_i32_i64(local_tid_44678 +
                                                          offset_44692)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_44690 = smax32(x_44688, x_44689);
                
                x_44688 = defunc_1_op_res_44690;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_44684)[sext_i32_i64(local_tid_44678)] =
                    x_44688;
            }
        }
        skip_waves_44693 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_44678) == (int64_t) 0) {
            x_acc_44686 = x_44688;
        }
    }
    
    int32_t old_counter_44694;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_44678 == 0) {
            ((__global
              int32_t *) group_res_arr_mem_44674)[sext_i32_i64(group_tid_44679) *
                                                  segred_group_sizze_35794] =
                x_acc_44686;
            mem_fence_global();
            old_counter_44694 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainMagnitudezicounter_mem_44672)[(int64_t) 0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_44682)[(int64_t) 0] =
                old_counter_44694 == num_groups_35796 - (int64_t) 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_44695;
    
    is_last_group_44695 = ((__local bool *) sync_arr_mem_44682)[(int64_t) 0];
    if (is_last_group_44695) {
        if (local_tid_44678 == 0) {
            old_counter_44694 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainMagnitudezicounter_mem_44672)[(int64_t) 0],
                                                      (int) ((int64_t) 0 -
                                                             num_groups_35796));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_44696 = sdiv_up64(num_groups_35796,
                                                      segred_group_sizze_35794);
            
            x_28410 = 0;
            for (int64_t i_44697 = 0; i_44697 < read_per_thread_44696;
                 i_44697++) {
                int64_t group_res_id_44698 = sext_i32_i64(local_tid_44678) *
                        read_per_thread_44696 + i_44697;
                int64_t index_of_group_res_44699 = group_res_id_44698;
                
                if (slt64(group_res_id_44698, num_groups_35796)) {
                    x_28411 = ((__global
                                int32_t *) group_res_arr_mem_44674)[index_of_group_res_44699 *
                                                                    segred_group_sizze_35794];
                    
                    int32_t defunc_1_op_res_28412;
                    
                    defunc_1_op_res_28412 = smax32(x_28410, x_28411);
                    x_28410 = defunc_1_op_res_28412;
                }
            }
        }
        ((__local int32_t *) red_arr_mem_44684)[sext_i32_i64(local_tid_44678)] =
            x_28410;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_44700;
            int32_t skip_waves_44701;
            
            skip_waves_44701 = 1;
            
            int32_t x_44688;
            int32_t x_44689;
            
            offset_44700 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_44678,
                          sext_i64_i32(segred_group_sizze_35794))) {
                    x_44688 = ((__local
                                int32_t *) red_arr_mem_44684)[sext_i32_i64(local_tid_44678 +
                                                              offset_44700)];
                }
            }
            offset_44700 = 1;
            while (slt32(offset_44700, wave_sizze_44680)) {
                if (slt32(local_tid_44678 + offset_44700,
                          sext_i64_i32(segred_group_sizze_35794)) &&
                    ((local_tid_44678 - squot32(local_tid_44678,
                                                wave_sizze_44680) *
                      wave_sizze_44680) & (2 * offset_44700 - 1)) == 0) {
                    // read array element
                    {
                        x_44689 = ((volatile __local
                                    int32_t *) red_arr_mem_44684)[sext_i32_i64(local_tid_44678 +
                                                                  offset_44700)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_44690 = smax32(x_44688,
                                                               x_44689);
                        
                        x_44688 = defunc_1_op_res_44690;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          int32_t *) red_arr_mem_44684)[sext_i32_i64(local_tid_44678)] =
                            x_44688;
                    }
                }
                offset_44700 *= 2;
            }
            while (slt32(skip_waves_44701,
                         squot32(sext_i64_i32(segred_group_sizze_35794) +
                                 wave_sizze_44680 - 1, wave_sizze_44680))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_44700 = skip_waves_44701 * wave_sizze_44680;
                if (slt32(local_tid_44678 + offset_44700,
                          sext_i64_i32(segred_group_sizze_35794)) &&
                    ((local_tid_44678 - squot32(local_tid_44678,
                                                wave_sizze_44680) *
                      wave_sizze_44680) == 0 && (squot32(local_tid_44678,
                                                         wave_sizze_44680) &
                                                 (2 * skip_waves_44701 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_44689 = ((__local
                                    int32_t *) red_arr_mem_44684)[sext_i32_i64(local_tid_44678 +
                                                                  offset_44700)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_44690 = smax32(x_44688,
                                                               x_44689);
                        
                        x_44688 = defunc_1_op_res_44690;
                    }
                    // write result of operation
                    {
                        ((__local
                          int32_t *) red_arr_mem_44684)[sext_i32_i64(local_tid_44678)] =
                            x_44688;
                    }
                }
                skip_waves_44701 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_44678 == 0) {
                    ((__global int32_t *) mem_43427)[(int64_t) 0] = x_44688;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35794
}
__kernel void mainMagnitudezisegred_small_33831(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_43942_backing_aligned_0,
                                                int64_t N_28043,
                                                int64_t m_28044,
                                                int64_t i32_res_28053,
                                                int64_t i32_res_28059,
                                                int64_t num_groups_33970,
                                                int64_t segment_sizze_nonzzero_43935,
                                                __global
                                                unsigned char *images_mem_42559,
                                                __global
                                                unsigned char *binop_p_mem_42568,
                                                __global
                                                unsigned char *mem_42709,
                                                __global
                                                unsigned char *mem_42714)
{
    #define segred_group_sizze_33969 (mainMagnitudezisegred_group_sizze_33825)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_43942_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_43942_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_43937;
    int32_t local_tid_43938;
    int64_t group_sizze_43941;
    int32_t wave_sizze_43940;
    int32_t group_tid_43939;
    
    global_tid_43937 = get_global_id(0);
    local_tid_43938 = get_local_id(0);
    group_sizze_43941 = get_local_size(0);
    wave_sizze_43940 = LOCKSTEP_WIDTH;
    group_tid_43939 = get_group_id(0);
    
    int32_t phys_tid_33831;
    
    phys_tid_33831 = global_tid_43937;
    
    __local char *red_arr_mem_43942;
    
    red_arr_mem_43942 = (__local char *) red_arr_mem_43942_backing_0;
    
    int32_t phys_group_id_43944;
    
    phys_group_id_43944 = get_group_id(0);
    for (int32_t i_43945 = 0; i_43945 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28044 * i32_res_28059 *
                                          i32_res_28059,
                                          squot64(segred_group_sizze_33969,
                                                  segment_sizze_nonzzero_43935))) -
                   phys_group_id_43944, sext_i64_i32(num_groups_33970));
         i_43945++) {
        int32_t virt_group_id_43946 = phys_group_id_43944 + i_43945 *
                sext_i64_i32(num_groups_33970);
        int64_t gtid_33818 = squot64(squot64(sext_i32_i64(local_tid_43938),
                                             segment_sizze_nonzzero_43935) +
                                     sext_i32_i64(virt_group_id_43946) *
                                     squot64(segred_group_sizze_33969,
                                             segment_sizze_nonzzero_43935),
                                     i32_res_28059 * i32_res_28059);
        int64_t gtid_33819 = squot64(squot64(sext_i32_i64(local_tid_43938),
                                             segment_sizze_nonzzero_43935) +
                                     sext_i32_i64(virt_group_id_43946) *
                                     squot64(segred_group_sizze_33969,
                                             segment_sizze_nonzzero_43935) -
                                     squot64(squot64(sext_i32_i64(local_tid_43938),
                                                     segment_sizze_nonzzero_43935) +
                                             sext_i32_i64(virt_group_id_43946) *
                                             squot64(segred_group_sizze_33969,
                                                     segment_sizze_nonzzero_43935),
                                             i32_res_28059 * i32_res_28059) *
                                     (i32_res_28059 * i32_res_28059),
                                     i32_res_28059);
        int64_t gtid_33820 = squot64(sext_i32_i64(local_tid_43938),
                                     segment_sizze_nonzzero_43935) +
                sext_i32_i64(virt_group_id_43946) *
                squot64(segred_group_sizze_33969,
                        segment_sizze_nonzzero_43935) -
                squot64(squot64(sext_i32_i64(local_tid_43938),
                                segment_sizze_nonzzero_43935) +
                        sext_i32_i64(virt_group_id_43946) *
                        squot64(segred_group_sizze_33969,
                                segment_sizze_nonzzero_43935), i32_res_28059 *
                        i32_res_28059) * (i32_res_28059 * i32_res_28059) -
                squot64(squot64(sext_i32_i64(local_tid_43938),
                                segment_sizze_nonzzero_43935) +
                        sext_i32_i64(virt_group_id_43946) *
                        squot64(segred_group_sizze_33969,
                                segment_sizze_nonzzero_43935) -
                        squot64(squot64(sext_i32_i64(local_tid_43938),
                                        segment_sizze_nonzzero_43935) +
                                sext_i32_i64(virt_group_id_43946) *
                                squot64(segred_group_sizze_33969,
                                        segment_sizze_nonzzero_43935),
                                i32_res_28059 * i32_res_28059) *
                        (i32_res_28059 * i32_res_28059), i32_res_28059) *
                i32_res_28059;
        int64_t gtid_33830 = srem64(sext_i32_i64(local_tid_43938),
                                    i32_res_28053);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28053) && (((slt64(gtid_33818,
                                                              m_28044) &&
                                                        slt64(gtid_33819,
                                                              i32_res_28059)) &&
                                                       slt64(gtid_33820,
                                                             i32_res_28059)) &&
                                                      slt64(sext_i32_i64(local_tid_43938),
                                                            i32_res_28053 *
                                                            squot64(segred_group_sizze_33969,
                                                                    segment_sizze_nonzzero_43935)))) {
                float x_33979 = ((__global
                                  float *) images_mem_42559)[gtid_33818 *
                                                             N_28043 +
                                                             gtid_33830];
                float x_33980 = ((__global
                                  float *) binop_p_mem_42568)[gtid_33819 *
                                                              N_28043 +
                                                              gtid_33830];
                float x_33981 = ((__global float *) mem_42709)[gtid_33820 *
                                                               N_28043 +
                                                               gtid_33830];
                float x_33982 = x_33980 * x_33981;
                bool isnan_res_33983;
                
                isnan_res_33983 = futrts_isnan32(x_33979);
                
                float y_33984;
                
                if (isnan_res_33983) {
                    y_33984 = 0.0F;
                } else {
                    y_33984 = 1.0F;
                }
                
                float defunc_2_f_res_33985 = x_33982 * y_33984;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_43942)[sext_i32_i64(local_tid_43938)] =
                        defunc_2_f_res_33985;
                }
            } else {
                ((__local
                  float *) red_arr_mem_43942)[sext_i32_i64(local_tid_43938)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28053)) {
            // perform segmented scan to imitate reduction
            {
                float x_33973;
                float x_33974;
                float x_43947;
                float x_43948;
                bool ltid_in_bounds_43950;
                
                ltid_in_bounds_43950 = slt64(sext_i32_i64(local_tid_43938),
                                             i32_res_28053 *
                                             squot64(segred_group_sizze_33969,
                                                     segment_sizze_nonzzero_43935));
                
                int32_t skip_threads_43951;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_43950) {
                        x_33974 = ((volatile __local
                                    float *) red_arr_mem_43942)[sext_i32_i64(local_tid_43938)];
                        if ((local_tid_43938 - squot32(local_tid_43938, 32) *
                             32) == 0) {
                            x_33973 = x_33974;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_43951 = 1;
                    while (slt32(skip_threads_43951, 32)) {
                        if (sle32(skip_threads_43951, local_tid_43938 -
                                  squot32(local_tid_43938, 32) * 32) &&
                            ltid_in_bounds_43950) {
                            // read operands
                            {
                                x_33973 = ((volatile __local
                                            float *) red_arr_mem_43942)[sext_i32_i64(local_tid_43938) -
                                                                        sext_i32_i64(skip_threads_43951)];
                            }
                            // perform operation
                            {
                                bool inactive_43952 =
                                     slt64(srem64(sext_i32_i64(local_tid_43938),
                                                  i32_res_28053),
                                           sext_i32_i64(local_tid_43938) -
                                           sext_i32_i64(local_tid_43938 -
                                           skip_threads_43951));
                                
                                if (inactive_43952) {
                                    x_33973 = x_33974;
                                }
                                if (!inactive_43952) {
                                    float defunc_1_op_res_33975 = x_33973 +
                                          x_33974;
                                    
                                    x_33973 = defunc_1_op_res_33975;
                                }
                            }
                        }
                        if (sle32(wave_sizze_43940, skip_threads_43951)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_43951, local_tid_43938 -
                                  squot32(local_tid_43938, 32) * 32) &&
                            ltid_in_bounds_43950) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_43942)[sext_i32_i64(local_tid_43938)] =
                                    x_33973;
                                x_33974 = x_33973;
                            }
                        }
                        if (sle32(wave_sizze_43940, skip_threads_43951)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_43951 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_43938 - squot32(local_tid_43938, 32) * 32) ==
                        31 && ltid_in_bounds_43950) {
                        ((volatile __local
                          float *) red_arr_mem_43942)[sext_i32_i64(squot32(local_tid_43938,
                                                                           32))] =
                            x_33973;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_43953;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_43938, 32) == 0 &&
                            ltid_in_bounds_43950) {
                            x_43948 = ((volatile __local
                                        float *) red_arr_mem_43942)[sext_i32_i64(local_tid_43938)];
                            if ((local_tid_43938 - squot32(local_tid_43938,
                                                           32) * 32) == 0) {
                                x_43947 = x_43948;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_43953 = 1;
                        while (slt32(skip_threads_43953, 32)) {
                            if (sle32(skip_threads_43953, local_tid_43938 -
                                      squot32(local_tid_43938, 32) * 32) &&
                                (squot32(local_tid_43938, 32) == 0 &&
                                 ltid_in_bounds_43950)) {
                                // read operands
                                {
                                    x_43947 = ((volatile __local
                                                float *) red_arr_mem_43942)[sext_i32_i64(local_tid_43938) -
                                                                            sext_i32_i64(skip_threads_43953)];
                                }
                                // perform operation
                                {
                                    bool inactive_43954 =
                                         slt64(srem64(sext_i32_i64(local_tid_43938 *
                                                      32 + 32 - 1),
                                                      i32_res_28053),
                                               sext_i32_i64(local_tid_43938 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_43938 -
                                                             skip_threads_43953) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_43954) {
                                        x_43947 = x_43948;
                                    }
                                    if (!inactive_43954) {
                                        float defunc_1_op_res_43949 = x_43947 +
                                              x_43948;
                                        
                                        x_43947 = defunc_1_op_res_43949;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_43940, skip_threads_43953)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_43953, local_tid_43938 -
                                      squot32(local_tid_43938, 32) * 32) &&
                                (squot32(local_tid_43938, 32) == 0 &&
                                 ltid_in_bounds_43950)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_43942)[sext_i32_i64(local_tid_43938)] =
                                        x_43947;
                                    x_43948 = x_43947;
                                }
                            }
                            if (sle32(wave_sizze_43940, skip_threads_43953)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_43953 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_43938, 32) == 0 ||
                          !ltid_in_bounds_43950)) {
                        // read operands
                        {
                            x_33974 = x_33973;
                            x_33973 = ((__local
                                        float *) red_arr_mem_43942)[sext_i32_i64(squot32(local_tid_43938,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_43955 =
                                 slt64(srem64(sext_i32_i64(local_tid_43938),
                                              i32_res_28053),
                                       sext_i32_i64(local_tid_43938) -
                                       sext_i32_i64(squot32(local_tid_43938,
                                                            32) * 32 - 1));
                            
                            if (inactive_43955) {
                                x_33973 = x_33974;
                            }
                            if (!inactive_43955) {
                                float defunc_1_op_res_33975 = x_33973 + x_33974;
                                
                                x_33973 = defunc_1_op_res_33975;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_43942)[sext_i32_i64(local_tid_43938)] =
                                x_33973;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_43938, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_43942)[sext_i32_i64(local_tid_43938)] =
                            x_33974;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_43946) *
                      squot64(segred_group_sizze_33969,
                              segment_sizze_nonzzero_43935) +
                      sext_i32_i64(local_tid_43938), m_28044 * i32_res_28059 *
                      i32_res_28059) && slt64(sext_i32_i64(local_tid_43938),
                                              squot64(segred_group_sizze_33969,
                                                      segment_sizze_nonzzero_43935))) {
                ((__global
                  float *) mem_42714)[squot64(sext_i32_i64(virt_group_id_43946) *
                                              squot64(segred_group_sizze_33969,
                                                      segment_sizze_nonzzero_43935) +
                                              sext_i32_i64(local_tid_43938),
                                              i32_res_28059 * i32_res_28059) *
                                      (i32_res_28059 * i32_res_28059) +
                                      squot64(sext_i32_i64(virt_group_id_43946) *
                                              squot64(segred_group_sizze_33969,
                                                      segment_sizze_nonzzero_43935) +
                                              sext_i32_i64(local_tid_43938) -
                                              squot64(sext_i32_i64(virt_group_id_43946) *
                                                      squot64(segred_group_sizze_33969,
                                                              segment_sizze_nonzzero_43935) +
                                                      sext_i32_i64(local_tid_43938),
                                                      i32_res_28059 *
                                                      i32_res_28059) *
                                              (i32_res_28059 * i32_res_28059),
                                              i32_res_28059) * i32_res_28059 +
                                      (sext_i32_i64(virt_group_id_43946) *
                                       squot64(segred_group_sizze_33969,
                                               segment_sizze_nonzzero_43935) +
                                       sext_i32_i64(local_tid_43938) -
                                       squot64(sext_i32_i64(virt_group_id_43946) *
                                               squot64(segred_group_sizze_33969,
                                                       segment_sizze_nonzzero_43935) +
                                               sext_i32_i64(local_tid_43938),
                                               i32_res_28059 * i32_res_28059) *
                                       (i32_res_28059 * i32_res_28059) -
                                       squot64(sext_i32_i64(virt_group_id_43946) *
                                               squot64(segred_group_sizze_33969,
                                                       segment_sizze_nonzzero_43935) +
                                               sext_i32_i64(local_tid_43938) -
                                               squot64(sext_i32_i64(virt_group_id_43946) *
                                                       squot64(segred_group_sizze_33969,
                                                               segment_sizze_nonzzero_43935) +
                                                       sext_i32_i64(local_tid_43938),
                                                       i32_res_28059 *
                                                       i32_res_28059) *
                                               (i32_res_28059 * i32_res_28059),
                                               i32_res_28059) *
                                       i32_res_28059)] = ((__local
                                                           float *) red_arr_mem_43942)[(sext_i32_i64(local_tid_43938) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_43935 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33969
}
__kernel void mainMagnitudezisegred_small_34878(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44139_backing_aligned_0,
                                                int64_t N_28043,
                                                int64_t m_28044,
                                                int64_t i32_res_28053,
                                                int64_t i32_res_28059,
                                                int64_t num_groups_34931,
                                                int64_t segment_sizze_nonzzero_44132,
                                                __global
                                                unsigned char *images_mem_42559,
                                                __global
                                                unsigned char *binop_p_mem_42568,
                                                __global
                                                unsigned char *mem_43022)
{
    #define segred_group_sizze_34930 (mainMagnitudezisegred_group_sizze_34872)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44139_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44139_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44134;
    int32_t local_tid_44135;
    int64_t group_sizze_44138;
    int32_t wave_sizze_44137;
    int32_t group_tid_44136;
    
    global_tid_44134 = get_global_id(0);
    local_tid_44135 = get_local_id(0);
    group_sizze_44138 = get_local_size(0);
    wave_sizze_44137 = LOCKSTEP_WIDTH;
    group_tid_44136 = get_group_id(0);
    
    int32_t phys_tid_34878;
    
    phys_tid_34878 = global_tid_44134;
    
    __local char *red_arr_mem_44139;
    
    red_arr_mem_44139 = (__local char *) red_arr_mem_44139_backing_0;
    
    int32_t phys_group_id_44141;
    
    phys_group_id_44141 = get_group_id(0);
    for (int32_t i_44142 = 0; i_44142 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28044 * i32_res_28059,
                                          squot64(segred_group_sizze_34930,
                                                  segment_sizze_nonzzero_44132))) -
                   phys_group_id_44141, sext_i64_i32(num_groups_34931));
         i_44142++) {
        int32_t virt_group_id_44143 = phys_group_id_44141 + i_44142 *
                sext_i64_i32(num_groups_34931);
        int64_t gtid_34867 = squot64(squot64(sext_i32_i64(local_tid_44135),
                                             segment_sizze_nonzzero_44132) +
                                     sext_i32_i64(virt_group_id_44143) *
                                     squot64(segred_group_sizze_34930,
                                             segment_sizze_nonzzero_44132),
                                     i32_res_28059);
        int64_t gtid_34868 = squot64(sext_i32_i64(local_tid_44135),
                                     segment_sizze_nonzzero_44132) +
                sext_i32_i64(virt_group_id_44143) *
                squot64(segred_group_sizze_34930,
                        segment_sizze_nonzzero_44132) -
                squot64(squot64(sext_i32_i64(local_tid_44135),
                                segment_sizze_nonzzero_44132) +
                        sext_i32_i64(virt_group_id_44143) *
                        squot64(segred_group_sizze_34930,
                                segment_sizze_nonzzero_44132), i32_res_28059) *
                i32_res_28059;
        int64_t gtid_34877 = srem64(sext_i32_i64(local_tid_44135),
                                    i32_res_28053);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28053) && ((slt64(gtid_34867,
                                                             m_28044) &&
                                                       slt64(gtid_34868,
                                                             i32_res_28059)) &&
                                                      slt64(sext_i32_i64(local_tid_44135),
                                                            i32_res_28053 *
                                                            squot64(segred_group_sizze_34930,
                                                                    segment_sizze_nonzzero_44132)))) {
                float x_34940 = ((__global
                                  float *) images_mem_42559)[gtid_34867 *
                                                             N_28043 +
                                                             gtid_34877];
                bool isnan_res_34941;
                
                isnan_res_34941 = futrts_isnan32(x_34940);
                
                float defunc_1_f_res_34942;
                
                if (isnan_res_34941) {
                    defunc_1_f_res_34942 = 0.0F;
                } else {
                    float x_34939 = ((__global
                                      float *) binop_p_mem_42568)[gtid_34868 *
                                                                  N_28043 +
                                                                  gtid_34877];
                    float defunc_1_f_res_f_res_34943 = x_34939 * x_34940;
                    
                    defunc_1_f_res_34942 = defunc_1_f_res_f_res_34943;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44139)[sext_i32_i64(local_tid_44135)] =
                        defunc_1_f_res_34942;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44139)[sext_i32_i64(local_tid_44135)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28053)) {
            // perform segmented scan to imitate reduction
            {
                float x_34934;
                float x_34935;
                float x_44144;
                float x_44145;
                bool ltid_in_bounds_44147;
                
                ltid_in_bounds_44147 = slt64(sext_i32_i64(local_tid_44135),
                                             i32_res_28053 *
                                             squot64(segred_group_sizze_34930,
                                                     segment_sizze_nonzzero_44132));
                
                int32_t skip_threads_44148;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44147) {
                        x_34935 = ((volatile __local
                                    float *) red_arr_mem_44139)[sext_i32_i64(local_tid_44135)];
                        if ((local_tid_44135 - squot32(local_tid_44135, 32) *
                             32) == 0) {
                            x_34934 = x_34935;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44148 = 1;
                    while (slt32(skip_threads_44148, 32)) {
                        if (sle32(skip_threads_44148, local_tid_44135 -
                                  squot32(local_tid_44135, 32) * 32) &&
                            ltid_in_bounds_44147) {
                            // read operands
                            {
                                x_34934 = ((volatile __local
                                            float *) red_arr_mem_44139)[sext_i32_i64(local_tid_44135) -
                                                                        sext_i32_i64(skip_threads_44148)];
                            }
                            // perform operation
                            {
                                bool inactive_44149 =
                                     slt64(srem64(sext_i32_i64(local_tid_44135),
                                                  i32_res_28053),
                                           sext_i32_i64(local_tid_44135) -
                                           sext_i32_i64(local_tid_44135 -
                                           skip_threads_44148));
                                
                                if (inactive_44149) {
                                    x_34934 = x_34935;
                                }
                                if (!inactive_44149) {
                                    float defunc_1_op_res_34936 = x_34934 +
                                          x_34935;
                                    
                                    x_34934 = defunc_1_op_res_34936;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44137, skip_threads_44148)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44148, local_tid_44135 -
                                  squot32(local_tid_44135, 32) * 32) &&
                            ltid_in_bounds_44147) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44139)[sext_i32_i64(local_tid_44135)] =
                                    x_34934;
                                x_34935 = x_34934;
                            }
                        }
                        if (sle32(wave_sizze_44137, skip_threads_44148)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44148 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44135 - squot32(local_tid_44135, 32) * 32) ==
                        31 && ltid_in_bounds_44147) {
                        ((volatile __local
                          float *) red_arr_mem_44139)[sext_i32_i64(squot32(local_tid_44135,
                                                                           32))] =
                            x_34934;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44150;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44135, 32) == 0 &&
                            ltid_in_bounds_44147) {
                            x_44145 = ((volatile __local
                                        float *) red_arr_mem_44139)[sext_i32_i64(local_tid_44135)];
                            if ((local_tid_44135 - squot32(local_tid_44135,
                                                           32) * 32) == 0) {
                                x_44144 = x_44145;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44150 = 1;
                        while (slt32(skip_threads_44150, 32)) {
                            if (sle32(skip_threads_44150, local_tid_44135 -
                                      squot32(local_tid_44135, 32) * 32) &&
                                (squot32(local_tid_44135, 32) == 0 &&
                                 ltid_in_bounds_44147)) {
                                // read operands
                                {
                                    x_44144 = ((volatile __local
                                                float *) red_arr_mem_44139)[sext_i32_i64(local_tid_44135) -
                                                                            sext_i32_i64(skip_threads_44150)];
                                }
                                // perform operation
                                {
                                    bool inactive_44151 =
                                         slt64(srem64(sext_i32_i64(local_tid_44135 *
                                                      32 + 32 - 1),
                                                      i32_res_28053),
                                               sext_i32_i64(local_tid_44135 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44135 -
                                                             skip_threads_44150) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44151) {
                                        x_44144 = x_44145;
                                    }
                                    if (!inactive_44151) {
                                        float defunc_1_op_res_44146 = x_44144 +
                                              x_44145;
                                        
                                        x_44144 = defunc_1_op_res_44146;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44137, skip_threads_44150)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44150, local_tid_44135 -
                                      squot32(local_tid_44135, 32) * 32) &&
                                (squot32(local_tid_44135, 32) == 0 &&
                                 ltid_in_bounds_44147)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44139)[sext_i32_i64(local_tid_44135)] =
                                        x_44144;
                                    x_44145 = x_44144;
                                }
                            }
                            if (sle32(wave_sizze_44137, skip_threads_44150)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44150 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44135, 32) == 0 ||
                          !ltid_in_bounds_44147)) {
                        // read operands
                        {
                            x_34935 = x_34934;
                            x_34934 = ((__local
                                        float *) red_arr_mem_44139)[sext_i32_i64(squot32(local_tid_44135,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44152 =
                                 slt64(srem64(sext_i32_i64(local_tid_44135),
                                              i32_res_28053),
                                       sext_i32_i64(local_tid_44135) -
                                       sext_i32_i64(squot32(local_tid_44135,
                                                            32) * 32 - 1));
                            
                            if (inactive_44152) {
                                x_34934 = x_34935;
                            }
                            if (!inactive_44152) {
                                float defunc_1_op_res_34936 = x_34934 + x_34935;
                                
                                x_34934 = defunc_1_op_res_34936;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44139)[sext_i32_i64(local_tid_44135)] =
                                x_34934;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44135, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44139)[sext_i32_i64(local_tid_44135)] =
                            x_34935;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44143) *
                      squot64(segred_group_sizze_34930,
                              segment_sizze_nonzzero_44132) +
                      sext_i32_i64(local_tid_44135), m_28044 * i32_res_28059) &&
                slt64(sext_i32_i64(local_tid_44135),
                      squot64(segred_group_sizze_34930,
                              segment_sizze_nonzzero_44132))) {
                ((__global
                  float *) mem_43022)[squot64(sext_i32_i64(virt_group_id_44143) *
                                              squot64(segred_group_sizze_34930,
                                                      segment_sizze_nonzzero_44132) +
                                              sext_i32_i64(local_tid_44135),
                                              i32_res_28059) * i32_res_28059 +
                                      (sext_i32_i64(virt_group_id_44143) *
                                       squot64(segred_group_sizze_34930,
                                               segment_sizze_nonzzero_44132) +
                                       sext_i32_i64(local_tid_44135) -
                                       squot64(sext_i32_i64(virt_group_id_44143) *
                                               squot64(segred_group_sizze_34930,
                                                       segment_sizze_nonzzero_44132) +
                                               sext_i32_i64(local_tid_44135),
                                               i32_res_28059) *
                                       i32_res_28059)] = ((__local
                                                           float *) red_arr_mem_44139)[(sext_i32_i64(local_tid_44135) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_44132 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34930
}
__kernel void mainMagnitudezisegred_small_35015(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44227_backing_aligned_0,
                                                int64_t m_28044,
                                                int64_t i32_res_28059,
                                                int64_t num_groups_35064,
                                                int64_t segment_sizze_nonzzero_44220,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_42807,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43028,
                                                __global
                                                unsigned char *mem_43088)
{
    #define segred_group_sizze_35063 (mainMagnitudezisegred_group_sizze_35009)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44227_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44227_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44222;
    int32_t local_tid_44223;
    int64_t group_sizze_44226;
    int32_t wave_sizze_44225;
    int32_t group_tid_44224;
    
    global_tid_44222 = get_global_id(0);
    local_tid_44223 = get_local_id(0);
    group_sizze_44226 = get_local_size(0);
    wave_sizze_44225 = LOCKSTEP_WIDTH;
    group_tid_44224 = get_group_id(0);
    
    int32_t phys_tid_35015;
    
    phys_tid_35015 = global_tid_44222;
    
    __local char *red_arr_mem_44227;
    
    red_arr_mem_44227 = (__local char *) red_arr_mem_44227_backing_0;
    
    int32_t phys_group_id_44229;
    
    phys_group_id_44229 = get_group_id(0);
    for (int32_t i_44230 = 0; i_44230 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28044 * i32_res_28059,
                                          squot64(segred_group_sizze_35063,
                                                  segment_sizze_nonzzero_44220))) -
                   phys_group_id_44229, sext_i64_i32(num_groups_35064));
         i_44230++) {
        int32_t virt_group_id_44231 = phys_group_id_44229 + i_44230 *
                sext_i64_i32(num_groups_35064);
        int64_t gtid_35004 = squot64(squot64(sext_i32_i64(local_tid_44223),
                                             segment_sizze_nonzzero_44220) +
                                     sext_i32_i64(virt_group_id_44231) *
                                     squot64(segred_group_sizze_35063,
                                             segment_sizze_nonzzero_44220),
                                     i32_res_28059);
        int64_t gtid_35005 = squot64(sext_i32_i64(local_tid_44223),
                                     segment_sizze_nonzzero_44220) +
                sext_i32_i64(virt_group_id_44231) *
                squot64(segred_group_sizze_35063,
                        segment_sizze_nonzzero_44220) -
                squot64(squot64(sext_i32_i64(local_tid_44223),
                                segment_sizze_nonzzero_44220) +
                        sext_i32_i64(virt_group_id_44231) *
                        squot64(segred_group_sizze_35063,
                                segment_sizze_nonzzero_44220), i32_res_28059) *
                i32_res_28059;
        int64_t gtid_35014 = srem64(sext_i32_i64(local_tid_44223),
                                    i32_res_28059);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28059) && ((slt64(gtid_35004,
                                                             m_28044) &&
                                                       slt64(gtid_35005,
                                                             i32_res_28059)) &&
                                                      slt64(sext_i32_i64(local_tid_44223),
                                                            i32_res_28059 *
                                                            squot64(segred_group_sizze_35063,
                                                                    segment_sizze_nonzzero_44220)))) {
                float x_35073 = ((__global
                                  float *) defunc_3_map_res_mem_43028)[gtid_35004 *
                                                                       i32_res_28059 +
                                                                       gtid_35014];
                float x_35074 = ((__global
                                  float *) defunc_3_map_res_mem_42807)[gtid_35004 *
                                                                       (i32_res_28059 *
                                                                        i32_res_28059) +
                                                                       gtid_35005 *
                                                                       i32_res_28059 +
                                                                       gtid_35014];
                float defunc_1_f_res_35075 = x_35073 * x_35074;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44227)[sext_i32_i64(local_tid_44223)] =
                        defunc_1_f_res_35075;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44227)[sext_i32_i64(local_tid_44223)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28059)) {
            // perform segmented scan to imitate reduction
            {
                float x_35067;
                float x_35068;
                float x_44232;
                float x_44233;
                bool ltid_in_bounds_44235;
                
                ltid_in_bounds_44235 = slt64(sext_i32_i64(local_tid_44223),
                                             i32_res_28059 *
                                             squot64(segred_group_sizze_35063,
                                                     segment_sizze_nonzzero_44220));
                
                int32_t skip_threads_44236;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44235) {
                        x_35068 = ((volatile __local
                                    float *) red_arr_mem_44227)[sext_i32_i64(local_tid_44223)];
                        if ((local_tid_44223 - squot32(local_tid_44223, 32) *
                             32) == 0) {
                            x_35067 = x_35068;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44236 = 1;
                    while (slt32(skip_threads_44236, 32)) {
                        if (sle32(skip_threads_44236, local_tid_44223 -
                                  squot32(local_tid_44223, 32) * 32) &&
                            ltid_in_bounds_44235) {
                            // read operands
                            {
                                x_35067 = ((volatile __local
                                            float *) red_arr_mem_44227)[sext_i32_i64(local_tid_44223) -
                                                                        sext_i32_i64(skip_threads_44236)];
                            }
                            // perform operation
                            {
                                bool inactive_44237 =
                                     slt64(srem64(sext_i32_i64(local_tid_44223),
                                                  i32_res_28059),
                                           sext_i32_i64(local_tid_44223) -
                                           sext_i32_i64(local_tid_44223 -
                                           skip_threads_44236));
                                
                                if (inactive_44237) {
                                    x_35067 = x_35068;
                                }
                                if (!inactive_44237) {
                                    float defunc_1_op_res_35069 = x_35067 +
                                          x_35068;
                                    
                                    x_35067 = defunc_1_op_res_35069;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44225, skip_threads_44236)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44236, local_tid_44223 -
                                  squot32(local_tid_44223, 32) * 32) &&
                            ltid_in_bounds_44235) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44227)[sext_i32_i64(local_tid_44223)] =
                                    x_35067;
                                x_35068 = x_35067;
                            }
                        }
                        if (sle32(wave_sizze_44225, skip_threads_44236)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44236 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44223 - squot32(local_tid_44223, 32) * 32) ==
                        31 && ltid_in_bounds_44235) {
                        ((volatile __local
                          float *) red_arr_mem_44227)[sext_i32_i64(squot32(local_tid_44223,
                                                                           32))] =
                            x_35067;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44238;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44223, 32) == 0 &&
                            ltid_in_bounds_44235) {
                            x_44233 = ((volatile __local
                                        float *) red_arr_mem_44227)[sext_i32_i64(local_tid_44223)];
                            if ((local_tid_44223 - squot32(local_tid_44223,
                                                           32) * 32) == 0) {
                                x_44232 = x_44233;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44238 = 1;
                        while (slt32(skip_threads_44238, 32)) {
                            if (sle32(skip_threads_44238, local_tid_44223 -
                                      squot32(local_tid_44223, 32) * 32) &&
                                (squot32(local_tid_44223, 32) == 0 &&
                                 ltid_in_bounds_44235)) {
                                // read operands
                                {
                                    x_44232 = ((volatile __local
                                                float *) red_arr_mem_44227)[sext_i32_i64(local_tid_44223) -
                                                                            sext_i32_i64(skip_threads_44238)];
                                }
                                // perform operation
                                {
                                    bool inactive_44239 =
                                         slt64(srem64(sext_i32_i64(local_tid_44223 *
                                                      32 + 32 - 1),
                                                      i32_res_28059),
                                               sext_i32_i64(local_tid_44223 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44223 -
                                                             skip_threads_44238) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44239) {
                                        x_44232 = x_44233;
                                    }
                                    if (!inactive_44239) {
                                        float defunc_1_op_res_44234 = x_44232 +
                                              x_44233;
                                        
                                        x_44232 = defunc_1_op_res_44234;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44225, skip_threads_44238)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44238, local_tid_44223 -
                                      squot32(local_tid_44223, 32) * 32) &&
                                (squot32(local_tid_44223, 32) == 0 &&
                                 ltid_in_bounds_44235)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44227)[sext_i32_i64(local_tid_44223)] =
                                        x_44232;
                                    x_44233 = x_44232;
                                }
                            }
                            if (sle32(wave_sizze_44225, skip_threads_44238)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44238 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44223, 32) == 0 ||
                          !ltid_in_bounds_44235)) {
                        // read operands
                        {
                            x_35068 = x_35067;
                            x_35067 = ((__local
                                        float *) red_arr_mem_44227)[sext_i32_i64(squot32(local_tid_44223,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44240 =
                                 slt64(srem64(sext_i32_i64(local_tid_44223),
                                              i32_res_28059),
                                       sext_i32_i64(local_tid_44223) -
                                       sext_i32_i64(squot32(local_tid_44223,
                                                            32) * 32 - 1));
                            
                            if (inactive_44240) {
                                x_35067 = x_35068;
                            }
                            if (!inactive_44240) {
                                float defunc_1_op_res_35069 = x_35067 + x_35068;
                                
                                x_35067 = defunc_1_op_res_35069;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44227)[sext_i32_i64(local_tid_44223)] =
                                x_35067;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44223, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44227)[sext_i32_i64(local_tid_44223)] =
                            x_35068;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44231) *
                      squot64(segred_group_sizze_35063,
                              segment_sizze_nonzzero_44220) +
                      sext_i32_i64(local_tid_44223), m_28044 * i32_res_28059) &&
                slt64(sext_i32_i64(local_tid_44223),
                      squot64(segred_group_sizze_35063,
                              segment_sizze_nonzzero_44220))) {
                ((__global
                  float *) mem_43088)[squot64(sext_i32_i64(virt_group_id_44231) *
                                              squot64(segred_group_sizze_35063,
                                                      segment_sizze_nonzzero_44220) +
                                              sext_i32_i64(local_tid_44223),
                                              i32_res_28059) * i32_res_28059 +
                                      (sext_i32_i64(virt_group_id_44231) *
                                       squot64(segred_group_sizze_35063,
                                               segment_sizze_nonzzero_44220) +
                                       sext_i32_i64(local_tid_44223) -
                                       squot64(sext_i32_i64(virt_group_id_44231) *
                                               squot64(segred_group_sizze_35063,
                                                       segment_sizze_nonzzero_44220) +
                                               sext_i32_i64(local_tid_44223),
                                               i32_res_28059) *
                                       i32_res_28059)] = ((__local
                                                           float *) red_arr_mem_44227)[(sext_i32_i64(local_tid_44223) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_44220 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35063
}
__kernel void mainMagnitudezisegred_small_35145(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44359_backing_aligned_0,
                                                int64_t N_28043,
                                                int64_t m_28044,
                                                int64_t i32_res_28059,
                                                int64_t num_groups_35192,
                                                int64_t segment_sizze_nonzzero_44352,
                                                __global
                                                unsigned char *mem_42575,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_43094,
                                                __global
                                                unsigned char *mem_43312)
{
    #define segred_group_sizze_35191 (mainMagnitudezisegred_group_sizze_35139)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44359_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44359_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44354;
    int32_t local_tid_44355;
    int64_t group_sizze_44358;
    int32_t wave_sizze_44357;
    int32_t group_tid_44356;
    
    global_tid_44354 = get_global_id(0);
    local_tid_44355 = get_local_id(0);
    group_sizze_44358 = get_local_size(0);
    wave_sizze_44357 = LOCKSTEP_WIDTH;
    group_tid_44356 = get_group_id(0);
    
    int32_t phys_tid_35145;
    
    phys_tid_35145 = global_tid_44354;
    
    __local char *red_arr_mem_44359;
    
    red_arr_mem_44359 = (__local char *) red_arr_mem_44359_backing_0;
    
    int32_t phys_group_id_44361;
    
    phys_group_id_44361 = get_group_id(0);
    for (int32_t i_44362 = 0; i_44362 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28044 * N_28043,
                                          squot64(segred_group_sizze_35191,
                                                  segment_sizze_nonzzero_44352))) -
                   phys_group_id_44361, sext_i64_i32(num_groups_35192));
         i_44362++) {
        int32_t virt_group_id_44363 = phys_group_id_44361 + i_44362 *
                sext_i64_i32(num_groups_35192);
        int64_t gtid_35134 = squot64(squot64(sext_i32_i64(local_tid_44355),
                                             segment_sizze_nonzzero_44352) +
                                     sext_i32_i64(virt_group_id_44363) *
                                     squot64(segred_group_sizze_35191,
                                             segment_sizze_nonzzero_44352),
                                     N_28043);
        int64_t gtid_35135 = squot64(sext_i32_i64(local_tid_44355),
                                     segment_sizze_nonzzero_44352) +
                sext_i32_i64(virt_group_id_44363) *
                squot64(segred_group_sizze_35191,
                        segment_sizze_nonzzero_44352) -
                squot64(squot64(sext_i32_i64(local_tid_44355),
                                segment_sizze_nonzzero_44352) +
                        sext_i32_i64(virt_group_id_44363) *
                        squot64(segred_group_sizze_35191,
                                segment_sizze_nonzzero_44352), N_28043) *
                N_28043;
        int64_t gtid_35144 = srem64(sext_i32_i64(local_tid_44355),
                                    i32_res_28059);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28059) && ((slt64(gtid_35134,
                                                             m_28044) &&
                                                       slt64(gtid_35135,
                                                             N_28043)) &&
                                                      slt64(sext_i32_i64(local_tid_44355),
                                                            i32_res_28059 *
                                                            squot64(segred_group_sizze_35191,
                                                                    segment_sizze_nonzzero_44352)))) {
                float x_35200 = ((__global
                                  float *) defunc_4_map_res_mem_43094)[gtid_35134 *
                                                                       i32_res_28059 +
                                                                       gtid_35144];
                float x_35201 = ((__global float *) mem_42575)[gtid_35135 *
                                                               i32_res_28059 +
                                                               gtid_35144];
                float defunc_1_f_res_35202 = x_35200 * x_35201;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44359)[sext_i32_i64(local_tid_44355)] =
                        defunc_1_f_res_35202;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44359)[sext_i32_i64(local_tid_44355)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28059)) {
            // perform segmented scan to imitate reduction
            {
                float x_35195;
                float x_35196;
                float x_44364;
                float x_44365;
                bool ltid_in_bounds_44367;
                
                ltid_in_bounds_44367 = slt64(sext_i32_i64(local_tid_44355),
                                             i32_res_28059 *
                                             squot64(segred_group_sizze_35191,
                                                     segment_sizze_nonzzero_44352));
                
                int32_t skip_threads_44368;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44367) {
                        x_35196 = ((volatile __local
                                    float *) red_arr_mem_44359)[sext_i32_i64(local_tid_44355)];
                        if ((local_tid_44355 - squot32(local_tid_44355, 32) *
                             32) == 0) {
                            x_35195 = x_35196;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44368 = 1;
                    while (slt32(skip_threads_44368, 32)) {
                        if (sle32(skip_threads_44368, local_tid_44355 -
                                  squot32(local_tid_44355, 32) * 32) &&
                            ltid_in_bounds_44367) {
                            // read operands
                            {
                                x_35195 = ((volatile __local
                                            float *) red_arr_mem_44359)[sext_i32_i64(local_tid_44355) -
                                                                        sext_i32_i64(skip_threads_44368)];
                            }
                            // perform operation
                            {
                                bool inactive_44369 =
                                     slt64(srem64(sext_i32_i64(local_tid_44355),
                                                  i32_res_28059),
                                           sext_i32_i64(local_tid_44355) -
                                           sext_i32_i64(local_tid_44355 -
                                           skip_threads_44368));
                                
                                if (inactive_44369) {
                                    x_35195 = x_35196;
                                }
                                if (!inactive_44369) {
                                    float defunc_1_op_res_35197 = x_35195 +
                                          x_35196;
                                    
                                    x_35195 = defunc_1_op_res_35197;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44357, skip_threads_44368)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44368, local_tid_44355 -
                                  squot32(local_tid_44355, 32) * 32) &&
                            ltid_in_bounds_44367) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44359)[sext_i32_i64(local_tid_44355)] =
                                    x_35195;
                                x_35196 = x_35195;
                            }
                        }
                        if (sle32(wave_sizze_44357, skip_threads_44368)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44368 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44355 - squot32(local_tid_44355, 32) * 32) ==
                        31 && ltid_in_bounds_44367) {
                        ((volatile __local
                          float *) red_arr_mem_44359)[sext_i32_i64(squot32(local_tid_44355,
                                                                           32))] =
                            x_35195;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44370;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44355, 32) == 0 &&
                            ltid_in_bounds_44367) {
                            x_44365 = ((volatile __local
                                        float *) red_arr_mem_44359)[sext_i32_i64(local_tid_44355)];
                            if ((local_tid_44355 - squot32(local_tid_44355,
                                                           32) * 32) == 0) {
                                x_44364 = x_44365;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44370 = 1;
                        while (slt32(skip_threads_44370, 32)) {
                            if (sle32(skip_threads_44370, local_tid_44355 -
                                      squot32(local_tid_44355, 32) * 32) &&
                                (squot32(local_tid_44355, 32) == 0 &&
                                 ltid_in_bounds_44367)) {
                                // read operands
                                {
                                    x_44364 = ((volatile __local
                                                float *) red_arr_mem_44359)[sext_i32_i64(local_tid_44355) -
                                                                            sext_i32_i64(skip_threads_44370)];
                                }
                                // perform operation
                                {
                                    bool inactive_44371 =
                                         slt64(srem64(sext_i32_i64(local_tid_44355 *
                                                      32 + 32 - 1),
                                                      i32_res_28059),
                                               sext_i32_i64(local_tid_44355 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44355 -
                                                             skip_threads_44370) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44371) {
                                        x_44364 = x_44365;
                                    }
                                    if (!inactive_44371) {
                                        float defunc_1_op_res_44366 = x_44364 +
                                              x_44365;
                                        
                                        x_44364 = defunc_1_op_res_44366;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44357, skip_threads_44370)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44370, local_tid_44355 -
                                      squot32(local_tid_44355, 32) * 32) &&
                                (squot32(local_tid_44355, 32) == 0 &&
                                 ltid_in_bounds_44367)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44359)[sext_i32_i64(local_tid_44355)] =
                                        x_44364;
                                    x_44365 = x_44364;
                                }
                            }
                            if (sle32(wave_sizze_44357, skip_threads_44370)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44370 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44355, 32) == 0 ||
                          !ltid_in_bounds_44367)) {
                        // read operands
                        {
                            x_35196 = x_35195;
                            x_35195 = ((__local
                                        float *) red_arr_mem_44359)[sext_i32_i64(squot32(local_tid_44355,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44372 =
                                 slt64(srem64(sext_i32_i64(local_tid_44355),
                                              i32_res_28059),
                                       sext_i32_i64(local_tid_44355) -
                                       sext_i32_i64(squot32(local_tid_44355,
                                                            32) * 32 - 1));
                            
                            if (inactive_44372) {
                                x_35195 = x_35196;
                            }
                            if (!inactive_44372) {
                                float defunc_1_op_res_35197 = x_35195 + x_35196;
                                
                                x_35195 = defunc_1_op_res_35197;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44359)[sext_i32_i64(local_tid_44355)] =
                                x_35195;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44355, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44359)[sext_i32_i64(local_tid_44355)] =
                            x_35196;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44363) *
                      squot64(segred_group_sizze_35191,
                              segment_sizze_nonzzero_44352) +
                      sext_i32_i64(local_tid_44355), m_28044 * N_28043) &&
                slt64(sext_i32_i64(local_tid_44355),
                      squot64(segred_group_sizze_35191,
                              segment_sizze_nonzzero_44352))) {
                ((__global
                  float *) mem_43312)[squot64(sext_i32_i64(virt_group_id_44363) *
                                              squot64(segred_group_sizze_35191,
                                                      segment_sizze_nonzzero_44352) +
                                              sext_i32_i64(local_tid_44355),
                                              N_28043) * N_28043 +
                                      (sext_i32_i64(virt_group_id_44363) *
                                       squot64(segred_group_sizze_35191,
                                               segment_sizze_nonzzero_44352) +
                                       sext_i32_i64(local_tid_44355) -
                                       squot64(sext_i32_i64(virt_group_id_44363) *
                                               squot64(segred_group_sizze_35191,
                                                       segment_sizze_nonzzero_44352) +
                                               sext_i32_i64(local_tid_44355),
                                               N_28043) * N_28043)] = ((__local
                                                                        float *) red_arr_mem_44359)[(sext_i32_i64(local_tid_44355) +
                                                                                                     (int64_t) 1) *
                                                                                                    segment_sizze_nonzzero_44352 -
                                                                                                    (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35191
}
__kernel void mainMagnitudezisegred_small_35711(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44611_backing_aligned_0,
                                                int64_t N_28043,
                                                int64_t m_28044,
                                                int64_t i32_res_28053,
                                                int64_t num_groups_35758,
                                                int64_t segment_sizze_nonzzero_44604,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_43356,
                                                __global
                                                unsigned char *mem_43410,
                                                __global
                                                unsigned char *mem_43413)
{
    #define segred_group_sizze_35757 (mainMagnitudezisegred_group_sizze_35705)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44611_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44611_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44606;
    int32_t local_tid_44607;
    int64_t group_sizze_44610;
    int32_t wave_sizze_44609;
    int32_t group_tid_44608;
    
    global_tid_44606 = get_global_id(0);
    local_tid_44607 = get_local_id(0);
    group_sizze_44610 = get_local_size(0);
    wave_sizze_44609 = LOCKSTEP_WIDTH;
    group_tid_44608 = get_group_id(0);
    
    int32_t phys_tid_35711;
    
    phys_tid_35711 = global_tid_44606;
    
    __local char *red_arr_mem_44611;
    
    red_arr_mem_44611 = (__local char *) red_arr_mem_44611_backing_0;
    
    int32_t phys_group_id_44613;
    
    phys_group_id_44613 = get_group_id(0);
    for (int32_t i_44614 = 0; i_44614 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28044,
                                          squot64(segred_group_sizze_35757,
                                                  segment_sizze_nonzzero_44604))) -
                   phys_group_id_44613, sext_i64_i32(num_groups_35758));
         i_44614++) {
        int32_t virt_group_id_44615 = phys_group_id_44613 + i_44614 *
                sext_i64_i32(num_groups_35758);
        int64_t gtid_35702 = squot64(sext_i32_i64(local_tid_44607),
                                     segment_sizze_nonzzero_44604) +
                sext_i32_i64(virt_group_id_44615) *
                squot64(segred_group_sizze_35757, segment_sizze_nonzzero_44604);
        int64_t gtid_35710 = srem64(sext_i32_i64(local_tid_44607),
                                    i32_res_28053);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28053) && (slt64(gtid_35702,
                                                            m_28044) &&
                                                      slt64(sext_i32_i64(local_tid_44607),
                                                            i32_res_28053 *
                                                            squot64(segred_group_sizze_35757,
                                                                    segment_sizze_nonzzero_44604)))) {
                int32_t defunc_0_f_res_35765 = ((__global
                                                 int32_t *) mem_43410)[gtid_35702];
                int32_t index_primexp_40595 = sext_i64_i32(gtid_35710);
                bool cond_35767 = slt32(index_primexp_40595,
                                        defunc_0_f_res_35765);
                float defunc_0_f_res_35768;
                
                if (cond_35767) {
                    int64_t i_35769 = sext_i32_i64(index_primexp_40595);
                    float defunc_0_f_res_t_res_35770 = ((__global
                                                         float *) defunc_4_map_res_mem_43356)[gtid_35702 *
                                                                                              N_28043 +
                                                                                              i_35769];
                    
                    defunc_0_f_res_35768 = defunc_0_f_res_t_res_35770;
                } else {
                    defunc_0_f_res_35768 = 0.0F;
                }
                
                float defunc_0_f_res_35771 = defunc_0_f_res_35768 *
                      defunc_0_f_res_35768;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44611)[sext_i32_i64(local_tid_44607)] =
                        defunc_0_f_res_35771;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44611)[sext_i32_i64(local_tid_44607)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28053)) {
            // perform segmented scan to imitate reduction
            {
                float x_35761;
                float x_35762;
                float x_44616;
                float x_44617;
                bool ltid_in_bounds_44619;
                
                ltid_in_bounds_44619 = slt64(sext_i32_i64(local_tid_44607),
                                             i32_res_28053 *
                                             squot64(segred_group_sizze_35757,
                                                     segment_sizze_nonzzero_44604));
                
                int32_t skip_threads_44620;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44619) {
                        x_35762 = ((volatile __local
                                    float *) red_arr_mem_44611)[sext_i32_i64(local_tid_44607)];
                        if ((local_tid_44607 - squot32(local_tid_44607, 32) *
                             32) == 0) {
                            x_35761 = x_35762;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44620 = 1;
                    while (slt32(skip_threads_44620, 32)) {
                        if (sle32(skip_threads_44620, local_tid_44607 -
                                  squot32(local_tid_44607, 32) * 32) &&
                            ltid_in_bounds_44619) {
                            // read operands
                            {
                                x_35761 = ((volatile __local
                                            float *) red_arr_mem_44611)[sext_i32_i64(local_tid_44607) -
                                                                        sext_i32_i64(skip_threads_44620)];
                            }
                            // perform operation
                            {
                                bool inactive_44621 =
                                     slt64(srem64(sext_i32_i64(local_tid_44607),
                                                  i32_res_28053),
                                           sext_i32_i64(local_tid_44607) -
                                           sext_i32_i64(local_tid_44607 -
                                           skip_threads_44620));
                                
                                if (inactive_44621) {
                                    x_35761 = x_35762;
                                }
                                if (!inactive_44621) {
                                    float defunc_1_op_res_35763 = x_35761 +
                                          x_35762;
                                    
                                    x_35761 = defunc_1_op_res_35763;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44609, skip_threads_44620)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44620, local_tid_44607 -
                                  squot32(local_tid_44607, 32) * 32) &&
                            ltid_in_bounds_44619) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44611)[sext_i32_i64(local_tid_44607)] =
                                    x_35761;
                                x_35762 = x_35761;
                            }
                        }
                        if (sle32(wave_sizze_44609, skip_threads_44620)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44620 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44607 - squot32(local_tid_44607, 32) * 32) ==
                        31 && ltid_in_bounds_44619) {
                        ((volatile __local
                          float *) red_arr_mem_44611)[sext_i32_i64(squot32(local_tid_44607,
                                                                           32))] =
                            x_35761;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44622;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44607, 32) == 0 &&
                            ltid_in_bounds_44619) {
                            x_44617 = ((volatile __local
                                        float *) red_arr_mem_44611)[sext_i32_i64(local_tid_44607)];
                            if ((local_tid_44607 - squot32(local_tid_44607,
                                                           32) * 32) == 0) {
                                x_44616 = x_44617;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44622 = 1;
                        while (slt32(skip_threads_44622, 32)) {
                            if (sle32(skip_threads_44622, local_tid_44607 -
                                      squot32(local_tid_44607, 32) * 32) &&
                                (squot32(local_tid_44607, 32) == 0 &&
                                 ltid_in_bounds_44619)) {
                                // read operands
                                {
                                    x_44616 = ((volatile __local
                                                float *) red_arr_mem_44611)[sext_i32_i64(local_tid_44607) -
                                                                            sext_i32_i64(skip_threads_44622)];
                                }
                                // perform operation
                                {
                                    bool inactive_44623 =
                                         slt64(srem64(sext_i32_i64(local_tid_44607 *
                                                      32 + 32 - 1),
                                                      i32_res_28053),
                                               sext_i32_i64(local_tid_44607 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44607 -
                                                             skip_threads_44622) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44623) {
                                        x_44616 = x_44617;
                                    }
                                    if (!inactive_44623) {
                                        float defunc_1_op_res_44618 = x_44616 +
                                              x_44617;
                                        
                                        x_44616 = defunc_1_op_res_44618;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44609, skip_threads_44622)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44622, local_tid_44607 -
                                      squot32(local_tid_44607, 32) * 32) &&
                                (squot32(local_tid_44607, 32) == 0 &&
                                 ltid_in_bounds_44619)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44611)[sext_i32_i64(local_tid_44607)] =
                                        x_44616;
                                    x_44617 = x_44616;
                                }
                            }
                            if (sle32(wave_sizze_44609, skip_threads_44622)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44622 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44607, 32) == 0 ||
                          !ltid_in_bounds_44619)) {
                        // read operands
                        {
                            x_35762 = x_35761;
                            x_35761 = ((__local
                                        float *) red_arr_mem_44611)[sext_i32_i64(squot32(local_tid_44607,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44624 =
                                 slt64(srem64(sext_i32_i64(local_tid_44607),
                                              i32_res_28053),
                                       sext_i32_i64(local_tid_44607) -
                                       sext_i32_i64(squot32(local_tid_44607,
                                                            32) * 32 - 1));
                            
                            if (inactive_44624) {
                                x_35761 = x_35762;
                            }
                            if (!inactive_44624) {
                                float defunc_1_op_res_35763 = x_35761 + x_35762;
                                
                                x_35761 = defunc_1_op_res_35763;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44611)[sext_i32_i64(local_tid_44607)] =
                                x_35761;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44607, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44611)[sext_i32_i64(local_tid_44607)] =
                            x_35762;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44615) *
                      squot64(segred_group_sizze_35757,
                              segment_sizze_nonzzero_44604) +
                      sext_i32_i64(local_tid_44607), m_28044) &&
                slt64(sext_i32_i64(local_tid_44607),
                      squot64(segred_group_sizze_35757,
                              segment_sizze_nonzzero_44604))) {
                ((__global
                  float *) mem_43413)[sext_i32_i64(virt_group_id_44615) *
                                      squot64(segred_group_sizze_35757,
                                              segment_sizze_nonzzero_44604) +
                                      sext_i32_i64(local_tid_44607)] = ((__local
                                                                         float *) red_arr_mem_44611)[(sext_i32_i64(local_tid_44607) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_44604 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35757
}
__kernel void mainMagnitudezisegred_small_35732(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44551_backing_aligned_0,
                                                int64_t N_28043,
                                                int64_t m_28044,
                                                int64_t i32_res_28053,
                                                int64_t num_groups_35744,
                                                int64_t segment_sizze_nonzzero_44544,
                                                __global
                                                unsigned char *images_mem_42559,
                                                __global
                                                unsigned char *mem_43410)
{
    #define segred_group_sizze_35743 (mainMagnitudezisegred_group_sizze_35726)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44551_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44551_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44546;
    int32_t local_tid_44547;
    int64_t group_sizze_44550;
    int32_t wave_sizze_44549;
    int32_t group_tid_44548;
    
    global_tid_44546 = get_global_id(0);
    local_tid_44547 = get_local_id(0);
    group_sizze_44550 = get_local_size(0);
    wave_sizze_44549 = LOCKSTEP_WIDTH;
    group_tid_44548 = get_group_id(0);
    
    int32_t phys_tid_35732;
    
    phys_tid_35732 = global_tid_44546;
    
    __local char *red_arr_mem_44551;
    
    red_arr_mem_44551 = (__local char *) red_arr_mem_44551_backing_0;
    
    int32_t phys_group_id_44553;
    
    phys_group_id_44553 = get_group_id(0);
    for (int32_t i_44554 = 0; i_44554 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28044,
                                          squot64(segred_group_sizze_35743,
                                                  segment_sizze_nonzzero_44544))) -
                   phys_group_id_44553, sext_i64_i32(num_groups_35744));
         i_44554++) {
        int32_t virt_group_id_44555 = phys_group_id_44553 + i_44554 *
                sext_i64_i32(num_groups_35744);
        int64_t gtid_35723 = squot64(sext_i32_i64(local_tid_44547),
                                     segment_sizze_nonzzero_44544) +
                sext_i32_i64(virt_group_id_44555) *
                squot64(segred_group_sizze_35743, segment_sizze_nonzzero_44544);
        int64_t gtid_35731 = srem64(sext_i32_i64(local_tid_44547),
                                    i32_res_28053);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28053) && (slt64(gtid_35723,
                                                            m_28044) &&
                                                      slt64(sext_i32_i64(local_tid_44547),
                                                            i32_res_28053 *
                                                            squot64(segred_group_sizze_35743,
                                                                    segment_sizze_nonzzero_44544)))) {
                float x_35751 = ((__global
                                  float *) images_mem_42559)[gtid_35723 *
                                                             N_28043 +
                                                             gtid_35731];
                bool isnan_res_35752;
                
                isnan_res_35752 = futrts_isnan32(x_35751);
                
                bool cond_35753 = !isnan_res_35752;
                int32_t defunc_0_f_res_35754 = btoi_bool_i32(cond_35753);
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      int32_t *) red_arr_mem_44551)[sext_i32_i64(local_tid_44547)] =
                        defunc_0_f_res_35754;
                }
            } else {
                ((__local
                  int32_t *) red_arr_mem_44551)[sext_i32_i64(local_tid_44547)] =
                    0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28053)) {
            // perform segmented scan to imitate reduction
            {
                int32_t x_35747;
                int32_t x_35748;
                int32_t x_44556;
                int32_t x_44557;
                bool ltid_in_bounds_44559;
                
                ltid_in_bounds_44559 = slt64(sext_i32_i64(local_tid_44547),
                                             i32_res_28053 *
                                             squot64(segred_group_sizze_35743,
                                                     segment_sizze_nonzzero_44544));
                
                int32_t skip_threads_44560;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44559) {
                        x_35748 = ((volatile __local
                                    int32_t *) red_arr_mem_44551)[sext_i32_i64(local_tid_44547)];
                        if ((local_tid_44547 - squot32(local_tid_44547, 32) *
                             32) == 0) {
                            x_35747 = x_35748;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44560 = 1;
                    while (slt32(skip_threads_44560, 32)) {
                        if (sle32(skip_threads_44560, local_tid_44547 -
                                  squot32(local_tid_44547, 32) * 32) &&
                            ltid_in_bounds_44559) {
                            // read operands
                            {
                                x_35747 = ((volatile __local
                                            int32_t *) red_arr_mem_44551)[sext_i32_i64(local_tid_44547) -
                                                                          sext_i32_i64(skip_threads_44560)];
                            }
                            // perform operation
                            {
                                bool inactive_44561 =
                                     slt64(srem64(sext_i32_i64(local_tid_44547),
                                                  i32_res_28053),
                                           sext_i32_i64(local_tid_44547) -
                                           sext_i32_i64(local_tid_44547 -
                                           skip_threads_44560));
                                
                                if (inactive_44561) {
                                    x_35747 = x_35748;
                                }
                                if (!inactive_44561) {
                                    int32_t defunc_1_op_res_35749 =
                                            add32(x_35747, x_35748);
                                    
                                    x_35747 = defunc_1_op_res_35749;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44549, skip_threads_44560)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44560, local_tid_44547 -
                                  squot32(local_tid_44547, 32) * 32) &&
                            ltid_in_bounds_44559) {
                            // write result
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_44551)[sext_i32_i64(local_tid_44547)] =
                                    x_35747;
                                x_35748 = x_35747;
                            }
                        }
                        if (sle32(wave_sizze_44549, skip_threads_44560)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44560 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44547 - squot32(local_tid_44547, 32) * 32) ==
                        31 && ltid_in_bounds_44559) {
                        ((volatile __local
                          int32_t *) red_arr_mem_44551)[sext_i32_i64(squot32(local_tid_44547,
                                                                             32))] =
                            x_35747;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44562;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44547, 32) == 0 &&
                            ltid_in_bounds_44559) {
                            x_44557 = ((volatile __local
                                        int32_t *) red_arr_mem_44551)[sext_i32_i64(local_tid_44547)];
                            if ((local_tid_44547 - squot32(local_tid_44547,
                                                           32) * 32) == 0) {
                                x_44556 = x_44557;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44562 = 1;
                        while (slt32(skip_threads_44562, 32)) {
                            if (sle32(skip_threads_44562, local_tid_44547 -
                                      squot32(local_tid_44547, 32) * 32) &&
                                (squot32(local_tid_44547, 32) == 0 &&
                                 ltid_in_bounds_44559)) {
                                // read operands
                                {
                                    x_44556 = ((volatile __local
                                                int32_t *) red_arr_mem_44551)[sext_i32_i64(local_tid_44547) -
                                                                              sext_i32_i64(skip_threads_44562)];
                                }
                                // perform operation
                                {
                                    bool inactive_44563 =
                                         slt64(srem64(sext_i32_i64(local_tid_44547 *
                                                      32 + 32 - 1),
                                                      i32_res_28053),
                                               sext_i32_i64(local_tid_44547 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44547 -
                                                             skip_threads_44562) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44563) {
                                        x_44556 = x_44557;
                                    }
                                    if (!inactive_44563) {
                                        int32_t defunc_1_op_res_44558 =
                                                add32(x_44556, x_44557);
                                        
                                        x_44556 = defunc_1_op_res_44558;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44549, skip_threads_44562)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44562, local_tid_44547 -
                                      squot32(local_tid_44547, 32) * 32) &&
                                (squot32(local_tid_44547, 32) == 0 &&
                                 ltid_in_bounds_44559)) {
                                // write result
                                {
                                    ((volatile __local
                                      int32_t *) red_arr_mem_44551)[sext_i32_i64(local_tid_44547)] =
                                        x_44556;
                                    x_44557 = x_44556;
                                }
                            }
                            if (sle32(wave_sizze_44549, skip_threads_44562)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44562 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44547, 32) == 0 ||
                          !ltid_in_bounds_44559)) {
                        // read operands
                        {
                            x_35748 = x_35747;
                            x_35747 = ((__local
                                        int32_t *) red_arr_mem_44551)[sext_i32_i64(squot32(local_tid_44547,
                                                                                           32)) -
                                                                      (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44564 =
                                 slt64(srem64(sext_i32_i64(local_tid_44547),
                                              i32_res_28053),
                                       sext_i32_i64(local_tid_44547) -
                                       sext_i32_i64(squot32(local_tid_44547,
                                                            32) * 32 - 1));
                            
                            if (inactive_44564) {
                                x_35747 = x_35748;
                            }
                            if (!inactive_44564) {
                                int32_t defunc_1_op_res_35749 = add32(x_35747,
                                                                      x_35748);
                                
                                x_35747 = defunc_1_op_res_35749;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              int32_t *) red_arr_mem_44551)[sext_i32_i64(local_tid_44547)] =
                                x_35747;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44547, 32) == 0) {
                        ((__local
                          int32_t *) red_arr_mem_44551)[sext_i32_i64(local_tid_44547)] =
                            x_35748;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44555) *
                      squot64(segred_group_sizze_35743,
                              segment_sizze_nonzzero_44544) +
                      sext_i32_i64(local_tid_44547), m_28044) &&
                slt64(sext_i32_i64(local_tid_44547),
                      squot64(segred_group_sizze_35743,
                              segment_sizze_nonzzero_44544))) {
                ((__global
                  int32_t *) mem_43410)[sext_i32_i64(virt_group_id_44555) *
                                        squot64(segred_group_sizze_35743,
                                                segment_sizze_nonzzero_44544) +
                                        sext_i32_i64(local_tid_44547)] =
                    ((__local
                      int32_t *) red_arr_mem_44551)[(sext_i32_i64(local_tid_44547) +
                                                     (int64_t) 1) *
                                                    segment_sizze_nonzzero_44544 -
                                                    (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35743
}
__kernel void mainMagnitudezisegred_small_35883(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44720_backing_aligned_0,
                                                int64_t N_28043,
                                                int64_t m_28044,
                                                int64_t i32_res_28414,
                                                int64_t num_groups_35901,
                                                int64_t segment_sizze_nonzzero_44713,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_43356,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43422,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43423,
                                                __global
                                                unsigned char *mem_43456)
{
    #define segred_group_sizze_35900 (mainMagnitudezisegred_group_sizze_35877)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44720_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44720_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44715;
    int32_t local_tid_44716;
    int64_t group_sizze_44719;
    int32_t wave_sizze_44718;
    int32_t group_tid_44717;
    
    global_tid_44715 = get_global_id(0);
    local_tid_44716 = get_local_id(0);
    group_sizze_44719 = get_local_size(0);
    wave_sizze_44718 = LOCKSTEP_WIDTH;
    group_tid_44717 = get_group_id(0);
    
    int32_t phys_tid_35883;
    
    phys_tid_35883 = global_tid_44715;
    
    __local char *red_arr_mem_44720;
    
    red_arr_mem_44720 = (__local char *) red_arr_mem_44720_backing_0;
    
    int32_t phys_group_id_44722;
    
    phys_group_id_44722 = get_group_id(0);
    for (int32_t i_44723 = 0; i_44723 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28044,
                                          squot64(segred_group_sizze_35900,
                                                  segment_sizze_nonzzero_44713))) -
                   phys_group_id_44722, sext_i64_i32(num_groups_35901));
         i_44723++) {
        int32_t virt_group_id_44724 = phys_group_id_44722 + i_44723 *
                sext_i64_i32(num_groups_35901);
        int64_t gtid_35874 = squot64(sext_i32_i64(local_tid_44716),
                                     segment_sizze_nonzzero_44713) +
                sext_i32_i64(virt_group_id_44724) *
                squot64(segred_group_sizze_35900, segment_sizze_nonzzero_44713);
        int64_t gtid_35882 = srem64(sext_i32_i64(local_tid_44716),
                                    i32_res_28414);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28414) && (slt64(gtid_35874,
                                                            m_28044) &&
                                                      slt64(sext_i32_i64(local_tid_44716),
                                                            i32_res_28414 *
                                                            squot64(segred_group_sizze_35900,
                                                                    segment_sizze_nonzzero_44713)))) {
                int32_t x_35909 = ((__global
                                    int32_t *) defunc_3_map_res_mem_43422)[gtid_35874];
                int32_t index_primexp_40600 = sext_i64_i32(gtid_35882);
                bool cond_35911 = slt32(index_primexp_40600, x_35909);
                float defunc_0_f_res_35912;
                
                if (cond_35911) {
                    int32_t x_35908 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43423)[gtid_35874];
                    int32_t x_35913 = add32(x_35908, index_primexp_40600);
                    int32_t x_35914 = sub32(x_35913, x_35909);
                    int32_t i_35915 = add32(1, x_35914);
                    int64_t i_35916 = sext_i32_i64(i_35915);
                    float defunc_0_f_res_t_res_35917 = ((__global
                                                         float *) defunc_4_map_res_mem_43356)[gtid_35874 *
                                                                                              N_28043 +
                                                                                              i_35916];
                    
                    defunc_0_f_res_35912 = defunc_0_f_res_t_res_35917;
                } else {
                    defunc_0_f_res_35912 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44720)[sext_i32_i64(local_tid_44716)] =
                        defunc_0_f_res_35912;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44720)[sext_i32_i64(local_tid_44716)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28414)) {
            // perform segmented scan to imitate reduction
            {
                float x_35904;
                float x_35905;
                float x_44725;
                float x_44726;
                bool ltid_in_bounds_44728;
                
                ltid_in_bounds_44728 = slt64(sext_i32_i64(local_tid_44716),
                                             i32_res_28414 *
                                             squot64(segred_group_sizze_35900,
                                                     segment_sizze_nonzzero_44713));
                
                int32_t skip_threads_44729;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44728) {
                        x_35905 = ((volatile __local
                                    float *) red_arr_mem_44720)[sext_i32_i64(local_tid_44716)];
                        if ((local_tid_44716 - squot32(local_tid_44716, 32) *
                             32) == 0) {
                            x_35904 = x_35905;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44729 = 1;
                    while (slt32(skip_threads_44729, 32)) {
                        if (sle32(skip_threads_44729, local_tid_44716 -
                                  squot32(local_tid_44716, 32) * 32) &&
                            ltid_in_bounds_44728) {
                            // read operands
                            {
                                x_35904 = ((volatile __local
                                            float *) red_arr_mem_44720)[sext_i32_i64(local_tid_44716) -
                                                                        sext_i32_i64(skip_threads_44729)];
                            }
                            // perform operation
                            {
                                bool inactive_44730 =
                                     slt64(srem64(sext_i32_i64(local_tid_44716),
                                                  i32_res_28414),
                                           sext_i32_i64(local_tid_44716) -
                                           sext_i32_i64(local_tid_44716 -
                                           skip_threads_44729));
                                
                                if (inactive_44730) {
                                    x_35904 = x_35905;
                                }
                                if (!inactive_44730) {
                                    float defunc_1_op_res_35906 = x_35904 +
                                          x_35905;
                                    
                                    x_35904 = defunc_1_op_res_35906;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44718, skip_threads_44729)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44729, local_tid_44716 -
                                  squot32(local_tid_44716, 32) * 32) &&
                            ltid_in_bounds_44728) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44720)[sext_i32_i64(local_tid_44716)] =
                                    x_35904;
                                x_35905 = x_35904;
                            }
                        }
                        if (sle32(wave_sizze_44718, skip_threads_44729)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44729 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44716 - squot32(local_tid_44716, 32) * 32) ==
                        31 && ltid_in_bounds_44728) {
                        ((volatile __local
                          float *) red_arr_mem_44720)[sext_i32_i64(squot32(local_tid_44716,
                                                                           32))] =
                            x_35904;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44731;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44716, 32) == 0 &&
                            ltid_in_bounds_44728) {
                            x_44726 = ((volatile __local
                                        float *) red_arr_mem_44720)[sext_i32_i64(local_tid_44716)];
                            if ((local_tid_44716 - squot32(local_tid_44716,
                                                           32) * 32) == 0) {
                                x_44725 = x_44726;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44731 = 1;
                        while (slt32(skip_threads_44731, 32)) {
                            if (sle32(skip_threads_44731, local_tid_44716 -
                                      squot32(local_tid_44716, 32) * 32) &&
                                (squot32(local_tid_44716, 32) == 0 &&
                                 ltid_in_bounds_44728)) {
                                // read operands
                                {
                                    x_44725 = ((volatile __local
                                                float *) red_arr_mem_44720)[sext_i32_i64(local_tid_44716) -
                                                                            sext_i32_i64(skip_threads_44731)];
                                }
                                // perform operation
                                {
                                    bool inactive_44732 =
                                         slt64(srem64(sext_i32_i64(local_tid_44716 *
                                                      32 + 32 - 1),
                                                      i32_res_28414),
                                               sext_i32_i64(local_tid_44716 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44716 -
                                                             skip_threads_44731) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44732) {
                                        x_44725 = x_44726;
                                    }
                                    if (!inactive_44732) {
                                        float defunc_1_op_res_44727 = x_44725 +
                                              x_44726;
                                        
                                        x_44725 = defunc_1_op_res_44727;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44718, skip_threads_44731)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44731, local_tid_44716 -
                                      squot32(local_tid_44716, 32) * 32) &&
                                (squot32(local_tid_44716, 32) == 0 &&
                                 ltid_in_bounds_44728)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44720)[sext_i32_i64(local_tid_44716)] =
                                        x_44725;
                                    x_44726 = x_44725;
                                }
                            }
                            if (sle32(wave_sizze_44718, skip_threads_44731)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44731 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44716, 32) == 0 ||
                          !ltid_in_bounds_44728)) {
                        // read operands
                        {
                            x_35905 = x_35904;
                            x_35904 = ((__local
                                        float *) red_arr_mem_44720)[sext_i32_i64(squot32(local_tid_44716,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44733 =
                                 slt64(srem64(sext_i32_i64(local_tid_44716),
                                              i32_res_28414),
                                       sext_i32_i64(local_tid_44716) -
                                       sext_i32_i64(squot32(local_tid_44716,
                                                            32) * 32 - 1));
                            
                            if (inactive_44733) {
                                x_35904 = x_35905;
                            }
                            if (!inactive_44733) {
                                float defunc_1_op_res_35906 = x_35904 + x_35905;
                                
                                x_35904 = defunc_1_op_res_35906;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44720)[sext_i32_i64(local_tid_44716)] =
                                x_35904;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44716, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44720)[sext_i32_i64(local_tid_44716)] =
                            x_35905;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44724) *
                      squot64(segred_group_sizze_35900,
                              segment_sizze_nonzzero_44713) +
                      sext_i32_i64(local_tid_44716), m_28044) &&
                slt64(sext_i32_i64(local_tid_44716),
                      squot64(segred_group_sizze_35900,
                              segment_sizze_nonzzero_44713))) {
                ((__global
                  float *) mem_43456)[sext_i32_i64(virt_group_id_44724) *
                                      squot64(segred_group_sizze_35900,
                                              segment_sizze_nonzzero_44713) +
                                      sext_i32_i64(local_tid_44716)] = ((__local
                                                                         float *) red_arr_mem_44720)[(sext_i32_i64(local_tid_44716) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_44713 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35900
}
__kernel void mainMagnitudezisegred_small_36942(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44902_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44900_backing_aligned_1,
                                                __local volatile
                                                int64_t *red_arr_mem_44898_backing_aligned_2,
                                                int64_t m_28044,
                                                int64_t iota32_arg_28439,
                                                int64_t num_groups_37113,
                                                int64_t segment_sizze_nonzzero_44891,
                                                __global
                                                unsigned char *mem_43462,
                                                __global
                                                unsigned char *mem_43515,
                                                __global
                                                unsigned char *mem_43517,
                                                __global
                                                unsigned char *mem_43521,
                                                __global
                                                unsigned char *mem_43524,
                                                __global
                                                unsigned char *mem_43526,
                                                __global
                                                unsigned char *mem_43528)
{
    #define segred_group_sizze_37112 (mainMagnitudezisegred_group_sizze_36936)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44902_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_44902_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44900_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44900_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_44898_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44898_backing_aligned_2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44893;
    int32_t local_tid_44894;
    int64_t group_sizze_44897;
    int32_t wave_sizze_44896;
    int32_t group_tid_44895;
    
    global_tid_44893 = get_global_id(0);
    local_tid_44894 = get_local_id(0);
    group_sizze_44897 = get_local_size(0);
    wave_sizze_44896 = LOCKSTEP_WIDTH;
    group_tid_44895 = get_group_id(0);
    
    int32_t phys_tid_36942;
    
    phys_tid_36942 = global_tid_44893;
    
    __local char *red_arr_mem_44898;
    
    red_arr_mem_44898 = (__local char *) red_arr_mem_44898_backing_0;
    
    __local char *red_arr_mem_44900;
    
    red_arr_mem_44900 = (__local char *) red_arr_mem_44900_backing_1;
    
    __local char *red_arr_mem_44902;
    
    red_arr_mem_44902 = (__local char *) red_arr_mem_44902_backing_2;
    
    int32_t phys_group_id_44904;
    
    phys_group_id_44904 = get_group_id(0);
    for (int32_t i_44905 = 0; i_44905 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28044,
                                          squot64(segred_group_sizze_37112,
                                                  segment_sizze_nonzzero_44891))) -
                   phys_group_id_44904, sext_i64_i32(num_groups_37113));
         i_44905++) {
        int32_t virt_group_id_44906 = phys_group_id_44904 + i_44905 *
                sext_i64_i32(num_groups_37113);
        int64_t gtid_36933 = squot64(sext_i32_i64(local_tid_44894),
                                     segment_sizze_nonzzero_44891) +
                sext_i32_i64(virt_group_id_44906) *
                squot64(segred_group_sizze_37112, segment_sizze_nonzzero_44891);
        int64_t gtid_36941 = srem64(sext_i32_i64(local_tid_44894),
                                    iota32_arg_28439);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, iota32_arg_28439) && (slt64(gtid_36933,
                                                               m_28044) &&
                                                         slt64(sext_i32_i64(local_tid_44894),
                                                               iota32_arg_28439 *
                                                               squot64(segred_group_sizze_37112,
                                                                       segment_sizze_nonzzero_44891)))) {
                int32_t y_37132 = ((__global int32_t *) mem_43517)[gtid_36933];
                float y_37133 = ((__global float *) mem_43515)[gtid_36933];
                float x_37137 = ((__global float *) mem_43521)[gtid_36933 *
                                                               iota32_arg_28439 +
                                                               gtid_36941];
                float x_37138 = ((__global float *) mem_43462)[gtid_36941];
                int32_t index_primexp_40619 = sext_i64_i32(gtid_36941);
                float defunc_0_f_res_37141 = x_37137 / y_37133;
                bool cond_37142 = slt32(index_primexp_40619, y_37132);
                bool isnan_res_37143;
                
                isnan_res_37143 = futrts_isnan32(defunc_0_f_res_37141);
                
                bool cond_t_res_37144 = !isnan_res_37143;
                bool x_37145 = cond_37142 && cond_t_res_37144;
                float abs_res_37146 = (float) fabs(defunc_0_f_res_37141);
                bool defunc_2_f_res_t_res_37147 = x_37138 < abs_res_37146;
                bool x_37148 = x_37145 && defunc_2_f_res_t_res_37147;
                float defunc_1_f_res_37149;
                
                if (cond_37142) {
                    defunc_1_f_res_37149 = defunc_0_f_res_37141;
                } else {
                    defunc_1_f_res_37149 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      bool *) red_arr_mem_44898)[sext_i32_i64(local_tid_44894)] =
                        x_37148;
                    ((__local
                      int32_t *) red_arr_mem_44900)[sext_i32_i64(local_tid_44894)] =
                        index_primexp_40619;
                    ((__local
                      float *) red_arr_mem_44902)[sext_i32_i64(local_tid_44894)] =
                        defunc_1_f_res_37149;
                }
            } else {
                ((__local
                  bool *) red_arr_mem_44898)[sext_i32_i64(local_tid_44894)] = 0;
                ((__local
                  int32_t *) red_arr_mem_44900)[sext_i32_i64(local_tid_44894)] =
                    -1;
                ((__local
                  float *) red_arr_mem_44902)[sext_i32_i64(local_tid_44894)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, iota32_arg_28439)) {
            // perform segmented scan to imitate reduction
            {
                bool x_37118;
                int32_t x_37119;
                float x_37120;
                bool x_37121;
                int32_t x_37122;
                float x_37123;
                bool x_44907;
                int32_t x_44908;
                float x_44909;
                bool x_44910;
                int32_t x_44911;
                float x_44912;
                bool ltid_in_bounds_44921;
                
                ltid_in_bounds_44921 = slt64(sext_i32_i64(local_tid_44894),
                                             iota32_arg_28439 *
                                             squot64(segred_group_sizze_37112,
                                                     segment_sizze_nonzzero_44891));
                
                int32_t skip_threads_44922;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44921) {
                        x_37121 = ((volatile __local
                                    bool *) red_arr_mem_44898)[sext_i32_i64(local_tid_44894)];
                        x_37122 = ((volatile __local
                                    int32_t *) red_arr_mem_44900)[sext_i32_i64(local_tid_44894)];
                        x_37123 = ((volatile __local
                                    float *) red_arr_mem_44902)[sext_i32_i64(local_tid_44894)];
                        if ((local_tid_44894 - squot32(local_tid_44894, 32) *
                             32) == 0) {
                            x_37118 = x_37121;
                            x_37119 = x_37122;
                            x_37120 = x_37123;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44922 = 1;
                    while (slt32(skip_threads_44922, 32)) {
                        if (sle32(skip_threads_44922, local_tid_44894 -
                                  squot32(local_tid_44894, 32) * 32) &&
                            ltid_in_bounds_44921) {
                            // read operands
                            {
                                x_37118 = ((volatile __local
                                            bool *) red_arr_mem_44898)[sext_i32_i64(local_tid_44894) -
                                                                       sext_i32_i64(skip_threads_44922)];
                                x_37119 = ((volatile __local
                                            int32_t *) red_arr_mem_44900)[sext_i32_i64(local_tid_44894) -
                                                                          sext_i32_i64(skip_threads_44922)];
                                x_37120 = ((volatile __local
                                            float *) red_arr_mem_44902)[sext_i32_i64(local_tid_44894) -
                                                                        sext_i32_i64(skip_threads_44922)];
                            }
                            // perform operation
                            {
                                bool inactive_44923 =
                                     slt64(srem64(sext_i32_i64(local_tid_44894),
                                                  iota32_arg_28439),
                                           sext_i32_i64(local_tid_44894) -
                                           sext_i32_i64(local_tid_44894 -
                                           skip_threads_44922));
                                
                                if (inactive_44923) {
                                    x_37118 = x_37121;
                                    x_37119 = x_37122;
                                    x_37120 = x_37123;
                                }
                                if (!inactive_44923) {
                                    bool defunc_1_op_res_37124;
                                    int32_t defunc_1_op_res_37125;
                                    
                                    if (x_37118) {
                                        defunc_1_op_res_37124 = x_37118;
                                        defunc_1_op_res_37125 = x_37119;
                                    } else {
                                        bool x_37126 = x_37121 && x_37121;
                                        bool x_37127 = !x_37121;
                                        bool y_37128 = x_37118 && x_37127;
                                        bool defunc_1_op_res_f_res_37129 =
                                             x_37126 || y_37128;
                                        int32_t defunc_1_op_res_f_res_37130;
                                        
                                        if (x_37121) {
                                            defunc_1_op_res_f_res_37130 =
                                                x_37122;
                                        } else {
                                            defunc_1_op_res_f_res_37130 =
                                                x_37119;
                                        }
                                        defunc_1_op_res_37124 =
                                            defunc_1_op_res_f_res_37129;
                                        defunc_1_op_res_37125 =
                                            defunc_1_op_res_f_res_37130;
                                    }
                                    
                                    float defunc_1_op_res_37131 = x_37120 +
                                          x_37123;
                                    
                                    x_37118 = defunc_1_op_res_37124;
                                    x_37119 = defunc_1_op_res_37125;
                                    x_37120 = defunc_1_op_res_37131;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44896, skip_threads_44922)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44922, local_tid_44894 -
                                  squot32(local_tid_44894, 32) * 32) &&
                            ltid_in_bounds_44921) {
                            // write result
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_44898)[sext_i32_i64(local_tid_44894)] =
                                    x_37118;
                                x_37121 = x_37118;
                                ((volatile __local
                                  int32_t *) red_arr_mem_44900)[sext_i32_i64(local_tid_44894)] =
                                    x_37119;
                                x_37122 = x_37119;
                                ((volatile __local
                                  float *) red_arr_mem_44902)[sext_i32_i64(local_tid_44894)] =
                                    x_37120;
                                x_37123 = x_37120;
                            }
                        }
                        if (sle32(wave_sizze_44896, skip_threads_44922)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44922 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44894 - squot32(local_tid_44894, 32) * 32) ==
                        31 && ltid_in_bounds_44921) {
                        ((volatile __local
                          bool *) red_arr_mem_44898)[sext_i32_i64(squot32(local_tid_44894,
                                                                          32))] =
                            x_37118;
                        ((volatile __local
                          int32_t *) red_arr_mem_44900)[sext_i32_i64(squot32(local_tid_44894,
                                                                             32))] =
                            x_37119;
                        ((volatile __local
                          float *) red_arr_mem_44902)[sext_i32_i64(squot32(local_tid_44894,
                                                                           32))] =
                            x_37120;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44924;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44894, 32) == 0 &&
                            ltid_in_bounds_44921) {
                            x_44910 = ((volatile __local
                                        bool *) red_arr_mem_44898)[sext_i32_i64(local_tid_44894)];
                            x_44911 = ((volatile __local
                                        int32_t *) red_arr_mem_44900)[sext_i32_i64(local_tid_44894)];
                            x_44912 = ((volatile __local
                                        float *) red_arr_mem_44902)[sext_i32_i64(local_tid_44894)];
                            if ((local_tid_44894 - squot32(local_tid_44894,
                                                           32) * 32) == 0) {
                                x_44907 = x_44910;
                                x_44908 = x_44911;
                                x_44909 = x_44912;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44924 = 1;
                        while (slt32(skip_threads_44924, 32)) {
                            if (sle32(skip_threads_44924, local_tid_44894 -
                                      squot32(local_tid_44894, 32) * 32) &&
                                (squot32(local_tid_44894, 32) == 0 &&
                                 ltid_in_bounds_44921)) {
                                // read operands
                                {
                                    x_44907 = ((volatile __local
                                                bool *) red_arr_mem_44898)[sext_i32_i64(local_tid_44894) -
                                                                           sext_i32_i64(skip_threads_44924)];
                                    x_44908 = ((volatile __local
                                                int32_t *) red_arr_mem_44900)[sext_i32_i64(local_tid_44894) -
                                                                              sext_i32_i64(skip_threads_44924)];
                                    x_44909 = ((volatile __local
                                                float *) red_arr_mem_44902)[sext_i32_i64(local_tid_44894) -
                                                                            sext_i32_i64(skip_threads_44924)];
                                }
                                // perform operation
                                {
                                    bool inactive_44925 =
                                         slt64(srem64(sext_i32_i64(local_tid_44894 *
                                                      32 + 32 - 1),
                                                      iota32_arg_28439),
                                               sext_i32_i64(local_tid_44894 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44894 -
                                                             skip_threads_44924) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44925) {
                                        x_44907 = x_44910;
                                        x_44908 = x_44911;
                                        x_44909 = x_44912;
                                    }
                                    if (!inactive_44925) {
                                        bool defunc_1_op_res_44913;
                                        int32_t defunc_1_op_res_44914;
                                        
                                        if (x_44907) {
                                            defunc_1_op_res_44913 = x_44907;
                                            defunc_1_op_res_44914 = x_44908;
                                        } else {
                                            bool x_44915 = x_44910 && x_44910;
                                            bool x_44916 = !x_44910;
                                            bool y_44917 = x_44907 && x_44916;
                                            bool defunc_1_op_res_f_res_44918 =
                                                 x_44915 || y_44917;
                                            int32_t defunc_1_op_res_f_res_44919;
                                            
                                            if (x_44910) {
                                                defunc_1_op_res_f_res_44919 =
                                                    x_44911;
                                            } else {
                                                defunc_1_op_res_f_res_44919 =
                                                    x_44908;
                                            }
                                            defunc_1_op_res_44913 =
                                                defunc_1_op_res_f_res_44918;
                                            defunc_1_op_res_44914 =
                                                defunc_1_op_res_f_res_44919;
                                        }
                                        
                                        float defunc_1_op_res_44920 = x_44909 +
                                              x_44912;
                                        
                                        x_44907 = defunc_1_op_res_44913;
                                        x_44908 = defunc_1_op_res_44914;
                                        x_44909 = defunc_1_op_res_44920;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44896, skip_threads_44924)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44924, local_tid_44894 -
                                      squot32(local_tid_44894, 32) * 32) &&
                                (squot32(local_tid_44894, 32) == 0 &&
                                 ltid_in_bounds_44921)) {
                                // write result
                                {
                                    ((volatile __local
                                      bool *) red_arr_mem_44898)[sext_i32_i64(local_tid_44894)] =
                                        x_44907;
                                    x_44910 = x_44907;
                                    ((volatile __local
                                      int32_t *) red_arr_mem_44900)[sext_i32_i64(local_tid_44894)] =
                                        x_44908;
                                    x_44911 = x_44908;
                                    ((volatile __local
                                      float *) red_arr_mem_44902)[sext_i32_i64(local_tid_44894)] =
                                        x_44909;
                                    x_44912 = x_44909;
                                }
                            }
                            if (sle32(wave_sizze_44896, skip_threads_44924)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44924 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44894, 32) == 0 ||
                          !ltid_in_bounds_44921)) {
                        // read operands
                        {
                            x_37121 = x_37118;
                            x_37122 = x_37119;
                            x_37123 = x_37120;
                            x_37118 = ((__local
                                        bool *) red_arr_mem_44898)[sext_i32_i64(squot32(local_tid_44894,
                                                                                        32)) -
                                                                   (int64_t) 1];
                            x_37119 = ((__local
                                        int32_t *) red_arr_mem_44900)[sext_i32_i64(squot32(local_tid_44894,
                                                                                           32)) -
                                                                      (int64_t) 1];
                            x_37120 = ((__local
                                        float *) red_arr_mem_44902)[sext_i32_i64(squot32(local_tid_44894,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44926 =
                                 slt64(srem64(sext_i32_i64(local_tid_44894),
                                              iota32_arg_28439),
                                       sext_i32_i64(local_tid_44894) -
                                       sext_i32_i64(squot32(local_tid_44894,
                                                            32) * 32 - 1));
                            
                            if (inactive_44926) {
                                x_37118 = x_37121;
                                x_37119 = x_37122;
                                x_37120 = x_37123;
                            }
                            if (!inactive_44926) {
                                bool defunc_1_op_res_37124;
                                int32_t defunc_1_op_res_37125;
                                
                                if (x_37118) {
                                    defunc_1_op_res_37124 = x_37118;
                                    defunc_1_op_res_37125 = x_37119;
                                } else {
                                    bool x_37126 = x_37121 && x_37121;
                                    bool x_37127 = !x_37121;
                                    bool y_37128 = x_37118 && x_37127;
                                    bool defunc_1_op_res_f_res_37129 =
                                         x_37126 || y_37128;
                                    int32_t defunc_1_op_res_f_res_37130;
                                    
                                    if (x_37121) {
                                        defunc_1_op_res_f_res_37130 = x_37122;
                                    } else {
                                        defunc_1_op_res_f_res_37130 = x_37119;
                                    }
                                    defunc_1_op_res_37124 =
                                        defunc_1_op_res_f_res_37129;
                                    defunc_1_op_res_37125 =
                                        defunc_1_op_res_f_res_37130;
                                }
                                
                                float defunc_1_op_res_37131 = x_37120 + x_37123;
                                
                                x_37118 = defunc_1_op_res_37124;
                                x_37119 = defunc_1_op_res_37125;
                                x_37120 = defunc_1_op_res_37131;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              bool *) red_arr_mem_44898)[sext_i32_i64(local_tid_44894)] =
                                x_37118;
                            ((__local
                              int32_t *) red_arr_mem_44900)[sext_i32_i64(local_tid_44894)] =
                                x_37119;
                            ((__local
                              float *) red_arr_mem_44902)[sext_i32_i64(local_tid_44894)] =
                                x_37120;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44894, 32) == 0) {
                        ((__local
                          bool *) red_arr_mem_44898)[sext_i32_i64(local_tid_44894)] =
                            x_37121;
                        ((__local
                          int32_t *) red_arr_mem_44900)[sext_i32_i64(local_tid_44894)] =
                            x_37122;
                        ((__local
                          float *) red_arr_mem_44902)[sext_i32_i64(local_tid_44894)] =
                            x_37123;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44906) *
                      squot64(segred_group_sizze_37112,
                              segment_sizze_nonzzero_44891) +
                      sext_i32_i64(local_tid_44894), m_28044) &&
                slt64(sext_i32_i64(local_tid_44894),
                      squot64(segred_group_sizze_37112,
                              segment_sizze_nonzzero_44891))) {
                ((__global
                  bool *) mem_43524)[sext_i32_i64(virt_group_id_44906) *
                                     squot64(segred_group_sizze_37112,
                                             segment_sizze_nonzzero_44891) +
                                     sext_i32_i64(local_tid_44894)] = ((__local
                                                                        bool *) red_arr_mem_44898)[(sext_i32_i64(local_tid_44894) +
                                                                                                    (int64_t) 1) *
                                                                                                   segment_sizze_nonzzero_44891 -
                                                                                                   (int64_t) 1];
                ((__global
                  int32_t *) mem_43526)[sext_i32_i64(virt_group_id_44906) *
                                        squot64(segred_group_sizze_37112,
                                                segment_sizze_nonzzero_44891) +
                                        sext_i32_i64(local_tid_44894)] =
                    ((__local
                      int32_t *) red_arr_mem_44900)[(sext_i32_i64(local_tid_44894) +
                                                     (int64_t) 1) *
                                                    segment_sizze_nonzzero_44891 -
                                                    (int64_t) 1];
                ((__global
                  float *) mem_43528)[sext_i32_i64(virt_group_id_44906) *
                                      squot64(segred_group_sizze_37112,
                                              segment_sizze_nonzzero_44891) +
                                      sext_i32_i64(local_tid_44894)] = ((__local
                                                                         float *) red_arr_mem_44902)[(sext_i32_i64(local_tid_44894) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_44891 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_37112
}
"""
# Start of values.py.

# Hacky parser/reader/writer for values written in Futhark syntax.
# Used for reading stdin when compiling standalone programs with the
# Python code generator.

import numpy as np
import string
import struct
import sys

class ReaderInput:
    def __init__(self, f):
        self.f = f
        self.lookahead_buffer = []

    def get_char(self):
        if len(self.lookahead_buffer) == 0:
            return self.f.read(1)
        else:
            c = self.lookahead_buffer[0]
            self.lookahead_buffer = self.lookahead_buffer[1:]
            return c

    def unget_char(self, c):
        self.lookahead_buffer = [c] + self.lookahead_buffer

    def get_chars(self, n):
        n1 = min(n, len(self.lookahead_buffer))
        s = b''.join(self.lookahead_buffer[:n1])
        self.lookahead_buffer = self.lookahead_buffer[n1:]
        n2 = n - n1
        if n2 > 0:
            s += self.f.read(n2)
        return s

    def peek_char(self):
        c = self.get_char()
        if c:
            self.unget_char(c)
        return c

def skip_spaces(f):
    c = f.get_char()
    while c != None:
        if c.isspace():
            c = f.get_char()
        elif c == b'-':
          # May be line comment.
          if f.peek_char() == b'-':
            # Yes, line comment. Skip to end of line.
            while (c != b'\n' and c != None):
              c = f.get_char()
          else:
            break
        else:
          break
    if c:
        f.unget_char(c)

def parse_specific_char(f, expected):
    got = f.get_char()
    if got != expected:
        f.unget_char(got)
        raise ValueError
    return True

def parse_specific_string(f, s):
    # This funky mess is intended, and is caused by the fact that if `type(b) ==
    # bytes` then `type(b[0]) == int`, but we need to match each element with a
    # `bytes`, so therefore we make each character an array element
    b = s.encode('utf8')
    bs = [b[i:i+1] for i in range(len(b))]
    read = []
    try:
        for c in bs:
            parse_specific_char(f, c)
            read.append(c)
        return True
    except ValueError:
        for c in read[::-1]:
            f.unget_char(c)
        raise

def optional(p, *args):
    try:
        return p(*args)
    except ValueError:
        return None

def optional_specific_string(f, s):
    c = f.peek_char()
    # This funky mess is intended, and is caused by the fact that if `type(b) ==
    # bytes` then `type(b[0]) == int`, but we need to match each element with a
    # `bytes`, so therefore we make each character an array element
    b = s.encode('utf8')
    bs = [b[i:i+1] for i in range(len(b))]
    if c == bs[0]:
        return parse_specific_string(f, s)
    else:
        return False

def sepBy(p, sep, *args):
    elems = []
    x = optional(p, *args)
    if x != None:
        elems += [x]
        while optional(sep, *args) != None:
            x = p(*args)
            elems += [x]
    return elems

# Assumes '0x' has already been read
def parse_hex_int(f):
    s = b''
    c = f.get_char()
    while c != None:
        if c in b'01234556789ABCDEFabcdef':
            s += c
            c = f.get_char()
        elif c == b'_':
            c = f.get_char() # skip _
        else:
            f.unget_char(c)
            break
    return str(int(s, 16)).encode('utf8') # ugh

def parse_int(f):
    s = b''
    c = f.get_char()
    if c == b'0' and f.peek_char() in b'xX':
        c = f.get_char() # skip X
        return parse_hex_int(f)
    else:
        while c != None:
            if c.isdigit():
                s += c
                c = f.get_char()
            elif c == b'_':
                c = f.get_char() # skip _
            else:
                f.unget_char(c)
                break
        if len(s) == 0:
            raise ValueError
        return s

def parse_int_signed(f):
    s = b''
    c = f.get_char()

    if c == b'-' and f.peek_char().isdigit():
      return c + parse_int(f)
    else:
      if c != b'+':
          f.unget_char(c)
      return parse_int(f)

def read_str_comma(f):
    skip_spaces(f)
    parse_specific_char(f, b',')
    return b','

def read_str_int(f, s):
    skip_spaces(f)
    x = int(parse_int_signed(f))
    optional_specific_string(f, s)
    return x

def read_str_uint(f, s):
    skip_spaces(f)
    x = int(parse_int(f))
    optional_specific_string(f, s)
    return x

def read_str_i8(f):
    return np.int8(read_str_int(f, 'i8'))
def read_str_i16(f):
    return np.int16(read_str_int(f, 'i16'))
def read_str_i32(f):
    return np.int32(read_str_int(f, 'i32'))
def read_str_i64(f):
    return np.int64(read_str_int(f, 'i64'))

def read_str_u8(f):
    return np.uint8(read_str_int(f, 'u8'))
def read_str_u16(f):
    return np.uint16(read_str_int(f, 'u16'))
def read_str_u32(f):
    return np.uint32(read_str_int(f, 'u32'))
def read_str_u64(f):
    return np.uint64(read_str_int(f, 'u64'))

def read_char(f):
    skip_spaces(f)
    parse_specific_char(f, b'\'')
    c = f.get_char()
    parse_specific_char(f, b'\'')
    return c

def read_str_hex_float(f, sign):
    int_part = parse_hex_int(f)
    parse_specific_char(f, b'.')
    frac_part = parse_hex_int(f)
    parse_specific_char(f, b'p')
    exponent = parse_int(f)

    int_val = int(int_part, 16)
    frac_val = float(int(frac_part, 16)) / (16 ** len(frac_part))
    exp_val = int(exponent)

    total_val = (int_val + frac_val) * (2.0 ** exp_val)
    if sign == b'-':
        total_val = -1 * total_val

    return float(total_val)


def read_str_decimal(f):
    skip_spaces(f)
    c = f.get_char()
    if (c == b'-'):
      sign = b'-'
    else:
      f.unget_char(c)
      sign = b''

    # Check for hexadecimal float
    c = f.get_char()
    if (c == '0' and (f.peek_char() in ['x', 'X'])):
        f.get_char()
        return read_str_hex_float(f, sign)
    else:
        f.unget_char(c)

    bef = optional(parse_int, f)
    if bef == None:
        bef = b'0'
        parse_specific_char(f, b'.')
        aft = parse_int(f)
    elif optional(parse_specific_char, f, b'.'):
        aft = parse_int(f)
    else:
        aft = b'0'
    if (optional(parse_specific_char, f, b'E') or
        optional(parse_specific_char, f, b'e')):
        expt = parse_int_signed(f)
    else:
        expt = b'0'
    return float(sign + bef + b'.' + aft + b'E' + expt)

def read_str_f32(f):
    skip_spaces(f)
    try:
        parse_specific_string(f, 'f32.nan')
        return np.float32(np.nan)
    except ValueError:
        try:
            parse_specific_string(f, 'f32.inf')
            return np.float32(np.inf)
        except ValueError:
            try:
               parse_specific_string(f, '-f32.inf')
               return np.float32(-np.inf)
            except ValueError:
               x = read_str_decimal(f)
               optional_specific_string(f, 'f32')
               return x

def read_str_f64(f):
    skip_spaces(f)
    try:
        parse_specific_string(f, 'f64.nan')
        return np.float64(np.nan)
    except ValueError:
        try:
            parse_specific_string(f, 'f64.inf')
            return np.float64(np.inf)
        except ValueError:
            try:
               parse_specific_string(f, '-f64.inf')
               return np.float64(-np.inf)
            except ValueError:
               x = read_str_decimal(f)
               optional_specific_string(f, 'f64')
               return x

def read_str_bool(f):
    skip_spaces(f)
    if f.peek_char() == b't':
        parse_specific_string(f, 'true')
        return True
    elif f.peek_char() == b'f':
        parse_specific_string(f, 'false')
        return False
    else:
        raise ValueError

def read_str_empty_array(f, type_name, rank):
    parse_specific_string(f, 'empty')
    parse_specific_char(f, b'(')
    dims = []
    for i in range(rank):
        parse_specific_string(f, '[')
        dims += [int(parse_int(f))]
        parse_specific_string(f, ']')
    if np.product(dims) != 0:
        raise ValueError
    parse_specific_string(f, type_name)
    parse_specific_char(f, b')')

    return tuple(dims)

def read_str_array_elems(f, elem_reader, type_name, rank):
    skip_spaces(f)
    try:
        parse_specific_char(f, b'[')
    except ValueError:
        return read_str_empty_array(f, type_name, rank)
    else:
        xs = sepBy(elem_reader, read_str_comma, f)
        skip_spaces(f)
        parse_specific_char(f, b']')
        return xs

def read_str_array_helper(f, elem_reader, type_name, rank):
    def nested_row_reader(_):
        return read_str_array_helper(f, elem_reader, type_name, rank-1)
    if rank == 1:
        row_reader = elem_reader
    else:
        row_reader = nested_row_reader
    return read_str_array_elems(f, row_reader, type_name, rank)

def expected_array_dims(l, rank):
  if rank > 1:
      n = len(l)
      if n == 0:
          elem = []
      else:
          elem = l[0]
      return [n] + expected_array_dims(elem, rank-1)
  else:
      return [len(l)]

def verify_array_dims(l, dims):
    if dims[0] != len(l):
        raise ValueError
    if len(dims) > 1:
        for x in l:
            verify_array_dims(x, dims[1:])

def read_str_array(f, elem_reader, type_name, rank, bt):
    elems = read_str_array_helper(f, elem_reader, type_name, rank)
    if type(elems) == tuple:
        # Empty array
        return np.empty(elems, dtype=bt)
    else:
        dims = expected_array_dims(elems, rank)
        verify_array_dims(elems, dims)
        return np.array(elems, dtype=bt)

################################################################################

READ_BINARY_VERSION = 2

# struct format specified at
# https://docs.python.org/2/library/struct.html#format-characters

def mk_bin_scalar_reader(t):
    def bin_reader(f):
        fmt = FUTHARK_PRIMTYPES[t]['bin_format']
        size = FUTHARK_PRIMTYPES[t]['size']
        return struct.unpack('<' + fmt, f.get_chars(size))[0]
    return bin_reader

read_bin_i8 = mk_bin_scalar_reader('i8')
read_bin_i16 = mk_bin_scalar_reader('i16')
read_bin_i32 = mk_bin_scalar_reader('i32')
read_bin_i64 = mk_bin_scalar_reader('i64')

read_bin_u8 = mk_bin_scalar_reader('u8')
read_bin_u16 = mk_bin_scalar_reader('u16')
read_bin_u32 = mk_bin_scalar_reader('u32')
read_bin_u64 = mk_bin_scalar_reader('u64')

read_bin_f32 = mk_bin_scalar_reader('f32')
read_bin_f64 = mk_bin_scalar_reader('f64')

read_bin_bool = mk_bin_scalar_reader('bool')

def read_is_binary(f):
    skip_spaces(f)
    c = f.get_char()
    if c == b'b':
        bin_version = read_bin_u8(f)
        if bin_version != READ_BINARY_VERSION:
            panic(1, "binary-input: File uses version %i, but I only understand version %i.\n",
                  bin_version, READ_BINARY_VERSION)
        return True
    else:
        f.unget_char(c)
        return False

FUTHARK_PRIMTYPES = {
    'i8':  {'binname' : b"  i8",
            'size' : 1,
            'bin_reader': read_bin_i8,
            'str_reader': read_str_i8,
            'bin_format': 'b',
            'numpy_type': np.int8 },

    'i16': {'binname' : b" i16",
            'size' : 2,
            'bin_reader': read_bin_i16,
            'str_reader': read_str_i16,
            'bin_format': 'h',
            'numpy_type': np.int16 },

    'i32': {'binname' : b" i32",
            'size' : 4,
            'bin_reader': read_bin_i32,
            'str_reader': read_str_i32,
            'bin_format': 'i',
            'numpy_type': np.int32 },

    'i64': {'binname' : b" i64",
            'size' : 8,
            'bin_reader': read_bin_i64,
            'str_reader': read_str_i64,
            'bin_format': 'q',
            'numpy_type': np.int64},

    'u8':  {'binname' : b"  u8",
            'size' : 1,
            'bin_reader': read_bin_u8,
            'str_reader': read_str_u8,
            'bin_format': 'B',
            'numpy_type': np.uint8 },

    'u16': {'binname' : b" u16",
            'size' : 2,
            'bin_reader': read_bin_u16,
            'str_reader': read_str_u16,
            'bin_format': 'H',
            'numpy_type': np.uint16 },

    'u32': {'binname' : b" u32",
            'size' : 4,
            'bin_reader': read_bin_u32,
            'str_reader': read_str_u32,
            'bin_format': 'I',
            'numpy_type': np.uint32 },

    'u64': {'binname' : b" u64",
            'size' : 8,
            'bin_reader': read_bin_u64,
            'str_reader': read_str_u64,
            'bin_format': 'Q',
            'numpy_type': np.uint64 },

    'f32': {'binname' : b" f32",
            'size' : 4,
            'bin_reader': read_bin_f32,
            'str_reader': read_str_f32,
            'bin_format': 'f',
            'numpy_type': np.float32 },

    'f64': {'binname' : b" f64",
            'size' : 8,
            'bin_reader': read_bin_f64,
            'str_reader': read_str_f64,
            'bin_format': 'd',
            'numpy_type': np.float64 },

    'bool': {'binname' : b"bool",
             'size' : 1,
             'bin_reader': read_bin_bool,
             'str_reader': read_str_bool,
             'bin_format': 'b',
             'numpy_type': np.bool }
}

def read_bin_read_type(f):
    read_binname = f.get_chars(4)

    for (k,v) in FUTHARK_PRIMTYPES.items():
        if v['binname'] == read_binname:
            return k
    panic(1, "binary-input: Did not recognize the type '%s'.\n", read_binname)

def numpy_type_to_type_name(t):
    for (k,v) in FUTHARK_PRIMTYPES.items():
        if v['numpy_type'] == t:
            return k
    raise Exception('Unknown Numpy type: {}'.format(t))

def read_bin_ensure_scalar(f, expected_type):
  dims = read_bin_i8(f)

  if dims != 0:
      panic(1, "binary-input: Expected scalar (0 dimensions), but got array with %i dimensions.\n", dims)

  bin_type = read_bin_read_type(f)
  if bin_type != expected_type:
      panic(1, "binary-input: Expected scalar of type %s but got scalar of type %s.\n",
            expected_type, bin_type)

# ------------------------------------------------------------------------------
# General interface for reading Primitive Futhark Values
# ------------------------------------------------------------------------------

def read_scalar(f, ty):
    if read_is_binary(f):
        read_bin_ensure_scalar(f, ty)
        return FUTHARK_PRIMTYPES[ty]['bin_reader'](f)
    return FUTHARK_PRIMTYPES[ty]['str_reader'](f)

def read_array(f, expected_type, rank):
    if not read_is_binary(f):
        str_reader = FUTHARK_PRIMTYPES[expected_type]['str_reader']
        return read_str_array(f, str_reader, expected_type, rank,
                              FUTHARK_PRIMTYPES[expected_type]['numpy_type'])

    bin_rank = read_bin_u8(f)

    if bin_rank != rank:
        panic(1, "binary-input: Expected %i dimensions, but got array with %i dimensions.\n",
              rank, bin_rank)

    bin_type_enum = read_bin_read_type(f)
    if expected_type != bin_type_enum:
        panic(1, "binary-input: Expected %iD-array with element type '%s' but got %iD-array with element type '%s'.\n",
              rank, expected_type, bin_rank, bin_type_enum)

    shape = []
    elem_count = 1
    for i in range(rank):
        bin_size = read_bin_u64(f)
        elem_count *= bin_size
        shape.append(bin_size)

    bin_fmt = FUTHARK_PRIMTYPES[bin_type_enum]['bin_format']

    # We first read the expected number of types into a bytestring,
    # then use np.fromstring.  This is because np.fromfile does not
    # work on things that are insufficiently file-like, like a network
    # stream.
    bytes = f.get_chars(elem_count * FUTHARK_PRIMTYPES[expected_type]['size'])
    arr = np.fromstring(bytes, dtype=FUTHARK_PRIMTYPES[bin_type_enum]['numpy_type'])
    arr.shape = shape

    return arr

if sys.version_info >= (3,0):
    input_reader = ReaderInput(sys.stdin.buffer)
else:
    input_reader = ReaderInput(sys.stdin)

import re

def read_value(type_desc, reader=input_reader):
    """Read a value of the given type.  The type is a string
representation of the Futhark type."""
    m = re.match(r'((?:\[\])*)([a-z0-9]+)$', type_desc)
    if m:
        dims = int(len(m.group(1))/2)
        basetype = m.group(2)
        assert basetype in FUTHARK_PRIMTYPES, "Unknown type: {}".format(type_desc)
        if dims > 0:
            return read_array(reader, basetype, dims)
        else:
            return read_scalar(reader, basetype)
        return (dims, basetype)

def end_of_input(entry, f=input_reader):
    skip_spaces(f)
    if f.get_char() != b'':
        panic(1, "Expected EOF on stdin after reading input for \"%s\".", entry)

def write_value_text(v, out=sys.stdout):
    if type(v) == np.uint8:
        out.write("%uu8" % v)
    elif type(v) == np.uint16:
        out.write("%uu16" % v)
    elif type(v) == np.uint32:
        out.write("%uu32" % v)
    elif type(v) == np.uint64:
        out.write("%uu64" % v)
    elif type(v) == np.int8:
        out.write("%di8" % v)
    elif type(v) == np.int16:
        out.write("%di16" % v)
    elif type(v) == np.int32:
        out.write("%di32" % v)
    elif type(v) == np.int64:
        out.write("%di64" % v)
    elif type(v) in [np.bool, np.bool_]:
        if v:
            out.write("true")
        else:
            out.write("false")
    elif type(v) == np.float32:
        if np.isnan(v):
            out.write('f32.nan')
        elif np.isinf(v):
            if v >= 0:
                out.write('f32.inf')
            else:
                out.write('-f32.inf')
        else:
            out.write("%.6ff32" % v)
    elif type(v) == np.float64:
        if np.isnan(v):
            out.write('f64.nan')
        elif np.isinf(v):
            if v >= 0:
                out.write('f64.inf')
            else:
                out.write('-f64.inf')
        else:
            out.write("%.6ff64" % v)
    elif type(v) == np.ndarray:
        if np.product(v.shape) == 0:
            tname = numpy_type_to_type_name(v.dtype)
            out.write('empty({}{})'.format(''.join(['[{}]'.format(d)
                                                    for d in v.shape]), tname))
        else:
            first = True
            out.write('[')
            for x in v:
                if not first: out.write(', ')
                first = False
                write_value(x, out=out)
            out.write(']')
    else:
        raise Exception("Cannot print value of type {}: {}".format(type(v), v))

type_strs = { np.dtype('int8'): b'  i8',
              np.dtype('int16'): b' i16',
              np.dtype('int32'): b' i32',
              np.dtype('int64'): b' i64',
              np.dtype('uint8'): b'  u8',
              np.dtype('uint16'): b' u16',
              np.dtype('uint32'): b' u32',
              np.dtype('uint64'): b' u64',
              np.dtype('float32'): b' f32',
              np.dtype('float64'): b' f64',
              np.dtype('bool'): b'bool'}

def construct_binary_value(v):
    t = v.dtype
    shape = v.shape

    elems = 1
    for d in shape:
        elems *= d

    num_bytes = 1 + 1 + 1 + 4 + len(shape) * 8 + elems * t.itemsize
    bytes = bytearray(num_bytes)
    bytes[0] = np.int8(ord('b'))
    bytes[1] = 2
    bytes[2] = np.int8(len(shape))
    bytes[3:7] = type_strs[t]

    for i in range(len(shape)):
        bytes[7+i*8:7+(i+1)*8] = np.int64(shape[i]).tostring()

    bytes[7+len(shape)*8:] = np.ascontiguousarray(v).tostring()

    return bytes

def write_value_binary(v, out=sys.stdout):
    if sys.version_info >= (3,0):
        out = out.buffer
    out.write(construct_binary_value(v))

def write_value(v, out=sys.stdout, binary=False):
    if binary:
        return write_value_binary(v, out=out)
    else:
        return write_value_text(v, out=out)

# End of values.py.
# Start of memory.py.

import ctypes as ct

def addressOffset(x, offset, bt):
  return ct.cast(ct.addressof(x.contents)+int(offset), ct.POINTER(bt))

def allocateMem(size):
  return ct.cast((ct.c_byte * max(0,size))(), ct.POINTER(ct.c_byte))

# Copy an array if its is not-None.  This is important for treating
# Numpy arrays as flat memory, but has some overhead.
def normaliseArray(x):
  if (x.base is x) or (x.base is None):
    return x
  else:
    return x.copy()

def unwrapArray(x):
  return normaliseArray(x).ctypes.data_as(ct.POINTER(ct.c_byte))

def createArray(x, shape):
  # HACK: np.ctypeslib.as_array may fail if the shape contains zeroes,
  # for some reason.
  if any(map(lambda x: x == 0, shape)):
      return np.ndarray(shape, dtype=x._type_)
  else:
      return np.ctypeslib.as_array(x, shape=shape)

def indexArray(x, offset, bt, nptype):
  return nptype(addressOffset(x, offset*ct.sizeof(bt), bt)[0])

def writeScalarArray(x, offset, v):
  ct.memmove(ct.addressof(x.contents)+int(offset)*ct.sizeof(v), ct.addressof(v), ct.sizeof(v))

# An opaque Futhark value.
class opaque(object):
  def __init__(self, desc, *payload):
    self.data = payload
    self.desc = desc

  def __repr__(self):
    return "<opaque Futhark value of type {}>".format(self.desc)

# End of memory.py.
# Start of panic.py.

def panic(exitcode, fmt, *args):
    sys.stderr.write('%s: ' % sys.argv[0])
    sys.stderr.write(fmt % args)
    sys.stderr.write('\n')
    sys.exit(exitcode)

# End of panic.py.
# Start of tuning.py

def read_tuning_file(kvs, f):
    for line in f.read().splitlines():
        size, value = line.split('=')
        kvs[size] = int(value)
    return kvs

# End of tuning.py.
# Start of scalar.py.

import numpy as np
import math
import struct

def intlit(t, x):
  if t == np.int8:
    return np.int8(x)
  elif t == np.int16:
    return np.int16(x)
  elif t == np.int32:
    return np.int32(x)
  else:
    return np.int64(x)

def signed(x):
  if type(x) == np.uint8:
    return np.int8(x)
  elif type(x) == np.uint16:
    return np.int16(x)
  elif type(x) == np.uint32:
    return np.int32(x)
  else:
    return np.int64(x)

def unsigned(x):
  if type(x) == np.int8:
    return np.uint8(x)
  elif type(x) == np.int16:
    return np.uint16(x)
  elif type(x) == np.int32:
    return np.uint32(x)
  else:
    return np.uint64(x)

def shlN(x,y):
  return x << y

def ashrN(x,y):
  return x >> y

# Python is so slow that we just make all the unsafe operations safe,
# always.

def sdivN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return x // y

def sdiv_upN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return (x+y-intlit(type(x), 1)) // y

def smodN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return x % y

def udivN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed(unsigned(x) // unsigned(y))

def udiv_upN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed((unsigned(x)+unsigned(y)-unsigned(intlit(type(x),1))) // unsigned(y))

def umodN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed(unsigned(x) % unsigned(y))

def squotN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return np.floor_divide(np.abs(x), np.abs(y)) * np.sign(x) * np.sign(y)

def sremN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return np.remainder(np.abs(x), np.abs(y)) * np.sign(x)

def sminN(x,y):
  return min(x,y)

def smaxN(x,y):
  return max(x,y)

def uminN(x,y):
  return signed(min(unsigned(x),unsigned(y)))

def umaxN(x,y):
  return signed(max(unsigned(x),unsigned(y)))

def fminN(x,y):
  return min(x,y)

def fmaxN(x,y):
  return max(x,y)

def powN(x,y):
  return x ** y

def fpowN(x,y):
  return x ** y

def sleN(x,y):
  return x <= y

def sltN(x,y):
  return x < y

def uleN(x,y):
  return unsigned(x) <= unsigned(y)

def ultN(x,y):
  return unsigned(x) < unsigned(y)

def lshr8(x,y):
  return np.int8(np.uint8(x) >> np.uint8(y))

def lshr16(x,y):
  return np.int16(np.uint16(x) >> np.uint16(y))

def lshr32(x,y):
  return np.int32(np.uint32(x) >> np.uint32(y))

def lshr64(x,y):
  return np.int64(np.uint64(x) >> np.uint64(y))

def sext_T_i8(x):
  return np.int8(x)

def sext_T_i16(x):
  return np.int16(x)

def sext_T_i32(x):
  return np.int32(x)

def sext_T_i64(x):
  return np.int64(x)

def itob_T_bool(x):
  return np.bool(x)

def btoi_bool_i8(x):
  return np.int8(x)

def btoi_bool_i16(x):
  return np.int8(x)

def btoi_bool_i32(x):
  return np.int8(x)

def btoi_bool_i64(x):
  return np.int8(x)

def zext_i8_i8(x):
  return np.int8(np.uint8(x))

def zext_i8_i16(x):
  return np.int16(np.uint8(x))

def zext_i8_i32(x):
  return np.int32(np.uint8(x))

def zext_i8_i64(x):
  return np.int64(np.uint8(x))

def zext_i16_i8(x):
  return np.int8(np.uint16(x))

def zext_i16_i16(x):
  return np.int16(np.uint16(x))

def zext_i16_i32(x):
  return np.int32(np.uint16(x))

def zext_i16_i64(x):
  return np.int64(np.uint16(x))

def zext_i32_i8(x):
  return np.int8(np.uint32(x))

def zext_i32_i16(x):
  return np.int16(np.uint32(x))

def zext_i32_i32(x):
  return np.int32(np.uint32(x))

def zext_i32_i64(x):
  return np.int64(np.uint32(x))

def zext_i64_i8(x):
  return np.int8(np.uint64(x))

def zext_i64_i16(x):
  return np.int16(np.uint64(x))

def zext_i64_i32(x):
  return np.int32(np.uint64(x))

def zext_i64_i64(x):
  return np.int64(np.uint64(x))

sdiv8 = sdiv16 = sdiv32 = sdiv64 = sdivN
sdiv_up8 = sdiv1_up6 = sdiv_up32 = sdiv_up64 = sdiv_upN
sdiv_safe8 = sdiv1_safe6 = sdiv_safe32 = sdiv_safe64 = sdivN
sdiv_up_safe8 = sdiv_up1_safe6 = sdiv_up_safe32 = sdiv_up_safe64 = sdiv_upN
smod8 = smod16 = smod32 = smod64 = smodN
smod_safe8 = smod_safe16 = smod_safe32 = smod_safe64 = smodN
udiv8 = udiv16 = udiv32 = udiv64 = udivN
udiv_up8 = udiv_up16 = udiv_up32 = udiv_up64 = udivN
udiv_safe8 = udiv_safe16 = udiv_safe32 = udiv_safe64 = udiv_upN
udiv_up_safe8 = udiv_up_safe16 = udiv_up_safe32 = udiv_up_safe64 = udiv_upN
umod8 = umod16 = umod32 = umod64 = umodN
umod_safe8 = umod_safe16 = umod_safe32 = umod_safe64 = umodN
squot8 = squot16 = squot32 = squot64 = squotN
squot_safe8 = squot_safe16 = squot_safe32 = squot_safe64 = squotN
srem8 = srem16 = srem32 = srem64 = sremN
srem_safe8 = srem_safe16 = srem_safe32 = srem_safe64 = sremN

shl8 = shl16 = shl32 = shl64 = shlN
ashr8 = ashr16 = ashr32 = ashr64 = ashrN
smax8 = smax16 = smax32 = smax64 = smaxN
smin8 = smin16 = smin32 = smin64 = sminN
umax8 = umax16 = umax32 = umax64 = umaxN
umin8 = umin16 = umin32 = umin64 = uminN
pow8 = pow16 = pow32 = pow64 = powN
fpow32 = fpow64 = fpowN
fmax32 = fmax64 = fmaxN
fmin32 = fmin64 = fminN
sle8 = sle16 = sle32 = sle64 = sleN
slt8 = slt16 = slt32 = slt64 = sltN
ule8 = ule16 = ule32 = ule64 = uleN
ult8 = ult16 = ult32 = ult64 = ultN
sext_i8_i8 = sext_i16_i8 = sext_i32_i8 = sext_i64_i8 = sext_T_i8
sext_i8_i16 = sext_i16_i16 = sext_i32_i16 = sext_i64_i16 = sext_T_i16
sext_i8_i32 = sext_i16_i32 = sext_i32_i32 = sext_i64_i32 = sext_T_i32
sext_i8_i64 = sext_i16_i64 = sext_i32_i64 = sext_i64_i64 = sext_T_i64
itob_i8_bool = itob_i16_bool = itob_i32_bool = itob_i64_bool = itob_T_bool

def clz_T(x):
  n = np.int32(0)
  bits = x.itemsize * 8
  for i in range(bits):
    if x < 0:
      break
    n += 1
    x <<= np.int8(1)
  return n

def ctz_T(x):
  n = np.int32(0)
  bits = x.itemsize * 8
  for i in range(bits):
    if (x & 1) == 1:
      break
    n += 1
    x >>= np.int8(1)
  return n

def popc_T(x):
  c = np.int32(0)
  while x != 0:
    x &= x - np.int8(1)
    c += np.int8(1)
  return c

futhark_popc8 = futhark_popc16 = futhark_popc32 = futhark_popc64 = popc_T
futhark_clzz8 = futhark_clzz16 = futhark_clzz32 = futhark_clzz64 = clz_T
futhark_ctzz8 = futhark_ctzz16 = futhark_ctzz32 = futhark_ctzz64 = ctz_T

def ssignum(x):
  return np.sign(x)

def usignum(x):
  if x < 0:
    return ssignum(-x)
  else:
    return ssignum(x)

def sitofp_T_f32(x):
  return np.float32(x)
sitofp_i8_f32 = sitofp_i16_f32 = sitofp_i32_f32 = sitofp_i64_f32 = sitofp_T_f32

def sitofp_T_f64(x):
  return np.float64(x)
sitofp_i8_f64 = sitofp_i16_f64 = sitofp_i32_f64 = sitofp_i64_f64 = sitofp_T_f64

def uitofp_T_f32(x):
  return np.float32(unsigned(x))
uitofp_i8_f32 = uitofp_i16_f32 = uitofp_i32_f32 = uitofp_i64_f32 = uitofp_T_f32

def uitofp_T_f64(x):
  return np.float64(unsigned(x))
uitofp_i8_f64 = uitofp_i16_f64 = uitofp_i32_f64 = uitofp_i64_f64 = uitofp_T_f64

def fptosi_T_i8(x):
  return np.int8(np.trunc(x))
fptosi_f32_i8 = fptosi_f64_i8 = fptosi_T_i8

def fptosi_T_i16(x):
  return np.int16(np.trunc(x))
fptosi_f32_i16 = fptosi_f64_i16 = fptosi_T_i16

def fptosi_T_i32(x):
  return np.int32(np.trunc(x))
fptosi_f32_i32 = fptosi_f64_i32 = fptosi_T_i32

def fptosi_T_i64(x):
  return np.int64(np.trunc(x))
fptosi_f32_i64 = fptosi_f64_i64 = fptosi_T_i64

def fptoui_T_i8(x):
  return np.uint8(np.trunc(x))
fptoui_f32_i8 = fptoui_f64_i8 = fptoui_T_i8

def fptoui_T_i16(x):
  return np.uint16(np.trunc(x))
fptoui_f32_i16 = fptoui_f64_i16 = fptoui_T_i16

def fptoui_T_i32(x):
  return np.uint32(np.trunc(x))
fptoui_f32_i32 = fptoui_f64_i32 = fptoui_T_i32

def fptoui_T_i64(x):
  return np.uint64(np.trunc(x))
fptoui_f32_i64 = fptoui_f64_i64 = fptoui_T_i64

def fpconv_f32_f64(x):
  return np.float64(x)

def fpconv_f64_f32(x):
  return np.float32(x)

def futhark_mul_hi8(a, b):
  a = np.uint64(np.uint8(a))
  b = np.uint64(np.uint8(b))
  return np.int8((a*b) >> np.uint64(8))

def futhark_mul_hi16(a, b):
  a = np.uint64(np.uint16(a))
  b = np.uint64(np.uint16(b))
  return np.int16((a*b) >> np.uint64(16))

def futhark_mul_hi32(a, b):
  a = np.uint64(np.uint32(a))
  b = np.uint64(np.uint32(b))
  return np.int32((a*b) >> np.uint64(32))

# This one is done with arbitrary-precision integers.
def futhark_mul_hi64(a, b):
  a = int(np.uint64(a))
  b = int(np.uint64(b))
  return np.int64(np.uint64(a*b >> 64))

def futhark_mad_hi8(a, b, c):
  return futhark_mul_hi8(a,b) + c

def futhark_mad_hi16(a, b, c):
  return futhark_mul_hi16(a,b) + c

def futhark_mad_hi32(a, b, c):
  return futhark_mul_hi32(a,b) + c

def futhark_mad_hi64(a, b, c):
  return futhark_mul_hi64(a,b) + c

def futhark_log64(x):
  return np.float64(np.log(x))

def futhark_log2_64(x):
  return np.float64(np.log2(x))

def futhark_log10_64(x):
  return np.float64(np.log10(x))

def futhark_sqrt64(x):
  return np.sqrt(x)

def futhark_exp64(x):
  return np.exp(x)

def futhark_cos64(x):
  return np.cos(x)

def futhark_sin64(x):
  return np.sin(x)

def futhark_tan64(x):
  return np.tan(x)

def futhark_acos64(x):
  return np.arccos(x)

def futhark_asin64(x):
  return np.arcsin(x)

def futhark_atan64(x):
  return np.arctan(x)

def futhark_cosh64(x):
  return np.cosh(x)

def futhark_sinh64(x):
  return np.sinh(x)

def futhark_tanh64(x):
  return np.tanh(x)

def futhark_acosh64(x):
  return np.arccosh(x)

def futhark_asinh64(x):
  return np.arcsinh(x)

def futhark_atanh64(x):
  return np.arctanh(x)

def futhark_atan2_64(x, y):
  return np.arctan2(x, y)

def futhark_gamma64(x):
  return np.float64(math.gamma(x))

def futhark_lgamma64(x):
  return np.float64(math.lgamma(x))

def futhark_round64(x):
  return np.round(x)

def futhark_ceil64(x):
  return np.ceil(x)

def futhark_floor64(x):
  return np.floor(x)

def futhark_isnan64(x):
  return np.isnan(x)

def futhark_isinf64(x):
  return np.isinf(x)

def futhark_to_bits64(x):
  s = struct.pack('>d', x)
  return np.int64(struct.unpack('>q', s)[0])

def futhark_from_bits64(x):
  s = struct.pack('>q', x)
  return np.float64(struct.unpack('>d', s)[0])

def futhark_log32(x):
  return np.float32(np.log(x))

def futhark_log2_32(x):
  return np.float32(np.log2(x))

def futhark_log10_32(x):
  return np.float32(np.log10(x))

def futhark_sqrt32(x):
  return np.float32(np.sqrt(x))

def futhark_exp32(x):
  return np.exp(x)

def futhark_cos32(x):
  return np.cos(x)

def futhark_sin32(x):
  return np.sin(x)

def futhark_tan32(x):
  return np.tan(x)

def futhark_acos32(x):
  return np.arccos(x)

def futhark_asin32(x):
  return np.arcsin(x)

def futhark_atan32(x):
  return np.arctan(x)

def futhark_cosh32(x):
  return np.cosh(x)

def futhark_sinh32(x):
  return np.sinh(x)

def futhark_tanh32(x):
  return np.tanh(x)

def futhark_acosh32(x):
  return np.arccosh(x)

def futhark_asinh32(x):
  return np.arcsinh(x)

def futhark_atanh32(x):
  return np.arctanh(x)

def futhark_atan2_32(x, y):
  return np.arctan2(x, y)

def futhark_gamma32(x):
  return np.float32(math.gamma(x))

def futhark_lgamma32(x):
  return np.float32(math.lgamma(x))

def futhark_round32(x):
  return np.round(x)

def futhark_ceil32(x):
  return np.ceil(x)

def futhark_floor32(x):
  return np.floor(x)

def futhark_isnan32(x):
  return np.isnan(x)

def futhark_isinf32(x):
  return np.isinf(x)

def futhark_to_bits32(x):
  s = struct.pack('>f', x)
  return np.int32(struct.unpack('>l', s)[0])

def futhark_from_bits32(x):
  s = struct.pack('>l', x)
  return np.float32(struct.unpack('>f', s)[0])

def futhark_lerp32(v0, v1, t):
  return v0 + (v1-v0)*t

def futhark_lerp64(v0, v1, t):
  return v0 + (v1-v0)*t

def futhark_mad32(a, b, c):
  return a * b + c

def futhark_mad64(a, b, c):
  return a * b + c

def futhark_fma32(a, b, c):
  return a * b + c

def futhark_fma64(a, b, c):
  return a * b + c

# End of scalar.py.
# Start of server.py

import sys
import time

class Server:
    def __init__(self, ctx):
        self._ctx = ctx
        self._vars = {}

    class Failure(BaseException):
        def __init__(self, msg):
            self.msg = msg

    def _get_arg(self, args, i):
        if i < len(args):
            return args[i]
        else:
            raise self.Failure('Insufficient command args')

    def _get_entry_point(self, entry):
        if entry in self._ctx.entry_points:
            return self._ctx.entry_points[entry]
        else:
            raise self.Failure('Unknown entry point: %s' % entry)

    def _check_var(self, vname):
        if not vname in self._vars:
            raise self.Failure('Unknown variable: %s' % vname)

    def _get_var(self, vname):
        self._check_var(vname)
        return self._vars[vname]

    def _cmd_inputs(self, args):
        entry = self._get_arg(args, 0)
        for t in self._get_entry_point(entry)[0]:
            print(t)

    def _cmd_outputs(self, args):
        entry = self._get_arg(args, 0)
        for t in self._get_entry_point(entry)[1]:
            print(t)

    def _cmd_dummy(self, args):
        pass

    def _cmd_free(self, args):
        for vname in args:
            self._check_var(vname)
            del self._vars[vname]

    def _cmd_call(self, args):
        entry = self._get_entry_point(self._get_arg(args, 0))
        num_ins = len(entry[0])
        num_outs = len(entry[1])

        if len(args) != 1 + num_outs + num_ins:
            raise self.Failure('Invalid argument count, expected %d')

        out_vnames = args[1:num_outs+1]

        for out_vname in out_vnames:
            if out_vname in self._vars:
                raise self.Failure('Variable already exists: %s' % out_vname)

        in_vnames = args[1+num_outs:]
        ins = [ self._get_var(in_vname) for in_vname in in_vnames ]

        try:
            (runtime, vals) = getattr(self._ctx, args[0])(*ins)
        except Exception as e:
            raise self.Failure(str(e))

        print('runtime: %d' % runtime)

        if num_outs == 1:
            self._vars[out_vnames[0]] = vals
        else:
            for (out_vname, val) in zip(out_vnames, vals):
                self._vars[out_vname] = val

    def _cmd_store(self, args):
        fname = self._get_arg(args, 0)

        with open(fname, 'wb') as f:
            for i in range(1, len(args)):
                vname = args[i]
                value = self._get_var(vname)
                # In case we are using the PyOpenCL backend, we first
                # need to convert OpenCL arrays to ordinary NumPy
                # arrays.  We do this in a nasty way.
                if isinstance(value, np.number) or isinstance(value, np.bool) or isinstance(value, np.bool_) or isinstance(value, np.ndarray):
                    # Ordinary NumPy value.
                    f.write(construct_binary_value(self._vars[vname]))
                else:
                    # Assuming PyOpenCL array.
                    f.write(construct_binary_value(self._vars[vname].get()))

    def _cmd_restore(self, args):
        if len(args) % 2 == 0:
            raise self.Failure('Invalid argument count')

        fname = args[0]
        args = args[1:]

        with open(fname, 'rb') as f:
            reader = ReaderInput(f)
            while args != []:
                vname = args[0]
                typename = args[1]
                args = args[2:]

                if vname in self._vars:
                    raise self.Failure('Variable already exists: %s' % vname)

                try:
                    self._vars[vname] = read_value(typename, reader)
                except ValueError:
                    raise self.Failure('Failed to restore variable %s.\n'
                                       'Possibly malformed data in %s.\n'
                                       % (vname, fname))

            skip_spaces(reader)
            if reader.get_char() != b'':
                raise self.Failure('Expected EOF after reading values')

    _commands = { 'inputs': _cmd_inputs,
                  'outputs': _cmd_outputs,
                  'call': _cmd_call,
                  'restore': _cmd_restore,
                  'store': _cmd_store,
                  'free': _cmd_free,
                  'clear': _cmd_dummy,
                  'pause_profiling': _cmd_dummy,
                  'unpause_profiling': _cmd_dummy,
                  'report': _cmd_dummy
                 }

    def _process_line(self, line):
        words = line.split()
        if words == []:
            raise self.Failure('Empty line')
        else:
            cmd = words[0]
            args = words[1:]
            if cmd in self._commands:
                self._commands[cmd](self, args)
            else:
                raise self.Failure('Unknown command: %s' % cmd)

    def run(self):
        while True:
            line = sys.stdin.readline()
            if line == '':
                return
            try:
                self._process_line(line)
            except self.Failure as e:
                print('%%% FAILURE')
                print(e.msg)
            print('%%% OK', flush=True)


# End of server.py
class bfastfinal:
  entry_points = {"convertToFloat": (["i16", "[][][]i16"], ["[][][]f32"]),
                  "main": (["i32", "i32", "i32", "f32", "f32", "f32", "[]i32",
                            "[][]f32"], ["[]i32", "[]i32", "[]f32"]),
                  "mainDetailed": (["i32", "i32", "i32", "f32", "f32", "f32",
                                    "[]i32", "[][]f32"], ["[]f32", "[]i32",
                                                          "[]i32", "[]f32",
                                                          "[][]f32", "[][]f32",
                                                          "[]f32", "[]i32",
                                                          "[]f32", "[]f32",
                                                          "[][]f32",
                                                          "[][]f32"]),
                  "mainMagnitude": (["i32", "i32", "i32", "f32", "f32", "f32",
                                     "[]i32", "[][]f32"], ["[]i32", "[]i32",
                                                           "[]f32", "[]f32"]),
                  "reshapeTransp": (["[][][]f32"], ["[][]f32"])}
  def __init__(self, command_queue=None, interactive=False,
               platform_pref=preferred_platform, device_pref=preferred_device,
               default_group_size=default_group_size,
               default_num_groups=default_num_groups,
               default_tile_size=default_tile_size,
               default_reg_tile_size=default_reg_tile_size,
               default_threshold=default_threshold, sizes=sizes):
    size_heuristics=[("NVIDIA CUDA", cl.device_type.GPU, "lockstep_width",
      lambda device: np.int32(32)), ("AMD Accelerated Parallel Processing",
                                     cl.device_type.GPU, "lockstep_width",
                                     lambda device: np.int32(32)), ("",
                                                                    cl.device_type.GPU,
                                                                    "lockstep_width",
                                                                    lambda device: np.int32(1)),
     ("", cl.device_type.GPU, "num_groups",
      lambda device: (np.int32(4) * device.get_info(getattr(cl.device_info,
                                                            "MAX_COMPUTE_UNITS")))),
     ("", cl.device_type.GPU, "group_size", lambda device: np.int32(256)), ("",
                                                                            cl.device_type.GPU,
                                                                            "tile_size",
                                                                            lambda device: np.int32(32)),
     ("", cl.device_type.GPU, "reg_tile_size", lambda device: np.int32(2)), ("",
                                                                             cl.device_type.GPU,
                                                                             "threshold",
                                                                             lambda device: np.int32(32768)),
     ("", cl.device_type.CPU, "lockstep_width", lambda device: np.int32(1)), ("",
                                                                              cl.device_type.CPU,
                                                                              "num_groups",
                                                                              lambda device: device.get_info(getattr(cl.device_info,
                                                                                                                     "MAX_COMPUTE_UNITS"))),
     ("", cl.device_type.CPU, "group_size", lambda device: np.int32(32)), ("",
                                                                           cl.device_type.CPU,
                                                                           "tile_size",
                                                                           lambda device: np.int32(4)),
     ("", cl.device_type.CPU, "reg_tile_size", lambda device: np.int32(1)), ("",
                                                                             cl.device_type.CPU,
                                                                             "threshold",
                                                                             lambda device: device.get_info(getattr(cl.device_info,
                                                                                                                    "MAX_COMPUTE_UNITS")))]
    self.global_failure_args_max = 2
    self.failure_msgs=["Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:120:54-68\n   #1  bfastfinal.fut:120:13-123:36\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:118:20-134:9\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:121:29-43\n   #1  bfastfinal.fut:120:13-123:36\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:118:20-134:9\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:120:13-125:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:118:20-134:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:120:13-125:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:118:20-134:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:8:17-21\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:120:13-125:42\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:118:20-134:9\n   #6  bfastfinal.fut:177:3-56\n   #7  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:9:20-24\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:120:13-125:42\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:118:20-134:9\n   #6  bfastfinal.fut:177:3-56\n   #7  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:120:13-125:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:118:20-134:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:120:13-125:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:118:20-134:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:132:34-38\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:120:13-133:38\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:118:20-134:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:132:42-46\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:120:13-133:38\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:118:20-134:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:133:33-37\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:120:13-133:38\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:118:20-134:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:120:54-68\n   #1  bfastfinal.fut:120:13-123:36\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:118:20-134:9\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:121:29-43\n   #1  bfastfinal.fut:120:13-123:36\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:118:20-134:9\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:120:13-125:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:118:20-134:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:120:13-125:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:118:20-134:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:8:17-21\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:120:13-125:42\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:118:20-134:9\n   #6  bfastfinal.fut:184:5-58\n   #7  bfastfinal.fut:179:1-185:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:9:20-24\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:120:13-125:42\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:118:20-134:9\n   #6  bfastfinal.fut:184:5-58\n   #7  bfastfinal.fut:179:1-185:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:120:13-125:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:118:20-134:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:120:13-125:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:118:20-134:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:132:34-38\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:120:13-133:38\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:118:20-134:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:132:42-46\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:120:13-133:38\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:118:20-134:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:37\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:133:33-37\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:120:13-133:38\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:118:20-134:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:37\n"]
    program = initialise_opencl_object(self,
                                       program_src=fut_opencl_src,
                                       command_queue=command_queue,
                                       interactive=interactive,
                                       platform_pref=platform_pref,
                                       device_pref=device_pref,
                                       default_group_size=default_group_size,
                                       default_num_groups=default_num_groups,
                                       default_tile_size=default_tile_size,
                                       default_reg_tile_size=default_reg_tile_size,
                                       default_threshold=default_threshold,
                                       size_heuristics=size_heuristics,
                                       required_types=["i16", "i32", "i64", "f32", "bool", "cert"],
                                       user_sizes=sizes,
                                       all_sizes={"builtin#replicate_f32.group_size_44499": {"class": "group_size",
                                                                                   "value": None},
                                        "builtin#replicate_i32.group_size_44508": {"class": "group_size",
                                                                                   "value": None},
                                        "convertToFloat.segmap_group_size_29286": {"class": "group_size",
                                                                                   "value": None},
                                        "main.Rx_40883": {"class": "reg_tile_size", "value": None},
                                        "main.Rx_41624": {"class": "reg_tile_size", "value": None},
                                        "main.Ry_40884": {"class": "reg_tile_size", "value": None},
                                        "main.Ry_41625": {"class": "reg_tile_size", "value": None},
                                        "main.Tk_40880": {"class": "tile_size", "value": None},
                                        "main.Tk_41621": {"class": "tile_size", "value": None},
                                        "main.Tx_40735": {"class": "tile_size", "value": None},
                                        "main.Tx_40881": {"class": "tile_size", "value": None},
                                        "main.Tx_41622": {"class": "tile_size", "value": None},
                                        "main.Ty_40736": {"class": "tile_size", "value": None},
                                        "main.Ty_40882": {"class": "tile_size", "value": None},
                                        "main.Ty_41623": {"class": "tile_size", "value": None},
                                        "main.group_size_44030": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37286": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37464": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37592": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37624": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37671": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38156": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38321": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38375": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38442": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38536": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38716": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38857": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38989": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39270": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39345": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39494": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39596": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39743": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39867": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40237": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40379": {"class": "group_size", "value": None},
                                        "main.segmap_num_groups_37626": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_37673": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_38718": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_38859": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_38991": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_40381": {"class": "num_groups", "value": None},
                                        "main.segred_group_size_37731": {"class": "group_size", "value": None},
                                        "main.segred_group_size_38778": {"class": "group_size", "value": None},
                                        "main.segred_group_size_38915": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39045": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39611": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39632": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39699": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39783": {"class": "group_size", "value": None},
                                        "main.segred_group_size_40284": {"class": "group_size", "value": None},
                                        "main.segred_num_groups_37733": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_38780": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_38917": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39047": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39613": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39634": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39701": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39785": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_40286": {"class": "num_groups", "value": None},
                                        "main.segscan_group_size_39354": {"class": "group_size", "value": None},
                                        "main.segscan_group_size_40338": {"class": "group_size", "value": None},
                                        "main.segscan_num_groups_39356": {"class": "num_groups", "value": None},
                                        "main.segscan_num_groups_40340": {"class": "num_groups", "value": None},
                                        "main.suff_intra_par_11": {"class": "threshold ()", "value": 32},
                                        "main.suff_intra_par_13": {"class": "threshold (!main.suff_intra_par_11)",
                                                                   "value": 32},
                                        "main.suff_intra_par_24": {"class": "threshold ()", "value": 32},
                                        "main.suff_intra_par_29": {"class": "threshold (!main.suff_outer_par_28)",
                                                                   "value": 32},
                                        "main.suff_intra_par_34": {"class": "threshold ()", "value": 32},
                                        "main.suff_outer_par_16": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_17": {"class": "threshold (!main.suff_outer_par_16)",
                                                                   "value": None},
                                        "main.suff_outer_par_18": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_19": {"class": "threshold (!main.suff_outer_par_18)",
                                                                   "value": None},
                                        "main.suff_outer_par_20": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_21": {"class": "threshold (!main.suff_outer_par_20)",
                                                                   "value": None},
                                        "main.suff_outer_par_28": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_31": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_6": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_7": {"class": "threshold (!main.suff_outer_par_6)",
                                                                  "value": None},
                                        "main.suff_outer_par_8": {"class": "threshold (!main.suff_outer_par_7 !main.suff_outer_par_6)",
                                                                  "value": None},
                                        "main.tile_size_41347": {"class": "tile_size", "value": None},
                                        "mainDetailed.Rx_40883": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Rx_41624": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Ry_40884": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Ry_41625": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Tk_40880": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tk_41621": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tx_40735": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tx_40881": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tx_41622": {"class": "tile_size", "value": None},
                                        "mainDetailed.Ty_40736": {"class": "tile_size", "value": None},
                                        "mainDetailed.Ty_40882": {"class": "tile_size", "value": None},
                                        "mainDetailed.Ty_41623": {"class": "tile_size", "value": None},
                                        "mainDetailed.group_size_44042": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_29444": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_29622": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_29750": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_29782": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_29829": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30314": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30479": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30533": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30600": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30694": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30874": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31015": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31147": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31428": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31503": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31652": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31754": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31901": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32024": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32304": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32426": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32483": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32661": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32962": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33014": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33086": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33128": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_num_groups_29784": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_29831": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_30876": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_31017": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_31149": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_32663": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_group_size_29889": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_30936": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31073": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31203": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31769": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31790": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31857": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31941": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_33046": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_num_groups_29891": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_30938": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31075": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31205": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31771": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31792": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31859": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31943": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_33048": {"class": "num_groups", "value": None},
                                        "mainDetailed.segscan_group_size_31512": {"class": "group_size",
                                                                                  "value": None},
                                        "mainDetailed.segscan_group_size_33097": {"class": "group_size",
                                                                                  "value": None},
                                        "mainDetailed.segscan_num_groups_31514": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainDetailed.segscan_num_groups_33099": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainDetailed.suff_intra_par_11": {"class": "threshold ()", "value": 32},
                                        "mainDetailed.suff_intra_par_13": {"class": "threshold (!mainDetailed.suff_intra_par_11)",
                                                                           "value": 32},
                                        "mainDetailed.suff_intra_par_24": {"class": "threshold ()", "value": 32},
                                        "mainDetailed.suff_intra_par_29": {"class": "threshold (!mainDetailed.suff_outer_par_28)",
                                                                           "value": 32},
                                        "mainDetailed.suff_intra_par_38": {"class": "threshold (!mainDetailed.suff_outer_par_37)",
                                                                           "value": 32},
                                        "mainDetailed.suff_outer_par_16": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_17": {"class": "threshold (!mainDetailed.suff_outer_par_16)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_18": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_19": {"class": "threshold (!mainDetailed.suff_outer_par_18)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_20": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_21": {"class": "threshold (!mainDetailed.suff_outer_par_20)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_28": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_31": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_37": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_6": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_7": {"class": "threshold (!mainDetailed.suff_outer_par_6)",
                                                                          "value": None},
                                        "mainDetailed.suff_outer_par_8": {"class": "threshold (!mainDetailed.suff_outer_par_7 !mainDetailed.suff_outer_par_6)",
                                                                          "value": None},
                                        "mainDetailed.tile_size_41347": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Rx_40883": {"class": "reg_tile_size", "value": None},
                                        "mainMagnitude.Rx_41624": {"class": "reg_tile_size", "value": None},
                                        "mainMagnitude.Ry_40884": {"class": "reg_tile_size", "value": None},
                                        "mainMagnitude.Ry_41625": {"class": "reg_tile_size", "value": None},
                                        "mainMagnitude.Tk_40880": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Tk_41621": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Tx_40735": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Tx_40881": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Tx_41622": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Ty_40736": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Ty_40882": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Ty_41623": {"class": "tile_size", "value": None},
                                        "mainMagnitude.group_size_44031": {"class": "group_size", "value": None},
                                        "mainMagnitude.segmap_group_size_33380": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_33558": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_33686": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_33718": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_33765": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34250": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34415": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34469": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34536": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34630": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34810": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34951": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35083": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35364": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35439": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35588": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35690": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35837": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35961": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36212": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36334": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36391": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36889": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_37031": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_33720": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_33767": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_34812": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_34953": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_35085": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_37033": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_33825": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_34872": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_35009": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_35139": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_35705": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_35726": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_35793": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_35877": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_36936": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_33827": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_34874": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_35011": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_35141": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_35707": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_35728": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_35795": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_35879": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_36938": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segscan_group_size_35448": {"class": "group_size",
                                                                                   "value": None},
                                        "mainMagnitude.segscan_group_size_36990": {"class": "group_size",
                                                                                   "value": None},
                                        "mainMagnitude.segscan_num_groups_35450": {"class": "num_groups",
                                                                                   "value": None},
                                        "mainMagnitude.segscan_num_groups_36992": {"class": "num_groups",
                                                                                   "value": None},
                                        "mainMagnitude.suff_intra_par_11": {"class": "threshold ()", "value": 32},
                                        "mainMagnitude.suff_intra_par_13": {"class": "threshold (!mainMagnitude.suff_intra_par_11)",
                                                                            "value": 32},
                                        "mainMagnitude.suff_intra_par_24": {"class": "threshold ()", "value": 32},
                                        "mainMagnitude.suff_intra_par_29": {"class": "threshold (!mainMagnitude.suff_outer_par_28)",
                                                                            "value": 32},
                                        "mainMagnitude.suff_intra_par_37": {"class": "threshold ()", "value": 32},
                                        "mainMagnitude.suff_outer_par_16": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_17": {"class": "threshold (!mainMagnitude.suff_outer_par_16)",
                                                                            "value": None},
                                        "mainMagnitude.suff_outer_par_18": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_19": {"class": "threshold (!mainMagnitude.suff_outer_par_18)",
                                                                            "value": None},
                                        "mainMagnitude.suff_outer_par_20": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_21": {"class": "threshold (!mainMagnitude.suff_outer_par_20)",
                                                                            "value": None},
                                        "mainMagnitude.suff_outer_par_28": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_31": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_6": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_7": {"class": "threshold (!mainMagnitude.suff_outer_par_6)",
                                                                           "value": None},
                                        "mainMagnitude.suff_outer_par_8": {"class": "threshold (!mainMagnitude.suff_outer_par_7 !mainMagnitude.suff_outer_par_6)",
                                                                           "value": None},
                                        "mainMagnitude.tile_size_41347": {"class": "tile_size", "value": None}})
    self.builtinzhreplicate_f32zireplicate_44496_var = program.builtinzhreplicate_f32zireplicate_44496
    self.builtinzhreplicate_i32zireplicate_44505_var = program.builtinzhreplicate_i32zireplicate_44505
    self.convertToFloatzisegmap_29282_var = program.convertToFloatzisegmap_29282
    self.gpu_map_transpose_f32_var = program.gpu_map_transpose_f32
    self.gpu_map_transpose_f32_low_height_var = program.gpu_map_transpose_f32_low_height
    self.gpu_map_transpose_f32_low_width_var = program.gpu_map_transpose_f32_low_width
    self.gpu_map_transpose_f32_small_var = program.gpu_map_transpose_f32_small
    self.mainzicopy_44027_var = program.mainzicopy_44027
    self.mainziscan_stage1_39360_var = program.mainziscan_stage1_39360
    self.mainziscan_stage1_40344_var = program.mainziscan_stage1_40344
    self.mainziscan_stage2_39360_var = program.mainziscan_stage2_39360
    self.mainziscan_stage2_40344_var = program.mainziscan_stage2_40344
    self.mainziscan_stage3_39360_var = program.mainziscan_stage3_39360
    self.mainziscan_stage3_40344_var = program.mainziscan_stage3_40344
    self.mainzisegmap_37283_var = program.mainzisegmap_37283
    self.mainzisegmap_37461_var = program.mainzisegmap_37461
    self.mainzisegmap_37589_var = program.mainzisegmap_37589
    self.mainzisegmap_37622_var = program.mainzisegmap_37622
    self.mainzisegmap_37668_var = program.mainzisegmap_37668
    self.mainzisegmap_38152_var = program.mainzisegmap_38152
    self.mainzisegmap_38318_var = program.mainzisegmap_38318
    self.mainzisegmap_38372_var = program.mainzisegmap_38372
    self.mainzisegmap_38440_var = program.mainzisegmap_38440
    self.mainzisegmap_38533_var = program.mainzisegmap_38533
    self.mainzisegmap_38714_var = program.mainzisegmap_38714
    self.mainzisegmap_38855_var = program.mainzisegmap_38855
    self.mainzisegmap_38987_var = program.mainzisegmap_38987
    self.mainzisegmap_39267_var = program.mainzisegmap_39267
    self.mainzisegmap_39343_var = program.mainzisegmap_39343
    self.mainzisegmap_39594_var = program.mainzisegmap_39594
    self.mainzisegmap_39865_var = program.mainzisegmap_39865
    self.mainzisegmap_40235_var = program.mainzisegmap_40235
    self.mainzisegmap_40377_var = program.mainzisegmap_40377
    self.mainzisegmap_intragroup_37972_var = program.mainzisegmap_intragroup_37972
    self.mainzisegmap_intragroup_38199_var = program.mainzisegmap_intragroup_38199
    self.mainzisegmap_intragroup_39150_var = program.mainzisegmap_intragroup_39150
    self.mainzisegmap_intragroup_39490_var = program.mainzisegmap_intragroup_39490
    self.mainzisegmap_intragroup_39910_var = program.mainzisegmap_intragroup_39910
    self.mainzisegmap_intragroup_40751_var = program.mainzisegmap_intragroup_40751
    self.mainzisegmap_intragroup_40904_var = program.mainzisegmap_intragroup_40904
    self.mainzisegmap_intragroup_41353_var = program.mainzisegmap_intragroup_41353
    self.mainzisegmap_intragroup_41645_var = program.mainzisegmap_intragroup_41645
    self.mainzisegmap_intragroup_42079_var = program.mainzisegmap_intragroup_42079
    self.mainzisegmap_intragroup_42269_var = program.mainzisegmap_intragroup_42269
    self.mainzisegred_large_37737_var = program.mainzisegred_large_37737
    self.mainzisegred_large_38784_var = program.mainzisegred_large_38784
    self.mainzisegred_large_38921_var = program.mainzisegred_large_38921
    self.mainzisegred_large_39051_var = program.mainzisegred_large_39051
    self.mainzisegred_large_39617_var = program.mainzisegred_large_39617
    self.mainzisegred_large_39638_var = program.mainzisegred_large_39638
    self.mainzisegred_large_39789_var = program.mainzisegred_large_39789
    self.mainzisegred_large_40290_var = program.mainzisegred_large_40290
    self.mainzisegred_nonseg_39707_var = program.mainzisegred_nonseg_39707
    self.mainzisegred_small_37737_var = program.mainzisegred_small_37737
    self.mainzisegred_small_38784_var = program.mainzisegred_small_38784
    self.mainzisegred_small_38921_var = program.mainzisegred_small_38921
    self.mainzisegred_small_39051_var = program.mainzisegred_small_39051
    self.mainzisegred_small_39617_var = program.mainzisegred_small_39617
    self.mainzisegred_small_39638_var = program.mainzisegred_small_39638
    self.mainzisegred_small_39789_var = program.mainzisegred_small_39789
    self.mainzisegred_small_40290_var = program.mainzisegred_small_40290
    self.mainDetailedzicopy_44039_var = program.mainDetailedzicopy_44039
    self.mainDetailedziscan_stage1_31518_var = program.mainDetailedziscan_stage1_31518
    self.mainDetailedziscan_stage1_33103_var = program.mainDetailedziscan_stage1_33103
    self.mainDetailedziscan_stage2_31518_var = program.mainDetailedziscan_stage2_31518
    self.mainDetailedziscan_stage2_33103_var = program.mainDetailedziscan_stage2_33103
    self.mainDetailedziscan_stage3_31518_var = program.mainDetailedziscan_stage3_31518
    self.mainDetailedziscan_stage3_33103_var = program.mainDetailedziscan_stage3_33103
    self.mainDetailedzisegmap_29441_var = program.mainDetailedzisegmap_29441
    self.mainDetailedzisegmap_29619_var = program.mainDetailedzisegmap_29619
    self.mainDetailedzisegmap_29747_var = program.mainDetailedzisegmap_29747
    self.mainDetailedzisegmap_29780_var = program.mainDetailedzisegmap_29780
    self.mainDetailedzisegmap_29826_var = program.mainDetailedzisegmap_29826
    self.mainDetailedzisegmap_30310_var = program.mainDetailedzisegmap_30310
    self.mainDetailedzisegmap_30476_var = program.mainDetailedzisegmap_30476
    self.mainDetailedzisegmap_30530_var = program.mainDetailedzisegmap_30530
    self.mainDetailedzisegmap_30598_var = program.mainDetailedzisegmap_30598
    self.mainDetailedzisegmap_30691_var = program.mainDetailedzisegmap_30691
    self.mainDetailedzisegmap_30872_var = program.mainDetailedzisegmap_30872
    self.mainDetailedzisegmap_31013_var = program.mainDetailedzisegmap_31013
    self.mainDetailedzisegmap_31145_var = program.mainDetailedzisegmap_31145
    self.mainDetailedzisegmap_31425_var = program.mainDetailedzisegmap_31425
    self.mainDetailedzisegmap_31501_var = program.mainDetailedzisegmap_31501
    self.mainDetailedzisegmap_31752_var = program.mainDetailedzisegmap_31752
    self.mainDetailedzisegmap_32022_var = program.mainDetailedzisegmap_32022
    self.mainDetailedzisegmap_32302_var = program.mainDetailedzisegmap_32302
    self.mainDetailedzisegmap_32423_var = program.mainDetailedzisegmap_32423
    self.mainDetailedzisegmap_32481_var = program.mainDetailedzisegmap_32481
    self.mainDetailedzisegmap_32659_var = program.mainDetailedzisegmap_32659
    self.mainDetailedzisegmap_32959_var = program.mainDetailedzisegmap_32959
    self.mainDetailedzisegmap_33012_var = program.mainDetailedzisegmap_33012
    self.mainDetailedzisegmap_33084_var = program.mainDetailedzisegmap_33084
    self.mainDetailedzisegmap_33126_var = program.mainDetailedzisegmap_33126
    self.mainDetailedzisegmap_intragroup_30130_var = program.mainDetailedzisegmap_intragroup_30130
    self.mainDetailedzisegmap_intragroup_30357_var = program.mainDetailedzisegmap_intragroup_30357
    self.mainDetailedzisegmap_intragroup_31308_var = program.mainDetailedzisegmap_intragroup_31308
    self.mainDetailedzisegmap_intragroup_31648_var = program.mainDetailedzisegmap_intragroup_31648
    self.mainDetailedzisegmap_intragroup_32657_var = program.mainDetailedzisegmap_intragroup_32657
    self.mainDetailedzisegmap_intragroup_40751_var = program.mainDetailedzisegmap_intragroup_40751
    self.mainDetailedzisegmap_intragroup_40904_var = program.mainDetailedzisegmap_intragroup_40904
    self.mainDetailedzisegmap_intragroup_41353_var = program.mainDetailedzisegmap_intragroup_41353
    self.mainDetailedzisegmap_intragroup_41645_var = program.mainDetailedzisegmap_intragroup_41645
    self.mainDetailedzisegmap_intragroup_42079_var = program.mainDetailedzisegmap_intragroup_42079
    self.mainDetailedzisegmap_intragroup_42269_var = program.mainDetailedzisegmap_intragroup_42269
    self.mainDetailedzisegred_large_29895_var = program.mainDetailedzisegred_large_29895
    self.mainDetailedzisegred_large_30942_var = program.mainDetailedzisegred_large_30942
    self.mainDetailedzisegred_large_31079_var = program.mainDetailedzisegred_large_31079
    self.mainDetailedzisegred_large_31209_var = program.mainDetailedzisegred_large_31209
    self.mainDetailedzisegred_large_31775_var = program.mainDetailedzisegred_large_31775
    self.mainDetailedzisegred_large_31796_var = program.mainDetailedzisegred_large_31796
    self.mainDetailedzisegred_large_31947_var = program.mainDetailedzisegred_large_31947
    self.mainDetailedzisegred_large_33052_var = program.mainDetailedzisegred_large_33052
    self.mainDetailedzisegred_nonseg_31865_var = program.mainDetailedzisegred_nonseg_31865
    self.mainDetailedzisegred_small_29895_var = program.mainDetailedzisegred_small_29895
    self.mainDetailedzisegred_small_30942_var = program.mainDetailedzisegred_small_30942
    self.mainDetailedzisegred_small_31079_var = program.mainDetailedzisegred_small_31079
    self.mainDetailedzisegred_small_31209_var = program.mainDetailedzisegred_small_31209
    self.mainDetailedzisegred_small_31775_var = program.mainDetailedzisegred_small_31775
    self.mainDetailedzisegred_small_31796_var = program.mainDetailedzisegred_small_31796
    self.mainDetailedzisegred_small_31947_var = program.mainDetailedzisegred_small_31947
    self.mainDetailedzisegred_small_33052_var = program.mainDetailedzisegred_small_33052
    self.mainMagnitudezicopy_44028_var = program.mainMagnitudezicopy_44028
    self.mainMagnitudeziscan_stage1_35454_var = program.mainMagnitudeziscan_stage1_35454
    self.mainMagnitudeziscan_stage1_36996_var = program.mainMagnitudeziscan_stage1_36996
    self.mainMagnitudeziscan_stage2_35454_var = program.mainMagnitudeziscan_stage2_35454
    self.mainMagnitudeziscan_stage2_36996_var = program.mainMagnitudeziscan_stage2_36996
    self.mainMagnitudeziscan_stage3_35454_var = program.mainMagnitudeziscan_stage3_35454
    self.mainMagnitudeziscan_stage3_36996_var = program.mainMagnitudeziscan_stage3_36996
    self.mainMagnitudezisegmap_33377_var = program.mainMagnitudezisegmap_33377
    self.mainMagnitudezisegmap_33555_var = program.mainMagnitudezisegmap_33555
    self.mainMagnitudezisegmap_33683_var = program.mainMagnitudezisegmap_33683
    self.mainMagnitudezisegmap_33716_var = program.mainMagnitudezisegmap_33716
    self.mainMagnitudezisegmap_33762_var = program.mainMagnitudezisegmap_33762
    self.mainMagnitudezisegmap_34246_var = program.mainMagnitudezisegmap_34246
    self.mainMagnitudezisegmap_34412_var = program.mainMagnitudezisegmap_34412
    self.mainMagnitudezisegmap_34466_var = program.mainMagnitudezisegmap_34466
    self.mainMagnitudezisegmap_34534_var = program.mainMagnitudezisegmap_34534
    self.mainMagnitudezisegmap_34627_var = program.mainMagnitudezisegmap_34627
    self.mainMagnitudezisegmap_34808_var = program.mainMagnitudezisegmap_34808
    self.mainMagnitudezisegmap_34949_var = program.mainMagnitudezisegmap_34949
    self.mainMagnitudezisegmap_35081_var = program.mainMagnitudezisegmap_35081
    self.mainMagnitudezisegmap_35361_var = program.mainMagnitudezisegmap_35361
    self.mainMagnitudezisegmap_35437_var = program.mainMagnitudezisegmap_35437
    self.mainMagnitudezisegmap_35688_var = program.mainMagnitudezisegmap_35688
    self.mainMagnitudezisegmap_35959_var = program.mainMagnitudezisegmap_35959
    self.mainMagnitudezisegmap_36210_var = program.mainMagnitudezisegmap_36210
    self.mainMagnitudezisegmap_36331_var = program.mainMagnitudezisegmap_36331
    self.mainMagnitudezisegmap_36389_var = program.mainMagnitudezisegmap_36389
    self.mainMagnitudezisegmap_36887_var = program.mainMagnitudezisegmap_36887
    self.mainMagnitudezisegmap_37029_var = program.mainMagnitudezisegmap_37029
    self.mainMagnitudezisegmap_intragroup_34066_var = program.mainMagnitudezisegmap_intragroup_34066
    self.mainMagnitudezisegmap_intragroup_34293_var = program.mainMagnitudezisegmap_intragroup_34293
    self.mainMagnitudezisegmap_intragroup_35244_var = program.mainMagnitudezisegmap_intragroup_35244
    self.mainMagnitudezisegmap_intragroup_35584_var = program.mainMagnitudezisegmap_intragroup_35584
    self.mainMagnitudezisegmap_intragroup_36562_var = program.mainMagnitudezisegmap_intragroup_36562
    self.mainMagnitudezisegmap_intragroup_40751_var = program.mainMagnitudezisegmap_intragroup_40751
    self.mainMagnitudezisegmap_intragroup_40904_var = program.mainMagnitudezisegmap_intragroup_40904
    self.mainMagnitudezisegmap_intragroup_41353_var = program.mainMagnitudezisegmap_intragroup_41353
    self.mainMagnitudezisegmap_intragroup_41645_var = program.mainMagnitudezisegmap_intragroup_41645
    self.mainMagnitudezisegmap_intragroup_42079_var = program.mainMagnitudezisegmap_intragroup_42079
    self.mainMagnitudezisegmap_intragroup_42269_var = program.mainMagnitudezisegmap_intragroup_42269
    self.mainMagnitudezisegred_large_33831_var = program.mainMagnitudezisegred_large_33831
    self.mainMagnitudezisegred_large_34878_var = program.mainMagnitudezisegred_large_34878
    self.mainMagnitudezisegred_large_35015_var = program.mainMagnitudezisegred_large_35015
    self.mainMagnitudezisegred_large_35145_var = program.mainMagnitudezisegred_large_35145
    self.mainMagnitudezisegred_large_35711_var = program.mainMagnitudezisegred_large_35711
    self.mainMagnitudezisegred_large_35732_var = program.mainMagnitudezisegred_large_35732
    self.mainMagnitudezisegred_large_35883_var = program.mainMagnitudezisegred_large_35883
    self.mainMagnitudezisegred_large_36942_var = program.mainMagnitudezisegred_large_36942
    self.mainMagnitudezisegred_nonseg_35801_var = program.mainMagnitudezisegred_nonseg_35801
    self.mainMagnitudezisegred_small_33831_var = program.mainMagnitudezisegred_small_33831
    self.mainMagnitudezisegred_small_34878_var = program.mainMagnitudezisegred_small_34878
    self.mainMagnitudezisegred_small_35015_var = program.mainMagnitudezisegred_small_35015
    self.mainMagnitudezisegred_small_35145_var = program.mainMagnitudezisegred_small_35145
    self.mainMagnitudezisegred_small_35711_var = program.mainMagnitudezisegred_small_35711
    self.mainMagnitudezisegred_small_35732_var = program.mainMagnitudezisegred_small_35732
    self.mainMagnitudezisegred_small_35883_var = program.mainMagnitudezisegred_small_35883
    self.mainMagnitudezisegred_small_36942_var = program.mainMagnitudezisegred_small_36942
    self.constants = {}
    mainzicounter_mem_43962 = np.zeros(10240, dtype=np.int32)
    static_mem_45038 = opencl_alloc(self, 40960, "static_mem_45038")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45038,
                      normaliseArray(mainzicounter_mem_43962),
                      is_blocking=synchronous)
    self.mainzicounter_mem_43962 = static_mem_45038
    mainzicounter_mem_44159 = np.zeros(10240, dtype=np.int32)
    static_mem_45041 = opencl_alloc(self, 40960, "static_mem_45041")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45041,
                      normaliseArray(mainzicounter_mem_44159),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44159 = static_mem_45041
    mainzicounter_mem_44247 = np.zeros(10240, dtype=np.int32)
    static_mem_45042 = opencl_alloc(self, 40960, "static_mem_45042")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45042,
                      normaliseArray(mainzicounter_mem_44247),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44247 = static_mem_45042
    mainzicounter_mem_44379 = np.zeros(10240, dtype=np.int32)
    static_mem_45043 = opencl_alloc(self, 40960, "static_mem_45043")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45043,
                      normaliseArray(mainzicounter_mem_44379),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44379 = static_mem_45043
    mainzicounter_mem_44571 = np.zeros(10240, dtype=np.int32)
    static_mem_45044 = opencl_alloc(self, 40960, "static_mem_45044")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45044,
                      normaliseArray(mainzicounter_mem_44571),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44571 = static_mem_45044
    mainzicounter_mem_44631 = np.zeros(10240, dtype=np.int32)
    static_mem_45045 = opencl_alloc(self, 40960, "static_mem_45045")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45045,
                      normaliseArray(mainzicounter_mem_44631),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44631 = static_mem_45045
    mainzicounter_mem_44671 = np.array([np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0)], dtype=np.int32)
    static_mem_45046 = opencl_alloc(self, 40, "static_mem_45046")
    if (40 != 0):
      cl.enqueue_copy(self.queue, static_mem_45046,
                      normaliseArray(mainzicounter_mem_44671),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44671 = static_mem_45046
    mainzicounter_mem_44740 = np.zeros(10240, dtype=np.int32)
    static_mem_45048 = opencl_alloc(self, 40960, "static_mem_45048")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45048,
                      normaliseArray(mainzicounter_mem_44740),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44740 = static_mem_45048
    mainzicounter_mem_44917 = np.zeros(10240, dtype=np.int32)
    static_mem_45050 = opencl_alloc(self, 40960, "static_mem_45050")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45050,
                      normaliseArray(mainzicounter_mem_44917),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44917 = static_mem_45050
    mainDetailedzicounter_mem_43974 = np.zeros(10240, dtype=np.int32)
    static_mem_45051 = opencl_alloc(self, 40960, "static_mem_45051")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45051,
                      normaliseArray(mainDetailedzicounter_mem_43974),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_43974 = static_mem_45051
    mainDetailedzicounter_mem_44171 = np.zeros(10240, dtype=np.int32)
    static_mem_45054 = opencl_alloc(self, 40960, "static_mem_45054")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45054,
                      normaliseArray(mainDetailedzicounter_mem_44171),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44171 = static_mem_45054
    mainDetailedzicounter_mem_44259 = np.zeros(10240, dtype=np.int32)
    static_mem_45055 = opencl_alloc(self, 40960, "static_mem_45055")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45055,
                      normaliseArray(mainDetailedzicounter_mem_44259),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44259 = static_mem_45055
    mainDetailedzicounter_mem_44391 = np.zeros(10240, dtype=np.int32)
    static_mem_45056 = opencl_alloc(self, 40960, "static_mem_45056")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45056,
                      normaliseArray(mainDetailedzicounter_mem_44391),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44391 = static_mem_45056
    mainDetailedzicounter_mem_44583 = np.zeros(10240, dtype=np.int32)
    static_mem_45057 = opencl_alloc(self, 40960, "static_mem_45057")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45057,
                      normaliseArray(mainDetailedzicounter_mem_44583),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44583 = static_mem_45057
    mainDetailedzicounter_mem_44643 = np.zeros(10240, dtype=np.int32)
    static_mem_45058 = opencl_alloc(self, 40960, "static_mem_45058")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45058,
                      normaliseArray(mainDetailedzicounter_mem_44643),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44643 = static_mem_45058
    mainDetailedzicounter_mem_44683 = np.array([np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0)],
                                               dtype=np.int32)
    static_mem_45059 = opencl_alloc(self, 40, "static_mem_45059")
    if (40 != 0):
      cl.enqueue_copy(self.queue, static_mem_45059,
                      normaliseArray(mainDetailedzicounter_mem_44683),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44683 = static_mem_45059
    mainDetailedzicounter_mem_44752 = np.zeros(10240, dtype=np.int32)
    static_mem_45061 = opencl_alloc(self, 40960, "static_mem_45061")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45061,
                      normaliseArray(mainDetailedzicounter_mem_44752),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44752 = static_mem_45061
    mainDetailedzicounter_mem_44975 = np.zeros(10240, dtype=np.int32)
    static_mem_45063 = opencl_alloc(self, 40960, "static_mem_45063")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45063,
                      normaliseArray(mainDetailedzicounter_mem_44975),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44975 = static_mem_45063
    mainMagnitudezicounter_mem_43963 = np.zeros(10240, dtype=np.int32)
    static_mem_45064 = opencl_alloc(self, 40960, "static_mem_45064")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45064,
                      normaliseArray(mainMagnitudezicounter_mem_43963),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_43963 = static_mem_45064
    mainMagnitudezicounter_mem_44160 = np.zeros(10240, dtype=np.int32)
    static_mem_45067 = opencl_alloc(self, 40960, "static_mem_45067")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45067,
                      normaliseArray(mainMagnitudezicounter_mem_44160),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44160 = static_mem_45067
    mainMagnitudezicounter_mem_44248 = np.zeros(10240, dtype=np.int32)
    static_mem_45068 = opencl_alloc(self, 40960, "static_mem_45068")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45068,
                      normaliseArray(mainMagnitudezicounter_mem_44248),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44248 = static_mem_45068
    mainMagnitudezicounter_mem_44380 = np.zeros(10240, dtype=np.int32)
    static_mem_45069 = opencl_alloc(self, 40960, "static_mem_45069")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45069,
                      normaliseArray(mainMagnitudezicounter_mem_44380),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44380 = static_mem_45069
    mainMagnitudezicounter_mem_44572 = np.zeros(10240, dtype=np.int32)
    static_mem_45070 = opencl_alloc(self, 40960, "static_mem_45070")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45070,
                      normaliseArray(mainMagnitudezicounter_mem_44572),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44572 = static_mem_45070
    mainMagnitudezicounter_mem_44632 = np.zeros(10240, dtype=np.int32)
    static_mem_45071 = opencl_alloc(self, 40960, "static_mem_45071")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45071,
                      normaliseArray(mainMagnitudezicounter_mem_44632),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44632 = static_mem_45071
    mainMagnitudezicounter_mem_44672 = np.array([np.int32(0), np.int32(0),
                                                 np.int32(0), np.int32(0),
                                                 np.int32(0), np.int32(0),
                                                 np.int32(0), np.int32(0),
                                                 np.int32(0), np.int32(0)],
                                                dtype=np.int32)
    static_mem_45072 = opencl_alloc(self, 40, "static_mem_45072")
    if (40 != 0):
      cl.enqueue_copy(self.queue, static_mem_45072,
                      normaliseArray(mainMagnitudezicounter_mem_44672),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44672 = static_mem_45072
    mainMagnitudezicounter_mem_44741 = np.zeros(10240, dtype=np.int32)
    static_mem_45074 = opencl_alloc(self, 40960, "static_mem_45074")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45074,
                      normaliseArray(mainMagnitudezicounter_mem_44741),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44741 = static_mem_45074
    mainMagnitudezicounter_mem_44938 = np.zeros(10240, dtype=np.int32)
    static_mem_45076 = opencl_alloc(self, 40960, "static_mem_45076")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45076,
                      normaliseArray(mainMagnitudezicounter_mem_44938),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44938 = static_mem_45076
  def futhark_builtinzhgpu_map_transpose_f32(self, destmem_0, destoffset_1,
                                             srcmem_2, srcoffset_3,
                                             num_arrays_4, x_elems_5,
                                             y_elems_6):
    if ((num_arrays_4 == np.int32(0)) or ((x_elems_5 == np.int32(0)) or (y_elems_6 == np.int32(0)))):
      pass
    else:
      muly_8 = squot32(np.int32(16), x_elems_5)
      mulx_7 = squot32(np.int32(16), y_elems_6)
      if ((num_arrays_4 == np.int32(1)) and ((x_elems_5 == np.int32(1)) or (y_elems_6 == np.int32(1)))):
        if (sext_i32_i64(((x_elems_5 * y_elems_6) * np.int32(4))) != 0):
          cl.enqueue_copy(self.queue, destmem_0, srcmem_2,
                          dest_offset=np.long(sext_i32_i64(destoffset_1)),
                          src_offset=np.long(sext_i32_i64(srcoffset_3)),
                          byte_count=np.long(sext_i32_i64(((x_elems_5 * y_elems_6) * np.int32(4)))))
        if synchronous:
          sync(self)
      else:
        if (sle32(x_elems_5, np.int32(8)) and slt32(np.int32(16), y_elems_6)):
          if ((((1 * (np.long(sdiv_up32(x_elems_5,
                                        np.int32(16))) * np.long(np.int32(16)))) * (np.long(sdiv_up32(sdiv_up32(y_elems_6,
                                                                                                                muly_8),
                                                                                                      np.int32(16))) * np.long(np.int32(16)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
            self.gpu_map_transpose_f32_low_width_var.set_args(cl.LocalMemory(np.long(np.int64(1088))),
                                                              np.int32(destoffset_1),
                                                              np.int32(srcoffset_3),
                                                              np.int32(num_arrays_4),
                                                              np.int32(x_elems_5),
                                                              np.int32(y_elems_6),
                                                              np.int32(mulx_7),
                                                              np.int32(muly_8),
                                                              destmem_0,
                                                              srcmem_2)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.gpu_map_transpose_f32_low_width_var,
                                       ((np.long(sdiv_up32(x_elems_5,
                                                           np.int32(16))) * np.long(np.int32(16))),
                                        (np.long(sdiv_up32(sdiv_up32(y_elems_6,
                                                                     muly_8),
                                                           np.int32(16))) * np.long(np.int32(16))),
                                        (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                       (np.long(np.int32(16)),
                                        np.long(np.int32(16)),
                                        np.long(np.int32(1))))
            if synchronous:
              sync(self)
        else:
          if (sle32(y_elems_6, np.int32(8)) and slt32(np.int32(16), x_elems_5)):
            if ((((1 * (np.long(sdiv_up32(sdiv_up32(x_elems_5, mulx_7),
                                          np.int32(16))) * np.long(np.int32(16)))) * (np.long(sdiv_up32(y_elems_6,
                                                                                                        np.int32(16))) * np.long(np.int32(16)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
              self.gpu_map_transpose_f32_low_height_var.set_args(cl.LocalMemory(np.long(np.int64(1088))),
                                                                 np.int32(destoffset_1),
                                                                 np.int32(srcoffset_3),
                                                                 np.int32(num_arrays_4),
                                                                 np.int32(x_elems_5),
                                                                 np.int32(y_elems_6),
                                                                 np.int32(mulx_7),
                                                                 np.int32(muly_8),
                                                                 destmem_0,
                                                                 srcmem_2)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.gpu_map_transpose_f32_low_height_var,
                                         ((np.long(sdiv_up32(sdiv_up32(x_elems_5,
                                                                       mulx_7),
                                                             np.int32(16))) * np.long(np.int32(16))),
                                          (np.long(sdiv_up32(y_elems_6,
                                                             np.int32(16))) * np.long(np.int32(16))),
                                          (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                         (np.long(np.int32(16)),
                                          np.long(np.int32(16)),
                                          np.long(np.int32(1))))
              if synchronous:
                sync(self)
          else:
            if (sle32(x_elems_5, np.int32(8)) and sle32(y_elems_6,
                                                        np.int32(8))):
              if ((1 * (np.long(sdiv_up32(((num_arrays_4 * x_elems_5) * y_elems_6),
                                          np.int32(256))) * np.long(np.int32(256)))) != 0):
                self.gpu_map_transpose_f32_small_var.set_args(cl.LocalMemory(np.long(np.int64(1))),
                                                              np.int32(destoffset_1),
                                                              np.int32(srcoffset_3),
                                                              np.int32(num_arrays_4),
                                                              np.int32(x_elems_5),
                                                              np.int32(y_elems_6),
                                                              np.int32(mulx_7),
                                                              np.int32(muly_8),
                                                              destmem_0,
                                                              srcmem_2)
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.gpu_map_transpose_f32_small_var,
                                           ((np.long(sdiv_up32(((num_arrays_4 * x_elems_5) * y_elems_6),
                                                               np.int32(256))) * np.long(np.int32(256))),),
                                           (np.long(np.int32(256)),))
                if synchronous:
                  sync(self)
            else:
              if ((((1 * (np.long(sdiv_up32(x_elems_5,
                                            np.int32(32))) * np.long(np.int32(32)))) * (np.long(sdiv_up32(y_elems_6,
                                                                                                          np.int32(32))) * np.long(np.int32(8)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
                self.gpu_map_transpose_f32_var.set_args(cl.LocalMemory(np.long(np.int64(4224))),
                                                        np.int32(destoffset_1),
                                                        np.int32(srcoffset_3),
                                                        np.int32(num_arrays_4),
                                                        np.int32(x_elems_5),
                                                        np.int32(y_elems_6),
                                                        np.int32(mulx_7),
                                                        np.int32(muly_8),
                                                        destmem_0, srcmem_2)
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.gpu_map_transpose_f32_var,
                                           ((np.long(sdiv_up32(x_elems_5,
                                                               np.int32(32))) * np.long(np.int32(32))),
                                            (np.long(sdiv_up32(y_elems_6,
                                                               np.int32(32))) * np.long(np.int32(8))),
                                            (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                           (np.long(np.int32(32)),
                                            np.long(np.int32(8)),
                                            np.long(np.int32(1))))
                if synchronous:
                  sync(self)
    return ()
  def futhark_builtinzhreplicate_f32(self, mem_44492, num_elems_44493,
                                     val_44494):
    group_sizze_44499 = self.sizes["builtin#replicate_f32.group_size_44499"]
    num_groups_44500 = sdiv_up64(num_elems_44493, group_sizze_44499)
    if ((1 * (np.long(num_groups_44500) * np.long(group_sizze_44499))) != 0):
      self.builtinzhreplicate_f32zireplicate_44496_var.set_args(np.int32(num_elems_44493),
                                                                np.float32(val_44494),
                                                                mem_44492)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.builtinzhreplicate_f32zireplicate_44496_var,
                                 ((np.long(num_groups_44500) * np.long(group_sizze_44499)),),
                                 (np.long(group_sizze_44499),))
      if synchronous:
        sync(self)
    return ()
  def futhark_builtinzhreplicate_i32(self, mem_44501, num_elems_44502,
                                     val_44503):
    group_sizze_44508 = self.sizes["builtin#replicate_i32.group_size_44508"]
    num_groups_44509 = sdiv_up64(num_elems_44502, group_sizze_44508)
    if ((1 * (np.long(num_groups_44509) * np.long(group_sizze_44508))) != 0):
      self.builtinzhreplicate_i32zireplicate_44505_var.set_args(np.int32(num_elems_44502),
                                                                np.int32(val_44503),
                                                                mem_44501)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.builtinzhreplicate_i32zireplicate_44505_var,
                                 ((np.long(num_groups_44509) * np.long(group_sizze_44508)),),
                                 (np.long(group_sizze_44508),))
      if synchronous:
        sync(self)
    return ()
  def futhark_convertToFloat(self, images_mem_42558, m_27377, n_27378, p_27379,
                             nan_value_27380):
    y_29341 = (n_27378 * p_27379)
    nest_sizze_29342 = (m_27377 * y_29341)
    segmap_group_sizze_29343 = self.sizes["convertToFloat.segmap_group_size_29286"]
    segmap_usable_groups_29344 = sdiv_up64(nest_sizze_29342,
                                           segmap_group_sizze_29343)
    binop_x_42561 = (m_27377 * n_27378)
    binop_x_42562 = (p_27379 * binop_x_42561)
    bytes_42560 = (np.int64(4) * binop_x_42562)
    mem_42563 = opencl_alloc(self, bytes_42560, "mem_42563")
    if ((1 * (np.long(segmap_usable_groups_29344) * np.long(segmap_group_sizze_29343))) != 0):
      self.convertToFloatzisegmap_29282_var.set_args(self.global_failure,
                                                     np.int64(m_27377),
                                                     np.int64(n_27378),
                                                     np.int64(p_27379),
                                                     np.int16(nan_value_27380),
                                                     images_mem_42558,
                                                     mem_42563)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.convertToFloatzisegmap_29282_var,
                                 ((np.long(segmap_usable_groups_29344) * np.long(segmap_group_sizze_29343)),),
                                 (np.long(segmap_group_sizze_29343),))
      if synchronous:
        sync(self)
    out_mem_43854 = mem_42563
    return out_mem_43854
  def futhark_main(self, mappingindices_mem_42558, images_mem_42559, N_28681,
                   m_28682, trend_28683, k_28684, n_28685, freq_28686,
                   hfrac_28687, lam_28688):
    i32_res_28691 = sext_i32_i64(n_28685)
    x_28692 = (np.int32(2) * k_28684)
    k2p2_28693 = (np.int32(2) + x_28692)
    cond_28694 = slt32(np.int32(0), trend_28683)
    if cond_28694:
      k2p2zq_28695 = k2p2_28693
    else:
      k2p2zq_f_res_28696 = (k2p2_28693 - np.int32(1))
      k2p2zq_28695 = k2p2zq_f_res_28696
    i32_res_28697 = sext_i32_i64(k2p2zq_28695)
    binop_x_42562 = (N_28681 * i32_res_28697)
    bytes_42561 = (np.int64(4) * binop_x_42562)
    if cond_28694:
      bounds_invalid_upwards_28699 = slt64(i32_res_28697, np.int64(0))
      valid_28700 = not(bounds_invalid_upwards_28699)
      range_valid_c_28701 = True
      assert valid_28700, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:37:10-20\n   #3  bfastfinal.fut:29:17-66\n   #4  bfastfinal.fut:192:5-58\n   #5  bfastfinal.fut:187:1-193:25\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_28697,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_37356 = self.sizes["main.segmap_group_size_37286"]
      segmap_usable_groups_37357 = sdiv_up64(binop_x_42562,
                                             segmap_group_sizze_37356)
      mem_42563 = opencl_alloc(self, bytes_42561, "mem_42563")
      if ((1 * (np.long(segmap_usable_groups_37357) * np.long(segmap_group_sizze_37356))) != 0):
        self.mainzisegmap_37283_var.set_args(self.global_failure,
                                             np.int64(N_28681),
                                             np.float32(freq_28686),
                                             np.int64(i32_res_28697),
                                             mappingindices_mem_42558,
                                             mem_42563)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37283_var,
                                   ((np.long(segmap_usable_groups_37357) * np.long(segmap_group_sizze_37356)),),
                                   (np.long(segmap_group_sizze_37356),))
        if synchronous:
          sync(self)
      binop_p_mem_42568 = mem_42563
    else:
      bounds_invalid_upwards_28725 = slt64(i32_res_28697, np.int64(0))
      valid_28726 = not(bounds_invalid_upwards_28725)
      range_valid_c_28727 = True
      assert valid_28726, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:49:10-22\n   #3  bfastfinal.fut:30:17-64\n   #4  bfastfinal.fut:192:5-58\n   #5  bfastfinal.fut:187:1-193:25\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_28697,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_37530 = self.sizes["main.segmap_group_size_37464"]
      segmap_usable_groups_37531 = sdiv_up64(binop_x_42562,
                                             segmap_group_sizze_37530)
      mem_42567 = opencl_alloc(self, bytes_42561, "mem_42567")
      if ((1 * (np.long(segmap_usable_groups_37531) * np.long(segmap_group_sizze_37530))) != 0):
        self.mainzisegmap_37461_var.set_args(self.global_failure,
                                             np.int64(N_28681),
                                             np.float32(freq_28686),
                                             np.int64(i32_res_28697),
                                             mappingindices_mem_42558,
                                             mem_42567)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37461_var,
                                   ((np.long(segmap_usable_groups_37531) * np.long(segmap_group_sizze_37530)),),
                                   (np.long(segmap_group_sizze_37530),))
        if synchronous:
          sync(self)
      binop_p_mem_42568 = mem_42567
    x_28750 = (N_28681 * N_28681)
    y_28751 = (np.int64(2) * N_28681)
    x_28752 = (x_28750 + y_28751)
    x_28753 = (np.int64(1) + x_28752)
    y_28754 = (np.int64(1) + N_28681)
    zzero_28755 = (y_28754 == np.int64(0))
    nonzzero_28756 = not(zzero_28755)
    nonzzero_cert_28757 = True
    assert nonzzero_28756, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:35:32-60\n   #1  bfastfinal.fut:192:5-58\n   #2  bfastfinal.fut:187:1-193:25\n" % ("division by zero",))
    x_28758 = sdiv64(x_28753, y_28754)
    x_28759 = (x_28758 - N_28681)
    binop_p_28760 = (x_28759 - np.int64(1))
    defunc_0_f_res_28761 = sext_i64_i32(binop_p_28760)
    i32_res_28762 = sitofp_i32_f32(defunc_0_f_res_28761)
    segmap_group_sizze_37613 = self.sizes["main.segmap_group_size_37592"]
    segmap_usable_groups_37614 = sdiv_up64(binop_x_42562,
                                           segmap_group_sizze_37613)
    mem_42571 = opencl_alloc(self, bytes_42561, "mem_42571")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_42571, np.int64(0),
                                                binop_p_mem_42568, np.int64(0),
                                                np.int64(1), N_28681,
                                                i32_res_28697)
    mem_42575 = opencl_alloc(self, bytes_42561, "mem_42575")
    if ((1 * (np.long(segmap_usable_groups_37614) * np.long(segmap_group_sizze_37613))) != 0):
      self.mainzisegmap_37589_var.set_args(self.global_failure,
                                           np.int64(N_28681),
                                           np.int64(i32_res_28697),
                                           np.float32(i32_res_28762), mem_42571,
                                           mem_42575)
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37589_var,
                                 ((np.long(segmap_usable_groups_37614) * np.long(segmap_group_sizze_37613)),),
                                 (np.long(segmap_group_sizze_37613),))
      if synchronous:
        sync(self)
    eq_x_y_28770 = (np.int64(0) == i32_res_28697)
    p_and_eq_x_y_28771 = (cond_28694 and eq_x_y_28770)
    not_p_28772 = not(cond_28694)
    p_and_eq_x_y_28773 = (eq_x_y_28770 and not_p_28772)
    empty_slice_28774 = (p_and_eq_x_y_28771 or p_and_eq_x_y_28773)
    m_28775 = (i32_res_28697 - np.int64(1))
    zzero_leq_i_p_m_t_s_28776 = sle64(np.int64(0), m_28775)
    i_p_m_t_s_leq_w_28777 = slt64(m_28775, i32_res_28697)
    i_lte_j_28778 = sle64(np.int64(0), i32_res_28697)
    y_28779 = (zzero_leq_i_p_m_t_s_28776 and i_p_m_t_s_leq_w_28777)
    y_28780 = (i_lte_j_28778 and y_28779)
    ok_or_empty_28781 = (empty_slice_28774 or y_28780)
    empty_slice_28782 = (i32_res_28691 == np.int64(0))
    m_28783 = (i32_res_28691 - np.int64(1))
    zzero_leq_i_p_m_t_s_28784 = sle64(np.int64(0), m_28783)
    i_p_m_t_s_leq_w_28785 = slt64(m_28783, N_28681)
    i_lte_j_28786 = sle64(np.int64(0), i32_res_28691)
    y_28787 = (zzero_leq_i_p_m_t_s_28784 and i_p_m_t_s_leq_w_28785)
    y_28788 = (i_lte_j_28786 and y_28787)
    ok_or_empty_28789 = (empty_slice_28782 or y_28788)
    index_ok_28790 = (ok_or_empty_28781 and ok_or_empty_28789)
    index_certs_28791 = True
    assert index_ok_28790, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:38:13-21\n   #1  bfastfinal.fut:192:5-58\n   #2  bfastfinal.fut:187:1-193:25\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_28691,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               i32_res_28697,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_28681,
                                                                                                                                                                               "]."))
    empty_slice_28793 = (i32_res_28697 == np.int64(0))
    ok_or_empty_28794 = (y_28780 or empty_slice_28793)
    index_ok_28795 = (ok_or_empty_28789 and ok_or_empty_28794)
    index_certs_28796 = True
    assert index_ok_28795, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:39:13-22\n   #1  bfastfinal.fut:192:5-58\n   #2  bfastfinal.fut:187:1-193:25\n" % ("Index [:",
                                                                                                                                                                               i32_res_28691,
                                                                                                                                                                               ", ",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":] out of bounds for array of shape [",
                                                                                                                                                                               N_28681,
                                                                                                                                                                               "][",
                                                                                                                                                                               i32_res_28697,
                                                                                                                                                                               "]."))
    empty_slice_28798 = (m_28682 == np.int64(0))
    m_28799 = (m_28682 - np.int64(1))
    zzero_leq_i_p_m_t_s_28800 = sle64(np.int64(0), m_28799)
    i_p_m_t_s_leq_w_28801 = slt64(m_28799, m_28682)
    i_lte_j_28802 = sle64(np.int64(0), m_28682)
    y_28803 = (zzero_leq_i_p_m_t_s_28800 and i_p_m_t_s_leq_w_28801)
    y_28804 = (i_lte_j_28802 and y_28803)
    ok_or_empty_28805 = (empty_slice_28798 or y_28804)
    index_ok_28806 = (ok_or_empty_28789 and ok_or_empty_28805)
    index_certs_28807 = True
    assert index_ok_28806, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:40:13-26\n   #1  bfastfinal.fut:192:5-58\n   #2  bfastfinal.fut:187:1-193:25\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_28691,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               m_28682,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_28681,
                                                                                                                                                                               "]."))
    suff_outer_par_37620 = (self.sizes["main.suff_outer_par_6"] <= m_28682)
    segmap_group_sizze_37646 = self.sizes["main.segmap_group_size_37624"]
    max_num_groups_43872 = self.sizes["main.segmap_num_groups_37626"]
    num_groups_37647 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28682,
                                                            segmap_group_sizze_37646),
                                                  sext_i32_i64(max_num_groups_43872))))
    nest_sizze_37822 = (m_28682 * i32_res_28697)
    segmap_group_sizze_37823 = self.sizes["main.segmap_group_size_37671"]
    max_num_groups_43873 = self.sizes["main.segmap_num_groups_37673"]
    num_groups_37824 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_37822,
                                                            segmap_group_sizze_37823),
                                                  sext_i32_i64(max_num_groups_43873))))
    suff_outer_par_37828 = (self.sizes["main.suff_outer_par_7"] <= nest_sizze_37822)
    y_37852 = (i32_res_28697 * i32_res_28697)
    comparatee_37853 = (m_28682 * y_37852)
    suff_outer_par_37854 = (self.sizes["main.suff_outer_par_8"] <= comparatee_37853)
    nest_sizze_37874 = (i32_res_28691 * comparatee_37853)
    segred_group_sizze_37875 = self.sizes["main.segred_group_size_37731"]
    max_num_groups_43874 = self.sizes["main.segred_num_groups_37733"]
    num_groups_37876 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_37874,
                                                            segred_group_sizze_37875),
                                                  sext_i32_i64(max_num_groups_43874))))
    Tx_40737 = self.sizes["main.Tx_40735"]
    Ty_40738 = self.sizes["main.Ty_40736"]
    Ty_40739 = smin64(i32_res_28697, Ty_40738)
    Tx_40740 = smin64(i32_res_28697, Tx_40737)
    gridDim_zz_40743 = sdiv_up64(m_28682, np.int64(30))
    group_sizze_tile3d_40746 = (Ty_40739 * Tx_40740)
    binop_x_42577 = (N_28681 * m_28682)
    bytes_42576 = (np.int64(4) * binop_x_42577)
    bytes_42621 = (np.int64(4) * comparatee_37853)
    bytes_42580 = (np.int64(4) * y_37852)
    binop_x_42724 = (i32_res_28697 * nest_sizze_37822)
    bytes_42722 = (np.int64(4) * binop_x_42724)
    bytes_42626 = (np.int64(4) * i32_res_28697)
    binop_x_42655 = (np.int64(30) * group_sizze_tile3d_40746)
    bytes_42653 = (np.int64(4) * binop_x_42655)
    binop_x_43625 = (np.int64(4) * Ty_40739)
    binop_x_43626 = (Tx_40740 * binop_x_43625)
    sizze_43627 = (np.int64(30) * binop_x_43626)
    num_threads_43811 = (segmap_group_sizze_37646 * num_groups_37647)
    total_sizze_43812 = (bytes_42580 * num_threads_43811)
    num_threads_43813 = (segmap_group_sizze_37823 * num_groups_37824)
    total_sizze_43814 = (bytes_42626 * num_threads_43813)
    local_memory_capacity_43996 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_43996)) and suff_outer_par_37620):
      mem_42578 = opencl_alloc(self, bytes_42576, "mem_42578")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_42578, np.int64(0),
                                                  images_mem_42559, np.int64(0),
                                                  np.int64(1), N_28681, m_28682)
      mem_42624 = opencl_alloc(self, bytes_42621, "mem_42624")
      mem_42582 = opencl_alloc(self, total_sizze_43812, "mem_42582")
      if ((1 * (np.long(num_groups_37647) * np.long(segmap_group_sizze_37646))) != 0):
        self.mainzisegmap_37622_var.set_args(self.global_failure,
                                             np.int64(N_28681),
                                             np.int64(m_28682),
                                             np.int32(n_28685),
                                             np.int32(k2p2zq_28695),
                                             np.int64(i32_res_28697),
                                             np.int64(num_groups_37647),
                                             binop_p_mem_42568, mem_42575,
                                             mem_42578, mem_42582, mem_42624)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37622_var,
                                   ((np.long(num_groups_37647) * np.long(segmap_group_sizze_37646)),),
                                   (np.long(segmap_group_sizze_37646),))
        if synchronous:
          sync(self)
      mem_42578 = None
      mem_42582 = None
      mem_42725 = opencl_alloc(self, bytes_42722, "mem_42725")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_42725, np.int64(0),
                                                  mem_42624, np.int64(0),
                                                  np.int64(1), m_28682,
                                                  (i32_res_28697 * i32_res_28697))
      mem_42624 = None
      defunc_3_map_res_mem_42727 = mem_42725
    else:
      local_memory_capacity_43995 = self.max_local_memory
      if (sle64(np.int64(0),
                sext_i32_i64(local_memory_capacity_43995)) and suff_outer_par_37828):
        mem_42643 = opencl_alloc(self, bytes_42722, "mem_42643")
        mem_42627 = opencl_alloc(self, total_sizze_43814, "mem_42627")
        if ((1 * (np.long(num_groups_37824) * np.long(segmap_group_sizze_37823))) != 0):
          self.mainzisegmap_37668_var.set_args(self.global_failure,
                                               np.int64(N_28681),
                                               np.int64(m_28682),
                                               np.int32(n_28685),
                                               np.int32(k2p2zq_28695),
                                               np.int64(i32_res_28697),
                                               np.int64(num_groups_37824),
                                               images_mem_42559, mem_42571,
                                               mem_42575, mem_42627, mem_42643)
          cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37668_var,
                                     ((np.long(num_groups_37824) * np.long(segmap_group_sizze_37823)),),
                                     (np.long(segmap_group_sizze_37823),))
          if synchronous:
            sync(self)
        mem_42627 = None
        mem_42719 = opencl_alloc(self, bytes_42722, "mem_42719")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_42719, np.int64(0),
                                                    mem_42643, np.int64(0),
                                                    np.int64(1),
                                                    (m_28682 * i32_res_28697),
                                                    i32_res_28697)
        mem_42643 = None
        defunc_3_map_res_mem_42721 = mem_42719
      else:
        local_memory_capacity_43994 = self.max_local_memory
        if (sle64(np.int64(120),
                  sext_i32_i64(local_memory_capacity_43994)) and suff_outer_par_37854):
          mem_42646 = opencl_alloc(self, bytes_42576, "mem_42646")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_42646, np.int64(0),
                                                      images_mem_42559,
                                                      np.int64(0), np.int64(1),
                                                      N_28681, m_28682)
          gridDim_x_40741 = sdiv_up64(i32_res_28697, Tx_40740)
          gridDim_y_40742 = sdiv_up64(i32_res_28697, Ty_40739)
          binop_x_40744 = (gridDim_y_40742 * gridDim_zz_40743)
          grid_sizze_tile3d_40745 = (gridDim_x_40741 * binop_x_40744)
          count_shmem_40747 = sdiv_up64(np.int64(30), group_sizze_tile3d_40746)
          mem_42706 = opencl_alloc(self, bytes_42722, "mem_42706")
          if ((1 * (np.long(grid_sizze_tile3d_40745) * np.long(group_sizze_tile3d_40746))) != 0):
            self.mainzisegmap_intragroup_40751_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(np.int64(120))),
                                                            np.int64(m_28682),
                                                            np.int32(n_28685),
                                                            np.int64(i32_res_28697),
                                                            np.int64(Ty_40739),
                                                            np.int64(Tx_40740),
                                                            np.int64(gridDim_x_40741),
                                                            np.int64(gridDim_y_40742),
                                                            np.int64(group_sizze_tile3d_40746),
                                                            np.int64(count_shmem_40747),
                                                            mem_42571,
                                                            mem_42575,
                                                            mem_42646,
                                                            mem_42706)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegmap_intragroup_40751_var,
                                       ((np.long(grid_sizze_tile3d_40745) * np.long(group_sizze_tile3d_40746)),),
                                       (np.long(group_sizze_tile3d_40746),))
            if synchronous:
              sync(self)
          mem_42646 = None
          defunc_3_map_res_mem_42715 = mem_42706
        else:
          mem_42709 = opencl_alloc(self, bytes_42561, "mem_42709")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_42709, np.int64(0),
                                                      mem_42575, np.int64(0),
                                                      np.int64(1),
                                                      i32_res_28697, N_28681)
          mem_42714 = opencl_alloc(self, bytes_42722, "mem_42714")
          if slt64((i32_res_28691 * np.int64(2)), segred_group_sizze_37875):
            segment_sizze_nonzzero_43934 = smax64(np.int64(1), i32_res_28691)
            num_threads_43935 = (num_groups_37876 * segred_group_sizze_37875)
            if ((1 * (np.long(num_groups_37876) * np.long(segred_group_sizze_37875))) != 0):
              self.mainzisegred_small_37737_var.set_args(self.global_failure,
                                                         cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37875))),
                                                         np.int64(N_28681),
                                                         np.int64(m_28682),
                                                         np.int64(i32_res_28691),
                                                         np.int64(i32_res_28697),
                                                         np.int64(num_groups_37876),
                                                         np.int64(segment_sizze_nonzzero_43934),
                                                         images_mem_42559,
                                                         binop_p_mem_42568,
                                                         mem_42709, mem_42714)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainzisegred_small_37737_var,
                                         ((np.long(num_groups_37876) * np.long(segred_group_sizze_37875)),),
                                         (np.long(segred_group_sizze_37875),))
              if synchronous:
                sync(self)
          else:
            groups_per_segment_43955 = sdiv_up64(num_groups_37876,
                                                 smax64(np.int64(1),
                                                        ((m_28682 * i32_res_28697) * i32_res_28697)))
            elements_per_thread_43956 = sdiv_up64(i32_res_28691,
                                                  (segred_group_sizze_37875 * groups_per_segment_43955))
            virt_num_groups_43957 = (groups_per_segment_43955 * ((m_28682 * i32_res_28697) * i32_res_28697))
            num_threads_43958 = (num_groups_37876 * segred_group_sizze_37875)
            threads_per_segment_43959 = (groups_per_segment_43955 * segred_group_sizze_37875)
            group_res_arr_mem_43960 = opencl_alloc(self,
                                                   (np.int32(4) * (segred_group_sizze_37875 * virt_num_groups_43957)),
                                                   "group_res_arr_mem_43960")
            mainzicounter_mem_43962 = self.mainzicounter_mem_43962
            if ((1 * (np.long(num_groups_37876) * np.long(segred_group_sizze_37875))) != 0):
              self.mainzisegred_large_37737_var.set_args(self.global_failure,
                                                         cl.LocalMemory(np.long(np.int32(1))),
                                                         cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37875))),
                                                         np.int64(N_28681),
                                                         np.int64(i32_res_28691),
                                                         np.int64(i32_res_28697),
                                                         np.int64(num_groups_37876),
                                                         np.int64(groups_per_segment_43955),
                                                         np.int64(elements_per_thread_43956),
                                                         np.int64(virt_num_groups_43957),
                                                         np.int64(threads_per_segment_43959),
                                                         images_mem_42559,
                                                         binop_p_mem_42568,
                                                         mem_42709, mem_42714,
                                                         group_res_arr_mem_43960,
                                                         mainzicounter_mem_43962)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainzisegred_large_37737_var,
                                         ((np.long(num_groups_37876) * np.long(segred_group_sizze_37875)),),
                                         (np.long(segred_group_sizze_37875),))
              if synchronous:
                sync(self)
          mem_42709 = None
          defunc_3_map_res_mem_42715 = mem_42714
        defunc_3_map_res_mem_42721 = defunc_3_map_res_mem_42715
      defunc_3_map_res_mem_42727 = defunc_3_map_res_mem_42721
    m_28828 = (np.int32(2) * k2p2zq_28695)
    nm_28829 = (k2p2zq_28695 * m_28828)
    i32_res_28830 = sext_i32_i64(nm_28829)
    bounds_invalid_upwards_28831 = slt64(i32_res_28830, np.int64(0))
    valid_28832 = not(bounds_invalid_upwards_28831)
    range_valid_c_28833 = True
    assert valid_28832, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:78:34-50\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:192:5-58\n   #4  bfastfinal.fut:187:1-193:25\n" % ("Range ",
                                                                                                                                                                                                                                        np.int64(0),
                                                                                                                                                                                                                                        "..",
                                                                                                                                                                                                                                        np.int64(1),
                                                                                                                                                                                                                                        "..<",
                                                                                                                                                                                                                                        i32_res_28830,
                                                                                                                                                                                                                                        " is invalid."))
    zzero_28838 = (m_28828 == np.int32(0))
    nonzzero_28839 = not(zzero_28838)
    nonzzero_cert_28840 = True
    assert nonzzero_28839, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:73:41-47\n   #1  helpers.fut:73:14-78:52\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:192:5-58\n   #4  bfastfinal.fut:187:1-193:25\n" % ("division by zero",))
    loop_nonempty_28841 = slt32(np.int32(0), k2p2zq_28695)
    loop_not_taken_28842 = not(loop_nonempty_28841)
    protect_assert_disj_28843 = (nonzzero_28839 or loop_not_taken_28842)
    nonzzero_cert_28844 = True
    assert protect_assert_disj_28843, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:59:43-49\n   #1  helpers.fut:59:16-65:44\n   #2  helpers.fut:79:15-33\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:192:5-58\n   #5  bfastfinal.fut:187:1-193:25\n" % ("division by zero",))
    i32_res_28845 = sext_i32_i64(m_28828)
    x_28846 = (i32_res_28697 * i32_res_28845)
    dim_ok_28847 = (x_28846 == i32_res_28830)
    dim_ok_cert_28848 = True
    assert dim_ok_28847, ("Error: %s\n\nBacktrace:\n-> #0  /prelude/array.fut:141:3-33\n   #1  helpers.fut:81:9-45\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:192:5-58\n   #4  bfastfinal.fut:187:1-193:25\n" % ("new shape has different number of elements than old shape",))
    j_m_i_28849 = (i32_res_28845 - i32_res_28697)
    empty_slice_28850 = (j_m_i_28849 == np.int64(0))
    m_28851 = (j_m_i_28849 - np.int64(1))
    i_p_m_t_s_28852 = (i32_res_28697 + m_28851)
    zzero_leq_i_p_m_t_s_28853 = sle64(np.int64(0), i_p_m_t_s_28852)
    i_p_m_t_s_leq_w_28854 = slt64(i_p_m_t_s_28852, i32_res_28845)
    i_lte_j_28855 = sle64(i32_res_28697, i32_res_28845)
    y_28856 = (i_lte_j_28778 and i_p_m_t_s_leq_w_28854)
    y_28857 = (zzero_leq_i_p_m_t_s_28853 and y_28856)
    y_28858 = (i_lte_j_28855 and y_28857)
    forwards_ok_28859 = (i_lte_j_28778 and y_28858)
    ok_or_empty_28860 = (empty_slice_28850 or forwards_ok_28859)
    index_ok_28861 = (ok_or_empty_28794 and ok_or_empty_28860)
    index_certs_28862 = True
    assert index_ok_28861, ("Error: %s%d%s%d%s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-88\n   #1  bfastfinal.fut:50:35-50\n   #2  bfastfinal.fut:192:5-58\n   #3  bfastfinal.fut:187:1-193:25\n" % ("Index [",
                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_28697,
                                                                                                                                                                                                                   ", ",
                                                                                                                                                                                                                   i32_res_28697,
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_28845,
                                                                                                                                                                                                                   "] out of bounds for array of shape [",
                                                                                                                                                                                                                   i32_res_28697,
                                                                                                                                                                                                                   "][",
                                                                                                                                                                                                                   i32_res_28845,
                                                                                                                                                                                                                   "]."))
    dim_match_28863 = (i32_res_28697 == j_m_i_28849)
    empty_or_match_cert_28864 = True
    assert dim_match_28863, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-103\n   #1  bfastfinal.fut:50:35-50\n   #2  bfastfinal.fut:192:5-58\n   #3  bfastfinal.fut:187:1-193:25\n" % ("Value of (core language) shape (",
                                                                                                                                                                                                             i32_res_28697,
                                                                                                                                                                                                             ", ",
                                                                                                                                                                                                             j_m_i_28849,
                                                                                                                                                                                                             ") cannot match shape of type `[",
                                                                                                                                                                                                             i32_res_28697,
                                                                                                                                                                                                             "][",
                                                                                                                                                                                                             i32_res_28697,
                                                                                                                                                                                                             "]f32`."))
    max_group_sizze_38090 = self.max_group_size
    fits_38091 = sle64(i32_res_28830, max_group_sizze_38090)
    suff_intra_par_38089 = (self.sizes["main.suff_intra_par_11"] <= i32_res_28830)
    intra_suff_and_fits_38092 = (suff_intra_par_38089 and fits_38091)
    nest_sizze_38576 = (m_28682 * i32_res_28830)
    segmap_group_sizze_38577 = self.sizes["main.segmap_group_size_38536"]
    suff_intra_par_38604 = (self.sizes["main.suff_intra_par_13"] <= i32_res_28830)
    intra_suff_and_fits_38605 = (fits_38091 and suff_intra_par_38604)
    segmap_group_sizze_38641 = self.sizes["main.segmap_group_size_38442"]
    segmap_group_sizze_38657 = self.sizes["main.segmap_group_size_38375"]
    segmap_group_sizze_38691 = self.sizes["main.segmap_group_size_38321"]
    y_38701 = (i32_res_28697 * j_m_i_28849)
    nest_sizze_38702 = (m_28682 * y_38701)
    segmap_group_sizze_38703 = self.sizes["main.segmap_group_size_38156"]
    segmap_usable_groups_38642 = sdiv_up_safe64(m_28682,
                                                segmap_group_sizze_38641)
    segmap_usable_groups_38658 = sdiv_up_safe64(nest_sizze_38576,
                                                segmap_group_sizze_38657)
    segmap_usable_groups_38692 = sdiv_up_safe64(nest_sizze_38576,
                                                segmap_group_sizze_38691)
    bytes_42730 = (np.int64(4) * i32_res_28830)
    bytes_42753 = (np.int64(4) * nest_sizze_38576)
    binop_x_42804 = (j_m_i_28849 * nest_sizze_37822)
    bytes_42802 = (np.int64(4) * binop_x_42804)
    local_memory_capacity_43997 = self.max_local_memory
    if intra_suff_and_fits_38092:
      defunc_3_map_res_ixfn_42806 = i32_res_28697
    else:
      defunc_3_map_res_ixfn_42806 = j_m_i_28849
    local_memory_capacity_44060 = self.max_local_memory
    if (sle64(((bytes_42730 + srem64((np.int64(8) - srem64(bytes_42730,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_42730 + srem64((np.int64(8) - srem64(bytes_42730,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44060)) and intra_suff_and_fits_38092):
      mem_42751 = opencl_alloc(self, bytes_42722, "mem_42751")
      if ((1 * (np.long(m_28682) * np.long(i32_res_28830))) != 0):
        self.mainzisegmap_intragroup_37972_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_42730)),
                                                        cl.LocalMemory(np.long(bytes_42730)),
                                                        np.int32(k2p2zq_28695),
                                                        np.int64(i32_res_28697),
                                                        np.int32(m_28828),
                                                        np.int64(i32_res_28830),
                                                        np.int64(i32_res_28845),
                                                        defunc_3_map_res_mem_42727,
                                                        mem_42751)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_37972_var,
                                   ((np.long(m_28682) * np.long(i32_res_28830)),),
                                   (np.long(i32_res_28830),))
        if synchronous:
          sync(self)
      defunc_3_map_res_mem_42807 = mem_42751
    else:
      segmap_usable_groups_38578 = sdiv_up64(nest_sizze_38576,
                                             segmap_group_sizze_38577)
      mem_42755 = opencl_alloc(self, bytes_42753, "mem_42755")
      if ((1 * (np.long(segmap_usable_groups_38578) * np.long(segmap_group_sizze_38577))) != 0):
        self.mainzisegmap_38533_var.set_args(self.global_failure,
                                             np.int64(m_28682),
                                             np.int32(k2p2zq_28695),
                                             np.int64(i32_res_28697),
                                             np.int32(m_28828),
                                             np.int64(i32_res_28830),
                                             defunc_3_map_res_mem_42727,
                                             mem_42755)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38533_var,
                                   ((np.long(segmap_usable_groups_38578) * np.long(segmap_group_sizze_38577)),),
                                   (np.long(segmap_group_sizze_38577),))
        if synchronous:
          sync(self)
      ctx_param_ext_42756 = m_28682
      ctx_param_ext_42757 = i32_res_28830
      ctx_param_ext_42758 = np.int64(0)
      ctx_param_ext_42759 = i32_res_28830
      ctx_param_ext_42760 = m_28682
      ctx_param_ext_42761 = np.int64(1)
      ctx_param_ext_42762 = i32_res_28830
      mem_param_42763 = mem_42755
      i_38594 = np.int32(0)
      one_45040 = np.int32(1)
      for counter_45039 in range(k2p2zq_28695):
        i32_res_38596 = sext_i32_i64(i_38594)
        local_memory_capacity_44020 = self.max_local_memory
        if intra_suff_and_fits_38605:
          gauss_jordan_res_ixfn_42785 = m_28682
        else:
          gauss_jordan_res_ixfn_42785 = ctx_param_ext_42760
        local_memory_capacity_44021 = self.max_local_memory
        if intra_suff_and_fits_38605:
          gauss_jordan_res_ixfn_42786 = i32_res_28830
        else:
          gauss_jordan_res_ixfn_42786 = ctx_param_ext_42762
        local_memory_capacity_44022 = self.max_local_memory
        if intra_suff_and_fits_38605:
          gauss_jordan_res_ixfn_42787 = m_28682
        else:
          gauss_jordan_res_ixfn_42787 = ctx_param_ext_42756
        local_memory_capacity_44023 = self.max_local_memory
        if intra_suff_and_fits_38605:
          gauss_jordan_res_ixfn_42788 = i32_res_28830
        else:
          gauss_jordan_res_ixfn_42788 = ctx_param_ext_42757
        local_memory_capacity_44024 = self.max_local_memory
        if intra_suff_and_fits_38605:
          gauss_jordan_res_ixfn_42789 = i32_res_28830
        else:
          gauss_jordan_res_ixfn_42789 = ctx_param_ext_42759
        local_memory_capacity_44025 = self.max_local_memory
        if intra_suff_and_fits_38605:
          gauss_jordan_res_ixfn_42790 = np.int64(1)
        else:
          gauss_jordan_res_ixfn_42790 = ctx_param_ext_42761
        local_memory_capacity_44026 = self.max_local_memory
        if intra_suff_and_fits_38605:
          gauss_jordan_res_ixfn_42791 = np.int64(0)
        else:
          gauss_jordan_res_ixfn_42791 = ctx_param_ext_42758
        local_memory_capacity_44054 = self.max_local_memory
        if ((sle64(np.int64(0),
                   sext_i32_i64(local_memory_capacity_44054)) and sle64((bytes_42730 + srem64((np.int64(8) - srem64(bytes_42730,
                                                                                                                    np.int64(8))),
                                                                                              np.int64(8))),
                                                                        sext_i32_i64(local_memory_capacity_44054))) and intra_suff_and_fits_38605):
          mem_42768 = opencl_alloc(self, bytes_42753, "mem_42768")
          group_sizze_44030 = self.sizes["main.group_size_44030"]
          num_groups_44031 = sdiv_up64((m_28682 * i32_res_28830),
                                       group_sizze_44030)
          if ((1 * (np.long(num_groups_44031) * np.long(group_sizze_44030))) != 0):
            self.mainzicopy_44027_var.set_args(np.int64(m_28682),
                                               np.int64(i32_res_28830),
                                               np.int64(ctx_param_ext_42758),
                                               np.int64(ctx_param_ext_42759),
                                               np.int64(ctx_param_ext_42761),
                                               mem_param_42763, mem_42768)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzicopy_44027_var,
                                       ((np.long(num_groups_44031) * np.long(group_sizze_44030)),),
                                       (np.long(group_sizze_44030),))
            if synchronous:
              sync(self)
          mem_42776 = opencl_alloc(self, bytes_42753, "mem_42776")
          if ((1 * (np.long(m_28682) * np.long(i32_res_28830))) != 0):
            self.mainzisegmap_intragroup_38199_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(bytes_42730)),
                                                            np.int64(m_28682),
                                                            np.int32(k2p2zq_28695),
                                                            np.int32(m_28828),
                                                            np.int64(i32_res_28830),
                                                            np.int32(i_38594),
                                                            np.int64(i32_res_38596),
                                                            np.int64(ctx_param_ext_42758),
                                                            np.int64(ctx_param_ext_42759),
                                                            np.int64(ctx_param_ext_42761),
                                                            mem_param_42763,
                                                            mem_42768,
                                                            mem_42776)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegmap_intragroup_38199_var,
                                       ((np.long(m_28682) * np.long(i32_res_28830)),),
                                       (np.long(i32_res_28830),))
            if synchronous:
              sync(self)
          mem_42768 = None
          gauss_jordan_res_mem_42792 = mem_42776
        else:
          mem_42779 = opencl_alloc(self, m_28682, "mem_42779")
          if ((1 * (np.long(segmap_usable_groups_38642) * np.long(segmap_group_sizze_38641))) != 0):
            self.mainzisegmap_38440_var.set_args(self.global_failure,
                                                 np.int64(m_28682),
                                                 np.int64(i32_res_38596),
                                                 np.int64(ctx_param_ext_42758),
                                                 np.int64(ctx_param_ext_42759),
                                                 np.int64(ctx_param_ext_42761),
                                                 mem_param_42763, mem_42779)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38440_var,
                                       ((np.long(segmap_usable_groups_38642) * np.long(segmap_group_sizze_38641)),),
                                       (np.long(segmap_group_sizze_38641),))
            if synchronous:
              sync(self)
          mem_42783 = opencl_alloc(self, bytes_42753, "mem_42783")
          if ((1 * (np.long(segmap_usable_groups_38658) * np.long(segmap_group_sizze_38657))) != 0):
            self.mainzisegmap_38372_var.set_args(self.global_failure,
                                                 np.int64(m_28682),
                                                 np.int32(k2p2zq_28695),
                                                 np.int32(m_28828),
                                                 np.int64(i32_res_28830),
                                                 np.int32(i_38594),
                                                 np.int64(i32_res_38596),
                                                 np.int64(ctx_param_ext_42758),
                                                 np.int64(ctx_param_ext_42759),
                                                 np.int64(ctx_param_ext_42761),
                                                 mem_param_42763, mem_42779,
                                                 mem_42783)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38372_var,
                                       ((np.long(segmap_usable_groups_38658) * np.long(segmap_group_sizze_38657)),),
                                       (np.long(segmap_group_sizze_38657),))
            if synchronous:
              sync(self)
          mem_42779 = None
          if ((1 * (np.long(segmap_usable_groups_38692) * np.long(segmap_group_sizze_38691))) != 0):
            self.mainzisegmap_38318_var.set_args(self.global_failure,
                                                 np.int64(m_28682),
                                                 np.int64(i32_res_28830),
                                                 np.int64(ctx_param_ext_42758),
                                                 np.int64(ctx_param_ext_42759),
                                                 np.int64(ctx_param_ext_42761),
                                                 mem_param_42763, mem_42783)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38318_var,
                                       ((np.long(segmap_usable_groups_38692) * np.long(segmap_group_sizze_38691)),),
                                       (np.long(segmap_group_sizze_38691),))
            if synchronous:
              sync(self)
          mem_42783 = None
          gauss_jordan_res_mem_42792 = mem_param_42763
        ctx_param_ext_tmp_44011 = gauss_jordan_res_ixfn_42787
        ctx_param_ext_tmp_44012 = gauss_jordan_res_ixfn_42788
        ctx_param_ext_tmp_44013 = gauss_jordan_res_ixfn_42791
        ctx_param_ext_tmp_44014 = gauss_jordan_res_ixfn_42789
        ctx_param_ext_tmp_44015 = gauss_jordan_res_ixfn_42785
        ctx_param_ext_tmp_44016 = gauss_jordan_res_ixfn_42790
        ctx_param_ext_tmp_44017 = gauss_jordan_res_ixfn_42786
        mem_param_tmp_44018 = gauss_jordan_res_mem_42792
        ctx_param_ext_42756 = ctx_param_ext_tmp_44011
        ctx_param_ext_42757 = ctx_param_ext_tmp_44012
        ctx_param_ext_42758 = ctx_param_ext_tmp_44013
        ctx_param_ext_42759 = ctx_param_ext_tmp_44014
        ctx_param_ext_42760 = ctx_param_ext_tmp_44015
        ctx_param_ext_42761 = ctx_param_ext_tmp_44016
        ctx_param_ext_42762 = ctx_param_ext_tmp_44017
        mem_param_42763 = mem_param_tmp_44018
        i_38594 += one_45040
      gauss_jordan_res_r_ixfn_42793 = ctx_param_ext_42756
      gauss_jordan_res_r_ixfn_42794 = ctx_param_ext_42757
      gauss_jordan_res_r_ixfn_42795 = ctx_param_ext_42758
      gauss_jordan_res_r_ixfn_42796 = ctx_param_ext_42759
      gauss_jordan_res_r_ixfn_42797 = ctx_param_ext_42760
      gauss_jordan_res_r_ixfn_42798 = ctx_param_ext_42761
      gauss_jordan_res_r_ixfn_42799 = ctx_param_ext_42762
      gauss_jordan_res_r_mem_42800 = mem_param_42763
      mem_42755 = None
      segmap_usable_groups_38704 = sdiv_up64(nest_sizze_38702,
                                             segmap_group_sizze_38703)
      mem_42805 = opencl_alloc(self, bytes_42802, "mem_42805")
      if ((1 * (np.long(segmap_usable_groups_38704) * np.long(segmap_group_sizze_38703))) != 0):
        self.mainzisegmap_38152_var.set_args(self.global_failure,
                                             np.int64(m_28682),
                                             np.int64(i32_res_28697),
                                             np.int64(i32_res_28830),
                                             np.int64(i32_res_28845),
                                             np.int64(x_28846),
                                             np.int64(j_m_i_28849),
                                             np.int64(gauss_jordan_res_r_ixfn_42795),
                                             np.int64(gauss_jordan_res_r_ixfn_42796),
                                             np.int64(gauss_jordan_res_r_ixfn_42798),
                                             gauss_jordan_res_r_mem_42800,
                                             mem_42805)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38152_var,
                                   ((np.long(segmap_usable_groups_38704) * np.long(segmap_group_sizze_38703)),),
                                   (np.long(segmap_group_sizze_38703),))
        if synchronous:
          sync(self)
      gauss_jordan_res_r_mem_42800 = None
      defunc_3_map_res_mem_42807 = mem_42805
    defunc_3_map_res_mem_42727 = None
    suff_outer_par_38712 = (self.sizes["main.suff_outer_par_16"] <= m_28682)
    segmap_group_sizze_38734 = self.sizes["main.segmap_group_size_38716"]
    max_num_groups_44061 = self.sizes["main.segmap_num_groups_38718"]
    num_groups_38735 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28682,
                                                            segmap_group_sizze_38734),
                                                  sext_i32_i64(max_num_groups_44061))))
    suff_outer_par_38819 = (self.sizes["main.suff_outer_par_17"] <= nest_sizze_37822)
    nest_sizze_38835 = (i32_res_28691 * nest_sizze_37822)
    segred_group_sizze_38836 = self.sizes["main.segred_group_size_38778"]
    max_num_groups_44062 = self.sizes["main.segred_num_groups_38780"]
    num_groups_38837 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_38835,
                                                            segred_group_sizze_38836),
                                                  sext_i32_i64(max_num_groups_44062))))
    Ty_40885 = self.sizes["main.Ty_40882"]
    Ry_40886 = self.sizes["main.Ry_40884"]
    Tx_40887 = self.sizes["main.Tx_40881"]
    Rx_40888 = self.sizes["main.Rx_40883"]
    Tk_40889 = self.sizes["main.Tk_40880"]
    TxRx_40892 = (Tx_40887 * Rx_40888)
    TyRy_40893 = (Ty_40885 * Ry_40886)
    a_loc_szz_40895 = (Tk_40889 * TyRy_40893)
    binop_x_40896 = (Tx_40887 * Tk_40889)
    b_loc_szz_40897 = (Rx_40888 * binop_x_40896)
    group_sizze_40901 = (Ty_40885 * Tx_40887)
    bytes_42826 = (np.int64(4) * nest_sizze_37822)
    binop_x_42840 = (Ry_40886 * group_sizze_40901)
    binop_x_42841 = (Rx_40888 * binop_x_42840)
    bytes_42838 = (np.int64(4) * binop_x_42841)
    binop_x_42832 = (Ry_40886 * Rx_40888)
    bytes_42831 = (np.int64(4) * binop_x_42832)
    bytes_42843 = (np.int64(4) * a_loc_szz_40895)
    bytes_42845 = (np.int64(4) * b_loc_szz_40897)
    bytes_42914 = (np.int64(4) * binop_x_42840)
    binop_x_42920 = (Rx_40888 * group_sizze_40901)
    bytes_42918 = (np.int64(4) * binop_x_42920)
    bytes_42906 = (np.int64(4) * Ry_40886)
    bytes_42908 = (np.int64(4) * Rx_40888)
    binop_x_43642 = (np.int64(4) * Ty_40885)
    binop_x_43643 = (Tx_40887 * binop_x_43642)
    binop_x_43644 = (Ry_40886 * binop_x_43643)
    sizze_43645 = (Rx_40888 * binop_x_43644)
    num_threads_43824 = (segmap_group_sizze_38734 * num_groups_38735)
    total_sizze_43825 = (bytes_42626 * num_threads_43824)
    local_memory_capacity_44192 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44192)) and suff_outer_par_38712):
      mem_42810 = opencl_alloc(self, bytes_42576, "mem_42810")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_42810, np.int64(0),
                                                  images_mem_42559, np.int64(0),
                                                  np.int64(1), N_28681, m_28682)
      mem_42828 = opencl_alloc(self, bytes_42826, "mem_42828")
      mem_42813 = opencl_alloc(self, total_sizze_43825, "mem_42813")
      if ((1 * (np.long(num_groups_38735) * np.long(segmap_group_sizze_38734))) != 0):
        self.mainzisegmap_38714_var.set_args(self.global_failure,
                                             np.int64(N_28681),
                                             np.int64(m_28682),
                                             np.int32(n_28685),
                                             np.int32(k2p2zq_28695),
                                             np.int64(i32_res_28697),
                                             np.int64(num_groups_38735),
                                             binop_p_mem_42568, mem_42810,
                                             mem_42813, mem_42828)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38714_var,
                                   ((np.long(num_groups_38735) * np.long(segmap_group_sizze_38734)),),
                                   (np.long(segmap_group_sizze_38734),))
        if synchronous:
          sync(self)
      mem_42810 = None
      mem_42813 = None
      mem_43026 = opencl_alloc(self, bytes_42826, "mem_43026")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43026, np.int64(0),
                                                  mem_42828, np.int64(0),
                                                  np.int64(1), m_28682,
                                                  i32_res_28697)
      mem_42828 = None
      defunc_3_map_res_mem_43028 = mem_43026
    else:
      local_memory_capacity_44191 = self.max_local_memory
      if (sle64(((bytes_42843 + srem64((np.int64(8) - srem64(bytes_42843,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_42845 + srem64((np.int64(8) - srem64(bytes_42845,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44191)) and suff_outer_par_38819):
        tk_div_tx_40890 = sdiv_up64(Tk_40889, Tx_40887)
        tk_div_ty_40891 = sdiv_up64(Tk_40889, Ty_40885)
        gridDim_x_40898 = sdiv_up64(i32_res_28697, TxRx_40892)
        gridDim_y_40899 = sdiv_up64(m_28682, TyRy_40893)
        grid_sizze_40900 = (gridDim_x_40898 * gridDim_y_40899)
        full_tiles_40929 = squot64(i32_res_28691, Tk_40889)
        kk_41136 = (Tk_40889 * full_tiles_40929)
        mem_43018 = opencl_alloc(self, bytes_42826, "mem_43018")
        if ((1 * (np.long(grid_sizze_40900) * np.long(group_sizze_40901))) != 0):
          self.mainzisegmap_intragroup_40904_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_42845)),
                                                          cl.LocalMemory(np.long(bytes_42843)),
                                                          np.int64(N_28681),
                                                          np.int64(m_28682),
                                                          np.int64(i32_res_28691),
                                                          np.int64(i32_res_28697),
                                                          np.int64(gridDim_x_40898),
                                                          np.int64(full_tiles_40929),
                                                          np.int64(kk_41136),
                                                          images_mem_42559,
                                                          mem_42571, mem_43018)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_40904_var,
                                     ((np.long(grid_sizze_40900) * np.long(group_sizze_40901)),),
                                     (np.long(group_sizze_40901),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43023 = mem_43018
      else:
        mem_43022 = opencl_alloc(self, bytes_42826, "mem_43022")
        if slt64((i32_res_28691 * np.int64(2)), segred_group_sizze_38836):
          segment_sizze_nonzzero_44131 = smax64(np.int64(1), i32_res_28691)
          num_threads_44132 = (num_groups_38837 * segred_group_sizze_38836)
          if ((1 * (np.long(num_groups_38837) * np.long(segred_group_sizze_38836))) != 0):
            self.mainzisegred_small_38784_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38836))),
                                                       np.int64(N_28681),
                                                       np.int64(m_28682),
                                                       np.int64(i32_res_28691),
                                                       np.int64(i32_res_28697),
                                                       np.int64(num_groups_38837),
                                                       np.int64(segment_sizze_nonzzero_44131),
                                                       images_mem_42559,
                                                       binop_p_mem_42568,
                                                       mem_43022)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_38784_var,
                                       ((np.long(num_groups_38837) * np.long(segred_group_sizze_38836)),),
                                       (np.long(segred_group_sizze_38836),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44152 = sdiv_up64(num_groups_38837,
                                               smax64(np.int64(1),
                                                      (m_28682 * i32_res_28697)))
          elements_per_thread_44153 = sdiv_up64(i32_res_28691,
                                                (segred_group_sizze_38836 * groups_per_segment_44152))
          virt_num_groups_44154 = (groups_per_segment_44152 * (m_28682 * i32_res_28697))
          num_threads_44155 = (num_groups_38837 * segred_group_sizze_38836)
          threads_per_segment_44156 = (groups_per_segment_44152 * segred_group_sizze_38836)
          group_res_arr_mem_44157 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_38836 * virt_num_groups_44154)),
                                                 "group_res_arr_mem_44157")
          mainzicounter_mem_44159 = self.mainzicounter_mem_44159
          if ((1 * (np.long(num_groups_38837) * np.long(segred_group_sizze_38836))) != 0):
            self.mainzisegred_large_38784_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38836))),
                                                       np.int64(N_28681),
                                                       np.int64(i32_res_28691),
                                                       np.int64(i32_res_28697),
                                                       np.int64(num_groups_38837),
                                                       np.int64(groups_per_segment_44152),
                                                       np.int64(elements_per_thread_44153),
                                                       np.int64(virt_num_groups_44154),
                                                       np.int64(threads_per_segment_44156),
                                                       images_mem_42559,
                                                       binop_p_mem_42568,
                                                       mem_43022,
                                                       group_res_arr_mem_44157,
                                                       mainzicounter_mem_44159)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_38784_var,
                                       ((np.long(num_groups_38837) * np.long(segred_group_sizze_38836)),),
                                       (np.long(segred_group_sizze_38836),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43023 = mem_43022
      defunc_3_map_res_mem_43028 = defunc_3_map_res_mem_43023
    binop_p_mem_42568 = None
    mem_42571 = None
    suff_outer_par_38853 = (self.sizes["main.suff_outer_par_18"] <= m_28682)
    segmap_group_sizze_38874 = self.sizes["main.segmap_group_size_38857"]
    max_num_groups_44193 = self.sizes["main.segmap_num_groups_38859"]
    num_groups_38875 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28682,
                                                            segmap_group_sizze_38874),
                                                  sext_i32_i64(max_num_groups_44193))))
    suff_outer_par_38954 = (self.sizes["main.suff_outer_par_19"] <= nest_sizze_37822)
    segred_group_sizze_38969 = self.sizes["main.segred_group_size_38915"]
    max_num_groups_44194 = self.sizes["main.segred_num_groups_38917"]
    num_groups_38970 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_42724,
                                                            segred_group_sizze_38969),
                                                  sext_i32_i64(max_num_groups_44194))))
    tile_sizze_41348 = self.sizes["main.tile_size_41347"]
    group_sizze_41349 = (tile_sizze_41348 * tile_sizze_41348)
    bytes_43060 = (np.int64(4) * group_sizze_41349)
    binop_x_43658 = (np.int64(4) * tile_sizze_41348)
    sizze_43659 = (tile_sizze_41348 * binop_x_43658)
    num_threads_43828 = (segmap_group_sizze_38874 * num_groups_38875)
    total_sizze_43829 = (bytes_42626 * num_threads_43828)
    local_memory_capacity_44280 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44280)) and suff_outer_par_38853):
      mem_43032 = opencl_alloc(self, bytes_42621, "mem_43032")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43032, np.int64(0),
                                                  defunc_3_map_res_mem_42807,
                                                  np.int64(0), np.int64(1),
                                                  (i32_res_28697 * i32_res_28697),
                                                  m_28682)
      mem_43035 = opencl_alloc(self, bytes_42826, "mem_43035")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43035, np.int64(0),
                                                  defunc_3_map_res_mem_43028,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_28697, m_28682)
      mem_43053 = opencl_alloc(self, bytes_42826, "mem_43053")
      mem_43038 = opencl_alloc(self, total_sizze_43829, "mem_43038")
      if ((1 * (np.long(num_groups_38875) * np.long(segmap_group_sizze_38874))) != 0):
        self.mainzisegmap_38855_var.set_args(self.global_failure,
                                             np.int64(m_28682),
                                             np.int32(k2p2zq_28695),
                                             np.int64(i32_res_28697),
                                             np.int64(num_groups_38875),
                                             mem_43032, mem_43035, mem_43038,
                                             mem_43053)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38855_var,
                                   ((np.long(num_groups_38875) * np.long(segmap_group_sizze_38874)),),
                                   (np.long(segmap_group_sizze_38874),))
        if synchronous:
          sync(self)
      mem_43032 = None
      mem_43035 = None
      mem_43038 = None
      mem_43092 = opencl_alloc(self, bytes_42826, "mem_43092")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43092, np.int64(0),
                                                  mem_43053, np.int64(0),
                                                  np.int64(1), m_28682,
                                                  i32_res_28697)
      mem_43053 = None
      defunc_4_map_res_mem_43094 = mem_43092
    else:
      local_memory_capacity_44279 = self.max_local_memory
      if (sle64(((bytes_43060 + srem64((np.int64(8) - srem64(bytes_43060,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43060 + srem64((np.int64(8) - srem64(bytes_43060,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44279)) and suff_outer_par_38954):
        mem_43057 = opencl_alloc(self, bytes_42722, "mem_43057")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43057, np.int64(0),
                                                    defunc_3_map_res_mem_42807,
                                                    np.int64(0), np.int64(1),
                                                    i32_res_28697,
                                                    (m_28682 * i32_res_28697))
        num_groups_x_41350 = sdiv_up64(m_28682, tile_sizze_41348)
        num_groups_y_41351 = sdiv_up64(i32_res_28697, tile_sizze_41348)
        num_groups_top_41352 = (num_groups_x_41350 * num_groups_y_41351)
        num_whole_tiles_41369 = squot64(i32_res_28697, tile_sizze_41348)
        residual_input_41496 = srem64(i32_res_28697, tile_sizze_41348)
        cond_41497 = (residual_input_41496 == np.int64(0))
        mem_43084 = opencl_alloc(self, bytes_42826, "mem_43084")
        if ((1 * (np.long(num_groups_top_41352) * np.long(group_sizze_41349))) != 0):
          self.mainzisegmap_intragroup_41353_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_43060)),
                                                          cl.LocalMemory(np.long(bytes_43060)),
                                                          np.int64(m_28682),
                                                          np.int64(i32_res_28697),
                                                          np.int64(num_groups_y_41351),
                                                          np.int64(num_whole_tiles_41369),
                                                          np.int64(residual_input_41496),
                                                          np.byte(cond_41497),
                                                          defunc_3_map_res_mem_43028,
                                                          mem_43057, mem_43084)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_41353_var,
                                     ((np.long(num_groups_top_41352) * np.long(group_sizze_41349)),),
                                     (np.long(group_sizze_41349),))
          if synchronous:
            sync(self)
        mem_43057 = None
        defunc_4_map_res_mem_43089 = mem_43084
      else:
        mem_43088 = opencl_alloc(self, bytes_42826, "mem_43088")
        if slt64((i32_res_28697 * np.int64(2)), segred_group_sizze_38969):
          segment_sizze_nonzzero_44219 = smax64(np.int64(1), i32_res_28697)
          num_threads_44220 = (num_groups_38970 * segred_group_sizze_38969)
          if ((1 * (np.long(num_groups_38970) * np.long(segred_group_sizze_38969))) != 0):
            self.mainzisegred_small_38921_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38969))),
                                                       np.int64(m_28682),
                                                       np.int64(i32_res_28697),
                                                       np.int64(num_groups_38970),
                                                       np.int64(segment_sizze_nonzzero_44219),
                                                       defunc_3_map_res_mem_42807,
                                                       defunc_3_map_res_mem_43028,
                                                       mem_43088)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_38921_var,
                                       ((np.long(num_groups_38970) * np.long(segred_group_sizze_38969)),),
                                       (np.long(segred_group_sizze_38969),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44240 = sdiv_up64(num_groups_38970,
                                               smax64(np.int64(1),
                                                      (m_28682 * i32_res_28697)))
          elements_per_thread_44241 = sdiv_up64(i32_res_28697,
                                                (segred_group_sizze_38969 * groups_per_segment_44240))
          virt_num_groups_44242 = (groups_per_segment_44240 * (m_28682 * i32_res_28697))
          num_threads_44243 = (num_groups_38970 * segred_group_sizze_38969)
          threads_per_segment_44244 = (groups_per_segment_44240 * segred_group_sizze_38969)
          group_res_arr_mem_44245 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_38969 * virt_num_groups_44242)),
                                                 "group_res_arr_mem_44245")
          mainzicounter_mem_44247 = self.mainzicounter_mem_44247
          if ((1 * (np.long(num_groups_38970) * np.long(segred_group_sizze_38969))) != 0):
            self.mainzisegred_large_38921_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38969))),
                                                       np.int64(i32_res_28697),
                                                       np.int64(num_groups_38970),
                                                       np.int64(groups_per_segment_44240),
                                                       np.int64(elements_per_thread_44241),
                                                       np.int64(virt_num_groups_44242),
                                                       np.int64(threads_per_segment_44244),
                                                       defunc_3_map_res_mem_42807,
                                                       defunc_3_map_res_mem_43028,
                                                       mem_43088,
                                                       group_res_arr_mem_44245,
                                                       mainzicounter_mem_44247)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_38921_var,
                                       ((np.long(num_groups_38970) * np.long(segred_group_sizze_38969)),),
                                       (np.long(segred_group_sizze_38969),))
            if synchronous:
              sync(self)
        defunc_4_map_res_mem_43089 = mem_43088
      defunc_4_map_res_mem_43094 = defunc_4_map_res_mem_43089
    defunc_3_map_res_mem_42807 = None
    defunc_3_map_res_mem_43028 = None
    suff_outer_par_38985 = (self.sizes["main.suff_outer_par_20"] <= m_28682)
    segmap_group_sizze_39005 = self.sizes["main.segmap_group_size_38989"]
    max_num_groups_44281 = self.sizes["main.segmap_num_groups_38991"]
    num_groups_39006 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28682,
                                                            segmap_group_sizze_39005),
                                                  sext_i32_i64(max_num_groups_44281))))
    suff_outer_par_39082 = (self.sizes["main.suff_outer_par_21"] <= binop_x_42577)
    nest_sizze_39096 = (i32_res_28697 * binop_x_42577)
    segred_group_sizze_39097 = self.sizes["main.segred_group_size_39045"]
    max_num_groups_44282 = self.sizes["main.segred_num_groups_39047"]
    num_groups_39098 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_39096,
                                                            segred_group_sizze_39097),
                                                  sext_i32_i64(max_num_groups_44282))))
    Ty_41626 = self.sizes["main.Ty_41623"]
    Ry_41627 = self.sizes["main.Ry_41625"]
    Tx_41628 = self.sizes["main.Tx_41622"]
    Rx_41629 = self.sizes["main.Rx_41624"]
    Tk_41630 = self.sizes["main.Tk_41621"]
    TxRx_41633 = (Tx_41628 * Rx_41629)
    TyRy_41634 = (Ty_41626 * Ry_41627)
    a_loc_szz_41636 = (Tk_41630 * TyRy_41634)
    binop_x_41637 = (Tx_41628 * Tk_41630)
    b_loc_szz_41638 = (Rx_41629 * binop_x_41637)
    group_sizze_41642 = (Ty_41626 * Tx_41628)
    bytes_43099 = (np.int64(4) * N_28681)
    binop_x_43130 = (Ry_41627 * group_sizze_41642)
    binop_x_43131 = (Rx_41629 * binop_x_43130)
    bytes_43128 = (np.int64(4) * binop_x_43131)
    binop_x_43122 = (Ry_41627 * Rx_41629)
    bytes_43121 = (np.int64(4) * binop_x_43122)
    bytes_43133 = (np.int64(4) * a_loc_szz_41636)
    bytes_43135 = (np.int64(4) * b_loc_szz_41638)
    bytes_43204 = (np.int64(4) * binop_x_43130)
    binop_x_43210 = (Rx_41629 * group_sizze_41642)
    bytes_43208 = (np.int64(4) * binop_x_43210)
    bytes_43196 = (np.int64(4) * Ry_41627)
    bytes_43198 = (np.int64(4) * Rx_41629)
    binop_x_43672 = (np.int64(4) * Ty_41626)
    binop_x_43673 = (Tx_41628 * binop_x_43672)
    binop_x_43674 = (Ry_41627 * binop_x_43673)
    sizze_43675 = (Rx_41629 * binop_x_43674)
    num_threads_43832 = (segmap_group_sizze_39005 * num_groups_39006)
    total_sizze_43833 = (bytes_43099 * num_threads_43832)
    local_memory_capacity_44412 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44412)) and suff_outer_par_38985):
      mem_43097 = opencl_alloc(self, bytes_42826, "mem_43097")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43097, np.int64(0),
                                                  defunc_4_map_res_mem_43094,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_28697, m_28682)
      mem_43115 = opencl_alloc(self, bytes_42576, "mem_43115")
      mem_43100 = opencl_alloc(self, total_sizze_43833, "mem_43100")
      if ((1 * (np.long(num_groups_39006) * np.long(segmap_group_sizze_39005))) != 0):
        self.mainzisegmap_38987_var.set_args(self.global_failure,
                                             np.int64(N_28681),
                                             np.int64(m_28682),
                                             np.int32(k2p2zq_28695),
                                             np.int64(i32_res_28697),
                                             np.int64(num_groups_39006),
                                             mem_42575, mem_43097, mem_43100,
                                             mem_43115)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38987_var,
                                   ((np.long(num_groups_39006) * np.long(segmap_group_sizze_39005)),),
                                   (np.long(segmap_group_sizze_39005),))
        if synchronous:
          sync(self)
      mem_43097 = None
      mem_43100 = None
      mem_43316 = opencl_alloc(self, bytes_42576, "mem_43316")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43316, np.int64(0),
                                                  mem_43115, np.int64(0),
                                                  np.int64(1), m_28682, N_28681)
      mem_43115 = None
      defunc_3_map_res_mem_43318 = mem_43316
    else:
      local_memory_capacity_44411 = self.max_local_memory
      if (sle64(((bytes_43133 + srem64((np.int64(8) - srem64(bytes_43133,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43135 + srem64((np.int64(8) - srem64(bytes_43135,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44411)) and suff_outer_par_39082):
        mem_43118 = opencl_alloc(self, bytes_42561, "mem_43118")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43118, np.int64(0),
                                                    mem_42575, np.int64(0),
                                                    np.int64(1), i32_res_28697,
                                                    N_28681)
        tk_div_tx_41631 = sdiv_up64(Tk_41630, Tx_41628)
        tk_div_ty_41632 = sdiv_up64(Tk_41630, Ty_41626)
        gridDim_x_41639 = sdiv_up64(N_28681, TxRx_41633)
        gridDim_y_41640 = sdiv_up64(m_28682, TyRy_41634)
        grid_sizze_41641 = (gridDim_x_41639 * gridDim_y_41640)
        full_tiles_41670 = squot64(i32_res_28697, Tk_41630)
        kk_41873 = (Tk_41630 * full_tiles_41670)
        mem_43308 = opencl_alloc(self, bytes_42576, "mem_43308")
        if ((1 * (np.long(grid_sizze_41641) * np.long(group_sizze_41642))) != 0):
          self.mainzisegmap_intragroup_41645_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_43135)),
                                                          cl.LocalMemory(np.long(bytes_43133)),
                                                          np.int64(N_28681),
                                                          np.int64(m_28682),
                                                          np.int64(i32_res_28697),
                                                          np.int64(gridDim_x_41639),
                                                          np.int64(full_tiles_41670),
                                                          np.int64(kk_41873),
                                                          defunc_4_map_res_mem_43094,
                                                          mem_43118, mem_43308)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_41645_var,
                                     ((np.long(grid_sizze_41641) * np.long(group_sizze_41642)),),
                                     (np.long(group_sizze_41642),))
          if synchronous:
            sync(self)
        mem_43118 = None
        defunc_3_map_res_mem_43313 = mem_43308
      else:
        mem_43312 = opencl_alloc(self, bytes_42576, "mem_43312")
        if slt64((i32_res_28697 * np.int64(2)), segred_group_sizze_39097):
          segment_sizze_nonzzero_44351 = smax64(np.int64(1), i32_res_28697)
          num_threads_44352 = (num_groups_39098 * segred_group_sizze_39097)
          if ((1 * (np.long(num_groups_39098) * np.long(segred_group_sizze_39097))) != 0):
            self.mainzisegred_small_39051_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39097))),
                                                       np.int64(N_28681),
                                                       np.int64(m_28682),
                                                       np.int64(i32_res_28697),
                                                       np.int64(num_groups_39098),
                                                       np.int64(segment_sizze_nonzzero_44351),
                                                       mem_42575,
                                                       defunc_4_map_res_mem_43094,
                                                       mem_43312)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_39051_var,
                                       ((np.long(num_groups_39098) * np.long(segred_group_sizze_39097)),),
                                       (np.long(segred_group_sizze_39097),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44372 = sdiv_up64(num_groups_39098,
                                               smax64(np.int64(1),
                                                      (m_28682 * N_28681)))
          elements_per_thread_44373 = sdiv_up64(i32_res_28697,
                                                (segred_group_sizze_39097 * groups_per_segment_44372))
          virt_num_groups_44374 = (groups_per_segment_44372 * (m_28682 * N_28681))
          num_threads_44375 = (num_groups_39098 * segred_group_sizze_39097)
          threads_per_segment_44376 = (groups_per_segment_44372 * segred_group_sizze_39097)
          group_res_arr_mem_44377 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_39097 * virt_num_groups_44374)),
                                                 "group_res_arr_mem_44377")
          mainzicounter_mem_44379 = self.mainzicounter_mem_44379
          if ((1 * (np.long(num_groups_39098) * np.long(segred_group_sizze_39097))) != 0):
            self.mainzisegred_large_39051_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39097))),
                                                       np.int64(N_28681),
                                                       np.int64(i32_res_28697),
                                                       np.int64(num_groups_39098),
                                                       np.int64(groups_per_segment_44372),
                                                       np.int64(elements_per_thread_44373),
                                                       np.int64(virt_num_groups_44374),
                                                       np.int64(threads_per_segment_44376),
                                                       mem_42575,
                                                       defunc_4_map_res_mem_43094,
                                                       mem_43312,
                                                       group_res_arr_mem_44377,
                                                       mainzicounter_mem_44379)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_39051_var,
                                       ((np.long(num_groups_39098) * np.long(segred_group_sizze_39097)),),
                                       (np.long(segred_group_sizze_39097),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43313 = mem_43312
      defunc_3_map_res_mem_43318 = defunc_3_map_res_mem_43313
    mem_42575 = None
    defunc_4_map_res_mem_43094 = None
    i_28957 = (N_28681 - np.int64(1))
    x_28958 = sle64(np.int64(0), i_28957)
    y_28959 = slt64(i_28957, N_28681)
    bounds_check_28960 = (x_28958 and y_28959)
    index_certs_28961 = True
    assert bounds_check_28960, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:26:29-34\n   #1  helpers.fut:20:13-20\n   #2  bfastfinal.fut:77:30-91\n   #3  /prelude/soacs.fut:67:19-23\n   #4  /prelude/soacs.fut:67:3-37\n   #5  bfastfinal.fut:71:5-80:25\n   #6  bfastfinal.fut:192:5-58\n   #7  bfastfinal.fut:187:1-193:25\n" % ("Index [",
                                                                                                                                                                                                                                                                                                                                                     i_28957,
                                                                                                                                                                                                                                                                                                                                                     "] out of bounds for array of shape [",
                                                                                                                                                                                                                                                                                                                                                     N_28681,
                                                                                                                                                                                                                                                                                                                                                     "]."))
    fits_39227 = sle64(N_28681, max_group_sizze_38090)
    suff_intra_par_39225 = (self.sizes["main.suff_intra_par_24"] <= N_28681)
    intra_suff_and_fits_39228 = (suff_intra_par_39225 and fits_39227)
    segscan_group_sizze_39377 = self.sizes["main.segscan_group_size_39354"]
    max_num_groups_44413 = self.sizes["main.segscan_num_groups_39356"]
    num_groups_39378 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_42577,
                                                            segscan_group_sizze_39377),
                                                  sext_i32_i64(max_num_groups_44413))))
    segmap_group_sizze_39397 = self.sizes["main.segmap_group_size_39345"]
    segmap_group_sizze_39433 = self.sizes["main.segmap_group_size_39270"]
    bytes_43330 = (np.int64(4) * m_28682)
    bytes_43321 = (np.int64(8) * N_28681)
    bytes_43339 = (np.int64(8) * binop_x_42577)
    local_memory_capacity_44515 = self.max_local_memory
    if (sle64(((((bytes_43321 + srem64((np.int64(8) - srem64(bytes_43321,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43099 + srem64((np.int64(8) - srem64(bytes_43099,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))) + (bytes_43099 + srem64((np.int64(8) - srem64(bytes_43099,
                                                                                                                                          np.int64(8))),
                                                                                                                    np.int64(8)))) + (bytes_43099 + srem64((np.int64(8) - srem64(bytes_43099,
                                                                                                                                                                                 np.int64(8))),
                                                                                                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44515)) and intra_suff_and_fits_39228):
      mem_43331 = opencl_alloc(self, bytes_43330, "mem_43331")
      mem_43334 = opencl_alloc(self, bytes_42576, "mem_43334")
      mem_43337 = opencl_alloc(self, bytes_42576, "mem_43337")
      if ((1 * (np.long(m_28682) * np.long(N_28681))) != 0):
        self.mainzisegmap_intragroup_39150_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_43099)),
                                                        cl.LocalMemory(np.long(bytes_43099)),
                                                        cl.LocalMemory(np.long(bytes_43099)),
                                                        cl.LocalMemory(np.long(bytes_43321)),
                                                        np.int64(N_28681),
                                                        np.int64(i_28957),
                                                        images_mem_42559,
                                                        defunc_3_map_res_mem_43318,
                                                        mem_43331, mem_43334,
                                                        mem_43337)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_39150_var,
                                   ((np.long(m_28682) * np.long(N_28681)),),
                                   (np.long(N_28681),))
        if synchronous:
          sync(self)
      defunc_4_map_res_mem_43355 = mem_43331
      defunc_4_map_res_mem_43356 = mem_43334
      defunc_4_map_res_mem_43357 = mem_43337
    else:
      mem_43341 = opencl_alloc(self, bytes_43339, "mem_43341")
      mem_43344 = opencl_alloc(self, bytes_42576, "mem_43344")
      if slt64(np.int64(0), (m_28682 * N_28681)):
        stage1_max_num_groups_44431 = self.max_group_size
        stage1_num_groups_44432 = smin64(stage1_max_num_groups_44431,
                                         num_groups_39378)
        num_threads_44433 = sext_i64_i32((stage1_num_groups_44432 * segscan_group_sizze_39377))
        if ((1 * (np.long(stage1_num_groups_44432) * np.long(segscan_group_sizze_39377))) != 0):
          self.mainziscan_stage1_39360_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(8) * segscan_group_sizze_39377)))),
                                                    np.int64(N_28681),
                                                    np.int64(m_28682),
                                                    np.int32(num_threads_44433),
                                                    images_mem_42559,
                                                    defunc_3_map_res_mem_43318,
                                                    mem_43341, mem_43344)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage1_39360_var,
                                     ((np.long(stage1_num_groups_44432) * np.long(segscan_group_sizze_39377)),),
                                     (np.long(segscan_group_sizze_39377),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_44432))) != 0):
          self.mainziscan_stage2_39360_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(8) * stage1_num_groups_44432)))),
                                                    np.int64(N_28681),
                                                    np.int64(m_28682),
                                                    np.int64(stage1_num_groups_44432),
                                                    np.int32(num_threads_44433),
                                                    mem_43341)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage2_39360_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_44432)),),
                                     (np.long(stage1_num_groups_44432),))
          if synchronous:
            sync(self)
        required_groups_44475 = sext_i64_i32(sdiv_up64((m_28682 * N_28681),
                                                       segscan_group_sizze_39377))
        if ((1 * (np.long(num_groups_39378) * np.long(segscan_group_sizze_39377))) != 0):
          self.mainziscan_stage3_39360_var.set_args(self.global_failure,
                                                    np.int64(N_28681),
                                                    np.int64(m_28682),
                                                    np.int64(num_groups_39378),
                                                    np.int32(num_threads_44433),
                                                    np.int32(required_groups_44475),
                                                    mem_43341)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage3_39360_var,
                                     ((np.long(num_groups_39378) * np.long(segscan_group_sizze_39377)),),
                                     (np.long(segscan_group_sizze_39377),))
          if synchronous:
            sync(self)
      segmap_usable_groups_39398 = sdiv_up64(m_28682, segmap_group_sizze_39397)
      mem_43347 = opencl_alloc(self, bytes_43330, "mem_43347")
      if ((1 * (np.long(segmap_usable_groups_39398) * np.long(segmap_group_sizze_39397))) != 0):
        self.mainzisegmap_39343_var.set_args(self.global_failure,
                                             np.int64(N_28681),
                                             np.int64(m_28682),
                                             np.int64(i_28957), mem_43341,
                                             mem_43347)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39343_var,
                                   ((np.long(segmap_usable_groups_39398) * np.long(segmap_group_sizze_39397)),),
                                   (np.long(segmap_group_sizze_39397),))
        if synchronous:
          sync(self)
      mem_43350 = opencl_alloc(self, bytes_42576, "mem_43350")
      self.futhark_builtinzhreplicate_f32(mem_43350, (m_28682 * N_28681),
                                          np.nan)
      mem_43353 = opencl_alloc(self, bytes_42576, "mem_43353")
      self.futhark_builtinzhreplicate_i32(mem_43353, (m_28682 * N_28681),
                                          np.int32(0))
      segmap_usable_groups_39434 = sdiv_up64(binop_x_42577,
                                             segmap_group_sizze_39433)
      if ((1 * (np.long(segmap_usable_groups_39434) * np.long(segmap_group_sizze_39433))) != 0):
        self.mainzisegmap_39267_var.set_args(self.global_failure,
                                             np.int64(N_28681),
                                             np.int64(m_28682), mem_43341,
                                             mem_43344, mem_43350, mem_43353)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39267_var,
                                   ((np.long(segmap_usable_groups_39434) * np.long(segmap_group_sizze_39433)),),
                                   (np.long(segmap_group_sizze_39433),))
        if synchronous:
          sync(self)
      mem_43341 = None
      mem_43344 = None
      defunc_4_map_res_mem_43355 = mem_43347
      defunc_4_map_res_mem_43356 = mem_43350
      defunc_4_map_res_mem_43357 = mem_43353
    defunc_3_map_res_mem_43318 = None
    suff_outer_par_39482 = (self.sizes["main.suff_outer_par_28"] <= m_28682)
    fits_39560 = sle64(i32_res_28691, max_group_sizze_38090)
    suff_intra_par_39558 = (self.sizes["main.suff_intra_par_29"] <= i32_res_28691)
    intra_suff_and_fits_39561 = (suff_intra_par_39558 and fits_39560)
    segmap_group_sizze_39525 = self.sizes["main.segmap_group_size_39494"]
    nest_sizze_39648 = (m_28682 * i32_res_28691)
    segred_group_sizze_39649 = self.sizes["main.segred_group_size_39632"]
    max_num_groups_44516 = self.sizes["main.segred_num_groups_39634"]
    num_groups_39650 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_39648,
                                                            segred_group_sizze_39649),
                                                  sext_i32_i64(max_num_groups_44516))))
    segred_group_sizze_39663 = self.sizes["main.segred_group_size_39611"]
    max_num_groups_44517 = self.sizes["main.segred_num_groups_39613"]
    num_groups_39664 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_39648,
                                                            segred_group_sizze_39663),
                                                  sext_i32_i64(max_num_groups_44517))))
    segmap_group_sizze_39679 = self.sizes["main.segmap_group_size_39596"]
    bytes_43366 = (np.int64(4) * segmap_group_sizze_39525)
    local_memory_capacity_44669 = self.max_local_memory
    if (sle64(((bytes_43366 + srem64((np.int64(8) - srem64(bytes_43366,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_43366 + srem64((np.int64(8) - srem64(bytes_43366,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44669)) and suff_outer_par_39482):
      segmap_usable_groups_39526 = sdiv_up64(m_28682, segmap_group_sizze_39525)
      mem_43360 = opencl_alloc(self, bytes_42576, "mem_43360")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43360, np.int64(0),
                                                  images_mem_42559, np.int64(0),
                                                  np.int64(1), N_28681, m_28682)
      mem_43363 = opencl_alloc(self, bytes_42576, "mem_43363")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43363, np.int64(0),
                                                  defunc_4_map_res_mem_43356,
                                                  np.int64(0), np.int64(1),
                                                  N_28681, m_28682)
      num_whole_tiles_42101 = squot64(i32_res_28691, segmap_group_sizze_39525)
      residual_input_42190 = srem64(i32_res_28691, segmap_group_sizze_39525)
      cond_42191 = (residual_input_42190 == np.int64(0))
      mem_43394 = opencl_alloc(self, bytes_43330, "mem_43394")
      mem_43396 = opencl_alloc(self, bytes_43330, "mem_43396")
      mem_43398 = opencl_alloc(self, bytes_43330, "mem_43398")
      if ((1 * (np.long(segmap_usable_groups_39526) * np.long(segmap_group_sizze_39525))) != 0):
        self.mainzisegmap_intragroup_42079_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_43366)),
                                                        cl.LocalMemory(np.long(bytes_43366)),
                                                        np.int64(m_28682),
                                                        np.int32(n_28685),
                                                        np.float32(hfrac_28687),
                                                        np.int64(i32_res_28691),
                                                        np.int32(k2p2_28693),
                                                        np.int64(num_whole_tiles_42101),
                                                        np.int64(residual_input_42190),
                                                        np.byte(cond_42191),
                                                        mem_43360, mem_43363,
                                                        mem_43394, mem_43396,
                                                        mem_43398)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_42079_var,
                                   ((np.long(segmap_usable_groups_39526) * np.long(segmap_group_sizze_39525)),),
                                   (np.long(segmap_group_sizze_39525),))
        if synchronous:
          sync(self)
      mem_43360 = None
      mem_43363 = None
      defunc_3_map_res_mem_43422 = mem_43394
      defunc_3_map_res_mem_43423 = mem_43396
      defunc_3_map_res_mem_43424 = mem_43398
    else:
      local_memory_capacity_44668 = self.max_local_memory
      if (sle64((((np.int32(4) * i32_res_28691) + srem64((np.int64(8) - srem64((np.int32(4) * i32_res_28691),
                                                                               np.int64(8))),
                                                         np.int64(8))) + ((np.int32(4) * i32_res_28691) + srem64((np.int64(8) - srem64((np.int32(4) * i32_res_28691),
                                                                                                                                       np.int64(8))),
                                                                                                                 np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44668)) and intra_suff_and_fits_39561):
        mem_43403 = opencl_alloc(self, bytes_43330, "mem_43403")
        mem_43405 = opencl_alloc(self, bytes_43330, "mem_43405")
        mem_43407 = opencl_alloc(self, bytes_43330, "mem_43407")
        if ((1 * (np.long(m_28682) * np.long(i32_res_28691))) != 0):
          self.mainzisegmap_intragroup_39490_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long((np.int32(4) * i32_res_28691))),
                                                          cl.LocalMemory(np.long((np.int32(4) * i32_res_28691))),
                                                          np.int64(N_28681),
                                                          np.float32(hfrac_28687),
                                                          np.int64(i32_res_28691),
                                                          np.int32(k2p2_28693),
                                                          images_mem_42559,
                                                          defunc_4_map_res_mem_43356,
                                                          mem_43403, mem_43405,
                                                          mem_43407)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_39490_var,
                                     ((np.long(m_28682) * np.long(i32_res_28691)),),
                                     (np.long(i32_res_28691),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43419 = mem_43403
        defunc_3_map_res_mem_43420 = mem_43405
        defunc_3_map_res_mem_43421 = mem_43407
      else:
        mem_43410 = opencl_alloc(self, bytes_43330, "mem_43410")
        if slt64((i32_res_28691 * np.int64(2)), segred_group_sizze_39649):
          segment_sizze_nonzzero_44543 = smax64(np.int64(1), i32_res_28691)
          num_threads_44544 = (num_groups_39650 * segred_group_sizze_39649)
          if ((1 * (np.long(num_groups_39650) * np.long(segred_group_sizze_39649))) != 0):
            self.mainzisegred_small_39638_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39649))),
                                                       np.int64(N_28681),
                                                       np.int64(m_28682),
                                                       np.int64(i32_res_28691),
                                                       np.int64(num_groups_39650),
                                                       np.int64(segment_sizze_nonzzero_44543),
                                                       images_mem_42559,
                                                       mem_43410)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_39638_var,
                                       ((np.long(num_groups_39650) * np.long(segred_group_sizze_39649)),),
                                       (np.long(segred_group_sizze_39649),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44564 = sdiv_up64(num_groups_39650,
                                               smax64(np.int64(1), m_28682))
          elements_per_thread_44565 = sdiv_up64(i32_res_28691,
                                                (segred_group_sizze_39649 * groups_per_segment_44564))
          virt_num_groups_44566 = (groups_per_segment_44564 * m_28682)
          num_threads_44567 = (num_groups_39650 * segred_group_sizze_39649)
          threads_per_segment_44568 = (groups_per_segment_44564 * segred_group_sizze_39649)
          group_res_arr_mem_44569 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_39649 * virt_num_groups_44566)),
                                                 "group_res_arr_mem_44569")
          mainzicounter_mem_44571 = self.mainzicounter_mem_44571
          if ((1 * (np.long(num_groups_39650) * np.long(segred_group_sizze_39649))) != 0):
            self.mainzisegred_large_39638_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39649))),
                                                       np.int64(N_28681),
                                                       np.int64(i32_res_28691),
                                                       np.int64(num_groups_39650),
                                                       np.int64(groups_per_segment_44564),
                                                       np.int64(elements_per_thread_44565),
                                                       np.int64(virt_num_groups_44566),
                                                       np.int64(threads_per_segment_44568),
                                                       images_mem_42559,
                                                       mem_43410,
                                                       group_res_arr_mem_44569,
                                                       mainzicounter_mem_44571)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_39638_var,
                                       ((np.long(num_groups_39650) * np.long(segred_group_sizze_39649)),),
                                       (np.long(segred_group_sizze_39649),))
            if synchronous:
              sync(self)
        mem_43413 = opencl_alloc(self, bytes_43330, "mem_43413")
        if slt64((i32_res_28691 * np.int64(2)), segred_group_sizze_39663):
          segment_sizze_nonzzero_44603 = smax64(np.int64(1), i32_res_28691)
          num_threads_44604 = (num_groups_39664 * segred_group_sizze_39663)
          if ((1 * (np.long(num_groups_39664) * np.long(segred_group_sizze_39663))) != 0):
            self.mainzisegred_small_39617_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39663))),
                                                       np.int64(N_28681),
                                                       np.int64(m_28682),
                                                       np.int64(i32_res_28691),
                                                       np.int64(num_groups_39664),
                                                       np.int64(segment_sizze_nonzzero_44603),
                                                       defunc_4_map_res_mem_43356,
                                                       mem_43410, mem_43413)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_39617_var,
                                       ((np.long(num_groups_39664) * np.long(segred_group_sizze_39663)),),
                                       (np.long(segred_group_sizze_39663),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44624 = sdiv_up64(num_groups_39664,
                                               smax64(np.int64(1), m_28682))
          elements_per_thread_44625 = sdiv_up64(i32_res_28691,
                                                (segred_group_sizze_39663 * groups_per_segment_44624))
          virt_num_groups_44626 = (groups_per_segment_44624 * m_28682)
          num_threads_44627 = (num_groups_39664 * segred_group_sizze_39663)
          threads_per_segment_44628 = (groups_per_segment_44624 * segred_group_sizze_39663)
          group_res_arr_mem_44629 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_39663 * virt_num_groups_44626)),
                                                 "group_res_arr_mem_44629")
          mainzicounter_mem_44631 = self.mainzicounter_mem_44631
          if ((1 * (np.long(num_groups_39664) * np.long(segred_group_sizze_39663))) != 0):
            self.mainzisegred_large_39617_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39663))),
                                                       np.int64(N_28681),
                                                       np.int64(i32_res_28691),
                                                       np.int64(num_groups_39664),
                                                       np.int64(groups_per_segment_44624),
                                                       np.int64(elements_per_thread_44625),
                                                       np.int64(virt_num_groups_44626),
                                                       np.int64(threads_per_segment_44628),
                                                       defunc_4_map_res_mem_43356,
                                                       mem_43410, mem_43413,
                                                       group_res_arr_mem_44629,
                                                       mainzicounter_mem_44631)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_39617_var,
                                       ((np.long(num_groups_39664) * np.long(segred_group_sizze_39663)),),
                                       (np.long(segred_group_sizze_39663),))
            if synchronous:
              sync(self)
        segmap_usable_groups_39680 = sdiv_up64(m_28682,
                                               segmap_group_sizze_39679)
        mem_43416 = opencl_alloc(self, bytes_43330, "mem_43416")
        mem_43418 = opencl_alloc(self, bytes_43330, "mem_43418")
        if ((1 * (np.long(segmap_usable_groups_39680) * np.long(segmap_group_sizze_39679))) != 0):
          self.mainzisegmap_39594_var.set_args(self.global_failure,
                                               np.int64(m_28682),
                                               np.float32(hfrac_28687),
                                               np.int32(k2p2_28693), mem_43410,
                                               mem_43413, mem_43416, mem_43418)
          cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39594_var,
                                     ((np.long(segmap_usable_groups_39680) * np.long(segmap_group_sizze_39679)),),
                                     (np.long(segmap_group_sizze_39679),))
          if synchronous:
            sync(self)
        mem_43413 = None
        defunc_3_map_res_mem_43419 = mem_43416
        defunc_3_map_res_mem_43420 = mem_43410
        defunc_3_map_res_mem_43421 = mem_43418
      defunc_3_map_res_mem_43422 = defunc_3_map_res_mem_43419
      defunc_3_map_res_mem_43423 = defunc_3_map_res_mem_43420
      defunc_3_map_res_mem_43424 = defunc_3_map_res_mem_43421
    segred_group_sizze_39700 = self.sizes["main.segred_group_size_39699"]
    max_num_groups_44670 = self.sizes["main.segred_num_groups_39701"]
    num_groups_39702 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28682,
                                                            segred_group_sizze_39700),
                                                  sext_i32_i64(max_num_groups_44670))))
    mem_43427 = opencl_alloc(self, np.int64(4), "mem_43427")
    mainzicounter_mem_44671 = self.mainzicounter_mem_44671
    group_res_arr_mem_44673 = opencl_alloc(self,
                                           (np.int32(4) * (segred_group_sizze_39700 * num_groups_39702)),
                                           "group_res_arr_mem_44673")
    num_threads_44675 = (num_groups_39702 * segred_group_sizze_39700)
    if ((1 * (np.long(num_groups_39702) * np.long(segred_group_sizze_39700))) != 0):
      self.mainzisegred_nonseg_39707_var.set_args(self.global_failure,
                                                  cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39700))),
                                                  cl.LocalMemory(np.long(np.int32(1))),
                                                  np.int64(m_28682),
                                                  np.int64(num_groups_39702),
                                                  np.int64(num_threads_44675),
                                                  defunc_3_map_res_mem_43422,
                                                  mem_43427,
                                                  mainzicounter_mem_44671,
                                                  group_res_arr_mem_44673)
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegred_nonseg_39707_var,
                                 ((np.long(num_groups_39702) * np.long(segred_group_sizze_39700)),),
                                 (np.long(segred_group_sizze_39700),))
      if synchronous:
        sync(self)
    read_res_45047 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45047, mem_43427,
                    device_offset=(np.long(np.int64(0)) * 4),
                    is_blocking=synchronous)
    sync(self)
    defunc_2_reduce_comm_res_29047 = read_res_45047[0]
    mem_43427 = None
    i32_res_29052 = sext_i32_i64(defunc_2_reduce_comm_res_29047)
    bounds_invalid_upwards_29053 = slt64(i32_res_29052, np.int64(0))
    valid_29054 = not(bounds_invalid_upwards_29053)
    range_valid_c_29055 = True
    assert valid_29054, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:5:3-18\n   #2  bfastfinal.fut:105:34-46\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:100:17-107:24\n   #5  bfastfinal.fut:192:5-58\n   #6  bfastfinal.fut:187:1-193:25\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                                                                    i32_res_29052,
                                                                                                                                                                                                                                                                                                                    " is invalid."))
    suff_outer_par_39739 = (self.sizes["main.suff_outer_par_31"] <= m_28682)
    segmap_group_sizze_39762 = self.sizes["main.segmap_group_size_39743"]
    nest_sizze_39805 = (m_28682 * i32_res_29052)
    segred_group_sizze_39806 = self.sizes["main.segred_group_size_39783"]
    max_num_groups_44701 = self.sizes["main.segred_num_groups_39785"]
    num_groups_39807 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_39805,
                                                            segred_group_sizze_39806),
                                                  sext_i32_i64(max_num_groups_44701))))
    bytes_43430 = (np.int64(4) * segmap_group_sizze_39762)
    local_memory_capacity_44772 = self.max_local_memory
    if (sle64(((bytes_43430 + srem64((np.int64(8) - srem64(bytes_43430,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_43430 + srem64((np.int64(8) - srem64(bytes_43430,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44772)) and suff_outer_par_39739):
      segmap_usable_groups_39763 = sdiv_up64(m_28682, segmap_group_sizze_39762)
      num_whole_tiles_42289 = squot64(i32_res_29052, segmap_group_sizze_39762)
      residual_input_42388 = srem64(i32_res_29052, segmap_group_sizze_39762)
      cond_42389 = (residual_input_42388 == np.int64(0))
      mem_43453 = opencl_alloc(self, bytes_43330, "mem_43453")
      if ((1 * (np.long(segmap_usable_groups_39763) * np.long(segmap_group_sizze_39762))) != 0):
        self.mainzisegmap_intragroup_42269_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_43430)),
                                                        cl.LocalMemory(np.long(bytes_43430)),
                                                        np.int64(N_28681),
                                                        np.int64(m_28682),
                                                        np.int64(i32_res_29052),
                                                        np.int64(num_whole_tiles_42289),
                                                        np.int64(residual_input_42388),
                                                        np.byte(cond_42389),
                                                        defunc_4_map_res_mem_43356,
                                                        defunc_3_map_res_mem_43422,
                                                        defunc_3_map_res_mem_43423,
                                                        mem_43453)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_42269_var,
                                   ((np.long(segmap_usable_groups_39763) * np.long(segmap_group_sizze_39762)),),
                                   (np.long(segmap_group_sizze_39762),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_43457 = mem_43453
    else:
      mem_43456 = opencl_alloc(self, bytes_43330, "mem_43456")
      if slt64((i32_res_29052 * np.int64(2)), segred_group_sizze_39806):
        segment_sizze_nonzzero_44712 = smax64(np.int64(1), i32_res_29052)
        num_threads_44713 = (num_groups_39807 * segred_group_sizze_39806)
        if ((1 * (np.long(num_groups_39807) * np.long(segred_group_sizze_39806))) != 0):
          self.mainzisegred_small_39789_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39806))),
                                                     np.int64(N_28681),
                                                     np.int64(m_28682),
                                                     np.int64(i32_res_29052),
                                                     np.int64(num_groups_39807),
                                                     np.int64(segment_sizze_nonzzero_44712),
                                                     defunc_4_map_res_mem_43356,
                                                     defunc_3_map_res_mem_43422,
                                                     defunc_3_map_res_mem_43423,
                                                     mem_43456)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_small_39789_var,
                                     ((np.long(num_groups_39807) * np.long(segred_group_sizze_39806)),),
                                     (np.long(segred_group_sizze_39806),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_44733 = sdiv_up64(num_groups_39807,
                                             smax64(np.int64(1), m_28682))
        elements_per_thread_44734 = sdiv_up64(i32_res_29052,
                                              (segred_group_sizze_39806 * groups_per_segment_44733))
        virt_num_groups_44735 = (groups_per_segment_44733 * m_28682)
        num_threads_44736 = (num_groups_39807 * segred_group_sizze_39806)
        threads_per_segment_44737 = (groups_per_segment_44733 * segred_group_sizze_39806)
        group_res_arr_mem_44738 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_39806 * virt_num_groups_44735)),
                                               "group_res_arr_mem_44738")
        mainzicounter_mem_44740 = self.mainzicounter_mem_44740
        if ((1 * (np.long(num_groups_39807) * np.long(segred_group_sizze_39806))) != 0):
          self.mainzisegred_large_39789_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long(np.int32(1))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39806))),
                                                     np.int64(N_28681),
                                                     np.int64(i32_res_29052),
                                                     np.int64(num_groups_39807),
                                                     np.int64(groups_per_segment_44733),
                                                     np.int64(elements_per_thread_44734),
                                                     np.int64(virt_num_groups_44735),
                                                     np.int64(threads_per_segment_44737),
                                                     defunc_4_map_res_mem_43356,
                                                     defunc_3_map_res_mem_43422,
                                                     defunc_3_map_res_mem_43423,
                                                     mem_43456,
                                                     group_res_arr_mem_44738,
                                                     mainzicounter_mem_44740)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_large_39789_var,
                                     ((np.long(num_groups_39807) * np.long(segred_group_sizze_39806)),),
                                     (np.long(segred_group_sizze_39806),))
          if synchronous:
            sync(self)
      defunc_0_f_res_mem_43457 = mem_43456
    iota32_arg_29077 = (N_28681 - i32_res_28691)
    bounds_invalid_upwards_29078 = slt64(iota32_arg_29077, np.int64(0))
    valid_29079 = not(bounds_invalid_upwards_29078)
    range_valid_c_29080 = True
    assert valid_29079, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:113:22-35\n   #3  bfastfinal.fut:192:5-58\n   #4  bfastfinal.fut:187:1-193:25\n" % ("Range ",
                                                                                                                                                                                                                                      np.int64(0),
                                                                                                                                                                                                                                      "..",
                                                                                                                                                                                                                                      np.int64(1),
                                                                                                                                                                                                                                      "..<",
                                                                                                                                                                                                                                      iota32_arg_29077,
                                                                                                                                                                                                                                      " is invalid."))
    x_29082 = (np.int32(1) + n_28685)
    i_29083 = (n_28685 - np.int32(1))
    i_29084 = sext_i32_i64(i_29083)
    x_29085 = sle64(np.int64(0), i_29084)
    y_29086 = slt64(i_29084, N_28681)
    bounds_check_29087 = (x_29085 and y_29086)
    index_certs_29088 = True
    assert bounds_check_29087, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:111:64-84\n   #1  bfastfinal.fut:109:15-113:36\n   #2  bfastfinal.fut:192:5-58\n   #3  bfastfinal.fut:187:1-193:25\n" % ("Index [",
                                                                                                                                                                                                                 i_29084,
                                                                                                                                                                                                                 "] out of bounds for array of shape [",
                                                                                                                                                                                                                 N_28681,
                                                                                                                                                                                                                 "]."))
    read_res_45049 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45049, mappingindices_mem_42558,
                    device_offset=(np.long(i_29084) * 4),
                    is_blocking=synchronous)
    sync(self)
    r32_arg_29089 = read_res_45049[0]
    i32_res_29090 = sitofp_i32_f32(r32_arg_29089)
    range_valid_c_29091 = True
    assert valid_29079, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:123:20-35\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:118:20-134:9\n   #5  bfastfinal.fut:192:5-58\n   #6  bfastfinal.fut:187:1-193:25\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                                                                  iota32_arg_29077,
                                                                                                                                                                                                                                                                                                                  " is invalid."))
    segmap_group_sizze_39884 = self.sizes["main.segmap_group_size_39867"]
    segmap_usable_groups_39885 = sdiv_up64(iota32_arg_29077,
                                           segmap_group_sizze_39884)
    bytes_43459 = (np.int64(4) * iota32_arg_29077)
    mem_43460 = opencl_alloc(self, bytes_43459, "mem_43460")
    mem_43462 = opencl_alloc(self, bytes_43459, "mem_43462")
    if ((1 * (np.long(segmap_usable_groups_39885) * np.long(segmap_group_sizze_39884))) != 0):
      self.mainzisegmap_39865_var.set_args(self.global_failure,
                                           np.float32(lam_28688),
                                           np.int64(iota32_arg_29077),
                                           np.int32(x_29082),
                                           np.float32(i32_res_29090),
                                           mappingindices_mem_42558, mem_43460,
                                           mem_43462)
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39865_var,
                                 ((np.long(segmap_usable_groups_39885) * np.long(segmap_group_sizze_39884)),),
                                 (np.long(segmap_group_sizze_39884),))
      if synchronous:
        sync(self)
    mem_43460 = None
    fits_40125 = sle64(iota32_arg_29077, max_group_sizze_38090)
    suff_intra_par_40123 = (self.sizes["main.suff_intra_par_34"] <= iota32_arg_29077)
    intra_suff_and_fits_40126 = (suff_intra_par_40123 and fits_40125)
    segmap_group_sizze_40399 = self.sizes["main.segmap_group_size_40379"]
    max_num_groups_44778 = self.sizes["main.segmap_num_groups_40381"]
    num_groups_40400 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28682,
                                                            segmap_group_sizze_40399),
                                                  sext_i32_i64(max_num_groups_44778))))
    nest_sizze_40421 = (m_28682 * iota32_arg_29077)
    segscan_group_sizze_40422 = self.sizes["main.segscan_group_size_40338"]
    max_num_groups_44779 = self.sizes["main.segscan_num_groups_40340"]
    num_groups_40423 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_40421,
                                                            segscan_group_sizze_40422),
                                                  sext_i32_i64(max_num_groups_44779))))
    segred_group_sizze_40460 = self.sizes["main.segred_group_size_40284"]
    max_num_groups_44780 = self.sizes["main.segred_num_groups_40286"]
    num_groups_40461 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_40421,
                                                            segred_group_sizze_40460),
                                                  sext_i32_i64(max_num_groups_44780))))
    segmap_group_sizze_40499 = self.sizes["main.segmap_group_size_40237"]
    bytes_43478 = (np.int64(4) * nest_sizze_40421)
    local_memory_capacity_44973 = self.max_local_memory
    if (sle64(((((bytes_43459 + srem64((np.int64(8) - srem64(bytes_43459,
                                                             np.int64(8))),
                                       np.int64(8))) + ((np.int32(1) * iota32_arg_29077) + srem64((np.int64(8) - srem64((np.int32(1) * iota32_arg_29077),
                                                                                                                        np.int64(8))),
                                                                                                  np.int64(8)))) + ((np.int32(4) * iota32_arg_29077) + srem64((np.int64(8) - srem64((np.int32(4) * iota32_arg_29077),
                                                                                                                                                                                    np.int64(8))),
                                                                                                                                                              np.int64(8)))) + ((np.int32(4) * iota32_arg_29077) + srem64((np.int64(8) - srem64((np.int32(4) * iota32_arg_29077),
                                                                                                                                                                                                                                                np.int64(8))),
                                                                                                                                                                                                                          np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44973)) and intra_suff_and_fits_40126):
      mem_43469 = opencl_alloc(self, bytes_43330, "mem_43469")
      mem_43471 = opencl_alloc(self, bytes_43330, "mem_43471")
      if ((1 * (np.long(m_28682) * np.long(iota32_arg_29077))) != 0):
        self.mainzisegmap_intragroup_39910_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long((np.int32(4) * iota32_arg_29077))),
                                                        cl.LocalMemory(np.long((np.int32(4) * iota32_arg_29077))),
                                                        cl.LocalMemory(np.long((np.int32(1) * iota32_arg_29077))),
                                                        cl.LocalMemory(np.long(bytes_43459)),
                                                        np.int64(N_28681),
                                                        np.int32(n_28685),
                                                        np.int64(iota32_arg_29077),
                                                        defunc_4_map_res_mem_43355,
                                                        defunc_4_map_res_mem_43356,
                                                        defunc_4_map_res_mem_43357,
                                                        defunc_3_map_res_mem_43422,
                                                        defunc_3_map_res_mem_43423,
                                                        defunc_3_map_res_mem_43424,
                                                        defunc_0_f_res_mem_43457,
                                                        mem_43462, mem_43469,
                                                        mem_43471)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_39910_var,
                                   ((np.long(m_28682) * np.long(iota32_arg_29077)),),
                                   (np.long(iota32_arg_29077),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_43493 = mem_43469
      defunc_0_f_res_mem_43494 = mem_43471
    else:
      mem_43474 = opencl_alloc(self, bytes_43330, "mem_43474")
      mem_43476 = opencl_alloc(self, bytes_43330, "mem_43476")
      if ((1 * (np.long(num_groups_40400) * np.long(segmap_group_sizze_40399))) != 0):
        self.mainzisegmap_40377_var.set_args(self.global_failure,
                                             np.int64(m_28682),
                                             np.int64(num_groups_40400),
                                             defunc_4_map_res_mem_43355,
                                             defunc_3_map_res_mem_43423,
                                             defunc_3_map_res_mem_43424,
                                             mem_43474, mem_43476)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40377_var,
                                   ((np.long(num_groups_40400) * np.long(segmap_group_sizze_40399)),),
                                   (np.long(segmap_group_sizze_40399),))
        if synchronous:
          sync(self)
      mem_43480 = opencl_alloc(self, bytes_43478, "mem_43480")
      if slt64(np.int64(0), (m_28682 * iota32_arg_29077)):
        stage1_max_num_groups_44814 = self.max_group_size
        stage1_num_groups_44815 = smin64(stage1_max_num_groups_44814,
                                         num_groups_40423)
        num_threads_44816 = sext_i64_i32((stage1_num_groups_44815 * segscan_group_sizze_40422))
        if ((1 * (np.long(stage1_num_groups_44815) * np.long(segscan_group_sizze_40422))) != 0):
          self.mainziscan_stage1_40344_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(4) * segscan_group_sizze_40422)))),
                                                    np.int64(N_28681),
                                                    np.int64(m_28682),
                                                    np.int64(iota32_arg_29077),
                                                    np.int32(num_threads_44816),
                                                    defunc_4_map_res_mem_43356,
                                                    defunc_3_map_res_mem_43422,
                                                    defunc_3_map_res_mem_43423,
                                                    defunc_0_f_res_mem_43457,
                                                    mem_43476, mem_43480)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage1_40344_var,
                                     ((np.long(stage1_num_groups_44815) * np.long(segscan_group_sizze_40422)),),
                                     (np.long(segscan_group_sizze_40422),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_44815))) != 0):
          self.mainziscan_stage2_40344_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(4) * stage1_num_groups_44815)))),
                                                    np.int64(m_28682),
                                                    np.int64(iota32_arg_29077),
                                                    np.int64(stage1_num_groups_44815),
                                                    np.int32(num_threads_44816),
                                                    mem_43480)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage2_40344_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_44815)),),
                                     (np.long(stage1_num_groups_44815),))
          if synchronous:
            sync(self)
        required_groups_44858 = sext_i64_i32(sdiv_up64((m_28682 * iota32_arg_29077),
                                                       segscan_group_sizze_40422))
        if ((1 * (np.long(num_groups_40423) * np.long(segscan_group_sizze_40422))) != 0):
          self.mainziscan_stage3_40344_var.set_args(self.global_failure,
                                                    np.int64(m_28682),
                                                    np.int64(iota32_arg_29077),
                                                    np.int64(num_groups_40423),
                                                    np.int32(num_threads_44816),
                                                    np.int32(required_groups_44858),
                                                    mem_43480)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage3_40344_var,
                                     ((np.long(num_groups_40423) * np.long(segscan_group_sizze_40422)),),
                                     (np.long(segscan_group_sizze_40422),))
          if synchronous:
            sync(self)
      mem_43483 = opencl_alloc(self, m_28682, "mem_43483")
      mem_43485 = opencl_alloc(self, bytes_43330, "mem_43485")
      mem_43487 = opencl_alloc(self, bytes_43330, "mem_43487")
      if slt64((iota32_arg_29077 * np.int64(2)), segred_group_sizze_40460):
        segment_sizze_nonzzero_44870 = smax64(np.int64(1), iota32_arg_29077)
        num_threads_44871 = (num_groups_40461 * segred_group_sizze_40460)
        if ((1 * (np.long(num_groups_40461) * np.long(segred_group_sizze_40460))) != 0):
          self.mainzisegred_small_40290_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40460))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40460))),
                                                     cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_40460))),
                                                     np.int64(m_28682),
                                                     np.int64(iota32_arg_29077),
                                                     np.int64(num_groups_40461),
                                                     np.int64(segment_sizze_nonzzero_44870),
                                                     mem_43462, mem_43474,
                                                     mem_43476, mem_43480,
                                                     mem_43483, mem_43485,
                                                     mem_43487)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_small_40290_var,
                                     ((np.long(num_groups_40461) * np.long(segred_group_sizze_40460)),),
                                     (np.long(segred_group_sizze_40460),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_44906 = sdiv_up64(num_groups_40461,
                                             smax64(np.int64(1), m_28682))
        elements_per_thread_44907 = sdiv_up64(iota32_arg_29077,
                                              (segred_group_sizze_40460 * groups_per_segment_44906))
        virt_num_groups_44908 = (groups_per_segment_44906 * m_28682)
        num_threads_44909 = (num_groups_40461 * segred_group_sizze_40460)
        threads_per_segment_44910 = (groups_per_segment_44906 * segred_group_sizze_40460)
        group_res_arr_mem_44911 = opencl_alloc(self,
                                               (np.int32(1) * (segred_group_sizze_40460 * virt_num_groups_44908)),
                                               "group_res_arr_mem_44911")
        group_res_arr_mem_44913 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_40460 * virt_num_groups_44908)),
                                               "group_res_arr_mem_44913")
        group_res_arr_mem_44915 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_40460 * virt_num_groups_44908)),
                                               "group_res_arr_mem_44915")
        mainzicounter_mem_44917 = self.mainzicounter_mem_44917
        if ((1 * (np.long(num_groups_40461) * np.long(segred_group_sizze_40460))) != 0):
          self.mainzisegred_large_40290_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long(np.int32(1))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40460))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40460))),
                                                     cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_40460))),
                                                     np.int64(iota32_arg_29077),
                                                     np.int64(num_groups_40461),
                                                     np.int64(groups_per_segment_44906),
                                                     np.int64(elements_per_thread_44907),
                                                     np.int64(virt_num_groups_44908),
                                                     mem_43462, mem_43474,
                                                     mem_43476, mem_43480,
                                                     mem_43483, mem_43485,
                                                     mem_43487,
                                                     group_res_arr_mem_44911,
                                                     group_res_arr_mem_44913,
                                                     group_res_arr_mem_44915,
                                                     mainzicounter_mem_44917)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_large_40290_var,
                                     ((np.long(num_groups_40461) * np.long(segred_group_sizze_40460)),),
                                     (np.long(segred_group_sizze_40460),))
          if synchronous:
            sync(self)
      mem_43474 = None
      mem_43480 = None
      segmap_usable_groups_40500 = sdiv_up64(m_28682, segmap_group_sizze_40499)
      mem_43490 = opencl_alloc(self, bytes_43330, "mem_43490")
      mem_43492 = opencl_alloc(self, bytes_43330, "mem_43492")
      if ((1 * (np.long(segmap_usable_groups_40500) * np.long(segmap_group_sizze_40499))) != 0):
        self.mainzisegmap_40235_var.set_args(self.global_failure,
                                             np.int64(N_28681),
                                             np.int64(m_28682),
                                             np.int32(n_28685),
                                             defunc_4_map_res_mem_43357,
                                             defunc_3_map_res_mem_43423,
                                             mem_43476, mem_43483, mem_43485,
                                             mem_43487, mem_43490, mem_43492)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40235_var,
                                   ((np.long(segmap_usable_groups_40500) * np.long(segmap_group_sizze_40499)),),
                                   (np.long(segmap_group_sizze_40499),))
        if synchronous:
          sync(self)
      mem_43476 = None
      mem_43483 = None
      mem_43485 = None
      mem_43487 = None
      defunc_0_f_res_mem_43493 = mem_43490
      defunc_0_f_res_mem_43494 = mem_43492
    defunc_4_map_res_mem_43356 = None
    defunc_4_map_res_mem_43357 = None
    defunc_3_map_res_mem_43422 = None
    defunc_3_map_res_mem_43423 = None
    defunc_3_map_res_mem_43424 = None
    defunc_0_f_res_mem_43457 = None
    mem_43462 = None
    out_mem_43854 = defunc_4_map_res_mem_43355
    out_mem_43855 = defunc_0_f_res_mem_43493
    out_mem_43856 = defunc_0_f_res_mem_43494
    return (out_mem_43854, out_mem_43855, out_mem_43856)
  def futhark_mainDetailed(self, mappingindices_mem_42558, images_mem_42559,
                           N_27391, m_27392, trend_27393, k_27394, n_27395,
                           freq_27396, hfrac_27397, lam_27398):
    i32_res_27401 = sext_i32_i64(n_27395)
    x_27402 = (np.int32(2) * k_27394)
    k2p2_27403 = (np.int32(2) + x_27402)
    cond_27404 = slt32(np.int32(0), trend_27393)
    if cond_27404:
      k2p2zq_27405 = k2p2_27403
    else:
      k2p2zq_f_res_27406 = (k2p2_27403 - np.int32(1))
      k2p2zq_27405 = k2p2zq_f_res_27406
    i32_res_27407 = sext_i32_i64(k2p2zq_27405)
    binop_x_42562 = (N_27391 * i32_res_27407)
    bytes_42561 = (np.int64(4) * binop_x_42562)
    if cond_27404:
      bounds_invalid_upwards_27409 = slt64(i32_res_27407, np.int64(0))
      valid_27410 = not(bounds_invalid_upwards_27409)
      range_valid_c_27411 = True
      assert valid_27410, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:37:10-20\n   #3  bfastfinal.fut:29:17-66\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_27407,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_29514 = self.sizes["mainDetailed.segmap_group_size_29444"]
      segmap_usable_groups_29515 = sdiv_up64(binop_x_42562,
                                             segmap_group_sizze_29514)
      mem_42563 = opencl_alloc(self, bytes_42561, "mem_42563")
      if ((1 * (np.long(segmap_usable_groups_29515) * np.long(segmap_group_sizze_29514))) != 0):
        self.mainDetailedzisegmap_29441_var.set_args(self.global_failure,
                                                     np.int64(N_27391),
                                                     np.float32(freq_27396),
                                                     np.int64(i32_res_27407),
                                                     mappingindices_mem_42558,
                                                     mem_42563)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_29441_var,
                                   ((np.long(segmap_usable_groups_29515) * np.long(segmap_group_sizze_29514)),),
                                   (np.long(segmap_group_sizze_29514),))
        if synchronous:
          sync(self)
      binop_p_mem_42568 = mem_42563
    else:
      bounds_invalid_upwards_27435 = slt64(i32_res_27407, np.int64(0))
      valid_27436 = not(bounds_invalid_upwards_27435)
      range_valid_c_27437 = True
      assert valid_27436, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:49:10-22\n   #3  bfastfinal.fut:30:17-64\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_27407,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_29688 = self.sizes["mainDetailed.segmap_group_size_29622"]
      segmap_usable_groups_29689 = sdiv_up64(binop_x_42562,
                                             segmap_group_sizze_29688)
      mem_42567 = opencl_alloc(self, bytes_42561, "mem_42567")
      if ((1 * (np.long(segmap_usable_groups_29689) * np.long(segmap_group_sizze_29688))) != 0):
        self.mainDetailedzisegmap_29619_var.set_args(self.global_failure,
                                                     np.int64(N_27391),
                                                     np.float32(freq_27396),
                                                     np.int64(i32_res_27407),
                                                     mappingindices_mem_42558,
                                                     mem_42567)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_29619_var,
                                   ((np.long(segmap_usable_groups_29689) * np.long(segmap_group_sizze_29688)),),
                                   (np.long(segmap_group_sizze_29688),))
        if synchronous:
          sync(self)
      binop_p_mem_42568 = mem_42567
    x_27460 = (N_27391 * N_27391)
    y_27461 = (np.int64(2) * N_27391)
    x_27462 = (x_27460 + y_27461)
    x_27463 = (np.int64(1) + x_27462)
    y_27464 = (np.int64(1) + N_27391)
    zzero_27465 = (y_27464 == np.int64(0))
    nonzzero_27466 = not(zzero_27465)
    nonzzero_cert_27467 = True
    assert nonzzero_27466, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:35:32-60\n   #1  bfastfinal.fut:177:3-56\n   #2  bfastfinal.fut:173:1-177:56\n" % ("division by zero",))
    x_27468 = sdiv64(x_27463, y_27464)
    x_27469 = (x_27468 - N_27391)
    binop_p_27470 = (x_27469 - np.int64(1))
    defunc_0_f_res_27471 = sext_i64_i32(binop_p_27470)
    i32_res_27472 = sitofp_i32_f32(defunc_0_f_res_27471)
    segmap_group_sizze_29771 = self.sizes["mainDetailed.segmap_group_size_29750"]
    segmap_usable_groups_29772 = sdiv_up64(binop_x_42562,
                                           segmap_group_sizze_29771)
    mem_42571 = opencl_alloc(self, bytes_42561, "mem_42571")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_42571, np.int64(0),
                                                binop_p_mem_42568, np.int64(0),
                                                np.int64(1), N_27391,
                                                i32_res_27407)
    mem_42575 = opencl_alloc(self, bytes_42561, "mem_42575")
    if ((1 * (np.long(segmap_usable_groups_29772) * np.long(segmap_group_sizze_29771))) != 0):
      self.mainDetailedzisegmap_29747_var.set_args(self.global_failure,
                                                   np.int64(N_27391),
                                                   np.int64(i32_res_27407),
                                                   np.float32(i32_res_27472),
                                                   mem_42571, mem_42575)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_29747_var,
                                 ((np.long(segmap_usable_groups_29772) * np.long(segmap_group_sizze_29771)),),
                                 (np.long(segmap_group_sizze_29771),))
      if synchronous:
        sync(self)
    eq_x_y_27480 = (np.int64(0) == i32_res_27407)
    p_and_eq_x_y_27481 = (cond_27404 and eq_x_y_27480)
    not_p_27482 = not(cond_27404)
    p_and_eq_x_y_27483 = (eq_x_y_27480 and not_p_27482)
    empty_slice_27484 = (p_and_eq_x_y_27481 or p_and_eq_x_y_27483)
    m_27485 = (i32_res_27407 - np.int64(1))
    zzero_leq_i_p_m_t_s_27486 = sle64(np.int64(0), m_27485)
    i_p_m_t_s_leq_w_27487 = slt64(m_27485, i32_res_27407)
    i_lte_j_27488 = sle64(np.int64(0), i32_res_27407)
    y_27489 = (zzero_leq_i_p_m_t_s_27486 and i_p_m_t_s_leq_w_27487)
    y_27490 = (i_lte_j_27488 and y_27489)
    ok_or_empty_27491 = (empty_slice_27484 or y_27490)
    empty_slice_27492 = (i32_res_27401 == np.int64(0))
    m_27493 = (i32_res_27401 - np.int64(1))
    zzero_leq_i_p_m_t_s_27494 = sle64(np.int64(0), m_27493)
    i_p_m_t_s_leq_w_27495 = slt64(m_27493, N_27391)
    i_lte_j_27496 = sle64(np.int64(0), i32_res_27401)
    y_27497 = (zzero_leq_i_p_m_t_s_27494 and i_p_m_t_s_leq_w_27495)
    y_27498 = (i_lte_j_27496 and y_27497)
    ok_or_empty_27499 = (empty_slice_27492 or y_27498)
    index_ok_27500 = (ok_or_empty_27491 and ok_or_empty_27499)
    index_certs_27501 = True
    assert index_ok_27500, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:38:13-21\n   #1  bfastfinal.fut:177:3-56\n   #2  bfastfinal.fut:173:1-177:56\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_27401,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               i32_res_27407,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_27391,
                                                                                                                                                                               "]."))
    empty_slice_27503 = (i32_res_27407 == np.int64(0))
    ok_or_empty_27504 = (y_27490 or empty_slice_27503)
    index_ok_27505 = (ok_or_empty_27499 and ok_or_empty_27504)
    index_certs_27506 = True
    assert index_ok_27505, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:39:13-22\n   #1  bfastfinal.fut:177:3-56\n   #2  bfastfinal.fut:173:1-177:56\n" % ("Index [:",
                                                                                                                                                                               i32_res_27401,
                                                                                                                                                                               ", ",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":] out of bounds for array of shape [",
                                                                                                                                                                               N_27391,
                                                                                                                                                                               "][",
                                                                                                                                                                               i32_res_27407,
                                                                                                                                                                               "]."))
    empty_slice_27508 = (m_27392 == np.int64(0))
    m_27509 = (m_27392 - np.int64(1))
    zzero_leq_i_p_m_t_s_27510 = sle64(np.int64(0), m_27509)
    i_p_m_t_s_leq_w_27511 = slt64(m_27509, m_27392)
    i_lte_j_27512 = sle64(np.int64(0), m_27392)
    y_27513 = (zzero_leq_i_p_m_t_s_27510 and i_p_m_t_s_leq_w_27511)
    y_27514 = (i_lte_j_27512 and y_27513)
    ok_or_empty_27515 = (empty_slice_27508 or y_27514)
    index_ok_27516 = (ok_or_empty_27499 and ok_or_empty_27515)
    index_certs_27517 = True
    assert index_ok_27516, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:40:13-26\n   #1  bfastfinal.fut:177:3-56\n   #2  bfastfinal.fut:173:1-177:56\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_27401,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               m_27392,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_27391,
                                                                                                                                                                               "]."))
    suff_outer_par_29778 = (self.sizes["mainDetailed.suff_outer_par_6"] <= m_27392)
    segmap_group_sizze_29804 = self.sizes["mainDetailed.segmap_group_size_29782"]
    max_num_groups_43884 = self.sizes["mainDetailed.segmap_num_groups_29784"]
    num_groups_29805 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27392,
                                                            segmap_group_sizze_29804),
                                                  sext_i32_i64(max_num_groups_43884))))
    nest_sizze_29980 = (m_27392 * i32_res_27407)
    segmap_group_sizze_29981 = self.sizes["mainDetailed.segmap_group_size_29829"]
    max_num_groups_43885 = self.sizes["mainDetailed.segmap_num_groups_29831"]
    num_groups_29982 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_29980,
                                                            segmap_group_sizze_29981),
                                                  sext_i32_i64(max_num_groups_43885))))
    suff_outer_par_29986 = (self.sizes["mainDetailed.suff_outer_par_7"] <= nest_sizze_29980)
    y_30010 = (i32_res_27407 * i32_res_27407)
    comparatee_30011 = (m_27392 * y_30010)
    suff_outer_par_30012 = (self.sizes["mainDetailed.suff_outer_par_8"] <= comparatee_30011)
    nest_sizze_30032 = (i32_res_27401 * comparatee_30011)
    segred_group_sizze_30033 = self.sizes["mainDetailed.segred_group_size_29889"]
    max_num_groups_43886 = self.sizes["mainDetailed.segred_num_groups_29891"]
    num_groups_30034 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_30032,
                                                            segred_group_sizze_30033),
                                                  sext_i32_i64(max_num_groups_43886))))
    Tx_40737 = self.sizes["mainDetailed.Tx_40735"]
    Ty_40738 = self.sizes["mainDetailed.Ty_40736"]
    Ty_40739 = smin64(i32_res_27407, Ty_40738)
    Tx_40740 = smin64(i32_res_27407, Tx_40737)
    gridDim_zz_40743 = sdiv_up64(m_27392, np.int64(30))
    group_sizze_tile3d_40746 = (Ty_40739 * Tx_40740)
    binop_x_42577 = (N_27391 * m_27392)
    bytes_42576 = (np.int64(4) * binop_x_42577)
    bytes_42621 = (np.int64(4) * comparatee_30011)
    bytes_42580 = (np.int64(4) * y_30010)
    binop_x_42724 = (i32_res_27407 * nest_sizze_29980)
    bytes_42722 = (np.int64(4) * binop_x_42724)
    bytes_42626 = (np.int64(4) * i32_res_27407)
    binop_x_42655 = (np.int64(30) * group_sizze_tile3d_40746)
    bytes_42653 = (np.int64(4) * binop_x_42655)
    binop_x_43625 = (np.int64(4) * Ty_40739)
    binop_x_43626 = (Tx_40740 * binop_x_43625)
    sizze_43627 = (np.int64(30) * binop_x_43626)
    num_threads_43705 = (segmap_group_sizze_29804 * num_groups_29805)
    total_sizze_43706 = (bytes_42580 * num_threads_43705)
    num_threads_43707 = (segmap_group_sizze_29981 * num_groups_29982)
    total_sizze_43708 = (bytes_42626 * num_threads_43707)
    local_memory_capacity_44008 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44008)) and suff_outer_par_29778):
      mem_42578 = opencl_alloc(self, bytes_42576, "mem_42578")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_42578, np.int64(0),
                                                  images_mem_42559, np.int64(0),
                                                  np.int64(1), N_27391, m_27392)
      mem_42624 = opencl_alloc(self, bytes_42621, "mem_42624")
      mem_42582 = opencl_alloc(self, total_sizze_43706, "mem_42582")
      if ((1 * (np.long(num_groups_29805) * np.long(segmap_group_sizze_29804))) != 0):
        self.mainDetailedzisegmap_29780_var.set_args(self.global_failure,
                                                     np.int64(N_27391),
                                                     np.int64(m_27392),
                                                     np.int32(n_27395),
                                                     np.int32(k2p2zq_27405),
                                                     np.int64(i32_res_27407),
                                                     np.int64(num_groups_29805),
                                                     binop_p_mem_42568,
                                                     mem_42575, mem_42578,
                                                     mem_42582, mem_42624)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_29780_var,
                                   ((np.long(num_groups_29805) * np.long(segmap_group_sizze_29804)),),
                                   (np.long(segmap_group_sizze_29804),))
        if synchronous:
          sync(self)
      mem_42578 = None
      mem_42582 = None
      mem_42725 = opencl_alloc(self, bytes_42722, "mem_42725")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_42725, np.int64(0),
                                                  mem_42624, np.int64(0),
                                                  np.int64(1), m_27392,
                                                  (i32_res_27407 * i32_res_27407))
      mem_42624 = None
      defunc_3_map_res_mem_42727 = mem_42725
    else:
      local_memory_capacity_44007 = self.max_local_memory
      if (sle64(np.int64(0),
                sext_i32_i64(local_memory_capacity_44007)) and suff_outer_par_29986):
        mem_42643 = opencl_alloc(self, bytes_42722, "mem_42643")
        mem_42627 = opencl_alloc(self, total_sizze_43708, "mem_42627")
        if ((1 * (np.long(num_groups_29982) * np.long(segmap_group_sizze_29981))) != 0):
          self.mainDetailedzisegmap_29826_var.set_args(self.global_failure,
                                                       np.int64(N_27391),
                                                       np.int64(m_27392),
                                                       np.int32(n_27395),
                                                       np.int32(k2p2zq_27405),
                                                       np.int64(i32_res_27407),
                                                       np.int64(num_groups_29982),
                                                       images_mem_42559,
                                                       mem_42571, mem_42575,
                                                       mem_42627, mem_42643)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_29826_var,
                                     ((np.long(num_groups_29982) * np.long(segmap_group_sizze_29981)),),
                                     (np.long(segmap_group_sizze_29981),))
          if synchronous:
            sync(self)
        mem_42627 = None
        mem_42719 = opencl_alloc(self, bytes_42722, "mem_42719")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_42719, np.int64(0),
                                                    mem_42643, np.int64(0),
                                                    np.int64(1),
                                                    (m_27392 * i32_res_27407),
                                                    i32_res_27407)
        mem_42643 = None
        defunc_3_map_res_mem_42721 = mem_42719
      else:
        local_memory_capacity_44006 = self.max_local_memory
        if (sle64(np.int64(120),
                  sext_i32_i64(local_memory_capacity_44006)) and suff_outer_par_30012):
          mem_42646 = opencl_alloc(self, bytes_42576, "mem_42646")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_42646, np.int64(0),
                                                      images_mem_42559,
                                                      np.int64(0), np.int64(1),
                                                      N_27391, m_27392)
          gridDim_x_40741 = sdiv_up64(i32_res_27407, Tx_40740)
          gridDim_y_40742 = sdiv_up64(i32_res_27407, Ty_40739)
          binop_x_40744 = (gridDim_y_40742 * gridDim_zz_40743)
          grid_sizze_tile3d_40745 = (gridDim_x_40741 * binop_x_40744)
          count_shmem_40747 = sdiv_up64(np.int64(30), group_sizze_tile3d_40746)
          mem_42706 = opencl_alloc(self, bytes_42722, "mem_42706")
          if ((1 * (np.long(grid_sizze_tile3d_40745) * np.long(group_sizze_tile3d_40746))) != 0):
            self.mainDetailedzisegmap_intragroup_40751_var.set_args(self.global_failure,
                                                                    cl.LocalMemory(np.long(np.int64(120))),
                                                                    np.int64(m_27392),
                                                                    np.int32(n_27395),
                                                                    np.int64(i32_res_27407),
                                                                    np.int64(Ty_40739),
                                                                    np.int64(Tx_40740),
                                                                    np.int64(gridDim_x_40741),
                                                                    np.int64(gridDim_y_40742),
                                                                    np.int64(group_sizze_tile3d_40746),
                                                                    np.int64(count_shmem_40747),
                                                                    mem_42571,
                                                                    mem_42575,
                                                                    mem_42646,
                                                                    mem_42706)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_intragroup_40751_var,
                                       ((np.long(grid_sizze_tile3d_40745) * np.long(group_sizze_tile3d_40746)),),
                                       (np.long(group_sizze_tile3d_40746),))
            if synchronous:
              sync(self)
          mem_42646 = None
          defunc_3_map_res_mem_42715 = mem_42706
        else:
          mem_42709 = opencl_alloc(self, bytes_42561, "mem_42709")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_42709, np.int64(0),
                                                      mem_42575, np.int64(0),
                                                      np.int64(1),
                                                      i32_res_27407, N_27391)
          mem_42714 = opencl_alloc(self, bytes_42722, "mem_42714")
          if slt64((i32_res_27401 * np.int64(2)), segred_group_sizze_30033):
            segment_sizze_nonzzero_43946 = smax64(np.int64(1), i32_res_27401)
            num_threads_43947 = (num_groups_30034 * segred_group_sizze_30033)
            if ((1 * (np.long(num_groups_30034) * np.long(segred_group_sizze_30033))) != 0):
              self.mainDetailedzisegred_small_29895_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_30033))),
                                                                 np.int64(N_27391),
                                                                 np.int64(m_27392),
                                                                 np.int64(i32_res_27401),
                                                                 np.int64(i32_res_27407),
                                                                 np.int64(num_groups_30034),
                                                                 np.int64(segment_sizze_nonzzero_43946),
                                                                 images_mem_42559,
                                                                 binop_p_mem_42568,
                                                                 mem_42709,
                                                                 mem_42714)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainDetailedzisegred_small_29895_var,
                                         ((np.long(num_groups_30034) * np.long(segred_group_sizze_30033)),),
                                         (np.long(segred_group_sizze_30033),))
              if synchronous:
                sync(self)
          else:
            groups_per_segment_43967 = sdiv_up64(num_groups_30034,
                                                 smax64(np.int64(1),
                                                        ((m_27392 * i32_res_27407) * i32_res_27407)))
            elements_per_thread_43968 = sdiv_up64(i32_res_27401,
                                                  (segred_group_sizze_30033 * groups_per_segment_43967))
            virt_num_groups_43969 = (groups_per_segment_43967 * ((m_27392 * i32_res_27407) * i32_res_27407))
            num_threads_43970 = (num_groups_30034 * segred_group_sizze_30033)
            threads_per_segment_43971 = (groups_per_segment_43967 * segred_group_sizze_30033)
            group_res_arr_mem_43972 = opencl_alloc(self,
                                                   (np.int32(4) * (segred_group_sizze_30033 * virt_num_groups_43969)),
                                                   "group_res_arr_mem_43972")
            mainDetailedzicounter_mem_43974 = self.mainDetailedzicounter_mem_43974
            if ((1 * (np.long(num_groups_30034) * np.long(segred_group_sizze_30033))) != 0):
              self.mainDetailedzisegred_large_29895_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(np.int32(1))),
                                                                 cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_30033))),
                                                                 np.int64(N_27391),
                                                                 np.int64(i32_res_27401),
                                                                 np.int64(i32_res_27407),
                                                                 np.int64(num_groups_30034),
                                                                 np.int64(groups_per_segment_43967),
                                                                 np.int64(elements_per_thread_43968),
                                                                 np.int64(virt_num_groups_43969),
                                                                 np.int64(threads_per_segment_43971),
                                                                 images_mem_42559,
                                                                 binop_p_mem_42568,
                                                                 mem_42709,
                                                                 mem_42714,
                                                                 group_res_arr_mem_43972,
                                                                 mainDetailedzicounter_mem_43974)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainDetailedzisegred_large_29895_var,
                                         ((np.long(num_groups_30034) * np.long(segred_group_sizze_30033)),),
                                         (np.long(segred_group_sizze_30033),))
              if synchronous:
                sync(self)
          mem_42709 = None
          defunc_3_map_res_mem_42715 = mem_42714
        defunc_3_map_res_mem_42721 = defunc_3_map_res_mem_42715
      defunc_3_map_res_mem_42727 = defunc_3_map_res_mem_42721
    m_27538 = (np.int32(2) * k2p2zq_27405)
    nm_27539 = (k2p2zq_27405 * m_27538)
    i32_res_27540 = sext_i32_i64(nm_27539)
    bounds_invalid_upwards_27541 = slt64(i32_res_27540, np.int64(0))
    valid_27542 = not(bounds_invalid_upwards_27541)
    range_valid_c_27543 = True
    assert valid_27542, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:78:34-50\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:177:3-56\n   #4  bfastfinal.fut:173:1-177:56\n" % ("Range ",
                                                                                                                                                                                                                                        np.int64(0),
                                                                                                                                                                                                                                        "..",
                                                                                                                                                                                                                                        np.int64(1),
                                                                                                                                                                                                                                        "..<",
                                                                                                                                                                                                                                        i32_res_27540,
                                                                                                                                                                                                                                        " is invalid."))
    zzero_27548 = (m_27538 == np.int32(0))
    nonzzero_27549 = not(zzero_27548)
    nonzzero_cert_27550 = True
    assert nonzzero_27549, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:73:41-47\n   #1  helpers.fut:73:14-78:52\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:177:3-56\n   #4  bfastfinal.fut:173:1-177:56\n" % ("division by zero",))
    loop_nonempty_27551 = slt32(np.int32(0), k2p2zq_27405)
    loop_not_taken_27552 = not(loop_nonempty_27551)
    protect_assert_disj_27553 = (nonzzero_27549 or loop_not_taken_27552)
    nonzzero_cert_27554 = True
    assert protect_assert_disj_27553, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:59:43-49\n   #1  helpers.fut:59:16-65:44\n   #2  helpers.fut:79:15-33\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n" % ("division by zero",))
    i32_res_27555 = sext_i32_i64(m_27538)
    x_27556 = (i32_res_27407 * i32_res_27555)
    dim_ok_27557 = (x_27556 == i32_res_27540)
    dim_ok_cert_27558 = True
    assert dim_ok_27557, ("Error: %s\n\nBacktrace:\n-> #0  /prelude/array.fut:141:3-33\n   #1  helpers.fut:81:9-45\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:177:3-56\n   #4  bfastfinal.fut:173:1-177:56\n" % ("new shape has different number of elements than old shape",))
    j_m_i_27559 = (i32_res_27555 - i32_res_27407)
    empty_slice_27560 = (j_m_i_27559 == np.int64(0))
    m_27561 = (j_m_i_27559 - np.int64(1))
    i_p_m_t_s_27562 = (i32_res_27407 + m_27561)
    zzero_leq_i_p_m_t_s_27563 = sle64(np.int64(0), i_p_m_t_s_27562)
    i_p_m_t_s_leq_w_27564 = slt64(i_p_m_t_s_27562, i32_res_27555)
    i_lte_j_27565 = sle64(i32_res_27407, i32_res_27555)
    y_27566 = (i_lte_j_27488 and i_p_m_t_s_leq_w_27564)
    y_27567 = (zzero_leq_i_p_m_t_s_27563 and y_27566)
    y_27568 = (i_lte_j_27565 and y_27567)
    forwards_ok_27569 = (i_lte_j_27488 and y_27568)
    ok_or_empty_27570 = (empty_slice_27560 or forwards_ok_27569)
    index_ok_27571 = (ok_or_empty_27504 and ok_or_empty_27570)
    index_certs_27572 = True
    assert index_ok_27571, ("Error: %s%d%s%d%s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-88\n   #1  bfastfinal.fut:50:35-50\n   #2  bfastfinal.fut:177:3-56\n   #3  bfastfinal.fut:173:1-177:56\n" % ("Index [",
                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_27407,
                                                                                                                                                                                                                   ", ",
                                                                                                                                                                                                                   i32_res_27407,
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_27555,
                                                                                                                                                                                                                   "] out of bounds for array of shape [",
                                                                                                                                                                                                                   i32_res_27407,
                                                                                                                                                                                                                   "][",
                                                                                                                                                                                                                   i32_res_27555,
                                                                                                                                                                                                                   "]."))
    dim_match_27573 = (i32_res_27407 == j_m_i_27559)
    empty_or_match_cert_27574 = True
    assert dim_match_27573, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-103\n   #1  bfastfinal.fut:50:35-50\n   #2  bfastfinal.fut:177:3-56\n   #3  bfastfinal.fut:173:1-177:56\n" % ("Value of (core language) shape (",
                                                                                                                                                                                                             i32_res_27407,
                                                                                                                                                                                                             ", ",
                                                                                                                                                                                                             j_m_i_27559,
                                                                                                                                                                                                             ") cannot match shape of type `[",
                                                                                                                                                                                                             i32_res_27407,
                                                                                                                                                                                                             "][",
                                                                                                                                                                                                             i32_res_27407,
                                                                                                                                                                                                             "]f32`."))
    max_group_sizze_30248 = self.max_group_size
    fits_30249 = sle64(i32_res_27540, max_group_sizze_30248)
    suff_intra_par_30247 = (self.sizes["mainDetailed.suff_intra_par_11"] <= i32_res_27540)
    intra_suff_and_fits_30250 = (suff_intra_par_30247 and fits_30249)
    nest_sizze_30734 = (m_27392 * i32_res_27540)
    segmap_group_sizze_30735 = self.sizes["mainDetailed.segmap_group_size_30694"]
    suff_intra_par_30762 = (self.sizes["mainDetailed.suff_intra_par_13"] <= i32_res_27540)
    intra_suff_and_fits_30763 = (fits_30249 and suff_intra_par_30762)
    segmap_group_sizze_30799 = self.sizes["mainDetailed.segmap_group_size_30600"]
    segmap_group_sizze_30815 = self.sizes["mainDetailed.segmap_group_size_30533"]
    segmap_group_sizze_30849 = self.sizes["mainDetailed.segmap_group_size_30479"]
    y_30859 = (i32_res_27407 * j_m_i_27559)
    nest_sizze_30860 = (m_27392 * y_30859)
    segmap_group_sizze_30861 = self.sizes["mainDetailed.segmap_group_size_30314"]
    segmap_usable_groups_30800 = sdiv_up_safe64(m_27392,
                                                segmap_group_sizze_30799)
    segmap_usable_groups_30816 = sdiv_up_safe64(nest_sizze_30734,
                                                segmap_group_sizze_30815)
    segmap_usable_groups_30850 = sdiv_up_safe64(nest_sizze_30734,
                                                segmap_group_sizze_30849)
    bytes_42730 = (np.int64(4) * i32_res_27540)
    bytes_42753 = (np.int64(4) * nest_sizze_30734)
    binop_x_42804 = (j_m_i_27559 * nest_sizze_29980)
    bytes_42802 = (np.int64(4) * binop_x_42804)
    local_memory_capacity_44009 = self.max_local_memory
    if intra_suff_and_fits_30250:
      defunc_3_map_res_ixfn_42806 = i32_res_27407
    else:
      defunc_3_map_res_ixfn_42806 = j_m_i_27559
    local_memory_capacity_44072 = self.max_local_memory
    if (sle64(((bytes_42730 + srem64((np.int64(8) - srem64(bytes_42730,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_42730 + srem64((np.int64(8) - srem64(bytes_42730,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44072)) and intra_suff_and_fits_30250):
      mem_42751 = opencl_alloc(self, bytes_42722, "mem_42751")
      if ((1 * (np.long(m_27392) * np.long(i32_res_27540))) != 0):
        self.mainDetailedzisegmap_intragroup_30130_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_42730)),
                                                                cl.LocalMemory(np.long(bytes_42730)),
                                                                np.int32(k2p2zq_27405),
                                                                np.int64(i32_res_27407),
                                                                np.int32(m_27538),
                                                                np.int64(i32_res_27540),
                                                                np.int64(i32_res_27555),
                                                                defunc_3_map_res_mem_42727,
                                                                mem_42751)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_30130_var,
                                   ((np.long(m_27392) * np.long(i32_res_27540)),),
                                   (np.long(i32_res_27540),))
        if synchronous:
          sync(self)
      defunc_3_map_res_mem_42807 = mem_42751
    else:
      segmap_usable_groups_30736 = sdiv_up64(nest_sizze_30734,
                                             segmap_group_sizze_30735)
      mem_42755 = opencl_alloc(self, bytes_42753, "mem_42755")
      if ((1 * (np.long(segmap_usable_groups_30736) * np.long(segmap_group_sizze_30735))) != 0):
        self.mainDetailedzisegmap_30691_var.set_args(self.global_failure,
                                                     np.int64(m_27392),
                                                     np.int32(k2p2zq_27405),
                                                     np.int64(i32_res_27407),
                                                     np.int32(m_27538),
                                                     np.int64(i32_res_27540),
                                                     defunc_3_map_res_mem_42727,
                                                     mem_42755)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_30691_var,
                                   ((np.long(segmap_usable_groups_30736) * np.long(segmap_group_sizze_30735)),),
                                   (np.long(segmap_group_sizze_30735),))
        if synchronous:
          sync(self)
      ctx_param_ext_42756 = m_27392
      ctx_param_ext_42757 = i32_res_27540
      ctx_param_ext_42758 = np.int64(0)
      ctx_param_ext_42759 = i32_res_27540
      ctx_param_ext_42760 = m_27392
      ctx_param_ext_42761 = np.int64(1)
      ctx_param_ext_42762 = i32_res_27540
      mem_param_42763 = mem_42755
      i_30752 = np.int32(0)
      one_45053 = np.int32(1)
      for counter_45052 in range(k2p2zq_27405):
        i32_res_30754 = sext_i32_i64(i_30752)
        local_memory_capacity_44032 = self.max_local_memory
        if intra_suff_and_fits_30763:
          gauss_jordan_res_ixfn_42785 = m_27392
        else:
          gauss_jordan_res_ixfn_42785 = ctx_param_ext_42760
        local_memory_capacity_44033 = self.max_local_memory
        if intra_suff_and_fits_30763:
          gauss_jordan_res_ixfn_42786 = i32_res_27540
        else:
          gauss_jordan_res_ixfn_42786 = ctx_param_ext_42762
        local_memory_capacity_44034 = self.max_local_memory
        if intra_suff_and_fits_30763:
          gauss_jordan_res_ixfn_42787 = m_27392
        else:
          gauss_jordan_res_ixfn_42787 = ctx_param_ext_42756
        local_memory_capacity_44035 = self.max_local_memory
        if intra_suff_and_fits_30763:
          gauss_jordan_res_ixfn_42788 = i32_res_27540
        else:
          gauss_jordan_res_ixfn_42788 = ctx_param_ext_42757
        local_memory_capacity_44036 = self.max_local_memory
        if intra_suff_and_fits_30763:
          gauss_jordan_res_ixfn_42789 = i32_res_27540
        else:
          gauss_jordan_res_ixfn_42789 = ctx_param_ext_42759
        local_memory_capacity_44037 = self.max_local_memory
        if intra_suff_and_fits_30763:
          gauss_jordan_res_ixfn_42790 = np.int64(1)
        else:
          gauss_jordan_res_ixfn_42790 = ctx_param_ext_42761
        local_memory_capacity_44038 = self.max_local_memory
        if intra_suff_and_fits_30763:
          gauss_jordan_res_ixfn_42791 = np.int64(0)
        else:
          gauss_jordan_res_ixfn_42791 = ctx_param_ext_42758
        local_memory_capacity_44066 = self.max_local_memory
        if ((sle64(np.int64(0),
                   sext_i32_i64(local_memory_capacity_44066)) and sle64((bytes_42730 + srem64((np.int64(8) - srem64(bytes_42730,
                                                                                                                    np.int64(8))),
                                                                                              np.int64(8))),
                                                                        sext_i32_i64(local_memory_capacity_44066))) and intra_suff_and_fits_30763):
          mem_42768 = opencl_alloc(self, bytes_42753, "mem_42768")
          group_sizze_44042 = self.sizes["mainDetailed.group_size_44042"]
          num_groups_44043 = sdiv_up64((m_27392 * i32_res_27540),
                                       group_sizze_44042)
          if ((1 * (np.long(num_groups_44043) * np.long(group_sizze_44042))) != 0):
            self.mainDetailedzicopy_44039_var.set_args(np.int64(m_27392),
                                                       np.int64(i32_res_27540),
                                                       np.int64(ctx_param_ext_42758),
                                                       np.int64(ctx_param_ext_42759),
                                                       np.int64(ctx_param_ext_42761),
                                                       mem_param_42763,
                                                       mem_42768)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzicopy_44039_var,
                                       ((np.long(num_groups_44043) * np.long(group_sizze_44042)),),
                                       (np.long(group_sizze_44042),))
            if synchronous:
              sync(self)
          mem_42776 = opencl_alloc(self, bytes_42753, "mem_42776")
          if ((1 * (np.long(m_27392) * np.long(i32_res_27540))) != 0):
            self.mainDetailedzisegmap_intragroup_30357_var.set_args(self.global_failure,
                                                                    cl.LocalMemory(np.long(bytes_42730)),
                                                                    np.int64(m_27392),
                                                                    np.int32(k2p2zq_27405),
                                                                    np.int32(m_27538),
                                                                    np.int64(i32_res_27540),
                                                                    np.int32(i_30752),
                                                                    np.int64(i32_res_30754),
                                                                    np.int64(ctx_param_ext_42758),
                                                                    np.int64(ctx_param_ext_42759),
                                                                    np.int64(ctx_param_ext_42761),
                                                                    mem_param_42763,
                                                                    mem_42768,
                                                                    mem_42776)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_intragroup_30357_var,
                                       ((np.long(m_27392) * np.long(i32_res_27540)),),
                                       (np.long(i32_res_27540),))
            if synchronous:
              sync(self)
          mem_42768 = None
          gauss_jordan_res_mem_42792 = mem_42776
        else:
          mem_42779 = opencl_alloc(self, m_27392, "mem_42779")
          if ((1 * (np.long(segmap_usable_groups_30800) * np.long(segmap_group_sizze_30799))) != 0):
            self.mainDetailedzisegmap_30598_var.set_args(self.global_failure,
                                                         np.int64(m_27392),
                                                         np.int64(i32_res_30754),
                                                         np.int64(ctx_param_ext_42758),
                                                         np.int64(ctx_param_ext_42759),
                                                         np.int64(ctx_param_ext_42761),
                                                         mem_param_42763,
                                                         mem_42779)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_30598_var,
                                       ((np.long(segmap_usable_groups_30800) * np.long(segmap_group_sizze_30799)),),
                                       (np.long(segmap_group_sizze_30799),))
            if synchronous:
              sync(self)
          mem_42783 = opencl_alloc(self, bytes_42753, "mem_42783")
          if ((1 * (np.long(segmap_usable_groups_30816) * np.long(segmap_group_sizze_30815))) != 0):
            self.mainDetailedzisegmap_30530_var.set_args(self.global_failure,
                                                         np.int64(m_27392),
                                                         np.int32(k2p2zq_27405),
                                                         np.int32(m_27538),
                                                         np.int64(i32_res_27540),
                                                         np.int32(i_30752),
                                                         np.int64(i32_res_30754),
                                                         np.int64(ctx_param_ext_42758),
                                                         np.int64(ctx_param_ext_42759),
                                                         np.int64(ctx_param_ext_42761),
                                                         mem_param_42763,
                                                         mem_42779, mem_42783)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_30530_var,
                                       ((np.long(segmap_usable_groups_30816) * np.long(segmap_group_sizze_30815)),),
                                       (np.long(segmap_group_sizze_30815),))
            if synchronous:
              sync(self)
          mem_42779 = None
          if ((1 * (np.long(segmap_usable_groups_30850) * np.long(segmap_group_sizze_30849))) != 0):
            self.mainDetailedzisegmap_30476_var.set_args(self.global_failure,
                                                         np.int64(m_27392),
                                                         np.int64(i32_res_27540),
                                                         np.int64(ctx_param_ext_42758),
                                                         np.int64(ctx_param_ext_42759),
                                                         np.int64(ctx_param_ext_42761),
                                                         mem_param_42763,
                                                         mem_42783)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_30476_var,
                                       ((np.long(segmap_usable_groups_30850) * np.long(segmap_group_sizze_30849)),),
                                       (np.long(segmap_group_sizze_30849),))
            if synchronous:
              sync(self)
          mem_42783 = None
          gauss_jordan_res_mem_42792 = mem_param_42763
        ctx_param_ext_tmp_44023 = gauss_jordan_res_ixfn_42787
        ctx_param_ext_tmp_44024 = gauss_jordan_res_ixfn_42788
        ctx_param_ext_tmp_44025 = gauss_jordan_res_ixfn_42791
        ctx_param_ext_tmp_44026 = gauss_jordan_res_ixfn_42789
        ctx_param_ext_tmp_44027 = gauss_jordan_res_ixfn_42785
        ctx_param_ext_tmp_44028 = gauss_jordan_res_ixfn_42790
        ctx_param_ext_tmp_44029 = gauss_jordan_res_ixfn_42786
        mem_param_tmp_44030 = gauss_jordan_res_mem_42792
        ctx_param_ext_42756 = ctx_param_ext_tmp_44023
        ctx_param_ext_42757 = ctx_param_ext_tmp_44024
        ctx_param_ext_42758 = ctx_param_ext_tmp_44025
        ctx_param_ext_42759 = ctx_param_ext_tmp_44026
        ctx_param_ext_42760 = ctx_param_ext_tmp_44027
        ctx_param_ext_42761 = ctx_param_ext_tmp_44028
        ctx_param_ext_42762 = ctx_param_ext_tmp_44029
        mem_param_42763 = mem_param_tmp_44030
        i_30752 += one_45053
      gauss_jordan_res_r_ixfn_42793 = ctx_param_ext_42756
      gauss_jordan_res_r_ixfn_42794 = ctx_param_ext_42757
      gauss_jordan_res_r_ixfn_42795 = ctx_param_ext_42758
      gauss_jordan_res_r_ixfn_42796 = ctx_param_ext_42759
      gauss_jordan_res_r_ixfn_42797 = ctx_param_ext_42760
      gauss_jordan_res_r_ixfn_42798 = ctx_param_ext_42761
      gauss_jordan_res_r_ixfn_42799 = ctx_param_ext_42762
      gauss_jordan_res_r_mem_42800 = mem_param_42763
      mem_42755 = None
      segmap_usable_groups_30862 = sdiv_up64(nest_sizze_30860,
                                             segmap_group_sizze_30861)
      mem_42805 = opencl_alloc(self, bytes_42802, "mem_42805")
      if ((1 * (np.long(segmap_usable_groups_30862) * np.long(segmap_group_sizze_30861))) != 0):
        self.mainDetailedzisegmap_30310_var.set_args(self.global_failure,
                                                     np.int64(m_27392),
                                                     np.int64(i32_res_27407),
                                                     np.int64(i32_res_27540),
                                                     np.int64(i32_res_27555),
                                                     np.int64(x_27556),
                                                     np.int64(j_m_i_27559),
                                                     np.int64(gauss_jordan_res_r_ixfn_42795),
                                                     np.int64(gauss_jordan_res_r_ixfn_42796),
                                                     np.int64(gauss_jordan_res_r_ixfn_42798),
                                                     gauss_jordan_res_r_mem_42800,
                                                     mem_42805)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_30310_var,
                                   ((np.long(segmap_usable_groups_30862) * np.long(segmap_group_sizze_30861)),),
                                   (np.long(segmap_group_sizze_30861),))
        if synchronous:
          sync(self)
      gauss_jordan_res_r_mem_42800 = None
      defunc_3_map_res_mem_42807 = mem_42805
    defunc_3_map_res_mem_42727 = None
    suff_outer_par_30870 = (self.sizes["mainDetailed.suff_outer_par_16"] <= m_27392)
    segmap_group_sizze_30892 = self.sizes["mainDetailed.segmap_group_size_30874"]
    max_num_groups_44073 = self.sizes["mainDetailed.segmap_num_groups_30876"]
    num_groups_30893 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27392,
                                                            segmap_group_sizze_30892),
                                                  sext_i32_i64(max_num_groups_44073))))
    suff_outer_par_30977 = (self.sizes["mainDetailed.suff_outer_par_17"] <= nest_sizze_29980)
    nest_sizze_30993 = (i32_res_27401 * nest_sizze_29980)
    segred_group_sizze_30994 = self.sizes["mainDetailed.segred_group_size_30936"]
    max_num_groups_44074 = self.sizes["mainDetailed.segred_num_groups_30938"]
    num_groups_30995 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_30993,
                                                            segred_group_sizze_30994),
                                                  sext_i32_i64(max_num_groups_44074))))
    Ty_40885 = self.sizes["mainDetailed.Ty_40882"]
    Ry_40886 = self.sizes["mainDetailed.Ry_40884"]
    Tx_40887 = self.sizes["mainDetailed.Tx_40881"]
    Rx_40888 = self.sizes["mainDetailed.Rx_40883"]
    Tk_40889 = self.sizes["mainDetailed.Tk_40880"]
    TxRx_40892 = (Tx_40887 * Rx_40888)
    TyRy_40893 = (Ty_40885 * Ry_40886)
    a_loc_szz_40895 = (Tk_40889 * TyRy_40893)
    binop_x_40896 = (Tx_40887 * Tk_40889)
    b_loc_szz_40897 = (Rx_40888 * binop_x_40896)
    group_sizze_40901 = (Ty_40885 * Tx_40887)
    bytes_42826 = (np.int64(4) * nest_sizze_29980)
    binop_x_42840 = (Ry_40886 * group_sizze_40901)
    binop_x_42841 = (Rx_40888 * binop_x_42840)
    bytes_42838 = (np.int64(4) * binop_x_42841)
    binop_x_42832 = (Ry_40886 * Rx_40888)
    bytes_42831 = (np.int64(4) * binop_x_42832)
    bytes_42843 = (np.int64(4) * a_loc_szz_40895)
    bytes_42845 = (np.int64(4) * b_loc_szz_40897)
    bytes_42914 = (np.int64(4) * binop_x_42840)
    binop_x_42920 = (Rx_40888 * group_sizze_40901)
    bytes_42918 = (np.int64(4) * binop_x_42920)
    bytes_42906 = (np.int64(4) * Ry_40886)
    bytes_42908 = (np.int64(4) * Rx_40888)
    binop_x_43642 = (np.int64(4) * Ty_40885)
    binop_x_43643 = (Tx_40887 * binop_x_43642)
    binop_x_43644 = (Ry_40886 * binop_x_43643)
    sizze_43645 = (Rx_40888 * binop_x_43644)
    num_threads_43718 = (segmap_group_sizze_30892 * num_groups_30893)
    total_sizze_43719 = (bytes_42626 * num_threads_43718)
    local_memory_capacity_44204 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44204)) and suff_outer_par_30870):
      mem_42810 = opencl_alloc(self, bytes_42576, "mem_42810")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_42810, np.int64(0),
                                                  images_mem_42559, np.int64(0),
                                                  np.int64(1), N_27391, m_27392)
      mem_42828 = opencl_alloc(self, bytes_42826, "mem_42828")
      mem_42813 = opencl_alloc(self, total_sizze_43719, "mem_42813")
      if ((1 * (np.long(num_groups_30893) * np.long(segmap_group_sizze_30892))) != 0):
        self.mainDetailedzisegmap_30872_var.set_args(self.global_failure,
                                                     np.int64(N_27391),
                                                     np.int64(m_27392),
                                                     np.int32(n_27395),
                                                     np.int32(k2p2zq_27405),
                                                     np.int64(i32_res_27407),
                                                     np.int64(num_groups_30893),
                                                     binop_p_mem_42568,
                                                     mem_42810, mem_42813,
                                                     mem_42828)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_30872_var,
                                   ((np.long(num_groups_30893) * np.long(segmap_group_sizze_30892)),),
                                   (np.long(segmap_group_sizze_30892),))
        if synchronous:
          sync(self)
      mem_42810 = None
      mem_42813 = None
      mem_43026 = opencl_alloc(self, bytes_42826, "mem_43026")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43026, np.int64(0),
                                                  mem_42828, np.int64(0),
                                                  np.int64(1), m_27392,
                                                  i32_res_27407)
      mem_42828 = None
      defunc_3_map_res_mem_43028 = mem_43026
    else:
      local_memory_capacity_44203 = self.max_local_memory
      if (sle64(((bytes_42843 + srem64((np.int64(8) - srem64(bytes_42843,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_42845 + srem64((np.int64(8) - srem64(bytes_42845,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44203)) and suff_outer_par_30977):
        tk_div_tx_40890 = sdiv_up64(Tk_40889, Tx_40887)
        tk_div_ty_40891 = sdiv_up64(Tk_40889, Ty_40885)
        gridDim_x_40898 = sdiv_up64(i32_res_27407, TxRx_40892)
        gridDim_y_40899 = sdiv_up64(m_27392, TyRy_40893)
        grid_sizze_40900 = (gridDim_x_40898 * gridDim_y_40899)
        full_tiles_40929 = squot64(i32_res_27401, Tk_40889)
        kk_41136 = (Tk_40889 * full_tiles_40929)
        mem_43018 = opencl_alloc(self, bytes_42826, "mem_43018")
        if ((1 * (np.long(grid_sizze_40900) * np.long(group_sizze_40901))) != 0):
          self.mainDetailedzisegmap_intragroup_40904_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_42845)),
                                                                  cl.LocalMemory(np.long(bytes_42843)),
                                                                  np.int64(N_27391),
                                                                  np.int64(m_27392),
                                                                  np.int64(i32_res_27401),
                                                                  np.int64(i32_res_27407),
                                                                  np.int64(gridDim_x_40898),
                                                                  np.int64(full_tiles_40929),
                                                                  np.int64(kk_41136),
                                                                  images_mem_42559,
                                                                  mem_42571,
                                                                  mem_43018)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_40904_var,
                                     ((np.long(grid_sizze_40900) * np.long(group_sizze_40901)),),
                                     (np.long(group_sizze_40901),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43023 = mem_43018
      else:
        mem_43022 = opencl_alloc(self, bytes_42826, "mem_43022")
        if slt64((i32_res_27401 * np.int64(2)), segred_group_sizze_30994):
          segment_sizze_nonzzero_44143 = smax64(np.int64(1), i32_res_27401)
          num_threads_44144 = (num_groups_30995 * segred_group_sizze_30994)
          if ((1 * (np.long(num_groups_30995) * np.long(segred_group_sizze_30994))) != 0):
            self.mainDetailedzisegred_small_30942_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_30994))),
                                                               np.int64(N_27391),
                                                               np.int64(m_27392),
                                                               np.int64(i32_res_27401),
                                                               np.int64(i32_res_27407),
                                                               np.int64(num_groups_30995),
                                                               np.int64(segment_sizze_nonzzero_44143),
                                                               images_mem_42559,
                                                               binop_p_mem_42568,
                                                               mem_43022)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_30942_var,
                                       ((np.long(num_groups_30995) * np.long(segred_group_sizze_30994)),),
                                       (np.long(segred_group_sizze_30994),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44164 = sdiv_up64(num_groups_30995,
                                               smax64(np.int64(1),
                                                      (m_27392 * i32_res_27407)))
          elements_per_thread_44165 = sdiv_up64(i32_res_27401,
                                                (segred_group_sizze_30994 * groups_per_segment_44164))
          virt_num_groups_44166 = (groups_per_segment_44164 * (m_27392 * i32_res_27407))
          num_threads_44167 = (num_groups_30995 * segred_group_sizze_30994)
          threads_per_segment_44168 = (groups_per_segment_44164 * segred_group_sizze_30994)
          group_res_arr_mem_44169 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_30994 * virt_num_groups_44166)),
                                                 "group_res_arr_mem_44169")
          mainDetailedzicounter_mem_44171 = self.mainDetailedzicounter_mem_44171
          if ((1 * (np.long(num_groups_30995) * np.long(segred_group_sizze_30994))) != 0):
            self.mainDetailedzisegred_large_30942_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_30994))),
                                                               np.int64(N_27391),
                                                               np.int64(i32_res_27401),
                                                               np.int64(i32_res_27407),
                                                               np.int64(num_groups_30995),
                                                               np.int64(groups_per_segment_44164),
                                                               np.int64(elements_per_thread_44165),
                                                               np.int64(virt_num_groups_44166),
                                                               np.int64(threads_per_segment_44168),
                                                               images_mem_42559,
                                                               binop_p_mem_42568,
                                                               mem_43022,
                                                               group_res_arr_mem_44169,
                                                               mainDetailedzicounter_mem_44171)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_30942_var,
                                       ((np.long(num_groups_30995) * np.long(segred_group_sizze_30994)),),
                                       (np.long(segred_group_sizze_30994),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43023 = mem_43022
      defunc_3_map_res_mem_43028 = defunc_3_map_res_mem_43023
    binop_p_mem_42568 = None
    mem_42571 = None
    suff_outer_par_31011 = (self.sizes["mainDetailed.suff_outer_par_18"] <= m_27392)
    segmap_group_sizze_31032 = self.sizes["mainDetailed.segmap_group_size_31015"]
    max_num_groups_44205 = self.sizes["mainDetailed.segmap_num_groups_31017"]
    num_groups_31033 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27392,
                                                            segmap_group_sizze_31032),
                                                  sext_i32_i64(max_num_groups_44205))))
    suff_outer_par_31112 = (self.sizes["mainDetailed.suff_outer_par_19"] <= nest_sizze_29980)
    segred_group_sizze_31127 = self.sizes["mainDetailed.segred_group_size_31073"]
    max_num_groups_44206 = self.sizes["mainDetailed.segred_num_groups_31075"]
    num_groups_31128 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_42724,
                                                            segred_group_sizze_31127),
                                                  sext_i32_i64(max_num_groups_44206))))
    tile_sizze_41348 = self.sizes["mainDetailed.tile_size_41347"]
    group_sizze_41349 = (tile_sizze_41348 * tile_sizze_41348)
    bytes_43060 = (np.int64(4) * group_sizze_41349)
    binop_x_43658 = (np.int64(4) * tile_sizze_41348)
    sizze_43659 = (tile_sizze_41348 * binop_x_43658)
    num_threads_43722 = (segmap_group_sizze_31032 * num_groups_31033)
    total_sizze_43723 = (bytes_42626 * num_threads_43722)
    local_memory_capacity_44292 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44292)) and suff_outer_par_31011):
      mem_43032 = opencl_alloc(self, bytes_42621, "mem_43032")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43032, np.int64(0),
                                                  defunc_3_map_res_mem_42807,
                                                  np.int64(0), np.int64(1),
                                                  (i32_res_27407 * i32_res_27407),
                                                  m_27392)
      mem_43035 = opencl_alloc(self, bytes_42826, "mem_43035")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43035, np.int64(0),
                                                  defunc_3_map_res_mem_43028,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_27407, m_27392)
      mem_43053 = opencl_alloc(self, bytes_42826, "mem_43053")
      mem_43038 = opencl_alloc(self, total_sizze_43723, "mem_43038")
      if ((1 * (np.long(num_groups_31033) * np.long(segmap_group_sizze_31032))) != 0):
        self.mainDetailedzisegmap_31013_var.set_args(self.global_failure,
                                                     np.int64(m_27392),
                                                     np.int32(k2p2zq_27405),
                                                     np.int64(i32_res_27407),
                                                     np.int64(num_groups_31033),
                                                     mem_43032, mem_43035,
                                                     mem_43038, mem_43053)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31013_var,
                                   ((np.long(num_groups_31033) * np.long(segmap_group_sizze_31032)),),
                                   (np.long(segmap_group_sizze_31032),))
        if synchronous:
          sync(self)
      mem_43032 = None
      mem_43035 = None
      mem_43038 = None
      mem_43092 = opencl_alloc(self, bytes_42826, "mem_43092")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43092, np.int64(0),
                                                  mem_43053, np.int64(0),
                                                  np.int64(1), m_27392,
                                                  i32_res_27407)
      mem_43053 = None
      defunc_4_map_res_mem_43094 = mem_43092
    else:
      local_memory_capacity_44291 = self.max_local_memory
      if (sle64(((bytes_43060 + srem64((np.int64(8) - srem64(bytes_43060,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43060 + srem64((np.int64(8) - srem64(bytes_43060,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44291)) and suff_outer_par_31112):
        mem_43057 = opencl_alloc(self, bytes_42722, "mem_43057")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43057, np.int64(0),
                                                    defunc_3_map_res_mem_42807,
                                                    np.int64(0), np.int64(1),
                                                    i32_res_27407,
                                                    (m_27392 * i32_res_27407))
        num_groups_x_41350 = sdiv_up64(m_27392, tile_sizze_41348)
        num_groups_y_41351 = sdiv_up64(i32_res_27407, tile_sizze_41348)
        num_groups_top_41352 = (num_groups_x_41350 * num_groups_y_41351)
        num_whole_tiles_41369 = squot64(i32_res_27407, tile_sizze_41348)
        residual_input_41496 = srem64(i32_res_27407, tile_sizze_41348)
        cond_41497 = (residual_input_41496 == np.int64(0))
        mem_43084 = opencl_alloc(self, bytes_42826, "mem_43084")
        if ((1 * (np.long(num_groups_top_41352) * np.long(group_sizze_41349))) != 0):
          self.mainDetailedzisegmap_intragroup_41353_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_43060)),
                                                                  cl.LocalMemory(np.long(bytes_43060)),
                                                                  np.int64(m_27392),
                                                                  np.int64(i32_res_27407),
                                                                  np.int64(num_groups_y_41351),
                                                                  np.int64(num_whole_tiles_41369),
                                                                  np.int64(residual_input_41496),
                                                                  np.byte(cond_41497),
                                                                  defunc_3_map_res_mem_43028,
                                                                  mem_43057,
                                                                  mem_43084)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_41353_var,
                                     ((np.long(num_groups_top_41352) * np.long(group_sizze_41349)),),
                                     (np.long(group_sizze_41349),))
          if synchronous:
            sync(self)
        mem_43057 = None
        defunc_4_map_res_mem_43089 = mem_43084
      else:
        mem_43088 = opencl_alloc(self, bytes_42826, "mem_43088")
        if slt64((i32_res_27407 * np.int64(2)), segred_group_sizze_31127):
          segment_sizze_nonzzero_44231 = smax64(np.int64(1), i32_res_27407)
          num_threads_44232 = (num_groups_31128 * segred_group_sizze_31127)
          if ((1 * (np.long(num_groups_31128) * np.long(segred_group_sizze_31127))) != 0):
            self.mainDetailedzisegred_small_31079_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31127))),
                                                               np.int64(m_27392),
                                                               np.int64(i32_res_27407),
                                                               np.int64(num_groups_31128),
                                                               np.int64(segment_sizze_nonzzero_44231),
                                                               defunc_3_map_res_mem_42807,
                                                               defunc_3_map_res_mem_43028,
                                                               mem_43088)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_31079_var,
                                       ((np.long(num_groups_31128) * np.long(segred_group_sizze_31127)),),
                                       (np.long(segred_group_sizze_31127),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44252 = sdiv_up64(num_groups_31128,
                                               smax64(np.int64(1),
                                                      (m_27392 * i32_res_27407)))
          elements_per_thread_44253 = sdiv_up64(i32_res_27407,
                                                (segred_group_sizze_31127 * groups_per_segment_44252))
          virt_num_groups_44254 = (groups_per_segment_44252 * (m_27392 * i32_res_27407))
          num_threads_44255 = (num_groups_31128 * segred_group_sizze_31127)
          threads_per_segment_44256 = (groups_per_segment_44252 * segred_group_sizze_31127)
          group_res_arr_mem_44257 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_31127 * virt_num_groups_44254)),
                                                 "group_res_arr_mem_44257")
          mainDetailedzicounter_mem_44259 = self.mainDetailedzicounter_mem_44259
          if ((1 * (np.long(num_groups_31128) * np.long(segred_group_sizze_31127))) != 0):
            self.mainDetailedzisegred_large_31079_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31127))),
                                                               np.int64(i32_res_27407),
                                                               np.int64(num_groups_31128),
                                                               np.int64(groups_per_segment_44252),
                                                               np.int64(elements_per_thread_44253),
                                                               np.int64(virt_num_groups_44254),
                                                               np.int64(threads_per_segment_44256),
                                                               defunc_3_map_res_mem_42807,
                                                               defunc_3_map_res_mem_43028,
                                                               mem_43088,
                                                               group_res_arr_mem_44257,
                                                               mainDetailedzicounter_mem_44259)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_31079_var,
                                       ((np.long(num_groups_31128) * np.long(segred_group_sizze_31127)),),
                                       (np.long(segred_group_sizze_31127),))
            if synchronous:
              sync(self)
        defunc_4_map_res_mem_43089 = mem_43088
      defunc_4_map_res_mem_43094 = defunc_4_map_res_mem_43089
    defunc_3_map_res_mem_42807 = None
    defunc_3_map_res_mem_43028 = None
    suff_outer_par_31143 = (self.sizes["mainDetailed.suff_outer_par_20"] <= m_27392)
    segmap_group_sizze_31163 = self.sizes["mainDetailed.segmap_group_size_31147"]
    max_num_groups_44293 = self.sizes["mainDetailed.segmap_num_groups_31149"]
    num_groups_31164 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27392,
                                                            segmap_group_sizze_31163),
                                                  sext_i32_i64(max_num_groups_44293))))
    suff_outer_par_31240 = (self.sizes["mainDetailed.suff_outer_par_21"] <= binop_x_42577)
    nest_sizze_31254 = (i32_res_27407 * binop_x_42577)
    segred_group_sizze_31255 = self.sizes["mainDetailed.segred_group_size_31203"]
    max_num_groups_44294 = self.sizes["mainDetailed.segred_num_groups_31205"]
    num_groups_31256 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_31254,
                                                            segred_group_sizze_31255),
                                                  sext_i32_i64(max_num_groups_44294))))
    Ty_41626 = self.sizes["mainDetailed.Ty_41623"]
    Ry_41627 = self.sizes["mainDetailed.Ry_41625"]
    Tx_41628 = self.sizes["mainDetailed.Tx_41622"]
    Rx_41629 = self.sizes["mainDetailed.Rx_41624"]
    Tk_41630 = self.sizes["mainDetailed.Tk_41621"]
    TxRx_41633 = (Tx_41628 * Rx_41629)
    TyRy_41634 = (Ty_41626 * Ry_41627)
    a_loc_szz_41636 = (Tk_41630 * TyRy_41634)
    binop_x_41637 = (Tx_41628 * Tk_41630)
    b_loc_szz_41638 = (Rx_41629 * binop_x_41637)
    group_sizze_41642 = (Ty_41626 * Tx_41628)
    bytes_43099 = (np.int64(4) * N_27391)
    binop_x_43130 = (Ry_41627 * group_sizze_41642)
    binop_x_43131 = (Rx_41629 * binop_x_43130)
    bytes_43128 = (np.int64(4) * binop_x_43131)
    binop_x_43122 = (Ry_41627 * Rx_41629)
    bytes_43121 = (np.int64(4) * binop_x_43122)
    bytes_43133 = (np.int64(4) * a_loc_szz_41636)
    bytes_43135 = (np.int64(4) * b_loc_szz_41638)
    bytes_43204 = (np.int64(4) * binop_x_43130)
    binop_x_43210 = (Rx_41629 * group_sizze_41642)
    bytes_43208 = (np.int64(4) * binop_x_43210)
    bytes_43196 = (np.int64(4) * Ry_41627)
    bytes_43198 = (np.int64(4) * Rx_41629)
    binop_x_43672 = (np.int64(4) * Ty_41626)
    binop_x_43673 = (Tx_41628 * binop_x_43672)
    binop_x_43674 = (Ry_41627 * binop_x_43673)
    sizze_43675 = (Rx_41629 * binop_x_43674)
    num_threads_43726 = (segmap_group_sizze_31163 * num_groups_31164)
    total_sizze_43727 = (bytes_43099 * num_threads_43726)
    local_memory_capacity_44424 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44424)) and suff_outer_par_31143):
      mem_43097 = opencl_alloc(self, bytes_42826, "mem_43097")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43097, np.int64(0),
                                                  defunc_4_map_res_mem_43094,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_27407, m_27392)
      mem_43115 = opencl_alloc(self, bytes_42576, "mem_43115")
      mem_43100 = opencl_alloc(self, total_sizze_43727, "mem_43100")
      if ((1 * (np.long(num_groups_31164) * np.long(segmap_group_sizze_31163))) != 0):
        self.mainDetailedzisegmap_31145_var.set_args(self.global_failure,
                                                     np.int64(N_27391),
                                                     np.int64(m_27392),
                                                     np.int32(k2p2zq_27405),
                                                     np.int64(i32_res_27407),
                                                     np.int64(num_groups_31164),
                                                     mem_42575, mem_43097,
                                                     mem_43100, mem_43115)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31145_var,
                                   ((np.long(num_groups_31164) * np.long(segmap_group_sizze_31163)),),
                                   (np.long(segmap_group_sizze_31163),))
        if synchronous:
          sync(self)
      mem_43097 = None
      mem_43100 = None
      mem_43316 = opencl_alloc(self, bytes_42576, "mem_43316")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43316, np.int64(0),
                                                  mem_43115, np.int64(0),
                                                  np.int64(1), m_27392, N_27391)
      mem_43115 = None
      defunc_3_map_res_mem_43318 = mem_43316
    else:
      local_memory_capacity_44423 = self.max_local_memory
      if (sle64(((bytes_43133 + srem64((np.int64(8) - srem64(bytes_43133,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43135 + srem64((np.int64(8) - srem64(bytes_43135,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44423)) and suff_outer_par_31240):
        mem_43118 = opencl_alloc(self, bytes_42561, "mem_43118")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43118, np.int64(0),
                                                    mem_42575, np.int64(0),
                                                    np.int64(1), i32_res_27407,
                                                    N_27391)
        tk_div_tx_41631 = sdiv_up64(Tk_41630, Tx_41628)
        tk_div_ty_41632 = sdiv_up64(Tk_41630, Ty_41626)
        gridDim_x_41639 = sdiv_up64(N_27391, TxRx_41633)
        gridDim_y_41640 = sdiv_up64(m_27392, TyRy_41634)
        grid_sizze_41641 = (gridDim_x_41639 * gridDim_y_41640)
        full_tiles_41670 = squot64(i32_res_27407, Tk_41630)
        kk_41873 = (Tk_41630 * full_tiles_41670)
        mem_43308 = opencl_alloc(self, bytes_42576, "mem_43308")
        if ((1 * (np.long(grid_sizze_41641) * np.long(group_sizze_41642))) != 0):
          self.mainDetailedzisegmap_intragroup_41645_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_43135)),
                                                                  cl.LocalMemory(np.long(bytes_43133)),
                                                                  np.int64(N_27391),
                                                                  np.int64(m_27392),
                                                                  np.int64(i32_res_27407),
                                                                  np.int64(gridDim_x_41639),
                                                                  np.int64(full_tiles_41670),
                                                                  np.int64(kk_41873),
                                                                  defunc_4_map_res_mem_43094,
                                                                  mem_43118,
                                                                  mem_43308)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_41645_var,
                                     ((np.long(grid_sizze_41641) * np.long(group_sizze_41642)),),
                                     (np.long(group_sizze_41642),))
          if synchronous:
            sync(self)
        mem_43118 = None
        defunc_3_map_res_mem_43313 = mem_43308
      else:
        mem_43312 = opencl_alloc(self, bytes_42576, "mem_43312")
        if slt64((i32_res_27407 * np.int64(2)), segred_group_sizze_31255):
          segment_sizze_nonzzero_44363 = smax64(np.int64(1), i32_res_27407)
          num_threads_44364 = (num_groups_31256 * segred_group_sizze_31255)
          if ((1 * (np.long(num_groups_31256) * np.long(segred_group_sizze_31255))) != 0):
            self.mainDetailedzisegred_small_31209_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31255))),
                                                               np.int64(N_27391),
                                                               np.int64(m_27392),
                                                               np.int64(i32_res_27407),
                                                               np.int64(num_groups_31256),
                                                               np.int64(segment_sizze_nonzzero_44363),
                                                               mem_42575,
                                                               defunc_4_map_res_mem_43094,
                                                               mem_43312)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_31209_var,
                                       ((np.long(num_groups_31256) * np.long(segred_group_sizze_31255)),),
                                       (np.long(segred_group_sizze_31255),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44384 = sdiv_up64(num_groups_31256,
                                               smax64(np.int64(1),
                                                      (m_27392 * N_27391)))
          elements_per_thread_44385 = sdiv_up64(i32_res_27407,
                                                (segred_group_sizze_31255 * groups_per_segment_44384))
          virt_num_groups_44386 = (groups_per_segment_44384 * (m_27392 * N_27391))
          num_threads_44387 = (num_groups_31256 * segred_group_sizze_31255)
          threads_per_segment_44388 = (groups_per_segment_44384 * segred_group_sizze_31255)
          group_res_arr_mem_44389 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_31255 * virt_num_groups_44386)),
                                                 "group_res_arr_mem_44389")
          mainDetailedzicounter_mem_44391 = self.mainDetailedzicounter_mem_44391
          if ((1 * (np.long(num_groups_31256) * np.long(segred_group_sizze_31255))) != 0):
            self.mainDetailedzisegred_large_31209_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31255))),
                                                               np.int64(N_27391),
                                                               np.int64(i32_res_27407),
                                                               np.int64(num_groups_31256),
                                                               np.int64(groups_per_segment_44384),
                                                               np.int64(elements_per_thread_44385),
                                                               np.int64(virt_num_groups_44386),
                                                               np.int64(threads_per_segment_44388),
                                                               mem_42575,
                                                               defunc_4_map_res_mem_43094,
                                                               mem_43312,
                                                               group_res_arr_mem_44389,
                                                               mainDetailedzicounter_mem_44391)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_31209_var,
                                       ((np.long(num_groups_31256) * np.long(segred_group_sizze_31255)),),
                                       (np.long(segred_group_sizze_31255),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43313 = mem_43312
      defunc_3_map_res_mem_43318 = defunc_3_map_res_mem_43313
    mem_42575 = None
    defunc_4_map_res_mem_43094 = None
    i_27667 = (N_27391 - np.int64(1))
    x_27668 = sle64(np.int64(0), i_27667)
    y_27669 = slt64(i_27667, N_27391)
    bounds_check_27670 = (x_27668 and y_27669)
    index_certs_27671 = True
    assert bounds_check_27670, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:26:29-34\n   #1  helpers.fut:20:13-20\n   #2  bfastfinal.fut:77:30-91\n   #3  /prelude/soacs.fut:67:19-23\n   #4  /prelude/soacs.fut:67:3-37\n   #5  bfastfinal.fut:71:5-80:25\n   #6  bfastfinal.fut:177:3-56\n   #7  bfastfinal.fut:173:1-177:56\n" % ("Index [",
                                                                                                                                                                                                                                                                                                                                                     i_27667,
                                                                                                                                                                                                                                                                                                                                                     "] out of bounds for array of shape [",
                                                                                                                                                                                                                                                                                                                                                     N_27391,
                                                                                                                                                                                                                                                                                                                                                     "]."))
    fits_31385 = sle64(N_27391, max_group_sizze_30248)
    suff_intra_par_31383 = (self.sizes["mainDetailed.suff_intra_par_24"] <= N_27391)
    intra_suff_and_fits_31386 = (suff_intra_par_31383 and fits_31385)
    segscan_group_sizze_31535 = self.sizes["mainDetailed.segscan_group_size_31512"]
    max_num_groups_44425 = self.sizes["mainDetailed.segscan_num_groups_31514"]
    num_groups_31536 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_42577,
                                                            segscan_group_sizze_31535),
                                                  sext_i32_i64(max_num_groups_44425))))
    segmap_group_sizze_31555 = self.sizes["mainDetailed.segmap_group_size_31503"]
    segmap_group_sizze_31591 = self.sizes["mainDetailed.segmap_group_size_31428"]
    bytes_43330 = (np.int64(4) * m_27392)
    bytes_43321 = (np.int64(8) * N_27391)
    bytes_43339 = (np.int64(8) * binop_x_42577)
    local_memory_capacity_44527 = self.max_local_memory
    if (sle64(((((bytes_43321 + srem64((np.int64(8) - srem64(bytes_43321,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43099 + srem64((np.int64(8) - srem64(bytes_43099,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))) + (bytes_43099 + srem64((np.int64(8) - srem64(bytes_43099,
                                                                                                                                          np.int64(8))),
                                                                                                                    np.int64(8)))) + (bytes_43099 + srem64((np.int64(8) - srem64(bytes_43099,
                                                                                                                                                                                 np.int64(8))),
                                                                                                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44527)) and intra_suff_and_fits_31386):
      mem_43331 = opencl_alloc(self, bytes_43330, "mem_43331")
      mem_43334 = opencl_alloc(self, bytes_42576, "mem_43334")
      mem_43337 = opencl_alloc(self, bytes_42576, "mem_43337")
      if ((1 * (np.long(m_27392) * np.long(N_27391))) != 0):
        self.mainDetailedzisegmap_intragroup_31308_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_43099)),
                                                                cl.LocalMemory(np.long(bytes_43099)),
                                                                cl.LocalMemory(np.long(bytes_43099)),
                                                                cl.LocalMemory(np.long(bytes_43321)),
                                                                np.int64(N_27391),
                                                                np.int64(i_27667),
                                                                images_mem_42559,
                                                                defunc_3_map_res_mem_43318,
                                                                mem_43331,
                                                                mem_43334,
                                                                mem_43337)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_31308_var,
                                   ((np.long(m_27392) * np.long(N_27391)),),
                                   (np.long(N_27391),))
        if synchronous:
          sync(self)
      defunc_4_map_res_mem_43355 = mem_43331
      defunc_4_map_res_mem_43356 = mem_43334
      defunc_4_map_res_mem_43357 = mem_43337
    else:
      mem_43341 = opencl_alloc(self, bytes_43339, "mem_43341")
      mem_43344 = opencl_alloc(self, bytes_42576, "mem_43344")
      if slt64(np.int64(0), (m_27392 * N_27391)):
        stage1_max_num_groups_44443 = self.max_group_size
        stage1_num_groups_44444 = smin64(stage1_max_num_groups_44443,
                                         num_groups_31536)
        num_threads_44445 = sext_i64_i32((stage1_num_groups_44444 * segscan_group_sizze_31535))
        if ((1 * (np.long(stage1_num_groups_44444) * np.long(segscan_group_sizze_31535))) != 0):
          self.mainDetailedziscan_stage1_31518_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                          (np.int32(8) * segscan_group_sizze_31535)))),
                                                            np.int64(N_27391),
                                                            np.int64(m_27392),
                                                            np.int32(num_threads_44445),
                                                            images_mem_42559,
                                                            defunc_3_map_res_mem_43318,
                                                            mem_43341,
                                                            mem_43344)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage1_31518_var,
                                     ((np.long(stage1_num_groups_44444) * np.long(segscan_group_sizze_31535)),),
                                     (np.long(segscan_group_sizze_31535),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_44444))) != 0):
          self.mainDetailedziscan_stage2_31518_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                          (np.int32(8) * stage1_num_groups_44444)))),
                                                            np.int64(N_27391),
                                                            np.int64(m_27392),
                                                            np.int64(stage1_num_groups_44444),
                                                            np.int32(num_threads_44445),
                                                            mem_43341)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage2_31518_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_44444)),),
                                     (np.long(stage1_num_groups_44444),))
          if synchronous:
            sync(self)
        required_groups_44487 = sext_i64_i32(sdiv_up64((m_27392 * N_27391),
                                                       segscan_group_sizze_31535))
        if ((1 * (np.long(num_groups_31536) * np.long(segscan_group_sizze_31535))) != 0):
          self.mainDetailedziscan_stage3_31518_var.set_args(self.global_failure,
                                                            np.int64(N_27391),
                                                            np.int64(m_27392),
                                                            np.int64(num_groups_31536),
                                                            np.int32(num_threads_44445),
                                                            np.int32(required_groups_44487),
                                                            mem_43341)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage3_31518_var,
                                     ((np.long(num_groups_31536) * np.long(segscan_group_sizze_31535)),),
                                     (np.long(segscan_group_sizze_31535),))
          if synchronous:
            sync(self)
      segmap_usable_groups_31556 = sdiv_up64(m_27392, segmap_group_sizze_31555)
      mem_43347 = opencl_alloc(self, bytes_43330, "mem_43347")
      if ((1 * (np.long(segmap_usable_groups_31556) * np.long(segmap_group_sizze_31555))) != 0):
        self.mainDetailedzisegmap_31501_var.set_args(self.global_failure,
                                                     np.int64(N_27391),
                                                     np.int64(m_27392),
                                                     np.int64(i_27667),
                                                     mem_43341, mem_43347)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31501_var,
                                   ((np.long(segmap_usable_groups_31556) * np.long(segmap_group_sizze_31555)),),
                                   (np.long(segmap_group_sizze_31555),))
        if synchronous:
          sync(self)
      mem_43350 = opencl_alloc(self, bytes_42576, "mem_43350")
      self.futhark_builtinzhreplicate_f32(mem_43350, (m_27392 * N_27391),
                                          np.nan)
      mem_43353 = opencl_alloc(self, bytes_42576, "mem_43353")
      self.futhark_builtinzhreplicate_i32(mem_43353, (m_27392 * N_27391),
                                          np.int32(0))
      segmap_usable_groups_31592 = sdiv_up64(binop_x_42577,
                                             segmap_group_sizze_31591)
      if ((1 * (np.long(segmap_usable_groups_31592) * np.long(segmap_group_sizze_31591))) != 0):
        self.mainDetailedzisegmap_31425_var.set_args(self.global_failure,
                                                     np.int64(N_27391),
                                                     np.int64(m_27392),
                                                     mem_43341, mem_43344,
                                                     mem_43350, mem_43353)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31425_var,
                                   ((np.long(segmap_usable_groups_31592) * np.long(segmap_group_sizze_31591)),),
                                   (np.long(segmap_group_sizze_31591),))
        if synchronous:
          sync(self)
      mem_43341 = None
      mem_43344 = None
      defunc_4_map_res_mem_43355 = mem_43347
      defunc_4_map_res_mem_43356 = mem_43350
      defunc_4_map_res_mem_43357 = mem_43353
    suff_outer_par_31640 = (self.sizes["mainDetailed.suff_outer_par_28"] <= m_27392)
    fits_31718 = sle64(i32_res_27401, max_group_sizze_30248)
    suff_intra_par_31716 = (self.sizes["mainDetailed.suff_intra_par_29"] <= i32_res_27401)
    intra_suff_and_fits_31719 = (suff_intra_par_31716 and fits_31718)
    segmap_group_sizze_31683 = self.sizes["mainDetailed.segmap_group_size_31652"]
    nest_sizze_31806 = (m_27392 * i32_res_27401)
    segred_group_sizze_31807 = self.sizes["mainDetailed.segred_group_size_31790"]
    max_num_groups_44528 = self.sizes["mainDetailed.segred_num_groups_31792"]
    num_groups_31808 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_31806,
                                                            segred_group_sizze_31807),
                                                  sext_i32_i64(max_num_groups_44528))))
    segred_group_sizze_31821 = self.sizes["mainDetailed.segred_group_size_31769"]
    max_num_groups_44529 = self.sizes["mainDetailed.segred_num_groups_31771"]
    num_groups_31822 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_31806,
                                                            segred_group_sizze_31821),
                                                  sext_i32_i64(max_num_groups_44529))))
    segmap_group_sizze_31837 = self.sizes["mainDetailed.segmap_group_size_31754"]
    bytes_43366 = (np.int64(4) * segmap_group_sizze_31683)
    local_memory_capacity_44681 = self.max_local_memory
    if (sle64(((bytes_43366 + srem64((np.int64(8) - srem64(bytes_43366,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_43366 + srem64((np.int64(8) - srem64(bytes_43366,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44681)) and suff_outer_par_31640):
      segmap_usable_groups_31684 = sdiv_up64(m_27392, segmap_group_sizze_31683)
      mem_43360 = opencl_alloc(self, bytes_42576, "mem_43360")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43360, np.int64(0),
                                                  images_mem_42559, np.int64(0),
                                                  np.int64(1), N_27391, m_27392)
      mem_43363 = opencl_alloc(self, bytes_42576, "mem_43363")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43363, np.int64(0),
                                                  defunc_4_map_res_mem_43356,
                                                  np.int64(0), np.int64(1),
                                                  N_27391, m_27392)
      num_whole_tiles_42101 = squot64(i32_res_27401, segmap_group_sizze_31683)
      residual_input_42190 = srem64(i32_res_27401, segmap_group_sizze_31683)
      cond_42191 = (residual_input_42190 == np.int64(0))
      mem_43394 = opencl_alloc(self, bytes_43330, "mem_43394")
      mem_43396 = opencl_alloc(self, bytes_43330, "mem_43396")
      mem_43398 = opencl_alloc(self, bytes_43330, "mem_43398")
      if ((1 * (np.long(segmap_usable_groups_31684) * np.long(segmap_group_sizze_31683))) != 0):
        self.mainDetailedzisegmap_intragroup_42079_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_43366)),
                                                                cl.LocalMemory(np.long(bytes_43366)),
                                                                np.int64(m_27392),
                                                                np.int32(n_27395),
                                                                np.float32(hfrac_27397),
                                                                np.int64(i32_res_27401),
                                                                np.int32(k2p2_27403),
                                                                np.int64(num_whole_tiles_42101),
                                                                np.int64(residual_input_42190),
                                                                np.byte(cond_42191),
                                                                mem_43360,
                                                                mem_43363,
                                                                mem_43394,
                                                                mem_43396,
                                                                mem_43398)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_42079_var,
                                   ((np.long(segmap_usable_groups_31684) * np.long(segmap_group_sizze_31683)),),
                                   (np.long(segmap_group_sizze_31683),))
        if synchronous:
          sync(self)
      mem_43360 = None
      mem_43363 = None
      defunc_3_map_res_mem_43422 = mem_43394
      defunc_3_map_res_mem_43423 = mem_43396
      defunc_3_map_res_mem_43424 = mem_43398
    else:
      local_memory_capacity_44680 = self.max_local_memory
      if (sle64((((np.int32(4) * i32_res_27401) + srem64((np.int64(8) - srem64((np.int32(4) * i32_res_27401),
                                                                               np.int64(8))),
                                                         np.int64(8))) + ((np.int32(4) * i32_res_27401) + srem64((np.int64(8) - srem64((np.int32(4) * i32_res_27401),
                                                                                                                                       np.int64(8))),
                                                                                                                 np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44680)) and intra_suff_and_fits_31719):
        mem_43403 = opencl_alloc(self, bytes_43330, "mem_43403")
        mem_43405 = opencl_alloc(self, bytes_43330, "mem_43405")
        mem_43407 = opencl_alloc(self, bytes_43330, "mem_43407")
        if ((1 * (np.long(m_27392) * np.long(i32_res_27401))) != 0):
          self.mainDetailedzisegmap_intragroup_31648_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long((np.int32(4) * i32_res_27401))),
                                                                  cl.LocalMemory(np.long((np.int32(4) * i32_res_27401))),
                                                                  np.int64(N_27391),
                                                                  np.float32(hfrac_27397),
                                                                  np.int64(i32_res_27401),
                                                                  np.int32(k2p2_27403),
                                                                  images_mem_42559,
                                                                  defunc_4_map_res_mem_43356,
                                                                  mem_43403,
                                                                  mem_43405,
                                                                  mem_43407)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_31648_var,
                                     ((np.long(m_27392) * np.long(i32_res_27401)),),
                                     (np.long(i32_res_27401),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43419 = mem_43403
        defunc_3_map_res_mem_43420 = mem_43405
        defunc_3_map_res_mem_43421 = mem_43407
      else:
        mem_43410 = opencl_alloc(self, bytes_43330, "mem_43410")
        if slt64((i32_res_27401 * np.int64(2)), segred_group_sizze_31807):
          segment_sizze_nonzzero_44555 = smax64(np.int64(1), i32_res_27401)
          num_threads_44556 = (num_groups_31808 * segred_group_sizze_31807)
          if ((1 * (np.long(num_groups_31808) * np.long(segred_group_sizze_31807))) != 0):
            self.mainDetailedzisegred_small_31796_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31807))),
                                                               np.int64(N_27391),
                                                               np.int64(m_27392),
                                                               np.int64(i32_res_27401),
                                                               np.int64(num_groups_31808),
                                                               np.int64(segment_sizze_nonzzero_44555),
                                                               images_mem_42559,
                                                               mem_43410)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_31796_var,
                                       ((np.long(num_groups_31808) * np.long(segred_group_sizze_31807)),),
                                       (np.long(segred_group_sizze_31807),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44576 = sdiv_up64(num_groups_31808,
                                               smax64(np.int64(1), m_27392))
          elements_per_thread_44577 = sdiv_up64(i32_res_27401,
                                                (segred_group_sizze_31807 * groups_per_segment_44576))
          virt_num_groups_44578 = (groups_per_segment_44576 * m_27392)
          num_threads_44579 = (num_groups_31808 * segred_group_sizze_31807)
          threads_per_segment_44580 = (groups_per_segment_44576 * segred_group_sizze_31807)
          group_res_arr_mem_44581 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_31807 * virt_num_groups_44578)),
                                                 "group_res_arr_mem_44581")
          mainDetailedzicounter_mem_44583 = self.mainDetailedzicounter_mem_44583
          if ((1 * (np.long(num_groups_31808) * np.long(segred_group_sizze_31807))) != 0):
            self.mainDetailedzisegred_large_31796_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31807))),
                                                               np.int64(N_27391),
                                                               np.int64(i32_res_27401),
                                                               np.int64(num_groups_31808),
                                                               np.int64(groups_per_segment_44576),
                                                               np.int64(elements_per_thread_44577),
                                                               np.int64(virt_num_groups_44578),
                                                               np.int64(threads_per_segment_44580),
                                                               images_mem_42559,
                                                               mem_43410,
                                                               group_res_arr_mem_44581,
                                                               mainDetailedzicounter_mem_44583)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_31796_var,
                                       ((np.long(num_groups_31808) * np.long(segred_group_sizze_31807)),),
                                       (np.long(segred_group_sizze_31807),))
            if synchronous:
              sync(self)
        mem_43413 = opencl_alloc(self, bytes_43330, "mem_43413")
        if slt64((i32_res_27401 * np.int64(2)), segred_group_sizze_31821):
          segment_sizze_nonzzero_44615 = smax64(np.int64(1), i32_res_27401)
          num_threads_44616 = (num_groups_31822 * segred_group_sizze_31821)
          if ((1 * (np.long(num_groups_31822) * np.long(segred_group_sizze_31821))) != 0):
            self.mainDetailedzisegred_small_31775_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31821))),
                                                               np.int64(N_27391),
                                                               np.int64(m_27392),
                                                               np.int64(i32_res_27401),
                                                               np.int64(num_groups_31822),
                                                               np.int64(segment_sizze_nonzzero_44615),
                                                               defunc_4_map_res_mem_43356,
                                                               mem_43410,
                                                               mem_43413)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_31775_var,
                                       ((np.long(num_groups_31822) * np.long(segred_group_sizze_31821)),),
                                       (np.long(segred_group_sizze_31821),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44636 = sdiv_up64(num_groups_31822,
                                               smax64(np.int64(1), m_27392))
          elements_per_thread_44637 = sdiv_up64(i32_res_27401,
                                                (segred_group_sizze_31821 * groups_per_segment_44636))
          virt_num_groups_44638 = (groups_per_segment_44636 * m_27392)
          num_threads_44639 = (num_groups_31822 * segred_group_sizze_31821)
          threads_per_segment_44640 = (groups_per_segment_44636 * segred_group_sizze_31821)
          group_res_arr_mem_44641 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_31821 * virt_num_groups_44638)),
                                                 "group_res_arr_mem_44641")
          mainDetailedzicounter_mem_44643 = self.mainDetailedzicounter_mem_44643
          if ((1 * (np.long(num_groups_31822) * np.long(segred_group_sizze_31821))) != 0):
            self.mainDetailedzisegred_large_31775_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31821))),
                                                               np.int64(N_27391),
                                                               np.int64(i32_res_27401),
                                                               np.int64(num_groups_31822),
                                                               np.int64(groups_per_segment_44636),
                                                               np.int64(elements_per_thread_44637),
                                                               np.int64(virt_num_groups_44638),
                                                               np.int64(threads_per_segment_44640),
                                                               defunc_4_map_res_mem_43356,
                                                               mem_43410,
                                                               mem_43413,
                                                               group_res_arr_mem_44641,
                                                               mainDetailedzicounter_mem_44643)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_31775_var,
                                       ((np.long(num_groups_31822) * np.long(segred_group_sizze_31821)),),
                                       (np.long(segred_group_sizze_31821),))
            if synchronous:
              sync(self)
        segmap_usable_groups_31838 = sdiv_up64(m_27392,
                                               segmap_group_sizze_31837)
        mem_43416 = opencl_alloc(self, bytes_43330, "mem_43416")
        mem_43418 = opencl_alloc(self, bytes_43330, "mem_43418")
        if ((1 * (np.long(segmap_usable_groups_31838) * np.long(segmap_group_sizze_31837))) != 0):
          self.mainDetailedzisegmap_31752_var.set_args(self.global_failure,
                                                       np.int64(m_27392),
                                                       np.float32(hfrac_27397),
                                                       np.int32(k2p2_27403),
                                                       mem_43410, mem_43413,
                                                       mem_43416, mem_43418)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_31752_var,
                                     ((np.long(segmap_usable_groups_31838) * np.long(segmap_group_sizze_31837)),),
                                     (np.long(segmap_group_sizze_31837),))
          if synchronous:
            sync(self)
        mem_43413 = None
        defunc_3_map_res_mem_43419 = mem_43416
        defunc_3_map_res_mem_43420 = mem_43410
        defunc_3_map_res_mem_43421 = mem_43418
      defunc_3_map_res_mem_43422 = defunc_3_map_res_mem_43419
      defunc_3_map_res_mem_43423 = defunc_3_map_res_mem_43420
      defunc_3_map_res_mem_43424 = defunc_3_map_res_mem_43421
    segred_group_sizze_31858 = self.sizes["mainDetailed.segred_group_size_31857"]
    max_num_groups_44682 = self.sizes["mainDetailed.segred_num_groups_31859"]
    num_groups_31860 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27392,
                                                            segred_group_sizze_31858),
                                                  sext_i32_i64(max_num_groups_44682))))
    mem_43427 = opencl_alloc(self, np.int64(4), "mem_43427")
    mainDetailedzicounter_mem_44683 = self.mainDetailedzicounter_mem_44683
    group_res_arr_mem_44685 = opencl_alloc(self,
                                           (np.int32(4) * (segred_group_sizze_31858 * num_groups_31860)),
                                           "group_res_arr_mem_44685")
    num_threads_44687 = (num_groups_31860 * segred_group_sizze_31858)
    if ((1 * (np.long(num_groups_31860) * np.long(segred_group_sizze_31858))) != 0):
      self.mainDetailedzisegred_nonseg_31865_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31858))),
                                                          cl.LocalMemory(np.long(np.int32(1))),
                                                          np.int64(m_27392),
                                                          np.int64(num_groups_31860),
                                                          np.int64(num_threads_44687),
                                                          defunc_3_map_res_mem_43422,
                                                          mem_43427,
                                                          mainDetailedzicounter_mem_44683,
                                                          group_res_arr_mem_44685)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegred_nonseg_31865_var,
                                 ((np.long(num_groups_31860) * np.long(segred_group_sizze_31858)),),
                                 (np.long(segred_group_sizze_31858),))
      if synchronous:
        sync(self)
    read_res_45060 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45060, mem_43427,
                    device_offset=(np.long(np.int64(0)) * 4),
                    is_blocking=synchronous)
    sync(self)
    defunc_2_reduce_comm_res_27757 = read_res_45060[0]
    mem_43427 = None
    i32_res_27762 = sext_i32_i64(defunc_2_reduce_comm_res_27757)
    bounds_invalid_upwards_27763 = slt64(i32_res_27762, np.int64(0))
    valid_27764 = not(bounds_invalid_upwards_27763)
    range_valid_c_27765 = True
    assert valid_27764, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:5:3-18\n   #2  bfastfinal.fut:105:34-46\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:100:17-107:24\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                                                                    i32_res_27762,
                                                                                                                                                                                                                                                                                                                    " is invalid."))
    suff_outer_par_31897 = (self.sizes["mainDetailed.suff_outer_par_31"] <= m_27392)
    segmap_group_sizze_31920 = self.sizes["mainDetailed.segmap_group_size_31901"]
    nest_sizze_31963 = (m_27392 * i32_res_27762)
    segred_group_sizze_31964 = self.sizes["mainDetailed.segred_group_size_31941"]
    max_num_groups_44713 = self.sizes["mainDetailed.segred_num_groups_31943"]
    num_groups_31965 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_31963,
                                                            segred_group_sizze_31964),
                                                  sext_i32_i64(max_num_groups_44713))))
    bytes_43430 = (np.int64(4) * segmap_group_sizze_31920)
    local_memory_capacity_44784 = self.max_local_memory
    if (sle64(((bytes_43430 + srem64((np.int64(8) - srem64(bytes_43430,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_43430 + srem64((np.int64(8) - srem64(bytes_43430,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44784)) and suff_outer_par_31897):
      segmap_usable_groups_31921 = sdiv_up64(m_27392, segmap_group_sizze_31920)
      num_whole_tiles_42289 = squot64(i32_res_27762, segmap_group_sizze_31920)
      residual_input_42388 = srem64(i32_res_27762, segmap_group_sizze_31920)
      cond_42389 = (residual_input_42388 == np.int64(0))
      mem_43453 = opencl_alloc(self, bytes_43330, "mem_43453")
      if ((1 * (np.long(segmap_usable_groups_31921) * np.long(segmap_group_sizze_31920))) != 0):
        self.mainDetailedzisegmap_intragroup_42269_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_43430)),
                                                                cl.LocalMemory(np.long(bytes_43430)),
                                                                np.int64(N_27391),
                                                                np.int64(m_27392),
                                                                np.int64(i32_res_27762),
                                                                np.int64(num_whole_tiles_42289),
                                                                np.int64(residual_input_42388),
                                                                np.byte(cond_42389),
                                                                defunc_4_map_res_mem_43356,
                                                                defunc_3_map_res_mem_43422,
                                                                defunc_3_map_res_mem_43423,
                                                                mem_43453)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_42269_var,
                                   ((np.long(segmap_usable_groups_31921) * np.long(segmap_group_sizze_31920)),),
                                   (np.long(segmap_group_sizze_31920),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_43457 = mem_43453
    else:
      mem_43456 = opencl_alloc(self, bytes_43330, "mem_43456")
      if slt64((i32_res_27762 * np.int64(2)), segred_group_sizze_31964):
        segment_sizze_nonzzero_44724 = smax64(np.int64(1), i32_res_27762)
        num_threads_44725 = (num_groups_31965 * segred_group_sizze_31964)
        if ((1 * (np.long(num_groups_31965) * np.long(segred_group_sizze_31964))) != 0):
          self.mainDetailedzisegred_small_31947_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31964))),
                                                             np.int64(N_27391),
                                                             np.int64(m_27392),
                                                             np.int64(i32_res_27762),
                                                             np.int64(num_groups_31965),
                                                             np.int64(segment_sizze_nonzzero_44724),
                                                             defunc_4_map_res_mem_43356,
                                                             defunc_3_map_res_mem_43422,
                                                             defunc_3_map_res_mem_43423,
                                                             mem_43456)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegred_small_31947_var,
                                     ((np.long(num_groups_31965) * np.long(segred_group_sizze_31964)),),
                                     (np.long(segred_group_sizze_31964),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_44745 = sdiv_up64(num_groups_31965,
                                             smax64(np.int64(1), m_27392))
        elements_per_thread_44746 = sdiv_up64(i32_res_27762,
                                              (segred_group_sizze_31964 * groups_per_segment_44745))
        virt_num_groups_44747 = (groups_per_segment_44745 * m_27392)
        num_threads_44748 = (num_groups_31965 * segred_group_sizze_31964)
        threads_per_segment_44749 = (groups_per_segment_44745 * segred_group_sizze_31964)
        group_res_arr_mem_44750 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_31964 * virt_num_groups_44747)),
                                               "group_res_arr_mem_44750")
        mainDetailedzicounter_mem_44752 = self.mainDetailedzicounter_mem_44752
        if ((1 * (np.long(num_groups_31965) * np.long(segred_group_sizze_31964))) != 0):
          self.mainDetailedzisegred_large_31947_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(np.int32(1))),
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31964))),
                                                             np.int64(N_27391),
                                                             np.int64(i32_res_27762),
                                                             np.int64(num_groups_31965),
                                                             np.int64(groups_per_segment_44745),
                                                             np.int64(elements_per_thread_44746),
                                                             np.int64(virt_num_groups_44747),
                                                             np.int64(threads_per_segment_44749),
                                                             defunc_4_map_res_mem_43356,
                                                             defunc_3_map_res_mem_43422,
                                                             defunc_3_map_res_mem_43423,
                                                             mem_43456,
                                                             group_res_arr_mem_44750,
                                                             mainDetailedzicounter_mem_44752)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegred_large_31947_var,
                                     ((np.long(num_groups_31965) * np.long(segred_group_sizze_31964)),),
                                     (np.long(segred_group_sizze_31964),))
          if synchronous:
            sync(self)
      defunc_0_f_res_mem_43457 = mem_43456
    iota32_arg_27787 = (N_27391 - i32_res_27401)
    bounds_invalid_upwards_27788 = slt64(iota32_arg_27787, np.int64(0))
    valid_27789 = not(bounds_invalid_upwards_27788)
    range_valid_c_27790 = True
    assert valid_27789, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:113:22-35\n   #3  bfastfinal.fut:177:3-56\n   #4  bfastfinal.fut:173:1-177:56\n" % ("Range ",
                                                                                                                                                                                                                                      np.int64(0),
                                                                                                                                                                                                                                      "..",
                                                                                                                                                                                                                                      np.int64(1),
                                                                                                                                                                                                                                      "..<",
                                                                                                                                                                                                                                      iota32_arg_27787,
                                                                                                                                                                                                                                      " is invalid."))
    x_27792 = (np.int32(1) + n_27395)
    i_27793 = (n_27395 - np.int32(1))
    i_27794 = sext_i32_i64(i_27793)
    x_27795 = sle64(np.int64(0), i_27794)
    y_27796 = slt64(i_27794, N_27391)
    bounds_check_27797 = (x_27795 and y_27796)
    index_certs_27798 = True
    assert bounds_check_27797, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:111:64-84\n   #1  bfastfinal.fut:109:15-113:36\n   #2  bfastfinal.fut:177:3-56\n   #3  bfastfinal.fut:173:1-177:56\n" % ("Index [",
                                                                                                                                                                                                                 i_27794,
                                                                                                                                                                                                                 "] out of bounds for array of shape [",
                                                                                                                                                                                                                 N_27391,
                                                                                                                                                                                                                 "]."))
    read_res_45062 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45062, mappingindices_mem_42558,
                    device_offset=(np.long(i_27794) * 4),
                    is_blocking=synchronous)
    sync(self)
    r32_arg_27799 = read_res_45062[0]
    i32_res_27800 = sitofp_i32_f32(r32_arg_27799)
    segmap_group_sizze_32041 = self.sizes["mainDetailed.segmap_group_size_32024"]
    segmap_usable_groups_32042 = sdiv_up64(iota32_arg_27787,
                                           segmap_group_sizze_32041)
    bytes_43459 = (np.int64(4) * iota32_arg_27787)
    mem_43460 = opencl_alloc(self, bytes_43459, "mem_43460")
    if ((1 * (np.long(segmap_usable_groups_32042) * np.long(segmap_group_sizze_32041))) != 0):
      self.mainDetailedzisegmap_32022_var.set_args(self.global_failure,
                                                   np.float32(lam_27398),
                                                   np.int64(iota32_arg_27787),
                                                   np.int32(x_27792),
                                                   np.float32(i32_res_27800),
                                                   mappingindices_mem_42558,
                                                   mem_43460)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_32022_var,
                                 ((np.long(segmap_usable_groups_32042) * np.long(segmap_group_sizze_32041)),),
                                 (np.long(segmap_group_sizze_32041),))
      if synchronous:
        sync(self)
    iota32_arg_27815 = (N_27391 - i32_res_27401)
    bounds_invalid_upwards_27816 = slt64(iota32_arg_27815, np.int64(0))
    valid_27817 = not(bounds_invalid_upwards_27816)
    range_valid_c_27818 = True
    assert valid_27817, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:123:20-35\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:118:20-134:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                                                                  iota32_arg_27815,
                                                                                                                                                                                                                                                                                                                  " is invalid."))
    max_res_27823 = smax64(np.int64(1), iota32_arg_27815)
    bounds_invalid_upwards_27824 = slt64(max_res_27823, np.int64(1))
    distance_27825 = (max_res_27823 - np.int64(1))
    valid_27826 = not(bounds_invalid_upwards_27824)
    range_valid_c_27827 = True
    assert valid_27826, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:16:30-45\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:120:13-125:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:118:20-134:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                                                              np.int64(1),
                                                                                                                                                                                                                                                                                                                                                              "..<",
                                                                                                                                                                                                                                                                                                                                                              max_res_27823,
                                                                                                                                                                                                                                                                                                                                                              " is invalid."))
    dim_match_27828 = (iota32_arg_27787 == iota32_arg_27815)
    empty_or_match_cert_27829 = True
    assert dim_match_27828, ("Error: %s\n\nBacktrace:\n-> #0  unknown location\n   #1  bfastfinal.fut:120:13-125:42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:118:20-134:9\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n" % ("Function return value does not match shape of declared return type.",))
    segmap_group_sizze_32490 = self.sizes["mainDetailed.segmap_group_size_32483"]
    segmap_usable_groups_32491 = sdiv_up64(m_27392, segmap_group_sizze_32490)
    mem_43463 = opencl_alloc(self, bytes_43330, "mem_43463")
    if ((1 * (np.long(segmap_usable_groups_32491) * np.long(segmap_group_sizze_32490))) != 0):
      self.mainDetailedzisegmap_32481_var.set_args(self.global_failure,
                                                   np.int64(m_27392),
                                                   defunc_4_map_res_mem_43355,
                                                   defunc_3_map_res_mem_43423,
                                                   mem_43463)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_32481_var,
                                 ((np.long(segmap_usable_groups_32491) * np.long(segmap_group_sizze_32490)),),
                                 (np.long(segmap_group_sizze_32490),))
      if synchronous:
        sync(self)
    nest_sizze_32504 = (m_27392 * iota32_arg_27815)
    segmap_group_sizze_32505 = self.sizes["mainDetailed.segmap_group_size_32426"]
    segmap_usable_groups_32506 = sdiv_up64(nest_sizze_32504,
                                           segmap_group_sizze_32505)
    bytes_43465 = (np.int64(4) * nest_sizze_32504)
    mem_43467 = opencl_alloc(self, bytes_43465, "mem_43467")
    if ((1 * (np.long(segmap_usable_groups_32506) * np.long(segmap_group_sizze_32505))) != 0):
      self.mainDetailedzisegmap_32423_var.set_args(self.global_failure,
                                                   self.failure_is_an_option,
                                                   self.global_failure_args,
                                                   np.int64(N_27391),
                                                   np.int64(m_27392),
                                                   np.int64(iota32_arg_27815),
                                                   defunc_4_map_res_mem_43356,
                                                   defunc_3_map_res_mem_43423,
                                                   mem_43463, mem_43467)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_32423_var,
                                 ((np.long(segmap_usable_groups_32506) * np.long(segmap_group_sizze_32505)),),
                                 (np.long(segmap_group_sizze_32505),))
      if synchronous:
        sync(self)
    self.failure_is_an_option = np.int32(1)
    segmap_group_sizze_32534 = self.sizes["mainDetailed.segmap_group_size_32304"]
    segmap_usable_groups_32535 = sdiv_up64(m_27392, segmap_group_sizze_32534)
    mem_43470 = opencl_alloc(self, bytes_43465, "mem_43470")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_43470, np.int64(0),
                                                mem_43467, np.int64(0),
                                                np.int64(1), iota32_arg_27815,
                                                m_27392)
    mem_43467 = None
    mem_43501 = opencl_alloc(self, bytes_43330, "mem_43501")
    bytes_43480 = (np.int64(4) * iota32_arg_27815)
    num_threads_43745 = (segmap_group_sizze_32534 * segmap_usable_groups_32535)
    total_sizze_43746 = (bytes_43480 * num_threads_43745)
    mem_43481 = opencl_alloc(self, total_sizze_43746, "mem_43481")
    if ((1 * (np.long(segmap_usable_groups_32535) * np.long(segmap_group_sizze_32534))) != 0):
      self.mainDetailedzisegmap_32302_var.set_args(self.global_failure,
                                                   self.failure_is_an_option,
                                                   self.global_failure_args,
                                                   np.int64(m_27392),
                                                   np.int64(iota32_arg_27787),
                                                   np.int64(iota32_arg_27815),
                                                   np.int64(distance_27825),
                                                   np.int64(segmap_usable_groups_32535),
                                                   defunc_4_map_res_mem_43355,
                                                   defunc_3_map_res_mem_43423,
                                                   mem_43463, mem_43470,
                                                   mem_43481, mem_43501)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_32302_var,
                                 ((np.long(segmap_usable_groups_32535) * np.long(segmap_group_sizze_32534)),),
                                 (np.long(segmap_group_sizze_32534),))
      if synchronous:
        sync(self)
    self.failure_is_an_option = np.int32(1)
    mem_43463 = None
    mem_43470 = None
    mem_43481 = None
    empty_or_match_cert_27935 = True
    assert dim_match_27828, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:149:17-152:51\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:139:38-167:9\n   #3  bfastfinal.fut:177:3-56\n   #4  bfastfinal.fut:173:1-177:56\n" % ("function arguments of wrong shape",))
    dim_match_27936 = (iota32_arg_27815 == iota32_arg_27787)
    empty_or_match_cert_27937 = True
    assert dim_match_27936, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:165:24-88\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:139:38-167:9\n   #3  bfastfinal.fut:177:3-56\n   #4  bfastfinal.fut:173:1-177:56\n" % ("function arguments of wrong shape",))
    empty_or_match_cert_27938 = True
    assert dim_match_27828, ("Error: %s\n\nBacktrace:\n-> #0  unknown location\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:139:38-167:9\n   #3  bfastfinal.fut:177:3-56\n   #4  bfastfinal.fut:173:1-177:56\n" % ("Function return value does not match shape of declared return type.",))
    suff_outer_par_32646 = (self.sizes["mainDetailed.suff_outer_par_37"] <= m_27392)
    intra_avail_par_32656 = smin64(iota32_arg_27787, iota32_arg_27815)
    computed_group_sizze_32649 = smax64(iota32_arg_27787, iota32_arg_27815)
    fits_32857 = sle64(computed_group_sizze_32649, max_group_sizze_30248)
    suff_intra_par_32855 = (self.sizes["mainDetailed.suff_intra_par_38"] <= intra_avail_par_32656)
    intra_suff_and_fits_32858 = (suff_intra_par_32855 and fits_32857)
    segmap_group_sizze_32757 = self.sizes["mainDetailed.segmap_group_size_32661"]
    max_num_groups_44810 = self.sizes["mainDetailed.segmap_num_groups_32663"]
    num_groups_32758 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27392,
                                                            segmap_group_sizze_32757),
                                                  sext_i32_i64(max_num_groups_44810))))
    segmap_group_sizze_33135 = self.sizes["mainDetailed.segmap_group_size_33128"]
    segscan_group_sizze_33143 = self.sizes["mainDetailed.segscan_group_size_33097"]
    max_num_groups_44811 = self.sizes["mainDetailed.segscan_num_groups_33099"]
    num_groups_33144 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_32504,
                                                            segscan_group_sizze_33143),
                                                  sext_i32_i64(max_num_groups_44811))))
    segmap_group_sizze_33169 = self.sizes["mainDetailed.segmap_group_size_33086"]
    nest_sizze_33179 = (m_27392 * iota32_arg_27787)
    segred_group_sizze_33180 = self.sizes["mainDetailed.segred_group_size_33046"]
    max_num_groups_44812 = self.sizes["mainDetailed.segred_num_groups_33048"]
    num_groups_33181 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_33179,
                                                            segred_group_sizze_33180),
                                                  sext_i32_i64(max_num_groups_44812))))
    segmap_group_sizze_33217 = self.sizes["mainDetailed.segmap_group_size_33014"]
    segmap_group_sizze_33262 = self.sizes["mainDetailed.segmap_group_size_32962"]
    bytes_43545 = (np.int64(4) * nest_sizze_33179)
    local_memory_capacity_44813 = self.max_local_memory
    if intra_suff_and_fits_32858:
      defunc_0_f_res_ixfn_43604 = iota32_arg_27787
    else:
      defunc_0_f_res_ixfn_43604 = iota32_arg_27815
    num_threads_43747 = (segmap_group_sizze_32757 * num_groups_32758)
    total_sizze_43748 = (bytes_43480 * num_threads_43747)
    total_sizze_43749 = (bytes_43459 * num_threads_43747)
    total_sizze_43750 = (bytes_43480 * num_threads_43747)
    local_memory_capacity_45037 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_45037)) and suff_outer_par_32646):
      mem_43547 = opencl_alloc(self, bytes_43545, "mem_43547")
      mem_43550 = opencl_alloc(self, bytes_43545, "mem_43550")
      mem_43552 = opencl_alloc(self, bytes_43330, "mem_43552")
      mem_43554 = opencl_alloc(self, bytes_43330, "mem_43554")
      mem_43504 = opencl_alloc(self, total_sizze_43748, "mem_43504")
      mem_43518 = opencl_alloc(self, total_sizze_43749, "mem_43518")
      mem_43532 = opencl_alloc(self, total_sizze_43750, "mem_43532")
      if ((1 * (np.long(num_groups_32758) * np.long(segmap_group_sizze_32757))) != 0):
        self.mainDetailedzisegmap_32659_var.set_args(self.global_failure,
                                                     np.int64(N_27391),
                                                     np.int64(m_27392),
                                                     np.int32(n_27395),
                                                     np.int64(iota32_arg_27787),
                                                     np.int64(iota32_arg_27815),
                                                     np.int64(num_groups_32758),
                                                     defunc_4_map_res_mem_43355,
                                                     defunc_4_map_res_mem_43356,
                                                     defunc_4_map_res_mem_43357,
                                                     defunc_3_map_res_mem_43422,
                                                     defunc_3_map_res_mem_43423,
                                                     defunc_3_map_res_mem_43424,
                                                     defunc_0_f_res_mem_43457,
                                                     mem_43460, mem_43504,
                                                     mem_43518, mem_43532,
                                                     mem_43547, mem_43550,
                                                     mem_43552, mem_43554)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_32659_var,
                                   ((np.long(num_groups_32758) * np.long(segmap_group_sizze_32757)),),
                                   (np.long(segmap_group_sizze_32757),))
        if synchronous:
          sync(self)
      mem_43504 = None
      mem_43518 = None
      mem_43532 = None
      mem_43611 = opencl_alloc(self, bytes_43545, "mem_43611")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43611, np.int64(0),
                                                  mem_43547, np.int64(0),
                                                  np.int64(1), m_27392,
                                                  iota32_arg_27787)
      mem_43547 = None
      mem_43615 = opencl_alloc(self, bytes_43545, "mem_43615")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43615, np.int64(0),
                                                  mem_43550, np.int64(0),
                                                  np.int64(1), m_27392,
                                                  iota32_arg_27787)
      mem_43550 = None
      defunc_0_f_res_mem_43621 = mem_43611
      defunc_0_f_res_mem_43622 = mem_43615
      defunc_0_f_res_mem_43623 = mem_43552
      defunc_0_f_res_mem_43624 = mem_43554
    else:
      local_memory_capacity_45036 = self.max_local_memory
      if (sle64(((((((bytes_43480 + srem64((np.int64(8) - srem64(bytes_43480,
                                                                 np.int64(8))),
                                           np.int64(8))) + (bytes_43459 + srem64((np.int64(8) - srem64(bytes_43459,
                                                                                                       np.int64(8))),
                                                                                 np.int64(8)))) + ((np.int32(1) * iota32_arg_27787) + srem64((np.int64(8) - srem64((np.int32(1) * iota32_arg_27787),
                                                                                                                                                                   np.int64(8))),
                                                                                                                                             np.int64(8)))) + ((np.int32(4) * iota32_arg_27787) + srem64((np.int64(8) - srem64((np.int32(4) * iota32_arg_27787),
                                                                                                                                                                                                                               np.int64(8))),
                                                                                                                                                                                                         np.int64(8)))) + ((np.int32(4) * iota32_arg_27787) + srem64((np.int64(8) - srem64((np.int32(4) * iota32_arg_27787),
                                                                                                                                                                                                                                                                                           np.int64(8))),
                                                                                                                                                                                                                                                                     np.int64(8)))) + (bytes_43480 + srem64((np.int64(8) - srem64(bytes_43480,
                                                                                                                                                                                                                                                                                                                                  np.int64(8))),
                                                                                                                                                                                                                                                                                                            np.int64(8)))),
                sext_i32_i64(local_memory_capacity_45036)) and intra_suff_and_fits_32858):
        mem_43567 = opencl_alloc(self, bytes_43545, "mem_43567")
        mem_43570 = opencl_alloc(self, bytes_43545, "mem_43570")
        mem_43572 = opencl_alloc(self, bytes_43330, "mem_43572")
        mem_43574 = opencl_alloc(self, bytes_43330, "mem_43574")
        if ((1 * (np.long(m_27392) * np.long(computed_group_sizze_32649))) != 0):
          self.mainDetailedzisegmap_intragroup_32657_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_43480)),
                                                                  cl.LocalMemory(np.long((np.int32(4) * iota32_arg_27787))),
                                                                  cl.LocalMemory(np.long((np.int32(4) * iota32_arg_27787))),
                                                                  cl.LocalMemory(np.long((np.int32(1) * iota32_arg_27787))),
                                                                  cl.LocalMemory(np.long(bytes_43459)),
                                                                  cl.LocalMemory(np.long(bytes_43480)),
                                                                  np.int64(N_27391),
                                                                  np.int32(n_27395),
                                                                  np.int64(iota32_arg_27787),
                                                                  np.int64(iota32_arg_27815),
                                                                  np.int64(computed_group_sizze_32649),
                                                                  defunc_4_map_res_mem_43355,
                                                                  defunc_4_map_res_mem_43356,
                                                                  defunc_4_map_res_mem_43357,
                                                                  defunc_3_map_res_mem_43422,
                                                                  defunc_3_map_res_mem_43423,
                                                                  defunc_3_map_res_mem_43424,
                                                                  defunc_0_f_res_mem_43457,
                                                                  mem_43460,
                                                                  mem_43567,
                                                                  mem_43570,
                                                                  mem_43572,
                                                                  mem_43574)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_32657_var,
                                     ((np.long(m_27392) * np.long(computed_group_sizze_32649)),),
                                     (np.long(computed_group_sizze_32649),))
          if synchronous:
            sync(self)
        defunc_0_f_res_mem_43605 = mem_43567
        defunc_0_f_res_mem_43606 = mem_43570
        defunc_0_f_res_mem_43607 = mem_43572
        defunc_0_f_res_mem_43608 = mem_43574
      else:
        segmap_usable_groups_33136 = sdiv_up64(m_27392,
                                               segmap_group_sizze_33135)
        mem_43577 = opencl_alloc(self, bytes_43330, "mem_43577")
        if ((1 * (np.long(segmap_usable_groups_33136) * np.long(segmap_group_sizze_33135))) != 0):
          self.mainDetailedzisegmap_33126_var.set_args(self.global_failure,
                                                       np.int64(m_27392),
                                                       defunc_4_map_res_mem_43355,
                                                       defunc_3_map_res_mem_43423,
                                                       mem_43577)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_33126_var,
                                     ((np.long(segmap_usable_groups_33136) * np.long(segmap_group_sizze_33135)),),
                                     (np.long(segmap_group_sizze_33135),))
          if synchronous:
            sync(self)
        mem_43581 = opencl_alloc(self, bytes_43465, "mem_43581")
        if slt64(np.int64(0), (m_27392 * iota32_arg_27815)):
          stage1_max_num_groups_44867 = self.max_group_size
          stage1_num_groups_44868 = smin64(stage1_max_num_groups_44867,
                                           num_groups_33144)
          num_threads_44869 = sext_i64_i32((stage1_num_groups_44868 * segscan_group_sizze_33143))
          if ((1 * (np.long(stage1_num_groups_44868) * np.long(segscan_group_sizze_33143))) != 0):
            self.mainDetailedziscan_stage1_33103_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                            (np.int32(4) * segscan_group_sizze_33143)))),
                                                              np.int64(N_27391),
                                                              np.int64(m_27392),
                                                              np.int64(iota32_arg_27815),
                                                              np.int32(num_threads_44869),
                                                              defunc_4_map_res_mem_43356,
                                                              defunc_3_map_res_mem_43422,
                                                              defunc_3_map_res_mem_43423,
                                                              defunc_0_f_res_mem_43457,
                                                              mem_43577,
                                                              mem_43581)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedziscan_stage1_33103_var,
                                       ((np.long(stage1_num_groups_44868) * np.long(segscan_group_sizze_33143)),),
                                       (np.long(segscan_group_sizze_33143),))
            if synchronous:
              sync(self)
          if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_44868))) != 0):
            self.mainDetailedziscan_stage2_33103_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                            (np.int32(4) * stage1_num_groups_44868)))),
                                                              np.int64(m_27392),
                                                              np.int64(iota32_arg_27815),
                                                              np.int64(stage1_num_groups_44868),
                                                              np.int32(num_threads_44869),
                                                              mem_43581)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedziscan_stage2_33103_var,
                                       ((np.long(np.int64(1)) * np.long(stage1_num_groups_44868)),),
                                       (np.long(stage1_num_groups_44868),))
            if synchronous:
              sync(self)
          required_groups_44911 = sext_i64_i32(sdiv_up64((m_27392 * iota32_arg_27815),
                                                         segscan_group_sizze_33143))
          if ((1 * (np.long(num_groups_33144) * np.long(segscan_group_sizze_33143))) != 0):
            self.mainDetailedziscan_stage3_33103_var.set_args(self.global_failure,
                                                              np.int64(m_27392),
                                                              np.int64(iota32_arg_27815),
                                                              np.int64(num_groups_33144),
                                                              np.int32(num_threads_44869),
                                                              np.int32(required_groups_44911),
                                                              mem_43581)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedziscan_stage3_33103_var,
                                       ((np.long(num_groups_33144) * np.long(segscan_group_sizze_33143)),),
                                       (np.long(segscan_group_sizze_33143),))
            if synchronous:
              sync(self)
        segmap_usable_groups_33170 = sdiv_up64(m_27392,
                                               segmap_group_sizze_33169)
        mem_43584 = opencl_alloc(self, bytes_43330, "mem_43584")
        if ((1 * (np.long(segmap_usable_groups_33170) * np.long(segmap_group_sizze_33169))) != 0):
          self.mainDetailedzisegmap_33084_var.set_args(self.global_failure,
                                                       np.int64(m_27392),
                                                       defunc_3_map_res_mem_43423,
                                                       defunc_3_map_res_mem_43424,
                                                       mem_43584)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_33084_var,
                                     ((np.long(segmap_usable_groups_33170) * np.long(segmap_group_sizze_33169)),),
                                     (np.long(segmap_group_sizze_33169),))
          if synchronous:
            sync(self)
        mem_43587 = opencl_alloc(self, m_27392, "mem_43587")
        mem_43589 = opencl_alloc(self, bytes_43330, "mem_43589")
        mem_43591 = opencl_alloc(self, bytes_43330, "mem_43591")
        mem_43594 = opencl_alloc(self, bytes_43545, "mem_43594")
        if slt64((iota32_arg_27787 * np.int64(2)), segred_group_sizze_33180):
          segment_sizze_nonzzero_44928 = smax64(np.int64(1), iota32_arg_27787)
          num_threads_44929 = (num_groups_33181 * segred_group_sizze_33180)
          if ((1 * (np.long(num_groups_33181) * np.long(segred_group_sizze_33180))) != 0):
            self.mainDetailedzisegred_small_33052_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33180))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33180))),
                                                               cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_33180))),
                                                               np.int64(m_27392),
                                                               np.int64(iota32_arg_27787),
                                                               np.int64(iota32_arg_27815),
                                                               np.int64(num_groups_33181),
                                                               np.int64(segment_sizze_nonzzero_44928),
                                                               mem_43460,
                                                               mem_43577,
                                                               mem_43581,
                                                               mem_43584,
                                                               mem_43587,
                                                               mem_43589,
                                                               mem_43591,
                                                               mem_43594)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_33052_var,
                                       ((np.long(num_groups_33181) * np.long(segred_group_sizze_33180)),),
                                       (np.long(segred_group_sizze_33180),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44964 = sdiv_up64(num_groups_33181,
                                               smax64(np.int64(1), m_27392))
          elements_per_thread_44965 = sdiv_up64(iota32_arg_27787,
                                                (segred_group_sizze_33180 * groups_per_segment_44964))
          virt_num_groups_44966 = (groups_per_segment_44964 * m_27392)
          num_threads_44967 = (num_groups_33181 * segred_group_sizze_33180)
          threads_per_segment_44968 = (groups_per_segment_44964 * segred_group_sizze_33180)
          group_res_arr_mem_44969 = opencl_alloc(self,
                                                 (np.int32(1) * (segred_group_sizze_33180 * virt_num_groups_44966)),
                                                 "group_res_arr_mem_44969")
          group_res_arr_mem_44971 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_33180 * virt_num_groups_44966)),
                                                 "group_res_arr_mem_44971")
          group_res_arr_mem_44973 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_33180 * virt_num_groups_44966)),
                                                 "group_res_arr_mem_44973")
          mainDetailedzicounter_mem_44975 = self.mainDetailedzicounter_mem_44975
          if ((1 * (np.long(num_groups_33181) * np.long(segred_group_sizze_33180))) != 0):
            self.mainDetailedzisegred_large_33052_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33180))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33180))),
                                                               cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_33180))),
                                                               np.int64(iota32_arg_27787),
                                                               np.int64(iota32_arg_27815),
                                                               np.int64(num_groups_33181),
                                                               np.int64(groups_per_segment_44964),
                                                               np.int64(elements_per_thread_44965),
                                                               np.int64(virt_num_groups_44966),
                                                               mem_43460,
                                                               mem_43577,
                                                               mem_43581,
                                                               mem_43584,
                                                               mem_43587,
                                                               mem_43589,
                                                               mem_43591,
                                                               mem_43594,
                                                               group_res_arr_mem_44969,
                                                               group_res_arr_mem_44971,
                                                               group_res_arr_mem_44973,
                                                               mainDetailedzicounter_mem_44975)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_33052_var,
                                       ((np.long(num_groups_33181) * np.long(segred_group_sizze_33180)),),
                                       (np.long(segred_group_sizze_33180),))
            if synchronous:
              sync(self)
        mem_43581 = None
        mem_43584 = None
        segmap_usable_groups_33218 = sdiv_up64(m_27392,
                                               segmap_group_sizze_33217)
        mem_43597 = opencl_alloc(self, bytes_43330, "mem_43597")
        mem_43599 = opencl_alloc(self, bytes_43330, "mem_43599")
        if ((1 * (np.long(segmap_usable_groups_33218) * np.long(segmap_group_sizze_33217))) != 0):
          self.mainDetailedzisegmap_33012_var.set_args(self.global_failure,
                                                       np.int64(N_27391),
                                                       np.int64(m_27392),
                                                       np.int32(n_27395),
                                                       defunc_4_map_res_mem_43357,
                                                       defunc_3_map_res_mem_43423,
                                                       mem_43577, mem_43587,
                                                       mem_43589, mem_43591,
                                                       mem_43597, mem_43599)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_33012_var,
                                     ((np.long(segmap_usable_groups_33218) * np.long(segmap_group_sizze_33217)),),
                                     (np.long(segmap_group_sizze_33217),))
          if synchronous:
            sync(self)
        mem_43587 = None
        mem_43589 = None
        mem_43591 = None
        mem_43602 = opencl_alloc(self, bytes_43465, "mem_43602")
        self.futhark_builtinzhreplicate_f32(mem_43602,
                                            (m_27392 * iota32_arg_27815),
                                            np.nan)
        segmap_usable_groups_33263 = sdiv_up64(nest_sizze_32504,
                                               segmap_group_sizze_33262)
        if ((1 * (np.long(segmap_usable_groups_33263) * np.long(segmap_group_sizze_33262))) != 0):
          self.mainDetailedzisegmap_32959_var.set_args(self.global_failure,
                                                       np.int64(N_27391),
                                                       np.int64(m_27392),
                                                       np.int32(n_27395),
                                                       np.int64(iota32_arg_27787),
                                                       np.int64(iota32_arg_27815),
                                                       defunc_4_map_res_mem_43357,
                                                       defunc_3_map_res_mem_43423,
                                                       mem_43577, mem_43594,
                                                       mem_43602)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_32959_var,
                                     ((np.long(segmap_usable_groups_33263) * np.long(segmap_group_sizze_33262)),),
                                     (np.long(segmap_group_sizze_33262),))
          if synchronous:
            sync(self)
        mem_43577 = None
        defunc_0_f_res_mem_43605 = mem_43602
        defunc_0_f_res_mem_43606 = mem_43594
        defunc_0_f_res_mem_43607 = mem_43597
        defunc_0_f_res_mem_43608 = mem_43599
      mem_43619 = opencl_alloc(self, bytes_43545, "mem_43619")
      if (((m_27392 * iota32_arg_27787) * np.int32(4)) != 0):
        cl.enqueue_copy(self.queue, mem_43619, defunc_0_f_res_mem_43605,
                        dest_offset=np.long(np.int64(0)),
                        src_offset=np.long(np.int64(0)),
                        byte_count=np.long(((m_27392 * iota32_arg_27787) * np.int32(4))))
      if synchronous:
        sync(self)
      defunc_0_f_res_mem_43605 = None
      defunc_0_f_res_mem_43621 = mem_43619
      defunc_0_f_res_mem_43622 = defunc_0_f_res_mem_43606
      defunc_0_f_res_mem_43623 = defunc_0_f_res_mem_43607
      defunc_0_f_res_mem_43624 = defunc_0_f_res_mem_43608
    defunc_4_map_res_mem_43357 = None
    defunc_3_map_res_mem_43422 = None
    out_arrsizze_43859 = iota32_arg_27787
    out_arrsizze_43861 = iota32_arg_27787
    out_arrsizze_43863 = iota32_arg_27787
    out_mem_43854 = defunc_0_f_res_mem_43457
    out_mem_43855 = defunc_4_map_res_mem_43355
    out_mem_43856 = defunc_3_map_res_mem_43423
    out_mem_43857 = defunc_3_map_res_mem_43424
    out_mem_43858 = defunc_0_f_res_mem_43621
    out_mem_43860 = defunc_0_f_res_mem_43622
    out_mem_43862 = mem_43460
    out_mem_43864 = defunc_0_f_res_mem_43623
    out_mem_43865 = defunc_0_f_res_mem_43624
    out_mem_43866 = mem_43501
    out_mem_43867 = defunc_4_map_res_mem_43356
    out_mem_43868 = defunc_3_map_res_mem_43318
    return (out_mem_43854, out_mem_43855, out_mem_43856, out_mem_43857,
            out_mem_43858, out_arrsizze_43859, out_mem_43860,
            out_arrsizze_43861, out_mem_43862, out_arrsizze_43863,
            out_mem_43864, out_mem_43865, out_mem_43866, out_mem_43867,
            out_mem_43868)
  def futhark_mainMagnitude(self, mappingindices_mem_42558, images_mem_42559,
                            N_28043, m_28044, trend_28045, k_28046, n_28047,
                            freq_28048, hfrac_28049, lam_28050):
    i32_res_28053 = sext_i32_i64(n_28047)
    x_28054 = (np.int32(2) * k_28046)
    k2p2_28055 = (np.int32(2) + x_28054)
    cond_28056 = slt32(np.int32(0), trend_28045)
    if cond_28056:
      k2p2zq_28057 = k2p2_28055
    else:
      k2p2zq_f_res_28058 = (k2p2_28055 - np.int32(1))
      k2p2zq_28057 = k2p2zq_f_res_28058
    i32_res_28059 = sext_i32_i64(k2p2zq_28057)
    binop_x_42562 = (N_28043 * i32_res_28059)
    bytes_42561 = (np.int64(4) * binop_x_42562)
    if cond_28056:
      bounds_invalid_upwards_28061 = slt64(i32_res_28059, np.int64(0))
      valid_28062 = not(bounds_invalid_upwards_28061)
      range_valid_c_28063 = True
      assert valid_28062, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:37:10-20\n   #3  bfastfinal.fut:29:17-66\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:37\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_28059,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_33450 = self.sizes["mainMagnitude.segmap_group_size_33380"]
      segmap_usable_groups_33451 = sdiv_up64(binop_x_42562,
                                             segmap_group_sizze_33450)
      mem_42563 = opencl_alloc(self, bytes_42561, "mem_42563")
      if ((1 * (np.long(segmap_usable_groups_33451) * np.long(segmap_group_sizze_33450))) != 0):
        self.mainMagnitudezisegmap_33377_var.set_args(self.global_failure,
                                                      np.int64(N_28043),
                                                      np.float32(freq_28048),
                                                      np.int64(i32_res_28059),
                                                      mappingindices_mem_42558,
                                                      mem_42563)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_33377_var,
                                   ((np.long(segmap_usable_groups_33451) * np.long(segmap_group_sizze_33450)),),
                                   (np.long(segmap_group_sizze_33450),))
        if synchronous:
          sync(self)
      binop_p_mem_42568 = mem_42563
    else:
      bounds_invalid_upwards_28087 = slt64(i32_res_28059, np.int64(0))
      valid_28088 = not(bounds_invalid_upwards_28087)
      range_valid_c_28089 = True
      assert valid_28088, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:49:10-22\n   #3  bfastfinal.fut:30:17-64\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:37\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_28059,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_33624 = self.sizes["mainMagnitude.segmap_group_size_33558"]
      segmap_usable_groups_33625 = sdiv_up64(binop_x_42562,
                                             segmap_group_sizze_33624)
      mem_42567 = opencl_alloc(self, bytes_42561, "mem_42567")
      if ((1 * (np.long(segmap_usable_groups_33625) * np.long(segmap_group_sizze_33624))) != 0):
        self.mainMagnitudezisegmap_33555_var.set_args(self.global_failure,
                                                      np.int64(N_28043),
                                                      np.float32(freq_28048),
                                                      np.int64(i32_res_28059),
                                                      mappingindices_mem_42558,
                                                      mem_42567)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_33555_var,
                                   ((np.long(segmap_usable_groups_33625) * np.long(segmap_group_sizze_33624)),),
                                   (np.long(segmap_group_sizze_33624),))
        if synchronous:
          sync(self)
      binop_p_mem_42568 = mem_42567
    x_28112 = (N_28043 * N_28043)
    y_28113 = (np.int64(2) * N_28043)
    x_28114 = (x_28112 + y_28113)
    x_28115 = (np.int64(1) + x_28114)
    y_28116 = (np.int64(1) + N_28043)
    zzero_28117 = (y_28116 == np.int64(0))
    nonzzero_28118 = not(zzero_28117)
    nonzzero_cert_28119 = True
    assert nonzzero_28118, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:35:32-60\n   #1  bfastfinal.fut:184:5-58\n   #2  bfastfinal.fut:179:1-185:37\n" % ("division by zero",))
    x_28120 = sdiv64(x_28115, y_28116)
    x_28121 = (x_28120 - N_28043)
    binop_p_28122 = (x_28121 - np.int64(1))
    defunc_0_f_res_28123 = sext_i64_i32(binop_p_28122)
    i32_res_28124 = sitofp_i32_f32(defunc_0_f_res_28123)
    segmap_group_sizze_33707 = self.sizes["mainMagnitude.segmap_group_size_33686"]
    segmap_usable_groups_33708 = sdiv_up64(binop_x_42562,
                                           segmap_group_sizze_33707)
    mem_42571 = opencl_alloc(self, bytes_42561, "mem_42571")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_42571, np.int64(0),
                                                binop_p_mem_42568, np.int64(0),
                                                np.int64(1), N_28043,
                                                i32_res_28059)
    mem_42575 = opencl_alloc(self, bytes_42561, "mem_42575")
    if ((1 * (np.long(segmap_usable_groups_33708) * np.long(segmap_group_sizze_33707))) != 0):
      self.mainMagnitudezisegmap_33683_var.set_args(self.global_failure,
                                                    np.int64(N_28043),
                                                    np.int64(i32_res_28059),
                                                    np.float32(i32_res_28124),
                                                    mem_42571, mem_42575)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_33683_var,
                                 ((np.long(segmap_usable_groups_33708) * np.long(segmap_group_sizze_33707)),),
                                 (np.long(segmap_group_sizze_33707),))
      if synchronous:
        sync(self)
    eq_x_y_28132 = (np.int64(0) == i32_res_28059)
    p_and_eq_x_y_28133 = (cond_28056 and eq_x_y_28132)
    not_p_28134 = not(cond_28056)
    p_and_eq_x_y_28135 = (eq_x_y_28132 and not_p_28134)
    empty_slice_28136 = (p_and_eq_x_y_28133 or p_and_eq_x_y_28135)
    m_28137 = (i32_res_28059 - np.int64(1))
    zzero_leq_i_p_m_t_s_28138 = sle64(np.int64(0), m_28137)
    i_p_m_t_s_leq_w_28139 = slt64(m_28137, i32_res_28059)
    i_lte_j_28140 = sle64(np.int64(0), i32_res_28059)
    y_28141 = (zzero_leq_i_p_m_t_s_28138 and i_p_m_t_s_leq_w_28139)
    y_28142 = (i_lte_j_28140 and y_28141)
    ok_or_empty_28143 = (empty_slice_28136 or y_28142)
    empty_slice_28144 = (i32_res_28053 == np.int64(0))
    m_28145 = (i32_res_28053 - np.int64(1))
    zzero_leq_i_p_m_t_s_28146 = sle64(np.int64(0), m_28145)
    i_p_m_t_s_leq_w_28147 = slt64(m_28145, N_28043)
    i_lte_j_28148 = sle64(np.int64(0), i32_res_28053)
    y_28149 = (zzero_leq_i_p_m_t_s_28146 and i_p_m_t_s_leq_w_28147)
    y_28150 = (i_lte_j_28148 and y_28149)
    ok_or_empty_28151 = (empty_slice_28144 or y_28150)
    index_ok_28152 = (ok_or_empty_28143 and ok_or_empty_28151)
    index_certs_28153 = True
    assert index_ok_28152, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:38:13-21\n   #1  bfastfinal.fut:184:5-58\n   #2  bfastfinal.fut:179:1-185:37\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_28053,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               i32_res_28059,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_28043,
                                                                                                                                                                               "]."))
    empty_slice_28155 = (i32_res_28059 == np.int64(0))
    ok_or_empty_28156 = (y_28142 or empty_slice_28155)
    index_ok_28157 = (ok_or_empty_28151 and ok_or_empty_28156)
    index_certs_28158 = True
    assert index_ok_28157, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:39:13-22\n   #1  bfastfinal.fut:184:5-58\n   #2  bfastfinal.fut:179:1-185:37\n" % ("Index [:",
                                                                                                                                                                               i32_res_28053,
                                                                                                                                                                               ", ",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":] out of bounds for array of shape [",
                                                                                                                                                                               N_28043,
                                                                                                                                                                               "][",
                                                                                                                                                                               i32_res_28059,
                                                                                                                                                                               "]."))
    empty_slice_28160 = (m_28044 == np.int64(0))
    m_28161 = (m_28044 - np.int64(1))
    zzero_leq_i_p_m_t_s_28162 = sle64(np.int64(0), m_28161)
    i_p_m_t_s_leq_w_28163 = slt64(m_28161, m_28044)
    i_lte_j_28164 = sle64(np.int64(0), m_28044)
    y_28165 = (zzero_leq_i_p_m_t_s_28162 and i_p_m_t_s_leq_w_28163)
    y_28166 = (i_lte_j_28164 and y_28165)
    ok_or_empty_28167 = (empty_slice_28160 or y_28166)
    index_ok_28168 = (ok_or_empty_28151 and ok_or_empty_28167)
    index_certs_28169 = True
    assert index_ok_28168, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:40:13-26\n   #1  bfastfinal.fut:184:5-58\n   #2  bfastfinal.fut:179:1-185:37\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_28053,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               m_28044,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_28043,
                                                                                                                                                                               "]."))
    suff_outer_par_33714 = (self.sizes["mainMagnitude.suff_outer_par_6"] <= m_28044)
    segmap_group_sizze_33740 = self.sizes["mainMagnitude.segmap_group_size_33718"]
    max_num_groups_43873 = self.sizes["mainMagnitude.segmap_num_groups_33720"]
    num_groups_33741 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28044,
                                                            segmap_group_sizze_33740),
                                                  sext_i32_i64(max_num_groups_43873))))
    nest_sizze_33916 = (m_28044 * i32_res_28059)
    segmap_group_sizze_33917 = self.sizes["mainMagnitude.segmap_group_size_33765"]
    max_num_groups_43874 = self.sizes["mainMagnitude.segmap_num_groups_33767"]
    num_groups_33918 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_33916,
                                                            segmap_group_sizze_33917),
                                                  sext_i32_i64(max_num_groups_43874))))
    suff_outer_par_33922 = (self.sizes["mainMagnitude.suff_outer_par_7"] <= nest_sizze_33916)
    y_33946 = (i32_res_28059 * i32_res_28059)
    comparatee_33947 = (m_28044 * y_33946)
    suff_outer_par_33948 = (self.sizes["mainMagnitude.suff_outer_par_8"] <= comparatee_33947)
    nest_sizze_33968 = (i32_res_28053 * comparatee_33947)
    segred_group_sizze_33969 = self.sizes["mainMagnitude.segred_group_size_33825"]
    max_num_groups_43875 = self.sizes["mainMagnitude.segred_num_groups_33827"]
    num_groups_33970 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_33968,
                                                            segred_group_sizze_33969),
                                                  sext_i32_i64(max_num_groups_43875))))
    Tx_40737 = self.sizes["mainMagnitude.Tx_40735"]
    Ty_40738 = self.sizes["mainMagnitude.Ty_40736"]
    Ty_40739 = smin64(i32_res_28059, Ty_40738)
    Tx_40740 = smin64(i32_res_28059, Tx_40737)
    gridDim_zz_40743 = sdiv_up64(m_28044, np.int64(30))
    group_sizze_tile3d_40746 = (Ty_40739 * Tx_40740)
    binop_x_42577 = (N_28043 * m_28044)
    bytes_42576 = (np.int64(4) * binop_x_42577)
    bytes_42621 = (np.int64(4) * comparatee_33947)
    bytes_42580 = (np.int64(4) * y_33946)
    binop_x_42724 = (i32_res_28059 * nest_sizze_33916)
    bytes_42722 = (np.int64(4) * binop_x_42724)
    bytes_42626 = (np.int64(4) * i32_res_28059)
    binop_x_42655 = (np.int64(30) * group_sizze_tile3d_40746)
    bytes_42653 = (np.int64(4) * binop_x_42655)
    binop_x_43625 = (np.int64(4) * Ty_40739)
    binop_x_43626 = (Tx_40740 * binop_x_43625)
    sizze_43627 = (np.int64(30) * binop_x_43626)
    num_threads_43761 = (segmap_group_sizze_33740 * num_groups_33741)
    total_sizze_43762 = (bytes_42580 * num_threads_43761)
    num_threads_43763 = (segmap_group_sizze_33917 * num_groups_33918)
    total_sizze_43764 = (bytes_42626 * num_threads_43763)
    local_memory_capacity_43997 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_43997)) and suff_outer_par_33714):
      mem_42578 = opencl_alloc(self, bytes_42576, "mem_42578")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_42578, np.int64(0),
                                                  images_mem_42559, np.int64(0),
                                                  np.int64(1), N_28043, m_28044)
      mem_42624 = opencl_alloc(self, bytes_42621, "mem_42624")
      mem_42582 = opencl_alloc(self, total_sizze_43762, "mem_42582")
      if ((1 * (np.long(num_groups_33741) * np.long(segmap_group_sizze_33740))) != 0):
        self.mainMagnitudezisegmap_33716_var.set_args(self.global_failure,
                                                      np.int64(N_28043),
                                                      np.int64(m_28044),
                                                      np.int32(n_28047),
                                                      np.int32(k2p2zq_28057),
                                                      np.int64(i32_res_28059),
                                                      np.int64(num_groups_33741),
                                                      binop_p_mem_42568,
                                                      mem_42575, mem_42578,
                                                      mem_42582, mem_42624)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_33716_var,
                                   ((np.long(num_groups_33741) * np.long(segmap_group_sizze_33740)),),
                                   (np.long(segmap_group_sizze_33740),))
        if synchronous:
          sync(self)
      mem_42578 = None
      mem_42582 = None
      mem_42725 = opencl_alloc(self, bytes_42722, "mem_42725")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_42725, np.int64(0),
                                                  mem_42624, np.int64(0),
                                                  np.int64(1), m_28044,
                                                  (i32_res_28059 * i32_res_28059))
      mem_42624 = None
      defunc_3_map_res_mem_42727 = mem_42725
    else:
      local_memory_capacity_43996 = self.max_local_memory
      if (sle64(np.int64(0),
                sext_i32_i64(local_memory_capacity_43996)) and suff_outer_par_33922):
        mem_42643 = opencl_alloc(self, bytes_42722, "mem_42643")
        mem_42627 = opencl_alloc(self, total_sizze_43764, "mem_42627")
        if ((1 * (np.long(num_groups_33918) * np.long(segmap_group_sizze_33917))) != 0):
          self.mainMagnitudezisegmap_33762_var.set_args(self.global_failure,
                                                        np.int64(N_28043),
                                                        np.int64(m_28044),
                                                        np.int32(n_28047),
                                                        np.int32(k2p2zq_28057),
                                                        np.int64(i32_res_28059),
                                                        np.int64(num_groups_33918),
                                                        images_mem_42559,
                                                        mem_42571, mem_42575,
                                                        mem_42627, mem_42643)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_33762_var,
                                     ((np.long(num_groups_33918) * np.long(segmap_group_sizze_33917)),),
                                     (np.long(segmap_group_sizze_33917),))
          if synchronous:
            sync(self)
        mem_42627 = None
        mem_42719 = opencl_alloc(self, bytes_42722, "mem_42719")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_42719, np.int64(0),
                                                    mem_42643, np.int64(0),
                                                    np.int64(1),
                                                    (m_28044 * i32_res_28059),
                                                    i32_res_28059)
        mem_42643 = None
        defunc_3_map_res_mem_42721 = mem_42719
      else:
        local_memory_capacity_43995 = self.max_local_memory
        if (sle64(np.int64(120),
                  sext_i32_i64(local_memory_capacity_43995)) and suff_outer_par_33948):
          mem_42646 = opencl_alloc(self, bytes_42576, "mem_42646")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_42646, np.int64(0),
                                                      images_mem_42559,
                                                      np.int64(0), np.int64(1),
                                                      N_28043, m_28044)
          gridDim_x_40741 = sdiv_up64(i32_res_28059, Tx_40740)
          gridDim_y_40742 = sdiv_up64(i32_res_28059, Ty_40739)
          binop_x_40744 = (gridDim_y_40742 * gridDim_zz_40743)
          grid_sizze_tile3d_40745 = (gridDim_x_40741 * binop_x_40744)
          count_shmem_40747 = sdiv_up64(np.int64(30), group_sizze_tile3d_40746)
          mem_42706 = opencl_alloc(self, bytes_42722, "mem_42706")
          if ((1 * (np.long(grid_sizze_tile3d_40745) * np.long(group_sizze_tile3d_40746))) != 0):
            self.mainMagnitudezisegmap_intragroup_40751_var.set_args(self.global_failure,
                                                                     cl.LocalMemory(np.long(np.int64(120))),
                                                                     np.int64(m_28044),
                                                                     np.int32(n_28047),
                                                                     np.int64(i32_res_28059),
                                                                     np.int64(Ty_40739),
                                                                     np.int64(Tx_40740),
                                                                     np.int64(gridDim_x_40741),
                                                                     np.int64(gridDim_y_40742),
                                                                     np.int64(group_sizze_tile3d_40746),
                                                                     np.int64(count_shmem_40747),
                                                                     mem_42571,
                                                                     mem_42575,
                                                                     mem_42646,
                                                                     mem_42706)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_intragroup_40751_var,
                                       ((np.long(grid_sizze_tile3d_40745) * np.long(group_sizze_tile3d_40746)),),
                                       (np.long(group_sizze_tile3d_40746),))
            if synchronous:
              sync(self)
          mem_42646 = None
          defunc_3_map_res_mem_42715 = mem_42706
        else:
          mem_42709 = opencl_alloc(self, bytes_42561, "mem_42709")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_42709, np.int64(0),
                                                      mem_42575, np.int64(0),
                                                      np.int64(1),
                                                      i32_res_28059, N_28043)
          mem_42714 = opencl_alloc(self, bytes_42722, "mem_42714")
          if slt64((i32_res_28053 * np.int64(2)), segred_group_sizze_33969):
            segment_sizze_nonzzero_43935 = smax64(np.int64(1), i32_res_28053)
            num_threads_43936 = (num_groups_33970 * segred_group_sizze_33969)
            if ((1 * (np.long(num_groups_33970) * np.long(segred_group_sizze_33969))) != 0):
              self.mainMagnitudezisegred_small_33831_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33969))),
                                                                  np.int64(N_28043),
                                                                  np.int64(m_28044),
                                                                  np.int64(i32_res_28053),
                                                                  np.int64(i32_res_28059),
                                                                  np.int64(num_groups_33970),
                                                                  np.int64(segment_sizze_nonzzero_43935),
                                                                  images_mem_42559,
                                                                  binop_p_mem_42568,
                                                                  mem_42709,
                                                                  mem_42714)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainMagnitudezisegred_small_33831_var,
                                         ((np.long(num_groups_33970) * np.long(segred_group_sizze_33969)),),
                                         (np.long(segred_group_sizze_33969),))
              if synchronous:
                sync(self)
          else:
            groups_per_segment_43956 = sdiv_up64(num_groups_33970,
                                                 smax64(np.int64(1),
                                                        ((m_28044 * i32_res_28059) * i32_res_28059)))
            elements_per_thread_43957 = sdiv_up64(i32_res_28053,
                                                  (segred_group_sizze_33969 * groups_per_segment_43956))
            virt_num_groups_43958 = (groups_per_segment_43956 * ((m_28044 * i32_res_28059) * i32_res_28059))
            num_threads_43959 = (num_groups_33970 * segred_group_sizze_33969)
            threads_per_segment_43960 = (groups_per_segment_43956 * segred_group_sizze_33969)
            group_res_arr_mem_43961 = opencl_alloc(self,
                                                   (np.int32(4) * (segred_group_sizze_33969 * virt_num_groups_43958)),
                                                   "group_res_arr_mem_43961")
            mainMagnitudezicounter_mem_43963 = self.mainMagnitudezicounter_mem_43963
            if ((1 * (np.long(num_groups_33970) * np.long(segred_group_sizze_33969))) != 0):
              self.mainMagnitudezisegred_large_33831_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(np.int32(1))),
                                                                  cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33969))),
                                                                  np.int64(N_28043),
                                                                  np.int64(i32_res_28053),
                                                                  np.int64(i32_res_28059),
                                                                  np.int64(num_groups_33970),
                                                                  np.int64(groups_per_segment_43956),
                                                                  np.int64(elements_per_thread_43957),
                                                                  np.int64(virt_num_groups_43958),
                                                                  np.int64(threads_per_segment_43960),
                                                                  images_mem_42559,
                                                                  binop_p_mem_42568,
                                                                  mem_42709,
                                                                  mem_42714,
                                                                  group_res_arr_mem_43961,
                                                                  mainMagnitudezicounter_mem_43963)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainMagnitudezisegred_large_33831_var,
                                         ((np.long(num_groups_33970) * np.long(segred_group_sizze_33969)),),
                                         (np.long(segred_group_sizze_33969),))
              if synchronous:
                sync(self)
          mem_42709 = None
          defunc_3_map_res_mem_42715 = mem_42714
        defunc_3_map_res_mem_42721 = defunc_3_map_res_mem_42715
      defunc_3_map_res_mem_42727 = defunc_3_map_res_mem_42721
    m_28190 = (np.int32(2) * k2p2zq_28057)
    nm_28191 = (k2p2zq_28057 * m_28190)
    i32_res_28192 = sext_i32_i64(nm_28191)
    bounds_invalid_upwards_28193 = slt64(i32_res_28192, np.int64(0))
    valid_28194 = not(bounds_invalid_upwards_28193)
    range_valid_c_28195 = True
    assert valid_28194, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:78:34-50\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:184:5-58\n   #4  bfastfinal.fut:179:1-185:37\n" % ("Range ",
                                                                                                                                                                                                                                        np.int64(0),
                                                                                                                                                                                                                                        "..",
                                                                                                                                                                                                                                        np.int64(1),
                                                                                                                                                                                                                                        "..<",
                                                                                                                                                                                                                                        i32_res_28192,
                                                                                                                                                                                                                                        " is invalid."))
    zzero_28200 = (m_28190 == np.int32(0))
    nonzzero_28201 = not(zzero_28200)
    nonzzero_cert_28202 = True
    assert nonzzero_28201, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:73:41-47\n   #1  helpers.fut:73:14-78:52\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:184:5-58\n   #4  bfastfinal.fut:179:1-185:37\n" % ("division by zero",))
    loop_nonempty_28203 = slt32(np.int32(0), k2p2zq_28057)
    loop_not_taken_28204 = not(loop_nonempty_28203)
    protect_assert_disj_28205 = (nonzzero_28201 or loop_not_taken_28204)
    nonzzero_cert_28206 = True
    assert protect_assert_disj_28205, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:59:43-49\n   #1  helpers.fut:59:16-65:44\n   #2  helpers.fut:79:15-33\n   #3  bfastfinal.fut:50:35-50\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:37\n" % ("division by zero",))
    i32_res_28207 = sext_i32_i64(m_28190)
    x_28208 = (i32_res_28059 * i32_res_28207)
    dim_ok_28209 = (x_28208 == i32_res_28192)
    dim_ok_cert_28210 = True
    assert dim_ok_28209, ("Error: %s\n\nBacktrace:\n-> #0  /prelude/array.fut:141:3-33\n   #1  helpers.fut:81:9-45\n   #2  bfastfinal.fut:50:35-50\n   #3  bfastfinal.fut:184:5-58\n   #4  bfastfinal.fut:179:1-185:37\n" % ("new shape has different number of elements than old shape",))
    j_m_i_28211 = (i32_res_28207 - i32_res_28059)
    empty_slice_28212 = (j_m_i_28211 == np.int64(0))
    m_28213 = (j_m_i_28211 - np.int64(1))
    i_p_m_t_s_28214 = (i32_res_28059 + m_28213)
    zzero_leq_i_p_m_t_s_28215 = sle64(np.int64(0), i_p_m_t_s_28214)
    i_p_m_t_s_leq_w_28216 = slt64(i_p_m_t_s_28214, i32_res_28207)
    i_lte_j_28217 = sle64(i32_res_28059, i32_res_28207)
    y_28218 = (i_lte_j_28140 and i_p_m_t_s_leq_w_28216)
    y_28219 = (zzero_leq_i_p_m_t_s_28215 and y_28218)
    y_28220 = (i_lte_j_28217 and y_28219)
    forwards_ok_28221 = (i_lte_j_28140 and y_28220)
    ok_or_empty_28222 = (empty_slice_28212 or forwards_ok_28221)
    index_ok_28223 = (ok_or_empty_28156 and ok_or_empty_28222)
    index_certs_28224 = True
    assert index_ok_28223, ("Error: %s%d%s%d%s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-88\n   #1  bfastfinal.fut:50:35-50\n   #2  bfastfinal.fut:184:5-58\n   #3  bfastfinal.fut:179:1-185:37\n" % ("Index [",
                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_28059,
                                                                                                                                                                                                                   ", ",
                                                                                                                                                                                                                   i32_res_28059,
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_28207,
                                                                                                                                                                                                                   "] out of bounds for array of shape [",
                                                                                                                                                                                                                   i32_res_28059,
                                                                                                                                                                                                                   "][",
                                                                                                                                                                                                                   i32_res_28207,
                                                                                                                                                                                                                   "]."))
    dim_match_28225 = (i32_res_28059 == j_m_i_28211)
    empty_or_match_cert_28226 = True
    assert dim_match_28225, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-103\n   #1  bfastfinal.fut:50:35-50\n   #2  bfastfinal.fut:184:5-58\n   #3  bfastfinal.fut:179:1-185:37\n" % ("Value of (core language) shape (",
                                                                                                                                                                                                             i32_res_28059,
                                                                                                                                                                                                             ", ",
                                                                                                                                                                                                             j_m_i_28211,
                                                                                                                                                                                                             ") cannot match shape of type `[",
                                                                                                                                                                                                             i32_res_28059,
                                                                                                                                                                                                             "][",
                                                                                                                                                                                                             i32_res_28059,
                                                                                                                                                                                                             "]f32`."))
    max_group_sizze_34184 = self.max_group_size
    fits_34185 = sle64(i32_res_28192, max_group_sizze_34184)
    suff_intra_par_34183 = (self.sizes["mainMagnitude.suff_intra_par_11"] <= i32_res_28192)
    intra_suff_and_fits_34186 = (suff_intra_par_34183 and fits_34185)
    nest_sizze_34670 = (m_28044 * i32_res_28192)
    segmap_group_sizze_34671 = self.sizes["mainMagnitude.segmap_group_size_34630"]
    suff_intra_par_34698 = (self.sizes["mainMagnitude.suff_intra_par_13"] <= i32_res_28192)
    intra_suff_and_fits_34699 = (fits_34185 and suff_intra_par_34698)
    segmap_group_sizze_34735 = self.sizes["mainMagnitude.segmap_group_size_34536"]
    segmap_group_sizze_34751 = self.sizes["mainMagnitude.segmap_group_size_34469"]
    segmap_group_sizze_34785 = self.sizes["mainMagnitude.segmap_group_size_34415"]
    y_34795 = (i32_res_28059 * j_m_i_28211)
    nest_sizze_34796 = (m_28044 * y_34795)
    segmap_group_sizze_34797 = self.sizes["mainMagnitude.segmap_group_size_34250"]
    segmap_usable_groups_34736 = sdiv_up_safe64(m_28044,
                                                segmap_group_sizze_34735)
    segmap_usable_groups_34752 = sdiv_up_safe64(nest_sizze_34670,
                                                segmap_group_sizze_34751)
    segmap_usable_groups_34786 = sdiv_up_safe64(nest_sizze_34670,
                                                segmap_group_sizze_34785)
    bytes_42730 = (np.int64(4) * i32_res_28192)
    bytes_42753 = (np.int64(4) * nest_sizze_34670)
    binop_x_42804 = (j_m_i_28211 * nest_sizze_33916)
    bytes_42802 = (np.int64(4) * binop_x_42804)
    local_memory_capacity_43998 = self.max_local_memory
    if intra_suff_and_fits_34186:
      defunc_3_map_res_ixfn_42806 = i32_res_28059
    else:
      defunc_3_map_res_ixfn_42806 = j_m_i_28211
    local_memory_capacity_44061 = self.max_local_memory
    if (sle64(((bytes_42730 + srem64((np.int64(8) - srem64(bytes_42730,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_42730 + srem64((np.int64(8) - srem64(bytes_42730,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44061)) and intra_suff_and_fits_34186):
      mem_42751 = opencl_alloc(self, bytes_42722, "mem_42751")
      if ((1 * (np.long(m_28044) * np.long(i32_res_28192))) != 0):
        self.mainMagnitudezisegmap_intragroup_34066_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(bytes_42730)),
                                                                 cl.LocalMemory(np.long(bytes_42730)),
                                                                 np.int32(k2p2zq_28057),
                                                                 np.int64(i32_res_28059),
                                                                 np.int32(m_28190),
                                                                 np.int64(i32_res_28192),
                                                                 np.int64(i32_res_28207),
                                                                 defunc_3_map_res_mem_42727,
                                                                 mem_42751)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_34066_var,
                                   ((np.long(m_28044) * np.long(i32_res_28192)),),
                                   (np.long(i32_res_28192),))
        if synchronous:
          sync(self)
      defunc_3_map_res_mem_42807 = mem_42751
    else:
      segmap_usable_groups_34672 = sdiv_up64(nest_sizze_34670,
                                             segmap_group_sizze_34671)
      mem_42755 = opencl_alloc(self, bytes_42753, "mem_42755")
      if ((1 * (np.long(segmap_usable_groups_34672) * np.long(segmap_group_sizze_34671))) != 0):
        self.mainMagnitudezisegmap_34627_var.set_args(self.global_failure,
                                                      np.int64(m_28044),
                                                      np.int32(k2p2zq_28057),
                                                      np.int64(i32_res_28059),
                                                      np.int32(m_28190),
                                                      np.int64(i32_res_28192),
                                                      defunc_3_map_res_mem_42727,
                                                      mem_42755)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_34627_var,
                                   ((np.long(segmap_usable_groups_34672) * np.long(segmap_group_sizze_34671)),),
                                   (np.long(segmap_group_sizze_34671),))
        if synchronous:
          sync(self)
      ctx_param_ext_42756 = m_28044
      ctx_param_ext_42757 = i32_res_28192
      ctx_param_ext_42758 = np.int64(0)
      ctx_param_ext_42759 = i32_res_28192
      ctx_param_ext_42760 = m_28044
      ctx_param_ext_42761 = np.int64(1)
      ctx_param_ext_42762 = i32_res_28192
      mem_param_42763 = mem_42755
      i_34688 = np.int32(0)
      one_45066 = np.int32(1)
      for counter_45065 in range(k2p2zq_28057):
        i32_res_34690 = sext_i32_i64(i_34688)
        local_memory_capacity_44021 = self.max_local_memory
        if intra_suff_and_fits_34699:
          gauss_jordan_res_ixfn_42785 = m_28044
        else:
          gauss_jordan_res_ixfn_42785 = ctx_param_ext_42760
        local_memory_capacity_44022 = self.max_local_memory
        if intra_suff_and_fits_34699:
          gauss_jordan_res_ixfn_42786 = i32_res_28192
        else:
          gauss_jordan_res_ixfn_42786 = ctx_param_ext_42762
        local_memory_capacity_44023 = self.max_local_memory
        if intra_suff_and_fits_34699:
          gauss_jordan_res_ixfn_42787 = m_28044
        else:
          gauss_jordan_res_ixfn_42787 = ctx_param_ext_42756
        local_memory_capacity_44024 = self.max_local_memory
        if intra_suff_and_fits_34699:
          gauss_jordan_res_ixfn_42788 = i32_res_28192
        else:
          gauss_jordan_res_ixfn_42788 = ctx_param_ext_42757
        local_memory_capacity_44025 = self.max_local_memory
        if intra_suff_and_fits_34699:
          gauss_jordan_res_ixfn_42789 = i32_res_28192
        else:
          gauss_jordan_res_ixfn_42789 = ctx_param_ext_42759
        local_memory_capacity_44026 = self.max_local_memory
        if intra_suff_and_fits_34699:
          gauss_jordan_res_ixfn_42790 = np.int64(1)
        else:
          gauss_jordan_res_ixfn_42790 = ctx_param_ext_42761
        local_memory_capacity_44027 = self.max_local_memory
        if intra_suff_and_fits_34699:
          gauss_jordan_res_ixfn_42791 = np.int64(0)
        else:
          gauss_jordan_res_ixfn_42791 = ctx_param_ext_42758
        local_memory_capacity_44055 = self.max_local_memory
        if ((sle64(np.int64(0),
                   sext_i32_i64(local_memory_capacity_44055)) and sle64((bytes_42730 + srem64((np.int64(8) - srem64(bytes_42730,
                                                                                                                    np.int64(8))),
                                                                                              np.int64(8))),
                                                                        sext_i32_i64(local_memory_capacity_44055))) and intra_suff_and_fits_34699):
          mem_42768 = opencl_alloc(self, bytes_42753, "mem_42768")
          group_sizze_44031 = self.sizes["mainMagnitude.group_size_44031"]
          num_groups_44032 = sdiv_up64((m_28044 * i32_res_28192),
                                       group_sizze_44031)
          if ((1 * (np.long(num_groups_44032) * np.long(group_sizze_44031))) != 0):
            self.mainMagnitudezicopy_44028_var.set_args(np.int64(m_28044),
                                                        np.int64(i32_res_28192),
                                                        np.int64(ctx_param_ext_42758),
                                                        np.int64(ctx_param_ext_42759),
                                                        np.int64(ctx_param_ext_42761),
                                                        mem_param_42763,
                                                        mem_42768)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezicopy_44028_var,
                                       ((np.long(num_groups_44032) * np.long(group_sizze_44031)),),
                                       (np.long(group_sizze_44031),))
            if synchronous:
              sync(self)
          mem_42776 = opencl_alloc(self, bytes_42753, "mem_42776")
          if ((1 * (np.long(m_28044) * np.long(i32_res_28192))) != 0):
            self.mainMagnitudezisegmap_intragroup_34293_var.set_args(self.global_failure,
                                                                     cl.LocalMemory(np.long(bytes_42730)),
                                                                     np.int64(m_28044),
                                                                     np.int32(k2p2zq_28057),
                                                                     np.int32(m_28190),
                                                                     np.int64(i32_res_28192),
                                                                     np.int32(i_34688),
                                                                     np.int64(i32_res_34690),
                                                                     np.int64(ctx_param_ext_42758),
                                                                     np.int64(ctx_param_ext_42759),
                                                                     np.int64(ctx_param_ext_42761),
                                                                     mem_param_42763,
                                                                     mem_42768,
                                                                     mem_42776)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_intragroup_34293_var,
                                       ((np.long(m_28044) * np.long(i32_res_28192)),),
                                       (np.long(i32_res_28192),))
            if synchronous:
              sync(self)
          mem_42768 = None
          gauss_jordan_res_mem_42792 = mem_42776
        else:
          mem_42779 = opencl_alloc(self, m_28044, "mem_42779")
          if ((1 * (np.long(segmap_usable_groups_34736) * np.long(segmap_group_sizze_34735))) != 0):
            self.mainMagnitudezisegmap_34534_var.set_args(self.global_failure,
                                                          np.int64(m_28044),
                                                          np.int64(i32_res_34690),
                                                          np.int64(ctx_param_ext_42758),
                                                          np.int64(ctx_param_ext_42759),
                                                          np.int64(ctx_param_ext_42761),
                                                          mem_param_42763,
                                                          mem_42779)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_34534_var,
                                       ((np.long(segmap_usable_groups_34736) * np.long(segmap_group_sizze_34735)),),
                                       (np.long(segmap_group_sizze_34735),))
            if synchronous:
              sync(self)
          mem_42783 = opencl_alloc(self, bytes_42753, "mem_42783")
          if ((1 * (np.long(segmap_usable_groups_34752) * np.long(segmap_group_sizze_34751))) != 0):
            self.mainMagnitudezisegmap_34466_var.set_args(self.global_failure,
                                                          np.int64(m_28044),
                                                          np.int32(k2p2zq_28057),
                                                          np.int32(m_28190),
                                                          np.int64(i32_res_28192),
                                                          np.int32(i_34688),
                                                          np.int64(i32_res_34690),
                                                          np.int64(ctx_param_ext_42758),
                                                          np.int64(ctx_param_ext_42759),
                                                          np.int64(ctx_param_ext_42761),
                                                          mem_param_42763,
                                                          mem_42779, mem_42783)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_34466_var,
                                       ((np.long(segmap_usable_groups_34752) * np.long(segmap_group_sizze_34751)),),
                                       (np.long(segmap_group_sizze_34751),))
            if synchronous:
              sync(self)
          mem_42779 = None
          if ((1 * (np.long(segmap_usable_groups_34786) * np.long(segmap_group_sizze_34785))) != 0):
            self.mainMagnitudezisegmap_34412_var.set_args(self.global_failure,
                                                          np.int64(m_28044),
                                                          np.int64(i32_res_28192),
                                                          np.int64(ctx_param_ext_42758),
                                                          np.int64(ctx_param_ext_42759),
                                                          np.int64(ctx_param_ext_42761),
                                                          mem_param_42763,
                                                          mem_42783)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_34412_var,
                                       ((np.long(segmap_usable_groups_34786) * np.long(segmap_group_sizze_34785)),),
                                       (np.long(segmap_group_sizze_34785),))
            if synchronous:
              sync(self)
          mem_42783 = None
          gauss_jordan_res_mem_42792 = mem_param_42763
        ctx_param_ext_tmp_44012 = gauss_jordan_res_ixfn_42787
        ctx_param_ext_tmp_44013 = gauss_jordan_res_ixfn_42788
        ctx_param_ext_tmp_44014 = gauss_jordan_res_ixfn_42791
        ctx_param_ext_tmp_44015 = gauss_jordan_res_ixfn_42789
        ctx_param_ext_tmp_44016 = gauss_jordan_res_ixfn_42785
        ctx_param_ext_tmp_44017 = gauss_jordan_res_ixfn_42790
        ctx_param_ext_tmp_44018 = gauss_jordan_res_ixfn_42786
        mem_param_tmp_44019 = gauss_jordan_res_mem_42792
        ctx_param_ext_42756 = ctx_param_ext_tmp_44012
        ctx_param_ext_42757 = ctx_param_ext_tmp_44013
        ctx_param_ext_42758 = ctx_param_ext_tmp_44014
        ctx_param_ext_42759 = ctx_param_ext_tmp_44015
        ctx_param_ext_42760 = ctx_param_ext_tmp_44016
        ctx_param_ext_42761 = ctx_param_ext_tmp_44017
        ctx_param_ext_42762 = ctx_param_ext_tmp_44018
        mem_param_42763 = mem_param_tmp_44019
        i_34688 += one_45066
      gauss_jordan_res_r_ixfn_42793 = ctx_param_ext_42756
      gauss_jordan_res_r_ixfn_42794 = ctx_param_ext_42757
      gauss_jordan_res_r_ixfn_42795 = ctx_param_ext_42758
      gauss_jordan_res_r_ixfn_42796 = ctx_param_ext_42759
      gauss_jordan_res_r_ixfn_42797 = ctx_param_ext_42760
      gauss_jordan_res_r_ixfn_42798 = ctx_param_ext_42761
      gauss_jordan_res_r_ixfn_42799 = ctx_param_ext_42762
      gauss_jordan_res_r_mem_42800 = mem_param_42763
      mem_42755 = None
      segmap_usable_groups_34798 = sdiv_up64(nest_sizze_34796,
                                             segmap_group_sizze_34797)
      mem_42805 = opencl_alloc(self, bytes_42802, "mem_42805")
      if ((1 * (np.long(segmap_usable_groups_34798) * np.long(segmap_group_sizze_34797))) != 0):
        self.mainMagnitudezisegmap_34246_var.set_args(self.global_failure,
                                                      np.int64(m_28044),
                                                      np.int64(i32_res_28059),
                                                      np.int64(i32_res_28192),
                                                      np.int64(i32_res_28207),
                                                      np.int64(x_28208),
                                                      np.int64(j_m_i_28211),
                                                      np.int64(gauss_jordan_res_r_ixfn_42795),
                                                      np.int64(gauss_jordan_res_r_ixfn_42796),
                                                      np.int64(gauss_jordan_res_r_ixfn_42798),
                                                      gauss_jordan_res_r_mem_42800,
                                                      mem_42805)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_34246_var,
                                   ((np.long(segmap_usable_groups_34798) * np.long(segmap_group_sizze_34797)),),
                                   (np.long(segmap_group_sizze_34797),))
        if synchronous:
          sync(self)
      gauss_jordan_res_r_mem_42800 = None
      defunc_3_map_res_mem_42807 = mem_42805
    defunc_3_map_res_mem_42727 = None
    suff_outer_par_34806 = (self.sizes["mainMagnitude.suff_outer_par_16"] <= m_28044)
    segmap_group_sizze_34828 = self.sizes["mainMagnitude.segmap_group_size_34810"]
    max_num_groups_44062 = self.sizes["mainMagnitude.segmap_num_groups_34812"]
    num_groups_34829 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28044,
                                                            segmap_group_sizze_34828),
                                                  sext_i32_i64(max_num_groups_44062))))
    suff_outer_par_34913 = (self.sizes["mainMagnitude.suff_outer_par_17"] <= nest_sizze_33916)
    nest_sizze_34929 = (i32_res_28053 * nest_sizze_33916)
    segred_group_sizze_34930 = self.sizes["mainMagnitude.segred_group_size_34872"]
    max_num_groups_44063 = self.sizes["mainMagnitude.segred_num_groups_34874"]
    num_groups_34931 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_34929,
                                                            segred_group_sizze_34930),
                                                  sext_i32_i64(max_num_groups_44063))))
    Ty_40885 = self.sizes["mainMagnitude.Ty_40882"]
    Ry_40886 = self.sizes["mainMagnitude.Ry_40884"]
    Tx_40887 = self.sizes["mainMagnitude.Tx_40881"]
    Rx_40888 = self.sizes["mainMagnitude.Rx_40883"]
    Tk_40889 = self.sizes["mainMagnitude.Tk_40880"]
    TxRx_40892 = (Tx_40887 * Rx_40888)
    TyRy_40893 = (Ty_40885 * Ry_40886)
    a_loc_szz_40895 = (Tk_40889 * TyRy_40893)
    binop_x_40896 = (Tx_40887 * Tk_40889)
    b_loc_szz_40897 = (Rx_40888 * binop_x_40896)
    group_sizze_40901 = (Ty_40885 * Tx_40887)
    bytes_42826 = (np.int64(4) * nest_sizze_33916)
    binop_x_42840 = (Ry_40886 * group_sizze_40901)
    binop_x_42841 = (Rx_40888 * binop_x_42840)
    bytes_42838 = (np.int64(4) * binop_x_42841)
    binop_x_42832 = (Ry_40886 * Rx_40888)
    bytes_42831 = (np.int64(4) * binop_x_42832)
    bytes_42843 = (np.int64(4) * a_loc_szz_40895)
    bytes_42845 = (np.int64(4) * b_loc_szz_40897)
    bytes_42914 = (np.int64(4) * binop_x_42840)
    binop_x_42920 = (Rx_40888 * group_sizze_40901)
    bytes_42918 = (np.int64(4) * binop_x_42920)
    bytes_42906 = (np.int64(4) * Ry_40886)
    bytes_42908 = (np.int64(4) * Rx_40888)
    binop_x_43642 = (np.int64(4) * Ty_40885)
    binop_x_43643 = (Tx_40887 * binop_x_43642)
    binop_x_43644 = (Ry_40886 * binop_x_43643)
    sizze_43645 = (Rx_40888 * binop_x_43644)
    num_threads_43774 = (segmap_group_sizze_34828 * num_groups_34829)
    total_sizze_43775 = (bytes_42626 * num_threads_43774)
    local_memory_capacity_44193 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44193)) and suff_outer_par_34806):
      mem_42810 = opencl_alloc(self, bytes_42576, "mem_42810")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_42810, np.int64(0),
                                                  images_mem_42559, np.int64(0),
                                                  np.int64(1), N_28043, m_28044)
      mem_42828 = opencl_alloc(self, bytes_42826, "mem_42828")
      mem_42813 = opencl_alloc(self, total_sizze_43775, "mem_42813")
      if ((1 * (np.long(num_groups_34829) * np.long(segmap_group_sizze_34828))) != 0):
        self.mainMagnitudezisegmap_34808_var.set_args(self.global_failure,
                                                      np.int64(N_28043),
                                                      np.int64(m_28044),
                                                      np.int32(n_28047),
                                                      np.int32(k2p2zq_28057),
                                                      np.int64(i32_res_28059),
                                                      np.int64(num_groups_34829),
                                                      binop_p_mem_42568,
                                                      mem_42810, mem_42813,
                                                      mem_42828)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_34808_var,
                                   ((np.long(num_groups_34829) * np.long(segmap_group_sizze_34828)),),
                                   (np.long(segmap_group_sizze_34828),))
        if synchronous:
          sync(self)
      mem_42810 = None
      mem_42813 = None
      mem_43026 = opencl_alloc(self, bytes_42826, "mem_43026")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43026, np.int64(0),
                                                  mem_42828, np.int64(0),
                                                  np.int64(1), m_28044,
                                                  i32_res_28059)
      mem_42828 = None
      defunc_3_map_res_mem_43028 = mem_43026
    else:
      local_memory_capacity_44192 = self.max_local_memory
      if (sle64(((bytes_42843 + srem64((np.int64(8) - srem64(bytes_42843,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_42845 + srem64((np.int64(8) - srem64(bytes_42845,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44192)) and suff_outer_par_34913):
        tk_div_tx_40890 = sdiv_up64(Tk_40889, Tx_40887)
        tk_div_ty_40891 = sdiv_up64(Tk_40889, Ty_40885)
        gridDim_x_40898 = sdiv_up64(i32_res_28059, TxRx_40892)
        gridDim_y_40899 = sdiv_up64(m_28044, TyRy_40893)
        grid_sizze_40900 = (gridDim_x_40898 * gridDim_y_40899)
        full_tiles_40929 = squot64(i32_res_28053, Tk_40889)
        kk_41136 = (Tk_40889 * full_tiles_40929)
        mem_43018 = opencl_alloc(self, bytes_42826, "mem_43018")
        if ((1 * (np.long(grid_sizze_40900) * np.long(group_sizze_40901))) != 0):
          self.mainMagnitudezisegmap_intragroup_40904_var.set_args(self.global_failure,
                                                                   cl.LocalMemory(np.long(bytes_42845)),
                                                                   cl.LocalMemory(np.long(bytes_42843)),
                                                                   np.int64(N_28043),
                                                                   np.int64(m_28044),
                                                                   np.int64(i32_res_28053),
                                                                   np.int64(i32_res_28059),
                                                                   np.int64(gridDim_x_40898),
                                                                   np.int64(full_tiles_40929),
                                                                   np.int64(kk_41136),
                                                                   images_mem_42559,
                                                                   mem_42571,
                                                                   mem_43018)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_intragroup_40904_var,
                                     ((np.long(grid_sizze_40900) * np.long(group_sizze_40901)),),
                                     (np.long(group_sizze_40901),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43023 = mem_43018
      else:
        mem_43022 = opencl_alloc(self, bytes_42826, "mem_43022")
        if slt64((i32_res_28053 * np.int64(2)), segred_group_sizze_34930):
          segment_sizze_nonzzero_44132 = smax64(np.int64(1), i32_res_28053)
          num_threads_44133 = (num_groups_34931 * segred_group_sizze_34930)
          if ((1 * (np.long(num_groups_34931) * np.long(segred_group_sizze_34930))) != 0):
            self.mainMagnitudezisegred_small_34878_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34930))),
                                                                np.int64(N_28043),
                                                                np.int64(m_28044),
                                                                np.int64(i32_res_28053),
                                                                np.int64(i32_res_28059),
                                                                np.int64(num_groups_34931),
                                                                np.int64(segment_sizze_nonzzero_44132),
                                                                images_mem_42559,
                                                                binop_p_mem_42568,
                                                                mem_43022)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_34878_var,
                                       ((np.long(num_groups_34931) * np.long(segred_group_sizze_34930)),),
                                       (np.long(segred_group_sizze_34930),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44153 = sdiv_up64(num_groups_34931,
                                               smax64(np.int64(1),
                                                      (m_28044 * i32_res_28059)))
          elements_per_thread_44154 = sdiv_up64(i32_res_28053,
                                                (segred_group_sizze_34930 * groups_per_segment_44153))
          virt_num_groups_44155 = (groups_per_segment_44153 * (m_28044 * i32_res_28059))
          num_threads_44156 = (num_groups_34931 * segred_group_sizze_34930)
          threads_per_segment_44157 = (groups_per_segment_44153 * segred_group_sizze_34930)
          group_res_arr_mem_44158 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_34930 * virt_num_groups_44155)),
                                                 "group_res_arr_mem_44158")
          mainMagnitudezicounter_mem_44160 = self.mainMagnitudezicounter_mem_44160
          if ((1 * (np.long(num_groups_34931) * np.long(segred_group_sizze_34930))) != 0):
            self.mainMagnitudezisegred_large_34878_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34930))),
                                                                np.int64(N_28043),
                                                                np.int64(i32_res_28053),
                                                                np.int64(i32_res_28059),
                                                                np.int64(num_groups_34931),
                                                                np.int64(groups_per_segment_44153),
                                                                np.int64(elements_per_thread_44154),
                                                                np.int64(virt_num_groups_44155),
                                                                np.int64(threads_per_segment_44157),
                                                                images_mem_42559,
                                                                binop_p_mem_42568,
                                                                mem_43022,
                                                                group_res_arr_mem_44158,
                                                                mainMagnitudezicounter_mem_44160)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_34878_var,
                                       ((np.long(num_groups_34931) * np.long(segred_group_sizze_34930)),),
                                       (np.long(segred_group_sizze_34930),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43023 = mem_43022
      defunc_3_map_res_mem_43028 = defunc_3_map_res_mem_43023
    binop_p_mem_42568 = None
    mem_42571 = None
    suff_outer_par_34947 = (self.sizes["mainMagnitude.suff_outer_par_18"] <= m_28044)
    segmap_group_sizze_34968 = self.sizes["mainMagnitude.segmap_group_size_34951"]
    max_num_groups_44194 = self.sizes["mainMagnitude.segmap_num_groups_34953"]
    num_groups_34969 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28044,
                                                            segmap_group_sizze_34968),
                                                  sext_i32_i64(max_num_groups_44194))))
    suff_outer_par_35048 = (self.sizes["mainMagnitude.suff_outer_par_19"] <= nest_sizze_33916)
    segred_group_sizze_35063 = self.sizes["mainMagnitude.segred_group_size_35009"]
    max_num_groups_44195 = self.sizes["mainMagnitude.segred_num_groups_35011"]
    num_groups_35064 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_42724,
                                                            segred_group_sizze_35063),
                                                  sext_i32_i64(max_num_groups_44195))))
    tile_sizze_41348 = self.sizes["mainMagnitude.tile_size_41347"]
    group_sizze_41349 = (tile_sizze_41348 * tile_sizze_41348)
    bytes_43060 = (np.int64(4) * group_sizze_41349)
    binop_x_43658 = (np.int64(4) * tile_sizze_41348)
    sizze_43659 = (tile_sizze_41348 * binop_x_43658)
    num_threads_43778 = (segmap_group_sizze_34968 * num_groups_34969)
    total_sizze_43779 = (bytes_42626 * num_threads_43778)
    local_memory_capacity_44281 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44281)) and suff_outer_par_34947):
      mem_43032 = opencl_alloc(self, bytes_42621, "mem_43032")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43032, np.int64(0),
                                                  defunc_3_map_res_mem_42807,
                                                  np.int64(0), np.int64(1),
                                                  (i32_res_28059 * i32_res_28059),
                                                  m_28044)
      mem_43035 = opencl_alloc(self, bytes_42826, "mem_43035")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43035, np.int64(0),
                                                  defunc_3_map_res_mem_43028,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_28059, m_28044)
      mem_43053 = opencl_alloc(self, bytes_42826, "mem_43053")
      mem_43038 = opencl_alloc(self, total_sizze_43779, "mem_43038")
      if ((1 * (np.long(num_groups_34969) * np.long(segmap_group_sizze_34968))) != 0):
        self.mainMagnitudezisegmap_34949_var.set_args(self.global_failure,
                                                      np.int64(m_28044),
                                                      np.int32(k2p2zq_28057),
                                                      np.int64(i32_res_28059),
                                                      np.int64(num_groups_34969),
                                                      mem_43032, mem_43035,
                                                      mem_43038, mem_43053)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_34949_var,
                                   ((np.long(num_groups_34969) * np.long(segmap_group_sizze_34968)),),
                                   (np.long(segmap_group_sizze_34968),))
        if synchronous:
          sync(self)
      mem_43032 = None
      mem_43035 = None
      mem_43038 = None
      mem_43092 = opencl_alloc(self, bytes_42826, "mem_43092")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43092, np.int64(0),
                                                  mem_43053, np.int64(0),
                                                  np.int64(1), m_28044,
                                                  i32_res_28059)
      mem_43053 = None
      defunc_4_map_res_mem_43094 = mem_43092
    else:
      local_memory_capacity_44280 = self.max_local_memory
      if (sle64(((bytes_43060 + srem64((np.int64(8) - srem64(bytes_43060,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43060 + srem64((np.int64(8) - srem64(bytes_43060,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44280)) and suff_outer_par_35048):
        mem_43057 = opencl_alloc(self, bytes_42722, "mem_43057")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43057, np.int64(0),
                                                    defunc_3_map_res_mem_42807,
                                                    np.int64(0), np.int64(1),
                                                    i32_res_28059,
                                                    (m_28044 * i32_res_28059))
        num_groups_x_41350 = sdiv_up64(m_28044, tile_sizze_41348)
        num_groups_y_41351 = sdiv_up64(i32_res_28059, tile_sizze_41348)
        num_groups_top_41352 = (num_groups_x_41350 * num_groups_y_41351)
        num_whole_tiles_41369 = squot64(i32_res_28059, tile_sizze_41348)
        residual_input_41496 = srem64(i32_res_28059, tile_sizze_41348)
        cond_41497 = (residual_input_41496 == np.int64(0))
        mem_43084 = opencl_alloc(self, bytes_42826, "mem_43084")
        if ((1 * (np.long(num_groups_top_41352) * np.long(group_sizze_41349))) != 0):
          self.mainMagnitudezisegmap_intragroup_41353_var.set_args(self.global_failure,
                                                                   cl.LocalMemory(np.long(bytes_43060)),
                                                                   cl.LocalMemory(np.long(bytes_43060)),
                                                                   np.int64(m_28044),
                                                                   np.int64(i32_res_28059),
                                                                   np.int64(num_groups_y_41351),
                                                                   np.int64(num_whole_tiles_41369),
                                                                   np.int64(residual_input_41496),
                                                                   np.byte(cond_41497),
                                                                   defunc_3_map_res_mem_43028,
                                                                   mem_43057,
                                                                   mem_43084)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_intragroup_41353_var,
                                     ((np.long(num_groups_top_41352) * np.long(group_sizze_41349)),),
                                     (np.long(group_sizze_41349),))
          if synchronous:
            sync(self)
        mem_43057 = None
        defunc_4_map_res_mem_43089 = mem_43084
      else:
        mem_43088 = opencl_alloc(self, bytes_42826, "mem_43088")
        if slt64((i32_res_28059 * np.int64(2)), segred_group_sizze_35063):
          segment_sizze_nonzzero_44220 = smax64(np.int64(1), i32_res_28059)
          num_threads_44221 = (num_groups_35064 * segred_group_sizze_35063)
          if ((1 * (np.long(num_groups_35064) * np.long(segred_group_sizze_35063))) != 0):
            self.mainMagnitudezisegred_small_35015_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35063))),
                                                                np.int64(m_28044),
                                                                np.int64(i32_res_28059),
                                                                np.int64(num_groups_35064),
                                                                np.int64(segment_sizze_nonzzero_44220),
                                                                defunc_3_map_res_mem_42807,
                                                                defunc_3_map_res_mem_43028,
                                                                mem_43088)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_35015_var,
                                       ((np.long(num_groups_35064) * np.long(segred_group_sizze_35063)),),
                                       (np.long(segred_group_sizze_35063),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44241 = sdiv_up64(num_groups_35064,
                                               smax64(np.int64(1),
                                                      (m_28044 * i32_res_28059)))
          elements_per_thread_44242 = sdiv_up64(i32_res_28059,
                                                (segred_group_sizze_35063 * groups_per_segment_44241))
          virt_num_groups_44243 = (groups_per_segment_44241 * (m_28044 * i32_res_28059))
          num_threads_44244 = (num_groups_35064 * segred_group_sizze_35063)
          threads_per_segment_44245 = (groups_per_segment_44241 * segred_group_sizze_35063)
          group_res_arr_mem_44246 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_35063 * virt_num_groups_44243)),
                                                 "group_res_arr_mem_44246")
          mainMagnitudezicounter_mem_44248 = self.mainMagnitudezicounter_mem_44248
          if ((1 * (np.long(num_groups_35064) * np.long(segred_group_sizze_35063))) != 0):
            self.mainMagnitudezisegred_large_35015_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35063))),
                                                                np.int64(i32_res_28059),
                                                                np.int64(num_groups_35064),
                                                                np.int64(groups_per_segment_44241),
                                                                np.int64(elements_per_thread_44242),
                                                                np.int64(virt_num_groups_44243),
                                                                np.int64(threads_per_segment_44245),
                                                                defunc_3_map_res_mem_42807,
                                                                defunc_3_map_res_mem_43028,
                                                                mem_43088,
                                                                group_res_arr_mem_44246,
                                                                mainMagnitudezicounter_mem_44248)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_35015_var,
                                       ((np.long(num_groups_35064) * np.long(segred_group_sizze_35063)),),
                                       (np.long(segred_group_sizze_35063),))
            if synchronous:
              sync(self)
        defunc_4_map_res_mem_43089 = mem_43088
      defunc_4_map_res_mem_43094 = defunc_4_map_res_mem_43089
    defunc_3_map_res_mem_42807 = None
    defunc_3_map_res_mem_43028 = None
    suff_outer_par_35079 = (self.sizes["mainMagnitude.suff_outer_par_20"] <= m_28044)
    segmap_group_sizze_35099 = self.sizes["mainMagnitude.segmap_group_size_35083"]
    max_num_groups_44282 = self.sizes["mainMagnitude.segmap_num_groups_35085"]
    num_groups_35100 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28044,
                                                            segmap_group_sizze_35099),
                                                  sext_i32_i64(max_num_groups_44282))))
    suff_outer_par_35176 = (self.sizes["mainMagnitude.suff_outer_par_21"] <= binop_x_42577)
    nest_sizze_35190 = (i32_res_28059 * binop_x_42577)
    segred_group_sizze_35191 = self.sizes["mainMagnitude.segred_group_size_35139"]
    max_num_groups_44283 = self.sizes["mainMagnitude.segred_num_groups_35141"]
    num_groups_35192 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_35190,
                                                            segred_group_sizze_35191),
                                                  sext_i32_i64(max_num_groups_44283))))
    Ty_41626 = self.sizes["mainMagnitude.Ty_41623"]
    Ry_41627 = self.sizes["mainMagnitude.Ry_41625"]
    Tx_41628 = self.sizes["mainMagnitude.Tx_41622"]
    Rx_41629 = self.sizes["mainMagnitude.Rx_41624"]
    Tk_41630 = self.sizes["mainMagnitude.Tk_41621"]
    TxRx_41633 = (Tx_41628 * Rx_41629)
    TyRy_41634 = (Ty_41626 * Ry_41627)
    a_loc_szz_41636 = (Tk_41630 * TyRy_41634)
    binop_x_41637 = (Tx_41628 * Tk_41630)
    b_loc_szz_41638 = (Rx_41629 * binop_x_41637)
    group_sizze_41642 = (Ty_41626 * Tx_41628)
    bytes_43099 = (np.int64(4) * N_28043)
    binop_x_43130 = (Ry_41627 * group_sizze_41642)
    binop_x_43131 = (Rx_41629 * binop_x_43130)
    bytes_43128 = (np.int64(4) * binop_x_43131)
    binop_x_43122 = (Ry_41627 * Rx_41629)
    bytes_43121 = (np.int64(4) * binop_x_43122)
    bytes_43133 = (np.int64(4) * a_loc_szz_41636)
    bytes_43135 = (np.int64(4) * b_loc_szz_41638)
    bytes_43204 = (np.int64(4) * binop_x_43130)
    binop_x_43210 = (Rx_41629 * group_sizze_41642)
    bytes_43208 = (np.int64(4) * binop_x_43210)
    bytes_43196 = (np.int64(4) * Ry_41627)
    bytes_43198 = (np.int64(4) * Rx_41629)
    binop_x_43672 = (np.int64(4) * Ty_41626)
    binop_x_43673 = (Tx_41628 * binop_x_43672)
    binop_x_43674 = (Ry_41627 * binop_x_43673)
    sizze_43675 = (Rx_41629 * binop_x_43674)
    num_threads_43782 = (segmap_group_sizze_35099 * num_groups_35100)
    total_sizze_43783 = (bytes_43099 * num_threads_43782)
    local_memory_capacity_44413 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44413)) and suff_outer_par_35079):
      mem_43097 = opencl_alloc(self, bytes_42826, "mem_43097")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43097, np.int64(0),
                                                  defunc_4_map_res_mem_43094,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_28059, m_28044)
      mem_43115 = opencl_alloc(self, bytes_42576, "mem_43115")
      mem_43100 = opencl_alloc(self, total_sizze_43783, "mem_43100")
      if ((1 * (np.long(num_groups_35100) * np.long(segmap_group_sizze_35099))) != 0):
        self.mainMagnitudezisegmap_35081_var.set_args(self.global_failure,
                                                      np.int64(N_28043),
                                                      np.int64(m_28044),
                                                      np.int32(k2p2zq_28057),
                                                      np.int64(i32_res_28059),
                                                      np.int64(num_groups_35100),
                                                      mem_42575, mem_43097,
                                                      mem_43100, mem_43115)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_35081_var,
                                   ((np.long(num_groups_35100) * np.long(segmap_group_sizze_35099)),),
                                   (np.long(segmap_group_sizze_35099),))
        if synchronous:
          sync(self)
      mem_43097 = None
      mem_43100 = None
      mem_43316 = opencl_alloc(self, bytes_42576, "mem_43316")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43316, np.int64(0),
                                                  mem_43115, np.int64(0),
                                                  np.int64(1), m_28044, N_28043)
      mem_43115 = None
      defunc_3_map_res_mem_43318 = mem_43316
    else:
      local_memory_capacity_44412 = self.max_local_memory
      if (sle64(((bytes_43133 + srem64((np.int64(8) - srem64(bytes_43133,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43135 + srem64((np.int64(8) - srem64(bytes_43135,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44412)) and suff_outer_par_35176):
        mem_43118 = opencl_alloc(self, bytes_42561, "mem_43118")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43118, np.int64(0),
                                                    mem_42575, np.int64(0),
                                                    np.int64(1), i32_res_28059,
                                                    N_28043)
        tk_div_tx_41631 = sdiv_up64(Tk_41630, Tx_41628)
        tk_div_ty_41632 = sdiv_up64(Tk_41630, Ty_41626)
        gridDim_x_41639 = sdiv_up64(N_28043, TxRx_41633)
        gridDim_y_41640 = sdiv_up64(m_28044, TyRy_41634)
        grid_sizze_41641 = (gridDim_x_41639 * gridDim_y_41640)
        full_tiles_41670 = squot64(i32_res_28059, Tk_41630)
        kk_41873 = (Tk_41630 * full_tiles_41670)
        mem_43308 = opencl_alloc(self, bytes_42576, "mem_43308")
        if ((1 * (np.long(grid_sizze_41641) * np.long(group_sizze_41642))) != 0):
          self.mainMagnitudezisegmap_intragroup_41645_var.set_args(self.global_failure,
                                                                   cl.LocalMemory(np.long(bytes_43135)),
                                                                   cl.LocalMemory(np.long(bytes_43133)),
                                                                   np.int64(N_28043),
                                                                   np.int64(m_28044),
                                                                   np.int64(i32_res_28059),
                                                                   np.int64(gridDim_x_41639),
                                                                   np.int64(full_tiles_41670),
                                                                   np.int64(kk_41873),
                                                                   defunc_4_map_res_mem_43094,
                                                                   mem_43118,
                                                                   mem_43308)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_intragroup_41645_var,
                                     ((np.long(grid_sizze_41641) * np.long(group_sizze_41642)),),
                                     (np.long(group_sizze_41642),))
          if synchronous:
            sync(self)
        mem_43118 = None
        defunc_3_map_res_mem_43313 = mem_43308
      else:
        mem_43312 = opencl_alloc(self, bytes_42576, "mem_43312")
        if slt64((i32_res_28059 * np.int64(2)), segred_group_sizze_35191):
          segment_sizze_nonzzero_44352 = smax64(np.int64(1), i32_res_28059)
          num_threads_44353 = (num_groups_35192 * segred_group_sizze_35191)
          if ((1 * (np.long(num_groups_35192) * np.long(segred_group_sizze_35191))) != 0):
            self.mainMagnitudezisegred_small_35145_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35191))),
                                                                np.int64(N_28043),
                                                                np.int64(m_28044),
                                                                np.int64(i32_res_28059),
                                                                np.int64(num_groups_35192),
                                                                np.int64(segment_sizze_nonzzero_44352),
                                                                mem_42575,
                                                                defunc_4_map_res_mem_43094,
                                                                mem_43312)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_35145_var,
                                       ((np.long(num_groups_35192) * np.long(segred_group_sizze_35191)),),
                                       (np.long(segred_group_sizze_35191),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44373 = sdiv_up64(num_groups_35192,
                                               smax64(np.int64(1),
                                                      (m_28044 * N_28043)))
          elements_per_thread_44374 = sdiv_up64(i32_res_28059,
                                                (segred_group_sizze_35191 * groups_per_segment_44373))
          virt_num_groups_44375 = (groups_per_segment_44373 * (m_28044 * N_28043))
          num_threads_44376 = (num_groups_35192 * segred_group_sizze_35191)
          threads_per_segment_44377 = (groups_per_segment_44373 * segred_group_sizze_35191)
          group_res_arr_mem_44378 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_35191 * virt_num_groups_44375)),
                                                 "group_res_arr_mem_44378")
          mainMagnitudezicounter_mem_44380 = self.mainMagnitudezicounter_mem_44380
          if ((1 * (np.long(num_groups_35192) * np.long(segred_group_sizze_35191))) != 0):
            self.mainMagnitudezisegred_large_35145_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35191))),
                                                                np.int64(N_28043),
                                                                np.int64(i32_res_28059),
                                                                np.int64(num_groups_35192),
                                                                np.int64(groups_per_segment_44373),
                                                                np.int64(elements_per_thread_44374),
                                                                np.int64(virt_num_groups_44375),
                                                                np.int64(threads_per_segment_44377),
                                                                mem_42575,
                                                                defunc_4_map_res_mem_43094,
                                                                mem_43312,
                                                                group_res_arr_mem_44378,
                                                                mainMagnitudezicounter_mem_44380)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_35145_var,
                                       ((np.long(num_groups_35192) * np.long(segred_group_sizze_35191)),),
                                       (np.long(segred_group_sizze_35191),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43313 = mem_43312
      defunc_3_map_res_mem_43318 = defunc_3_map_res_mem_43313
    mem_42575 = None
    defunc_4_map_res_mem_43094 = None
    i_28319 = (N_28043 - np.int64(1))
    x_28320 = sle64(np.int64(0), i_28319)
    y_28321 = slt64(i_28319, N_28043)
    bounds_check_28322 = (x_28320 and y_28321)
    index_certs_28323 = True
    assert bounds_check_28322, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:26:29-34\n   #1  helpers.fut:20:13-20\n   #2  bfastfinal.fut:77:30-91\n   #3  /prelude/soacs.fut:67:19-23\n   #4  /prelude/soacs.fut:67:3-37\n   #5  bfastfinal.fut:71:5-80:25\n   #6  bfastfinal.fut:184:5-58\n   #7  bfastfinal.fut:179:1-185:37\n" % ("Index [",
                                                                                                                                                                                                                                                                                                                                                     i_28319,
                                                                                                                                                                                                                                                                                                                                                     "] out of bounds for array of shape [",
                                                                                                                                                                                                                                                                                                                                                     N_28043,
                                                                                                                                                                                                                                                                                                                                                     "]."))
    fits_35321 = sle64(N_28043, max_group_sizze_34184)
    suff_intra_par_35319 = (self.sizes["mainMagnitude.suff_intra_par_24"] <= N_28043)
    intra_suff_and_fits_35322 = (suff_intra_par_35319 and fits_35321)
    segscan_group_sizze_35471 = self.sizes["mainMagnitude.segscan_group_size_35448"]
    max_num_groups_44414 = self.sizes["mainMagnitude.segscan_num_groups_35450"]
    num_groups_35472 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_42577,
                                                            segscan_group_sizze_35471),
                                                  sext_i32_i64(max_num_groups_44414))))
    segmap_group_sizze_35491 = self.sizes["mainMagnitude.segmap_group_size_35439"]
    segmap_group_sizze_35527 = self.sizes["mainMagnitude.segmap_group_size_35364"]
    bytes_43330 = (np.int64(4) * m_28044)
    bytes_43321 = (np.int64(8) * N_28043)
    bytes_43339 = (np.int64(8) * binop_x_42577)
    local_memory_capacity_44516 = self.max_local_memory
    if (sle64(((((bytes_43321 + srem64((np.int64(8) - srem64(bytes_43321,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43099 + srem64((np.int64(8) - srem64(bytes_43099,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))) + (bytes_43099 + srem64((np.int64(8) - srem64(bytes_43099,
                                                                                                                                          np.int64(8))),
                                                                                                                    np.int64(8)))) + (bytes_43099 + srem64((np.int64(8) - srem64(bytes_43099,
                                                                                                                                                                                 np.int64(8))),
                                                                                                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44516)) and intra_suff_and_fits_35322):
      mem_43331 = opencl_alloc(self, bytes_43330, "mem_43331")
      mem_43334 = opencl_alloc(self, bytes_42576, "mem_43334")
      mem_43337 = opencl_alloc(self, bytes_42576, "mem_43337")
      if ((1 * (np.long(m_28044) * np.long(N_28043))) != 0):
        self.mainMagnitudezisegmap_intragroup_35244_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(bytes_43099)),
                                                                 cl.LocalMemory(np.long(bytes_43099)),
                                                                 cl.LocalMemory(np.long(bytes_43099)),
                                                                 cl.LocalMemory(np.long(bytes_43321)),
                                                                 np.int64(N_28043),
                                                                 np.int64(i_28319),
                                                                 images_mem_42559,
                                                                 defunc_3_map_res_mem_43318,
                                                                 mem_43331,
                                                                 mem_43334,
                                                                 mem_43337)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_35244_var,
                                   ((np.long(m_28044) * np.long(N_28043)),),
                                   (np.long(N_28043),))
        if synchronous:
          sync(self)
      defunc_4_map_res_mem_43355 = mem_43331
      defunc_4_map_res_mem_43356 = mem_43334
      defunc_4_map_res_mem_43357 = mem_43337
    else:
      mem_43341 = opencl_alloc(self, bytes_43339, "mem_43341")
      mem_43344 = opencl_alloc(self, bytes_42576, "mem_43344")
      if slt64(np.int64(0), (m_28044 * N_28043)):
        stage1_max_num_groups_44432 = self.max_group_size
        stage1_num_groups_44433 = smin64(stage1_max_num_groups_44432,
                                         num_groups_35472)
        num_threads_44434 = sext_i64_i32((stage1_num_groups_44433 * segscan_group_sizze_35471))
        if ((1 * (np.long(stage1_num_groups_44433) * np.long(segscan_group_sizze_35471))) != 0):
          self.mainMagnitudeziscan_stage1_35454_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                           (np.int32(8) * segscan_group_sizze_35471)))),
                                                             np.int64(N_28043),
                                                             np.int64(m_28044),
                                                             np.int32(num_threads_44434),
                                                             images_mem_42559,
                                                             defunc_3_map_res_mem_43318,
                                                             mem_43341,
                                                             mem_43344)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage1_35454_var,
                                     ((np.long(stage1_num_groups_44433) * np.long(segscan_group_sizze_35471)),),
                                     (np.long(segscan_group_sizze_35471),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_44433))) != 0):
          self.mainMagnitudeziscan_stage2_35454_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                           (np.int32(8) * stage1_num_groups_44433)))),
                                                             np.int64(N_28043),
                                                             np.int64(m_28044),
                                                             np.int64(stage1_num_groups_44433),
                                                             np.int32(num_threads_44434),
                                                             mem_43341)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage2_35454_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_44433)),),
                                     (np.long(stage1_num_groups_44433),))
          if synchronous:
            sync(self)
        required_groups_44476 = sext_i64_i32(sdiv_up64((m_28044 * N_28043),
                                                       segscan_group_sizze_35471))
        if ((1 * (np.long(num_groups_35472) * np.long(segscan_group_sizze_35471))) != 0):
          self.mainMagnitudeziscan_stage3_35454_var.set_args(self.global_failure,
                                                             np.int64(N_28043),
                                                             np.int64(m_28044),
                                                             np.int64(num_groups_35472),
                                                             np.int32(num_threads_44434),
                                                             np.int32(required_groups_44476),
                                                             mem_43341)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage3_35454_var,
                                     ((np.long(num_groups_35472) * np.long(segscan_group_sizze_35471)),),
                                     (np.long(segscan_group_sizze_35471),))
          if synchronous:
            sync(self)
      segmap_usable_groups_35492 = sdiv_up64(m_28044, segmap_group_sizze_35491)
      mem_43347 = opencl_alloc(self, bytes_43330, "mem_43347")
      if ((1 * (np.long(segmap_usable_groups_35492) * np.long(segmap_group_sizze_35491))) != 0):
        self.mainMagnitudezisegmap_35437_var.set_args(self.global_failure,
                                                      np.int64(N_28043),
                                                      np.int64(m_28044),
                                                      np.int64(i_28319),
                                                      mem_43341, mem_43347)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_35437_var,
                                   ((np.long(segmap_usable_groups_35492) * np.long(segmap_group_sizze_35491)),),
                                   (np.long(segmap_group_sizze_35491),))
        if synchronous:
          sync(self)
      mem_43350 = opencl_alloc(self, bytes_42576, "mem_43350")
      self.futhark_builtinzhreplicate_f32(mem_43350, (m_28044 * N_28043),
                                          np.nan)
      mem_43353 = opencl_alloc(self, bytes_42576, "mem_43353")
      self.futhark_builtinzhreplicate_i32(mem_43353, (m_28044 * N_28043),
                                          np.int32(0))
      segmap_usable_groups_35528 = sdiv_up64(binop_x_42577,
                                             segmap_group_sizze_35527)
      if ((1 * (np.long(segmap_usable_groups_35528) * np.long(segmap_group_sizze_35527))) != 0):
        self.mainMagnitudezisegmap_35361_var.set_args(self.global_failure,
                                                      np.int64(N_28043),
                                                      np.int64(m_28044),
                                                      mem_43341, mem_43344,
                                                      mem_43350, mem_43353)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_35361_var,
                                   ((np.long(segmap_usable_groups_35528) * np.long(segmap_group_sizze_35527)),),
                                   (np.long(segmap_group_sizze_35527),))
        if synchronous:
          sync(self)
      mem_43341 = None
      mem_43344 = None
      defunc_4_map_res_mem_43355 = mem_43347
      defunc_4_map_res_mem_43356 = mem_43350
      defunc_4_map_res_mem_43357 = mem_43353
    defunc_3_map_res_mem_43318 = None
    suff_outer_par_35576 = (self.sizes["mainMagnitude.suff_outer_par_28"] <= m_28044)
    fits_35654 = sle64(i32_res_28053, max_group_sizze_34184)
    suff_intra_par_35652 = (self.sizes["mainMagnitude.suff_intra_par_29"] <= i32_res_28053)
    intra_suff_and_fits_35655 = (suff_intra_par_35652 and fits_35654)
    segmap_group_sizze_35619 = self.sizes["mainMagnitude.segmap_group_size_35588"]
    nest_sizze_35742 = (m_28044 * i32_res_28053)
    segred_group_sizze_35743 = self.sizes["mainMagnitude.segred_group_size_35726"]
    max_num_groups_44517 = self.sizes["mainMagnitude.segred_num_groups_35728"]
    num_groups_35744 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_35742,
                                                            segred_group_sizze_35743),
                                                  sext_i32_i64(max_num_groups_44517))))
    segred_group_sizze_35757 = self.sizes["mainMagnitude.segred_group_size_35705"]
    max_num_groups_44518 = self.sizes["mainMagnitude.segred_num_groups_35707"]
    num_groups_35758 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_35742,
                                                            segred_group_sizze_35757),
                                                  sext_i32_i64(max_num_groups_44518))))
    segmap_group_sizze_35773 = self.sizes["mainMagnitude.segmap_group_size_35690"]
    bytes_43366 = (np.int64(4) * segmap_group_sizze_35619)
    local_memory_capacity_44670 = self.max_local_memory
    if (sle64(((bytes_43366 + srem64((np.int64(8) - srem64(bytes_43366,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_43366 + srem64((np.int64(8) - srem64(bytes_43366,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44670)) and suff_outer_par_35576):
      segmap_usable_groups_35620 = sdiv_up64(m_28044, segmap_group_sizze_35619)
      mem_43360 = opencl_alloc(self, bytes_42576, "mem_43360")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43360, np.int64(0),
                                                  images_mem_42559, np.int64(0),
                                                  np.int64(1), N_28043, m_28044)
      mem_43363 = opencl_alloc(self, bytes_42576, "mem_43363")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43363, np.int64(0),
                                                  defunc_4_map_res_mem_43356,
                                                  np.int64(0), np.int64(1),
                                                  N_28043, m_28044)
      num_whole_tiles_42101 = squot64(i32_res_28053, segmap_group_sizze_35619)
      residual_input_42190 = srem64(i32_res_28053, segmap_group_sizze_35619)
      cond_42191 = (residual_input_42190 == np.int64(0))
      mem_43394 = opencl_alloc(self, bytes_43330, "mem_43394")
      mem_43396 = opencl_alloc(self, bytes_43330, "mem_43396")
      mem_43398 = opencl_alloc(self, bytes_43330, "mem_43398")
      if ((1 * (np.long(segmap_usable_groups_35620) * np.long(segmap_group_sizze_35619))) != 0):
        self.mainMagnitudezisegmap_intragroup_42079_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(bytes_43366)),
                                                                 cl.LocalMemory(np.long(bytes_43366)),
                                                                 np.int64(m_28044),
                                                                 np.int32(n_28047),
                                                                 np.float32(hfrac_28049),
                                                                 np.int64(i32_res_28053),
                                                                 np.int32(k2p2_28055),
                                                                 np.int64(num_whole_tiles_42101),
                                                                 np.int64(residual_input_42190),
                                                                 np.byte(cond_42191),
                                                                 mem_43360,
                                                                 mem_43363,
                                                                 mem_43394,
                                                                 mem_43396,
                                                                 mem_43398)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_42079_var,
                                   ((np.long(segmap_usable_groups_35620) * np.long(segmap_group_sizze_35619)),),
                                   (np.long(segmap_group_sizze_35619),))
        if synchronous:
          sync(self)
      mem_43360 = None
      mem_43363 = None
      defunc_3_map_res_mem_43422 = mem_43394
      defunc_3_map_res_mem_43423 = mem_43396
      defunc_3_map_res_mem_43424 = mem_43398
    else:
      local_memory_capacity_44669 = self.max_local_memory
      if (sle64((((np.int32(4) * i32_res_28053) + srem64((np.int64(8) - srem64((np.int32(4) * i32_res_28053),
                                                                               np.int64(8))),
                                                         np.int64(8))) + ((np.int32(4) * i32_res_28053) + srem64((np.int64(8) - srem64((np.int32(4) * i32_res_28053),
                                                                                                                                       np.int64(8))),
                                                                                                                 np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44669)) and intra_suff_and_fits_35655):
        mem_43403 = opencl_alloc(self, bytes_43330, "mem_43403")
        mem_43405 = opencl_alloc(self, bytes_43330, "mem_43405")
        mem_43407 = opencl_alloc(self, bytes_43330, "mem_43407")
        if ((1 * (np.long(m_28044) * np.long(i32_res_28053))) != 0):
          self.mainMagnitudezisegmap_intragroup_35584_var.set_args(self.global_failure,
                                                                   cl.LocalMemory(np.long((np.int32(4) * i32_res_28053))),
                                                                   cl.LocalMemory(np.long((np.int32(4) * i32_res_28053))),
                                                                   np.int64(N_28043),
                                                                   np.float32(hfrac_28049),
                                                                   np.int64(i32_res_28053),
                                                                   np.int32(k2p2_28055),
                                                                   images_mem_42559,
                                                                   defunc_4_map_res_mem_43356,
                                                                   mem_43403,
                                                                   mem_43405,
                                                                   mem_43407)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_intragroup_35584_var,
                                     ((np.long(m_28044) * np.long(i32_res_28053)),),
                                     (np.long(i32_res_28053),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43419 = mem_43403
        defunc_3_map_res_mem_43420 = mem_43405
        defunc_3_map_res_mem_43421 = mem_43407
      else:
        mem_43410 = opencl_alloc(self, bytes_43330, "mem_43410")
        if slt64((i32_res_28053 * np.int64(2)), segred_group_sizze_35743):
          segment_sizze_nonzzero_44544 = smax64(np.int64(1), i32_res_28053)
          num_threads_44545 = (num_groups_35744 * segred_group_sizze_35743)
          if ((1 * (np.long(num_groups_35744) * np.long(segred_group_sizze_35743))) != 0):
            self.mainMagnitudezisegred_small_35732_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35743))),
                                                                np.int64(N_28043),
                                                                np.int64(m_28044),
                                                                np.int64(i32_res_28053),
                                                                np.int64(num_groups_35744),
                                                                np.int64(segment_sizze_nonzzero_44544),
                                                                images_mem_42559,
                                                                mem_43410)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_35732_var,
                                       ((np.long(num_groups_35744) * np.long(segred_group_sizze_35743)),),
                                       (np.long(segred_group_sizze_35743),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44565 = sdiv_up64(num_groups_35744,
                                               smax64(np.int64(1), m_28044))
          elements_per_thread_44566 = sdiv_up64(i32_res_28053,
                                                (segred_group_sizze_35743 * groups_per_segment_44565))
          virt_num_groups_44567 = (groups_per_segment_44565 * m_28044)
          num_threads_44568 = (num_groups_35744 * segred_group_sizze_35743)
          threads_per_segment_44569 = (groups_per_segment_44565 * segred_group_sizze_35743)
          group_res_arr_mem_44570 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_35743 * virt_num_groups_44567)),
                                                 "group_res_arr_mem_44570")
          mainMagnitudezicounter_mem_44572 = self.mainMagnitudezicounter_mem_44572
          if ((1 * (np.long(num_groups_35744) * np.long(segred_group_sizze_35743))) != 0):
            self.mainMagnitudezisegred_large_35732_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35743))),
                                                                np.int64(N_28043),
                                                                np.int64(i32_res_28053),
                                                                np.int64(num_groups_35744),
                                                                np.int64(groups_per_segment_44565),
                                                                np.int64(elements_per_thread_44566),
                                                                np.int64(virt_num_groups_44567),
                                                                np.int64(threads_per_segment_44569),
                                                                images_mem_42559,
                                                                mem_43410,
                                                                group_res_arr_mem_44570,
                                                                mainMagnitudezicounter_mem_44572)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_35732_var,
                                       ((np.long(num_groups_35744) * np.long(segred_group_sizze_35743)),),
                                       (np.long(segred_group_sizze_35743),))
            if synchronous:
              sync(self)
        mem_43413 = opencl_alloc(self, bytes_43330, "mem_43413")
        if slt64((i32_res_28053 * np.int64(2)), segred_group_sizze_35757):
          segment_sizze_nonzzero_44604 = smax64(np.int64(1), i32_res_28053)
          num_threads_44605 = (num_groups_35758 * segred_group_sizze_35757)
          if ((1 * (np.long(num_groups_35758) * np.long(segred_group_sizze_35757))) != 0):
            self.mainMagnitudezisegred_small_35711_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35757))),
                                                                np.int64(N_28043),
                                                                np.int64(m_28044),
                                                                np.int64(i32_res_28053),
                                                                np.int64(num_groups_35758),
                                                                np.int64(segment_sizze_nonzzero_44604),
                                                                defunc_4_map_res_mem_43356,
                                                                mem_43410,
                                                                mem_43413)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_35711_var,
                                       ((np.long(num_groups_35758) * np.long(segred_group_sizze_35757)),),
                                       (np.long(segred_group_sizze_35757),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44625 = sdiv_up64(num_groups_35758,
                                               smax64(np.int64(1), m_28044))
          elements_per_thread_44626 = sdiv_up64(i32_res_28053,
                                                (segred_group_sizze_35757 * groups_per_segment_44625))
          virt_num_groups_44627 = (groups_per_segment_44625 * m_28044)
          num_threads_44628 = (num_groups_35758 * segred_group_sizze_35757)
          threads_per_segment_44629 = (groups_per_segment_44625 * segred_group_sizze_35757)
          group_res_arr_mem_44630 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_35757 * virt_num_groups_44627)),
                                                 "group_res_arr_mem_44630")
          mainMagnitudezicounter_mem_44632 = self.mainMagnitudezicounter_mem_44632
          if ((1 * (np.long(num_groups_35758) * np.long(segred_group_sizze_35757))) != 0):
            self.mainMagnitudezisegred_large_35711_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35757))),
                                                                np.int64(N_28043),
                                                                np.int64(i32_res_28053),
                                                                np.int64(num_groups_35758),
                                                                np.int64(groups_per_segment_44625),
                                                                np.int64(elements_per_thread_44626),
                                                                np.int64(virt_num_groups_44627),
                                                                np.int64(threads_per_segment_44629),
                                                                defunc_4_map_res_mem_43356,
                                                                mem_43410,
                                                                mem_43413,
                                                                group_res_arr_mem_44630,
                                                                mainMagnitudezicounter_mem_44632)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_35711_var,
                                       ((np.long(num_groups_35758) * np.long(segred_group_sizze_35757)),),
                                       (np.long(segred_group_sizze_35757),))
            if synchronous:
              sync(self)
        segmap_usable_groups_35774 = sdiv_up64(m_28044,
                                               segmap_group_sizze_35773)
        mem_43416 = opencl_alloc(self, bytes_43330, "mem_43416")
        mem_43418 = opencl_alloc(self, bytes_43330, "mem_43418")
        if ((1 * (np.long(segmap_usable_groups_35774) * np.long(segmap_group_sizze_35773))) != 0):
          self.mainMagnitudezisegmap_35688_var.set_args(self.global_failure,
                                                        np.int64(m_28044),
                                                        np.float32(hfrac_28049),
                                                        np.int32(k2p2_28055),
                                                        mem_43410, mem_43413,
                                                        mem_43416, mem_43418)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_35688_var,
                                     ((np.long(segmap_usable_groups_35774) * np.long(segmap_group_sizze_35773)),),
                                     (np.long(segmap_group_sizze_35773),))
          if synchronous:
            sync(self)
        mem_43413 = None
        defunc_3_map_res_mem_43419 = mem_43416
        defunc_3_map_res_mem_43420 = mem_43410
        defunc_3_map_res_mem_43421 = mem_43418
      defunc_3_map_res_mem_43422 = defunc_3_map_res_mem_43419
      defunc_3_map_res_mem_43423 = defunc_3_map_res_mem_43420
      defunc_3_map_res_mem_43424 = defunc_3_map_res_mem_43421
    segred_group_sizze_35794 = self.sizes["mainMagnitude.segred_group_size_35793"]
    max_num_groups_44671 = self.sizes["mainMagnitude.segred_num_groups_35795"]
    num_groups_35796 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28044,
                                                            segred_group_sizze_35794),
                                                  sext_i32_i64(max_num_groups_44671))))
    mem_43427 = opencl_alloc(self, np.int64(4), "mem_43427")
    mainMagnitudezicounter_mem_44672 = self.mainMagnitudezicounter_mem_44672
    group_res_arr_mem_44674 = opencl_alloc(self,
                                           (np.int32(4) * (segred_group_sizze_35794 * num_groups_35796)),
                                           "group_res_arr_mem_44674")
    num_threads_44676 = (num_groups_35796 * segred_group_sizze_35794)
    if ((1 * (np.long(num_groups_35796) * np.long(segred_group_sizze_35794))) != 0):
      self.mainMagnitudezisegred_nonseg_35801_var.set_args(self.global_failure,
                                                           cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35794))),
                                                           cl.LocalMemory(np.long(np.int32(1))),
                                                           np.int64(m_28044),
                                                           np.int64(num_groups_35796),
                                                           np.int64(num_threads_44676),
                                                           defunc_3_map_res_mem_43422,
                                                           mem_43427,
                                                           mainMagnitudezicounter_mem_44672,
                                                           group_res_arr_mem_44674)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegred_nonseg_35801_var,
                                 ((np.long(num_groups_35796) * np.long(segred_group_sizze_35794)),),
                                 (np.long(segred_group_sizze_35794),))
      if synchronous:
        sync(self)
    read_res_45073 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45073, mem_43427,
                    device_offset=(np.long(np.int64(0)) * 4),
                    is_blocking=synchronous)
    sync(self)
    defunc_2_reduce_comm_res_28409 = read_res_45073[0]
    mem_43427 = None
    i32_res_28414 = sext_i32_i64(defunc_2_reduce_comm_res_28409)
    bounds_invalid_upwards_28415 = slt64(i32_res_28414, np.int64(0))
    valid_28416 = not(bounds_invalid_upwards_28415)
    range_valid_c_28417 = True
    assert valid_28416, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:5:3-18\n   #2  bfastfinal.fut:105:34-46\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:100:17-107:24\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:37\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                                                                    i32_res_28414,
                                                                                                                                                                                                                                                                                                                    " is invalid."))
    suff_outer_par_35833 = (self.sizes["mainMagnitude.suff_outer_par_31"] <= m_28044)
    segmap_group_sizze_35856 = self.sizes["mainMagnitude.segmap_group_size_35837"]
    nest_sizze_35899 = (m_28044 * i32_res_28414)
    segred_group_sizze_35900 = self.sizes["mainMagnitude.segred_group_size_35877"]
    max_num_groups_44702 = self.sizes["mainMagnitude.segred_num_groups_35879"]
    num_groups_35901 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_35899,
                                                            segred_group_sizze_35900),
                                                  sext_i32_i64(max_num_groups_44702))))
    bytes_43430 = (np.int64(4) * segmap_group_sizze_35856)
    local_memory_capacity_44773 = self.max_local_memory
    if (sle64(((bytes_43430 + srem64((np.int64(8) - srem64(bytes_43430,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_43430 + srem64((np.int64(8) - srem64(bytes_43430,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44773)) and suff_outer_par_35833):
      segmap_usable_groups_35857 = sdiv_up64(m_28044, segmap_group_sizze_35856)
      num_whole_tiles_42289 = squot64(i32_res_28414, segmap_group_sizze_35856)
      residual_input_42388 = srem64(i32_res_28414, segmap_group_sizze_35856)
      cond_42389 = (residual_input_42388 == np.int64(0))
      mem_43453 = opencl_alloc(self, bytes_43330, "mem_43453")
      if ((1 * (np.long(segmap_usable_groups_35857) * np.long(segmap_group_sizze_35856))) != 0):
        self.mainMagnitudezisegmap_intragroup_42269_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(bytes_43430)),
                                                                 cl.LocalMemory(np.long(bytes_43430)),
                                                                 np.int64(N_28043),
                                                                 np.int64(m_28044),
                                                                 np.int64(i32_res_28414),
                                                                 np.int64(num_whole_tiles_42289),
                                                                 np.int64(residual_input_42388),
                                                                 np.byte(cond_42389),
                                                                 defunc_4_map_res_mem_43356,
                                                                 defunc_3_map_res_mem_43422,
                                                                 defunc_3_map_res_mem_43423,
                                                                 mem_43453)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_42269_var,
                                   ((np.long(segmap_usable_groups_35857) * np.long(segmap_group_sizze_35856)),),
                                   (np.long(segmap_group_sizze_35856),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_43457 = mem_43453
    else:
      mem_43456 = opencl_alloc(self, bytes_43330, "mem_43456")
      if slt64((i32_res_28414 * np.int64(2)), segred_group_sizze_35900):
        segment_sizze_nonzzero_44713 = smax64(np.int64(1), i32_res_28414)
        num_threads_44714 = (num_groups_35901 * segred_group_sizze_35900)
        if ((1 * (np.long(num_groups_35901) * np.long(segred_group_sizze_35900))) != 0):
          self.mainMagnitudezisegred_small_35883_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35900))),
                                                              np.int64(N_28043),
                                                              np.int64(m_28044),
                                                              np.int64(i32_res_28414),
                                                              np.int64(num_groups_35901),
                                                              np.int64(segment_sizze_nonzzero_44713),
                                                              defunc_4_map_res_mem_43356,
                                                              defunc_3_map_res_mem_43422,
                                                              defunc_3_map_res_mem_43423,
                                                              mem_43456)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegred_small_35883_var,
                                     ((np.long(num_groups_35901) * np.long(segred_group_sizze_35900)),),
                                     (np.long(segred_group_sizze_35900),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_44734 = sdiv_up64(num_groups_35901,
                                             smax64(np.int64(1), m_28044))
        elements_per_thread_44735 = sdiv_up64(i32_res_28414,
                                              (segred_group_sizze_35900 * groups_per_segment_44734))
        virt_num_groups_44736 = (groups_per_segment_44734 * m_28044)
        num_threads_44737 = (num_groups_35901 * segred_group_sizze_35900)
        threads_per_segment_44738 = (groups_per_segment_44734 * segred_group_sizze_35900)
        group_res_arr_mem_44739 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_35900 * virt_num_groups_44736)),
                                               "group_res_arr_mem_44739")
        mainMagnitudezicounter_mem_44741 = self.mainMagnitudezicounter_mem_44741
        if ((1 * (np.long(num_groups_35901) * np.long(segred_group_sizze_35900))) != 0):
          self.mainMagnitudezisegred_large_35883_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long(np.int32(1))),
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35900))),
                                                              np.int64(N_28043),
                                                              np.int64(i32_res_28414),
                                                              np.int64(num_groups_35901),
                                                              np.int64(groups_per_segment_44734),
                                                              np.int64(elements_per_thread_44735),
                                                              np.int64(virt_num_groups_44736),
                                                              np.int64(threads_per_segment_44738),
                                                              defunc_4_map_res_mem_43356,
                                                              defunc_3_map_res_mem_43422,
                                                              defunc_3_map_res_mem_43423,
                                                              mem_43456,
                                                              group_res_arr_mem_44739,
                                                              mainMagnitudezicounter_mem_44741)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegred_large_35883_var,
                                     ((np.long(num_groups_35901) * np.long(segred_group_sizze_35900)),),
                                     (np.long(segred_group_sizze_35900),))
          if synchronous:
            sync(self)
      defunc_0_f_res_mem_43457 = mem_43456
    iota32_arg_28439 = (N_28043 - i32_res_28053)
    bounds_invalid_upwards_28440 = slt64(iota32_arg_28439, np.int64(0))
    valid_28441 = not(bounds_invalid_upwards_28440)
    range_valid_c_28442 = True
    assert valid_28441, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:113:22-35\n   #3  bfastfinal.fut:184:5-58\n   #4  bfastfinal.fut:179:1-185:37\n" % ("Range ",
                                                                                                                                                                                                                                      np.int64(0),
                                                                                                                                                                                                                                      "..",
                                                                                                                                                                                                                                      np.int64(1),
                                                                                                                                                                                                                                      "..<",
                                                                                                                                                                                                                                      iota32_arg_28439,
                                                                                                                                                                                                                                      " is invalid."))
    x_28444 = (np.int32(1) + n_28047)
    i_28445 = (n_28047 - np.int32(1))
    i_28446 = sext_i32_i64(i_28445)
    x_28447 = sle64(np.int64(0), i_28446)
    y_28448 = slt64(i_28446, N_28043)
    bounds_check_28449 = (x_28447 and y_28448)
    index_certs_28450 = True
    assert bounds_check_28449, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:111:64-84\n   #1  bfastfinal.fut:109:15-113:36\n   #2  bfastfinal.fut:184:5-58\n   #3  bfastfinal.fut:179:1-185:37\n" % ("Index [",
                                                                                                                                                                                                                 i_28446,
                                                                                                                                                                                                                 "] out of bounds for array of shape [",
                                                                                                                                                                                                                 N_28043,
                                                                                                                                                                                                                 "]."))
    read_res_45075 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45075, mappingindices_mem_42558,
                    device_offset=(np.long(i_28446) * 4),
                    is_blocking=synchronous)
    sync(self)
    r32_arg_28451 = read_res_45075[0]
    i32_res_28452 = sitofp_i32_f32(r32_arg_28451)
    range_valid_c_28453 = True
    assert valid_28441, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:90:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:123:20-35\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:118:20-134:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:37\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                                                                  iota32_arg_28439,
                                                                                                                                                                                                                                                                                                                  " is invalid."))
    segmap_group_sizze_35978 = self.sizes["mainMagnitude.segmap_group_size_35961"]
    segmap_usable_groups_35979 = sdiv_up64(iota32_arg_28439,
                                           segmap_group_sizze_35978)
    bytes_43459 = (np.int64(4) * iota32_arg_28439)
    mem_43460 = opencl_alloc(self, bytes_43459, "mem_43460")
    mem_43462 = opencl_alloc(self, bytes_43459, "mem_43462")
    if ((1 * (np.long(segmap_usable_groups_35979) * np.long(segmap_group_sizze_35978))) != 0):
      self.mainMagnitudezisegmap_35959_var.set_args(self.global_failure,
                                                    np.float32(lam_28050),
                                                    np.int64(iota32_arg_28439),
                                                    np.int32(x_28444),
                                                    np.float32(i32_res_28452),
                                                    mappingindices_mem_42558,
                                                    mem_43460, mem_43462)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_35959_var,
                                 ((np.long(segmap_usable_groups_35979) * np.long(segmap_group_sizze_35978)),),
                                 (np.long(segmap_group_sizze_35978),))
      if synchronous:
        sync(self)
    mem_43460 = None
    max_res_28469 = smax64(np.int64(1), iota32_arg_28439)
    bounds_invalid_upwards_28470 = slt64(max_res_28469, np.int64(1))
    distance_28471 = (max_res_28469 - np.int64(1))
    valid_28472 = not(bounds_invalid_upwards_28470)
    range_valid_c_28473 = True
    assert valid_28472, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:16:30-45\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:120:13-125:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:118:20-134:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:37\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                                                              np.int64(1),
                                                                                                                                                                                                                                                                                                                                                              "..<",
                                                                                                                                                                                                                                                                                                                                                              max_res_28469,
                                                                                                                                                                                                                                                                                                                                                              " is invalid."))
    segmap_group_sizze_36398 = self.sizes["mainMagnitude.segmap_group_size_36391"]
    segmap_usable_groups_36399 = sdiv_up64(m_28044, segmap_group_sizze_36398)
    mem_43465 = opencl_alloc(self, bytes_43330, "mem_43465")
    if ((1 * (np.long(segmap_usable_groups_36399) * np.long(segmap_group_sizze_36398))) != 0):
      self.mainMagnitudezisegmap_36389_var.set_args(self.global_failure,
                                                    np.int64(m_28044),
                                                    defunc_4_map_res_mem_43355,
                                                    defunc_3_map_res_mem_43423,
                                                    mem_43465)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_36389_var,
                                 ((np.long(segmap_usable_groups_36399) * np.long(segmap_group_sizze_36398)),),
                                 (np.long(segmap_group_sizze_36398),))
      if synchronous:
        sync(self)
    nest_sizze_36412 = (m_28044 * iota32_arg_28439)
    segmap_group_sizze_36413 = self.sizes["mainMagnitude.segmap_group_size_36334"]
    segmap_usable_groups_36414 = sdiv_up64(nest_sizze_36412,
                                           segmap_group_sizze_36413)
    bytes_43467 = (np.int64(4) * nest_sizze_36412)
    mem_43469 = opencl_alloc(self, bytes_43467, "mem_43469")
    if ((1 * (np.long(segmap_usable_groups_36414) * np.long(segmap_group_sizze_36413))) != 0):
      self.mainMagnitudezisegmap_36331_var.set_args(self.global_failure,
                                                    self.failure_is_an_option,
                                                    self.global_failure_args,
                                                    np.int64(N_28043),
                                                    np.int64(m_28044),
                                                    np.int64(iota32_arg_28439),
                                                    defunc_4_map_res_mem_43356,
                                                    defunc_3_map_res_mem_43423,
                                                    mem_43465, mem_43469)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_36331_var,
                                 ((np.long(segmap_usable_groups_36414) * np.long(segmap_group_sizze_36413)),),
                                 (np.long(segmap_group_sizze_36413),))
      if synchronous:
        sync(self)
    self.failure_is_an_option = np.int32(1)
    segmap_group_sizze_36442 = self.sizes["mainMagnitude.segmap_group_size_36212"]
    segmap_usable_groups_36443 = sdiv_up64(m_28044, segmap_group_sizze_36442)
    mem_43472 = opencl_alloc(self, bytes_43467, "mem_43472")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_43472, np.int64(0),
                                                mem_43469, np.int64(0),
                                                np.int64(1), iota32_arg_28439,
                                                m_28044)
    mem_43469 = None
    mem_43503 = opencl_alloc(self, bytes_43330, "mem_43503")
    num_threads_43801 = (segmap_group_sizze_36442 * segmap_usable_groups_36443)
    total_sizze_43802 = (bytes_43459 * num_threads_43801)
    mem_43483 = opencl_alloc(self, total_sizze_43802, "mem_43483")
    if ((1 * (np.long(segmap_usable_groups_36443) * np.long(segmap_group_sizze_36442))) != 0):
      self.mainMagnitudezisegmap_36210_var.set_args(self.global_failure,
                                                    self.failure_is_an_option,
                                                    self.global_failure_args,
                                                    np.int64(m_28044),
                                                    np.int64(iota32_arg_28439),
                                                    np.int64(distance_28471),
                                                    np.int64(segmap_usable_groups_36443),
                                                    defunc_4_map_res_mem_43355,
                                                    defunc_3_map_res_mem_43423,
                                                    mem_43465, mem_43472,
                                                    mem_43483, mem_43503)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_36210_var,
                                 ((np.long(segmap_usable_groups_36443) * np.long(segmap_group_sizze_36442)),),
                                 (np.long(segmap_group_sizze_36442),))
      if synchronous:
        sync(self)
    self.failure_is_an_option = np.int32(1)
    mem_43465 = None
    mem_43472 = None
    mem_43483 = None
    fits_36777 = sle64(iota32_arg_28439, max_group_sizze_34184)
    suff_intra_par_36775 = (self.sizes["mainMagnitude.suff_intra_par_37"] <= iota32_arg_28439)
    intra_suff_and_fits_36778 = (suff_intra_par_36775 and fits_36777)
    segmap_group_sizze_37051 = self.sizes["mainMagnitude.segmap_group_size_37031"]
    max_num_groups_44799 = self.sizes["mainMagnitude.segmap_num_groups_37033"]
    num_groups_37052 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28044,
                                                            segmap_group_sizze_37051),
                                                  sext_i32_i64(max_num_groups_44799))))
    segscan_group_sizze_37074 = self.sizes["mainMagnitude.segscan_group_size_36990"]
    max_num_groups_44800 = self.sizes["mainMagnitude.segscan_num_groups_36992"]
    num_groups_37075 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36412,
                                                            segscan_group_sizze_37074),
                                                  sext_i32_i64(max_num_groups_44800))))
    segred_group_sizze_37112 = self.sizes["mainMagnitude.segred_group_size_36936"]
    max_num_groups_44801 = self.sizes["mainMagnitude.segred_num_groups_36938"]
    num_groups_37113 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36412,
                                                            segred_group_sizze_37112),
                                                  sext_i32_i64(max_num_groups_44801))))
    segmap_group_sizze_37151 = self.sizes["mainMagnitude.segmap_group_size_36889"]
    local_memory_capacity_44994 = self.max_local_memory
    if (sle64(((((bytes_43459 + srem64((np.int64(8) - srem64(bytes_43459,
                                                             np.int64(8))),
                                       np.int64(8))) + ((np.int32(1) * iota32_arg_28439) + srem64((np.int64(8) - srem64((np.int32(1) * iota32_arg_28439),
                                                                                                                        np.int64(8))),
                                                                                                  np.int64(8)))) + ((np.int32(4) * iota32_arg_28439) + srem64((np.int64(8) - srem64((np.int32(4) * iota32_arg_28439),
                                                                                                                                                                                    np.int64(8))),
                                                                                                                                                              np.int64(8)))) + ((np.int32(4) * iota32_arg_28439) + srem64((np.int64(8) - srem64((np.int32(4) * iota32_arg_28439),
                                                                                                                                                                                                                                                np.int64(8))),
                                                                                                                                                                                                                          np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44994)) and intra_suff_and_fits_36778):
      mem_43510 = opencl_alloc(self, bytes_43330, "mem_43510")
      mem_43512 = opencl_alloc(self, bytes_43330, "mem_43512")
      if ((1 * (np.long(m_28044) * np.long(iota32_arg_28439))) != 0):
        self.mainMagnitudezisegmap_intragroup_36562_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long((np.int32(4) * iota32_arg_28439))),
                                                                 cl.LocalMemory(np.long((np.int32(4) * iota32_arg_28439))),
                                                                 cl.LocalMemory(np.long((np.int32(1) * iota32_arg_28439))),
                                                                 cl.LocalMemory(np.long(bytes_43459)),
                                                                 np.int64(N_28043),
                                                                 np.int32(n_28047),
                                                                 np.int64(iota32_arg_28439),
                                                                 defunc_4_map_res_mem_43355,
                                                                 defunc_4_map_res_mem_43356,
                                                                 defunc_4_map_res_mem_43357,
                                                                 defunc_3_map_res_mem_43422,
                                                                 defunc_3_map_res_mem_43423,
                                                                 defunc_3_map_res_mem_43424,
                                                                 defunc_0_f_res_mem_43457,
                                                                 mem_43462,
                                                                 mem_43510,
                                                                 mem_43512)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_36562_var,
                                   ((np.long(m_28044) * np.long(iota32_arg_28439)),),
                                   (np.long(iota32_arg_28439),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_43534 = mem_43510
      defunc_0_f_res_mem_43535 = mem_43512
    else:
      mem_43515 = opencl_alloc(self, bytes_43330, "mem_43515")
      mem_43517 = opencl_alloc(self, bytes_43330, "mem_43517")
      if ((1 * (np.long(num_groups_37052) * np.long(segmap_group_sizze_37051))) != 0):
        self.mainMagnitudezisegmap_37029_var.set_args(self.global_failure,
                                                      np.int64(m_28044),
                                                      np.int64(num_groups_37052),
                                                      defunc_4_map_res_mem_43355,
                                                      defunc_3_map_res_mem_43423,
                                                      defunc_3_map_res_mem_43424,
                                                      mem_43515, mem_43517)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_37029_var,
                                   ((np.long(num_groups_37052) * np.long(segmap_group_sizze_37051)),),
                                   (np.long(segmap_group_sizze_37051),))
        if synchronous:
          sync(self)
      mem_43521 = opencl_alloc(self, bytes_43467, "mem_43521")
      if slt64(np.int64(0), (m_28044 * iota32_arg_28439)):
        stage1_max_num_groups_44835 = self.max_group_size
        stage1_num_groups_44836 = smin64(stage1_max_num_groups_44835,
                                         num_groups_37075)
        num_threads_44837 = sext_i64_i32((stage1_num_groups_44836 * segscan_group_sizze_37074))
        if ((1 * (np.long(stage1_num_groups_44836) * np.long(segscan_group_sizze_37074))) != 0):
          self.mainMagnitudeziscan_stage1_36996_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                           (np.int32(4) * segscan_group_sizze_37074)))),
                                                             np.int64(N_28043),
                                                             np.int64(m_28044),
                                                             np.int64(iota32_arg_28439),
                                                             np.int32(num_threads_44837),
                                                             defunc_4_map_res_mem_43356,
                                                             defunc_3_map_res_mem_43422,
                                                             defunc_3_map_res_mem_43423,
                                                             defunc_0_f_res_mem_43457,
                                                             mem_43517,
                                                             mem_43521)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage1_36996_var,
                                     ((np.long(stage1_num_groups_44836) * np.long(segscan_group_sizze_37074)),),
                                     (np.long(segscan_group_sizze_37074),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_44836))) != 0):
          self.mainMagnitudeziscan_stage2_36996_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                           (np.int32(4) * stage1_num_groups_44836)))),
                                                             np.int64(m_28044),
                                                             np.int64(iota32_arg_28439),
                                                             np.int64(stage1_num_groups_44836),
                                                             np.int32(num_threads_44837),
                                                             mem_43521)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage2_36996_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_44836)),),
                                     (np.long(stage1_num_groups_44836),))
          if synchronous:
            sync(self)
        required_groups_44879 = sext_i64_i32(sdiv_up64((m_28044 * iota32_arg_28439),
                                                       segscan_group_sizze_37074))
        if ((1 * (np.long(num_groups_37075) * np.long(segscan_group_sizze_37074))) != 0):
          self.mainMagnitudeziscan_stage3_36996_var.set_args(self.global_failure,
                                                             np.int64(m_28044),
                                                             np.int64(iota32_arg_28439),
                                                             np.int64(num_groups_37075),
                                                             np.int32(num_threads_44837),
                                                             np.int32(required_groups_44879),
                                                             mem_43521)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage3_36996_var,
                                     ((np.long(num_groups_37075) * np.long(segscan_group_sizze_37074)),),
                                     (np.long(segscan_group_sizze_37074),))
          if synchronous:
            sync(self)
      mem_43524 = opencl_alloc(self, m_28044, "mem_43524")
      mem_43526 = opencl_alloc(self, bytes_43330, "mem_43526")
      mem_43528 = opencl_alloc(self, bytes_43330, "mem_43528")
      if slt64((iota32_arg_28439 * np.int64(2)), segred_group_sizze_37112):
        segment_sizze_nonzzero_44891 = smax64(np.int64(1), iota32_arg_28439)
        num_threads_44892 = (num_groups_37113 * segred_group_sizze_37112)
        if ((1 * (np.long(num_groups_37113) * np.long(segred_group_sizze_37112))) != 0):
          self.mainMagnitudezisegred_small_36942_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37112))),
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37112))),
                                                              cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_37112))),
                                                              np.int64(m_28044),
                                                              np.int64(iota32_arg_28439),
                                                              np.int64(num_groups_37113),
                                                              np.int64(segment_sizze_nonzzero_44891),
                                                              mem_43462,
                                                              mem_43515,
                                                              mem_43517,
                                                              mem_43521,
                                                              mem_43524,
                                                              mem_43526,
                                                              mem_43528)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegred_small_36942_var,
                                     ((np.long(num_groups_37113) * np.long(segred_group_sizze_37112)),),
                                     (np.long(segred_group_sizze_37112),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_44927 = sdiv_up64(num_groups_37113,
                                             smax64(np.int64(1), m_28044))
        elements_per_thread_44928 = sdiv_up64(iota32_arg_28439,
                                              (segred_group_sizze_37112 * groups_per_segment_44927))
        virt_num_groups_44929 = (groups_per_segment_44927 * m_28044)
        num_threads_44930 = (num_groups_37113 * segred_group_sizze_37112)
        threads_per_segment_44931 = (groups_per_segment_44927 * segred_group_sizze_37112)
        group_res_arr_mem_44932 = opencl_alloc(self,
                                               (np.int32(1) * (segred_group_sizze_37112 * virt_num_groups_44929)),
                                               "group_res_arr_mem_44932")
        group_res_arr_mem_44934 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_37112 * virt_num_groups_44929)),
                                               "group_res_arr_mem_44934")
        group_res_arr_mem_44936 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_37112 * virt_num_groups_44929)),
                                               "group_res_arr_mem_44936")
        mainMagnitudezicounter_mem_44938 = self.mainMagnitudezicounter_mem_44938
        if ((1 * (np.long(num_groups_37113) * np.long(segred_group_sizze_37112))) != 0):
          self.mainMagnitudezisegred_large_36942_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long(np.int32(1))),
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37112))),
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37112))),
                                                              cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_37112))),
                                                              np.int64(iota32_arg_28439),
                                                              np.int64(num_groups_37113),
                                                              np.int64(groups_per_segment_44927),
                                                              np.int64(elements_per_thread_44928),
                                                              np.int64(virt_num_groups_44929),
                                                              mem_43462,
                                                              mem_43515,
                                                              mem_43517,
                                                              mem_43521,
                                                              mem_43524,
                                                              mem_43526,
                                                              mem_43528,
                                                              group_res_arr_mem_44932,
                                                              group_res_arr_mem_44934,
                                                              group_res_arr_mem_44936,
                                                              mainMagnitudezicounter_mem_44938)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegred_large_36942_var,
                                     ((np.long(num_groups_37113) * np.long(segred_group_sizze_37112)),),
                                     (np.long(segred_group_sizze_37112),))
          if synchronous:
            sync(self)
      mem_43515 = None
      mem_43521 = None
      segmap_usable_groups_37152 = sdiv_up64(m_28044, segmap_group_sizze_37151)
      mem_43531 = opencl_alloc(self, bytes_43330, "mem_43531")
      mem_43533 = opencl_alloc(self, bytes_43330, "mem_43533")
      if ((1 * (np.long(segmap_usable_groups_37152) * np.long(segmap_group_sizze_37151))) != 0):
        self.mainMagnitudezisegmap_36887_var.set_args(self.global_failure,
                                                      np.int64(N_28043),
                                                      np.int64(m_28044),
                                                      np.int32(n_28047),
                                                      defunc_4_map_res_mem_43357,
                                                      defunc_3_map_res_mem_43423,
                                                      mem_43517, mem_43524,
                                                      mem_43526, mem_43528,
                                                      mem_43531, mem_43533)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_36887_var,
                                   ((np.long(segmap_usable_groups_37152) * np.long(segmap_group_sizze_37151)),),
                                   (np.long(segmap_group_sizze_37151),))
        if synchronous:
          sync(self)
      mem_43517 = None
      mem_43524 = None
      mem_43526 = None
      mem_43528 = None
      defunc_0_f_res_mem_43534 = mem_43531
      defunc_0_f_res_mem_43535 = mem_43533
    defunc_4_map_res_mem_43356 = None
    defunc_4_map_res_mem_43357 = None
    defunc_3_map_res_mem_43422 = None
    defunc_3_map_res_mem_43423 = None
    defunc_3_map_res_mem_43424 = None
    defunc_0_f_res_mem_43457 = None
    mem_43462 = None
    out_mem_43854 = defunc_4_map_res_mem_43355
    out_mem_43855 = defunc_0_f_res_mem_43534
    out_mem_43856 = defunc_0_f_res_mem_43535
    out_mem_43857 = mem_43503
    return (out_mem_43854, out_mem_43855, out_mem_43856, out_mem_43857)
  def futhark_reshapeTransp(self, images_mem_42558, m_27367, n_27368, p_27369):
    flatten_to_arg_27371 = (n_27368 * p_27369)
    flat_dim_27372 = (n_27368 * p_27369)
    dim_match_27373 = (flatten_to_arg_27371 == flat_dim_27372)
    empty_or_match_cert_27374 = True
    assert dim_match_27373, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:127:3-20\n   #1  bfastfinal.fut:203:17-47\n   #2  bfastfinal.fut:202:1-204:23\n" % ("Value of (core language) shape (",
                                                                                                                                                                             flat_dim_27372,
                                                                                                                                                                             ") cannot match shape of type `[",
                                                                                                                                                                             flatten_to_arg_27371,
                                                                                                                                                                             "]t`."))
    binop_x_42560 = (m_27367 * flatten_to_arg_27371)
    bytes_42559 = (np.int64(4) * binop_x_42560)
    mem_42561 = opencl_alloc(self, bytes_42559, "mem_42561")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_42561, np.int64(0),
                                                images_mem_42558, np.int64(0),
                                                np.int64(1),
                                                flatten_to_arg_27371, m_27367)
    out_arrsizze_43855 = flatten_to_arg_27371
    out_mem_43854 = mem_42561
    return (out_mem_43854, out_arrsizze_43855)
  def convertToFloat(self, nan_value_27380_ext, images_mem_42558_ext):
    m_27377 = None
    n_27378 = None
    p_27379 = None
    try:
      nan_value_27380 = np.int16(ct.c_int16(nan_value_27380_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i16",
                                                                                                                            type(nan_value_27380_ext),
                                                                                                                            nan_value_27380_ext))
    try:
      assert ((type(images_mem_42558_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_42558_ext.dtype == np.int16)), "Parameter has unexpected type"
      if (m_27377 == None):
        m_27377 = np.int64(images_mem_42558_ext.shape[0])
      else:
        assert (m_27377 == images_mem_42558_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (n_27378 == None):
        n_27378 = np.int64(images_mem_42558_ext.shape[1])
      else:
        assert (n_27378 == images_mem_42558_ext.shape[1]), "Error: entry point arguments have invalid sizes."
      if (p_27379 == None):
        p_27379 = np.int64(images_mem_42558_ext.shape[2])
      else:
        assert (p_27379 == images_mem_42558_ext.shape[2]), "Error: entry point arguments have invalid sizes."
      if (type(images_mem_42558_ext) == cl.array.Array):
        images_mem_42558 = images_mem_42558_ext.data
      else:
        images_mem_42558 = opencl_alloc(self,
                                        np.int64(images_mem_42558_ext.nbytes),
                                        "images_mem_42558")
        if (np.int64(images_mem_42558_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_42558,
                          normaliseArray(images_mem_42558_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][][]i16",
                                                                                                                            type(images_mem_42558_ext),
                                                                                                                            images_mem_42558_ext))
    time_start = time.time()
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      out_mem_43854 = self.futhark_convertToFloat(images_mem_42558, m_27377,
                                                  n_27378, p_27379,
                                                  nan_value_27380)
    runtime = (int((time.time() * 1000000)) - int((time_start * 1000000)))
    sync(self)
    return cl.array.Array(self.queue, (m_27377, n_27378, p_27379), ct.c_float,
                          data=out_mem_43854)
  def main(self, trend_28683_ext, k_28684_ext, n_28685_ext, freq_28686_ext,
           hfrac_28687_ext, lam_28688_ext, mappingindices_mem_42558_ext,
           images_mem_42559_ext):
    N_28681 = None
    m_28682 = None
    N_28681 = None
    try:
      trend_28683 = np.int32(ct.c_int32(trend_28683_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(trend_28683_ext),
                                                                                                                            trend_28683_ext))
    try:
      k_28684 = np.int32(ct.c_int32(k_28684_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(k_28684_ext),
                                                                                                                            k_28684_ext))
    try:
      n_28685 = np.int32(ct.c_int32(n_28685_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(n_28685_ext),
                                                                                                                            n_28685_ext))
    try:
      freq_28686 = np.float32(ct.c_float(freq_28686_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(freq_28686_ext),
                                                                                                                            freq_28686_ext))
    try:
      hfrac_28687 = np.float32(ct.c_float(hfrac_28687_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(hfrac_28687_ext),
                                                                                                                            hfrac_28687_ext))
    try:
      lam_28688 = np.float32(ct.c_float(lam_28688_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #5 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(lam_28688_ext),
                                                                                                                            lam_28688_ext))
    try:
      assert ((type(mappingindices_mem_42558_ext) in [np.ndarray,
                                                      cl.array.Array]) and (mappingindices_mem_42558_ext.dtype == np.int32)), "Parameter has unexpected type"
      if (N_28681 == None):
        N_28681 = np.int64(mappingindices_mem_42558_ext.shape[0])
      else:
        assert (N_28681 == mappingindices_mem_42558_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (type(mappingindices_mem_42558_ext) == cl.array.Array):
        mappingindices_mem_42558 = mappingindices_mem_42558_ext.data
      else:
        mappingindices_mem_42558 = opencl_alloc(self,
                                                np.int64(mappingindices_mem_42558_ext.nbytes),
                                                "mappingindices_mem_42558")
        if (np.int64(mappingindices_mem_42558_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, mappingindices_mem_42558,
                          normaliseArray(mappingindices_mem_42558_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #6 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[]i32",
                                                                                                                            type(mappingindices_mem_42558_ext),
                                                                                                                            mappingindices_mem_42558_ext))
    try:
      assert ((type(images_mem_42559_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_42559_ext.dtype == np.float32)), "Parameter has unexpected type"
      if (m_28682 == None):
        m_28682 = np.int64(images_mem_42559_ext.shape[0])
      else:
        assert (m_28682 == images_mem_42559_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (N_28681 == None):
        N_28681 = np.int64(images_mem_42559_ext.shape[1])
      else:
        assert (N_28681 == images_mem_42559_ext.shape[1]), "Error: entry point arguments have invalid sizes."
      if (type(images_mem_42559_ext) == cl.array.Array):
        images_mem_42559 = images_mem_42559_ext.data
      else:
        images_mem_42559 = opencl_alloc(self,
                                        np.int64(images_mem_42559_ext.nbytes),
                                        "images_mem_42559")
        if (np.int64(images_mem_42559_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_42559,
                          normaliseArray(images_mem_42559_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #7 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][]f32",
                                                                                                                            type(images_mem_42559_ext),
                                                                                                                            images_mem_42559_ext))
    time_start = time.time()
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_43854, out_mem_43855,
       out_mem_43856) = self.futhark_main(mappingindices_mem_42558,
                                          images_mem_42559, N_28681, m_28682,
                                          trend_28683, k_28684, n_28685,
                                          freq_28686, hfrac_28687, lam_28688)
    runtime = (int((time.time() * 1000000)) - int((time_start * 1000000)))
    sync(self)
    return (cl.array.Array(self.queue, (m_28682,), ct.c_int32,
                           data=out_mem_43854), cl.array.Array(self.queue,
                                                               (m_28682,),
                                                               ct.c_int32,
                                                               data=out_mem_43855),
            cl.array.Array(self.queue, (m_28682,), ct.c_float,
                           data=out_mem_43856))
  def mainDetailed(self, trend_27393_ext, k_27394_ext, n_27395_ext,
                   freq_27396_ext, hfrac_27397_ext, lam_27398_ext,
                   mappingindices_mem_42558_ext, images_mem_42559_ext):
    N_27391 = None
    m_27392 = None
    N_27391 = None
    try:
      trend_27393 = np.int32(ct.c_int32(trend_27393_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(trend_27393_ext),
                                                                                                                            trend_27393_ext))
    try:
      k_27394 = np.int32(ct.c_int32(k_27394_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(k_27394_ext),
                                                                                                                            k_27394_ext))
    try:
      n_27395 = np.int32(ct.c_int32(n_27395_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(n_27395_ext),
                                                                                                                            n_27395_ext))
    try:
      freq_27396 = np.float32(ct.c_float(freq_27396_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(freq_27396_ext),
                                                                                                                            freq_27396_ext))
    try:
      hfrac_27397 = np.float32(ct.c_float(hfrac_27397_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(hfrac_27397_ext),
                                                                                                                            hfrac_27397_ext))
    try:
      lam_27398 = np.float32(ct.c_float(lam_27398_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #5 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(lam_27398_ext),
                                                                                                                            lam_27398_ext))
    try:
      assert ((type(mappingindices_mem_42558_ext) in [np.ndarray,
                                                      cl.array.Array]) and (mappingindices_mem_42558_ext.dtype == np.int32)), "Parameter has unexpected type"
      if (N_27391 == None):
        N_27391 = np.int64(mappingindices_mem_42558_ext.shape[0])
      else:
        assert (N_27391 == mappingindices_mem_42558_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (type(mappingindices_mem_42558_ext) == cl.array.Array):
        mappingindices_mem_42558 = mappingindices_mem_42558_ext.data
      else:
        mappingindices_mem_42558 = opencl_alloc(self,
                                                np.int64(mappingindices_mem_42558_ext.nbytes),
                                                "mappingindices_mem_42558")
        if (np.int64(mappingindices_mem_42558_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, mappingindices_mem_42558,
                          normaliseArray(mappingindices_mem_42558_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #6 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[]i32",
                                                                                                                            type(mappingindices_mem_42558_ext),
                                                                                                                            mappingindices_mem_42558_ext))
    try:
      assert ((type(images_mem_42559_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_42559_ext.dtype == np.float32)), "Parameter has unexpected type"
      if (m_27392 == None):
        m_27392 = np.int64(images_mem_42559_ext.shape[0])
      else:
        assert (m_27392 == images_mem_42559_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (N_27391 == None):
        N_27391 = np.int64(images_mem_42559_ext.shape[1])
      else:
        assert (N_27391 == images_mem_42559_ext.shape[1]), "Error: entry point arguments have invalid sizes."
      if (type(images_mem_42559_ext) == cl.array.Array):
        images_mem_42559 = images_mem_42559_ext.data
      else:
        images_mem_42559 = opencl_alloc(self,
                                        np.int64(images_mem_42559_ext.nbytes),
                                        "images_mem_42559")
        if (np.int64(images_mem_42559_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_42559,
                          normaliseArray(images_mem_42559_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #7 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][]f32",
                                                                                                                            type(images_mem_42559_ext),
                                                                                                                            images_mem_42559_ext))
    time_start = time.time()
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_43854, out_mem_43855, out_mem_43856, out_mem_43857,
       out_mem_43858, out_arrsizze_43859, out_mem_43860, out_arrsizze_43861,
       out_mem_43862, out_arrsizze_43863, out_mem_43864, out_mem_43865,
       out_mem_43866, out_mem_43867,
       out_mem_43868) = self.futhark_mainDetailed(mappingindices_mem_42558,
                                                  images_mem_42559, N_27391,
                                                  m_27392, trend_27393, k_27394,
                                                  n_27395, freq_27396,
                                                  hfrac_27397, lam_27398)
    runtime = (int((time.time() * 1000000)) - int((time_start * 1000000)))
    sync(self)
    return (cl.array.Array(self.queue, (m_27392,), ct.c_float,
                           data=out_mem_43854), cl.array.Array(self.queue,
                                                               (m_27392,),
                                                               ct.c_int32,
                                                               data=out_mem_43855),
            cl.array.Array(self.queue, (m_27392,), ct.c_int32,
                           data=out_mem_43856), cl.array.Array(self.queue,
                                                               (m_27392,),
                                                               ct.c_float,
                                                               data=out_mem_43857),
            cl.array.Array(self.queue, (m_27392, out_arrsizze_43859),
                           ct.c_float, data=out_mem_43858),
            cl.array.Array(self.queue, (m_27392, out_arrsizze_43861),
                           ct.c_float, data=out_mem_43860),
            cl.array.Array(self.queue, (out_arrsizze_43863,), ct.c_float,
                           data=out_mem_43862), cl.array.Array(self.queue,
                                                               (m_27392,),
                                                               ct.c_int32,
                                                               data=out_mem_43864),
            cl.array.Array(self.queue, (m_27392,), ct.c_float,
                           data=out_mem_43865), cl.array.Array(self.queue,
                                                               (m_27392,),
                                                               ct.c_float,
                                                               data=out_mem_43866),
            cl.array.Array(self.queue, (m_27392, N_27391), ct.c_float,
                           data=out_mem_43867), cl.array.Array(self.queue,
                                                               (m_27392,
                                                                N_27391),
                                                               ct.c_float,
                                                               data=out_mem_43868))
  def mainMagnitude(self, trend_28045_ext, k_28046_ext, n_28047_ext,
                    freq_28048_ext, hfrac_28049_ext, lam_28050_ext,
                    mappingindices_mem_42558_ext, images_mem_42559_ext):
    N_28043 = None
    m_28044 = None
    N_28043 = None
    try:
      trend_28045 = np.int32(ct.c_int32(trend_28045_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(trend_28045_ext),
                                                                                                                            trend_28045_ext))
    try:
      k_28046 = np.int32(ct.c_int32(k_28046_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(k_28046_ext),
                                                                                                                            k_28046_ext))
    try:
      n_28047 = np.int32(ct.c_int32(n_28047_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(n_28047_ext),
                                                                                                                            n_28047_ext))
    try:
      freq_28048 = np.float32(ct.c_float(freq_28048_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(freq_28048_ext),
                                                                                                                            freq_28048_ext))
    try:
      hfrac_28049 = np.float32(ct.c_float(hfrac_28049_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(hfrac_28049_ext),
                                                                                                                            hfrac_28049_ext))
    try:
      lam_28050 = np.float32(ct.c_float(lam_28050_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #5 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(lam_28050_ext),
                                                                                                                            lam_28050_ext))
    try:
      assert ((type(mappingindices_mem_42558_ext) in [np.ndarray,
                                                      cl.array.Array]) and (mappingindices_mem_42558_ext.dtype == np.int32)), "Parameter has unexpected type"
      if (N_28043 == None):
        N_28043 = np.int64(mappingindices_mem_42558_ext.shape[0])
      else:
        assert (N_28043 == mappingindices_mem_42558_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (type(mappingindices_mem_42558_ext) == cl.array.Array):
        mappingindices_mem_42558 = mappingindices_mem_42558_ext.data
      else:
        mappingindices_mem_42558 = opencl_alloc(self,
                                                np.int64(mappingindices_mem_42558_ext.nbytes),
                                                "mappingindices_mem_42558")
        if (np.int64(mappingindices_mem_42558_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, mappingindices_mem_42558,
                          normaliseArray(mappingindices_mem_42558_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #6 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[]i32",
                                                                                                                            type(mappingindices_mem_42558_ext),
                                                                                                                            mappingindices_mem_42558_ext))
    try:
      assert ((type(images_mem_42559_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_42559_ext.dtype == np.float32)), "Parameter has unexpected type"
      if (m_28044 == None):
        m_28044 = np.int64(images_mem_42559_ext.shape[0])
      else:
        assert (m_28044 == images_mem_42559_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (N_28043 == None):
        N_28043 = np.int64(images_mem_42559_ext.shape[1])
      else:
        assert (N_28043 == images_mem_42559_ext.shape[1]), "Error: entry point arguments have invalid sizes."
      if (type(images_mem_42559_ext) == cl.array.Array):
        images_mem_42559 = images_mem_42559_ext.data
      else:
        images_mem_42559 = opencl_alloc(self,
                                        np.int64(images_mem_42559_ext.nbytes),
                                        "images_mem_42559")
        if (np.int64(images_mem_42559_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_42559,
                          normaliseArray(images_mem_42559_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #7 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][]f32",
                                                                                                                            type(images_mem_42559_ext),
                                                                                                                            images_mem_42559_ext))
    time_start = time.time()
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_43854, out_mem_43855, out_mem_43856,
       out_mem_43857) = self.futhark_mainMagnitude(mappingindices_mem_42558,
                                                   images_mem_42559, N_28043,
                                                   m_28044, trend_28045,
                                                   k_28046, n_28047, freq_28048,
                                                   hfrac_28049, lam_28050)
    runtime = (int((time.time() * 1000000)) - int((time_start * 1000000)))
    sync(self)
    return (cl.array.Array(self.queue, (m_28044,), ct.c_int32,
                           data=out_mem_43854), cl.array.Array(self.queue,
                                                               (m_28044,),
                                                               ct.c_int32,
                                                               data=out_mem_43855),
            cl.array.Array(self.queue, (m_28044,), ct.c_float,
                           data=out_mem_43856), cl.array.Array(self.queue,
                                                               (m_28044,),
                                                               ct.c_float,
                                                               data=out_mem_43857))
  def reshapeTransp(self, images_mem_42558_ext):
    m_27367 = None
    n_27368 = None
    p_27369 = None
    try:
      assert ((type(images_mem_42558_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_42558_ext.dtype == np.float32)), "Parameter has unexpected type"
      if (m_27367 == None):
        m_27367 = np.int64(images_mem_42558_ext.shape[0])
      else:
        assert (m_27367 == images_mem_42558_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (n_27368 == None):
        n_27368 = np.int64(images_mem_42558_ext.shape[1])
      else:
        assert (n_27368 == images_mem_42558_ext.shape[1]), "Error: entry point arguments have invalid sizes."
      if (p_27369 == None):
        p_27369 = np.int64(images_mem_42558_ext.shape[2])
      else:
        assert (p_27369 == images_mem_42558_ext.shape[2]), "Error: entry point arguments have invalid sizes."
      if (type(images_mem_42558_ext) == cl.array.Array):
        images_mem_42558 = images_mem_42558_ext.data
      else:
        images_mem_42558 = opencl_alloc(self,
                                        np.int64(images_mem_42558_ext.nbytes),
                                        "images_mem_42558")
        if (np.int64(images_mem_42558_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_42558,
                          normaliseArray(images_mem_42558_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][][]f32",
                                                                                                                            type(images_mem_42558_ext),
                                                                                                                            images_mem_42558_ext))
    time_start = time.time()
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_43854,
       out_arrsizze_43855) = self.futhark_reshapeTransp(images_mem_42558,
                                                        m_27367, n_27368,
                                                        p_27369)
    runtime = (int((time.time() * 1000000)) - int((time_start * 1000000)))
    sync(self)
    return cl.array.Array(self.queue, (out_arrsizze_43855, m_27367), ct.c_float,
                          data=out_mem_43854)