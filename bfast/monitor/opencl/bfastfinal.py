import sys
import numpy as np
import ctypes as ct
# Stub code for OpenCL setup.

import pyopencl as cl
import numpy as np
import sys

if cl.version.VERSION < (2015,2):
    raise Exception('Futhark requires at least PyOpenCL version 2015.2.  Installed version is %s.' %
                    cl.version.VERSION_TEXT)

def parse_preferred_device(s):
    pref_num = 0
    if len(s) > 1 and s[0] == '#':
        i = 1
        while i < len(s):
            if not s[i].isdigit():
                break
            else:
                pref_num = pref_num * 10 + int(s[i])
            i += 1
        while i < len(s) and s[i].isspace():
            i += 1
        return (s[i:], pref_num)
    else:
        return (s, 0)

def get_prefered_context(interactive=False, platform_pref=None, device_pref=None):
    if device_pref != None:
        (device_pref, device_num) = parse_preferred_device(device_pref)
    else:
        device_num = 0

    if interactive:
        return cl.create_some_context(interactive=True)

    def blacklisted(p, d):
        return platform_pref == None and device_pref == None and \
            p.name == "Apple" and d.name.find("Intel(R) Core(TM)") >= 0
    def platform_ok(p):
        return not platform_pref or p.name.find(platform_pref) >= 0
    def device_ok(d):
        return not device_pref or d.name.find(device_pref) >= 0

    device_matches = 0

    for p in cl.get_platforms():
        if not platform_ok(p):
            continue
        for d in p.get_devices():
            if blacklisted(p,d) or not device_ok(d):
                continue
            if device_matches == device_num:
                return cl.Context(devices=[d])
            else:
                device_matches += 1
    raise Exception('No OpenCL platform and device matching constraints found.')

def size_assignment(s):
    name, value = s.split('=')
    return (name, int(value))

def check_types(self, required_types):
    if 'f64' in required_types:
        if self.device.get_info(cl.device_info.PREFERRED_VECTOR_WIDTH_DOUBLE) == 0:
            raise Exception('Program uses double-precision floats, but this is not supported on chosen device: %s' % self.device.name)

def apply_size_heuristics(self, size_heuristics, sizes):
    for (platform_name, device_type, size, valuef) in size_heuristics:
        if sizes[size] == None \
           and self.platform.name.find(platform_name) >= 0 \
           and (self.device.type & device_type) == device_type:
               sizes[size] = valuef(self.device)
    return sizes

def initialise_opencl_object(self,
                             program_src='',
                             command_queue=None,
                             interactive=False,
                             platform_pref=None,
                             device_pref=None,
                             default_group_size=None,
                             default_num_groups=None,
                             default_tile_size=None,
                             default_threshold=None,
                             size_heuristics=[],
                             required_types=[],
                             all_sizes={},
                             user_sizes={}):
    if command_queue is None:
        self.ctx = get_prefered_context(interactive, platform_pref, device_pref)
        self.queue = cl.CommandQueue(self.ctx)
    else:
        self.ctx = command_queue.context
        self.queue = command_queue
    self.device = self.queue.device
    self.platform = self.device.platform
    self.pool = cl.tools.MemoryPool(cl.tools.ImmediateAllocator(self.queue))
    device_type = self.device.type

    check_types(self, required_types)

    max_group_size = int(self.device.max_work_group_size)
    max_tile_size = int(np.sqrt(self.device.max_work_group_size))

    self.max_group_size = max_group_size
    self.max_tile_size = max_tile_size
    self.max_threshold = 0
    self.max_num_groups = 0

    self.max_local_memory = int(self.device.local_mem_size)

    # Futhark reserves 4 bytes of local memory for its own purposes.
    self.max_local_memory -= 4

    # See comment in rts/c/opencl.h.
    if self.platform.name.find('NVIDIA CUDA') >= 0:
        self.max_local_memory -= 12
    elif self.platform.name.find('AMD') >= 0:
        self.max_local_memory -= 16

    self.free_list = {}

    self.global_failure = self.pool.allocate(np.int32().itemsize)
    cl.enqueue_fill_buffer(self.queue, self.global_failure, np.int32(-1), 0, np.int32().itemsize)
    self.global_failure_args = self.pool.allocate(np.int64().itemsize *
                                                  (self.global_failure_args_max+1))
    self.failure_is_an_option = np.int32(0)

    if 'default_group_size' in sizes:
        default_group_size = sizes['default_group_size']
        del sizes['default_group_size']

    if 'default_num_groups' in sizes:
        default_num_groups = sizes['default_num_groups']
        del sizes['default_num_groups']

    if 'default_tile_size' in sizes:
        default_tile_size = sizes['default_tile_size']
        del sizes['default_tile_size']

    if 'default_threshold' in sizes:
        default_threshold = sizes['default_threshold']
        del sizes['default_threshold']

    default_group_size_set = default_group_size != None
    default_tile_size_set = default_tile_size != None
    default_sizes = apply_size_heuristics(self, size_heuristics,
                                          {'group_size': default_group_size,
                                           'tile_size': default_tile_size,
                                           'reg_tile_size': default_reg_tile_size,
                                           'num_groups': default_num_groups,
                                           'lockstep_width': None,
                                           'threshold': default_threshold})
    default_group_size = default_sizes['group_size']
    default_num_groups = default_sizes['num_groups']
    default_threshold = default_sizes['threshold']
    default_tile_size = default_sizes['tile_size']
    lockstep_width = default_sizes['lockstep_width']

    if default_group_size > max_group_size:
        if default_group_size_set:
            sys.stderr.write('Note: Device limits group size to {} (down from {})\n'.
                             format(max_tile_size, default_group_size))
        default_group_size = max_group_size

    if default_tile_size > max_tile_size:
        if default_tile_size_set:
            sys.stderr.write('Note: Device limits tile size to {} (down from {})\n'.
                             format(max_tile_size, default_tile_size))
        default_tile_size = max_tile_size

    for (k,v) in user_sizes.items():
        if k in all_sizes:
            all_sizes[k]['value'] = v
        else:
            raise Exception('Unknown size: {}\nKnown sizes: {}'.format(k, ' '.join(all_sizes.keys())))

    self.sizes = {}
    for (k,v) in all_sizes.items():
        if v['class'] == 'group_size':
            max_value = max_group_size
            default_value = default_group_size
        elif v['class'] == 'num_groups':
            max_value = max_group_size # Intentional!
            default_value = default_num_groups
        elif v['class'] == 'tile_size':
            max_value = max_tile_size
            default_value = default_tile_size
        elif v['class'].startswith('threshold'):
            max_value = None
            default_value = default_threshold
        else:
            # Bespoke sizes have no limit or default.
            max_value = None
        if v['value'] == None:
            self.sizes[k] = default_value
        elif max_value != None and v['value'] > max_value:
            sys.stderr.write('Note: Device limits {} to {} (down from {}\n'.
                             format(k, max_value, v['value']))
            self.sizes[k] = max_value
        else:
            self.sizes[k] = v['value']

    # XXX: we perform only a subset of z-encoding here.  Really, the
    # compiler should provide us with the variables to which
    # parameters are mapped.
    if (len(program_src) >= 0):
        return cl.Program(self.ctx, program_src).build(
            ["-DLOCKSTEP_WIDTH={}".format(lockstep_width)]
            + ["-D{}={}".format(s.replace('z', 'zz').replace('.', 'zi').replace('#', 'zh'),v) for (s,v) in self.sizes.items()])

def opencl_alloc(self, min_size, tag):
    min_size = 1 if min_size == 0 else min_size
    assert min_size > 0
    return self.pool.allocate(min_size)

def opencl_free_all(self):
    self.pool.free_held()

def sync(self):
    failure = np.empty(1, dtype=np.int32)
    cl.enqueue_copy(self.queue, failure, self.global_failure, is_blocking=True)
    self.failure_is_an_option = np.int32(0)
    if failure[0] >= 0:
        # Reset failure information.
        cl.enqueue_fill_buffer(self.queue, self.global_failure, np.int32(-1), 0, np.int32().itemsize)

        # Read failure args.
        failure_args = np.empty(self.global_failure_args_max+1, dtype=np.int64)
        cl.enqueue_copy(self.queue, failure_args, self.global_failure_args, is_blocking=True)

        raise Exception(self.failure_msgs[failure[0]].format(*failure_args))
import pyopencl.array
import time
import argparse
sizes = {}
synchronous = False
preferred_platform = None
preferred_device = None
default_threshold = None
default_group_size = None
default_num_groups = None
default_tile_size = None
default_reg_tile_size = None
fut_opencl_src = """#ifdef cl_clang_storage_class_specifiers
#pragma OPENCL EXTENSION cl_clang_storage_class_specifiers : enable
#endif
#pragma OPENCL EXTENSION cl_khr_byte_addressable_store : enable
__kernel void dummy_kernel(__global unsigned char *dummy, int n)
{
    const int thread_gid = get_global_id(0);
    
    if (thread_gid >= n)
        return;
}
typedef char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef long int64_t;
typedef uchar uint8_t;
typedef ushort uint16_t;
typedef uint uint32_t;
typedef ulong uint64_t;
#ifdef cl_nv_pragma_unroll
static inline void mem_fence_global()
{
    asm("membar.gl;");
}
#else
static inline void mem_fence_global()
{
    mem_fence(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
}
#endif
static inline void mem_fence_local()
{
    mem_fence(CLK_LOCAL_MEM_FENCE);
}
static inline uint8_t add8(uint8_t x, uint8_t y)
{
    return x + y;
}
static inline uint16_t add16(uint16_t x, uint16_t y)
{
    return x + y;
}
static inline uint32_t add32(uint32_t x, uint32_t y)
{
    return x + y;
}
static inline uint64_t add64(uint64_t x, uint64_t y)
{
    return x + y;
}
static inline uint8_t sub8(uint8_t x, uint8_t y)
{
    return x - y;
}
static inline uint16_t sub16(uint16_t x, uint16_t y)
{
    return x - y;
}
static inline uint32_t sub32(uint32_t x, uint32_t y)
{
    return x - y;
}
static inline uint64_t sub64(uint64_t x, uint64_t y)
{
    return x - y;
}
static inline uint8_t mul8(uint8_t x, uint8_t y)
{
    return x * y;
}
static inline uint16_t mul16(uint16_t x, uint16_t y)
{
    return x * y;
}
static inline uint32_t mul32(uint32_t x, uint32_t y)
{
    return x * y;
}
static inline uint64_t mul64(uint64_t x, uint64_t y)
{
    return x * y;
}
static inline uint8_t udiv8(uint8_t x, uint8_t y)
{
    return x / y;
}
static inline uint16_t udiv16(uint16_t x, uint16_t y)
{
    return x / y;
}
static inline uint32_t udiv32(uint32_t x, uint32_t y)
{
    return x / y;
}
static inline uint64_t udiv64(uint64_t x, uint64_t y)
{
    return x / y;
}
static inline uint8_t udiv_up8(uint8_t x, uint8_t y)
{
    return (x + y - 1) / y;
}
static inline uint16_t udiv_up16(uint16_t x, uint16_t y)
{
    return (x + y - 1) / y;
}
static inline uint32_t udiv_up32(uint32_t x, uint32_t y)
{
    return (x + y - 1) / y;
}
static inline uint64_t udiv_up64(uint64_t x, uint64_t y)
{
    return (x + y - 1) / y;
}
static inline uint8_t umod8(uint8_t x, uint8_t y)
{
    return x % y;
}
static inline uint16_t umod16(uint16_t x, uint16_t y)
{
    return x % y;
}
static inline uint32_t umod32(uint32_t x, uint32_t y)
{
    return x % y;
}
static inline uint64_t umod64(uint64_t x, uint64_t y)
{
    return x % y;
}
static inline uint8_t udiv_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint16_t udiv_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint32_t udiv_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint64_t udiv_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint8_t udiv_up_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint16_t udiv_up_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint32_t udiv_up_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint64_t udiv_up_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint8_t umod_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint16_t umod_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint32_t umod_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint64_t umod_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int8_t sdiv8(int8_t x, int8_t y)
{
    int8_t q = x / y;
    int8_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int16_t sdiv16(int16_t x, int16_t y)
{
    int16_t q = x / y;
    int16_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int32_t sdiv32(int32_t x, int32_t y)
{
    int32_t q = x / y;
    int32_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int64_t sdiv64(int64_t x, int64_t y)
{
    int64_t q = x / y;
    int64_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int8_t sdiv_up8(int8_t x, int8_t y)
{
    return sdiv8(x + y - 1, y);
}
static inline int16_t sdiv_up16(int16_t x, int16_t y)
{
    return sdiv16(x + y - 1, y);
}
static inline int32_t sdiv_up32(int32_t x, int32_t y)
{
    return sdiv32(x + y - 1, y);
}
static inline int64_t sdiv_up64(int64_t x, int64_t y)
{
    return sdiv64(x + y - 1, y);
}
static inline int8_t smod8(int8_t x, int8_t y)
{
    int8_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int16_t smod16(int16_t x, int16_t y)
{
    int16_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int32_t smod32(int32_t x, int32_t y)
{
    int32_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int64_t smod64(int64_t x, int64_t y)
{
    int64_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int8_t sdiv_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : sdiv8(x, y);
}
static inline int16_t sdiv_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : sdiv16(x, y);
}
static inline int32_t sdiv_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : sdiv32(x, y);
}
static inline int64_t sdiv_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : sdiv64(x, y);
}
static inline int8_t sdiv_up_safe8(int8_t x, int8_t y)
{
    return sdiv_safe8(x + y - 1, y);
}
static inline int16_t sdiv_up_safe16(int16_t x, int16_t y)
{
    return sdiv_safe16(x + y - 1, y);
}
static inline int32_t sdiv_up_safe32(int32_t x, int32_t y)
{
    return sdiv_safe32(x + y - 1, y);
}
static inline int64_t sdiv_up_safe64(int64_t x, int64_t y)
{
    return sdiv_safe64(x + y - 1, y);
}
static inline int8_t smod_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : smod8(x, y);
}
static inline int16_t smod_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : smod16(x, y);
}
static inline int32_t smod_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : smod32(x, y);
}
static inline int64_t smod_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : smod64(x, y);
}
static inline int8_t squot8(int8_t x, int8_t y)
{
    return x / y;
}
static inline int16_t squot16(int16_t x, int16_t y)
{
    return x / y;
}
static inline int32_t squot32(int32_t x, int32_t y)
{
    return x / y;
}
static inline int64_t squot64(int64_t x, int64_t y)
{
    return x / y;
}
static inline int8_t srem8(int8_t x, int8_t y)
{
    return x % y;
}
static inline int16_t srem16(int16_t x, int16_t y)
{
    return x % y;
}
static inline int32_t srem32(int32_t x, int32_t y)
{
    return x % y;
}
static inline int64_t srem64(int64_t x, int64_t y)
{
    return x % y;
}
static inline int8_t squot_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int16_t squot_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int32_t squot_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int64_t squot_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int8_t srem_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int16_t srem_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int32_t srem_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int64_t srem_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int8_t smin8(int8_t x, int8_t y)
{
    return x < y ? x : y;
}
static inline int16_t smin16(int16_t x, int16_t y)
{
    return x < y ? x : y;
}
static inline int32_t smin32(int32_t x, int32_t y)
{
    return x < y ? x : y;
}
static inline int64_t smin64(int64_t x, int64_t y)
{
    return x < y ? x : y;
}
static inline uint8_t umin8(uint8_t x, uint8_t y)
{
    return x < y ? x : y;
}
static inline uint16_t umin16(uint16_t x, uint16_t y)
{
    return x < y ? x : y;
}
static inline uint32_t umin32(uint32_t x, uint32_t y)
{
    return x < y ? x : y;
}
static inline uint64_t umin64(uint64_t x, uint64_t y)
{
    return x < y ? x : y;
}
static inline int8_t smax8(int8_t x, int8_t y)
{
    return x < y ? y : x;
}
static inline int16_t smax16(int16_t x, int16_t y)
{
    return x < y ? y : x;
}
static inline int32_t smax32(int32_t x, int32_t y)
{
    return x < y ? y : x;
}
static inline int64_t smax64(int64_t x, int64_t y)
{
    return x < y ? y : x;
}
static inline uint8_t umax8(uint8_t x, uint8_t y)
{
    return x < y ? y : x;
}
static inline uint16_t umax16(uint16_t x, uint16_t y)
{
    return x < y ? y : x;
}
static inline uint32_t umax32(uint32_t x, uint32_t y)
{
    return x < y ? y : x;
}
static inline uint64_t umax64(uint64_t x, uint64_t y)
{
    return x < y ? y : x;
}
static inline uint8_t shl8(uint8_t x, uint8_t y)
{
    return x << y;
}
static inline uint16_t shl16(uint16_t x, uint16_t y)
{
    return x << y;
}
static inline uint32_t shl32(uint32_t x, uint32_t y)
{
    return x << y;
}
static inline uint64_t shl64(uint64_t x, uint64_t y)
{
    return x << y;
}
static inline uint8_t lshr8(uint8_t x, uint8_t y)
{
    return x >> y;
}
static inline uint16_t lshr16(uint16_t x, uint16_t y)
{
    return x >> y;
}
static inline uint32_t lshr32(uint32_t x, uint32_t y)
{
    return x >> y;
}
static inline uint64_t lshr64(uint64_t x, uint64_t y)
{
    return x >> y;
}
static inline int8_t ashr8(int8_t x, int8_t y)
{
    return x >> y;
}
static inline int16_t ashr16(int16_t x, int16_t y)
{
    return x >> y;
}
static inline int32_t ashr32(int32_t x, int32_t y)
{
    return x >> y;
}
static inline int64_t ashr64(int64_t x, int64_t y)
{
    return x >> y;
}
static inline uint8_t and8(uint8_t x, uint8_t y)
{
    return x & y;
}
static inline uint16_t and16(uint16_t x, uint16_t y)
{
    return x & y;
}
static inline uint32_t and32(uint32_t x, uint32_t y)
{
    return x & y;
}
static inline uint64_t and64(uint64_t x, uint64_t y)
{
    return x & y;
}
static inline uint8_t or8(uint8_t x, uint8_t y)
{
    return x | y;
}
static inline uint16_t or16(uint16_t x, uint16_t y)
{
    return x | y;
}
static inline uint32_t or32(uint32_t x, uint32_t y)
{
    return x | y;
}
static inline uint64_t or64(uint64_t x, uint64_t y)
{
    return x | y;
}
static inline uint8_t xor8(uint8_t x, uint8_t y)
{
    return x ^ y;
}
static inline uint16_t xor16(uint16_t x, uint16_t y)
{
    return x ^ y;
}
static inline uint32_t xor32(uint32_t x, uint32_t y)
{
    return x ^ y;
}
static inline uint64_t xor64(uint64_t x, uint64_t y)
{
    return x ^ y;
}
static inline bool ult8(uint8_t x, uint8_t y)
{
    return x < y;
}
static inline bool ult16(uint16_t x, uint16_t y)
{
    return x < y;
}
static inline bool ult32(uint32_t x, uint32_t y)
{
    return x < y;
}
static inline bool ult64(uint64_t x, uint64_t y)
{
    return x < y;
}
static inline bool ule8(uint8_t x, uint8_t y)
{
    return x <= y;
}
static inline bool ule16(uint16_t x, uint16_t y)
{
    return x <= y;
}
static inline bool ule32(uint32_t x, uint32_t y)
{
    return x <= y;
}
static inline bool ule64(uint64_t x, uint64_t y)
{
    return x <= y;
}
static inline bool slt8(int8_t x, int8_t y)
{
    return x < y;
}
static inline bool slt16(int16_t x, int16_t y)
{
    return x < y;
}
static inline bool slt32(int32_t x, int32_t y)
{
    return x < y;
}
static inline bool slt64(int64_t x, int64_t y)
{
    return x < y;
}
static inline bool sle8(int8_t x, int8_t y)
{
    return x <= y;
}
static inline bool sle16(int16_t x, int16_t y)
{
    return x <= y;
}
static inline bool sle32(int32_t x, int32_t y)
{
    return x <= y;
}
static inline bool sle64(int64_t x, int64_t y)
{
    return x <= y;
}
static inline int8_t pow8(int8_t x, int8_t y)
{
    int8_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int16_t pow16(int16_t x, int16_t y)
{
    int16_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int32_t pow32(int32_t x, int32_t y)
{
    int32_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int64_t pow64(int64_t x, int64_t y)
{
    int64_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline bool itob_i8_bool(int8_t x)
{
    return x;
}
static inline bool itob_i16_bool(int16_t x)
{
    return x;
}
static inline bool itob_i32_bool(int32_t x)
{
    return x;
}
static inline bool itob_i64_bool(int64_t x)
{
    return x;
}
static inline int8_t btoi_bool_i8(bool x)
{
    return x;
}
static inline int16_t btoi_bool_i16(bool x)
{
    return x;
}
static inline int32_t btoi_bool_i32(bool x)
{
    return x;
}
static inline int64_t btoi_bool_i64(bool x)
{
    return x;
}
#define sext_i8_i8(x) ((int8_t) (int8_t) x)
#define sext_i8_i16(x) ((int16_t) (int8_t) x)
#define sext_i8_i32(x) ((int32_t) (int8_t) x)
#define sext_i8_i64(x) ((int64_t) (int8_t) x)
#define sext_i16_i8(x) ((int8_t) (int16_t) x)
#define sext_i16_i16(x) ((int16_t) (int16_t) x)
#define sext_i16_i32(x) ((int32_t) (int16_t) x)
#define sext_i16_i64(x) ((int64_t) (int16_t) x)
#define sext_i32_i8(x) ((int8_t) (int32_t) x)
#define sext_i32_i16(x) ((int16_t) (int32_t) x)
#define sext_i32_i32(x) ((int32_t) (int32_t) x)
#define sext_i32_i64(x) ((int64_t) (int32_t) x)
#define sext_i64_i8(x) ((int8_t) (int64_t) x)
#define sext_i64_i16(x) ((int16_t) (int64_t) x)
#define sext_i64_i32(x) ((int32_t) (int64_t) x)
#define sext_i64_i64(x) ((int64_t) (int64_t) x)
#define zext_i8_i8(x) ((int8_t) (uint8_t) x)
#define zext_i8_i16(x) ((int16_t) (uint8_t) x)
#define zext_i8_i32(x) ((int32_t) (uint8_t) x)
#define zext_i8_i64(x) ((int64_t) (uint8_t) x)
#define zext_i16_i8(x) ((int8_t) (uint16_t) x)
#define zext_i16_i16(x) ((int16_t) (uint16_t) x)
#define zext_i16_i32(x) ((int32_t) (uint16_t) x)
#define zext_i16_i64(x) ((int64_t) (uint16_t) x)
#define zext_i32_i8(x) ((int8_t) (uint32_t) x)
#define zext_i32_i16(x) ((int16_t) (uint32_t) x)
#define zext_i32_i32(x) ((int32_t) (uint32_t) x)
#define zext_i32_i64(x) ((int64_t) (uint32_t) x)
#define zext_i64_i8(x) ((int8_t) (uint64_t) x)
#define zext_i64_i16(x) ((int16_t) (uint64_t) x)
#define zext_i64_i32(x) ((int32_t) (uint64_t) x)
#define zext_i64_i64(x) ((int64_t) (uint64_t) x)
#if defined(__OPENCL_VERSION__)
static int32_t futrts_popc8(int8_t x)
{
    return popcount(x);
}
static int32_t futrts_popc16(int16_t x)
{
    return popcount(x);
}
static int32_t futrts_popc32(int32_t x)
{
    return popcount(x);
}
static int32_t futrts_popc64(int64_t x)
{
    return popcount(x);
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_popc8(int8_t x)
{
    return __popc(zext_i8_i32(x));
}
static int32_t futrts_popc16(int16_t x)
{
    return __popc(zext_i16_i32(x));
}
static int32_t futrts_popc32(int32_t x)
{
    return __popc(x);
}
static int32_t futrts_popc64(int64_t x)
{
    return __popcll(x);
}
#else
static int32_t futrts_popc8(int8_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc16(int16_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc32(int32_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc64(int64_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
#endif
#if defined(__OPENCL_VERSION__)
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    return mul_hi(a, b);
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    return mul_hi(a, b);
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    return mul_hi(a, b);
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    return mul_hi(a, b);
}
#elif defined(__CUDA_ARCH__)
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    uint16_t aa = a;
    uint16_t bb = b;
    
    return aa * bb >> 8;
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    uint32_t aa = a;
    uint32_t bb = b;
    
    return aa * bb >> 16;
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    return mulhi(a, b);
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    return mul64hi(a, b);
}
#else
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    uint16_t aa = a;
    uint16_t bb = b;
    
    return aa * bb >> 8;
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    uint32_t aa = a;
    uint32_t bb = b;
    
    return aa * bb >> 16;
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    uint64_t aa = a;
    uint64_t bb = b;
    
    return aa * bb >> 32;
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    __uint128_t aa = a;
    __uint128_t bb = b;
    
    return aa * bb >> 64;
}
#endif
#if defined(__OPENCL_VERSION__)
static uint8_t futrts_mad_hi8(uint8_t a, uint8_t b, uint8_t c)
{
    return mad_hi(a, b, c);
}
static uint16_t futrts_mad_hi16(uint16_t a, uint16_t b, uint16_t c)
{
    return mad_hi(a, b, c);
}
static uint32_t futrts_mad_hi32(uint32_t a, uint32_t b, uint32_t c)
{
    return mad_hi(a, b, c);
}
static uint64_t futrts_mad_hi64(uint64_t a, uint64_t b, uint64_t c)
{
    return mad_hi(a, b, c);
}
#else
static uint8_t futrts_mad_hi8(uint8_t a, uint8_t b, uint8_t c)
{
    return futrts_mul_hi8(a, b) + c;
}
static uint16_t futrts_mad_hi16(uint16_t a, uint16_t b, uint16_t c)
{
    return futrts_mul_hi16(a, b) + c;
}
static uint32_t futrts_mad_hi32(uint32_t a, uint32_t b, uint32_t c)
{
    return futrts_mul_hi32(a, b) + c;
}
static uint64_t futrts_mad_hi64(uint64_t a, uint64_t b, uint64_t c)
{
    return futrts_mul_hi64(a, b) + c;
}
#endif
#if defined(__OPENCL_VERSION__)
static int32_t futrts_clzz8(int8_t x)
{
    return clz(x);
}
static int32_t futrts_clzz16(int16_t x)
{
    return clz(x);
}
static int32_t futrts_clzz32(int32_t x)
{
    return clz(x);
}
static int32_t futrts_clzz64(int64_t x)
{
    return clz(x);
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_clzz8(int8_t x)
{
    return __clz(zext_i8_i32(x)) - 24;
}
static int32_t futrts_clzz16(int16_t x)
{
    return __clz(zext_i16_i32(x)) - 16;
}
static int32_t futrts_clzz32(int32_t x)
{
    return __clz(x);
}
static int32_t futrts_clzz64(int64_t x)
{
    return __clzll(x);
}
#else
static int32_t futrts_clzz8(int8_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz16(int16_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz32(int32_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz64(int64_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
#endif
#if defined(__OPENCL_VERSION__)
static int32_t futrts_ctzz8(int8_t x)
{
    int i = 0;
    
    for (; i < 8 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz16(int16_t x)
{
    int i = 0;
    
    for (; i < 16 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz32(int32_t x)
{
    int i = 0;
    
    for (; i < 32 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz64(int64_t x)
{
    int i = 0;
    
    for (; i < 64 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_ctzz8(int8_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 8 : y - 1;
}
static int32_t futrts_ctzz16(int16_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 16 : y - 1;
}
static int32_t futrts_ctzz32(int32_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 32 : y - 1;
}
static int32_t futrts_ctzz64(int64_t x)
{
    int y = __ffsll(x);
    
    return y == 0 ? 64 : y - 1;
}
#else
static int32_t futrts_ctzz8(int8_t x)
{
    return x == 0 ? 8 : __builtin_ctz((uint32_t) x);
}
static int32_t futrts_ctzz16(int16_t x)
{
    return x == 0 ? 16 : __builtin_ctz((uint32_t) x);
}
static int32_t futrts_ctzz32(int32_t x)
{
    return x == 0 ? 32 : __builtin_ctz(x);
}
static int32_t futrts_ctzz64(int64_t x)
{
    return x == 0 ? 64 : __builtin_ctzl(x);
}
#endif
static inline float fdiv32(float x, float y)
{
    return x / y;
}
static inline float fadd32(float x, float y)
{
    return x + y;
}
static inline float fsub32(float x, float y)
{
    return x - y;
}
static inline float fmul32(float x, float y)
{
    return x * y;
}
static inline float fmin32(float x, float y)
{
    return fmin(x, y);
}
static inline float fmax32(float x, float y)
{
    return fmax(x, y);
}
static inline float fpow32(float x, float y)
{
    return pow(x, y);
}
static inline bool cmplt32(float x, float y)
{
    return x < y;
}
static inline bool cmple32(float x, float y)
{
    return x <= y;
}
static inline float sitofp_i8_f32(int8_t x)
{
    return (float) x;
}
static inline float sitofp_i16_f32(int16_t x)
{
    return (float) x;
}
static inline float sitofp_i32_f32(int32_t x)
{
    return (float) x;
}
static inline float sitofp_i64_f32(int64_t x)
{
    return (float) x;
}
static inline float uitofp_i8_f32(uint8_t x)
{
    return (float) x;
}
static inline float uitofp_i16_f32(uint16_t x)
{
    return (float) x;
}
static inline float uitofp_i32_f32(uint32_t x)
{
    return (float) x;
}
static inline float uitofp_i64_f32(uint64_t x)
{
    return (float) x;
}
static inline int8_t fptosi_f32_i8(float x)
{
    return (int8_t) x;
}
static inline int16_t fptosi_f32_i16(float x)
{
    return (int16_t) x;
}
static inline int32_t fptosi_f32_i32(float x)
{
    return (int32_t) x;
}
static inline int64_t fptosi_f32_i64(float x)
{
    return (int64_t) x;
}
static inline uint8_t fptoui_f32_i8(float x)
{
    return (uint8_t) x;
}
static inline uint16_t fptoui_f32_i16(float x)
{
    return (uint16_t) x;
}
static inline uint32_t fptoui_f32_i32(float x)
{
    return (uint32_t) x;
}
static inline uint64_t fptoui_f32_i64(float x)
{
    return (uint64_t) x;
}
static inline float futrts_log32(float x)
{
    return log(x);
}
static inline float futrts_log2_32(float x)
{
    return log2(x);
}
static inline float futrts_log10_32(float x)
{
    return log10(x);
}
static inline float futrts_sqrt32(float x)
{
    return sqrt(x);
}
static inline float futrts_exp32(float x)
{
    return exp(x);
}
static inline float futrts_cos32(float x)
{
    return cos(x);
}
static inline float futrts_sin32(float x)
{
    return sin(x);
}
static inline float futrts_tan32(float x)
{
    return tan(x);
}
static inline float futrts_acos32(float x)
{
    return acos(x);
}
static inline float futrts_asin32(float x)
{
    return asin(x);
}
static inline float futrts_atan32(float x)
{
    return atan(x);
}
static inline float futrts_cosh32(float x)
{
    return cosh(x);
}
static inline float futrts_sinh32(float x)
{
    return sinh(x);
}
static inline float futrts_tanh32(float x)
{
    return tanh(x);
}
static inline float futrts_acosh32(float x)
{
    return acosh(x);
}
static inline float futrts_asinh32(float x)
{
    return asinh(x);
}
static inline float futrts_atanh32(float x)
{
    return atanh(x);
}
static inline float futrts_atan2_32(float x, float y)
{
    return atan2(x, y);
}
static inline float futrts_gamma32(float x)
{
    return tgamma(x);
}
static inline float futrts_lgamma32(float x)
{
    return lgamma(x);
}
static inline bool futrts_isnan32(float x)
{
    return isnan(x);
}
static inline bool futrts_isinf32(float x)
{
    return isinf(x);
}
static inline int32_t futrts_to_bits32(float x)
{
    union {
        float f;
        int32_t t;
    } p;
    
    p.f = x;
    return p.t;
}
static inline float futrts_from_bits32(int32_t x)
{
    union {
        int32_t f;
        float t;
    } p;
    
    p.f = x;
    return p.t;
}
#ifdef __OPENCL_VERSION__
static inline float fmod32(float x, float y)
{
    return fmod(x, y);
}
static inline float futrts_round32(float x)
{
    return rint(x);
}
static inline float futrts_floor32(float x)
{
    return floor(x);
}
static inline float futrts_ceil32(float x)
{
    return ceil(x);
}
static inline float futrts_lerp32(float v0, float v1, float t)
{
    return mix(v0, v1, t);
}
static inline float futrts_mad32(float a, float b, float c)
{
    return mad(a, b, c);
}
static inline float futrts_fma32(float a, float b, float c)
{
    return fma(a, b, c);
}
#else
static inline float fmod32(float x, float y)
{
    return fmodf(x, y);
}
static inline float futrts_round32(float x)
{
    return rintf(x);
}
static inline float futrts_floor32(float x)
{
    return floorf(x);
}
static inline float futrts_ceil32(float x)
{
    return ceilf(x);
}
static inline float futrts_lerp32(float v0, float v1, float t)
{
    return v0 + (v1 - v0) * t;
}
static inline float futrts_mad32(float a, float b, float c)
{
    return a * b + c;
}
static inline float futrts_fma32(float a, float b, float c)
{
    return fmaf(a, b, c);
}
#endif
// Start of atomics.h

inline int32_t atomic_add_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((int32_t*)p, x);
#else
  return atomic_add(p, x);
#endif
}

inline int32_t atomic_add_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((int32_t*)p, x);
#else
  return atomic_add(p, x);
#endif
}

inline float atomic_fadd_f32_global(volatile __global float *p, float x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((float*)p, x);
#else
  union { int32_t i; float f; } old;
  union { int32_t i; float f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg((volatile __global int32_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline float atomic_fadd_f32_local(volatile __local float *p, float x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((float*)p, x);
#else
  union { int32_t i; float f; } old;
  union { int32_t i; float f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg((volatile __local int32_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline int32_t atomic_smax_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline int32_t atomic_smax_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline int32_t atomic_smin_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline int32_t atomic_smin_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline uint32_t atomic_umax_i32_global(volatile __global uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline uint32_t atomic_umax_i32_local(volatile __local uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline uint32_t atomic_umin_i32_global(volatile __global uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline uint32_t atomic_umin_i32_local(volatile __local uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline int32_t atomic_and_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int32_t*)p, x);
#else
  return atomic_and(p, x);
#endif
}

inline int32_t atomic_and_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int32_t*)p, x);
#else
  return atomic_and(p, x);
#endif
}

inline int32_t atomic_or_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int32_t*)p, x);
#else
  return atomic_or(p, x);
#endif
}

inline int32_t atomic_or_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int32_t*)p, x);
#else
  return atomic_or(p, x);
#endif
}

inline int32_t atomic_xor_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_xor_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_xchg_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_xchg_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_cmpxchg_i32_global(volatile __global int32_t *p,
                                         int32_t cmp, int32_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((int32_t*)p, cmp, val);
#else
  return atomic_cmpxchg(p, cmp, val);
#endif
}

inline int32_t atomic_cmpxchg_i32_local(volatile __local int32_t *p,
                                         int32_t cmp, int32_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((int32_t*)p, cmp, val);
#else
  return atomic_cmpxchg(p, cmp, val);
#endif
}

// End of atomics.h




__kernel void builtinzhreplicate_f32zireplicate_45551(__global
                                                      unsigned char *mem_45547,
                                                      int32_t num_elems_45548,
                                                      float val_45549)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t replicate_gtid_45551;
    int32_t replicate_ltid_45552;
    int32_t replicate_gid_45553;
    
    replicate_gtid_45551 = get_global_id(0);
    replicate_ltid_45552 = get_local_id(0);
    replicate_gid_45553 = get_group_id(0);
    if (slt64(replicate_gtid_45551, num_elems_45548)) {
        ((__global float *) mem_45547)[sext_i32_i64(replicate_gtid_45551)] =
            val_45549;
    }
    
  error_0:
    return;
}
__kernel void builtinzhreplicate_i32zireplicate_45560(__global
                                                      unsigned char *mem_45556,
                                                      int32_t num_elems_45557,
                                                      int32_t val_45558)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t replicate_gtid_45560;
    int32_t replicate_ltid_45561;
    int32_t replicate_gid_45562;
    
    replicate_gtid_45560 = get_global_id(0);
    replicate_ltid_45561 = get_local_id(0);
    replicate_gid_45562 = get_group_id(0);
    if (slt64(replicate_gtid_45560, num_elems_45557)) {
        ((__global int32_t *) mem_45556)[sext_i32_i64(replicate_gtid_45560)] =
            val_45558;
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32(__local volatile
                                    int64_t *block_9_backing_aligned_0,
                                    int32_t destoffset_1, int32_t srcoffset_3,
                                    int32_t num_arrays_4, int32_t x_elems_5,
                                    int32_t y_elems_6, int32_t mulx_7,
                                    int32_t muly_8, __global
                                    unsigned char *destmem_0, __global
                                    unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_global_id_0_37;
    int32_t y_index_32 = get_group_id_1_41 * 32 + get_local_id_1_39;
    
    if (slt32(x_index_31, x_elems_5)) {
        for (int32_t j_43 = 0; j_43 < 4; j_43++) {
            int32_t index_in_35 = (y_index_32 + j_43 * 8) * x_elems_5 +
                    x_index_31;
            
            if (slt32(y_index_32 + j_43 * 8, y_elems_6)) {
                ((__local float *) block_9)[sext_i32_i64((get_local_id_1_39 +
                                                          j_43 * 8) * 33 +
                                            get_local_id_0_38)] = ((__global
                                                                    float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                                       index_in_35)];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 32 + get_local_id_0_38;
    y_index_32 = get_group_id_0_40 * 32 + get_local_id_1_39;
    if (slt32(x_index_31, y_elems_6)) {
        for (int32_t j_43 = 0; j_43 < 4; j_43++) {
            int32_t index_out_36 = (y_index_32 + j_43 * 8) * y_elems_6 +
                    x_index_31;
            
            if (slt32(y_index_32 + j_43 * 8, x_elems_5)) {
                ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                               index_out_36)] = ((__local
                                                                  float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                                    33 +
                                                                                    get_local_id_1_39 +
                                                                                    j_43 *
                                                                                    8)];
            }
        }
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_low_height(__local volatile
                                               int64_t *block_9_backing_aligned_0,
                                               int32_t destoffset_1,
                                               int32_t srcoffset_3,
                                               int32_t num_arrays_4,
                                               int32_t x_elems_5,
                                               int32_t y_elems_6,
                                               int32_t mulx_7, int32_t muly_8,
                                               __global
                                               unsigned char *destmem_0,
                                               __global unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_group_id_0_40 * 16 * mulx_7 + get_local_id_0_38 +
            srem32(get_local_id_1_39, mulx_7) * 16;
    int32_t y_index_32 = get_group_id_1_41 * 16 + squot32(get_local_id_1_39,
                                                          mulx_7);
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    
    if (slt32(x_index_31, x_elems_5) && slt32(y_index_32, y_elems_6)) {
        ((__local float *) block_9)[sext_i32_i64(get_local_id_1_39 * 17 +
                                    get_local_id_0_38)] = ((__global
                                                            float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                               index_in_35)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 16 + squot32(get_local_id_0_38, mulx_7);
    y_index_32 = get_group_id_0_40 * 16 * mulx_7 + get_local_id_1_39 +
        srem32(get_local_id_0_38, mulx_7) * 16;
    
    int32_t index_out_36 = y_index_32 * y_elems_6 + x_index_31;
    
    if (slt32(x_index_31, y_elems_6) && slt32(y_index_32, x_elems_5)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__local
                                                          float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                            17 +
                                                                            get_local_id_1_39)];
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_low_width(__local volatile
                                              int64_t *block_9_backing_aligned_0,
                                              int32_t destoffset_1,
                                              int32_t srcoffset_3,
                                              int32_t num_arrays_4,
                                              int32_t x_elems_5,
                                              int32_t y_elems_6, int32_t mulx_7,
                                              int32_t muly_8, __global
                                              unsigned char *destmem_0, __global
                                              unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_group_id_0_40 * 16 + squot32(get_local_id_0_38,
                                                          muly_8);
    int32_t y_index_32 = get_group_id_1_41 * 16 * muly_8 + get_local_id_1_39 +
            srem32(get_local_id_0_38, muly_8) * 16;
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    
    if (slt32(x_index_31, x_elems_5) && slt32(y_index_32, y_elems_6)) {
        ((__local float *) block_9)[sext_i32_i64(get_local_id_1_39 * 17 +
                                    get_local_id_0_38)] = ((__global
                                                            float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                               index_in_35)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 16 * muly_8 + get_local_id_0_38 +
        srem32(get_local_id_1_39, muly_8) * 16;
    y_index_32 = get_group_id_0_40 * 16 + squot32(get_local_id_1_39, muly_8);
    
    int32_t index_out_36 = y_index_32 * y_elems_6 + x_index_31;
    
    if (slt32(x_index_31, y_elems_6) && slt32(y_index_32, x_elems_5)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__local
                                                          float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                            17 +
                                                                            get_local_id_1_39)];
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_small(__local volatile
                                          int64_t *block_9_backing_aligned_0,
                                          int32_t destoffset_1,
                                          int32_t srcoffset_3,
                                          int32_t num_arrays_4,
                                          int32_t x_elems_5, int32_t y_elems_6,
                                          int32_t mulx_7, int32_t muly_8,
                                          __global unsigned char *destmem_0,
                                          __global unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = squot32(get_global_id_0_37, y_elems_6 *
                                          x_elems_5) * (y_elems_6 * x_elems_5);
    int32_t x_index_31 = squot32(srem32(get_global_id_0_37, y_elems_6 *
                                        x_elems_5), y_elems_6);
    int32_t y_index_32 = srem32(get_global_id_0_37, y_elems_6);
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    int32_t index_out_36 = x_index_31 * y_elems_6 + y_index_32;
    
    if (slt32(get_global_id_0_37, x_elems_5 * y_elems_6 * num_arrays_4)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__global
                                                          float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                             index_in_35)];
    }
    
  error_0:
    return;
}
__kernel void mainzicopy_45160(int64_t m_30871, int64_t nm_31022,
                               int64_t ctx_param_ext_43735,
                               int64_t ctx_param_ext_43736,
                               int64_t ctx_param_ext_43738, __global
                               unsigned char *mem_param_43740, __global
                               unsigned char *mem_43745)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_45160;
    int32_t copy_ltid_45161;
    int32_t copy_gid_45162;
    
    copy_gtid_45160 = get_global_id(0);
    copy_ltid_45161 = get_local_id(0);
    copy_gid_45162 = get_group_id(0);
    if (slt64(sext_i32_i64(copy_gtid_45160), m_30871 * nm_31022)) {
        ((__global float *) mem_43745)[(sext_i32_i64(copy_gtid_45160) -
                                        squot64(sext_i32_i64(copy_gtid_45160),
                                                nm_31022) * nm_31022) *
                                       m_30871 +
                                       squot64(sext_i32_i64(copy_gtid_45160),
                                               nm_31022)] = ((__global
                                                              float *) mem_param_43740)[ctx_param_ext_43735 +
                                                                                        (squot64(sext_i32_i64(copy_gtid_45160),
                                                                                                 nm_31022) *
                                                                                         ctx_param_ext_43736 +
                                                                                         (sext_i32_i64(copy_gtid_45160) -
                                                                                          squot64(sext_i32_i64(copy_gtid_45160),
                                                                                                  nm_31022) *
                                                                                          nm_31022) *
                                                                                         ctx_param_ext_43738)];
    }
    
  error_0:
    return;
}
__kernel void mainziscan_stage1_38949(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_45590_backing_aligned_0,
                                      int64_t N_30870, int64_t m_30871,
                                      int64_t N_30872, __global
                                      unsigned char *images_mem_43532, __global
                                      unsigned char *defunc_3_map_res_mem_44294,
                                      __global unsigned char *mem_44323,
                                      __global unsigned char *mem_44326,
                                      int32_t num_threads_45584)
{
    #define segscan_group_sizze_38966 (mainzisegscan_group_sizze_38943)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45590_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45590_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45585;
    int32_t local_tid_45586;
    int64_t group_sizze_45589;
    int32_t wave_sizze_45588;
    int32_t group_tid_45587;
    
    global_tid_45585 = get_global_id(0);
    local_tid_45586 = get_local_id(0);
    group_sizze_45589 = get_local_size(0);
    wave_sizze_45588 = LOCKSTEP_WIDTH;
    group_tid_45587 = get_group_id(0);
    
    int32_t phys_tid_38949;
    
    phys_tid_38949 = global_tid_45585;
    
    __local char *scan_arr_mem_45590;
    
    scan_arr_mem_45590 = (__local char *) scan_arr_mem_45590_backing_0;
    
    int64_t x_38971;
    int64_t x_38972;
    
    x_38971 = 0;
    for (int64_t j_45592 = 0; j_45592 < sdiv_up64(m_30871 * N_30870,
                                                  sext_i32_i64(num_threads_45584));
         j_45592++) {
        int64_t chunk_offset_45593 = segscan_group_sizze_38966 * j_45592 +
                sext_i32_i64(group_tid_45587) * (segscan_group_sizze_38966 *
                                                 sdiv_up64(m_30871 * N_30870,
                                                           sext_i32_i64(num_threads_45584)));
        int64_t flat_idx_45594 = chunk_offset_45593 +
                sext_i32_i64(local_tid_45586);
        int64_t gtid_38940 = squot64(flat_idx_45594, N_30870);
        int64_t gtid_38948 = flat_idx_45594 - squot64(flat_idx_45594, N_30870) *
                N_30870;
        
        // threads in bounds read input
        {
            if (slt64(gtid_38940, m_30871) && slt64(gtid_38948, N_30870)) {
                float x_38976 = ((__global
                                  float *) images_mem_43532)[gtid_38940 *
                                                             N_30872 +
                                                             gtid_38948];
                bool isnan_res_38978;
                
                isnan_res_38978 = futrts_isnan32(x_38976);
                
                bool cond_38979 = !isnan_res_38978;
                float defunc_0_f_res_38980;
                
                if (cond_38979) {
                    float x_38977 = ((__global
                                      float *) defunc_3_map_res_mem_44294)[gtid_38940 *
                                                                           N_30870 +
                                                                           gtid_38948];
                    float defunc_0_f_res_t_res_38981 = x_38976 - x_38977;
                    
                    defunc_0_f_res_38980 = defunc_0_f_res_t_res_38981;
                } else {
                    defunc_0_f_res_38980 = NAN;
                }
                
                bool isnan_res_38982;
                
                isnan_res_38982 = futrts_isnan32(defunc_0_f_res_38980);
                
                bool defunc_0_p_res_38983 = !isnan_res_38982;
                int64_t defunc_0_f_res_38984 =
                        btoi_bool_i64(defunc_0_p_res_38983);
                
                // write to-scan values to parameters
                {
                    x_38972 = defunc_0_f_res_38984;
                }
                // write mapped values results to global memory
                {
                    ((__global float *) mem_44326)[gtid_38940 * N_30870 +
                                                   gtid_38948] =
                        defunc_0_f_res_38980;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_38940, m_30871) && slt64(gtid_38948,
                                                          N_30870))) {
                    x_38972 = 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_38973 = add64(x_38971, x_38972);
                
                ((__local
                  int64_t *) scan_arr_mem_45590)[sext_i32_i64(local_tid_45586)] =
                    defunc_1_op_res_38973;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_45595;
            int64_t x_45596;
            int64_t x_45598;
            int64_t x_45599;
            bool ltid_in_bounds_45601;
            
            ltid_in_bounds_45601 = slt64(sext_i32_i64(local_tid_45586),
                                         segscan_group_sizze_38966);
            
            int32_t skip_threads_45602;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_45601) {
                    x_45596 = ((volatile __local
                                int64_t *) scan_arr_mem_45590)[sext_i32_i64(local_tid_45586)];
                    if ((local_tid_45586 - squot32(local_tid_45586, 32) * 32) ==
                        0) {
                        x_45595 = x_45596;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_45602 = 1;
                while (slt32(skip_threads_45602, 32)) {
                    if (sle32(skip_threads_45602, local_tid_45586 -
                              squot32(local_tid_45586, 32) * 32) &&
                        ltid_in_bounds_45601) {
                        // read operands
                        {
                            x_45595 = ((volatile __local
                                        int64_t *) scan_arr_mem_45590)[sext_i32_i64(local_tid_45586) -
                                                                       sext_i32_i64(skip_threads_45602)];
                        }
                        // perform operation
                        {
                            bool inactive_45603 =
                                 slt64(srem64(sext_i32_i64(local_tid_45586) +
                                              chunk_offset_45593, N_30870),
                                       sext_i32_i64(local_tid_45586) +
                                       chunk_offset_45593 -
                                       (sext_i32_i64(local_tid_45586 -
                                        skip_threads_45602) +
                                        chunk_offset_45593));
                            
                            if (inactive_45603) {
                                x_45595 = x_45596;
                            }
                            if (!inactive_45603) {
                                int64_t defunc_1_op_res_45597 = add64(x_45595,
                                                                      x_45596);
                                
                                x_45595 = defunc_1_op_res_45597;
                            }
                        }
                    }
                    if (sle32(wave_sizze_45588, skip_threads_45602)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_45602, local_tid_45586 -
                              squot32(local_tid_45586, 32) * 32) &&
                        ltid_in_bounds_45601) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_45590)[sext_i32_i64(local_tid_45586)] =
                                x_45595;
                            x_45596 = x_45595;
                        }
                    }
                    if (sle32(wave_sizze_45588, skip_threads_45602)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_45602 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_45586 - squot32(local_tid_45586, 32) * 32) ==
                    31 && ltid_in_bounds_45601) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_45590)[sext_i32_i64(squot32(local_tid_45586,
                                                                          32))] =
                        x_45595;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_45604;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_45586, 32) == 0 &&
                        ltid_in_bounds_45601) {
                        x_45599 = ((volatile __local
                                    int64_t *) scan_arr_mem_45590)[sext_i32_i64(local_tid_45586)];
                        if ((local_tid_45586 - squot32(local_tid_45586, 32) *
                             32) == 0) {
                            x_45598 = x_45599;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45604 = 1;
                    while (slt32(skip_threads_45604, 32)) {
                        if (sle32(skip_threads_45604, local_tid_45586 -
                                  squot32(local_tid_45586, 32) * 32) &&
                            (squot32(local_tid_45586, 32) == 0 &&
                             ltid_in_bounds_45601)) {
                            // read operands
                            {
                                x_45598 = ((volatile __local
                                            int64_t *) scan_arr_mem_45590)[sext_i32_i64(local_tid_45586) -
                                                                           sext_i32_i64(skip_threads_45604)];
                            }
                            // perform operation
                            {
                                bool inactive_45605 =
                                     slt64(srem64(sext_i32_i64(local_tid_45586 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_45593, N_30870),
                                           sext_i32_i64(local_tid_45586 * 32 +
                                           32 - 1) + chunk_offset_45593 -
                                           (sext_i32_i64((local_tid_45586 -
                                                          skip_threads_45604) *
                                            32 + 32 - 1) + chunk_offset_45593));
                                
                                if (inactive_45605) {
                                    x_45598 = x_45599;
                                }
                                if (!inactive_45605) {
                                    int64_t defunc_1_op_res_45600 =
                                            add64(x_45598, x_45599);
                                    
                                    x_45598 = defunc_1_op_res_45600;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45588, skip_threads_45604)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45604, local_tid_45586 -
                                  squot32(local_tid_45586, 32) * 32) &&
                            (squot32(local_tid_45586, 32) == 0 &&
                             ltid_in_bounds_45601)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_45590)[sext_i32_i64(local_tid_45586)] =
                                    x_45598;
                                x_45599 = x_45598;
                            }
                        }
                        if (sle32(wave_sizze_45588, skip_threads_45604)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45604 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_45586, 32) == 0 ||
                      !ltid_in_bounds_45601)) {
                    // read operands
                    {
                        x_45596 = x_45595;
                        x_45595 = ((__local
                                    int64_t *) scan_arr_mem_45590)[sext_i32_i64(squot32(local_tid_45586,
                                                                                        32)) -
                                                                   1];
                    }
                    // perform operation
                    {
                        bool inactive_45606 =
                             slt64(srem64(sext_i32_i64(local_tid_45586) +
                                          chunk_offset_45593, N_30870),
                                   sext_i32_i64(local_tid_45586) +
                                   chunk_offset_45593 -
                                   (sext_i32_i64(squot32(local_tid_45586, 32) *
                                    32 - 1) + chunk_offset_45593));
                        
                        if (inactive_45606) {
                            x_45595 = x_45596;
                        }
                        if (!inactive_45606) {
                            int64_t defunc_1_op_res_45597 = add64(x_45595,
                                                                  x_45596);
                            
                            x_45595 = defunc_1_op_res_45597;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_45590)[sext_i32_i64(local_tid_45586)] =
                            x_45595;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_45586, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_45590)[sext_i32_i64(local_tid_45586)] =
                        x_45596;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_38940, m_30871) && slt64(gtid_38948, N_30870)) {
                    ((__global int64_t *) mem_44323)[gtid_38940 * N_30870 +
                                                     gtid_38948] = ((__local
                                                                     int64_t *) scan_arr_mem_45590)[sext_i32_i64(local_tid_45586)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_45607 = slt64(srem64(chunk_offset_45593 +
                                                          segscan_group_sizze_38966,
                                                          N_30870),
                                                   chunk_offset_45593 +
                                                   segscan_group_sizze_38966 -
                                                   (chunk_offset_45593 +
                                                    segscan_group_sizze_38966 -
                                                    1));
                bool should_load_carry_45608 = local_tid_45586 == 0 &&
                     !crosses_segment_45607;
                
                if (should_load_carry_45608) {
                    x_38971 = ((__local
                                int64_t *) scan_arr_mem_45590)[segscan_group_sizze_38966 -
                                                               1];
                }
                if (!should_load_carry_45608) {
                    x_38971 = 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_38966
}
__kernel void mainziscan_stage1_40635(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_46208_backing_aligned_0,
                                      __local volatile
                                      int64_t *scan_arr_mem_46206_backing_aligned_1,
                                      __local volatile
                                      int64_t *scan_arr_mem_46204_backing_aligned_2,
                                      __local volatile
                                      int64_t *scan_arr_mem_46202_backing_aligned_3,
                                      int64_t m_30871, int64_t iota32_arg_31257,
                                      int32_t defunc_2_radix_sort_step_arg_41201,
                                      int32_t defunc_0_get_bit_arg_41202,
                                      unsigned char cond_f_res_41203,
                                      unsigned char cond_f_res_41204, __global
                                      unsigned char *mem_param_44627, __global
                                      unsigned char *mem_44654, __global
                                      unsigned char *mem_44657, __global
                                      unsigned char *mem_44660, __global
                                      unsigned char *mem_44663, __global
                                      unsigned char *mem_44666,
                                      int32_t num_threads_46196)
{
    #define segscan_group_sizze_41296 (mainzisegscan_group_sizze_40629)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_46208_backing_3 =
                          (__local volatile
                           char *) scan_arr_mem_46208_backing_aligned_0;
    __local volatile char *restrict scan_arr_mem_46206_backing_2 =
                          (__local volatile
                           char *) scan_arr_mem_46206_backing_aligned_1;
    __local volatile char *restrict scan_arr_mem_46204_backing_1 =
                          (__local volatile
                           char *) scan_arr_mem_46204_backing_aligned_2;
    __local volatile char *restrict scan_arr_mem_46202_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_46202_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46197;
    int32_t local_tid_46198;
    int64_t group_sizze_46201;
    int32_t wave_sizze_46200;
    int32_t group_tid_46199;
    
    global_tid_46197 = get_global_id(0);
    local_tid_46198 = get_local_id(0);
    group_sizze_46201 = get_local_size(0);
    wave_sizze_46200 = LOCKSTEP_WIDTH;
    group_tid_46199 = get_group_id(0);
    
    int32_t phys_tid_40635;
    
    phys_tid_40635 = global_tid_46197;
    
    __local char *scan_arr_mem_46202;
    __local char *scan_arr_mem_46204;
    __local char *scan_arr_mem_46206;
    __local char *scan_arr_mem_46208;
    
    scan_arr_mem_46202 = (__local char *) scan_arr_mem_46202_backing_0;
    scan_arr_mem_46204 = (__local char *) scan_arr_mem_46204_backing_1;
    scan_arr_mem_46206 = (__local char *) scan_arr_mem_46206_backing_2;
    scan_arr_mem_46208 = (__local char *) scan_arr_mem_46208_backing_3;
    
    int64_t x_41304;
    int64_t x_41305;
    int64_t x_41306;
    int64_t x_41307;
    int64_t x_41308;
    int64_t x_41309;
    int64_t x_41310;
    int64_t x_41311;
    
    x_41304 = 0;
    x_41305 = 0;
    x_41306 = 0;
    x_41307 = 0;
    for (int64_t j_46210 = 0; j_46210 < sdiv_up64(m_30871 * iota32_arg_31257,
                                                  sext_i32_i64(num_threads_46196));
         j_46210++) {
        int64_t chunk_offset_46211 = segscan_group_sizze_41296 * j_46210 +
                sext_i32_i64(group_tid_46199) * (segscan_group_sizze_41296 *
                                                 sdiv_up64(m_30871 *
                                                           iota32_arg_31257,
                                                           sext_i32_i64(num_threads_46196)));
        int64_t flat_idx_46212 = chunk_offset_46211 +
                sext_i32_i64(local_tid_46198);
        int64_t gtid_40626 = squot64(flat_idx_46212, iota32_arg_31257);
        int64_t gtid_40634 = flat_idx_46212 - squot64(flat_idx_46212,
                                                      iota32_arg_31257) *
                iota32_arg_31257;
        
        // threads in bounds read input
        {
            if (slt64(gtid_40626, m_30871) && slt64(gtid_40634,
                                                    iota32_arg_31257)) {
                float x_41317 = ((__global
                                  float *) mem_param_44627)[gtid_40626 *
                                                            iota32_arg_31257 +
                                                            gtid_40634];
                int32_t i32_arg_41318;
                
                i32_arg_41318 = futrts_to_bits32(x_41317);
                
                int32_t unsign_arg_41319 = ashr32(i32_arg_41318,
                                                  defunc_0_get_bit_arg_41202);
                int32_t unsign_arg_41320 = 1 & unsign_arg_41319;
                int32_t unsign_arg_41321 = ashr32(i32_arg_41318, 31);
                int32_t unsign_arg_41322 = 1 & unsign_arg_41321;
                bool cond_41323 = unsign_arg_41322 == 1;
                bool x_41324 = !cond_41323;
                bool y_41325 = cond_f_res_41203 && x_41324;
                bool cond_41326 = cond_41323 || y_41325;
                int32_t defunc_1_get_bit_res_41327;
                
                if (cond_41326) {
                    int32_t defunc_1_get_bit_res_t_res_41328 = 1 ^
                            unsign_arg_41320;
                    
                    defunc_1_get_bit_res_41327 =
                        defunc_1_get_bit_res_t_res_41328;
                } else {
                    defunc_1_get_bit_res_41327 = unsign_arg_41320;
                }
                
                int32_t x_41329 = mul32(2, defunc_1_get_bit_res_41327);
                int32_t unsign_arg_41330 = ashr32(i32_arg_41318,
                                                  defunc_2_radix_sort_step_arg_41201);
                int32_t unsign_arg_41331 = 1 & unsign_arg_41330;
                bool y_41332 = cond_f_res_41204 && x_41324;
                bool cond_41333 = cond_41323 || y_41332;
                int32_t defunc_1_get_bit_res_41334;
                
                if (cond_41333) {
                    int32_t defunc_1_get_bit_res_t_res_41335 = 1 ^
                            unsign_arg_41331;
                    
                    defunc_1_get_bit_res_41334 =
                        defunc_1_get_bit_res_t_res_41335;
                } else {
                    defunc_1_get_bit_res_41334 = unsign_arg_41331;
                }
                
                int32_t defunc_0_f_res_41336 = add32(x_41329,
                                                     defunc_1_get_bit_res_41334);
                bool cond_41337 = defunc_0_f_res_41336 == 0;
                int64_t defunc_0_f_res_41338 = btoi_bool_i64(cond_41337);
                int64_t defunc_0_f_res_41339;
                int64_t defunc_0_f_res_41340;
                int64_t defunc_0_f_res_41341;
                
                if (cond_41337) {
                    defunc_0_f_res_41339 = 0;
                    defunc_0_f_res_41340 = 0;
                    defunc_0_f_res_41341 = 0;
                } else {
                    bool cond_41342 = defunc_0_f_res_41336 == 1;
                    int64_t defunc_0_f_res_f_res_41343 =
                            btoi_bool_i64(cond_41342);
                    int64_t defunc_0_f_res_f_res_41344;
                    int64_t defunc_0_f_res_f_res_41345;
                    
                    if (cond_41342) {
                        defunc_0_f_res_f_res_41344 = 0;
                        defunc_0_f_res_f_res_41345 = 0;
                    } else {
                        bool cond_41346 = defunc_0_f_res_41336 == 2;
                        int64_t defunc_0_f_res_f_res_f_res_41347 =
                                btoi_bool_i64(cond_41346);
                        bool cond_neg_41348 = !cond_41346;
                        int64_t defunc_0_f_res_f_res_f_res_41349 =
                                btoi_bool_i64(cond_neg_41348);
                        
                        defunc_0_f_res_f_res_41344 =
                            defunc_0_f_res_f_res_f_res_41347;
                        defunc_0_f_res_f_res_41345 =
                            defunc_0_f_res_f_res_f_res_41349;
                    }
                    defunc_0_f_res_41339 = defunc_0_f_res_f_res_41343;
                    defunc_0_f_res_41340 = defunc_0_f_res_f_res_41344;
                    defunc_0_f_res_41341 = defunc_0_f_res_f_res_41345;
                }
                // write to-scan values to parameters
                {
                    x_41308 = defunc_0_f_res_41338;
                    x_41309 = defunc_0_f_res_41339;
                    x_41310 = defunc_0_f_res_41340;
                    x_41311 = defunc_0_f_res_41341;
                }
                // write mapped values results to global memory
                {
                    ((__global int32_t *) mem_44666)[gtid_40626 *
                                                     iota32_arg_31257 +
                                                     gtid_40634] =
                        defunc_0_f_res_41336;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_40626, m_30871) && slt64(gtid_40634,
                                                          iota32_arg_31257))) {
                    x_41308 = 0;
                    x_41309 = 0;
                    x_41310 = 0;
                    x_41311 = 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_41312 = add64(x_41304, x_41308);
                int64_t defunc_1_op_res_41313 = add64(x_41305, x_41309);
                int64_t defunc_1_op_res_41314 = add64(x_41306, x_41310);
                int64_t defunc_1_op_res_41315 = add64(x_41307, x_41311);
                
                ((__local
                  int64_t *) scan_arr_mem_46202)[sext_i32_i64(local_tid_46198)] =
                    defunc_1_op_res_41312;
                ((__local
                  int64_t *) scan_arr_mem_46204)[sext_i32_i64(local_tid_46198)] =
                    defunc_1_op_res_41313;
                ((__local
                  int64_t *) scan_arr_mem_46206)[sext_i32_i64(local_tid_46198)] =
                    defunc_1_op_res_41314;
                ((__local
                  int64_t *) scan_arr_mem_46208)[sext_i32_i64(local_tid_46198)] =
                    defunc_1_op_res_41315;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_46213;
            int64_t x_46214;
            int64_t x_46215;
            int64_t x_46216;
            int64_t x_46217;
            int64_t x_46218;
            int64_t x_46219;
            int64_t x_46220;
            int64_t x_46225;
            int64_t x_46226;
            int64_t x_46227;
            int64_t x_46228;
            int64_t x_46229;
            int64_t x_46230;
            int64_t x_46231;
            int64_t x_46232;
            bool ltid_in_bounds_46237;
            
            ltid_in_bounds_46237 = slt64(sext_i32_i64(local_tid_46198),
                                         segscan_group_sizze_41296);
            
            int32_t skip_threads_46238;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_46237) {
                    x_46217 = ((volatile __local
                                int64_t *) scan_arr_mem_46202)[sext_i32_i64(local_tid_46198)];
                    x_46218 = ((volatile __local
                                int64_t *) scan_arr_mem_46204)[sext_i32_i64(local_tid_46198)];
                    x_46219 = ((volatile __local
                                int64_t *) scan_arr_mem_46206)[sext_i32_i64(local_tid_46198)];
                    x_46220 = ((volatile __local
                                int64_t *) scan_arr_mem_46208)[sext_i32_i64(local_tid_46198)];
                    if ((local_tid_46198 - squot32(local_tid_46198, 32) * 32) ==
                        0) {
                        x_46213 = x_46217;
                        x_46214 = x_46218;
                        x_46215 = x_46219;
                        x_46216 = x_46220;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_46238 = 1;
                while (slt32(skip_threads_46238, 32)) {
                    if (sle32(skip_threads_46238, local_tid_46198 -
                              squot32(local_tid_46198, 32) * 32) &&
                        ltid_in_bounds_46237) {
                        // read operands
                        {
                            x_46213 = ((volatile __local
                                        int64_t *) scan_arr_mem_46202)[sext_i32_i64(local_tid_46198) -
                                                                       sext_i32_i64(skip_threads_46238)];
                            x_46214 = ((volatile __local
                                        int64_t *) scan_arr_mem_46204)[sext_i32_i64(local_tid_46198) -
                                                                       sext_i32_i64(skip_threads_46238)];
                            x_46215 = ((volatile __local
                                        int64_t *) scan_arr_mem_46206)[sext_i32_i64(local_tid_46198) -
                                                                       sext_i32_i64(skip_threads_46238)];
                            x_46216 = ((volatile __local
                                        int64_t *) scan_arr_mem_46208)[sext_i32_i64(local_tid_46198) -
                                                                       sext_i32_i64(skip_threads_46238)];
                        }
                        // perform operation
                        {
                            bool inactive_46239 =
                                 slt64(srem64(sext_i32_i64(local_tid_46198) +
                                              chunk_offset_46211,
                                              iota32_arg_31257),
                                       sext_i32_i64(local_tid_46198) +
                                       chunk_offset_46211 -
                                       (sext_i32_i64(local_tid_46198 -
                                        skip_threads_46238) +
                                        chunk_offset_46211));
                            
                            if (inactive_46239) {
                                x_46213 = x_46217;
                                x_46214 = x_46218;
                                x_46215 = x_46219;
                                x_46216 = x_46220;
                            }
                            if (!inactive_46239) {
                                int64_t defunc_1_op_res_46221 = add64(x_46213,
                                                                      x_46217);
                                int64_t defunc_1_op_res_46222 = add64(x_46214,
                                                                      x_46218);
                                int64_t defunc_1_op_res_46223 = add64(x_46215,
                                                                      x_46219);
                                int64_t defunc_1_op_res_46224 = add64(x_46216,
                                                                      x_46220);
                                
                                x_46213 = defunc_1_op_res_46221;
                                x_46214 = defunc_1_op_res_46222;
                                x_46215 = defunc_1_op_res_46223;
                                x_46216 = defunc_1_op_res_46224;
                            }
                        }
                    }
                    if (sle32(wave_sizze_46200, skip_threads_46238)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_46238, local_tid_46198 -
                              squot32(local_tid_46198, 32) * 32) &&
                        ltid_in_bounds_46237) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_46202)[sext_i32_i64(local_tid_46198)] =
                                x_46213;
                            x_46217 = x_46213;
                            ((volatile __local
                              int64_t *) scan_arr_mem_46204)[sext_i32_i64(local_tid_46198)] =
                                x_46214;
                            x_46218 = x_46214;
                            ((volatile __local
                              int64_t *) scan_arr_mem_46206)[sext_i32_i64(local_tid_46198)] =
                                x_46215;
                            x_46219 = x_46215;
                            ((volatile __local
                              int64_t *) scan_arr_mem_46208)[sext_i32_i64(local_tid_46198)] =
                                x_46216;
                            x_46220 = x_46216;
                        }
                    }
                    if (sle32(wave_sizze_46200, skip_threads_46238)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_46238 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_46198 - squot32(local_tid_46198, 32) * 32) ==
                    31 && ltid_in_bounds_46237) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_46202)[sext_i32_i64(squot32(local_tid_46198,
                                                                          32))] =
                        x_46213;
                    ((volatile __local
                      int64_t *) scan_arr_mem_46204)[sext_i32_i64(squot32(local_tid_46198,
                                                                          32))] =
                        x_46214;
                    ((volatile __local
                      int64_t *) scan_arr_mem_46206)[sext_i32_i64(squot32(local_tid_46198,
                                                                          32))] =
                        x_46215;
                    ((volatile __local
                      int64_t *) scan_arr_mem_46208)[sext_i32_i64(squot32(local_tid_46198,
                                                                          32))] =
                        x_46216;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_46240;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_46198, 32) == 0 &&
                        ltid_in_bounds_46237) {
                        x_46229 = ((volatile __local
                                    int64_t *) scan_arr_mem_46202)[sext_i32_i64(local_tid_46198)];
                        x_46230 = ((volatile __local
                                    int64_t *) scan_arr_mem_46204)[sext_i32_i64(local_tid_46198)];
                        x_46231 = ((volatile __local
                                    int64_t *) scan_arr_mem_46206)[sext_i32_i64(local_tid_46198)];
                        x_46232 = ((volatile __local
                                    int64_t *) scan_arr_mem_46208)[sext_i32_i64(local_tid_46198)];
                        if ((local_tid_46198 - squot32(local_tid_46198, 32) *
                             32) == 0) {
                            x_46225 = x_46229;
                            x_46226 = x_46230;
                            x_46227 = x_46231;
                            x_46228 = x_46232;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46240 = 1;
                    while (slt32(skip_threads_46240, 32)) {
                        if (sle32(skip_threads_46240, local_tid_46198 -
                                  squot32(local_tid_46198, 32) * 32) &&
                            (squot32(local_tid_46198, 32) == 0 &&
                             ltid_in_bounds_46237)) {
                            // read operands
                            {
                                x_46225 = ((volatile __local
                                            int64_t *) scan_arr_mem_46202)[sext_i32_i64(local_tid_46198) -
                                                                           sext_i32_i64(skip_threads_46240)];
                                x_46226 = ((volatile __local
                                            int64_t *) scan_arr_mem_46204)[sext_i32_i64(local_tid_46198) -
                                                                           sext_i32_i64(skip_threads_46240)];
                                x_46227 = ((volatile __local
                                            int64_t *) scan_arr_mem_46206)[sext_i32_i64(local_tid_46198) -
                                                                           sext_i32_i64(skip_threads_46240)];
                                x_46228 = ((volatile __local
                                            int64_t *) scan_arr_mem_46208)[sext_i32_i64(local_tid_46198) -
                                                                           sext_i32_i64(skip_threads_46240)];
                            }
                            // perform operation
                            {
                                bool inactive_46241 =
                                     slt64(srem64(sext_i32_i64(local_tid_46198 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_46211,
                                                  iota32_arg_31257),
                                           sext_i32_i64(local_tid_46198 * 32 +
                                           32 - 1) + chunk_offset_46211 -
                                           (sext_i32_i64((local_tid_46198 -
                                                          skip_threads_46240) *
                                            32 + 32 - 1) + chunk_offset_46211));
                                
                                if (inactive_46241) {
                                    x_46225 = x_46229;
                                    x_46226 = x_46230;
                                    x_46227 = x_46231;
                                    x_46228 = x_46232;
                                }
                                if (!inactive_46241) {
                                    int64_t defunc_1_op_res_46233 =
                                            add64(x_46225, x_46229);
                                    int64_t defunc_1_op_res_46234 =
                                            add64(x_46226, x_46230);
                                    int64_t defunc_1_op_res_46235 =
                                            add64(x_46227, x_46231);
                                    int64_t defunc_1_op_res_46236 =
                                            add64(x_46228, x_46232);
                                    
                                    x_46225 = defunc_1_op_res_46233;
                                    x_46226 = defunc_1_op_res_46234;
                                    x_46227 = defunc_1_op_res_46235;
                                    x_46228 = defunc_1_op_res_46236;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46200, skip_threads_46240)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46240, local_tid_46198 -
                                  squot32(local_tid_46198, 32) * 32) &&
                            (squot32(local_tid_46198, 32) == 0 &&
                             ltid_in_bounds_46237)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_46202)[sext_i32_i64(local_tid_46198)] =
                                    x_46225;
                                x_46229 = x_46225;
                                ((volatile __local
                                  int64_t *) scan_arr_mem_46204)[sext_i32_i64(local_tid_46198)] =
                                    x_46226;
                                x_46230 = x_46226;
                                ((volatile __local
                                  int64_t *) scan_arr_mem_46206)[sext_i32_i64(local_tid_46198)] =
                                    x_46227;
                                x_46231 = x_46227;
                                ((volatile __local
                                  int64_t *) scan_arr_mem_46208)[sext_i32_i64(local_tid_46198)] =
                                    x_46228;
                                x_46232 = x_46228;
                            }
                        }
                        if (sle32(wave_sizze_46200, skip_threads_46240)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46240 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_46198, 32) == 0 ||
                      !ltid_in_bounds_46237)) {
                    // read operands
                    {
                        x_46217 = x_46213;
                        x_46218 = x_46214;
                        x_46219 = x_46215;
                        x_46220 = x_46216;
                        x_46213 = ((__local
                                    int64_t *) scan_arr_mem_46202)[sext_i32_i64(squot32(local_tid_46198,
                                                                                        32)) -
                                                                   1];
                        x_46214 = ((__local
                                    int64_t *) scan_arr_mem_46204)[sext_i32_i64(squot32(local_tid_46198,
                                                                                        32)) -
                                                                   1];
                        x_46215 = ((__local
                                    int64_t *) scan_arr_mem_46206)[sext_i32_i64(squot32(local_tid_46198,
                                                                                        32)) -
                                                                   1];
                        x_46216 = ((__local
                                    int64_t *) scan_arr_mem_46208)[sext_i32_i64(squot32(local_tid_46198,
                                                                                        32)) -
                                                                   1];
                    }
                    // perform operation
                    {
                        bool inactive_46242 =
                             slt64(srem64(sext_i32_i64(local_tid_46198) +
                                          chunk_offset_46211, iota32_arg_31257),
                                   sext_i32_i64(local_tid_46198) +
                                   chunk_offset_46211 -
                                   (sext_i32_i64(squot32(local_tid_46198, 32) *
                                    32 - 1) + chunk_offset_46211));
                        
                        if (inactive_46242) {
                            x_46213 = x_46217;
                            x_46214 = x_46218;
                            x_46215 = x_46219;
                            x_46216 = x_46220;
                        }
                        if (!inactive_46242) {
                            int64_t defunc_1_op_res_46221 = add64(x_46213,
                                                                  x_46217);
                            int64_t defunc_1_op_res_46222 = add64(x_46214,
                                                                  x_46218);
                            int64_t defunc_1_op_res_46223 = add64(x_46215,
                                                                  x_46219);
                            int64_t defunc_1_op_res_46224 = add64(x_46216,
                                                                  x_46220);
                            
                            x_46213 = defunc_1_op_res_46221;
                            x_46214 = defunc_1_op_res_46222;
                            x_46215 = defunc_1_op_res_46223;
                            x_46216 = defunc_1_op_res_46224;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_46202)[sext_i32_i64(local_tid_46198)] =
                            x_46213;
                        ((__local
                          int64_t *) scan_arr_mem_46204)[sext_i32_i64(local_tid_46198)] =
                            x_46214;
                        ((__local
                          int64_t *) scan_arr_mem_46206)[sext_i32_i64(local_tid_46198)] =
                            x_46215;
                        ((__local
                          int64_t *) scan_arr_mem_46208)[sext_i32_i64(local_tid_46198)] =
                            x_46216;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_46198, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_46202)[sext_i32_i64(local_tid_46198)] =
                        x_46217;
                    ((__local
                      int64_t *) scan_arr_mem_46204)[sext_i32_i64(local_tid_46198)] =
                        x_46218;
                    ((__local
                      int64_t *) scan_arr_mem_46206)[sext_i32_i64(local_tid_46198)] =
                        x_46219;
                    ((__local
                      int64_t *) scan_arr_mem_46208)[sext_i32_i64(local_tid_46198)] =
                        x_46220;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_40626, m_30871) && slt64(gtid_40634,
                                                        iota32_arg_31257)) {
                    ((__global int64_t *) mem_44654)[gtid_40626 *
                                                     iota32_arg_31257 +
                                                     gtid_40634] = ((__local
                                                                     int64_t *) scan_arr_mem_46202)[sext_i32_i64(local_tid_46198)];
                    ((__global int64_t *) mem_44657)[gtid_40626 *
                                                     iota32_arg_31257 +
                                                     gtid_40634] = ((__local
                                                                     int64_t *) scan_arr_mem_46204)[sext_i32_i64(local_tid_46198)];
                    ((__global int64_t *) mem_44660)[gtid_40626 *
                                                     iota32_arg_31257 +
                                                     gtid_40634] = ((__local
                                                                     int64_t *) scan_arr_mem_46206)[sext_i32_i64(local_tid_46198)];
                    ((__global int64_t *) mem_44663)[gtid_40626 *
                                                     iota32_arg_31257 +
                                                     gtid_40634] = ((__local
                                                                     int64_t *) scan_arr_mem_46208)[sext_i32_i64(local_tid_46198)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_46243 = slt64(srem64(chunk_offset_46211 +
                                                          segscan_group_sizze_41296,
                                                          iota32_arg_31257),
                                                   chunk_offset_46211 +
                                                   segscan_group_sizze_41296 -
                                                   (chunk_offset_46211 +
                                                    segscan_group_sizze_41296 -
                                                    1));
                bool should_load_carry_46244 = local_tid_46198 == 0 &&
                     !crosses_segment_46243;
                
                if (should_load_carry_46244) {
                    x_41304 = ((__local
                                int64_t *) scan_arr_mem_46202)[segscan_group_sizze_41296 -
                                                               1];
                    x_41305 = ((__local
                                int64_t *) scan_arr_mem_46204)[segscan_group_sizze_41296 -
                                                               1];
                    x_41306 = ((__local
                                int64_t *) scan_arr_mem_46206)[segscan_group_sizze_41296 -
                                                               1];
                    x_41307 = ((__local
                                int64_t *) scan_arr_mem_46208)[segscan_group_sizze_41296 -
                                                               1];
                }
                if (!should_load_carry_46244) {
                    x_41304 = 0;
                    x_41305 = 0;
                    x_41306 = 0;
                    x_41307 = 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_41296
}
__kernel void mainziscan_stage1_40981(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_46007_backing_aligned_0,
                                      int64_t N_30870, int64_t m_30871,
                                      int64_t iota32_arg_31257, __global
                                      unsigned char *defunc_4_map_res_mem_44332,
                                      __global
                                      unsigned char *defunc_3_map_res_mem_44395,
                                      __global
                                      unsigned char *defunc_3_map_res_mem_44396,
                                      __global
                                      unsigned char *defunc_0_f_res_mem_44430,
                                      __global unsigned char *mem_44597,
                                      __global unsigned char *mem_44601,
                                      int32_t num_threads_46001)
{
    #define segscan_group_sizze_41059 (mainzisegscan_group_sizze_40975)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_46007_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_46007_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46002;
    int32_t local_tid_46003;
    int64_t group_sizze_46006;
    int32_t wave_sizze_46005;
    int32_t group_tid_46004;
    
    global_tid_46002 = get_global_id(0);
    local_tid_46003 = get_local_id(0);
    group_sizze_46006 = get_local_size(0);
    wave_sizze_46005 = LOCKSTEP_WIDTH;
    group_tid_46004 = get_group_id(0);
    
    int32_t phys_tid_40981;
    
    phys_tid_40981 = global_tid_46002;
    
    __local char *scan_arr_mem_46007;
    
    scan_arr_mem_46007 = (__local char *) scan_arr_mem_46007_backing_0;
    
    float x_41063;
    float x_41064;
    
    x_41063 = 0.0F;
    for (int64_t j_46009 = 0; j_46009 < sdiv_up64(m_30871 * iota32_arg_31257,
                                                  sext_i32_i64(num_threads_46001));
         j_46009++) {
        int64_t chunk_offset_46010 = segscan_group_sizze_41059 * j_46009 +
                sext_i32_i64(group_tid_46004) * (segscan_group_sizze_41059 *
                                                 sdiv_up64(m_30871 *
                                                           iota32_arg_31257,
                                                           sext_i32_i64(num_threads_46001)));
        int64_t flat_idx_46011 = chunk_offset_46010 +
                sext_i32_i64(local_tid_46003);
        int64_t gtid_40972 = squot64(flat_idx_46011, iota32_arg_31257);
        int64_t gtid_40980 = flat_idx_46011 - squot64(flat_idx_46011,
                                                      iota32_arg_31257) *
                iota32_arg_31257;
        
        // threads in bounds read input
        {
            if (slt64(gtid_40972, m_30871) && slt64(gtid_40980,
                                                    iota32_arg_31257)) {
                int32_t y_41070 = ((__global int32_t *) mem_44597)[gtid_40972];
                int32_t index_primexp_41542 = sext_i64_i32(gtid_40980);
                bool cond_41073 = sle32(y_41070, index_primexp_41542);
                float defunc_0_f_res_41074;
                
                if (cond_41073) {
                    defunc_0_f_res_41074 = 0.0F;
                } else {
                    int32_t x_41066 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44396)[gtid_40972];
                    int32_t x_41067 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44395)[gtid_40972];
                    float x_41068 = ((__global
                                      float *) defunc_0_f_res_mem_44430)[gtid_40972];
                    bool cond_41075 = index_primexp_41542 == 0;
                    float defunc_0_f_res_f_res_41076;
                    
                    if (cond_41075) {
                        defunc_0_f_res_f_res_41076 = x_41068;
                    } else {
                        int32_t i_41077 = add32(x_41066, index_primexp_41542);
                        int64_t i_41078 = sext_i32_i64(i_41077);
                        float x_41079 = ((__global
                                          float *) defunc_4_map_res_mem_44332)[gtid_40972 *
                                                                               N_30870 +
                                                                               i_41078];
                        int32_t x_41080 = sub32(x_41066, x_41067);
                        int32_t i_41081 = add32(x_41080, index_primexp_41542);
                        int64_t i_41082 = sext_i32_i64(i_41081);
                        float y_41083 = ((__global
                                          float *) defunc_4_map_res_mem_44332)[gtid_40972 *
                                                                               N_30870 +
                                                                               i_41082];
                        float defunc_0_f_res_f_res_f_res_41084 = x_41079 -
                              y_41083;
                        
                        defunc_0_f_res_f_res_41076 =
                            defunc_0_f_res_f_res_f_res_41084;
                    }
                    defunc_0_f_res_41074 = defunc_0_f_res_f_res_41076;
                }
                // write to-scan values to parameters
                {
                    x_41064 = defunc_0_f_res_41074;
                }
                // write mapped values results to global memory
                { }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_40972, m_30871) && slt64(gtid_40980,
                                                          iota32_arg_31257))) {
                    x_41064 = 0.0F;
                }
            }
            // combine with carry and write to local memory
            {
                float defunc_1_op_res_41065 = x_41063 + x_41064;
                
                ((__local
                  float *) scan_arr_mem_46007)[sext_i32_i64(local_tid_46003)] =
                    defunc_1_op_res_41065;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float x_46012;
            float x_46013;
            float x_46015;
            float x_46016;
            bool ltid_in_bounds_46018;
            
            ltid_in_bounds_46018 = slt64(sext_i32_i64(local_tid_46003),
                                         segscan_group_sizze_41059);
            
            int32_t skip_threads_46019;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_46018) {
                    x_46013 = ((volatile __local
                                float *) scan_arr_mem_46007)[sext_i32_i64(local_tid_46003)];
                    if ((local_tid_46003 - squot32(local_tid_46003, 32) * 32) ==
                        0) {
                        x_46012 = x_46013;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_46019 = 1;
                while (slt32(skip_threads_46019, 32)) {
                    if (sle32(skip_threads_46019, local_tid_46003 -
                              squot32(local_tid_46003, 32) * 32) &&
                        ltid_in_bounds_46018) {
                        // read operands
                        {
                            x_46012 = ((volatile __local
                                        float *) scan_arr_mem_46007)[sext_i32_i64(local_tid_46003) -
                                                                     sext_i32_i64(skip_threads_46019)];
                        }
                        // perform operation
                        {
                            bool inactive_46020 =
                                 slt64(srem64(sext_i32_i64(local_tid_46003) +
                                              chunk_offset_46010,
                                              iota32_arg_31257),
                                       sext_i32_i64(local_tid_46003) +
                                       chunk_offset_46010 -
                                       (sext_i32_i64(local_tid_46003 -
                                        skip_threads_46019) +
                                        chunk_offset_46010));
                            
                            if (inactive_46020) {
                                x_46012 = x_46013;
                            }
                            if (!inactive_46020) {
                                float defunc_1_op_res_46014 = x_46012 + x_46013;
                                
                                x_46012 = defunc_1_op_res_46014;
                            }
                        }
                    }
                    if (sle32(wave_sizze_46005, skip_threads_46019)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_46019, local_tid_46003 -
                              squot32(local_tid_46003, 32) * 32) &&
                        ltid_in_bounds_46018) {
                        // write result
                        {
                            ((volatile __local
                              float *) scan_arr_mem_46007)[sext_i32_i64(local_tid_46003)] =
                                x_46012;
                            x_46013 = x_46012;
                        }
                    }
                    if (sle32(wave_sizze_46005, skip_threads_46019)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_46019 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_46003 - squot32(local_tid_46003, 32) * 32) ==
                    31 && ltid_in_bounds_46018) {
                    ((volatile __local
                      float *) scan_arr_mem_46007)[sext_i32_i64(squot32(local_tid_46003,
                                                                        32))] =
                        x_46012;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_46021;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_46003, 32) == 0 &&
                        ltid_in_bounds_46018) {
                        x_46016 = ((volatile __local
                                    float *) scan_arr_mem_46007)[sext_i32_i64(local_tid_46003)];
                        if ((local_tid_46003 - squot32(local_tid_46003, 32) *
                             32) == 0) {
                            x_46015 = x_46016;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46021 = 1;
                    while (slt32(skip_threads_46021, 32)) {
                        if (sle32(skip_threads_46021, local_tid_46003 -
                                  squot32(local_tid_46003, 32) * 32) &&
                            (squot32(local_tid_46003, 32) == 0 &&
                             ltid_in_bounds_46018)) {
                            // read operands
                            {
                                x_46015 = ((volatile __local
                                            float *) scan_arr_mem_46007)[sext_i32_i64(local_tid_46003) -
                                                                         sext_i32_i64(skip_threads_46021)];
                            }
                            // perform operation
                            {
                                bool inactive_46022 =
                                     slt64(srem64(sext_i32_i64(local_tid_46003 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_46010,
                                                  iota32_arg_31257),
                                           sext_i32_i64(local_tid_46003 * 32 +
                                           32 - 1) + chunk_offset_46010 -
                                           (sext_i32_i64((local_tid_46003 -
                                                          skip_threads_46021) *
                                            32 + 32 - 1) + chunk_offset_46010));
                                
                                if (inactive_46022) {
                                    x_46015 = x_46016;
                                }
                                if (!inactive_46022) {
                                    float defunc_1_op_res_46017 = x_46015 +
                                          x_46016;
                                    
                                    x_46015 = defunc_1_op_res_46017;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46005, skip_threads_46021)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46021, local_tid_46003 -
                                  squot32(local_tid_46003, 32) * 32) &&
                            (squot32(local_tid_46003, 32) == 0 &&
                             ltid_in_bounds_46018)) {
                            // write result
                            {
                                ((volatile __local
                                  float *) scan_arr_mem_46007)[sext_i32_i64(local_tid_46003)] =
                                    x_46015;
                                x_46016 = x_46015;
                            }
                        }
                        if (sle32(wave_sizze_46005, skip_threads_46021)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46021 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_46003, 32) == 0 ||
                      !ltid_in_bounds_46018)) {
                    // read operands
                    {
                        x_46013 = x_46012;
                        x_46012 = ((__local
                                    float *) scan_arr_mem_46007)[sext_i32_i64(squot32(local_tid_46003,
                                                                                      32)) -
                                                                 1];
                    }
                    // perform operation
                    {
                        bool inactive_46023 =
                             slt64(srem64(sext_i32_i64(local_tid_46003) +
                                          chunk_offset_46010, iota32_arg_31257),
                                   sext_i32_i64(local_tid_46003) +
                                   chunk_offset_46010 -
                                   (sext_i32_i64(squot32(local_tid_46003, 32) *
                                    32 - 1) + chunk_offset_46010));
                        
                        if (inactive_46023) {
                            x_46012 = x_46013;
                        }
                        if (!inactive_46023) {
                            float defunc_1_op_res_46014 = x_46012 + x_46013;
                            
                            x_46012 = defunc_1_op_res_46014;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          float *) scan_arr_mem_46007)[sext_i32_i64(local_tid_46003)] =
                            x_46012;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_46003, 32) == 0) {
                    ((__local
                      float *) scan_arr_mem_46007)[sext_i32_i64(local_tid_46003)] =
                        x_46013;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_40972, m_30871) && slt64(gtid_40980,
                                                        iota32_arg_31257)) {
                    ((__global float *) mem_44601)[gtid_40972 *
                                                   iota32_arg_31257 +
                                                   gtid_40980] = ((__local
                                                                   float *) scan_arr_mem_46007)[sext_i32_i64(local_tid_46003)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_46024 = slt64(srem64(chunk_offset_46010 +
                                                          segscan_group_sizze_41059,
                                                          iota32_arg_31257),
                                                   chunk_offset_46010 +
                                                   segscan_group_sizze_41059 -
                                                   (chunk_offset_46010 +
                                                    segscan_group_sizze_41059 -
                                                    1));
                bool should_load_carry_46025 = local_tid_46003 == 0 &&
                     !crosses_segment_46024;
                
                if (should_load_carry_46025) {
                    x_41063 = ((__local
                                float *) scan_arr_mem_46007)[segscan_group_sizze_41059 -
                                                             1];
                }
                if (!should_load_carry_46025) {
                    x_41063 = 0.0F;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_41059
}
__kernel void mainziscan_stage2_38949(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_45614_backing_aligned_0,
                                      int64_t N_30870, int64_t m_30871, __global
                                      unsigned char *mem_44323,
                                      int64_t stage1_num_groups_45583,
                                      int32_t num_threads_45584)
{
    #define segscan_group_sizze_38966 (mainzisegscan_group_sizze_38943)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45614_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45614_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45609;
    int32_t local_tid_45610;
    int64_t group_sizze_45613;
    int32_t wave_sizze_45612;
    int32_t group_tid_45611;
    
    global_tid_45609 = get_global_id(0);
    local_tid_45610 = get_local_id(0);
    group_sizze_45613 = get_local_size(0);
    wave_sizze_45612 = LOCKSTEP_WIDTH;
    group_tid_45611 = get_group_id(0);
    
    int32_t phys_tid_38949;
    
    phys_tid_38949 = global_tid_45609;
    
    __local char *scan_arr_mem_45614;
    
    scan_arr_mem_45614 = (__local char *) scan_arr_mem_45614_backing_0;
    
    int64_t flat_idx_45616;
    
    flat_idx_45616 = (sext_i32_i64(local_tid_45610) + 1) *
        (segscan_group_sizze_38966 * sdiv_up64(m_30871 * N_30870,
                                               sext_i32_i64(num_threads_45584))) -
        1;
    
    int64_t gtid_38940;
    
    gtid_38940 = squot64(flat_idx_45616, N_30870);
    
    int64_t gtid_38948;
    
    gtid_38948 = flat_idx_45616 - squot64(flat_idx_45616, N_30870) * N_30870;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_38940, m_30871) && slt64(gtid_38948, N_30870)) {
            ((__local
              int64_t *) scan_arr_mem_45614)[sext_i32_i64(local_tid_45610)] =
                ((__global int64_t *) mem_44323)[gtid_38940 * N_30870 +
                                                 gtid_38948];
        } else {
            ((__local
              int64_t *) scan_arr_mem_45614)[sext_i32_i64(local_tid_45610)] = 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_38971;
    int64_t x_38972;
    int64_t x_45617;
    int64_t x_45618;
    bool ltid_in_bounds_45620;
    
    ltid_in_bounds_45620 = slt64(sext_i32_i64(local_tid_45610),
                                 stage1_num_groups_45583);
    
    int32_t skip_threads_45621;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45620) {
            x_38972 = ((volatile __local
                        int64_t *) scan_arr_mem_45614)[sext_i32_i64(local_tid_45610)];
            if ((local_tid_45610 - squot32(local_tid_45610, 32) * 32) == 0) {
                x_38971 = x_38972;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45621 = 1;
        while (slt32(skip_threads_45621, 32)) {
            if (sle32(skip_threads_45621, local_tid_45610 -
                      squot32(local_tid_45610, 32) * 32) &&
                ltid_in_bounds_45620) {
                // read operands
                {
                    x_38971 = ((volatile __local
                                int64_t *) scan_arr_mem_45614)[sext_i32_i64(local_tid_45610) -
                                                               sext_i32_i64(skip_threads_45621)];
                }
                // perform operation
                {
                    bool inactive_45622 =
                         slt64(srem64((sext_i32_i64(local_tid_45610) + 1) *
                                      (segscan_group_sizze_38966 *
                                       sdiv_up64(m_30871 * N_30870,
                                                 sext_i32_i64(num_threads_45584))) -
                                      1, N_30870),
                               (sext_i32_i64(local_tid_45610) + 1) *
                               (segscan_group_sizze_38966 * sdiv_up64(m_30871 *
                                                                      N_30870,
                                                                      sext_i32_i64(num_threads_45584))) -
                               1 - ((sext_i32_i64(local_tid_45610 -
                                     skip_threads_45621) + 1) *
                                    (segscan_group_sizze_38966 *
                                     sdiv_up64(m_30871 * N_30870,
                                               sext_i32_i64(num_threads_45584))) -
                                    1));
                    
                    if (inactive_45622) {
                        x_38971 = x_38972;
                    }
                    if (!inactive_45622) {
                        int64_t defunc_1_op_res_38973 = add64(x_38971, x_38972);
                        
                        x_38971 = defunc_1_op_res_38973;
                    }
                }
            }
            if (sle32(wave_sizze_45612, skip_threads_45621)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45621, local_tid_45610 -
                      squot32(local_tid_45610, 32) * 32) &&
                ltid_in_bounds_45620) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_45614)[sext_i32_i64(local_tid_45610)] =
                        x_38971;
                    x_38972 = x_38971;
                }
            }
            if (sle32(wave_sizze_45612, skip_threads_45621)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45621 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45610 - squot32(local_tid_45610, 32) * 32) == 31 &&
            ltid_in_bounds_45620) {
            ((volatile __local
              int64_t *) scan_arr_mem_45614)[sext_i32_i64(squot32(local_tid_45610,
                                                                  32))] =
                x_38971;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45623;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45610, 32) == 0 && ltid_in_bounds_45620) {
                x_45618 = ((volatile __local
                            int64_t *) scan_arr_mem_45614)[sext_i32_i64(local_tid_45610)];
                if ((local_tid_45610 - squot32(local_tid_45610, 32) * 32) ==
                    0) {
                    x_45617 = x_45618;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45623 = 1;
            while (slt32(skip_threads_45623, 32)) {
                if (sle32(skip_threads_45623, local_tid_45610 -
                          squot32(local_tid_45610, 32) * 32) &&
                    (squot32(local_tid_45610, 32) == 0 &&
                     ltid_in_bounds_45620)) {
                    // read operands
                    {
                        x_45617 = ((volatile __local
                                    int64_t *) scan_arr_mem_45614)[sext_i32_i64(local_tid_45610) -
                                                                   sext_i32_i64(skip_threads_45623)];
                    }
                    // perform operation
                    {
                        bool inactive_45624 =
                             slt64(srem64((sext_i32_i64(local_tid_45610 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_38966 *
                                           sdiv_up64(m_30871 * N_30870,
                                                     sext_i32_i64(num_threads_45584))) -
                                          1, N_30870),
                                   (sext_i32_i64(local_tid_45610 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_38966 *
                                               sdiv_up64(m_30871 * N_30870,
                                                         sext_i32_i64(num_threads_45584))) -
                                   1 - ((sext_i32_i64((local_tid_45610 -
                                                       skip_threads_45623) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_38966 *
                                         sdiv_up64(m_30871 * N_30870,
                                                   sext_i32_i64(num_threads_45584))) -
                                        1));
                        
                        if (inactive_45624) {
                            x_45617 = x_45618;
                        }
                        if (!inactive_45624) {
                            int64_t defunc_1_op_res_45619 = add64(x_45617,
                                                                  x_45618);
                            
                            x_45617 = defunc_1_op_res_45619;
                        }
                    }
                }
                if (sle32(wave_sizze_45612, skip_threads_45623)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45623, local_tid_45610 -
                          squot32(local_tid_45610, 32) * 32) &&
                    (squot32(local_tid_45610, 32) == 0 &&
                     ltid_in_bounds_45620)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_45614)[sext_i32_i64(local_tid_45610)] =
                            x_45617;
                        x_45618 = x_45617;
                    }
                }
                if (sle32(wave_sizze_45612, skip_threads_45623)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45623 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45610, 32) == 0 || !ltid_in_bounds_45620)) {
            // read operands
            {
                x_38972 = x_38971;
                x_38971 = ((__local
                            int64_t *) scan_arr_mem_45614)[sext_i32_i64(squot32(local_tid_45610,
                                                                                32)) -
                                                           1];
            }
            // perform operation
            {
                bool inactive_45625 =
                     slt64(srem64((sext_i32_i64(local_tid_45610) + 1) *
                                  (segscan_group_sizze_38966 *
                                   sdiv_up64(m_30871 * N_30870,
                                             sext_i32_i64(num_threads_45584))) -
                                  1, N_30870), (sext_i32_i64(local_tid_45610) +
                                                1) *
                           (segscan_group_sizze_38966 * sdiv_up64(m_30871 *
                                                                  N_30870,
                                                                  sext_i32_i64(num_threads_45584))) -
                           1 - ((sext_i32_i64(squot32(local_tid_45610, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_38966 *
                                                 sdiv_up64(m_30871 * N_30870,
                                                           sext_i32_i64(num_threads_45584))) -
                                1));
                
                if (inactive_45625) {
                    x_38971 = x_38972;
                }
                if (!inactive_45625) {
                    int64_t defunc_1_op_res_38973 = add64(x_38971, x_38972);
                    
                    x_38971 = defunc_1_op_res_38973;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_45614)[sext_i32_i64(local_tid_45610)] =
                    x_38971;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45610, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_45614)[sext_i32_i64(local_tid_45610)] =
                x_38972;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_38940, m_30871) && slt64(gtid_38948, N_30870)) {
            ((__global int64_t *) mem_44323)[gtid_38940 * N_30870 +
                                             gtid_38948] = ((__local
                                                             int64_t *) scan_arr_mem_45614)[sext_i32_i64(local_tid_45610)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_38966
}
__kernel void mainziscan_stage2_40635(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_46256_backing_aligned_0,
                                      __local volatile
                                      int64_t *scan_arr_mem_46254_backing_aligned_1,
                                      __local volatile
                                      int64_t *scan_arr_mem_46252_backing_aligned_2,
                                      __local volatile
                                      int64_t *scan_arr_mem_46250_backing_aligned_3,
                                      int64_t m_30871, int64_t iota32_arg_31257,
                                      __global unsigned char *mem_44654,
                                      __global unsigned char *mem_44657,
                                      __global unsigned char *mem_44660,
                                      __global unsigned char *mem_44663,
                                      int64_t stage1_num_groups_46195,
                                      int32_t num_threads_46196)
{
    #define segscan_group_sizze_41296 (mainzisegscan_group_sizze_40629)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_46256_backing_3 =
                          (__local volatile
                           char *) scan_arr_mem_46256_backing_aligned_0;
    __local volatile char *restrict scan_arr_mem_46254_backing_2 =
                          (__local volatile
                           char *) scan_arr_mem_46254_backing_aligned_1;
    __local volatile char *restrict scan_arr_mem_46252_backing_1 =
                          (__local volatile
                           char *) scan_arr_mem_46252_backing_aligned_2;
    __local volatile char *restrict scan_arr_mem_46250_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_46250_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46245;
    int32_t local_tid_46246;
    int64_t group_sizze_46249;
    int32_t wave_sizze_46248;
    int32_t group_tid_46247;
    
    global_tid_46245 = get_global_id(0);
    local_tid_46246 = get_local_id(0);
    group_sizze_46249 = get_local_size(0);
    wave_sizze_46248 = LOCKSTEP_WIDTH;
    group_tid_46247 = get_group_id(0);
    
    int32_t phys_tid_40635;
    
    phys_tid_40635 = global_tid_46245;
    
    __local char *scan_arr_mem_46250;
    __local char *scan_arr_mem_46252;
    __local char *scan_arr_mem_46254;
    __local char *scan_arr_mem_46256;
    
    scan_arr_mem_46250 = (__local char *) scan_arr_mem_46250_backing_0;
    scan_arr_mem_46252 = (__local char *) scan_arr_mem_46252_backing_1;
    scan_arr_mem_46254 = (__local char *) scan_arr_mem_46254_backing_2;
    scan_arr_mem_46256 = (__local char *) scan_arr_mem_46256_backing_3;
    
    int64_t flat_idx_46258;
    
    flat_idx_46258 = (sext_i32_i64(local_tid_46246) + 1) *
        (segscan_group_sizze_41296 * sdiv_up64(m_30871 * iota32_arg_31257,
                                               sext_i32_i64(num_threads_46196))) -
        1;
    
    int64_t gtid_40626;
    
    gtid_40626 = squot64(flat_idx_46258, iota32_arg_31257);
    
    int64_t gtid_40634;
    
    gtid_40634 = flat_idx_46258 - squot64(flat_idx_46258, iota32_arg_31257) *
        iota32_arg_31257;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_40626, m_30871) && slt64(gtid_40634, iota32_arg_31257)) {
            ((__local
              int64_t *) scan_arr_mem_46250)[sext_i32_i64(local_tid_46246)] =
                ((__global int64_t *) mem_44654)[gtid_40626 * iota32_arg_31257 +
                                                 gtid_40634];
            ((__local
              int64_t *) scan_arr_mem_46252)[sext_i32_i64(local_tid_46246)] =
                ((__global int64_t *) mem_44657)[gtid_40626 * iota32_arg_31257 +
                                                 gtid_40634];
            ((__local
              int64_t *) scan_arr_mem_46254)[sext_i32_i64(local_tid_46246)] =
                ((__global int64_t *) mem_44660)[gtid_40626 * iota32_arg_31257 +
                                                 gtid_40634];
            ((__local
              int64_t *) scan_arr_mem_46256)[sext_i32_i64(local_tid_46246)] =
                ((__global int64_t *) mem_44663)[gtid_40626 * iota32_arg_31257 +
                                                 gtid_40634];
        } else {
            ((__local
              int64_t *) scan_arr_mem_46250)[sext_i32_i64(local_tid_46246)] = 0;
            ((__local
              int64_t *) scan_arr_mem_46252)[sext_i32_i64(local_tid_46246)] = 0;
            ((__local
              int64_t *) scan_arr_mem_46254)[sext_i32_i64(local_tid_46246)] = 0;
            ((__local
              int64_t *) scan_arr_mem_46256)[sext_i32_i64(local_tid_46246)] = 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_41304;
    int64_t x_41305;
    int64_t x_41306;
    int64_t x_41307;
    int64_t x_41308;
    int64_t x_41309;
    int64_t x_41310;
    int64_t x_41311;
    int64_t x_46259;
    int64_t x_46260;
    int64_t x_46261;
    int64_t x_46262;
    int64_t x_46263;
    int64_t x_46264;
    int64_t x_46265;
    int64_t x_46266;
    bool ltid_in_bounds_46271;
    
    ltid_in_bounds_46271 = slt64(sext_i32_i64(local_tid_46246),
                                 stage1_num_groups_46195);
    
    int32_t skip_threads_46272;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_46271) {
            x_41308 = ((volatile __local
                        int64_t *) scan_arr_mem_46250)[sext_i32_i64(local_tid_46246)];
            x_41309 = ((volatile __local
                        int64_t *) scan_arr_mem_46252)[sext_i32_i64(local_tid_46246)];
            x_41310 = ((volatile __local
                        int64_t *) scan_arr_mem_46254)[sext_i32_i64(local_tid_46246)];
            x_41311 = ((volatile __local
                        int64_t *) scan_arr_mem_46256)[sext_i32_i64(local_tid_46246)];
            if ((local_tid_46246 - squot32(local_tid_46246, 32) * 32) == 0) {
                x_41304 = x_41308;
                x_41305 = x_41309;
                x_41306 = x_41310;
                x_41307 = x_41311;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_46272 = 1;
        while (slt32(skip_threads_46272, 32)) {
            if (sle32(skip_threads_46272, local_tid_46246 -
                      squot32(local_tid_46246, 32) * 32) &&
                ltid_in_bounds_46271) {
                // read operands
                {
                    x_41304 = ((volatile __local
                                int64_t *) scan_arr_mem_46250)[sext_i32_i64(local_tid_46246) -
                                                               sext_i32_i64(skip_threads_46272)];
                    x_41305 = ((volatile __local
                                int64_t *) scan_arr_mem_46252)[sext_i32_i64(local_tid_46246) -
                                                               sext_i32_i64(skip_threads_46272)];
                    x_41306 = ((volatile __local
                                int64_t *) scan_arr_mem_46254)[sext_i32_i64(local_tid_46246) -
                                                               sext_i32_i64(skip_threads_46272)];
                    x_41307 = ((volatile __local
                                int64_t *) scan_arr_mem_46256)[sext_i32_i64(local_tid_46246) -
                                                               sext_i32_i64(skip_threads_46272)];
                }
                // perform operation
                {
                    bool inactive_46273 =
                         slt64(srem64((sext_i32_i64(local_tid_46246) + 1) *
                                      (segscan_group_sizze_41296 *
                                       sdiv_up64(m_30871 * iota32_arg_31257,
                                                 sext_i32_i64(num_threads_46196))) -
                                      1, iota32_arg_31257),
                               (sext_i32_i64(local_tid_46246) + 1) *
                               (segscan_group_sizze_41296 * sdiv_up64(m_30871 *
                                                                      iota32_arg_31257,
                                                                      sext_i32_i64(num_threads_46196))) -
                               1 - ((sext_i32_i64(local_tid_46246 -
                                     skip_threads_46272) + 1) *
                                    (segscan_group_sizze_41296 *
                                     sdiv_up64(m_30871 * iota32_arg_31257,
                                               sext_i32_i64(num_threads_46196))) -
                                    1));
                    
                    if (inactive_46273) {
                        x_41304 = x_41308;
                        x_41305 = x_41309;
                        x_41306 = x_41310;
                        x_41307 = x_41311;
                    }
                    if (!inactive_46273) {
                        int64_t defunc_1_op_res_41312 = add64(x_41304, x_41308);
                        int64_t defunc_1_op_res_41313 = add64(x_41305, x_41309);
                        int64_t defunc_1_op_res_41314 = add64(x_41306, x_41310);
                        int64_t defunc_1_op_res_41315 = add64(x_41307, x_41311);
                        
                        x_41304 = defunc_1_op_res_41312;
                        x_41305 = defunc_1_op_res_41313;
                        x_41306 = defunc_1_op_res_41314;
                        x_41307 = defunc_1_op_res_41315;
                    }
                }
            }
            if (sle32(wave_sizze_46248, skip_threads_46272)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_46272, local_tid_46246 -
                      squot32(local_tid_46246, 32) * 32) &&
                ltid_in_bounds_46271) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_46250)[sext_i32_i64(local_tid_46246)] =
                        x_41304;
                    x_41308 = x_41304;
                    ((volatile __local
                      int64_t *) scan_arr_mem_46252)[sext_i32_i64(local_tid_46246)] =
                        x_41305;
                    x_41309 = x_41305;
                    ((volatile __local
                      int64_t *) scan_arr_mem_46254)[sext_i32_i64(local_tid_46246)] =
                        x_41306;
                    x_41310 = x_41306;
                    ((volatile __local
                      int64_t *) scan_arr_mem_46256)[sext_i32_i64(local_tid_46246)] =
                        x_41307;
                    x_41311 = x_41307;
                }
            }
            if (sle32(wave_sizze_46248, skip_threads_46272)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_46272 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_46246 - squot32(local_tid_46246, 32) * 32) == 31 &&
            ltid_in_bounds_46271) {
            ((volatile __local
              int64_t *) scan_arr_mem_46250)[sext_i32_i64(squot32(local_tid_46246,
                                                                  32))] =
                x_41304;
            ((volatile __local
              int64_t *) scan_arr_mem_46252)[sext_i32_i64(squot32(local_tid_46246,
                                                                  32))] =
                x_41305;
            ((volatile __local
              int64_t *) scan_arr_mem_46254)[sext_i32_i64(squot32(local_tid_46246,
                                                                  32))] =
                x_41306;
            ((volatile __local
              int64_t *) scan_arr_mem_46256)[sext_i32_i64(squot32(local_tid_46246,
                                                                  32))] =
                x_41307;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_46274;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_46246, 32) == 0 && ltid_in_bounds_46271) {
                x_46263 = ((volatile __local
                            int64_t *) scan_arr_mem_46250)[sext_i32_i64(local_tid_46246)];
                x_46264 = ((volatile __local
                            int64_t *) scan_arr_mem_46252)[sext_i32_i64(local_tid_46246)];
                x_46265 = ((volatile __local
                            int64_t *) scan_arr_mem_46254)[sext_i32_i64(local_tid_46246)];
                x_46266 = ((volatile __local
                            int64_t *) scan_arr_mem_46256)[sext_i32_i64(local_tid_46246)];
                if ((local_tid_46246 - squot32(local_tid_46246, 32) * 32) ==
                    0) {
                    x_46259 = x_46263;
                    x_46260 = x_46264;
                    x_46261 = x_46265;
                    x_46262 = x_46266;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_46274 = 1;
            while (slt32(skip_threads_46274, 32)) {
                if (sle32(skip_threads_46274, local_tid_46246 -
                          squot32(local_tid_46246, 32) * 32) &&
                    (squot32(local_tid_46246, 32) == 0 &&
                     ltid_in_bounds_46271)) {
                    // read operands
                    {
                        x_46259 = ((volatile __local
                                    int64_t *) scan_arr_mem_46250)[sext_i32_i64(local_tid_46246) -
                                                                   sext_i32_i64(skip_threads_46274)];
                        x_46260 = ((volatile __local
                                    int64_t *) scan_arr_mem_46252)[sext_i32_i64(local_tid_46246) -
                                                                   sext_i32_i64(skip_threads_46274)];
                        x_46261 = ((volatile __local
                                    int64_t *) scan_arr_mem_46254)[sext_i32_i64(local_tid_46246) -
                                                                   sext_i32_i64(skip_threads_46274)];
                        x_46262 = ((volatile __local
                                    int64_t *) scan_arr_mem_46256)[sext_i32_i64(local_tid_46246) -
                                                                   sext_i32_i64(skip_threads_46274)];
                    }
                    // perform operation
                    {
                        bool inactive_46275 =
                             slt64(srem64((sext_i32_i64(local_tid_46246 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_41296 *
                                           sdiv_up64(m_30871 * iota32_arg_31257,
                                                     sext_i32_i64(num_threads_46196))) -
                                          1, iota32_arg_31257),
                                   (sext_i32_i64(local_tid_46246 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_41296 *
                                               sdiv_up64(m_30871 *
                                                         iota32_arg_31257,
                                                         sext_i32_i64(num_threads_46196))) -
                                   1 - ((sext_i32_i64((local_tid_46246 -
                                                       skip_threads_46274) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_41296 *
                                         sdiv_up64(m_30871 * iota32_arg_31257,
                                                   sext_i32_i64(num_threads_46196))) -
                                        1));
                        
                        if (inactive_46275) {
                            x_46259 = x_46263;
                            x_46260 = x_46264;
                            x_46261 = x_46265;
                            x_46262 = x_46266;
                        }
                        if (!inactive_46275) {
                            int64_t defunc_1_op_res_46267 = add64(x_46259,
                                                                  x_46263);
                            int64_t defunc_1_op_res_46268 = add64(x_46260,
                                                                  x_46264);
                            int64_t defunc_1_op_res_46269 = add64(x_46261,
                                                                  x_46265);
                            int64_t defunc_1_op_res_46270 = add64(x_46262,
                                                                  x_46266);
                            
                            x_46259 = defunc_1_op_res_46267;
                            x_46260 = defunc_1_op_res_46268;
                            x_46261 = defunc_1_op_res_46269;
                            x_46262 = defunc_1_op_res_46270;
                        }
                    }
                }
                if (sle32(wave_sizze_46248, skip_threads_46274)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_46274, local_tid_46246 -
                          squot32(local_tid_46246, 32) * 32) &&
                    (squot32(local_tid_46246, 32) == 0 &&
                     ltid_in_bounds_46271)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_46250)[sext_i32_i64(local_tid_46246)] =
                            x_46259;
                        x_46263 = x_46259;
                        ((volatile __local
                          int64_t *) scan_arr_mem_46252)[sext_i32_i64(local_tid_46246)] =
                            x_46260;
                        x_46264 = x_46260;
                        ((volatile __local
                          int64_t *) scan_arr_mem_46254)[sext_i32_i64(local_tid_46246)] =
                            x_46261;
                        x_46265 = x_46261;
                        ((volatile __local
                          int64_t *) scan_arr_mem_46256)[sext_i32_i64(local_tid_46246)] =
                            x_46262;
                        x_46266 = x_46262;
                    }
                }
                if (sle32(wave_sizze_46248, skip_threads_46274)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_46274 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_46246, 32) == 0 || !ltid_in_bounds_46271)) {
            // read operands
            {
                x_41308 = x_41304;
                x_41309 = x_41305;
                x_41310 = x_41306;
                x_41311 = x_41307;
                x_41304 = ((__local
                            int64_t *) scan_arr_mem_46250)[sext_i32_i64(squot32(local_tid_46246,
                                                                                32)) -
                                                           1];
                x_41305 = ((__local
                            int64_t *) scan_arr_mem_46252)[sext_i32_i64(squot32(local_tid_46246,
                                                                                32)) -
                                                           1];
                x_41306 = ((__local
                            int64_t *) scan_arr_mem_46254)[sext_i32_i64(squot32(local_tid_46246,
                                                                                32)) -
                                                           1];
                x_41307 = ((__local
                            int64_t *) scan_arr_mem_46256)[sext_i32_i64(squot32(local_tid_46246,
                                                                                32)) -
                                                           1];
            }
            // perform operation
            {
                bool inactive_46276 =
                     slt64(srem64((sext_i32_i64(local_tid_46246) + 1) *
                                  (segscan_group_sizze_41296 *
                                   sdiv_up64(m_30871 * iota32_arg_31257,
                                             sext_i32_i64(num_threads_46196))) -
                                  1, iota32_arg_31257),
                           (sext_i32_i64(local_tid_46246) + 1) *
                           (segscan_group_sizze_41296 * sdiv_up64(m_30871 *
                                                                  iota32_arg_31257,
                                                                  sext_i32_i64(num_threads_46196))) -
                           1 - ((sext_i32_i64(squot32(local_tid_46246, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_41296 *
                                                 sdiv_up64(m_30871 *
                                                           iota32_arg_31257,
                                                           sext_i32_i64(num_threads_46196))) -
                                1));
                
                if (inactive_46276) {
                    x_41304 = x_41308;
                    x_41305 = x_41309;
                    x_41306 = x_41310;
                    x_41307 = x_41311;
                }
                if (!inactive_46276) {
                    int64_t defunc_1_op_res_41312 = add64(x_41304, x_41308);
                    int64_t defunc_1_op_res_41313 = add64(x_41305, x_41309);
                    int64_t defunc_1_op_res_41314 = add64(x_41306, x_41310);
                    int64_t defunc_1_op_res_41315 = add64(x_41307, x_41311);
                    
                    x_41304 = defunc_1_op_res_41312;
                    x_41305 = defunc_1_op_res_41313;
                    x_41306 = defunc_1_op_res_41314;
                    x_41307 = defunc_1_op_res_41315;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_46250)[sext_i32_i64(local_tid_46246)] =
                    x_41304;
                ((__local
                  int64_t *) scan_arr_mem_46252)[sext_i32_i64(local_tid_46246)] =
                    x_41305;
                ((__local
                  int64_t *) scan_arr_mem_46254)[sext_i32_i64(local_tid_46246)] =
                    x_41306;
                ((__local
                  int64_t *) scan_arr_mem_46256)[sext_i32_i64(local_tid_46246)] =
                    x_41307;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_46246, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_46250)[sext_i32_i64(local_tid_46246)] =
                x_41308;
            ((__local
              int64_t *) scan_arr_mem_46252)[sext_i32_i64(local_tid_46246)] =
                x_41309;
            ((__local
              int64_t *) scan_arr_mem_46254)[sext_i32_i64(local_tid_46246)] =
                x_41310;
            ((__local
              int64_t *) scan_arr_mem_46256)[sext_i32_i64(local_tid_46246)] =
                x_41311;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_40626, m_30871) && slt64(gtid_40634, iota32_arg_31257)) {
            ((__global int64_t *) mem_44654)[gtid_40626 * iota32_arg_31257 +
                                             gtid_40634] = ((__local
                                                             int64_t *) scan_arr_mem_46250)[sext_i32_i64(local_tid_46246)];
            ((__global int64_t *) mem_44657)[gtid_40626 * iota32_arg_31257 +
                                             gtid_40634] = ((__local
                                                             int64_t *) scan_arr_mem_46252)[sext_i32_i64(local_tid_46246)];
            ((__global int64_t *) mem_44660)[gtid_40626 * iota32_arg_31257 +
                                             gtid_40634] = ((__local
                                                             int64_t *) scan_arr_mem_46254)[sext_i32_i64(local_tid_46246)];
            ((__global int64_t *) mem_44663)[gtid_40626 * iota32_arg_31257 +
                                             gtid_40634] = ((__local
                                                             int64_t *) scan_arr_mem_46256)[sext_i32_i64(local_tid_46246)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_41296
}
__kernel void mainziscan_stage2_40981(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_46031_backing_aligned_0,
                                      int64_t m_30871, int64_t iota32_arg_31257,
                                      __global unsigned char *mem_44601,
                                      int64_t stage1_num_groups_46000,
                                      int32_t num_threads_46001)
{
    #define segscan_group_sizze_41059 (mainzisegscan_group_sizze_40975)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_46031_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_46031_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46026;
    int32_t local_tid_46027;
    int64_t group_sizze_46030;
    int32_t wave_sizze_46029;
    int32_t group_tid_46028;
    
    global_tid_46026 = get_global_id(0);
    local_tid_46027 = get_local_id(0);
    group_sizze_46030 = get_local_size(0);
    wave_sizze_46029 = LOCKSTEP_WIDTH;
    group_tid_46028 = get_group_id(0);
    
    int32_t phys_tid_40981;
    
    phys_tid_40981 = global_tid_46026;
    
    __local char *scan_arr_mem_46031;
    
    scan_arr_mem_46031 = (__local char *) scan_arr_mem_46031_backing_0;
    
    int64_t flat_idx_46033;
    
    flat_idx_46033 = (sext_i32_i64(local_tid_46027) + 1) *
        (segscan_group_sizze_41059 * sdiv_up64(m_30871 * iota32_arg_31257,
                                               sext_i32_i64(num_threads_46001))) -
        1;
    
    int64_t gtid_40972;
    
    gtid_40972 = squot64(flat_idx_46033, iota32_arg_31257);
    
    int64_t gtid_40980;
    
    gtid_40980 = flat_idx_46033 - squot64(flat_idx_46033, iota32_arg_31257) *
        iota32_arg_31257;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_40972, m_30871) && slt64(gtid_40980, iota32_arg_31257)) {
            ((__local
              float *) scan_arr_mem_46031)[sext_i32_i64(local_tid_46027)] =
                ((__global float *) mem_44601)[gtid_40972 * iota32_arg_31257 +
                                               gtid_40980];
        } else {
            ((__local
              float *) scan_arr_mem_46031)[sext_i32_i64(local_tid_46027)] =
                0.0F;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float x_41063;
    float x_41064;
    float x_46034;
    float x_46035;
    bool ltid_in_bounds_46037;
    
    ltid_in_bounds_46037 = slt64(sext_i32_i64(local_tid_46027),
                                 stage1_num_groups_46000);
    
    int32_t skip_threads_46038;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_46037) {
            x_41064 = ((volatile __local
                        float *) scan_arr_mem_46031)[sext_i32_i64(local_tid_46027)];
            if ((local_tid_46027 - squot32(local_tid_46027, 32) * 32) == 0) {
                x_41063 = x_41064;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_46038 = 1;
        while (slt32(skip_threads_46038, 32)) {
            if (sle32(skip_threads_46038, local_tid_46027 -
                      squot32(local_tid_46027, 32) * 32) &&
                ltid_in_bounds_46037) {
                // read operands
                {
                    x_41063 = ((volatile __local
                                float *) scan_arr_mem_46031)[sext_i32_i64(local_tid_46027) -
                                                             sext_i32_i64(skip_threads_46038)];
                }
                // perform operation
                {
                    bool inactive_46039 =
                         slt64(srem64((sext_i32_i64(local_tid_46027) + 1) *
                                      (segscan_group_sizze_41059 *
                                       sdiv_up64(m_30871 * iota32_arg_31257,
                                                 sext_i32_i64(num_threads_46001))) -
                                      1, iota32_arg_31257),
                               (sext_i32_i64(local_tid_46027) + 1) *
                               (segscan_group_sizze_41059 * sdiv_up64(m_30871 *
                                                                      iota32_arg_31257,
                                                                      sext_i32_i64(num_threads_46001))) -
                               1 - ((sext_i32_i64(local_tid_46027 -
                                     skip_threads_46038) + 1) *
                                    (segscan_group_sizze_41059 *
                                     sdiv_up64(m_30871 * iota32_arg_31257,
                                               sext_i32_i64(num_threads_46001))) -
                                    1));
                    
                    if (inactive_46039) {
                        x_41063 = x_41064;
                    }
                    if (!inactive_46039) {
                        float defunc_1_op_res_41065 = x_41063 + x_41064;
                        
                        x_41063 = defunc_1_op_res_41065;
                    }
                }
            }
            if (sle32(wave_sizze_46029, skip_threads_46038)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_46038, local_tid_46027 -
                      squot32(local_tid_46027, 32) * 32) &&
                ltid_in_bounds_46037) {
                // write result
                {
                    ((volatile __local
                      float *) scan_arr_mem_46031)[sext_i32_i64(local_tid_46027)] =
                        x_41063;
                    x_41064 = x_41063;
                }
            }
            if (sle32(wave_sizze_46029, skip_threads_46038)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_46038 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_46027 - squot32(local_tid_46027, 32) * 32) == 31 &&
            ltid_in_bounds_46037) {
            ((volatile __local
              float *) scan_arr_mem_46031)[sext_i32_i64(squot32(local_tid_46027,
                                                                32))] = x_41063;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_46040;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_46027, 32) == 0 && ltid_in_bounds_46037) {
                x_46035 = ((volatile __local
                            float *) scan_arr_mem_46031)[sext_i32_i64(local_tid_46027)];
                if ((local_tid_46027 - squot32(local_tid_46027, 32) * 32) ==
                    0) {
                    x_46034 = x_46035;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_46040 = 1;
            while (slt32(skip_threads_46040, 32)) {
                if (sle32(skip_threads_46040, local_tid_46027 -
                          squot32(local_tid_46027, 32) * 32) &&
                    (squot32(local_tid_46027, 32) == 0 &&
                     ltid_in_bounds_46037)) {
                    // read operands
                    {
                        x_46034 = ((volatile __local
                                    float *) scan_arr_mem_46031)[sext_i32_i64(local_tid_46027) -
                                                                 sext_i32_i64(skip_threads_46040)];
                    }
                    // perform operation
                    {
                        bool inactive_46041 =
                             slt64(srem64((sext_i32_i64(local_tid_46027 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_41059 *
                                           sdiv_up64(m_30871 * iota32_arg_31257,
                                                     sext_i32_i64(num_threads_46001))) -
                                          1, iota32_arg_31257),
                                   (sext_i32_i64(local_tid_46027 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_41059 *
                                               sdiv_up64(m_30871 *
                                                         iota32_arg_31257,
                                                         sext_i32_i64(num_threads_46001))) -
                                   1 - ((sext_i32_i64((local_tid_46027 -
                                                       skip_threads_46040) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_41059 *
                                         sdiv_up64(m_30871 * iota32_arg_31257,
                                                   sext_i32_i64(num_threads_46001))) -
                                        1));
                        
                        if (inactive_46041) {
                            x_46034 = x_46035;
                        }
                        if (!inactive_46041) {
                            float defunc_1_op_res_46036 = x_46034 + x_46035;
                            
                            x_46034 = defunc_1_op_res_46036;
                        }
                    }
                }
                if (sle32(wave_sizze_46029, skip_threads_46040)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_46040, local_tid_46027 -
                          squot32(local_tid_46027, 32) * 32) &&
                    (squot32(local_tid_46027, 32) == 0 &&
                     ltid_in_bounds_46037)) {
                    // write result
                    {
                        ((volatile __local
                          float *) scan_arr_mem_46031)[sext_i32_i64(local_tid_46027)] =
                            x_46034;
                        x_46035 = x_46034;
                    }
                }
                if (sle32(wave_sizze_46029, skip_threads_46040)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_46040 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_46027, 32) == 0 || !ltid_in_bounds_46037)) {
            // read operands
            {
                x_41064 = x_41063;
                x_41063 = ((__local
                            float *) scan_arr_mem_46031)[sext_i32_i64(squot32(local_tid_46027,
                                                                              32)) -
                                                         1];
            }
            // perform operation
            {
                bool inactive_46042 =
                     slt64(srem64((sext_i32_i64(local_tid_46027) + 1) *
                                  (segscan_group_sizze_41059 *
                                   sdiv_up64(m_30871 * iota32_arg_31257,
                                             sext_i32_i64(num_threads_46001))) -
                                  1, iota32_arg_31257),
                           (sext_i32_i64(local_tid_46027) + 1) *
                           (segscan_group_sizze_41059 * sdiv_up64(m_30871 *
                                                                  iota32_arg_31257,
                                                                  sext_i32_i64(num_threads_46001))) -
                           1 - ((sext_i32_i64(squot32(local_tid_46027, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_41059 *
                                                 sdiv_up64(m_30871 *
                                                           iota32_arg_31257,
                                                           sext_i32_i64(num_threads_46001))) -
                                1));
                
                if (inactive_46042) {
                    x_41063 = x_41064;
                }
                if (!inactive_46042) {
                    float defunc_1_op_res_41065 = x_41063 + x_41064;
                    
                    x_41063 = defunc_1_op_res_41065;
                }
            }
            // write final result
            {
                ((__local
                  float *) scan_arr_mem_46031)[sext_i32_i64(local_tid_46027)] =
                    x_41063;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_46027, 32) == 0) {
            ((__local
              float *) scan_arr_mem_46031)[sext_i32_i64(local_tid_46027)] =
                x_41064;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_40972, m_30871) && slt64(gtid_40980, iota32_arg_31257)) {
            ((__global float *) mem_44601)[gtid_40972 * iota32_arg_31257 +
                                           gtid_40980] = ((__local
                                                           float *) scan_arr_mem_46031)[sext_i32_i64(local_tid_46027)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_41059
}
__kernel void mainziscan_stage3_38949(__global int *global_failure,
                                      int64_t N_30870, int64_t m_30871,
                                      int64_t num_groups_38967, __global
                                      unsigned char *mem_44323,
                                      int32_t num_threads_45584,
                                      int32_t required_groups_45626)
{
    #define segscan_group_sizze_38966 (mainzisegscan_group_sizze_38943)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45627;
    int32_t local_tid_45628;
    int64_t group_sizze_45631;
    int32_t wave_sizze_45630;
    int32_t group_tid_45629;
    
    global_tid_45627 = get_global_id(0);
    local_tid_45628 = get_local_id(0);
    group_sizze_45631 = get_local_size(0);
    wave_sizze_45630 = LOCKSTEP_WIDTH;
    group_tid_45629 = get_group_id(0);
    
    int32_t phys_tid_38949;
    
    phys_tid_38949 = global_tid_45627;
    
    int32_t phys_group_id_45632;
    
    phys_group_id_45632 = get_group_id(0);
    for (int32_t i_45633 = 0; i_45633 < sdiv_up32(required_groups_45626 -
                                                  phys_group_id_45632,
                                                  sext_i64_i32(num_groups_38967));
         i_45633++) {
        int32_t virt_group_id_45634 = phys_group_id_45632 + i_45633 *
                sext_i64_i32(num_groups_38967);
        int64_t flat_idx_45635 = sext_i32_i64(virt_group_id_45634) *
                segscan_group_sizze_38966 + sext_i32_i64(local_tid_45628);
        int64_t gtid_38940 = squot64(flat_idx_45635, N_30870);
        int64_t gtid_38948 = flat_idx_45635 - squot64(flat_idx_45635, N_30870) *
                N_30870;
        int64_t orig_group_45636 = squot64(flat_idx_45635,
                                           segscan_group_sizze_38966 *
                                           sdiv_up64(m_30871 * N_30870,
                                                     sext_i32_i64(num_threads_45584)));
        int64_t carry_in_flat_idx_45637 = orig_group_45636 *
                (segscan_group_sizze_38966 * sdiv_up64(m_30871 * N_30870,
                                                       sext_i32_i64(num_threads_45584))) -
                1;
        
        if (slt64(gtid_38940, m_30871) && slt64(gtid_38948, N_30870)) {
            if (!(orig_group_45636 == 0 || (flat_idx_45635 ==
                                            (orig_group_45636 + 1) *
                                            (segscan_group_sizze_38966 *
                                             sdiv_up64(m_30871 * N_30870,
                                                       sext_i32_i64(num_threads_45584))) -
                                            1 || slt64(srem64(flat_idx_45635,
                                                              N_30870),
                                                       flat_idx_45635 -
                                                       carry_in_flat_idx_45637)))) {
                int64_t x_38971;
                int64_t x_38972;
                
                x_38971 = ((__global
                            int64_t *) mem_44323)[squot64(carry_in_flat_idx_45637,
                                                          N_30870) * N_30870 +
                                                  (carry_in_flat_idx_45637 -
                                                   squot64(carry_in_flat_idx_45637,
                                                           N_30870) * N_30870)];
                x_38972 = ((__global int64_t *) mem_44323)[gtid_38940 *
                                                           N_30870 +
                                                           gtid_38948];
                
                int64_t defunc_1_op_res_38973;
                
                defunc_1_op_res_38973 = add64(x_38971, x_38972);
                x_38971 = defunc_1_op_res_38973;
                ((__global int64_t *) mem_44323)[gtid_38940 * N_30870 +
                                                 gtid_38948] = x_38971;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_38966
}
__kernel void mainziscan_stage3_40635(__global int *global_failure,
                                      int64_t m_30871, int64_t iota32_arg_31257,
                                      int64_t num_groups_41297, __global
                                      unsigned char *mem_44654, __global
                                      unsigned char *mem_44657, __global
                                      unsigned char *mem_44660, __global
                                      unsigned char *mem_44663,
                                      int32_t num_threads_46196,
                                      int32_t required_groups_46277)
{
    #define segscan_group_sizze_41296 (mainzisegscan_group_sizze_40629)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46278;
    int32_t local_tid_46279;
    int64_t group_sizze_46282;
    int32_t wave_sizze_46281;
    int32_t group_tid_46280;
    
    global_tid_46278 = get_global_id(0);
    local_tid_46279 = get_local_id(0);
    group_sizze_46282 = get_local_size(0);
    wave_sizze_46281 = LOCKSTEP_WIDTH;
    group_tid_46280 = get_group_id(0);
    
    int32_t phys_tid_40635;
    
    phys_tid_40635 = global_tid_46278;
    
    int32_t phys_group_id_46283;
    
    phys_group_id_46283 = get_group_id(0);
    for (int32_t i_46284 = 0; i_46284 < sdiv_up32(required_groups_46277 -
                                                  phys_group_id_46283,
                                                  sext_i64_i32(num_groups_41297));
         i_46284++) {
        int32_t virt_group_id_46285 = phys_group_id_46283 + i_46284 *
                sext_i64_i32(num_groups_41297);
        int64_t flat_idx_46286 = sext_i32_i64(virt_group_id_46285) *
                segscan_group_sizze_41296 + sext_i32_i64(local_tid_46279);
        int64_t gtid_40626 = squot64(flat_idx_46286, iota32_arg_31257);
        int64_t gtid_40634 = flat_idx_46286 - squot64(flat_idx_46286,
                                                      iota32_arg_31257) *
                iota32_arg_31257;
        int64_t orig_group_46287 = squot64(flat_idx_46286,
                                           segscan_group_sizze_41296 *
                                           sdiv_up64(m_30871 * iota32_arg_31257,
                                                     sext_i32_i64(num_threads_46196)));
        int64_t carry_in_flat_idx_46288 = orig_group_46287 *
                (segscan_group_sizze_41296 * sdiv_up64(m_30871 *
                                                       iota32_arg_31257,
                                                       sext_i32_i64(num_threads_46196))) -
                1;
        
        if (slt64(gtid_40626, m_30871) && slt64(gtid_40634, iota32_arg_31257)) {
            if (!(orig_group_46287 == 0 || (flat_idx_46286 ==
                                            (orig_group_46287 + 1) *
                                            (segscan_group_sizze_41296 *
                                             sdiv_up64(m_30871 *
                                                       iota32_arg_31257,
                                                       sext_i32_i64(num_threads_46196))) -
                                            1 || slt64(srem64(flat_idx_46286,
                                                              iota32_arg_31257),
                                                       flat_idx_46286 -
                                                       carry_in_flat_idx_46288)))) {
                int64_t x_41304;
                int64_t x_41305;
                int64_t x_41306;
                int64_t x_41307;
                int64_t x_41308;
                int64_t x_41309;
                int64_t x_41310;
                int64_t x_41311;
                
                x_41304 = ((__global
                            int64_t *) mem_44654)[squot64(carry_in_flat_idx_46288,
                                                          iota32_arg_31257) *
                                                  iota32_arg_31257 +
                                                  (carry_in_flat_idx_46288 -
                                                   squot64(carry_in_flat_idx_46288,
                                                           iota32_arg_31257) *
                                                   iota32_arg_31257)];
                x_41305 = ((__global
                            int64_t *) mem_44657)[squot64(carry_in_flat_idx_46288,
                                                          iota32_arg_31257) *
                                                  iota32_arg_31257 +
                                                  (carry_in_flat_idx_46288 -
                                                   squot64(carry_in_flat_idx_46288,
                                                           iota32_arg_31257) *
                                                   iota32_arg_31257)];
                x_41306 = ((__global
                            int64_t *) mem_44660)[squot64(carry_in_flat_idx_46288,
                                                          iota32_arg_31257) *
                                                  iota32_arg_31257 +
                                                  (carry_in_flat_idx_46288 -
                                                   squot64(carry_in_flat_idx_46288,
                                                           iota32_arg_31257) *
                                                   iota32_arg_31257)];
                x_41307 = ((__global
                            int64_t *) mem_44663)[squot64(carry_in_flat_idx_46288,
                                                          iota32_arg_31257) *
                                                  iota32_arg_31257 +
                                                  (carry_in_flat_idx_46288 -
                                                   squot64(carry_in_flat_idx_46288,
                                                           iota32_arg_31257) *
                                                   iota32_arg_31257)];
                x_41308 = ((__global int64_t *) mem_44654)[gtid_40626 *
                                                           iota32_arg_31257 +
                                                           gtid_40634];
                x_41309 = ((__global int64_t *) mem_44657)[gtid_40626 *
                                                           iota32_arg_31257 +
                                                           gtid_40634];
                x_41310 = ((__global int64_t *) mem_44660)[gtid_40626 *
                                                           iota32_arg_31257 +
                                                           gtid_40634];
                x_41311 = ((__global int64_t *) mem_44663)[gtid_40626 *
                                                           iota32_arg_31257 +
                                                           gtid_40634];
                
                int64_t defunc_1_op_res_41312;
                
                defunc_1_op_res_41312 = add64(x_41304, x_41308);
                
                int64_t defunc_1_op_res_41313 = add64(x_41305, x_41309);
                int64_t defunc_1_op_res_41314 = add64(x_41306, x_41310);
                int64_t defunc_1_op_res_41315 = add64(x_41307, x_41311);
                
                x_41304 = defunc_1_op_res_41312;
                x_41305 = defunc_1_op_res_41313;
                x_41306 = defunc_1_op_res_41314;
                x_41307 = defunc_1_op_res_41315;
                ((__global int64_t *) mem_44654)[gtid_40626 * iota32_arg_31257 +
                                                 gtid_40634] = x_41304;
                ((__global int64_t *) mem_44657)[gtid_40626 * iota32_arg_31257 +
                                                 gtid_40634] = x_41305;
                ((__global int64_t *) mem_44660)[gtid_40626 * iota32_arg_31257 +
                                                 gtid_40634] = x_41306;
                ((__global int64_t *) mem_44663)[gtid_40626 * iota32_arg_31257 +
                                                 gtid_40634] = x_41307;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_41296
}
__kernel void mainziscan_stage3_40981(__global int *global_failure,
                                      int64_t m_30871, int64_t iota32_arg_31257,
                                      int64_t num_groups_41060, __global
                                      unsigned char *mem_44601,
                                      int32_t num_threads_46001,
                                      int32_t required_groups_46043)
{
    #define segscan_group_sizze_41059 (mainzisegscan_group_sizze_40975)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46044;
    int32_t local_tid_46045;
    int64_t group_sizze_46048;
    int32_t wave_sizze_46047;
    int32_t group_tid_46046;
    
    global_tid_46044 = get_global_id(0);
    local_tid_46045 = get_local_id(0);
    group_sizze_46048 = get_local_size(0);
    wave_sizze_46047 = LOCKSTEP_WIDTH;
    group_tid_46046 = get_group_id(0);
    
    int32_t phys_tid_40981;
    
    phys_tid_40981 = global_tid_46044;
    
    int32_t phys_group_id_46049;
    
    phys_group_id_46049 = get_group_id(0);
    for (int32_t i_46050 = 0; i_46050 < sdiv_up32(required_groups_46043 -
                                                  phys_group_id_46049,
                                                  sext_i64_i32(num_groups_41060));
         i_46050++) {
        int32_t virt_group_id_46051 = phys_group_id_46049 + i_46050 *
                sext_i64_i32(num_groups_41060);
        int64_t flat_idx_46052 = sext_i32_i64(virt_group_id_46051) *
                segscan_group_sizze_41059 + sext_i32_i64(local_tid_46045);
        int64_t gtid_40972 = squot64(flat_idx_46052, iota32_arg_31257);
        int64_t gtid_40980 = flat_idx_46052 - squot64(flat_idx_46052,
                                                      iota32_arg_31257) *
                iota32_arg_31257;
        int64_t orig_group_46053 = squot64(flat_idx_46052,
                                           segscan_group_sizze_41059 *
                                           sdiv_up64(m_30871 * iota32_arg_31257,
                                                     sext_i32_i64(num_threads_46001)));
        int64_t carry_in_flat_idx_46054 = orig_group_46053 *
                (segscan_group_sizze_41059 * sdiv_up64(m_30871 *
                                                       iota32_arg_31257,
                                                       sext_i32_i64(num_threads_46001))) -
                1;
        
        if (slt64(gtid_40972, m_30871) && slt64(gtid_40980, iota32_arg_31257)) {
            if (!(orig_group_46053 == 0 || (flat_idx_46052 ==
                                            (orig_group_46053 + 1) *
                                            (segscan_group_sizze_41059 *
                                             sdiv_up64(m_30871 *
                                                       iota32_arg_31257,
                                                       sext_i32_i64(num_threads_46001))) -
                                            1 || slt64(srem64(flat_idx_46052,
                                                              iota32_arg_31257),
                                                       flat_idx_46052 -
                                                       carry_in_flat_idx_46054)))) {
                float x_41063;
                float x_41064;
                
                x_41063 = ((__global
                            float *) mem_44601)[squot64(carry_in_flat_idx_46054,
                                                        iota32_arg_31257) *
                                                iota32_arg_31257 +
                                                (carry_in_flat_idx_46054 -
                                                 squot64(carry_in_flat_idx_46054,
                                                         iota32_arg_31257) *
                                                 iota32_arg_31257)];
                x_41064 = ((__global float *) mem_44601)[gtid_40972 *
                                                         iota32_arg_31257 +
                                                         gtid_40980];
                
                float defunc_1_op_res_41065;
                
                defunc_1_op_res_41065 = x_41063 + x_41064;
                x_41063 = defunc_1_op_res_41065;
                ((__global float *) mem_44601)[gtid_40972 * iota32_arg_31257 +
                                               gtid_40980] = x_41063;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_41059
}
__kernel void mainzisegmap_36746(__global int *global_failure, int64_t N_30870,
                                 float freq_30876, int64_t i32_res_30890,
                                 __global
                                 unsigned char *mappingindices_mem_43531,
                                 __global unsigned char *mem_43536)
{
    #define segmap_group_sizze_36819 (mainzisegmap_group_sizze_36749)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44989;
    int32_t local_tid_44990;
    int64_t group_sizze_44993;
    int32_t wave_sizze_44992;
    int32_t group_tid_44991;
    
    global_tid_44989 = get_global_id(0);
    local_tid_44990 = get_local_id(0);
    group_sizze_44993 = get_local_size(0);
    wave_sizze_44992 = LOCKSTEP_WIDTH;
    group_tid_44991 = get_group_id(0);
    
    int32_t phys_tid_36746;
    
    phys_tid_36746 = global_tid_44989;
    
    int64_t gtid_36744;
    
    gtid_36744 = squot64(sext_i32_i64(group_tid_44991) *
                         segmap_group_sizze_36819 +
                         sext_i32_i64(local_tid_44990), N_30870);
    
    int64_t gtid_36745;
    
    gtid_36745 = sext_i32_i64(group_tid_44991) * segmap_group_sizze_36819 +
        sext_i32_i64(local_tid_44990) - squot64(sext_i32_i64(group_tid_44991) *
                                                segmap_group_sizze_36819 +
                                                sext_i32_i64(local_tid_44990),
                                                N_30870) * N_30870;
    if (slt64(gtid_36744, i32_res_30890) && slt64(gtid_36745, N_30870)) {
        int32_t index_primexp_41468 = sext_i64_i32(gtid_36744);
        bool index_primexp_41465 = index_primexp_41468 == 0;
        float defunc_0_f_res_36825;
        
        if (index_primexp_41465) {
            defunc_0_f_res_36825 = 1.0F;
        } else {
            int32_t x_36824 = ((__global
                                int32_t *) mappingindices_mem_43531)[gtid_36745];
            bool cond_36826 = index_primexp_41468 == 1;
            float defunc_0_f_res_f_res_36827;
            
            if (cond_36826) {
                float i32_res_36828 = sitofp_i32_f32(x_36824);
                
                defunc_0_f_res_f_res_36827 = i32_res_36828;
            } else {
                int32_t r32_arg_36829 = sdiv32(index_primexp_41468, 2);
                float i32_res_36830 = sitofp_i32_f32(r32_arg_36829);
                float i32_res_36831 = sitofp_i32_f32(x_36824);
                float x_36832 = 6.2831855F * i32_res_36830;
                float x_36833 = i32_res_36831 * x_36832;
                float angle_36834 = x_36833 / freq_30876;
                int32_t x_36835 = smod32(index_primexp_41468, 2);
                bool cond_36836 = x_36835 == 0;
                float defunc_0_f_res_f_res_f_res_36837;
                
                if (cond_36836) {
                    float sin_res_36838;
                    
                    sin_res_36838 = futrts_sin32(angle_36834);
                    defunc_0_f_res_f_res_f_res_36837 = sin_res_36838;
                } else {
                    float cos_res_36839;
                    
                    cos_res_36839 = futrts_cos32(angle_36834);
                    defunc_0_f_res_f_res_f_res_36837 = cos_res_36839;
                }
                defunc_0_f_res_f_res_36827 = defunc_0_f_res_f_res_f_res_36837;
            }
            defunc_0_f_res_36825 = defunc_0_f_res_f_res_36827;
        }
        ((__global float *) mem_43536)[gtid_36744 * N_30870 + gtid_36745] =
            defunc_0_f_res_36825;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36819
}
__kernel void mainzisegmap_36924(__global int *global_failure, int64_t N_30870,
                                 float freq_30876, int64_t i32_res_30890,
                                 __global
                                 unsigned char *mappingindices_mem_43531,
                                 __global unsigned char *mem_43540)
{
    #define segmap_group_sizze_36993 (mainzisegmap_group_sizze_36927)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44994;
    int32_t local_tid_44995;
    int64_t group_sizze_44998;
    int32_t wave_sizze_44997;
    int32_t group_tid_44996;
    
    global_tid_44994 = get_global_id(0);
    local_tid_44995 = get_local_id(0);
    group_sizze_44998 = get_local_size(0);
    wave_sizze_44997 = LOCKSTEP_WIDTH;
    group_tid_44996 = get_group_id(0);
    
    int32_t phys_tid_36924;
    
    phys_tid_36924 = global_tid_44994;
    
    int64_t gtid_36922;
    
    gtid_36922 = squot64(sext_i32_i64(group_tid_44996) *
                         segmap_group_sizze_36993 +
                         sext_i32_i64(local_tid_44995), N_30870);
    
    int64_t gtid_36923;
    
    gtid_36923 = sext_i32_i64(group_tid_44996) * segmap_group_sizze_36993 +
        sext_i32_i64(local_tid_44995) - squot64(sext_i32_i64(group_tid_44996) *
                                                segmap_group_sizze_36993 +
                                                sext_i32_i64(local_tid_44995),
                                                N_30870) * N_30870;
    if (slt64(gtid_36922, i32_res_30890) && slt64(gtid_36923, N_30870)) {
        int32_t index_primexp_41477 = sext_i64_i32(gtid_36922);
        bool index_primexp_41474 = index_primexp_41477 == 0;
        float defunc_0_f_res_36999;
        
        if (index_primexp_41474) {
            defunc_0_f_res_36999 = 1.0F;
        } else {
            int32_t x_36998 = ((__global
                                int32_t *) mappingindices_mem_43531)[gtid_36923];
            int32_t i_37000 = add32(1, index_primexp_41477);
            int32_t r32_arg_37001 = sdiv32(i_37000, 2);
            float i32_res_37002 = sitofp_i32_f32(r32_arg_37001);
            float i32_res_37003 = sitofp_i32_f32(x_36998);
            float x_37004 = 6.2831855F * i32_res_37002;
            float x_37005 = i32_res_37003 * x_37004;
            float angle_37006 = x_37005 / freq_30876;
            int32_t x_37007 = smod32(i_37000, 2);
            bool cond_37008 = x_37007 == 0;
            float defunc_0_f_res_f_res_37009;
            
            if (cond_37008) {
                float sin_res_37010;
                
                sin_res_37010 = futrts_sin32(angle_37006);
                defunc_0_f_res_f_res_37009 = sin_res_37010;
            } else {
                float cos_res_37011;
                
                cos_res_37011 = futrts_cos32(angle_37006);
                defunc_0_f_res_f_res_37009 = cos_res_37011;
            }
            defunc_0_f_res_36999 = defunc_0_f_res_f_res_37009;
        }
        ((__global float *) mem_43540)[gtid_36922 * N_30870 + gtid_36923] =
            defunc_0_f_res_36999;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36993
}
__kernel void mainzisegmap_37052(__global int *global_failure, int64_t N_30870,
                                 int64_t i32_res_30890, float i32_res_30955,
                                 __global unsigned char *mem_43544, __global
                                 unsigned char *mem_43548)
{
    #define segmap_group_sizze_37076 (mainzisegmap_group_sizze_37055)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44999;
    int32_t local_tid_45000;
    int64_t group_sizze_45003;
    int32_t wave_sizze_45002;
    int32_t group_tid_45001;
    
    global_tid_44999 = get_global_id(0);
    local_tid_45000 = get_local_id(0);
    group_sizze_45003 = get_local_size(0);
    wave_sizze_45002 = LOCKSTEP_WIDTH;
    group_tid_45001 = get_group_id(0);
    
    int32_t phys_tid_37052;
    
    phys_tid_37052 = global_tid_44999;
    
    int64_t gtid_37050;
    
    gtid_37050 = squot64(sext_i32_i64(group_tid_45001) *
                         segmap_group_sizze_37076 +
                         sext_i32_i64(local_tid_45000), i32_res_30890);
    
    int64_t gtid_37051;
    
    gtid_37051 = sext_i32_i64(group_tid_45001) * segmap_group_sizze_37076 +
        sext_i32_i64(local_tid_45000) - squot64(sext_i32_i64(group_tid_45001) *
                                                segmap_group_sizze_37076 +
                                                sext_i32_i64(local_tid_45000),
                                                i32_res_30890) * i32_res_30890;
    if (slt64(gtid_37050, N_30870) && slt64(gtid_37051, i32_res_30890)) {
        float x_37079 = ((__global float *) mem_43544)[gtid_37050 *
                                                       i32_res_30890 +
                                                       gtid_37051];
        float defunc_0_f_res_37080 = i32_res_30955 + x_37079;
        
        ((__global float *) mem_43548)[gtid_37050 * i32_res_30890 +
                                       gtid_37051] = defunc_0_f_res_37080;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37076
}
__kernel void mainzisegmap_37085(__global int *global_failure, int64_t N_30870,
                                 int64_t m_30871, int32_t n_30875,
                                 int32_t k2p2zq_30888, int64_t i32_res_30890,
                                 int64_t num_groups_37110, __global
                                 unsigned char *binop_p_mem_43541, __global
                                 unsigned char *mem_43548, __global
                                 unsigned char *mem_43551, __global
                                 unsigned char *mem_43555, __global
                                 unsigned char *mem_43597)
{
    #define segmap_group_sizze_37109 (mainzisegmap_group_sizze_37087)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45007;
    int32_t local_tid_45008;
    int64_t group_sizze_45011;
    int32_t wave_sizze_45010;
    int32_t group_tid_45009;
    
    global_tid_45007 = get_global_id(0);
    local_tid_45008 = get_local_id(0);
    group_sizze_45011 = get_local_size(0);
    wave_sizze_45010 = LOCKSTEP_WIDTH;
    group_tid_45009 = get_group_id(0);
    
    int32_t phys_tid_37085;
    
    phys_tid_37085 = global_tid_45007;
    
    int32_t phys_group_id_45012;
    
    phys_group_id_45012 = get_group_id(0);
    for (int32_t i_45013 = 0; i_45013 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30871, segmap_group_sizze_37109)) -
                   phys_group_id_45012, sext_i64_i32(num_groups_37110));
         i_45013++) {
        int32_t virt_group_id_45014 = phys_group_id_45012 + i_45013 *
                sext_i64_i32(num_groups_37110);
        int64_t gtid_37084 = sext_i32_i64(virt_group_id_45014) *
                segmap_group_sizze_37109 + sext_i32_i64(local_tid_45008);
        
        if (slt64(gtid_37084, m_30871)) {
            for (int32_t i_43509 = 0; i_43509 < k2p2zq_30888; i_43509++) {
                int64_t i_43405 = sext_i32_i64(i_43509);
                
                for (int32_t i_43508 = 0; i_43508 < k2p2zq_30888; i_43508++) {
                    int64_t i_43409 = sext_i32_i64(i_43508);
                    float defunc_2_reduce_res_37118;
                    float redout_43411 = 0.0F;
                    
                    for (int32_t i_43507 = 0; i_43507 < n_30875; i_43507++) {
                        int64_t i_43412 = sext_i32_i64(i_43507);
                        float x_37122 = ((__global float *) mem_43551)[i_43412 *
                                                                       m_30871 +
                                                                       gtid_37084];
                        float x_37123 = ((__global
                                          float *) binop_p_mem_43541)[i_43405 *
                                                                      N_30870 +
                                                                      i_43412];
                        float x_37124 = ((__global float *) mem_43548)[i_43412 *
                                                                       i32_res_30890 +
                                                                       i_43409];
                        float x_37125 = x_37123 * x_37124;
                        bool isnan_res_37126;
                        
                        isnan_res_37126 = futrts_isnan32(x_37122);
                        
                        float y_37127;
                        
                        if (isnan_res_37126) {
                            y_37127 = 0.0F;
                        } else {
                            y_37127 = 1.0F;
                        }
                        
                        float defunc_2_f_res_37128 = x_37125 * y_37127;
                        float defunc_1_op_res_37121 = defunc_2_f_res_37128 +
                              redout_43411;
                        float redout_tmp_45017 = defunc_1_op_res_37121;
                        
                        redout_43411 = redout_tmp_45017;
                    }
                    defunc_2_reduce_res_37118 = redout_43411;
                    ((__global float *) mem_43555)[phys_tid_37085 + (i_43405 *
                                                                     (num_groups_37110 *
                                                                      segmap_group_sizze_37109 *
                                                                      i32_res_30890) +
                                                                     i_43409 *
                                                                     (num_groups_37110 *
                                                                      segmap_group_sizze_37109))] =
                        defunc_2_reduce_res_37118;
                }
            }
            for (int64_t i_45018 = 0; i_45018 < i32_res_30890; i_45018++) {
                for (int64_t i_45019 = 0; i_45019 < i32_res_30890; i_45019++) {
                    ((__global float *) mem_43597)[i_45018 * (m_30871 *
                                                              i32_res_30890) +
                                                   i_45019 * m_30871 +
                                                   gtid_37084] = ((__global
                                                                   float *) mem_43555)[phys_tid_37085 +
                                                                                       (i_45018 *
                                                                                        (num_groups_37110 *
                                                                                         segmap_group_sizze_37109 *
                                                                                         i32_res_30890) +
                                                                                        i_45019 *
                                                                                        (num_groups_37110 *
                                                                                         segmap_group_sizze_37109))];
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37109
}
__kernel void mainzisegmap_37131(__global int *global_failure, int64_t m_30871,
                                 int64_t N_30872, int32_t n_30875,
                                 int32_t k2p2zq_30888, int64_t i32_res_30890,
                                 int64_t num_groups_37287, __global
                                 unsigned char *images_mem_43532, __global
                                 unsigned char *mem_43544, __global
                                 unsigned char *mem_43548, __global
                                 unsigned char *mem_43600, __global
                                 unsigned char *mem_43616)
{
    #define segmap_group_sizze_37286 (mainzisegmap_group_sizze_37134)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45020;
    int32_t local_tid_45021;
    int64_t group_sizze_45024;
    int32_t wave_sizze_45023;
    int32_t group_tid_45022;
    
    global_tid_45020 = get_global_id(0);
    local_tid_45021 = get_local_id(0);
    group_sizze_45024 = get_local_size(0);
    wave_sizze_45023 = LOCKSTEP_WIDTH;
    group_tid_45022 = get_group_id(0);
    
    int32_t phys_tid_37131;
    
    phys_tid_37131 = global_tid_45020;
    
    int32_t phys_group_id_45025;
    
    phys_group_id_45025 = get_group_id(0);
    for (int32_t i_45026 = 0; i_45026 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30871 * i32_res_30890,
                                          segmap_group_sizze_37286)) -
                   phys_group_id_45025, sext_i64_i32(num_groups_37287));
         i_45026++) {
        int32_t virt_group_id_45027 = phys_group_id_45025 + i_45026 *
                sext_i64_i32(num_groups_37287);
        int64_t gtid_37129 = squot64(sext_i32_i64(virt_group_id_45027) *
                                     segmap_group_sizze_37286 +
                                     sext_i32_i64(local_tid_45021),
                                     i32_res_30890);
        int64_t gtid_37130 = sext_i32_i64(virt_group_id_45027) *
                segmap_group_sizze_37286 + sext_i32_i64(local_tid_45021) -
                squot64(sext_i32_i64(virt_group_id_45027) *
                        segmap_group_sizze_37286 +
                        sext_i32_i64(local_tid_45021), i32_res_30890) *
                i32_res_30890;
        
        if (slt64(gtid_37129, m_30871) && slt64(gtid_37130, i32_res_30890)) {
            for (int32_t i_43511 = 0; i_43511 < k2p2zq_30888; i_43511++) {
                int64_t i_43415 = sext_i32_i64(i_43511);
                float defunc_2_reduce_res_37298;
                float redout_43417 = 0.0F;
                
                for (int32_t i_43510 = 0; i_43510 < n_30875; i_43510++) {
                    int64_t i_43418 = sext_i32_i64(i_43510);
                    float x_37302 = ((__global
                                      float *) images_mem_43532)[gtid_37129 *
                                                                 N_30872 +
                                                                 i_43418];
                    float x_37303 = ((__global float *) mem_43544)[i_43418 *
                                                                   i32_res_30890 +
                                                                   gtid_37130];
                    float x_37304 = ((__global float *) mem_43548)[i_43418 *
                                                                   i32_res_30890 +
                                                                   i_43415];
                    float x_37305 = x_37303 * x_37304;
                    bool isnan_res_37306;
                    
                    isnan_res_37306 = futrts_isnan32(x_37302);
                    
                    float y_37307;
                    
                    if (isnan_res_37306) {
                        y_37307 = 0.0F;
                    } else {
                        y_37307 = 1.0F;
                    }
                    
                    float defunc_2_f_res_37308 = x_37305 * y_37307;
                    float defunc_1_op_res_37301 = defunc_2_f_res_37308 +
                          redout_43417;
                    float redout_tmp_45029 = defunc_1_op_res_37301;
                    
                    redout_43417 = redout_tmp_45029;
                }
                defunc_2_reduce_res_37298 = redout_43417;
                ((__global float *) mem_43600)[phys_tid_37131 + i_43415 *
                                               (num_groups_37287 *
                                                segmap_group_sizze_37286)] =
                    defunc_2_reduce_res_37298;
            }
            for (int64_t i_45030 = 0; i_45030 < i32_res_30890; i_45030++) {
                ((__global float *) mem_43616)[i_45030 * (i32_res_30890 *
                                                          m_30871) +
                                               gtid_37129 * i32_res_30890 +
                                               gtid_37130] = ((__global
                                                               float *) mem_43600)[phys_tid_37131 +
                                                                                   i_45030 *
                                                                                   (num_groups_37287 *
                                                                                    segmap_group_sizze_37286)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37286
}
__kernel void mainzisegmap_37665(__global int *global_failure, int64_t m_30871,
                                 int64_t i32_res_30890, int64_t m_31021,
                                 int64_t gauss_jordan_res_r_ixfn_43772,
                                 int64_t gauss_jordan_res_r_ixfn_43773,
                                 int64_t gauss_jordan_res_r_ixfn_43775, __global
                                 unsigned char *gauss_jordan_res_r_mem_43777,
                                 __global unsigned char *mem_43782)
{
    #define segmap_group_sizze_38288 (mainzisegmap_group_sizze_37669)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45188;
    int32_t local_tid_45189;
    int64_t group_sizze_45192;
    int32_t wave_sizze_45191;
    int32_t group_tid_45190;
    
    global_tid_45188 = get_global_id(0);
    local_tid_45189 = get_local_id(0);
    group_sizze_45192 = get_local_size(0);
    wave_sizze_45191 = LOCKSTEP_WIDTH;
    group_tid_45190 = get_group_id(0);
    
    int32_t phys_tid_37665;
    
    phys_tid_37665 = global_tid_45188;
    
    int64_t gtid_37662;
    
    gtid_37662 = squot64(sext_i32_i64(group_tid_45190) *
                         segmap_group_sizze_38288 +
                         sext_i32_i64(local_tid_45189), i32_res_30890 *
                         i32_res_30890);
    
    int64_t gtid_37663;
    
    gtid_37663 = squot64(sext_i32_i64(group_tid_45190) *
                         segmap_group_sizze_38288 +
                         sext_i32_i64(local_tid_45189) -
                         squot64(sext_i32_i64(group_tid_45190) *
                                 segmap_group_sizze_38288 +
                                 sext_i32_i64(local_tid_45189), i32_res_30890 *
                                 i32_res_30890) * (i32_res_30890 *
                                                   i32_res_30890),
                         i32_res_30890);
    
    int64_t gtid_37664;
    
    gtid_37664 = sext_i32_i64(group_tid_45190) * segmap_group_sizze_38288 +
        sext_i32_i64(local_tid_45189) - squot64(sext_i32_i64(group_tid_45190) *
                                                segmap_group_sizze_38288 +
                                                sext_i32_i64(local_tid_45189),
                                                i32_res_30890 * i32_res_30890) *
        (i32_res_30890 * i32_res_30890) -
        squot64(sext_i32_i64(group_tid_45190) * segmap_group_sizze_38288 +
                sext_i32_i64(local_tid_45189) -
                squot64(sext_i32_i64(group_tid_45190) *
                        segmap_group_sizze_38288 +
                        sext_i32_i64(local_tid_45189), i32_res_30890 *
                        i32_res_30890) * (i32_res_30890 * i32_res_30890),
                i32_res_30890) * i32_res_30890;
    if ((slt64(gtid_37662, m_30871) && slt64(gtid_37663, i32_res_30890)) &&
        slt64(gtid_37664, i32_res_30890)) {
        int64_t index_primexp_41507 = m_31021 * gtid_37663;
        int64_t i_38294 = add64(i32_res_30890, gtid_37664);
        int64_t new_index_38295 = i_38294 + index_primexp_41507;
        float defunc_0_f_res_38296 = ((__global
                                       float *) gauss_jordan_res_r_mem_43777)[gauss_jordan_res_r_ixfn_43772 +
                                                                              (gtid_37662 *
                                                                               gauss_jordan_res_r_ixfn_43773 +
                                                                               new_index_38295 *
                                                                               gauss_jordan_res_r_ixfn_43775)];
        
        ((__global float *) mem_43782)[gtid_37662 * (i32_res_30890 *
                                                     i32_res_30890) +
                                       gtid_37663 * i32_res_30890 +
                                       gtid_37664] = defunc_0_f_res_38296;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38288
}
__kernel void mainzisegmap_37884(__global int *global_failure, int64_t m_30871,
                                 int64_t nm_31022, int64_t ctx_param_ext_43735,
                                 int64_t ctx_param_ext_43736,
                                 int64_t ctx_param_ext_43738, __global
                                 unsigned char *mem_param_43740, __global
                                 unsigned char *mem_43760)
{
    #define segmap_group_sizze_38253 (mainzisegmap_group_sizze_37887)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45182;
    int32_t local_tid_45183;
    int64_t group_sizze_45186;
    int32_t wave_sizze_45185;
    int32_t group_tid_45184;
    
    global_tid_45182 = get_global_id(0);
    local_tid_45183 = get_local_id(0);
    group_sizze_45186 = get_local_size(0);
    wave_sizze_45185 = LOCKSTEP_WIDTH;
    group_tid_45184 = get_group_id(0);
    
    int32_t phys_tid_37884;
    
    phys_tid_37884 = global_tid_45182;
    
    int64_t gtid_37882;
    
    gtid_37882 = squot64(sext_i32_i64(group_tid_45184) *
                         segmap_group_sizze_38253 +
                         sext_i32_i64(local_tid_45183), nm_31022);
    
    int64_t gtid_37883;
    
    gtid_37883 = sext_i32_i64(group_tid_45184) * segmap_group_sizze_38253 +
        sext_i32_i64(local_tid_45183) - squot64(sext_i32_i64(group_tid_45184) *
                                                segmap_group_sizze_38253 +
                                                sext_i32_i64(local_tid_45183),
                                                nm_31022) * nm_31022;
    if (slt64(gtid_37882, m_30871) && slt64(gtid_37883, nm_31022)) {
        float write_value_38259 = ((__global float *) mem_43760)[gtid_37882 *
                                                                 nm_31022 +
                                                                 gtid_37883];
        
        if ((sle64(0, gtid_37882) && slt64(gtid_37882, m_30871)) && (sle64(0,
                                                                           gtid_37883) &&
                                                                     slt64(gtid_37883,
                                                                           nm_31022))) {
            ((__global float *) mem_param_43740)[ctx_param_ext_43735 +
                                                 (gtid_37882 *
                                                  ctx_param_ext_43736 +
                                                  gtid_37883 *
                                                  ctx_param_ext_43738)] =
                write_value_38259;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38253
}
__kernel void mainzisegmap_37938(__global int *global_failure, int64_t m_30871,
                                 int32_t k2p2zq_30888, int64_t nm_31022,
                                 int32_t i64_res_31030, int32_t i_38152,
                                 int64_t i_38154, int64_t ctx_param_ext_43735,
                                 int64_t ctx_param_ext_43736,
                                 int64_t ctx_param_ext_43738, __global
                                 unsigned char *mem_param_43740, __global
                                 unsigned char *mem_43756, __global
                                 unsigned char *mem_43760)
{
    #define segmap_group_sizze_38219 (mainzisegmap_group_sizze_37941)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45177;
    int32_t local_tid_45178;
    int64_t group_sizze_45181;
    int32_t wave_sizze_45180;
    int32_t group_tid_45179;
    
    global_tid_45177 = get_global_id(0);
    local_tid_45178 = get_local_id(0);
    group_sizze_45181 = get_local_size(0);
    wave_sizze_45180 = LOCKSTEP_WIDTH;
    group_tid_45179 = get_group_id(0);
    
    int32_t phys_tid_37938;
    
    phys_tid_37938 = global_tid_45177;
    
    int64_t gtid_37936;
    
    gtid_37936 = squot64(sext_i32_i64(group_tid_45179) *
                         segmap_group_sizze_38219 +
                         sext_i32_i64(local_tid_45178), nm_31022);
    
    int64_t gtid_37937;
    
    gtid_37937 = sext_i32_i64(group_tid_45179) * segmap_group_sizze_38219 +
        sext_i32_i64(local_tid_45178) - squot64(sext_i32_i64(group_tid_45179) *
                                                segmap_group_sizze_38219 +
                                                sext_i32_i64(local_tid_45178),
                                                nm_31022) * nm_31022;
    if (slt64(gtid_37936, m_30871) && slt64(gtid_37937, nm_31022)) {
        bool cond_38224 = ((__global bool *) mem_43756)[gtid_37936];
        int32_t defunc_0_f_res_38226 = sext_i64_i32(gtid_37937);
        int32_t defunc_0_f_res_38227 = sdiv32(defunc_0_f_res_38226,
                                              i64_res_31030);
        int32_t defunc_0_f_res_38228 = smod32(defunc_0_f_res_38226,
                                              i64_res_31030);
        float defunc_0_f_res_38229;
        
        if (cond_38224) {
            int32_t x_38230 = mul32(i64_res_31030, defunc_0_f_res_38227);
            int32_t i_38231 = add32(defunc_0_f_res_38228, x_38230);
            int64_t i_38232 = sext_i32_i64(i_38231);
            float defunc_0_f_res_t_res_38233 = ((__global
                                                 float *) mem_param_43740)[ctx_param_ext_43735 +
                                                                           (gtid_37936 *
                                                                            ctx_param_ext_43736 +
                                                                            i_38232 *
                                                                            ctx_param_ext_43738)];
            
            defunc_0_f_res_38229 = defunc_0_f_res_t_res_38233;
        } else {
            float v1_38223 = ((__global
                               float *) mem_param_43740)[ctx_param_ext_43735 +
                                                         (gtid_37936 *
                                                          ctx_param_ext_43736 +
                                                          i_38154 *
                                                          ctx_param_ext_43738)];
            int64_t j_38234 = sext_i32_i64(defunc_0_f_res_38228);
            float x_38235 = ((__global
                              float *) mem_param_43740)[ctx_param_ext_43735 +
                                                        (gtid_37936 *
                                                         ctx_param_ext_43736 +
                                                         j_38234 *
                                                         ctx_param_ext_43738)];
            float x_38236 = x_38235 / v1_38223;
            int32_t y_38237 = sub32(k2p2zq_30888, 1);
            bool cond_38238 = slt32(defunc_0_f_res_38227, y_38237);
            float defunc_0_f_res_f_res_38239;
            
            if (cond_38238) {
                int32_t x_38240 = add32(1, defunc_0_f_res_38227);
                int32_t x_38241 = mul32(i64_res_31030, x_38240);
                int32_t i_38242 = add32(defunc_0_f_res_38228, x_38241);
                int64_t i_38243 = sext_i32_i64(i_38242);
                float x_38244 = ((__global
                                  float *) mem_param_43740)[ctx_param_ext_43735 +
                                                            (gtid_37936 *
                                                             ctx_param_ext_43736 +
                                                             i_38243 *
                                                             ctx_param_ext_43738)];
                int32_t i_38245 = add32(i_38152, x_38241);
                int64_t i_38246 = sext_i32_i64(i_38245);
                float x_38247 = ((__global
                                  float *) mem_param_43740)[ctx_param_ext_43735 +
                                                            (gtid_37936 *
                                                             ctx_param_ext_43736 +
                                                             i_38246 *
                                                             ctx_param_ext_43738)];
                float y_38248 = x_38236 * x_38247;
                float defunc_0_f_res_f_res_t_res_38249 = x_38244 - y_38248;
                
                defunc_0_f_res_f_res_38239 = defunc_0_f_res_f_res_t_res_38249;
            } else {
                defunc_0_f_res_f_res_38239 = x_38236;
            }
            defunc_0_f_res_38229 = defunc_0_f_res_f_res_38239;
        }
        ((__global float *) mem_43760)[gtid_37936 * nm_31022 + gtid_37937] =
            defunc_0_f_res_38229;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38219
}
__kernel void mainzisegmap_38006(__global int *global_failure, int64_t m_30871,
                                 int64_t i_38154, int64_t ctx_param_ext_43735,
                                 int64_t ctx_param_ext_43736,
                                 int64_t ctx_param_ext_43738, __global
                                 unsigned char *mem_param_43740, __global
                                 unsigned char *mem_43756)
{
    #define segmap_group_sizze_38203 (mainzisegmap_group_sizze_38008)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45172;
    int32_t local_tid_45173;
    int64_t group_sizze_45176;
    int32_t wave_sizze_45175;
    int32_t group_tid_45174;
    
    global_tid_45172 = get_global_id(0);
    local_tid_45173 = get_local_id(0);
    group_sizze_45176 = get_local_size(0);
    wave_sizze_45175 = LOCKSTEP_WIDTH;
    group_tid_45174 = get_group_id(0);
    
    int32_t phys_tid_38006;
    
    phys_tid_38006 = global_tid_45172;
    
    int64_t gtid_38005;
    
    gtid_38005 = sext_i32_i64(group_tid_45174) * segmap_group_sizze_38203 +
        sext_i32_i64(local_tid_45173);
    if (slt64(gtid_38005, m_30871)) {
        float v1_38208 = ((__global
                           float *) mem_param_43740)[ctx_param_ext_43735 +
                                                     (gtid_38005 *
                                                      ctx_param_ext_43736 +
                                                      i_38154 *
                                                      ctx_param_ext_43738)];
        bool cond_38209 = v1_38208 == 0.0F;
        
        ((__global bool *) mem_43756)[gtid_38005] = cond_38209;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38203
}
__kernel void mainzisegmap_38097(__global int *global_failure, int64_t m_30871,
                                 int64_t i32_res_30890, int64_t m_31021,
                                 int64_t nm_31022, __global
                                 unsigned char *defunc_3_map_res_mem_43700,
                                 __global unsigned char *mem_43732)
{
    #define segmap_group_sizze_38137 (mainzisegmap_group_sizze_38100)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45139;
    int32_t local_tid_45140;
    int64_t group_sizze_45143;
    int32_t wave_sizze_45142;
    int32_t group_tid_45141;
    
    global_tid_45139 = get_global_id(0);
    local_tid_45140 = get_local_id(0);
    group_sizze_45143 = get_local_size(0);
    wave_sizze_45142 = LOCKSTEP_WIDTH;
    group_tid_45141 = get_group_id(0);
    
    int32_t phys_tid_38097;
    
    phys_tid_38097 = global_tid_45139;
    
    int64_t gtid_38095;
    
    gtid_38095 = squot64(sext_i32_i64(group_tid_45141) *
                         segmap_group_sizze_38137 +
                         sext_i32_i64(local_tid_45140), nm_31022);
    
    int64_t gtid_38096;
    
    gtid_38096 = sext_i32_i64(group_tid_45141) * segmap_group_sizze_38137 +
        sext_i32_i64(local_tid_45140) - squot64(sext_i32_i64(group_tid_45141) *
                                                segmap_group_sizze_38137 +
                                                sext_i32_i64(local_tid_45140),
                                                nm_31022) * nm_31022;
    if (slt64(gtid_38095, m_30871) && slt64(gtid_38096, nm_31022)) {
        int64_t defunc_0_f_res_38142 = sdiv64(gtid_38096, m_31021);
        int64_t defunc_0_f_res_38143 = smod64(gtid_38096, m_31021);
        bool cond_38144 = slt64(defunc_0_f_res_38143, i32_res_30890);
        float defunc_0_f_res_38145;
        
        if (cond_38144) {
            float defunc_0_f_res_t_res_38146 = ((__global
                                                 float *) defunc_3_map_res_mem_43700)[gtid_38095 *
                                                                                      (i32_res_30890 *
                                                                                       i32_res_30890) +
                                                                                      defunc_0_f_res_38142 *
                                                                                      i32_res_30890 +
                                                                                      defunc_0_f_res_38143];
            
            defunc_0_f_res_38145 = defunc_0_f_res_t_res_38146;
        } else {
            int64_t y_38147 = add64(i32_res_30890, defunc_0_f_res_38142);
            bool cond_38148 = defunc_0_f_res_38143 == y_38147;
            float defunc_0_f_res_f_res_38149;
            
            if (cond_38148) {
                defunc_0_f_res_f_res_38149 = 1.0F;
            } else {
                defunc_0_f_res_f_res_38149 = 0.0F;
            }
            defunc_0_f_res_38145 = defunc_0_f_res_f_res_38149;
        }
        ((__global float *) mem_43732)[gtid_38095 * nm_31022 + gtid_38096] =
            defunc_0_f_res_38145;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38137
}
__kernel void mainzisegmap_38303(__global int *global_failure, int64_t N_30870,
                                 int64_t m_30871, int32_t n_30875,
                                 int32_t k2p2zq_30888, int64_t i32_res_30890,
                                 int64_t num_groups_38324, __global
                                 unsigned char *binop_p_mem_43541, __global
                                 unsigned char *mem_43786, __global
                                 unsigned char *mem_43789, __global
                                 unsigned char *mem_43804)
{
    #define segmap_group_sizze_38323 (mainzisegmap_group_sizze_38305)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45196;
    int32_t local_tid_45197;
    int64_t group_sizze_45200;
    int32_t wave_sizze_45199;
    int32_t group_tid_45198;
    
    global_tid_45196 = get_global_id(0);
    local_tid_45197 = get_local_id(0);
    group_sizze_45200 = get_local_size(0);
    wave_sizze_45199 = LOCKSTEP_WIDTH;
    group_tid_45198 = get_group_id(0);
    
    int32_t phys_tid_38303;
    
    phys_tid_38303 = global_tid_45196;
    
    int32_t phys_group_id_45201;
    
    phys_group_id_45201 = get_group_id(0);
    for (int32_t i_45202 = 0; i_45202 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30871, segmap_group_sizze_38323)) -
                   phys_group_id_45201, sext_i64_i32(num_groups_38324));
         i_45202++) {
        int32_t virt_group_id_45203 = phys_group_id_45201 + i_45202 *
                sext_i64_i32(num_groups_38324);
        int64_t gtid_38302 = sext_i32_i64(virt_group_id_45203) *
                segmap_group_sizze_38323 + sext_i32_i64(local_tid_45197);
        
        if (slt64(gtid_38302, m_30871)) {
            for (int32_t i_43513 = 0; i_43513 < k2p2zq_30888; i_43513++) {
                int64_t i_43421 = sext_i32_i64(i_43513);
                float defunc_2_reduce_res_38330;
                float redout_43423 = 0.0F;
                
                for (int32_t i_43512 = 0; i_43512 < n_30875; i_43512++) {
                    int64_t i_43424 = sext_i32_i64(i_43512);
                    float x_38335 = ((__global float *) mem_43786)[i_43424 *
                                                                   m_30871 +
                                                                   gtid_38302];
                    bool isnan_res_38336;
                    
                    isnan_res_38336 = futrts_isnan32(x_38335);
                    
                    float defunc_1_f_res_38337;
                    
                    if (isnan_res_38336) {
                        defunc_1_f_res_38337 = 0.0F;
                    } else {
                        float x_38334 = ((__global
                                          float *) binop_p_mem_43541)[i_43421 *
                                                                      N_30870 +
                                                                      i_43424];
                        float defunc_1_f_res_f_res_38338 = x_38334 * x_38335;
                        
                        defunc_1_f_res_38337 = defunc_1_f_res_f_res_38338;
                    }
                    
                    float defunc_1_op_res_38333 = defunc_1_f_res_38337 +
                          redout_43423;
                    float redout_tmp_45205 = defunc_1_op_res_38333;
                    
                    redout_43423 = redout_tmp_45205;
                }
                defunc_2_reduce_res_38330 = redout_43423;
                ((__global float *) mem_43789)[phys_tid_38303 + i_43421 *
                                               (num_groups_38324 *
                                                segmap_group_sizze_38323)] =
                    defunc_2_reduce_res_38330;
            }
            for (int64_t i_45206 = 0; i_45206 < i32_res_30890; i_45206++) {
                ((__global float *) mem_43804)[i_45206 * m_30871 + gtid_38302] =
                    ((__global float *) mem_43789)[phys_tid_38303 + i_45206 *
                                                   (num_groups_38324 *
                                                    segmap_group_sizze_38323)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38323
}
__kernel void mainzisegmap_38444(__global int *global_failure, int64_t m_30871,
                                 int32_t k2p2zq_30888, int64_t i32_res_30890,
                                 int64_t num_groups_38464, __global
                                 unsigned char *mem_44008, __global
                                 unsigned char *mem_44011, __global
                                 unsigned char *mem_44014, __global
                                 unsigned char *mem_44029)
{
    #define segmap_group_sizze_38463 (mainzisegmap_group_sizze_38446)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45328;
    int32_t local_tid_45329;
    int64_t group_sizze_45332;
    int32_t wave_sizze_45331;
    int32_t group_tid_45330;
    
    global_tid_45328 = get_global_id(0);
    local_tid_45329 = get_local_id(0);
    group_sizze_45332 = get_local_size(0);
    wave_sizze_45331 = LOCKSTEP_WIDTH;
    group_tid_45330 = get_group_id(0);
    
    int32_t phys_tid_38444;
    
    phys_tid_38444 = global_tid_45328;
    
    int32_t phys_group_id_45333;
    
    phys_group_id_45333 = get_group_id(0);
    for (int32_t i_45334 = 0; i_45334 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30871, segmap_group_sizze_38463)) -
                   phys_group_id_45333, sext_i64_i32(num_groups_38464));
         i_45334++) {
        int32_t virt_group_id_45335 = phys_group_id_45333 + i_45334 *
                sext_i64_i32(num_groups_38464);
        int64_t gtid_38443 = sext_i32_i64(virt_group_id_45335) *
                segmap_group_sizze_38463 + sext_i32_i64(local_tid_45329);
        
        if (slt64(gtid_38443, m_30871)) {
            for (int32_t i_43515 = 0; i_43515 < k2p2zq_30888; i_43515++) {
                int64_t i_43427 = sext_i32_i64(i_43515);
                float defunc_0_f_res_38471;
                float redout_43429 = 0.0F;
                
                for (int32_t i_43514 = 0; i_43514 < k2p2zq_30888; i_43514++) {
                    int64_t i_43430 = sext_i32_i64(i_43514);
                    float x_38475 = ((__global float *) mem_44011)[i_43430 *
                                                                   m_30871 +
                                                                   gtid_38443];
                    float x_38476 = ((__global float *) mem_44008)[i_43427 *
                                                                   (m_30871 *
                                                                    i32_res_30890) +
                                                                   i_43430 *
                                                                   m_30871 +
                                                                   gtid_38443];
                    float defunc_1_f_res_38477 = x_38475 * x_38476;
                    float defunc_1_op_res_38474 = defunc_1_f_res_38477 +
                          redout_43429;
                    float redout_tmp_45337 = defunc_1_op_res_38474;
                    
                    redout_43429 = redout_tmp_45337;
                }
                defunc_0_f_res_38471 = redout_43429;
                ((__global float *) mem_44014)[phys_tid_38444 + i_43427 *
                                               (num_groups_38464 *
                                                segmap_group_sizze_38463)] =
                    defunc_0_f_res_38471;
            }
            for (int64_t i_45338 = 0; i_45338 < i32_res_30890; i_45338++) {
                ((__global float *) mem_44029)[i_45338 * m_30871 + gtid_38443] =
                    ((__global float *) mem_44014)[phys_tid_38444 + i_45338 *
                                                   (num_groups_38464 *
                                                    segmap_group_sizze_38463)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38463
}
__kernel void mainzisegmap_38576(__global int *global_failure, int64_t N_30870,
                                 int64_t m_30871, int32_t k2p2zq_30888,
                                 int64_t i32_res_30890,
                                 int64_t num_groups_38595, __global
                                 unsigned char *mem_43548, __global
                                 unsigned char *mem_44073, __global
                                 unsigned char *mem_44076, __global
                                 unsigned char *mem_44091)
{
    #define segmap_group_sizze_38594 (mainzisegmap_group_sizze_38578)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45416;
    int32_t local_tid_45417;
    int64_t group_sizze_45420;
    int32_t wave_sizze_45419;
    int32_t group_tid_45418;
    
    global_tid_45416 = get_global_id(0);
    local_tid_45417 = get_local_id(0);
    group_sizze_45420 = get_local_size(0);
    wave_sizze_45419 = LOCKSTEP_WIDTH;
    group_tid_45418 = get_group_id(0);
    
    int32_t phys_tid_38576;
    
    phys_tid_38576 = global_tid_45416;
    
    int32_t phys_group_id_45421;
    
    phys_group_id_45421 = get_group_id(0);
    for (int32_t i_45422 = 0; i_45422 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30871, segmap_group_sizze_38594)) -
                   phys_group_id_45421, sext_i64_i32(num_groups_38595));
         i_45422++) {
        int32_t virt_group_id_45423 = phys_group_id_45421 + i_45422 *
                sext_i64_i32(num_groups_38595);
        int64_t gtid_38575 = sext_i32_i64(virt_group_id_45423) *
                segmap_group_sizze_38594 + sext_i32_i64(local_tid_45417);
        
        if (slt64(gtid_38575, m_30871)) {
            for (int64_t i_43437 = 0; i_43437 < N_30870; i_43437++) {
                float defunc_0_f_res_38601;
                float redout_43439 = 0.0F;
                
                for (int32_t i_43518 = 0; i_43518 < k2p2zq_30888; i_43518++) {
                    int64_t i_43440 = sext_i32_i64(i_43518);
                    float x_38605 = ((__global float *) mem_44073)[i_43440 *
                                                                   m_30871 +
                                                                   gtid_38575];
                    float x_38606 = ((__global float *) mem_43548)[i_43437 *
                                                                   i32_res_30890 +
                                                                   i_43440];
                    float defunc_1_f_res_38607 = x_38605 * x_38606;
                    float defunc_1_op_res_38604 = defunc_1_f_res_38607 +
                          redout_43439;
                    float redout_tmp_45425 = defunc_1_op_res_38604;
                    
                    redout_43439 = redout_tmp_45425;
                }
                defunc_0_f_res_38601 = redout_43439;
                ((__global float *) mem_44076)[phys_tid_38576 + i_43437 *
                                               (num_groups_38595 *
                                                segmap_group_sizze_38594)] =
                    defunc_0_f_res_38601;
            }
            for (int64_t i_45426 = 0; i_45426 < N_30870; i_45426++) {
                ((__global float *) mem_44091)[i_45426 * m_30871 + gtid_38575] =
                    ((__global float *) mem_44076)[phys_tid_38576 + i_45426 *
                                                   (num_groups_38595 *
                                                    segmap_group_sizze_38594)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38594
}
__kernel void mainzisegmap_38856(__global int *global_failure, int64_t N_30870,
                                 int64_t m_30871, __global
                                 unsigned char *mem_44297, __global
                                 unsigned char *mem_44300, __global
                                 unsigned char *mem_44323, __global
                                 unsigned char *mem_44326)
{
    #define segmap_group_sizze_39022 (mainzisegmap_group_sizze_38859)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45643;
    int32_t local_tid_45644;
    int64_t group_sizze_45647;
    int32_t wave_sizze_45646;
    int32_t group_tid_45645;
    
    global_tid_45643 = get_global_id(0);
    local_tid_45644 = get_local_id(0);
    group_sizze_45647 = get_local_size(0);
    wave_sizze_45646 = LOCKSTEP_WIDTH;
    group_tid_45645 = get_group_id(0);
    
    int32_t phys_tid_38856;
    
    phys_tid_38856 = global_tid_45643;
    
    int64_t gtid_38854;
    
    gtid_38854 = squot64(sext_i32_i64(group_tid_45645) *
                         segmap_group_sizze_39022 +
                         sext_i32_i64(local_tid_45644), N_30870);
    
    int64_t gtid_38855;
    
    gtid_38855 = sext_i32_i64(group_tid_45645) * segmap_group_sizze_39022 +
        sext_i32_i64(local_tid_45644) - squot64(sext_i32_i64(group_tid_45645) *
                                                segmap_group_sizze_39022 +
                                                sext_i32_i64(local_tid_45644),
                                                N_30870) * N_30870;
    if (slt64(gtid_38854, m_30871) && slt64(gtid_38855, N_30870)) {
        float x_39030 = ((__global float *) mem_44326)[gtid_38854 * N_30870 +
                                                       gtid_38855];
        int32_t index_primexp_41515 = sext_i64_i32(gtid_38855);
        bool isnan_res_39033;
        
        isnan_res_39033 = futrts_isnan32(x_39030);
        
        bool defunc_0_p_res_39034 = !isnan_res_39033;
        int64_t defunc_1_f_res_39035;
        
        if (defunc_0_p_res_39034) {
            int64_t x_39031 = ((__global int64_t *) mem_44323)[gtid_38854 *
                                                               N_30870 +
                                                               gtid_38855];
            int64_t defunc_1_f_res_t_res_39036 = sub64(x_39031, 1);
            
            defunc_1_f_res_39035 = defunc_1_f_res_t_res_39036;
        } else {
            defunc_1_f_res_39035 = -1;
        }
        if ((sle64(0, gtid_38854) && slt64(gtid_38854, m_30871)) && (sle64(0,
                                                                           defunc_1_f_res_39035) &&
                                                                     slt64(defunc_1_f_res_39035,
                                                                           N_30870))) {
            ((__global int32_t *) mem_44300)[gtid_38854 * N_30870 +
                                             defunc_1_f_res_39035] =
                index_primexp_41515;
        }
        if ((sle64(0, gtid_38854) && slt64(gtid_38854, m_30871)) && (sle64(0,
                                                                           defunc_1_f_res_39035) &&
                                                                     slt64(defunc_1_f_res_39035,
                                                                           N_30870))) {
            ((__global float *) mem_44297)[gtid_38854 * N_30870 +
                                           defunc_1_f_res_39035] = x_39030;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39022
}
__kernel void mainzisegmap_38932(__global int *global_failure, int64_t N_30870,
                                 int64_t m_30871, int64_t i_31137, __global
                                 unsigned char *mem_44323, __global
                                 unsigned char *mem_44329)
{
    #define segmap_group_sizze_38986 (mainzisegmap_group_sizze_38934)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45638;
    int32_t local_tid_45639;
    int64_t group_sizze_45642;
    int32_t wave_sizze_45641;
    int32_t group_tid_45640;
    
    global_tid_45638 = get_global_id(0);
    local_tid_45639 = get_local_id(0);
    group_sizze_45642 = get_local_size(0);
    wave_sizze_45641 = LOCKSTEP_WIDTH;
    group_tid_45640 = get_group_id(0);
    
    int32_t phys_tid_38932;
    
    phys_tid_38932 = global_tid_45638;
    
    int64_t gtid_38931;
    
    gtid_38931 = sext_i32_i64(group_tid_45640) * segmap_group_sizze_38986 +
        sext_i32_i64(local_tid_45639);
    if (slt64(gtid_38931, m_30871)) {
        int64_t last_res_38990 = ((__global int64_t *) mem_44323)[gtid_38931 *
                                                                  N_30870 +
                                                                  i_31137];
        int32_t defunc_0_f_res_38991 = sext_i64_i32(last_res_38990);
        
        ((__global int32_t *) mem_44329)[gtid_38931] = defunc_0_f_res_38991;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38986
}
__kernel void mainzisegmap_39183(__global int *global_failure, int64_t m_30871,
                                 float hfrac_30877, int32_t k2p2_30886, __global
                                 unsigned char *mem_44383, __global
                                 unsigned char *mem_44386, __global
                                 unsigned char *mem_44389, __global
                                 unsigned char *mem_44391)
{
    #define segmap_group_sizze_39268 (mainzisegmap_group_sizze_39185)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45798;
    int32_t local_tid_45799;
    int64_t group_sizze_45802;
    int32_t wave_sizze_45801;
    int32_t group_tid_45800;
    
    global_tid_45798 = get_global_id(0);
    local_tid_45799 = get_local_id(0);
    group_sizze_45802 = get_local_size(0);
    wave_sizze_45801 = LOCKSTEP_WIDTH;
    group_tid_45800 = get_group_id(0);
    
    int32_t phys_tid_39183;
    
    phys_tid_39183 = global_tid_45798;
    
    int64_t gtid_39182;
    
    gtid_39182 = sext_i32_i64(group_tid_45800) * segmap_group_sizze_39268 +
        sext_i32_i64(local_tid_45799);
    if (slt64(gtid_39182, m_30871)) {
        int32_t defunc_0_f_res_39272 = ((__global
                                         int32_t *) mem_44383)[gtid_39182];
        float defunc_0_f_res_39273 = ((__global float *) mem_44386)[gtid_39182];
        int32_t r32_arg_39274 = sub32(defunc_0_f_res_39272, k2p2_30886);
        float i32_res_39275 = sitofp_i32_f32(r32_arg_39274);
        float sqrt_arg_39276 = defunc_0_f_res_39273 / i32_res_39275;
        float sqrt_res_39277;
        
        sqrt_res_39277 = futrts_sqrt32(sqrt_arg_39276);
        
        float i32_res_39278 = sitofp_i32_f32(defunc_0_f_res_39272);
        float t32_arg_39279 = hfrac_30877 * i32_res_39278;
        int32_t f32_res_39280 = fptosi_f32_i32(t32_arg_39279);
        
        ((__global int32_t *) mem_44389)[gtid_39182] = f32_res_39280;
        ((__global float *) mem_44391)[gtid_39182] = sqrt_res_39277;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39268
}
__kernel void mainzisegmap_39454(__global int *global_failure, float lam_30878,
                                 int64_t iota32_arg_31257, int32_t x_31262,
                                 float i32_res_31270, __global
                                 unsigned char *mappingindices_mem_43531,
                                 __global unsigned char *mem_44433, __global
                                 unsigned char *mem_44435)
{
    #define segmap_group_sizze_39473 (mainzisegmap_group_sizze_39456)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45908;
    int32_t local_tid_45909;
    int64_t group_sizze_45912;
    int32_t wave_sizze_45911;
    int32_t group_tid_45910;
    
    global_tid_45908 = get_global_id(0);
    local_tid_45909 = get_local_id(0);
    group_sizze_45912 = get_local_size(0);
    wave_sizze_45911 = LOCKSTEP_WIDTH;
    group_tid_45910 = get_group_id(0);
    
    int32_t phys_tid_39454;
    
    phys_tid_39454 = global_tid_45908;
    
    int64_t gtid_39453;
    
    gtid_39453 = sext_i32_i64(group_tid_45910) * segmap_group_sizze_39473 +
        sext_i32_i64(local_tid_45909);
    if (slt64(gtid_39453, iota32_arg_31257)) {
        int32_t defunc_0_f_res_39478 = sext_i64_i32(gtid_39453);
        int32_t t_39479 = add32(x_31262, defunc_0_f_res_39478);
        int32_t i_39480 = sub32(t_39479, 1);
        int64_t i_39481 = sext_i32_i64(i_39480);
        int32_t time_39482 = ((__global
                               int32_t *) mappingindices_mem_43531)[i_39481];
        float i32_res_39483 = sitofp_i32_f32(time_39482);
        float logplus_arg_39484 = i32_res_39483 / i32_res_31270;
        bool cond_39485 = 2.7182817F < logplus_arg_39484;
        float logplus_res_39486;
        
        if (cond_39485) {
            float log_res_39487;
            
            log_res_39487 = futrts_log32(logplus_arg_39484);
            logplus_res_39486 = log_res_39487;
        } else {
            logplus_res_39486 = 1.0F;
        }
        
        float sqrt_res_39488;
        
        sqrt_res_39488 = futrts_sqrt32(logplus_res_39486);
        
        float defunc_0_f_res_39489 = lam_30878 * sqrt_res_39488;
        
        ((__global int32_t *) mem_44433)[gtid_39453] = defunc_0_f_res_39478;
        ((__global float *) mem_44435)[gtid_39453] = defunc_0_f_res_39489;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39473
}
__kernel void mainzisegmap_39527(__global int *global_failure,
                                 int failure_is_an_option, __global
                                 int64_t *global_failure_args, int64_t N_30870,
                                 int64_t m_30871, int32_t n_30875,
                                 int64_t iota32_arg_31257, int32_t iters_31288,
                                 int64_t i_31290,
                                 int64_t segmap_usable_groups_39766, __global
                                 unsigned char *defunc_4_map_res_mem_44331,
                                 __global
                                 unsigned char *defunc_4_map_res_mem_44332,
                                 __global
                                 unsigned char *defunc_4_map_res_mem_44333,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_44395,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_44396,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_44397,
                                 __global
                                 unsigned char *defunc_0_f_res_mem_44430,
                                 __global unsigned char *mem_44435, __global
                                 unsigned char *mem_44438, __global
                                 unsigned char *mem_44457, __global
                                 unsigned char *mem_44459, __global
                                 unsigned char *mem_44461, __global
                                 unsigned char *mem_44463, __global
                                 unsigned char *mem_44465, __global
                                 unsigned char *mem_44527, __global
                                 unsigned char *mem_44546, __global
                                 unsigned char *mem_44548, __global
                                 unsigned char *mem_44550, __global
                                 unsigned char *double_buffer_mem_44846)
{
    #define segmap_group_sizze_39765 (mainzisegmap_group_sizze_39529)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45917;
    int32_t local_tid_45918;
    int64_t group_sizze_45921;
    int32_t wave_sizze_45920;
    int32_t group_tid_45919;
    
    global_tid_45917 = get_global_id(0);
    local_tid_45918 = get_local_id(0);
    group_sizze_45921 = get_local_size(0);
    wave_sizze_45920 = LOCKSTEP_WIDTH;
    group_tid_45919 = get_group_id(0);
    
    int32_t phys_tid_39527;
    
    phys_tid_39527 = global_tid_45917;
    
    int64_t gtid_39526;
    
    gtid_39526 = sext_i32_i64(group_tid_45919) * segmap_group_sizze_39765 +
        sext_i32_i64(local_tid_45918);
    if (slt64(gtid_39526, m_30871)) {
        int32_t x_39770 = ((__global
                            int32_t *) defunc_4_map_res_mem_44331)[gtid_39526];
        int32_t x_39771 = ((__global
                            int32_t *) defunc_3_map_res_mem_44396)[gtid_39526];
        float x_39772 = ((__global
                          float *) defunc_3_map_res_mem_44397)[gtid_39526];
        int32_t x_39773 = ((__global
                            int32_t *) defunc_3_map_res_mem_44395)[gtid_39526];
        float x_39774 = ((__global
                          float *) defunc_0_f_res_mem_44430)[gtid_39526];
        int32_t y_39777 = sub32(x_39770, x_39771);
        float i32_res_39778 = sitofp_i32_f32(x_39771);
        float sqrt_res_39779;
        
        sqrt_res_39779 = futrts_sqrt32(i32_res_39778);
        
        float y_39780 = x_39772 * sqrt_res_39779;
        float inpacc_39781;
        bool defunc_0_f_res_39782;
        int32_t defunc_0_f_res_39783;
        float defunc_0_f_res_39784;
        float inpacc_39786;
        bool inpacc_39787;
        int32_t inpacc_39788;
        float inpacc_39789;
        
        inpacc_39786 = 0.0F;
        inpacc_39787 = 0;
        inpacc_39788 = -1;
        inpacc_39789 = 0.0F;
        for (int64_t i_43380 = 0; i_43380 < iota32_arg_31257; i_43380++) {
            int32_t index_primexp_43402 = sext_i64_i32(i_43380);
            bool cond_39797 = sle32(y_39777, index_primexp_43402);
            float defunc_0_f_res_39798;
            
            if (cond_39797) {
                defunc_0_f_res_39798 = 0.0F;
            } else {
                bool cond_39799 = index_primexp_43402 == 0;
                float defunc_0_f_res_f_res_39800;
                
                if (cond_39799) {
                    defunc_0_f_res_f_res_39800 = x_39774;
                } else {
                    int32_t i_39801 = add32(x_39771, index_primexp_43402);
                    int64_t i_39802 = sext_i32_i64(i_39801);
                    float x_39803 = ((__global
                                      float *) defunc_4_map_res_mem_44332)[gtid_39526 *
                                                                           N_30870 +
                                                                           i_39802];
                    int32_t x_39804 = sub32(x_39771, x_39773);
                    int32_t i_39805 = add32(x_39804, index_primexp_43402);
                    int64_t i_39806 = sext_i32_i64(i_39805);
                    float y_39807 = ((__global
                                      float *) defunc_4_map_res_mem_44332)[gtid_39526 *
                                                                           N_30870 +
                                                                           i_39806];
                    float defunc_0_f_res_f_res_f_res_39808 = x_39803 - y_39807;
                    
                    defunc_0_f_res_f_res_39800 =
                        defunc_0_f_res_f_res_f_res_39808;
                }
                defunc_0_f_res_39798 = defunc_0_f_res_f_res_39800;
            }
            
            float defunc_1_op_res_39813 = inpacc_39786 + defunc_0_f_res_39798;
            float x_39832 = ((__global float *) mem_44435)[i_43380];
            float defunc_0_f_res_39835 = defunc_1_op_res_39813 / y_39780;
            bool cond_39836 = slt32(index_primexp_43402, y_39777);
            bool isnan_res_39837;
            
            isnan_res_39837 = futrts_isnan32(defunc_0_f_res_39835);
            
            bool cond_t_res_39838 = !isnan_res_39837;
            bool x_39839 = cond_39836 && cond_t_res_39838;
            float abs_res_39840 = (float) fabs(defunc_0_f_res_39835);
            bool defunc_2_f_res_t_res_39841 = x_39832 < abs_res_39840;
            bool x_39842 = x_39839 && defunc_2_f_res_t_res_39841;
            float defunc_1_f_res_39843;
            
            if (cond_39836) {
                defunc_1_f_res_39843 = defunc_0_f_res_39835;
            } else {
                defunc_1_f_res_39843 = 0.0F;
            }
            
            int32_t x_39821 = index_primexp_43402;
            bool x_39825 = x_39842 && x_39842;
            int32_t defunc_1_op_res_f_res_39829;
            
            if (x_39842) {
                defunc_1_op_res_f_res_39829 = x_39821;
            } else {
                defunc_1_op_res_f_res_39829 = -1;
            }
            
            bool defunc_1_op_res_39844;
            int32_t defunc_1_op_res_39845;
            
            if (inpacc_39787) {
                defunc_1_op_res_39844 = inpacc_39787;
                defunc_1_op_res_39845 = inpacc_39788;
            } else {
                bool x_39846 = x_39825 && x_39825;
                bool x_39847 = !x_39825;
                bool y_39848 = inpacc_39787 && x_39847;
                bool defunc_1_op_res_f_res_39849 = x_39846 || y_39848;
                int32_t defunc_1_op_res_f_res_39850;
                
                if (x_39825) {
                    defunc_1_op_res_f_res_39850 = defunc_1_op_res_f_res_39829;
                } else {
                    defunc_1_op_res_f_res_39850 = inpacc_39788;
                }
                defunc_1_op_res_39844 = defunc_1_op_res_f_res_39849;
                defunc_1_op_res_39845 = defunc_1_op_res_f_res_39850;
            }
            
            float defunc_1_op_res_39851 = inpacc_39789 + defunc_1_f_res_39843;
            float inpacc_tmp_45922 = defunc_1_op_res_39813;
            bool inpacc_tmp_45923 = defunc_1_op_res_39844;
            int32_t inpacc_tmp_45924 = defunc_1_op_res_39845;
            float inpacc_tmp_45925 = defunc_1_op_res_39851;
            
            inpacc_39786 = inpacc_tmp_45922;
            inpacc_39787 = inpacc_tmp_45923;
            inpacc_39788 = inpacc_tmp_45924;
            inpacc_39789 = inpacc_tmp_45925;
        }
        inpacc_39781 = inpacc_39786;
        defunc_0_f_res_39782 = inpacc_39787;
        defunc_0_f_res_39783 = inpacc_39788;
        defunc_0_f_res_39784 = inpacc_39789;
        
        bool cond_39852 = y_39777 == 0;
        float defunc_0_f_res_39853;
        
        if (cond_39852) {
            defunc_0_f_res_39853 = 0.0F;
        } else {
            float i32_res_39854 = sitofp_i32_f32(y_39777);
            float defunc_0_f_res_f_res_39855 = defunc_0_f_res_39784 /
                  i32_res_39854;
            
            defunc_0_f_res_39853 = defunc_0_f_res_f_res_39855;
        }
        for (int64_t i_43457 = 0; i_43457 < iota32_arg_31257; i_43457++) {
            int32_t index_primexp_43522 = sext_i64_i32(i_43457);
            bool cond_39858 = slt32(index_primexp_43522, y_39777);
            bool cond_39859;
            
            if (cond_39858) {
                int32_t i_39860 = add32(x_39771, index_primexp_43522);
                int64_t i_39861 = sext_i32_i64(i_39860);
                bool x_39862 = sle64(0, i_39861);
                bool y_39863 = slt64(i_39861, N_30870);
                bool bounds_check_39864 = x_39862 && y_39863;
                bool index_certs_39865;
                
                if (!bounds_check_39864) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 1) ==
                            -1) {
                            global_failure_args[0] = i_39861;
                            global_failure_args[1] = N_30870;
                            ;
                        }
                        return;
                    }
                }
                
                float isnan_arg_39866 = ((__global
                                          float *) defunc_4_map_res_mem_44332)[gtid_39526 *
                                                                               N_30870 +
                                                                               i_39861];
                bool isnan_res_39867;
                
                isnan_res_39867 = futrts_isnan32(isnan_arg_39866);
                
                bool cond_t_res_39868 = !isnan_res_39867;
                
                cond_39859 = cond_t_res_39868;
            } else {
                cond_39859 = 0;
            }
            
            float defunc_0_f_res_39869;
            
            if (cond_39859) {
                int32_t i_39870 = add32(x_39771, index_primexp_43522);
                int64_t i_39871 = sext_i32_i64(i_39870);
                bool x_39872 = sle64(0, i_39871);
                bool y_39873 = slt64(i_39871, N_30870);
                bool bounds_check_39874 = x_39872 && y_39873;
                bool index_certs_39875;
                
                if (!bounds_check_39874) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 2) ==
                            -1) {
                            global_failure_args[0] = i_39871;
                            global_failure_args[1] = N_30870;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_0_f_res_t_res_39876 = ((__global
                                                     float *) defunc_4_map_res_mem_44332)[gtid_39526 *
                                                                                          N_30870 +
                                                                                          i_39871];
                
                defunc_0_f_res_39869 = defunc_0_f_res_t_res_39876;
            } else {
                defunc_0_f_res_39869 = INFINITY;
            }
            ((__global float *) mem_44438)[phys_tid_39527 + i_43457 *
                                           (segmap_usable_groups_39766 *
                                            segmap_group_sizze_39765)] =
                defunc_0_f_res_39869;
        }
        for (int64_t i_45927 = 0; i_45927 < iota32_arg_31257; i_45927++) {
            ((__global float *) double_buffer_mem_44846)[phys_tid_39527 +
                                                         i_45927 *
                                                         (segmap_usable_groups_39766 *
                                                          segmap_group_sizze_39765)] =
                ((__global float *) mem_44438)[phys_tid_39527 + i_45927 *
                                               (segmap_usable_groups_39766 *
                                                segmap_group_sizze_39765)];
        }
        for (int32_t i_39878 = 0; i_39878 < iters_31288; i_39878++) {
            int32_t defunc_2_radix_sort_step_arg_39880 = mul32(2, i_39878);
            int32_t defunc_0_get_bit_arg_39881 = add32(1,
                                                       defunc_2_radix_sort_step_arg_39880);
            bool cond_f_res_39882 = defunc_0_get_bit_arg_39881 == 31;
            bool cond_f_res_39883 = defunc_2_radix_sort_step_arg_39880 == 31;
            int64_t discard_43479;
            int64_t discard_43480;
            int64_t discard_43481;
            int64_t discard_43482;
            int64_t scanacc_43464;
            int64_t scanacc_43465;
            int64_t scanacc_43466;
            int64_t scanacc_43467;
            
            scanacc_43464 = 0;
            scanacc_43465 = 0;
            scanacc_43466 = 0;
            scanacc_43467 = 0;
            for (int64_t i_43473 = 0; i_43473 < iota32_arg_31257; i_43473++) {
                float x_39901 = ((__global
                                  float *) double_buffer_mem_44846)[phys_tid_39527 +
                                                                    i_43473 *
                                                                    (segmap_usable_groups_39766 *
                                                                     segmap_group_sizze_39765)];
                int32_t i32_arg_39902;
                
                i32_arg_39902 = futrts_to_bits32(x_39901);
                
                int32_t unsign_arg_39903 = ashr32(i32_arg_39902,
                                                  defunc_0_get_bit_arg_39881);
                int32_t unsign_arg_39904 = 1 & unsign_arg_39903;
                int32_t unsign_arg_39905 = ashr32(i32_arg_39902, 31);
                int32_t unsign_arg_39906 = 1 & unsign_arg_39905;
                bool cond_39907 = unsign_arg_39906 == 1;
                bool x_39908 = !cond_39907;
                bool y_39909 = cond_f_res_39882 && x_39908;
                bool cond_39910 = cond_39907 || y_39909;
                int32_t defunc_1_get_bit_res_39911;
                
                if (cond_39910) {
                    int32_t defunc_1_get_bit_res_t_res_39912 = 1 ^
                            unsign_arg_39904;
                    
                    defunc_1_get_bit_res_39911 =
                        defunc_1_get_bit_res_t_res_39912;
                } else {
                    defunc_1_get_bit_res_39911 = unsign_arg_39904;
                }
                
                int32_t x_39913 = mul32(2, defunc_1_get_bit_res_39911);
                int32_t unsign_arg_39914 = ashr32(i32_arg_39902,
                                                  defunc_2_radix_sort_step_arg_39880);
                int32_t unsign_arg_39915 = 1 & unsign_arg_39914;
                bool y_39916 = cond_f_res_39883 && x_39908;
                bool cond_39917 = cond_39907 || y_39916;
                int32_t defunc_1_get_bit_res_39918;
                
                if (cond_39917) {
                    int32_t defunc_1_get_bit_res_t_res_39919 = 1 ^
                            unsign_arg_39915;
                    
                    defunc_1_get_bit_res_39918 =
                        defunc_1_get_bit_res_t_res_39919;
                } else {
                    defunc_1_get_bit_res_39918 = unsign_arg_39915;
                }
                
                int32_t defunc_0_f_res_39920 = add32(x_39913,
                                                     defunc_1_get_bit_res_39918);
                bool cond_39921 = defunc_0_f_res_39920 == 0;
                int64_t defunc_0_f_res_39922 = btoi_bool_i64(cond_39921);
                int64_t defunc_0_f_res_39923;
                int64_t defunc_0_f_res_39924;
                int64_t defunc_0_f_res_39925;
                
                if (cond_39921) {
                    defunc_0_f_res_39923 = 0;
                    defunc_0_f_res_39924 = 0;
                    defunc_0_f_res_39925 = 0;
                } else {
                    bool cond_39926 = defunc_0_f_res_39920 == 1;
                    int64_t defunc_0_f_res_f_res_39927 =
                            btoi_bool_i64(cond_39926);
                    int64_t defunc_0_f_res_f_res_39928;
                    int64_t defunc_0_f_res_f_res_39929;
                    
                    if (cond_39926) {
                        defunc_0_f_res_f_res_39928 = 0;
                        defunc_0_f_res_f_res_39929 = 0;
                    } else {
                        bool cond_39930 = defunc_0_f_res_39920 == 2;
                        int64_t defunc_0_f_res_f_res_f_res_39931 =
                                btoi_bool_i64(cond_39930);
                        bool cond_neg_39932 = !cond_39930;
                        int64_t defunc_0_f_res_f_res_f_res_39933 =
                                btoi_bool_i64(cond_neg_39932);
                        
                        defunc_0_f_res_f_res_39928 =
                            defunc_0_f_res_f_res_f_res_39931;
                        defunc_0_f_res_f_res_39929 =
                            defunc_0_f_res_f_res_f_res_39933;
                    }
                    defunc_0_f_res_39923 = defunc_0_f_res_f_res_39927;
                    defunc_0_f_res_39924 = defunc_0_f_res_f_res_39928;
                    defunc_0_f_res_39925 = defunc_0_f_res_f_res_39929;
                }
                
                int64_t defunc_1_op_res_39897 = add64(defunc_0_f_res_39922,
                                                      scanacc_43464);
                int64_t defunc_1_op_res_39898 = add64(defunc_0_f_res_39923,
                                                      scanacc_43465);
                int64_t defunc_1_op_res_39899 = add64(defunc_0_f_res_39924,
                                                      scanacc_43466);
                int64_t defunc_1_op_res_39900 = add64(defunc_0_f_res_39925,
                                                      scanacc_43467);
                
                ((__global int64_t *) mem_44457)[phys_tid_39527 + i_43473 *
                                                 (segmap_usable_groups_39766 *
                                                  segmap_group_sizze_39765)] =
                    defunc_1_op_res_39897;
                ((__global int64_t *) mem_44459)[phys_tid_39527 + i_43473 *
                                                 (segmap_usable_groups_39766 *
                                                  segmap_group_sizze_39765)] =
                    defunc_1_op_res_39898;
                ((__global int64_t *) mem_44461)[phys_tid_39527 + i_43473 *
                                                 (segmap_usable_groups_39766 *
                                                  segmap_group_sizze_39765)] =
                    defunc_1_op_res_39899;
                ((__global int64_t *) mem_44463)[phys_tid_39527 + i_43473 *
                                                 (segmap_usable_groups_39766 *
                                                  segmap_group_sizze_39765)] =
                    defunc_1_op_res_39900;
                ((__global int32_t *) mem_44465)[phys_tid_39527 + i_43473 *
                                                 (segmap_usable_groups_39766 *
                                                  segmap_group_sizze_39765)] =
                    defunc_0_f_res_39920;
                
                int64_t scanacc_tmp_45929 = defunc_1_op_res_39897;
                int64_t scanacc_tmp_45930 = defunc_1_op_res_39898;
                int64_t scanacc_tmp_45931 = defunc_1_op_res_39899;
                int64_t scanacc_tmp_45932 = defunc_1_op_res_39900;
                
                scanacc_43464 = scanacc_tmp_45929;
                scanacc_43465 = scanacc_tmp_45930;
                scanacc_43466 = scanacc_tmp_45931;
                scanacc_43467 = scanacc_tmp_45932;
            }
            discard_43479 = scanacc_43464;
            discard_43480 = scanacc_43465;
            discard_43481 = scanacc_43466;
            discard_43482 = scanacc_43467;
            
            int64_t last_res_39934 = ((__global
                                       int64_t *) mem_44457)[phys_tid_39527 +
                                                             i_31290 *
                                                             (segmap_usable_groups_39766 *
                                                              segmap_group_sizze_39765)];
            int64_t last_res_39935 = ((__global
                                       int64_t *) mem_44459)[phys_tid_39527 +
                                                             i_31290 *
                                                             (segmap_usable_groups_39766 *
                                                              segmap_group_sizze_39765)];
            int64_t last_res_39936 = ((__global
                                       int64_t *) mem_44461)[phys_tid_39527 +
                                                             i_31290 *
                                                             (segmap_usable_groups_39766 *
                                                              segmap_group_sizze_39765)];
            
            for (int64_t i_45938 = 0; i_45938 < iota32_arg_31257; i_45938++) {
                ((__global float *) mem_44527)[phys_tid_39527 + i_45938 *
                                               (segmap_usable_groups_39766 *
                                                segmap_group_sizze_39765)] =
                    ((__global
                      float *) double_buffer_mem_44846)[phys_tid_39527 +
                                                        i_45938 *
                                                        (segmap_usable_groups_39766 *
                                                         segmap_group_sizze_39765)];
            }
            for (int64_t write_iter_43483 = 0; write_iter_43483 <
                 iota32_arg_31257; write_iter_43483++) {
                int32_t write_iv_43485 = ((__global
                                           int32_t *) mem_44465)[phys_tid_39527 +
                                                                 write_iter_43483 *
                                                                 (segmap_usable_groups_39766 *
                                                                  segmap_group_sizze_39765)];
                bool match_lit_39945 = 0 == write_iv_43485;
                int64_t defunc_1_f_res_39946;
                
                if (match_lit_39945) {
                    int64_t write_iv_43486 = ((__global
                                               int64_t *) mem_44457)[phys_tid_39527 +
                                                                     write_iter_43483 *
                                                                     (segmap_usable_groups_39766 *
                                                                      segmap_group_sizze_39765)];
                    int64_t case_res_39947 = sub64(write_iv_43486, 1);
                    
                    defunc_1_f_res_39946 = case_res_39947;
                } else {
                    int64_t write_iv_43487 = ((__global
                                               int64_t *) mem_44459)[phys_tid_39527 +
                                                                     write_iter_43483 *
                                                                     (segmap_usable_groups_39766 *
                                                                      segmap_group_sizze_39765)];
                    int64_t write_iv_43488 = ((__global
                                               int64_t *) mem_44461)[phys_tid_39527 +
                                                                     write_iter_43483 *
                                                                     (segmap_usable_groups_39766 *
                                                                      segmap_group_sizze_39765)];
                    int64_t write_iv_43489 = ((__global
                                               int64_t *) mem_44463)[phys_tid_39527 +
                                                                     write_iter_43483 *
                                                                     (segmap_usable_groups_39766 *
                                                                      segmap_group_sizze_39765)];
                    bool match_lit_39948 = 1 == write_iv_43485;
                    int64_t x_39949;
                    
                    if (match_lit_39948) {
                        int64_t x_39950 = add64(last_res_39934, write_iv_43487);
                        int64_t case_res_39951 = sub64(x_39950, 1);
                        
                        x_39949 = case_res_39951;
                    } else {
                        bool match_lit_39952 = 2 == write_iv_43485;
                        int64_t x_39953;
                        
                        if (match_lit_39952) {
                            int64_t x_39954 = add64(last_res_39934,
                                                    last_res_39935);
                            int64_t x_39955 = add64(x_39954, write_iv_43488);
                            int64_t case_res_39956 = sub64(x_39955, 1);
                            
                            x_39953 = case_res_39956;
                        } else {
                            int64_t x_39957 = add64(last_res_39934,
                                                    last_res_39935);
                            int64_t x_39958 = add64(last_res_39936, x_39957);
                            int64_t x_39959 = add64(x_39958, write_iv_43489);
                            int64_t defunc_1_f_res_res_39960 = sub64(x_39959,
                                                                     1);
                            
                            x_39953 = defunc_1_f_res_res_39960;
                        }
                        x_39949 = x_39953;
                    }
                    defunc_1_f_res_39946 = x_39949;
                }
                
                bool less_than_zzero_43491 = slt64(defunc_1_f_res_39946, 0);
                bool greater_than_sizze_43492 = sle64(iota32_arg_31257,
                                                      defunc_1_f_res_39946);
                bool outside_bounds_dim_43493 = less_than_zzero_43491 ||
                     greater_than_sizze_43492;
                
                if (!outside_bounds_dim_43493) {
                    for (int64_t i_45940 = 0; i_45940 < 1; i_45940++) {
                        ((__global float *) mem_44527)[phys_tid_39527 +
                                                       (defunc_1_f_res_39946 +
                                                        i_45940) *
                                                       (segmap_usable_groups_39766 *
                                                        segmap_group_sizze_39765)] =
                            ((__global
                              float *) double_buffer_mem_44846)[phys_tid_39527 +
                                                                segmap_usable_groups_39766 *
                                                                segmap_group_sizze_39765 *
                                                                write_iter_43483 +
                                                                i_45940 *
                                                                (segmap_usable_groups_39766 *
                                                                 segmap_group_sizze_39765)];
                    }
                }
            }
            for (int64_t i_45941 = 0; i_45941 < iota32_arg_31257; i_45941++) {
                ((__global float *) double_buffer_mem_44846)[phys_tid_39527 +
                                                             i_45941 *
                                                             (segmap_usable_groups_39766 *
                                                              segmap_group_sizze_39765)] =
                    ((__global float *) mem_44527)[phys_tid_39527 + i_45941 *
                                                   (segmap_usable_groups_39766 *
                                                    segmap_group_sizze_39765)];
            }
        }
        
        int32_t i_39961 = sdiv32(y_39777, 2);
        int32_t j_39962 = sub32(i_39961, 1);
        bool cond_39963 = x_39770 == x_39771;
        float defunc_0_f_res_39964;
        
        if (cond_39963) {
            defunc_0_f_res_39964 = 0.0F;
        } else {
            int32_t x_39965 = smod32(y_39777, 2);
            bool cond_39966 = x_39965 == 0;
            float defunc_0_f_res_f_res_39967;
            
            if (cond_39966) {
                int64_t j_39968 = sext_i32_i64(j_39962);
                bool x_39969 = sle64(0, j_39968);
                bool y_39970 = slt64(j_39968, iota32_arg_31257);
                bool bounds_check_39971 = x_39969 && y_39970;
                bool index_certs_39972;
                
                if (!bounds_check_39971) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 3) ==
                            -1) {
                            global_failure_args[0] = j_39968;
                            global_failure_args[1] = iota32_arg_31257;
                            ;
                        }
                        return;
                    }
                }
                
                float x_39973 = ((__global
                                  float *) double_buffer_mem_44846)[phys_tid_39527 +
                                                                    j_39968 *
                                                                    (segmap_usable_groups_39766 *
                                                                     segmap_group_sizze_39765)];
                int64_t i_39974 = sext_i32_i64(i_39961);
                bool x_39975 = sle64(0, i_39974);
                bool y_39976 = slt64(i_39974, iota32_arg_31257);
                bool bounds_check_39977 = x_39975 && y_39976;
                bool index_certs_39978;
                
                if (!bounds_check_39977) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 4) ==
                            -1) {
                            global_failure_args[0] = i_39974;
                            global_failure_args[1] = iota32_arg_31257;
                            ;
                        }
                        return;
                    }
                }
                
                float y_39979 = ((__global
                                  float *) double_buffer_mem_44846)[phys_tid_39527 +
                                                                    i_39974 *
                                                                    (segmap_usable_groups_39766 *
                                                                     segmap_group_sizze_39765)];
                float x_39980 = x_39973 + y_39979;
                float defunc_0_f_res_f_res_t_res_39981 = x_39980 / 2.0F;
                
                defunc_0_f_res_f_res_39967 = defunc_0_f_res_f_res_t_res_39981;
            } else {
                int64_t i_39982 = sext_i32_i64(i_39961);
                bool x_39983 = sle64(0, i_39982);
                bool y_39984 = slt64(i_39982, iota32_arg_31257);
                bool bounds_check_39985 = x_39983 && y_39984;
                bool index_certs_39986;
                
                if (!bounds_check_39985) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 5) ==
                            -1) {
                            global_failure_args[0] = i_39982;
                            global_failure_args[1] = iota32_arg_31257;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_0_f_res_f_res_f_res_39987 = ((__global
                                                           float *) double_buffer_mem_44846)[phys_tid_39527 +
                                                                                             i_39982 *
                                                                                             (segmap_usable_groups_39766 *
                                                                                              segmap_group_sizze_39765)];
                
                defunc_0_f_res_f_res_39967 = defunc_0_f_res_f_res_f_res_39987;
            }
            defunc_0_f_res_39964 = defunc_0_f_res_f_res_39967;
        }
        
        bool cond_39988 = !defunc_0_f_res_39782;
        int32_t fst_breakzq_39989;
        
        if (cond_39988) {
            fst_breakzq_39989 = -1;
        } else {
            bool cond_39990 = slt32(defunc_0_f_res_39783, y_39777);
            int32_t adjustValInds_res_39991;
            
            if (cond_39990) {
                int32_t i_39992 = add32(x_39771, defunc_0_f_res_39783);
                int64_t i_39993 = sext_i32_i64(i_39992);
                int32_t x_39994 = ((__global
                                    int32_t *) defunc_4_map_res_mem_44333)[gtid_39526 *
                                                                           N_30870 +
                                                                           i_39993];
                int32_t adjustValInds_res_t_res_39995 = sub32(x_39994, n_30875);
                
                adjustValInds_res_39991 = adjustValInds_res_t_res_39995;
            } else {
                adjustValInds_res_39991 = -1;
            }
            fst_breakzq_39989 = adjustValInds_res_39991;
        }
        
        bool cond_39996 = sle32(x_39771, 5);
        bool cond_f_res_39997 = sle32(y_39777, 5);
        bool x_39998 = !cond_39996;
        bool y_39999 = cond_f_res_39997 && x_39998;
        bool cond_40000 = cond_39996 || y_39999;
        int32_t fst_breakzq_40001;
        
        if (cond_40000) {
            fst_breakzq_40001 = -2;
        } else {
            fst_breakzq_40001 = fst_breakzq_39989;
        }
        ((__global int32_t *) mem_44546)[gtid_39526] = fst_breakzq_40001;
        ((__global float *) mem_44548)[gtid_39526] = defunc_0_f_res_39853;
        ((__global float *) mem_44550)[gtid_39526] = defunc_0_f_res_39964;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39765
}
__kernel void mainzisegmap_40247(__global int *global_failure,
                                 int failure_is_an_option, __global
                                 int64_t *global_failure_args, int64_t N_30870,
                                 int64_t m_30871, int32_t n_30875,
                                 int64_t iota32_arg_31257, __global
                                 unsigned char *defunc_4_map_res_mem_44331,
                                 __global
                                 unsigned char *defunc_4_map_res_mem_44333,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_44396,
                                 __global unsigned char *mem_44597, __global
                                 unsigned char *mem_44611, __global
                                 unsigned char *mem_44613, __global
                                 unsigned char *defunc_2_radix_sort_res_r_mem_44681,
                                 __global unsigned char *mem_44684, __global
                                 unsigned char *mem_44686)
{
    #define segmap_group_sizze_41402 (mainzisegmap_group_sizze_40249)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46295;
    int32_t local_tid_46296;
    int64_t group_sizze_46299;
    int32_t wave_sizze_46298;
    int32_t group_tid_46297;
    
    global_tid_46295 = get_global_id(0);
    local_tid_46296 = get_local_id(0);
    group_sizze_46299 = get_local_size(0);
    wave_sizze_46298 = LOCKSTEP_WIDTH;
    group_tid_46297 = get_group_id(0);
    
    int32_t phys_tid_40247;
    
    phys_tid_40247 = global_tid_46295;
    
    int64_t gtid_40246;
    
    gtid_40246 = sext_i32_i64(group_tid_46297) * segmap_group_sizze_41402 +
        sext_i32_i64(local_tid_46296);
    if (slt64(gtid_40246, m_30871)) {
        int32_t x_41406 = ((__global
                            int32_t *) defunc_4_map_res_mem_44331)[gtid_40246];
        int32_t x_41407 = ((__global
                            int32_t *) defunc_3_map_res_mem_44396)[gtid_40246];
        int32_t y_41409 = ((__global int32_t *) mem_44597)[gtid_40246];
        bool defunc_0_f_res_41410 = ((__global bool *) mem_44611)[gtid_40246];
        int32_t i_41413 = sdiv32(y_41409, 2);
        int32_t j_41414 = sub32(i_41413, 1);
        bool cond_41415 = x_41406 == x_41407;
        float defunc_0_f_res_41416;
        
        if (cond_41415) {
            defunc_0_f_res_41416 = 0.0F;
        } else {
            int32_t x_41417 = smod32(y_41409, 2);
            bool cond_41418 = x_41417 == 0;
            float defunc_0_f_res_f_res_41419;
            
            if (cond_41418) {
                int64_t j_41420 = sext_i32_i64(j_41414);
                bool x_41421 = sle64(0, j_41420);
                bool y_41422 = slt64(j_41420, iota32_arg_31257);
                bool bounds_check_41423 = x_41421 && y_41422;
                bool index_certs_41424;
                
                if (!bounds_check_41423) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 13) ==
                            -1) {
                            global_failure_args[0] = j_41420;
                            global_failure_args[1] = iota32_arg_31257;
                            ;
                        }
                        return;
                    }
                }
                
                float x_41425 = ((__global
                                  float *) defunc_2_radix_sort_res_r_mem_44681)[gtid_40246 *
                                                                                iota32_arg_31257 +
                                                                                j_41420];
                int64_t i_41426 = sext_i32_i64(i_41413);
                bool x_41427 = sle64(0, i_41426);
                bool y_41428 = slt64(i_41426, iota32_arg_31257);
                bool bounds_check_41429 = x_41427 && y_41428;
                bool index_certs_41430;
                
                if (!bounds_check_41429) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 14) ==
                            -1) {
                            global_failure_args[0] = i_41426;
                            global_failure_args[1] = iota32_arg_31257;
                            ;
                        }
                        return;
                    }
                }
                
                float y_41431 = ((__global
                                  float *) defunc_2_radix_sort_res_r_mem_44681)[gtid_40246 *
                                                                                iota32_arg_31257 +
                                                                                i_41426];
                float x_41432 = x_41425 + y_41431;
                float defunc_0_f_res_f_res_t_res_41433 = x_41432 / 2.0F;
                
                defunc_0_f_res_f_res_41419 = defunc_0_f_res_f_res_t_res_41433;
            } else {
                int64_t i_41434 = sext_i32_i64(i_41413);
                bool x_41435 = sle64(0, i_41434);
                bool y_41436 = slt64(i_41434, iota32_arg_31257);
                bool bounds_check_41437 = x_41435 && y_41436;
                bool index_certs_41438;
                
                if (!bounds_check_41437) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 15) ==
                            -1) {
                            global_failure_args[0] = i_41434;
                            global_failure_args[1] = iota32_arg_31257;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_0_f_res_f_res_f_res_41439 = ((__global
                                                           float *) defunc_2_radix_sort_res_r_mem_44681)[gtid_40246 *
                                                                                                         iota32_arg_31257 +
                                                                                                         i_41434];
                
                defunc_0_f_res_f_res_41419 = defunc_0_f_res_f_res_f_res_41439;
            }
            defunc_0_f_res_41416 = defunc_0_f_res_f_res_41419;
        }
        
        bool cond_41440 = !defunc_0_f_res_41410;
        int32_t fst_breakzq_41441;
        
        if (cond_41440) {
            fst_breakzq_41441 = -1;
        } else {
            int32_t defunc_0_f_res_41411 = ((__global
                                             int32_t *) mem_44613)[gtid_40246];
            bool cond_41442 = slt32(defunc_0_f_res_41411, y_41409);
            int32_t adjustValInds_res_41443;
            
            if (cond_41442) {
                int32_t i_41444 = add32(x_41407, defunc_0_f_res_41411);
                int64_t i_41445 = sext_i32_i64(i_41444);
                int32_t x_41446 = ((__global
                                    int32_t *) defunc_4_map_res_mem_44333)[gtid_40246 *
                                                                           N_30870 +
                                                                           i_41445];
                int32_t adjustValInds_res_t_res_41447 = sub32(x_41446, n_30875);
                
                adjustValInds_res_41443 = adjustValInds_res_t_res_41447;
            } else {
                adjustValInds_res_41443 = -1;
            }
            fst_breakzq_41441 = adjustValInds_res_41443;
        }
        
        bool cond_41448 = sle32(x_41407, 5);
        bool cond_f_res_41449 = sle32(y_41409, 5);
        bool x_41450 = !cond_41448;
        bool y_41451 = cond_f_res_41449 && x_41450;
        bool cond_41452 = cond_41448 || y_41451;
        int32_t fst_breakzq_41453;
        
        if (cond_41452) {
            fst_breakzq_41453 = -2;
        } else {
            fst_breakzq_41453 = fst_breakzq_41441;
        }
        ((__global int32_t *) mem_44684)[gtid_40246] = fst_breakzq_41453;
        ((__global float *) mem_44686)[gtid_40246] = defunc_0_f_res_41416;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_41402
}
__kernel void mainzisegmap_40576(__global int *global_failure, int64_t m_30871,
                                 int64_t iota32_arg_31257, int64_t i_31290,
                                 __global unsigned char *mem_param_44627,
                                 __global unsigned char *mem_44654, __global
                                 unsigned char *mem_44657, __global
                                 unsigned char *mem_44660, __global
                                 unsigned char *mem_44663, __global
                                 unsigned char *mem_44666, __global
                                 unsigned char *mem_44669)
{
    #define segmap_group_sizze_41365 (mainzisegmap_group_sizze_40579)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46289;
    int32_t local_tid_46290;
    int64_t group_sizze_46293;
    int32_t wave_sizze_46292;
    int32_t group_tid_46291;
    
    global_tid_46289 = get_global_id(0);
    local_tid_46290 = get_local_id(0);
    group_sizze_46293 = get_local_size(0);
    wave_sizze_46292 = LOCKSTEP_WIDTH;
    group_tid_46291 = get_group_id(0);
    
    int32_t phys_tid_40576;
    
    phys_tid_40576 = global_tid_46289;
    
    int64_t gtid_40574;
    
    gtid_40574 = squot64(sext_i32_i64(group_tid_46291) *
                         segmap_group_sizze_41365 +
                         sext_i32_i64(local_tid_46290), iota32_arg_31257);
    
    int64_t gtid_40575;
    
    gtid_40575 = sext_i32_i64(group_tid_46291) * segmap_group_sizze_41365 +
        sext_i32_i64(local_tid_46290) - squot64(sext_i32_i64(group_tid_46291) *
                                                segmap_group_sizze_41365 +
                                                sext_i32_i64(local_tid_46290),
                                                iota32_arg_31257) *
        iota32_arg_31257;
    if (slt64(gtid_40574, m_30871) && slt64(gtid_40575, iota32_arg_31257)) {
        int32_t x_41378 = ((__global int32_t *) mem_44666)[gtid_40574 *
                                                           iota32_arg_31257 +
                                                           gtid_40575];
        float write_value_41383 = ((__global
                                    float *) mem_param_44627)[gtid_40574 *
                                                              iota32_arg_31257 +
                                                              gtid_40575];
        bool match_lit_41384 = 0 == x_41378;
        int64_t defunc_1_f_res_41385;
        
        if (match_lit_41384) {
            int64_t x_41379 = ((__global int64_t *) mem_44654)[gtid_40574 *
                                                               iota32_arg_31257 +
                                                               gtid_40575];
            int64_t case_res_41386 = sub64(x_41379, 1);
            
            defunc_1_f_res_41385 = case_res_41386;
        } else {
            int64_t last_res_41374 = ((__global
                                       int64_t *) mem_44654)[gtid_40574 *
                                                             iota32_arg_31257 +
                                                             i_31290];
            int64_t last_res_41375 = ((__global
                                       int64_t *) mem_44657)[gtid_40574 *
                                                             iota32_arg_31257 +
                                                             i_31290];
            int64_t last_res_41376 = ((__global
                                       int64_t *) mem_44660)[gtid_40574 *
                                                             iota32_arg_31257 +
                                                             i_31290];
            int64_t x_41380 = ((__global int64_t *) mem_44657)[gtid_40574 *
                                                               iota32_arg_31257 +
                                                               gtid_40575];
            int64_t x_41381 = ((__global int64_t *) mem_44660)[gtid_40574 *
                                                               iota32_arg_31257 +
                                                               gtid_40575];
            int64_t x_41382 = ((__global int64_t *) mem_44663)[gtid_40574 *
                                                               iota32_arg_31257 +
                                                               gtid_40575];
            bool match_lit_41387 = 1 == x_41378;
            int64_t x_41388;
            
            if (match_lit_41387) {
                int64_t x_41389 = add64(last_res_41374, x_41380);
                int64_t case_res_41390 = sub64(x_41389, 1);
                
                x_41388 = case_res_41390;
            } else {
                bool match_lit_41391 = 2 == x_41378;
                int64_t x_41392;
                
                if (match_lit_41391) {
                    int64_t x_41393 = add64(last_res_41374, last_res_41375);
                    int64_t x_41394 = add64(x_41381, x_41393);
                    int64_t case_res_41395 = sub64(x_41394, 1);
                    
                    x_41392 = case_res_41395;
                } else {
                    int64_t x_41396 = add64(last_res_41374, last_res_41375);
                    int64_t x_41397 = add64(last_res_41376, x_41396);
                    int64_t x_41398 = add64(x_41382, x_41397);
                    int64_t defunc_1_f_res_res_41399 = sub64(x_41398, 1);
                    
                    x_41392 = defunc_1_f_res_res_41399;
                }
                x_41388 = x_41392;
            }
            defunc_1_f_res_41385 = x_41388;
        }
        if ((sle64(0, gtid_40574) && slt64(gtid_40574, m_30871)) && (sle64(0,
                                                                           defunc_1_f_res_41385) &&
                                                                     slt64(defunc_1_f_res_41385,
                                                                           iota32_arg_31257))) {
            ((__global float *) mem_44669)[gtid_40574 * iota32_arg_31257 +
                                           defunc_1_f_res_41385] =
                write_value_41383;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_41365
}
__kernel void mainzisegmap_40826(__global int *global_failure,
                                 int failure_is_an_option, __global
                                 int64_t *global_failure_args, int64_t N_30870,
                                 int64_t m_30871, int64_t iota32_arg_31257,
                                 __global
                                 unsigned char *defunc_4_map_res_mem_44332,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_44396,
                                 __global unsigned char *mem_44597, __global
                                 unsigned char *mem_44619)
{
    #define segmap_group_sizze_41171 (mainzisegmap_group_sizze_40829)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46158;
    int32_t local_tid_46159;
    int64_t group_sizze_46162;
    int32_t wave_sizze_46161;
    int32_t group_tid_46160;
    
    global_tid_46158 = get_global_id(0);
    local_tid_46159 = get_local_id(0);
    group_sizze_46162 = get_local_size(0);
    wave_sizze_46161 = LOCKSTEP_WIDTH;
    group_tid_46160 = get_group_id(0);
    
    int32_t phys_tid_40826;
    
    phys_tid_40826 = global_tid_46158;
    
    int64_t gtid_40824;
    
    gtid_40824 = squot64(sext_i32_i64(group_tid_46160) *
                         segmap_group_sizze_41171 +
                         sext_i32_i64(local_tid_46159), iota32_arg_31257);
    
    int64_t gtid_40825;
    
    gtid_40825 = sext_i32_i64(group_tid_46160) * segmap_group_sizze_41171 +
        sext_i32_i64(local_tid_46159) - squot64(sext_i32_i64(group_tid_46160) *
                                                segmap_group_sizze_41171 +
                                                sext_i32_i64(local_tid_46159),
                                                iota32_arg_31257) *
        iota32_arg_31257;
    if (slt64(gtid_40824, m_30871) && slt64(gtid_40825, iota32_arg_31257)) {
        int32_t x_41174 = ((__global
                            int32_t *) defunc_3_map_res_mem_44396)[gtid_40824];
        int32_t y_41176 = ((__global int32_t *) mem_44597)[gtid_40824];
        int32_t index_primexp_41548 = sext_i64_i32(gtid_40825);
        bool cond_41178 = slt32(index_primexp_41548, y_41176);
        bool cond_41179;
        
        if (cond_41178) {
            int32_t i_41180 = add32(x_41174, index_primexp_41548);
            int64_t i_41181 = sext_i32_i64(i_41180);
            bool x_41182 = sle64(0, i_41181);
            bool y_41183 = slt64(i_41181, N_30870);
            bool bounds_check_41184 = x_41182 && y_41183;
            bool index_certs_41185;
            
            if (!bounds_check_41184) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 11) ==
                        -1) {
                        global_failure_args[0] = i_41181;
                        global_failure_args[1] = N_30870;
                        ;
                    }
                    return;
                }
            }
            
            float isnan_arg_41186 = ((__global
                                      float *) defunc_4_map_res_mem_44332)[gtid_40824 *
                                                                           N_30870 +
                                                                           i_41181];
            bool isnan_res_41187;
            
            isnan_res_41187 = futrts_isnan32(isnan_arg_41186);
            
            bool cond_t_res_41188 = !isnan_res_41187;
            
            cond_41179 = cond_t_res_41188;
        } else {
            cond_41179 = 0;
        }
        
        float defunc_0_f_res_41189;
        
        if (cond_41179) {
            int32_t i_41190 = add32(x_41174, index_primexp_41548);
            int64_t i_41191 = sext_i32_i64(i_41190);
            bool x_41192 = sle64(0, i_41191);
            bool y_41193 = slt64(i_41191, N_30870);
            bool bounds_check_41194 = x_41192 && y_41193;
            bool index_certs_41195;
            
            if (!bounds_check_41194) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 12) ==
                        -1) {
                        global_failure_args[0] = i_41191;
                        global_failure_args[1] = N_30870;
                        ;
                    }
                    return;
                }
            }
            
            float defunc_0_f_res_t_res_41196 = ((__global
                                                 float *) defunc_4_map_res_mem_44332)[gtid_40824 *
                                                                                      N_30870 +
                                                                                      i_41191];
            
            defunc_0_f_res_41189 = defunc_0_f_res_t_res_41196;
        } else {
            defunc_0_f_res_41189 = INFINITY;
        }
        ((__global float *) mem_44619)[gtid_40824 * iota32_arg_31257 +
                                       gtid_40825] = defunc_0_f_res_41189;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_41171
}
__kernel void mainzisegmap_40888(__global int *global_failure, int64_t m_30871,
                                 __global unsigned char *mem_44597, __global
                                 unsigned char *mem_44604, __global
                                 unsigned char *mem_44606, __global
                                 unsigned char *mem_44608, __global
                                 unsigned char *mem_44611, __global
                                 unsigned char *mem_44613, __global
                                 unsigned char *mem_44615)
{
    #define segmap_group_sizze_41136 (mainzisegmap_group_sizze_40890)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46153;
    int32_t local_tid_46154;
    int64_t group_sizze_46157;
    int32_t wave_sizze_46156;
    int32_t group_tid_46155;
    
    global_tid_46153 = get_global_id(0);
    local_tid_46154 = get_local_id(0);
    group_sizze_46157 = get_local_size(0);
    wave_sizze_46156 = LOCKSTEP_WIDTH;
    group_tid_46155 = get_group_id(0);
    
    int32_t phys_tid_40888;
    
    phys_tid_40888 = global_tid_46153;
    
    int64_t gtid_40887;
    
    gtid_40887 = sext_i32_i64(group_tid_46155) * segmap_group_sizze_41136 +
        sext_i32_i64(local_tid_46154);
    if (slt64(gtid_40887, m_30871)) {
        int32_t y_41141 = ((__global int32_t *) mem_44597)[gtid_40887];
        bool acc0_41143 = ((__global bool *) mem_44604)[gtid_40887];
        bool x_41148 = acc0_41143 && acc0_41143;
        int32_t defunc_1_op_res_f_res_41152;
        
        if (acc0_41143) {
            int32_t acc0_41144 = ((__global int32_t *) mem_44606)[gtid_40887];
            
            defunc_1_op_res_f_res_41152 = acc0_41144;
        } else {
            defunc_1_op_res_f_res_41152 = -1;
        }
        
        bool cond_41158 = y_41141 == 0;
        float defunc_0_f_res_41159;
        
        if (cond_41158) {
            defunc_0_f_res_41159 = 0.0F;
        } else {
            float acc0_41145 = ((__global float *) mem_44608)[gtid_40887];
            float i32_res_41160 = sitofp_i32_f32(y_41141);
            float defunc_0_f_res_f_res_41161 = acc0_41145 / i32_res_41160;
            
            defunc_0_f_res_41159 = defunc_0_f_res_f_res_41161;
        }
        ((__global bool *) mem_44611)[gtid_40887] = x_41148;
        ((__global int32_t *) mem_44613)[gtid_40887] =
            defunc_1_op_res_f_res_41152;
        ((__global float *) mem_44615)[gtid_40887] = defunc_0_f_res_41159;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_41136
}
__kernel void mainzisegmap_41014(__global int *global_failure, int64_t m_30871,
                                 int64_t num_groups_41037, __global
                                 unsigned char *defunc_4_map_res_mem_44331,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_44396,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_44397,
                                 __global unsigned char *mem_44595, __global
                                 unsigned char *mem_44597)
{
    #define segmap_group_sizze_41036 (mainzisegmap_group_sizze_41016)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45991;
    int32_t local_tid_45992;
    int64_t group_sizze_45995;
    int32_t wave_sizze_45994;
    int32_t group_tid_45993;
    
    global_tid_45991 = get_global_id(0);
    local_tid_45992 = get_local_id(0);
    group_sizze_45995 = get_local_size(0);
    wave_sizze_45994 = LOCKSTEP_WIDTH;
    group_tid_45993 = get_group_id(0);
    
    int32_t phys_tid_41014;
    
    phys_tid_41014 = global_tid_45991;
    
    int32_t phys_group_id_45996;
    
    phys_group_id_45996 = get_group_id(0);
    for (int32_t i_45997 = 0; i_45997 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30871, segmap_group_sizze_41036)) -
                   phys_group_id_45996, sext_i64_i32(num_groups_41037));
         i_45997++) {
        int32_t virt_group_id_45998 = phys_group_id_45996 + i_45997 *
                sext_i64_i32(num_groups_41037);
        int64_t gtid_41013 = sext_i32_i64(virt_group_id_45998) *
                segmap_group_sizze_41036 + sext_i32_i64(local_tid_45992);
        
        if (slt64(gtid_41013, m_30871)) {
            int32_t x_41043 = ((__global
                                int32_t *) defunc_4_map_res_mem_44331)[gtid_41013];
            int32_t x_41044 = ((__global
                                int32_t *) defunc_3_map_res_mem_44396)[gtid_41013];
            float x_41045 = ((__global
                              float *) defunc_3_map_res_mem_44397)[gtid_41013];
            int32_t y_41046 = sub32(x_41043, x_41044);
            float i32_res_41047 = sitofp_i32_f32(x_41044);
            float sqrt_res_41048;
            
            sqrt_res_41048 = futrts_sqrt32(i32_res_41047);
            
            float y_41049 = x_41045 * sqrt_res_41048;
            
            ((__global float *) mem_44595)[gtid_41013] = y_41049;
            ((__global int32_t *) mem_44597)[gtid_41013] = y_41046;
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_41036
}
__kernel void mainzisegmap_intragroup_37421(__global int *global_failure,
                                            int failure_is_an_option, __global
                                            int64_t *global_failure_args,
                                            __local volatile
                                            int64_t *mem_43724_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43714_backing_aligned_1,
                                            __local volatile
                                            int64_t *mem_43704_backing_aligned_2,
                                            int32_t k2p2zq_30888,
                                            int64_t i32_res_30890,
                                            int64_t m_31021, int64_t nm_31022,
                                            int32_t i64_res_31030,
                                            int64_t computed_group_sizze_37362,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43700,
                                            __global unsigned char *mem_43728)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43724_backing_2 = (__local volatile
                                                           char *) mem_43724_backing_aligned_0;
    __local volatile char *restrict mem_43714_backing_1 = (__local volatile
                                                           char *) mem_43714_backing_aligned_1;
    __local volatile char *restrict mem_43704_backing_0 = (__local volatile
                                                           char *) mem_43704_backing_aligned_2;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_45129;
    int32_t local_tid_45130;
    int64_t group_sizze_45133;
    int32_t wave_sizze_45132;
    int32_t group_tid_45131;
    
    global_tid_45129 = get_global_id(0);
    local_tid_45130 = get_local_id(0);
    group_sizze_45133 = get_local_size(0);
    wave_sizze_45132 = LOCKSTEP_WIDTH;
    group_tid_45131 = get_group_id(0);
    
    int32_t phys_tid_37421;
    
    phys_tid_37421 = group_tid_45131;
    
    int32_t ltid_pre_45134;
    
    ltid_pre_45134 = squot32(local_tid_45130, sext_i64_i32(i32_res_30890));
    
    int32_t ltid_pre_45135;
    
    ltid_pre_45135 = local_tid_45130 - squot32(local_tid_45130,
                                               sext_i64_i32(i32_res_30890)) *
        sext_i64_i32(i32_res_30890);
    
    int32_t ltid_pre_45136;
    
    ltid_pre_45136 = local_tid_45130;
    
    int64_t gtid_37360;
    
    gtid_37360 = sext_i32_i64(group_tid_45131);
    
    __local char *mem_43704;
    
    mem_43704 = (__local char *) mem_43704_backing_0;
    
    int64_t gtid_37363 = sext_i32_i64(ltid_pre_45136);
    int32_t phys_tid_37364 = local_tid_45130;
    
    if (slt64(gtid_37363, nm_31022)) {
        int64_t defunc_0_f_res_37560 = sdiv64(gtid_37363, m_31021);
        int64_t defunc_0_f_res_37561 = smod64(gtid_37363, m_31021);
        bool cond_37562 = slt64(defunc_0_f_res_37561, i32_res_30890);
        float defunc_0_f_res_37563;
        
        if (cond_37562) {
            float defunc_0_f_res_t_res_37564 = ((__global
                                                 float *) defunc_3_map_res_mem_43700)[gtid_37360 *
                                                                                      (i32_res_30890 *
                                                                                       i32_res_30890) +
                                                                                      defunc_0_f_res_37560 *
                                                                                      i32_res_30890 +
                                                                                      defunc_0_f_res_37561];
            
            defunc_0_f_res_37563 = defunc_0_f_res_t_res_37564;
        } else {
            int64_t y_37565 = add64(i32_res_30890, defunc_0_f_res_37560);
            bool cond_37566 = defunc_0_f_res_37561 == y_37565;
            float defunc_0_f_res_f_res_37567;
            
            if (cond_37566) {
                defunc_0_f_res_f_res_37567 = 1.0F;
            } else {
                defunc_0_f_res_f_res_37567 = 0.0F;
            }
            defunc_0_f_res_37563 = defunc_0_f_res_f_res_37567;
        }
        ((__local float *) mem_43704)[gtid_37363] = defunc_0_f_res_37563;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43714;
    
    mem_43714 = (__local char *) mem_43714_backing_1;
    for (int32_t i_37569 = 0; i_37569 < k2p2zq_30888; i_37569++) {
        int64_t i_37571 = sext_i32_i64(i_37569);
        bool x_37572 = sle64(0, i_37571);
        bool y_37573 = slt64(i_37571, nm_31022);
        bool bounds_check_37574 = x_37572 && y_37573;
        bool index_certs_37575;
        
        if (!bounds_check_37574) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 0) == -1) {
                    global_failure_args[0] = i_37571;
                    global_failure_args[1] = nm_31022;
                    ;
                }
                local_failure = true;
                goto error_1;
            }
        }
        
        float v1_37576 = ((__local float *) mem_43704)[i_37571];
        bool cond_37577 = v1_37576 == 0.0F;
        int64_t gtid_37374 = sext_i32_i64(ltid_pre_45136);
        int32_t phys_tid_37375 = local_tid_45130;
        
        if (slt64(gtid_37374, nm_31022)) {
            int32_t defunc_0_f_res_37580 = sext_i64_i32(gtid_37374);
            int32_t defunc_0_f_res_37581 = sdiv32(defunc_0_f_res_37580,
                                                  i64_res_31030);
            int32_t defunc_0_f_res_37582 = smod32(defunc_0_f_res_37580,
                                                  i64_res_31030);
            float defunc_0_f_res_37583;
            
            if (cond_37577) {
                int32_t x_37584 = mul32(i64_res_31030, defunc_0_f_res_37581);
                int32_t i_37585 = add32(defunc_0_f_res_37582, x_37584);
                int64_t i_37586 = sext_i32_i64(i_37585);
                float defunc_0_f_res_t_res_37587 = ((__local
                                                     float *) mem_43704)[i_37586];
                
                defunc_0_f_res_37583 = defunc_0_f_res_t_res_37587;
            } else {
                int64_t j_37588 = sext_i32_i64(defunc_0_f_res_37582);
                float x_37589 = ((__local float *) mem_43704)[j_37588];
                float x_37590 = x_37589 / v1_37576;
                int32_t y_37591 = sub32(k2p2zq_30888, 1);
                bool cond_37592 = slt32(defunc_0_f_res_37581, y_37591);
                float defunc_0_f_res_f_res_37593;
                
                if (cond_37592) {
                    int32_t x_37594 = add32(1, defunc_0_f_res_37581);
                    int32_t x_37595 = mul32(i64_res_31030, x_37594);
                    int32_t i_37596 = add32(defunc_0_f_res_37582, x_37595);
                    int64_t i_37597 = sext_i32_i64(i_37596);
                    float x_37598 = ((__local float *) mem_43704)[i_37597];
                    int32_t i_37599 = add32(i_37569, x_37595);
                    int64_t i_37600 = sext_i32_i64(i_37599);
                    float x_37601 = ((__local float *) mem_43704)[i_37600];
                    float y_37602 = x_37590 * x_37601;
                    float defunc_0_f_res_f_res_t_res_37603 = x_37598 - y_37602;
                    
                    defunc_0_f_res_f_res_37593 =
                        defunc_0_f_res_f_res_t_res_37603;
                } else {
                    defunc_0_f_res_f_res_37593 = x_37590;
                }
                defunc_0_f_res_37583 = defunc_0_f_res_f_res_37593;
            }
            ((__local float *) mem_43714)[gtid_37374] = defunc_0_f_res_37583;
        }
        
      error_1:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_37401 = sext_i32_i64(ltid_pre_45136);
        int32_t phys_tid_37402 = local_tid_45130;
        
        if (slt64(write_i_37401, nm_31022)) {
            float write_value_37606 = ((__local
                                        float *) mem_43714)[write_i_37401];
            
            if (sle64(0, write_i_37401) && slt64(write_i_37401, nm_31022)) {
                ((__local float *) mem_43704)[write_i_37401] =
                    write_value_37606;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    
    __local char *mem_43724;
    
    mem_43724 = (__local char *) mem_43724_backing_2;
    
    int64_t gtid_37404 = sext_i32_i64(ltid_pre_45134);
    int64_t gtid_37405 = sext_i32_i64(ltid_pre_45135);
    int32_t phys_tid_37406 = local_tid_45130;
    
    if (slt64(gtid_37404, i32_res_30890) && slt64(gtid_37405, i32_res_30890)) {
        int64_t index_primexp_41490 = m_31021 * gtid_37404;
        int64_t i_37613 = add64(i32_res_30890, gtid_37405);
        int64_t new_index_37614 = i_37613 + index_primexp_41490;
        float defunc_0_f_res_37615 = ((__local
                                       float *) mem_43704)[new_index_37614];
        
        ((__local float *) mem_43724)[gtid_37404 * i32_res_30890 + gtid_37405] =
            defunc_0_f_res_37615;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    for (int64_t i_45138 = 0; i_45138 < sdiv_up64(i32_res_30890 *
                                                  i32_res_30890 -
                                                  sext_i32_i64(local_tid_45130),
                                                  computed_group_sizze_37362);
         i_45138++) {
        ((__global float *) mem_43728)[gtid_37360 * (i32_res_30890 *
                                                     i32_res_30890) +
                                       squot64(i_45138 *
                                               computed_group_sizze_37362 +
                                               sext_i32_i64(local_tid_45130),
                                               i32_res_30890) * i32_res_30890 +
                                       (i_45138 * computed_group_sizze_37362 +
                                        sext_i32_i64(local_tid_45130) -
                                        squot64(i_45138 *
                                                computed_group_sizze_37362 +
                                                sext_i32_i64(local_tid_45130),
                                                i32_res_30890) *
                                        i32_res_30890)] = ((__local
                                                            float *) mem_43724)[squot64(i_45138 *
                                                                                        computed_group_sizze_37362 +
                                                                                        sext_i32_i64(local_tid_45130),
                                                                                        i32_res_30890) *
                                                                                i32_res_30890 +
                                                                                (i_45138 *
                                                                                 computed_group_sizze_37362 +
                                                                                 sext_i32_i64(local_tid_45130) -
                                                                                 squot64(i_45138 *
                                                                                         computed_group_sizze_37362 +
                                                                                         sext_i32_i64(local_tid_45130),
                                                                                         i32_res_30890) *
                                                                                 i32_res_30890)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_4:
    return;
}
__kernel void mainzisegmap_intragroup_37765(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43749_backing_aligned_0,
                                            int64_t m_30871,
                                            int32_t k2p2zq_30888,
                                            int64_t nm_31022,
                                            int32_t i64_res_31030,
                                            int32_t i_38152, int64_t i_38154,
                                            int64_t ctx_param_ext_43735,
                                            int64_t ctx_param_ext_43736,
                                            int64_t ctx_param_ext_43738,
                                            __global
                                            unsigned char *mem_param_43740,
                                            __global unsigned char *mem_43745,
                                            __global unsigned char *mem_43753)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43749_backing_0 = (__local volatile
                                                           char *) mem_43749_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45165;
    int32_t local_tid_45166;
    int64_t group_sizze_45169;
    int32_t wave_sizze_45168;
    int32_t group_tid_45167;
    
    global_tid_45165 = get_global_id(0);
    local_tid_45166 = get_local_id(0);
    group_sizze_45169 = get_local_size(0);
    wave_sizze_45168 = LOCKSTEP_WIDTH;
    group_tid_45167 = get_group_id(0);
    
    int32_t phys_tid_37765;
    
    phys_tid_37765 = group_tid_45167;
    
    int32_t ltid_pre_45170;
    
    ltid_pre_45170 = local_tid_45166;
    
    int64_t gtid_37733;
    
    gtid_37733 = sext_i32_i64(group_tid_45167);
    
    float v1_38171 = ((__global float *) mem_param_43740)[ctx_param_ext_43735 +
                                                          (gtid_37733 *
                                                           ctx_param_ext_43736 +
                                                           i_38154 *
                                                           ctx_param_ext_43738)];
    bool cond_38172 = v1_38171 == 0.0F;
    __local char *mem_43749;
    
    mem_43749 = (__local char *) mem_43749_backing_0;
    
    int64_t gtid_37736 = sext_i32_i64(ltid_pre_45170);
    int32_t phys_tid_37737 = local_tid_45166;
    int32_t defunc_0_f_res_38175 = sext_i64_i32(gtid_37736);
    int32_t defunc_0_f_res_38176 = sdiv32(defunc_0_f_res_38175, i64_res_31030);
    int32_t defunc_0_f_res_38177 = smod32(defunc_0_f_res_38175, i64_res_31030);
    float defunc_0_f_res_38178;
    
    if (cond_38172) {
        int32_t x_38179 = mul32(i64_res_31030, defunc_0_f_res_38176);
        int32_t i_38180 = add32(defunc_0_f_res_38177, x_38179);
        int64_t i_38181 = sext_i32_i64(i_38180);
        float defunc_0_f_res_t_res_38182 = ((__global
                                             float *) mem_param_43740)[ctx_param_ext_43735 +
                                                                       (gtid_37733 *
                                                                        ctx_param_ext_43736 +
                                                                        i_38181 *
                                                                        ctx_param_ext_43738)];
        
        defunc_0_f_res_38178 = defunc_0_f_res_t_res_38182;
    } else {
        int64_t j_38183 = sext_i32_i64(defunc_0_f_res_38177);
        float x_38184 = ((__global
                          float *) mem_param_43740)[ctx_param_ext_43735 +
                                                    (gtid_37733 *
                                                     ctx_param_ext_43736 +
                                                     j_38183 *
                                                     ctx_param_ext_43738)];
        float x_38185 = x_38184 / v1_38171;
        int32_t y_38186 = sub32(k2p2zq_30888, 1);
        bool cond_38187 = slt32(defunc_0_f_res_38176, y_38186);
        float defunc_0_f_res_f_res_38188;
        
        if (cond_38187) {
            int32_t x_38189 = add32(1, defunc_0_f_res_38176);
            int32_t x_38190 = mul32(i64_res_31030, x_38189);
            int32_t i_38191 = add32(defunc_0_f_res_38177, x_38190);
            int64_t i_38192 = sext_i32_i64(i_38191);
            float x_38193 = ((__global
                              float *) mem_param_43740)[ctx_param_ext_43735 +
                                                        (gtid_37733 *
                                                         ctx_param_ext_43736 +
                                                         i_38192 *
                                                         ctx_param_ext_43738)];
            int32_t i_38194 = add32(i_38152, x_38190);
            int64_t i_38195 = sext_i32_i64(i_38194);
            float x_38196 = ((__global
                              float *) mem_param_43740)[ctx_param_ext_43735 +
                                                        (gtid_37733 *
                                                         ctx_param_ext_43736 +
                                                         i_38195 *
                                                         ctx_param_ext_43738)];
            float y_38197 = x_38185 * x_38196;
            float defunc_0_f_res_f_res_t_res_38198 = x_38193 - y_38197;
            
            defunc_0_f_res_f_res_38188 = defunc_0_f_res_f_res_t_res_38198;
        } else {
            defunc_0_f_res_f_res_38188 = x_38185;
        }
        defunc_0_f_res_38178 = defunc_0_f_res_f_res_38188;
    }
    ((__local float *) mem_43749)[gtid_37736] = defunc_0_f_res_38178;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_37763 = sext_i32_i64(ltid_pre_45170);
    int32_t phys_tid_37764 = local_tid_45166;
    float write_value_38201 = ((__local float *) mem_43749)[write_i_37763];
    
    if (sle64(0, write_i_37763) && slt64(write_i_37763, nm_31022)) {
        ((__global float *) mem_43745)[gtid_37733 + write_i_37763 * m_30871] =
            write_value_38201;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_45166 == 0) {
        for (int64_t i_45171 = 0; i_45171 < nm_31022; i_45171++) {
            ((__global float *) mem_43753)[gtid_37733 * nm_31022 + i_45171] =
                ((__global float *) mem_43745)[gtid_37733 + i_45171 * m_30871];
        }
    }
    
  error_2:
    return;
}
__kernel void mainzisegmap_intragroup_38739(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_44310_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_44308_backing_aligned_1,
                                            __local volatile
                                            int64_t *mem_44306_backing_aligned_2,
                                            __local volatile
                                            int64_t *mem_44304_backing_aligned_3,
                                            int64_t N_30870, int64_t N_30872,
                                            int64_t i_31137, __global
                                            unsigned char *images_mem_43532,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_44294,
                                            __global unsigned char *mem_44313,
                                            __global unsigned char *mem_44316,
                                            __global unsigned char *mem_44319)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44310_backing_3 = (__local volatile
                                                           char *) mem_44310_backing_aligned_0;
    __local volatile char *restrict mem_44308_backing_2 = (__local volatile
                                                           char *) mem_44308_backing_aligned_1;
    __local volatile char *restrict mem_44306_backing_1 = (__local volatile
                                                           char *) mem_44306_backing_aligned_2;
    __local volatile char *restrict mem_44304_backing_0 = (__local volatile
                                                           char *) mem_44304_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45565;
    int32_t local_tid_45566;
    int64_t group_sizze_45569;
    int32_t wave_sizze_45568;
    int32_t group_tid_45567;
    
    global_tid_45565 = get_global_id(0);
    local_tid_45566 = get_local_id(0);
    group_sizze_45569 = get_local_size(0);
    wave_sizze_45568 = LOCKSTEP_WIDTH;
    group_tid_45567 = get_group_id(0);
    
    int32_t phys_tid_38739;
    
    phys_tid_38739 = group_tid_45567;
    
    int32_t ltid_pre_45570;
    
    ltid_pre_45570 = local_tid_45566;
    
    int64_t gtid_38732;
    
    gtid_38732 = sext_i32_i64(group_tid_45567);
    
    __local char *mem_44304;
    
    mem_44304 = (__local char *) mem_44304_backing_0;
    
    __local char *mem_44306;
    
    mem_44306 = (__local char *) mem_44306_backing_1;
    
    int64_t gtid_38735 = sext_i32_i64(ltid_pre_45570);
    int32_t phys_tid_38736 = local_tid_45566;
    float x_38828 = ((__global float *) images_mem_43532)[gtid_38732 * N_30872 +
                                                          gtid_38735];
    bool isnan_res_38830;
    
    isnan_res_38830 = futrts_isnan32(x_38828);
    
    bool cond_38831 = !isnan_res_38830;
    float defunc_0_f_res_38832;
    
    if (cond_38831) {
        float x_38829 = ((__global
                          float *) defunc_3_map_res_mem_44294)[gtid_38732 *
                                                               N_30870 +
                                                               gtid_38735];
        float defunc_0_f_res_t_res_38833 = x_38828 - x_38829;
        
        defunc_0_f_res_38832 = defunc_0_f_res_t_res_38833;
    } else {
        defunc_0_f_res_38832 = NAN;
    }
    
    bool isnan_res_38834;
    
    isnan_res_38834 = futrts_isnan32(defunc_0_f_res_38832);
    
    bool defunc_0_p_res_38835 = !isnan_res_38834;
    int64_t defunc_0_f_res_38836 = btoi_bool_i64(defunc_0_p_res_38835);
    
    ((__local int64_t *) mem_44304)[gtid_38735] = defunc_0_f_res_38836;
    ((__local float *) mem_44306)[gtid_38735] = defunc_0_f_res_38832;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_45571;
    
    dims_flat_45571 = N_30870;
    
    int64_t x_38825;
    int64_t x_38826;
    int64_t x_45573;
    int64_t x_45574;
    bool ltid_in_bounds_45576;
    
    ltid_in_bounds_45576 = slt64(sext_i32_i64(local_tid_45566), N_30870);
    
    int32_t skip_threads_45577;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45576) {
            x_38826 = ((volatile __local
                        int64_t *) mem_44304)[sext_i32_i64(local_tid_45566)];
            if ((local_tid_45566 - squot32(local_tid_45566, 32) * 32) == 0) {
                x_38825 = x_38826;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45577 = 1;
        while (slt32(skip_threads_45577, 32)) {
            if (sle32(skip_threads_45577, local_tid_45566 -
                      squot32(local_tid_45566, 32) * 32) &&
                ltid_in_bounds_45576) {
                // read operands
                {
                    x_38825 = ((volatile __local
                                int64_t *) mem_44304)[sext_i32_i64(local_tid_45566) -
                                                      sext_i32_i64(skip_threads_45577)];
                }
                // perform operation
                {
                    bool inactive_45578 =
                         slt64(srem64(sext_i32_i64(local_tid_45566), N_30870),
                               sext_i32_i64(local_tid_45566) -
                               sext_i32_i64(local_tid_45566 -
                               skip_threads_45577));
                    
                    if (inactive_45578) {
                        x_38825 = x_38826;
                    }
                    if (!inactive_45578) {
                        int64_t defunc_1_op_res_38827 = add64(x_38825, x_38826);
                        
                        x_38825 = defunc_1_op_res_38827;
                    }
                }
            }
            if (sle32(wave_sizze_45568, skip_threads_45577)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45577, local_tid_45566 -
                      squot32(local_tid_45566, 32) * 32) &&
                ltid_in_bounds_45576) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_44304)[sext_i32_i64(local_tid_45566)] =
                        x_38825;
                    x_38826 = x_38825;
                }
            }
            if (sle32(wave_sizze_45568, skip_threads_45577)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45577 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45566 - squot32(local_tid_45566, 32) * 32) == 31 &&
            ltid_in_bounds_45576) {
            ((volatile __local
              int64_t *) mem_44304)[sext_i32_i64(squot32(local_tid_45566,
                                                         32))] = x_38825;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45579;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45566, 32) == 0 && ltid_in_bounds_45576) {
                x_45574 = ((volatile __local
                            int64_t *) mem_44304)[sext_i32_i64(local_tid_45566)];
                if ((local_tid_45566 - squot32(local_tid_45566, 32) * 32) ==
                    0) {
                    x_45573 = x_45574;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45579 = 1;
            while (slt32(skip_threads_45579, 32)) {
                if (sle32(skip_threads_45579, local_tid_45566 -
                          squot32(local_tid_45566, 32) * 32) &&
                    (squot32(local_tid_45566, 32) == 0 &&
                     ltid_in_bounds_45576)) {
                    // read operands
                    {
                        x_45573 = ((volatile __local
                                    int64_t *) mem_44304)[sext_i32_i64(local_tid_45566) -
                                                          sext_i32_i64(skip_threads_45579)];
                    }
                    // perform operation
                    {
                        bool inactive_45580 =
                             slt64(srem64(sext_i32_i64(local_tid_45566 * 32 +
                                          32 - 1), N_30870),
                                   sext_i32_i64(local_tid_45566 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_45566 -
                                                 skip_threads_45579) * 32 + 32 -
                                   1));
                        
                        if (inactive_45580) {
                            x_45573 = x_45574;
                        }
                        if (!inactive_45580) {
                            int64_t defunc_1_op_res_45575 = add64(x_45573,
                                                                  x_45574);
                            
                            x_45573 = defunc_1_op_res_45575;
                        }
                    }
                }
                if (sle32(wave_sizze_45568, skip_threads_45579)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45579, local_tid_45566 -
                          squot32(local_tid_45566, 32) * 32) &&
                    (squot32(local_tid_45566, 32) == 0 &&
                     ltid_in_bounds_45576)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_44304)[sext_i32_i64(local_tid_45566)] =
                            x_45573;
                        x_45574 = x_45573;
                    }
                }
                if (sle32(wave_sizze_45568, skip_threads_45579)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45579 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45566, 32) == 0 || !ltid_in_bounds_45576)) {
            // read operands
            {
                x_38826 = x_38825;
                x_38825 = ((__local
                            int64_t *) mem_44304)[sext_i32_i64(squot32(local_tid_45566,
                                                                       32)) -
                                                  1];
            }
            // perform operation
            {
                bool inactive_45581 =
                     slt64(srem64(sext_i32_i64(local_tid_45566), N_30870),
                           sext_i32_i64(local_tid_45566) -
                           sext_i32_i64(squot32(local_tid_45566, 32) * 32 - 1));
                
                if (inactive_45581) {
                    x_38825 = x_38826;
                }
                if (!inactive_45581) {
                    int64_t defunc_1_op_res_38827 = add64(x_38825, x_38826);
                    
                    x_38825 = defunc_1_op_res_38827;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_44304)[sext_i32_i64(local_tid_45566)] =
                    x_38825;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45566, 32) == 0) {
            ((__local int64_t *) mem_44304)[sext_i32_i64(local_tid_45566)] =
                x_38826;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_38837 = ((__local int64_t *) mem_44304)[i_31137];
    int32_t defunc_0_f_res_38838 = sext_i64_i32(last_res_38837);
    __local char *mem_44308;
    
    mem_44308 = (__local char *) mem_44308_backing_2;
    ((__local float *) mem_44308)[sext_i32_i64(local_tid_45566)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44310;
    
    mem_44310 = (__local char *) mem_44310_backing_3;
    ((__local int32_t *) mem_44310)[sext_i32_i64(local_tid_45566)] = 0;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_38737 = sext_i32_i64(ltid_pre_45570);
    int32_t phys_tid_38738 = local_tid_45566;
    float x_38843 = ((__local float *) mem_44306)[write_i_38737];
    int32_t index_primexp_41512 = sext_i64_i32(write_i_38737);
    bool isnan_res_38846;
    
    isnan_res_38846 = futrts_isnan32(x_38843);
    
    bool defunc_0_p_res_38847 = !isnan_res_38846;
    int64_t defunc_1_f_res_38848;
    
    if (defunc_0_p_res_38847) {
        int64_t x_38844 = ((__local int64_t *) mem_44304)[write_i_38737];
        int64_t defunc_1_f_res_t_res_38849 = sub64(x_38844, 1);
        
        defunc_1_f_res_38848 = defunc_1_f_res_t_res_38849;
    } else {
        defunc_1_f_res_38848 = -1;
    }
    if (sle64(0, defunc_1_f_res_38848) && slt64(defunc_1_f_res_38848,
                                                N_30870)) {
        ((__local int32_t *) mem_44310)[defunc_1_f_res_38848] =
            index_primexp_41512;
    }
    if (sle64(0, defunc_1_f_res_38848) && slt64(defunc_1_f_res_38848,
                                                N_30870)) {
        ((__local float *) mem_44308)[defunc_1_f_res_38848] = x_38843;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_45566 == 0) {
        ((__global int32_t *) mem_44313)[gtid_38732] = defunc_0_f_res_38838;
    }
    ((__global float *) mem_44316)[gtid_38732 * N_30870 +
                                   sext_i32_i64(local_tid_45566)] = ((__local
                                                                      float *) mem_44308)[sext_i32_i64(local_tid_45566)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global int32_t *) mem_44319)[gtid_38732 * N_30870 +
                                     sext_i32_i64(local_tid_45566)] = ((__local
                                                                        int32_t *) mem_44310)[sext_i32_i64(local_tid_45566)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainzisegmap_intragroup_39079(__global int *global_failure,
                                            __local volatile
                                            int64_t *red_arr_mem_45674_backing_aligned_0,
                                            __local volatile
                                            int64_t *red_arr_mem_45670_backing_aligned_1,
                                            int64_t N_30870, int64_t N_30872,
                                            float hfrac_30877,
                                            int64_t i32_res_30884,
                                            int32_t k2p2_30886, __global
                                            unsigned char *images_mem_43532,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_44332,
                                            __global unsigned char *mem_44376,
                                            __global unsigned char *mem_44378,
                                            __global unsigned char *mem_44380)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45674_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45674_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45670_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45670_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45664;
    int32_t local_tid_45665;
    int64_t group_sizze_45668;
    int32_t wave_sizze_45667;
    int32_t group_tid_45666;
    
    global_tid_45664 = get_global_id(0);
    local_tid_45665 = get_local_id(0);
    group_sizze_45668 = get_local_size(0);
    wave_sizze_45667 = LOCKSTEP_WIDTH;
    group_tid_45666 = get_group_id(0);
    
    int32_t phys_tid_39079;
    
    phys_tid_39079 = group_tid_45666;
    
    int32_t ltid_pre_45669;
    
    ltid_pre_45669 = local_tid_45665;
    
    int64_t gtid_39072;
    
    gtid_39072 = sext_i32_i64(group_tid_45666);
    
    int32_t defunc_0_f_res_39156;
    int64_t gtid_39075 = sext_i32_i64(ltid_pre_45669);
    int32_t phys_tid_39076 = local_tid_45665;
    __local char *red_arr_mem_45670;
    
    red_arr_mem_45670 = (__local char *) red_arr_mem_45670_backing_0;
    
    float x_39160;
    
    x_39160 = ((__global float *) images_mem_43532)[gtid_39072 * N_30872 +
                                                    gtid_39075];
    
    bool isnan_res_39161;
    
    isnan_res_39161 = futrts_isnan32(x_39160);
    
    bool cond_39162 = !isnan_res_39161;
    int32_t defunc_0_f_res_39163 = btoi_bool_i32(cond_39162);
    
    ((__local int32_t *) red_arr_mem_45670)[gtid_39075] = defunc_0_f_res_39163;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45672;
    int32_t skip_waves_45673;
    
    skip_waves_45673 = 1;
    
    int32_t x_39157;
    int32_t x_39158;
    
    offset_45672 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45665, sext_i64_i32(i32_res_30884))) {
            x_39157 = ((__local
                        int32_t *) red_arr_mem_45670)[sext_i32_i64(local_tid_45665 +
                                                      offset_45672)];
        }
    }
    offset_45672 = 1;
    while (slt32(offset_45672, wave_sizze_45667)) {
        if (slt32(local_tid_45665 + offset_45672,
                  sext_i64_i32(i32_res_30884)) && ((local_tid_45665 -
                                                    squot32(local_tid_45665,
                                                            wave_sizze_45667) *
                                                    wave_sizze_45667) & (2 *
                                                                         offset_45672 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_39158 = ((volatile __local
                            int32_t *) red_arr_mem_45670)[sext_i32_i64(local_tid_45665 +
                                                          offset_45672)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_39159 = add32(x_39157, x_39158);
                
                x_39157 = defunc_1_op_res_39159;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_45670)[sext_i32_i64(local_tid_45665)] =
                    x_39157;
            }
        }
        offset_45672 *= 2;
    }
    while (slt32(skip_waves_45673, squot32(sext_i64_i32(i32_res_30884) +
                                           wave_sizze_45667 - 1,
                                           wave_sizze_45667))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45672 = skip_waves_45673 * wave_sizze_45667;
        if (slt32(local_tid_45665 + offset_45672,
                  sext_i64_i32(i32_res_30884)) && ((local_tid_45665 -
                                                    squot32(local_tid_45665,
                                                            wave_sizze_45667) *
                                                    wave_sizze_45667) == 0 &&
                                                   (squot32(local_tid_45665,
                                                            wave_sizze_45667) &
                                                    (2 * skip_waves_45673 -
                                                     1)) == 0)) {
            // read array element
            {
                x_39158 = ((__local
                            int32_t *) red_arr_mem_45670)[sext_i32_i64(local_tid_45665 +
                                                          offset_45672)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_39159 = add32(x_39157, x_39158);
                
                x_39157 = defunc_1_op_res_39159;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_45670)[sext_i32_i64(local_tid_45665)] =
                    x_39157;
            }
        }
        skip_waves_45673 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_39156 = ((__local int32_t *) red_arr_mem_45670)[0];
    
    float defunc_0_f_res_39164;
    int64_t gtid_39077 = sext_i32_i64(ltid_pre_45669);
    int32_t phys_tid_39078 = local_tid_45665;
    __local char *red_arr_mem_45674;
    
    red_arr_mem_45674 = (__local char *) red_arr_mem_45674_backing_1;
    
    int32_t index_primexp_41520;
    
    index_primexp_41520 = sext_i64_i32(gtid_39077);
    
    bool cond_39169 = slt32(index_primexp_41520, defunc_0_f_res_39156);
    float defunc_0_f_res_39170;
    
    if (cond_39169) {
        int64_t i_39171 = sext_i32_i64(index_primexp_41520);
        float defunc_0_f_res_t_res_39172 = ((__global
                                             float *) defunc_4_map_res_mem_44332)[gtid_39072 *
                                                                                  N_30870 +
                                                                                  i_39171];
        
        defunc_0_f_res_39170 = defunc_0_f_res_t_res_39172;
    } else {
        defunc_0_f_res_39170 = 0.0F;
    }
    
    float defunc_0_f_res_39173 = defunc_0_f_res_39170 * defunc_0_f_res_39170;
    
    ((__local float *) red_arr_mem_45674)[gtid_39077] = defunc_0_f_res_39173;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45676;
    int32_t skip_waves_45677;
    
    skip_waves_45677 = 1;
    
    float x_39165;
    float x_39166;
    
    offset_45676 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45665, sext_i64_i32(i32_res_30884))) {
            x_39165 = ((__local
                        float *) red_arr_mem_45674)[sext_i32_i64(local_tid_45665 +
                                                    offset_45676)];
        }
    }
    offset_45676 = 1;
    while (slt32(offset_45676, wave_sizze_45667)) {
        if (slt32(local_tid_45665 + offset_45676,
                  sext_i64_i32(i32_res_30884)) && ((local_tid_45665 -
                                                    squot32(local_tid_45665,
                                                            wave_sizze_45667) *
                                                    wave_sizze_45667) & (2 *
                                                                         offset_45676 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_39166 = ((volatile __local
                            float *) red_arr_mem_45674)[sext_i32_i64(local_tid_45665 +
                                                        offset_45676)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_39167 = x_39165 + x_39166;
                
                x_39165 = defunc_1_op_res_39167;
            }
            // write result of operation
            {
                ((volatile __local
                  float *) red_arr_mem_45674)[sext_i32_i64(local_tid_45665)] =
                    x_39165;
            }
        }
        offset_45676 *= 2;
    }
    while (slt32(skip_waves_45677, squot32(sext_i64_i32(i32_res_30884) +
                                           wave_sizze_45667 - 1,
                                           wave_sizze_45667))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45676 = skip_waves_45677 * wave_sizze_45667;
        if (slt32(local_tid_45665 + offset_45676,
                  sext_i64_i32(i32_res_30884)) && ((local_tid_45665 -
                                                    squot32(local_tid_45665,
                                                            wave_sizze_45667) *
                                                    wave_sizze_45667) == 0 &&
                                                   (squot32(local_tid_45665,
                                                            wave_sizze_45667) &
                                                    (2 * skip_waves_45677 -
                                                     1)) == 0)) {
            // read array element
            {
                x_39166 = ((__local
                            float *) red_arr_mem_45674)[sext_i32_i64(local_tid_45665 +
                                                        offset_45676)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_39167 = x_39165 + x_39166;
                
                x_39165 = defunc_1_op_res_39167;
            }
            // write result of operation
            {
                ((__local
                  float *) red_arr_mem_45674)[sext_i32_i64(local_tid_45665)] =
                    x_39165;
            }
        }
        skip_waves_45677 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_39164 = ((__local float *) red_arr_mem_45674)[0];
    
    int32_t r32_arg_39174 = sub32(defunc_0_f_res_39156, k2p2_30886);
    float i32_res_39175 = sitofp_i32_f32(r32_arg_39174);
    float sqrt_arg_39176 = defunc_0_f_res_39164 / i32_res_39175;
    float sqrt_res_39177;
    
    sqrt_res_39177 = futrts_sqrt32(sqrt_arg_39176);
    
    float i32_res_39178 = sitofp_i32_f32(defunc_0_f_res_39156);
    float t32_arg_39179 = hfrac_30877 * i32_res_39178;
    int32_t f32_res_39180 = fptosi_f32_i32(t32_arg_39179);
    
    if (local_tid_45665 == 0) {
        ((__global int32_t *) mem_44376)[gtid_39072] = f32_res_39180;
    }
    if (local_tid_45665 == 0) {
        ((__global int32_t *) mem_44378)[gtid_39072] = defunc_0_f_res_39156;
    }
    if (local_tid_45665 == 0) {
        ((__global float *) mem_44380)[gtid_39072] = sqrt_res_39177;
    }
    
  error_4:
    return;
}
__kernel void mainzisegmap_intragroup_39525(__global int *global_failure,
                                            int failure_is_an_option, __global
                                            int64_t *global_failure_args,
                                            __local volatile
                                            int64_t *mem_44578_backing_aligned_0,
                                            __local volatile
                                            int64_t *double_buffer_mem_44850_backing_aligned_1,
                                            __local volatile
                                            int64_t *mem_44576_backing_aligned_2,
                                            __local volatile
                                            int64_t *mem_44574_backing_aligned_3,
                                            __local volatile
                                            int64_t *mem_44572_backing_aligned_4,
                                            __local volatile
                                            int64_t *mem_44570_backing_aligned_5,
                                            __local volatile
                                            int64_t *mem_44568_backing_aligned_6,
                                            __local volatile
                                            int64_t *mem_44558_backing_aligned_7,
                                            __local volatile
                                            int64_t *red_arr_mem_45963_backing_aligned_8,
                                            __local volatile
                                            int64_t *red_arr_mem_45961_backing_aligned_9,
                                            __local volatile
                                            int64_t *red_arr_mem_45959_backing_aligned_10,
                                            __local volatile
                                            int64_t *mem_44554_backing_aligned_11,
                                            int64_t N_30870, int32_t n_30875,
                                            int64_t iota32_arg_31257,
                                            int32_t iters_31288,
                                            int64_t i_31290, __global
                                            unsigned char *defunc_4_map_res_mem_44331,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_44332,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_44333,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_44395,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_44396,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_44397,
                                            __global
                                            unsigned char *defunc_0_f_res_mem_44430,
                                            __global unsigned char *mem_44435,
                                            __global unsigned char *mem_44588,
                                            __global unsigned char *mem_44590,
                                            __global unsigned char *mem_44592)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44578_backing_11 = (__local volatile
                                                            char *) mem_44578_backing_aligned_0;
    __local volatile char *restrict double_buffer_mem_44850_backing_10 =
                          (__local volatile
                           char *) double_buffer_mem_44850_backing_aligned_1;
    __local volatile char *restrict mem_44576_backing_9 = (__local volatile
                                                           char *) mem_44576_backing_aligned_2;
    __local volatile char *restrict mem_44574_backing_8 = (__local volatile
                                                           char *) mem_44574_backing_aligned_3;
    __local volatile char *restrict mem_44572_backing_7 = (__local volatile
                                                           char *) mem_44572_backing_aligned_4;
    __local volatile char *restrict mem_44570_backing_6 = (__local volatile
                                                           char *) mem_44570_backing_aligned_5;
    __local volatile char *restrict mem_44568_backing_5 = (__local volatile
                                                           char *) mem_44568_backing_aligned_6;
    __local volatile char *restrict mem_44558_backing_4 = (__local volatile
                                                           char *) mem_44558_backing_aligned_7;
    __local volatile char *restrict red_arr_mem_45963_backing_3 =
                          (__local volatile
                           char *) red_arr_mem_45963_backing_aligned_8;
    __local volatile char *restrict red_arr_mem_45961_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45961_backing_aligned_9;
    __local volatile char *restrict red_arr_mem_45959_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45959_backing_aligned_10;
    __local volatile char *restrict mem_44554_backing_0 = (__local volatile
                                                           char *) mem_44554_backing_aligned_11;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_45942;
    int32_t local_tid_45943;
    int64_t group_sizze_45946;
    int32_t wave_sizze_45945;
    int32_t group_tid_45944;
    
    global_tid_45942 = get_global_id(0);
    local_tid_45943 = get_local_id(0);
    group_sizze_45946 = get_local_size(0);
    wave_sizze_45945 = LOCKSTEP_WIDTH;
    group_tid_45944 = get_group_id(0);
    
    int32_t phys_tid_39525;
    
    phys_tid_39525 = group_tid_45944;
    
    int32_t ltid_pre_45947;
    
    ltid_pre_45947 = local_tid_45943;
    
    int64_t gtid_39492;
    
    gtid_39492 = sext_i32_i64(group_tid_45944);
    
    int32_t x_40010;
    
    x_40010 = ((__global int32_t *) defunc_4_map_res_mem_44331)[gtid_39492];
    
    int32_t x_40011 = ((__global
                        int32_t *) defunc_3_map_res_mem_44396)[gtid_39492];
    float x_40012 = ((__global float *) defunc_3_map_res_mem_44397)[gtid_39492];
    int32_t x_40013 = ((__global
                        int32_t *) defunc_3_map_res_mem_44395)[gtid_39492];
    float x_40014 = ((__global float *) defunc_0_f_res_mem_44430)[gtid_39492];
    int32_t y_40017 = sub32(x_40010, x_40011);
    float i32_res_40018 = sitofp_i32_f32(x_40011);
    float sqrt_res_40019;
    
    sqrt_res_40019 = futrts_sqrt32(i32_res_40018);
    
    float y_40020 = x_40012 * sqrt_res_40019;
    __local char *mem_44554;
    
    mem_44554 = (__local char *) mem_44554_backing_0;
    
    int64_t gtid_39495 = sext_i32_i64(ltid_pre_45947);
    int32_t phys_tid_39496 = local_tid_45943;
    int32_t index_primexp_41533 = sext_i64_i32(gtid_39495);
    bool cond_40033 = sle32(y_40017, index_primexp_41533);
    float defunc_0_f_res_40034;
    
    if (cond_40033) {
        defunc_0_f_res_40034 = 0.0F;
    } else {
        bool cond_40035 = index_primexp_41533 == 0;
        float defunc_0_f_res_f_res_40036;
        
        if (cond_40035) {
            defunc_0_f_res_f_res_40036 = x_40014;
        } else {
            int32_t i_40037 = add32(x_40011, index_primexp_41533);
            int64_t i_40038 = sext_i32_i64(i_40037);
            float x_40039 = ((__global
                              float *) defunc_4_map_res_mem_44332)[gtid_39492 *
                                                                   N_30870 +
                                                                   i_40038];
            int32_t x_40040 = sub32(x_40011, x_40013);
            int32_t i_40041 = add32(x_40040, index_primexp_41533);
            int64_t i_40042 = sext_i32_i64(i_40041);
            float y_40043 = ((__global
                              float *) defunc_4_map_res_mem_44332)[gtid_39492 *
                                                                   N_30870 +
                                                                   i_40042];
            float defunc_0_f_res_f_res_f_res_40044 = x_40039 - y_40043;
            
            defunc_0_f_res_f_res_40036 = defunc_0_f_res_f_res_f_res_40044;
        }
        defunc_0_f_res_40034 = defunc_0_f_res_f_res_40036;
    }
    ((__local float *) mem_44554)[gtid_39495] = defunc_0_f_res_40034;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_45948;
    
    dims_flat_45948 = iota32_arg_31257;
    
    float x_40029;
    float x_40030;
    float x_45950;
    float x_45951;
    bool ltid_in_bounds_45953;
    
    ltid_in_bounds_45953 = slt64(sext_i32_i64(local_tid_45943),
                                 iota32_arg_31257);
    
    int32_t skip_threads_45954;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45953) {
            x_40030 = ((volatile __local
                        float *) mem_44554)[sext_i32_i64(local_tid_45943)];
            if ((local_tid_45943 - squot32(local_tid_45943, 32) * 32) == 0) {
                x_40029 = x_40030;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45954 = 1;
        while (slt32(skip_threads_45954, 32)) {
            if (sle32(skip_threads_45954, local_tid_45943 -
                      squot32(local_tid_45943, 32) * 32) &&
                ltid_in_bounds_45953) {
                // read operands
                {
                    x_40029 = ((volatile __local
                                float *) mem_44554)[sext_i32_i64(local_tid_45943) -
                                                    sext_i32_i64(skip_threads_45954)];
                }
                // perform operation
                {
                    bool inactive_45955 =
                         slt64(srem64(sext_i32_i64(local_tid_45943),
                                      iota32_arg_31257),
                               sext_i32_i64(local_tid_45943) -
                               sext_i32_i64(local_tid_45943 -
                               skip_threads_45954));
                    
                    if (inactive_45955) {
                        x_40029 = x_40030;
                    }
                    if (!inactive_45955) {
                        float defunc_1_op_res_40031 = x_40029 + x_40030;
                        
                        x_40029 = defunc_1_op_res_40031;
                    }
                }
            }
            if (sle32(wave_sizze_45945, skip_threads_45954)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45954, local_tid_45943 -
                      squot32(local_tid_45943, 32) * 32) &&
                ltid_in_bounds_45953) {
                // write result
                {
                    ((volatile __local
                      float *) mem_44554)[sext_i32_i64(local_tid_45943)] =
                        x_40029;
                    x_40030 = x_40029;
                }
            }
            if (sle32(wave_sizze_45945, skip_threads_45954)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45954 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45943 - squot32(local_tid_45943, 32) * 32) == 31 &&
            ltid_in_bounds_45953) {
            ((volatile __local
              float *) mem_44554)[sext_i32_i64(squot32(local_tid_45943, 32))] =
                x_40029;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45956;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45943, 32) == 0 && ltid_in_bounds_45953) {
                x_45951 = ((volatile __local
                            float *) mem_44554)[sext_i32_i64(local_tid_45943)];
                if ((local_tid_45943 - squot32(local_tid_45943, 32) * 32) ==
                    0) {
                    x_45950 = x_45951;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45956 = 1;
            while (slt32(skip_threads_45956, 32)) {
                if (sle32(skip_threads_45956, local_tid_45943 -
                          squot32(local_tid_45943, 32) * 32) &&
                    (squot32(local_tid_45943, 32) == 0 &&
                     ltid_in_bounds_45953)) {
                    // read operands
                    {
                        x_45950 = ((volatile __local
                                    float *) mem_44554)[sext_i32_i64(local_tid_45943) -
                                                        sext_i32_i64(skip_threads_45956)];
                    }
                    // perform operation
                    {
                        bool inactive_45957 =
                             slt64(srem64(sext_i32_i64(local_tid_45943 * 32 +
                                          32 - 1), iota32_arg_31257),
                                   sext_i32_i64(local_tid_45943 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_45943 -
                                                 skip_threads_45956) * 32 + 32 -
                                   1));
                        
                        if (inactive_45957) {
                            x_45950 = x_45951;
                        }
                        if (!inactive_45957) {
                            float defunc_1_op_res_45952 = x_45950 + x_45951;
                            
                            x_45950 = defunc_1_op_res_45952;
                        }
                    }
                }
                if (sle32(wave_sizze_45945, skip_threads_45956)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45956, local_tid_45943 -
                          squot32(local_tid_45943, 32) * 32) &&
                    (squot32(local_tid_45943, 32) == 0 &&
                     ltid_in_bounds_45953)) {
                    // write result
                    {
                        ((volatile __local
                          float *) mem_44554)[sext_i32_i64(local_tid_45943)] =
                            x_45950;
                        x_45951 = x_45950;
                    }
                }
                if (sle32(wave_sizze_45945, skip_threads_45956)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45956 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45943, 32) == 0 || !ltid_in_bounds_45953)) {
            // read operands
            {
                x_40030 = x_40029;
                x_40029 = ((__local
                            float *) mem_44554)[sext_i32_i64(squot32(local_tid_45943,
                                                                     32)) - 1];
            }
            // perform operation
            {
                bool inactive_45958 =
                     slt64(srem64(sext_i32_i64(local_tid_45943),
                                  iota32_arg_31257),
                           sext_i32_i64(local_tid_45943) -
                           sext_i32_i64(squot32(local_tid_45943, 32) * 32 - 1));
                
                if (inactive_45958) {
                    x_40029 = x_40030;
                }
                if (!inactive_45958) {
                    float defunc_1_op_res_40031 = x_40029 + x_40030;
                    
                    x_40029 = defunc_1_op_res_40031;
                }
            }
            // write final result
            {
                ((__local float *) mem_44554)[sext_i32_i64(local_tid_45943)] =
                    x_40029;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45943, 32) == 0) {
            ((__local float *) mem_44554)[sext_i32_i64(local_tid_45943)] =
                x_40030;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    bool acc0_40050;
    int32_t acc0_40051;
    float acc0_40052;
    int64_t gtid_39497 = sext_i32_i64(ltid_pre_45947);
    int32_t phys_tid_39498 = local_tid_45943;
    __local char *red_arr_mem_45959;
    
    red_arr_mem_45959 = (__local char *) red_arr_mem_45959_backing_1;
    
    __local char *red_arr_mem_45961;
    
    red_arr_mem_45961 = (__local char *) red_arr_mem_45961_backing_2;
    
    __local char *red_arr_mem_45963;
    
    red_arr_mem_45963 = (__local char *) red_arr_mem_45963_backing_3;
    
    float x_40067;
    
    x_40067 = ((__local float *) mem_44554)[gtid_39497];
    
    float x_40068 = ((__global float *) mem_44435)[gtid_39497];
    int32_t index_primexp_41536 = sext_i64_i32(gtid_39497);
    float defunc_0_f_res_40071 = x_40067 / y_40020;
    bool cond_40072 = slt32(index_primexp_41536, y_40017);
    bool isnan_res_40073;
    
    isnan_res_40073 = futrts_isnan32(defunc_0_f_res_40071);
    
    bool cond_t_res_40074 = !isnan_res_40073;
    bool x_40075 = cond_40072 && cond_t_res_40074;
    float abs_res_40076 = (float) fabs(defunc_0_f_res_40071);
    bool defunc_2_f_res_t_res_40077 = x_40068 < abs_res_40076;
    bool x_40078 = x_40075 && defunc_2_f_res_t_res_40077;
    float defunc_1_f_res_40079;
    
    if (cond_40072) {
        defunc_1_f_res_40079 = defunc_0_f_res_40071;
    } else {
        defunc_1_f_res_40079 = 0.0F;
    }
    ((__local bool *) red_arr_mem_45959)[gtid_39497] = x_40078;
    ((__local int32_t *) red_arr_mem_45961)[gtid_39497] = index_primexp_41536;
    ((__local float *) red_arr_mem_45963)[gtid_39497] = defunc_1_f_res_40079;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45965;
    int32_t skip_waves_45966;
    
    skip_waves_45966 = 1;
    
    bool x_40053;
    int32_t x_40054;
    float x_40055;
    bool x_40056;
    int32_t x_40057;
    float x_40058;
    
    offset_45965 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45943, sext_i64_i32(iota32_arg_31257))) {
            x_40053 = ((__local
                        bool *) red_arr_mem_45959)[sext_i32_i64(local_tid_45943 +
                                                   offset_45965)];
            x_40054 = ((__local
                        int32_t *) red_arr_mem_45961)[sext_i32_i64(local_tid_45943 +
                                                      offset_45965)];
            x_40055 = ((__local
                        float *) red_arr_mem_45963)[sext_i32_i64(local_tid_45943 +
                                                    offset_45965)];
        }
    }
    offset_45965 = 1;
    while (slt32(offset_45965, wave_sizze_45945)) {
        if (slt32(local_tid_45943 + offset_45965,
                  sext_i64_i32(iota32_arg_31257)) && ((local_tid_45943 -
                                                       squot32(local_tid_45943,
                                                               wave_sizze_45945) *
                                                       wave_sizze_45945) & (2 *
                                                                            offset_45965 -
                                                                            1)) ==
            0) {
            // read array element
            {
                x_40056 = ((volatile __local
                            bool *) red_arr_mem_45959)[sext_i32_i64(local_tid_45943 +
                                                       offset_45965)];
                x_40057 = ((volatile __local
                            int32_t *) red_arr_mem_45961)[sext_i32_i64(local_tid_45943 +
                                                          offset_45965)];
                x_40058 = ((volatile __local
                            float *) red_arr_mem_45963)[sext_i32_i64(local_tid_45943 +
                                                        offset_45965)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_40059;
                int32_t defunc_1_op_res_40060;
                
                if (x_40053) {
                    defunc_1_op_res_40059 = x_40053;
                    defunc_1_op_res_40060 = x_40054;
                } else {
                    bool x_40061 = x_40056 && x_40056;
                    bool x_40062 = !x_40056;
                    bool y_40063 = x_40053 && x_40062;
                    bool defunc_1_op_res_f_res_40064 = x_40061 || y_40063;
                    int32_t defunc_1_op_res_f_res_40065;
                    
                    if (x_40056) {
                        defunc_1_op_res_f_res_40065 = x_40057;
                    } else {
                        defunc_1_op_res_f_res_40065 = x_40054;
                    }
                    defunc_1_op_res_40059 = defunc_1_op_res_f_res_40064;
                    defunc_1_op_res_40060 = defunc_1_op_res_f_res_40065;
                }
                
                float defunc_1_op_res_40066 = x_40055 + x_40058;
                
                x_40053 = defunc_1_op_res_40059;
                x_40054 = defunc_1_op_res_40060;
                x_40055 = defunc_1_op_res_40066;
            }
            // write result of operation
            {
                ((volatile __local
                  bool *) red_arr_mem_45959)[sext_i32_i64(local_tid_45943)] =
                    x_40053;
                ((volatile __local
                  int32_t *) red_arr_mem_45961)[sext_i32_i64(local_tid_45943)] =
                    x_40054;
                ((volatile __local
                  float *) red_arr_mem_45963)[sext_i32_i64(local_tid_45943)] =
                    x_40055;
            }
        }
        offset_45965 *= 2;
    }
    while (slt32(skip_waves_45966, squot32(sext_i64_i32(iota32_arg_31257) +
                                           wave_sizze_45945 - 1,
                                           wave_sizze_45945))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45965 = skip_waves_45966 * wave_sizze_45945;
        if (slt32(local_tid_45943 + offset_45965,
                  sext_i64_i32(iota32_arg_31257)) && ((local_tid_45943 -
                                                       squot32(local_tid_45943,
                                                               wave_sizze_45945) *
                                                       wave_sizze_45945) == 0 &&
                                                      (squot32(local_tid_45943,
                                                               wave_sizze_45945) &
                                                       (2 * skip_waves_45966 -
                                                        1)) == 0)) {
            // read array element
            {
                x_40056 = ((__local
                            bool *) red_arr_mem_45959)[sext_i32_i64(local_tid_45943 +
                                                       offset_45965)];
                x_40057 = ((__local
                            int32_t *) red_arr_mem_45961)[sext_i32_i64(local_tid_45943 +
                                                          offset_45965)];
                x_40058 = ((__local
                            float *) red_arr_mem_45963)[sext_i32_i64(local_tid_45943 +
                                                        offset_45965)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_40059;
                int32_t defunc_1_op_res_40060;
                
                if (x_40053) {
                    defunc_1_op_res_40059 = x_40053;
                    defunc_1_op_res_40060 = x_40054;
                } else {
                    bool x_40061 = x_40056 && x_40056;
                    bool x_40062 = !x_40056;
                    bool y_40063 = x_40053 && x_40062;
                    bool defunc_1_op_res_f_res_40064 = x_40061 || y_40063;
                    int32_t defunc_1_op_res_f_res_40065;
                    
                    if (x_40056) {
                        defunc_1_op_res_f_res_40065 = x_40057;
                    } else {
                        defunc_1_op_res_f_res_40065 = x_40054;
                    }
                    defunc_1_op_res_40059 = defunc_1_op_res_f_res_40064;
                    defunc_1_op_res_40060 = defunc_1_op_res_f_res_40065;
                }
                
                float defunc_1_op_res_40066 = x_40055 + x_40058;
                
                x_40053 = defunc_1_op_res_40059;
                x_40054 = defunc_1_op_res_40060;
                x_40055 = defunc_1_op_res_40066;
            }
            // write result of operation
            {
                ((__local
                  bool *) red_arr_mem_45959)[sext_i32_i64(local_tid_45943)] =
                    x_40053;
                ((__local
                  int32_t *) red_arr_mem_45961)[sext_i32_i64(local_tid_45943)] =
                    x_40054;
                ((__local
                  float *) red_arr_mem_45963)[sext_i32_i64(local_tid_45943)] =
                    x_40055;
            }
        }
        skip_waves_45966 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    acc0_40050 = ((__local bool *) red_arr_mem_45959)[0];
    acc0_40051 = ((__local int32_t *) red_arr_mem_45961)[0];
    acc0_40052 = ((__local float *) red_arr_mem_45963)[0];
    
    bool x_40082 = acc0_40050 && acc0_40050;
    int32_t defunc_1_op_res_f_res_40086;
    
    if (acc0_40050) {
        defunc_1_op_res_f_res_40086 = acc0_40051;
    } else {
        defunc_1_op_res_f_res_40086 = -1;
    }
    
    bool cond_40092 = y_40017 == 0;
    float defunc_0_f_res_40093;
    
    if (cond_40092) {
        defunc_0_f_res_40093 = 0.0F;
    } else {
        float i32_res_40094 = sitofp_i32_f32(y_40017);
        float defunc_0_f_res_f_res_40095 = acc0_40052 / i32_res_40094;
        
        defunc_0_f_res_40093 = defunc_0_f_res_f_res_40095;
    }
    
    __local char *mem_44558;
    
    mem_44558 = (__local char *) mem_44558_backing_4;
    
    int64_t gtid_39499 = sext_i32_i64(ltid_pre_45947);
    int32_t phys_tid_39500 = local_tid_45943;
    int32_t index_primexp_41539 = sext_i64_i32(gtid_39499);
    bool cond_40098 = slt32(index_primexp_41539, y_40017);
    bool cond_40099;
    
    if (cond_40098) {
        int32_t i_40100 = add32(x_40011, index_primexp_41539);
        int64_t i_40101 = sext_i32_i64(i_40100);
        bool x_40102 = sle64(0, i_40101);
        bool y_40103 = slt64(i_40101, N_30870);
        bool bounds_check_40104 = x_40102 && y_40103;
        bool index_certs_40105;
        
        if (!bounds_check_40104) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 6) == -1) {
                    global_failure_args[0] = i_40101;
                    global_failure_args[1] = N_30870;
                    ;
                }
                local_failure = true;
                goto error_3;
            }
        }
        
        float isnan_arg_40106 = ((__global
                                  float *) defunc_4_map_res_mem_44332)[gtid_39492 *
                                                                       N_30870 +
                                                                       i_40101];
        bool isnan_res_40107;
        
        isnan_res_40107 = futrts_isnan32(isnan_arg_40106);
        
        bool cond_t_res_40108 = !isnan_res_40107;
        
        cond_40099 = cond_t_res_40108;
    } else {
        cond_40099 = 0;
    }
    
    float defunc_0_f_res_40109;
    
    if (cond_40099) {
        int32_t i_40110 = add32(x_40011, index_primexp_41539);
        int64_t i_40111 = sext_i32_i64(i_40110);
        bool x_40112 = sle64(0, i_40111);
        bool y_40113 = slt64(i_40111, N_30870);
        bool bounds_check_40114 = x_40112 && y_40113;
        bool index_certs_40115;
        
        if (!bounds_check_40114) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 7) == -1) {
                    global_failure_args[0] = i_40111;
                    global_failure_args[1] = N_30870;
                    ;
                }
                local_failure = true;
                goto error_3;
            }
        }
        
        float defunc_0_f_res_t_res_40116 = ((__global
                                             float *) defunc_4_map_res_mem_44332)[gtid_39492 *
                                                                                  N_30870 +
                                                                                  i_40111];
        
        defunc_0_f_res_40109 = defunc_0_f_res_t_res_40116;
    } else {
        defunc_0_f_res_40109 = INFINITY;
    }
    ((__local float *) mem_44558)[gtid_39499] = defunc_0_f_res_40109;
    
  error_3:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44568;
    
    mem_44568 = (__local char *) mem_44568_backing_5;
    
    __local char *mem_44570;
    
    mem_44570 = (__local char *) mem_44570_backing_6;
    
    __local char *mem_44572;
    
    mem_44572 = (__local char *) mem_44572_backing_7;
    
    __local char *mem_44574;
    
    mem_44574 = (__local char *) mem_44574_backing_8;
    
    __local char *mem_44576;
    
    mem_44576 = (__local char *) mem_44576_backing_9;
    
    __local char *double_buffer_mem_44850;
    
    double_buffer_mem_44850 = (__local
                               char *) double_buffer_mem_44850_backing_10;
    ((__local float *) double_buffer_mem_44850)[sext_i32_i64(local_tid_45943)] =
        ((__local float *) mem_44558)[sext_i32_i64(local_tid_45943)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44578;
    
    mem_44578 = (__local char *) mem_44578_backing_11;
    for (int32_t i_40118 = 0; i_40118 < iters_31288; i_40118++) {
        int32_t defunc_2_radix_sort_step_arg_40120 = mul32(2, i_40118);
        int32_t defunc_0_get_bit_arg_40121 = add32(1,
                                                   defunc_2_radix_sort_step_arg_40120);
        bool cond_f_res_40122 = defunc_0_get_bit_arg_40121 == 31;
        bool cond_f_res_40123 = defunc_2_radix_sort_step_arg_40120 == 31;
        int64_t gtid_39521 = sext_i32_i64(ltid_pre_45947);
        int32_t phys_tid_39522 = local_tid_45943;
        float x_40141 = ((__local float *) double_buffer_mem_44850)[gtid_39521];
        int32_t i32_arg_40142;
        
        i32_arg_40142 = futrts_to_bits32(x_40141);
        
        int32_t unsign_arg_40143 = ashr32(i32_arg_40142,
                                          defunc_0_get_bit_arg_40121);
        int32_t unsign_arg_40144 = 1 & unsign_arg_40143;
        int32_t unsign_arg_40145 = ashr32(i32_arg_40142, 31);
        int32_t unsign_arg_40146 = 1 & unsign_arg_40145;
        bool cond_40147 = unsign_arg_40146 == 1;
        bool x_40148 = !cond_40147;
        bool y_40149 = cond_f_res_40122 && x_40148;
        bool cond_40150 = cond_40147 || y_40149;
        int32_t defunc_1_get_bit_res_40151;
        
        if (cond_40150) {
            int32_t defunc_1_get_bit_res_t_res_40152 = 1 ^ unsign_arg_40144;
            
            defunc_1_get_bit_res_40151 = defunc_1_get_bit_res_t_res_40152;
        } else {
            defunc_1_get_bit_res_40151 = unsign_arg_40144;
        }
        
        int32_t x_40153 = mul32(2, defunc_1_get_bit_res_40151);
        int32_t unsign_arg_40154 = ashr32(i32_arg_40142,
                                          defunc_2_radix_sort_step_arg_40120);
        int32_t unsign_arg_40155 = 1 & unsign_arg_40154;
        bool y_40156 = cond_f_res_40123 && x_40148;
        bool cond_40157 = cond_40147 || y_40156;
        int32_t defunc_1_get_bit_res_40158;
        
        if (cond_40157) {
            int32_t defunc_1_get_bit_res_t_res_40159 = 1 ^ unsign_arg_40155;
            
            defunc_1_get_bit_res_40158 = defunc_1_get_bit_res_t_res_40159;
        } else {
            defunc_1_get_bit_res_40158 = unsign_arg_40155;
        }
        
        int32_t defunc_0_f_res_40160 = add32(x_40153,
                                             defunc_1_get_bit_res_40158);
        bool cond_40161 = defunc_0_f_res_40160 == 0;
        int64_t defunc_0_f_res_40162 = btoi_bool_i64(cond_40161);
        int64_t defunc_0_f_res_40163;
        int64_t defunc_0_f_res_40164;
        int64_t defunc_0_f_res_40165;
        
        if (cond_40161) {
            defunc_0_f_res_40163 = 0;
            defunc_0_f_res_40164 = 0;
            defunc_0_f_res_40165 = 0;
        } else {
            bool cond_40166 = defunc_0_f_res_40160 == 1;
            int64_t defunc_0_f_res_f_res_40167 = btoi_bool_i64(cond_40166);
            int64_t defunc_0_f_res_f_res_40168;
            int64_t defunc_0_f_res_f_res_40169;
            
            if (cond_40166) {
                defunc_0_f_res_f_res_40168 = 0;
                defunc_0_f_res_f_res_40169 = 0;
            } else {
                bool cond_40170 = defunc_0_f_res_40160 == 2;
                int64_t defunc_0_f_res_f_res_f_res_40171 =
                        btoi_bool_i64(cond_40170);
                bool cond_neg_40172 = !cond_40170;
                int64_t defunc_0_f_res_f_res_f_res_40173 =
                        btoi_bool_i64(cond_neg_40172);
                
                defunc_0_f_res_f_res_40168 = defunc_0_f_res_f_res_f_res_40171;
                defunc_0_f_res_f_res_40169 = defunc_0_f_res_f_res_f_res_40173;
            }
            defunc_0_f_res_40163 = defunc_0_f_res_f_res_40167;
            defunc_0_f_res_40164 = defunc_0_f_res_f_res_40168;
            defunc_0_f_res_40165 = defunc_0_f_res_f_res_40169;
        }
        ((__local int64_t *) mem_44568)[gtid_39521] = defunc_0_f_res_40162;
        ((__local int64_t *) mem_44570)[gtid_39521] = defunc_0_f_res_40163;
        ((__local int64_t *) mem_44572)[gtid_39521] = defunc_0_f_res_40164;
        ((__local int64_t *) mem_44574)[gtid_39521] = defunc_0_f_res_40165;
        ((__local int32_t *) mem_44576)[gtid_39521] = defunc_0_f_res_40160;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t dims_flat_45968;
        
        dims_flat_45968 = iota32_arg_31257;
        
        int64_t x_40129;
        int64_t x_40130;
        int64_t x_40131;
        int64_t x_40132;
        int64_t x_40133;
        int64_t x_40134;
        int64_t x_40135;
        int64_t x_40136;
        int64_t x_45973;
        int64_t x_45974;
        int64_t x_45975;
        int64_t x_45976;
        int64_t x_45977;
        int64_t x_45978;
        int64_t x_45979;
        int64_t x_45980;
        bool ltid_in_bounds_45985;
        
        ltid_in_bounds_45985 = slt64(sext_i32_i64(local_tid_45943),
                                     iota32_arg_31257);
        
        int32_t skip_threads_45986;
        
        // read input for in-block scan
        {
            if (ltid_in_bounds_45985) {
                x_40133 = ((volatile __local
                            int64_t *) mem_44568)[sext_i32_i64(local_tid_45943)];
                x_40134 = ((volatile __local
                            int64_t *) mem_44570)[sext_i32_i64(local_tid_45943)];
                x_40135 = ((volatile __local
                            int64_t *) mem_44572)[sext_i32_i64(local_tid_45943)];
                x_40136 = ((volatile __local
                            int64_t *) mem_44574)[sext_i32_i64(local_tid_45943)];
                if ((local_tid_45943 - squot32(local_tid_45943, 32) * 32) ==
                    0) {
                    x_40129 = x_40133;
                    x_40130 = x_40134;
                    x_40131 = x_40135;
                    x_40132 = x_40136;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45986 = 1;
            while (slt32(skip_threads_45986, 32)) {
                if (sle32(skip_threads_45986, local_tid_45943 -
                          squot32(local_tid_45943, 32) * 32) &&
                    ltid_in_bounds_45985) {
                    // read operands
                    {
                        x_40129 = ((volatile __local
                                    int64_t *) mem_44568)[sext_i32_i64(local_tid_45943) -
                                                          sext_i32_i64(skip_threads_45986)];
                        x_40130 = ((volatile __local
                                    int64_t *) mem_44570)[sext_i32_i64(local_tid_45943) -
                                                          sext_i32_i64(skip_threads_45986)];
                        x_40131 = ((volatile __local
                                    int64_t *) mem_44572)[sext_i32_i64(local_tid_45943) -
                                                          sext_i32_i64(skip_threads_45986)];
                        x_40132 = ((volatile __local
                                    int64_t *) mem_44574)[sext_i32_i64(local_tid_45943) -
                                                          sext_i32_i64(skip_threads_45986)];
                    }
                    // perform operation
                    {
                        bool inactive_45987 =
                             slt64(srem64(sext_i32_i64(local_tid_45943),
                                          iota32_arg_31257),
                                   sext_i32_i64(local_tid_45943) -
                                   sext_i32_i64(local_tid_45943 -
                                   skip_threads_45986));
                        
                        if (inactive_45987) {
                            x_40129 = x_40133;
                            x_40130 = x_40134;
                            x_40131 = x_40135;
                            x_40132 = x_40136;
                        }
                        if (!inactive_45987) {
                            int64_t defunc_1_op_res_40137 = add64(x_40129,
                                                                  x_40133);
                            int64_t defunc_1_op_res_40138 = add64(x_40130,
                                                                  x_40134);
                            int64_t defunc_1_op_res_40139 = add64(x_40131,
                                                                  x_40135);
                            int64_t defunc_1_op_res_40140 = add64(x_40132,
                                                                  x_40136);
                            
                            x_40129 = defunc_1_op_res_40137;
                            x_40130 = defunc_1_op_res_40138;
                            x_40131 = defunc_1_op_res_40139;
                            x_40132 = defunc_1_op_res_40140;
                        }
                    }
                }
                if (sle32(wave_sizze_45945, skip_threads_45986)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45986, local_tid_45943 -
                          squot32(local_tid_45943, 32) * 32) &&
                    ltid_in_bounds_45985) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_44568)[sext_i32_i64(local_tid_45943)] =
                            x_40129;
                        x_40133 = x_40129;
                        ((volatile __local
                          int64_t *) mem_44570)[sext_i32_i64(local_tid_45943)] =
                            x_40130;
                        x_40134 = x_40130;
                        ((volatile __local
                          int64_t *) mem_44572)[sext_i32_i64(local_tid_45943)] =
                            x_40131;
                        x_40135 = x_40131;
                        ((volatile __local
                          int64_t *) mem_44574)[sext_i32_i64(local_tid_45943)] =
                            x_40132;
                        x_40136 = x_40132;
                    }
                }
                if (sle32(wave_sizze_45945, skip_threads_45986)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45986 *= 2;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // last thread of block 'i' writes its result to offset 'i'
        {
            if ((local_tid_45943 - squot32(local_tid_45943, 32) * 32) == 31 &&
                ltid_in_bounds_45985) {
                ((volatile __local
                  int64_t *) mem_44568)[sext_i32_i64(squot32(local_tid_45943,
                                                             32))] = x_40129;
                ((volatile __local
                  int64_t *) mem_44570)[sext_i32_i64(squot32(local_tid_45943,
                                                             32))] = x_40130;
                ((volatile __local
                  int64_t *) mem_44572)[sext_i32_i64(squot32(local_tid_45943,
                                                             32))] = x_40131;
                ((volatile __local
                  int64_t *) mem_44574)[sext_i32_i64(squot32(local_tid_45943,
                                                             32))] = x_40132;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
        {
            int32_t skip_threads_45988;
            
            // read input for in-block scan
            {
                if (squot32(local_tid_45943, 32) == 0 && ltid_in_bounds_45985) {
                    x_45977 = ((volatile __local
                                int64_t *) mem_44568)[sext_i32_i64(local_tid_45943)];
                    x_45978 = ((volatile __local
                                int64_t *) mem_44570)[sext_i32_i64(local_tid_45943)];
                    x_45979 = ((volatile __local
                                int64_t *) mem_44572)[sext_i32_i64(local_tid_45943)];
                    x_45980 = ((volatile __local
                                int64_t *) mem_44574)[sext_i32_i64(local_tid_45943)];
                    if ((local_tid_45943 - squot32(local_tid_45943, 32) * 32) ==
                        0) {
                        x_45973 = x_45977;
                        x_45974 = x_45978;
                        x_45975 = x_45979;
                        x_45976 = x_45980;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_45988 = 1;
                while (slt32(skip_threads_45988, 32)) {
                    if (sle32(skip_threads_45988, local_tid_45943 -
                              squot32(local_tid_45943, 32) * 32) &&
                        (squot32(local_tid_45943, 32) == 0 &&
                         ltid_in_bounds_45985)) {
                        // read operands
                        {
                            x_45973 = ((volatile __local
                                        int64_t *) mem_44568)[sext_i32_i64(local_tid_45943) -
                                                              sext_i32_i64(skip_threads_45988)];
                            x_45974 = ((volatile __local
                                        int64_t *) mem_44570)[sext_i32_i64(local_tid_45943) -
                                                              sext_i32_i64(skip_threads_45988)];
                            x_45975 = ((volatile __local
                                        int64_t *) mem_44572)[sext_i32_i64(local_tid_45943) -
                                                              sext_i32_i64(skip_threads_45988)];
                            x_45976 = ((volatile __local
                                        int64_t *) mem_44574)[sext_i32_i64(local_tid_45943) -
                                                              sext_i32_i64(skip_threads_45988)];
                        }
                        // perform operation
                        {
                            bool inactive_45989 =
                                 slt64(srem64(sext_i32_i64(local_tid_45943 *
                                              32 + 32 - 1), iota32_arg_31257),
                                       sext_i32_i64(local_tid_45943 * 32 + 32 -
                                       1) - sext_i32_i64((local_tid_45943 -
                                                          skip_threads_45988) *
                                       32 + 32 - 1));
                            
                            if (inactive_45989) {
                                x_45973 = x_45977;
                                x_45974 = x_45978;
                                x_45975 = x_45979;
                                x_45976 = x_45980;
                            }
                            if (!inactive_45989) {
                                int64_t defunc_1_op_res_45981 = add64(x_45973,
                                                                      x_45977);
                                int64_t defunc_1_op_res_45982 = add64(x_45974,
                                                                      x_45978);
                                int64_t defunc_1_op_res_45983 = add64(x_45975,
                                                                      x_45979);
                                int64_t defunc_1_op_res_45984 = add64(x_45976,
                                                                      x_45980);
                                
                                x_45973 = defunc_1_op_res_45981;
                                x_45974 = defunc_1_op_res_45982;
                                x_45975 = defunc_1_op_res_45983;
                                x_45976 = defunc_1_op_res_45984;
                            }
                        }
                    }
                    if (sle32(wave_sizze_45945, skip_threads_45988)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_45988, local_tid_45943 -
                              squot32(local_tid_45943, 32) * 32) &&
                        (squot32(local_tid_45943, 32) == 0 &&
                         ltid_in_bounds_45985)) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) mem_44568)[sext_i32_i64(local_tid_45943)] =
                                x_45973;
                            x_45977 = x_45973;
                            ((volatile __local
                              int64_t *) mem_44570)[sext_i32_i64(local_tid_45943)] =
                                x_45974;
                            x_45978 = x_45974;
                            ((volatile __local
                              int64_t *) mem_44572)[sext_i32_i64(local_tid_45943)] =
                                x_45975;
                            x_45979 = x_45975;
                            ((volatile __local
                              int64_t *) mem_44574)[sext_i32_i64(local_tid_45943)] =
                                x_45976;
                            x_45980 = x_45976;
                        }
                    }
                    if (sle32(wave_sizze_45945, skip_threads_45988)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_45988 *= 2;
                }
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // carry-in for every block except the first
        {
            if (!(squot32(local_tid_45943, 32) == 0 || !ltid_in_bounds_45985)) {
                // read operands
                {
                    x_40133 = x_40129;
                    x_40134 = x_40130;
                    x_40135 = x_40131;
                    x_40136 = x_40132;
                    x_40129 = ((__local
                                int64_t *) mem_44568)[sext_i32_i64(squot32(local_tid_45943,
                                                                           32)) -
                                                      1];
                    x_40130 = ((__local
                                int64_t *) mem_44570)[sext_i32_i64(squot32(local_tid_45943,
                                                                           32)) -
                                                      1];
                    x_40131 = ((__local
                                int64_t *) mem_44572)[sext_i32_i64(squot32(local_tid_45943,
                                                                           32)) -
                                                      1];
                    x_40132 = ((__local
                                int64_t *) mem_44574)[sext_i32_i64(squot32(local_tid_45943,
                                                                           32)) -
                                                      1];
                }
                // perform operation
                {
                    bool inactive_45990 =
                         slt64(srem64(sext_i32_i64(local_tid_45943),
                                      iota32_arg_31257),
                               sext_i32_i64(local_tid_45943) -
                               sext_i32_i64(squot32(local_tid_45943, 32) * 32 -
                               1));
                    
                    if (inactive_45990) {
                        x_40129 = x_40133;
                        x_40130 = x_40134;
                        x_40131 = x_40135;
                        x_40132 = x_40136;
                    }
                    if (!inactive_45990) {
                        int64_t defunc_1_op_res_40137 = add64(x_40129, x_40133);
                        int64_t defunc_1_op_res_40138 = add64(x_40130, x_40134);
                        int64_t defunc_1_op_res_40139 = add64(x_40131, x_40135);
                        int64_t defunc_1_op_res_40140 = add64(x_40132, x_40136);
                        
                        x_40129 = defunc_1_op_res_40137;
                        x_40130 = defunc_1_op_res_40138;
                        x_40131 = defunc_1_op_res_40139;
                        x_40132 = defunc_1_op_res_40140;
                    }
                }
                // write final result
                {
                    ((__local
                      int64_t *) mem_44568)[sext_i32_i64(local_tid_45943)] =
                        x_40129;
                    ((__local
                      int64_t *) mem_44570)[sext_i32_i64(local_tid_45943)] =
                        x_40130;
                    ((__local
                      int64_t *) mem_44572)[sext_i32_i64(local_tid_45943)] =
                        x_40131;
                    ((__local
                      int64_t *) mem_44574)[sext_i32_i64(local_tid_45943)] =
                        x_40132;
                }
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // restore correct values for first block
        {
            if (squot32(local_tid_45943, 32) == 0) {
                ((__local int64_t *) mem_44568)[sext_i32_i64(local_tid_45943)] =
                    x_40133;
                ((__local int64_t *) mem_44570)[sext_i32_i64(local_tid_45943)] =
                    x_40134;
                ((__local int64_t *) mem_44572)[sext_i32_i64(local_tid_45943)] =
                    x_40135;
                ((__local int64_t *) mem_44574)[sext_i32_i64(local_tid_45943)] =
                    x_40136;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t last_res_40174 = ((__local int64_t *) mem_44568)[i_31290];
        int64_t last_res_40175 = ((__local int64_t *) mem_44570)[i_31290];
        int64_t last_res_40176 = ((__local int64_t *) mem_44572)[i_31290];
        
        ((__local float *) mem_44578)[sext_i32_i64(local_tid_45943)] = ((__local
                                                                         float *) double_buffer_mem_44850)[sext_i32_i64(local_tid_45943)];
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_39523 = sext_i32_i64(ltid_pre_45947);
        int32_t phys_tid_39524 = local_tid_45943;
        int32_t x_40179 = ((__local int32_t *) mem_44576)[write_i_39523];
        float write_value_40184 = ((__local
                                    float *) double_buffer_mem_44850)[write_i_39523];
        bool match_lit_40185 = 0 == x_40179;
        int64_t defunc_1_f_res_40186;
        
        if (match_lit_40185) {
            int64_t x_40180 = ((__local int64_t *) mem_44568)[write_i_39523];
            int64_t case_res_40187 = sub64(x_40180, 1);
            
            defunc_1_f_res_40186 = case_res_40187;
        } else {
            int64_t x_40181 = ((__local int64_t *) mem_44570)[write_i_39523];
            int64_t x_40182 = ((__local int64_t *) mem_44572)[write_i_39523];
            int64_t x_40183 = ((__local int64_t *) mem_44574)[write_i_39523];
            bool match_lit_40188 = 1 == x_40179;
            int64_t x_40189;
            
            if (match_lit_40188) {
                int64_t x_40190 = add64(last_res_40174, x_40181);
                int64_t case_res_40191 = sub64(x_40190, 1);
                
                x_40189 = case_res_40191;
            } else {
                bool match_lit_40192 = 2 == x_40179;
                int64_t x_40193;
                
                if (match_lit_40192) {
                    int64_t x_40194 = add64(last_res_40174, last_res_40175);
                    int64_t x_40195 = add64(x_40182, x_40194);
                    int64_t case_res_40196 = sub64(x_40195, 1);
                    
                    x_40193 = case_res_40196;
                } else {
                    int64_t x_40197 = add64(last_res_40174, last_res_40175);
                    int64_t x_40198 = add64(last_res_40176, x_40197);
                    int64_t x_40199 = add64(x_40183, x_40198);
                    int64_t defunc_1_f_res_res_40200 = sub64(x_40199, 1);
                    
                    x_40193 = defunc_1_f_res_res_40200;
                }
                x_40189 = x_40193;
            }
            defunc_1_f_res_40186 = x_40189;
        }
        if (sle64(0, defunc_1_f_res_40186) && slt64(defunc_1_f_res_40186,
                                                    iota32_arg_31257)) {
            ((__local float *) mem_44578)[defunc_1_f_res_40186] =
                write_value_40184;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        ((__local
          float *) double_buffer_mem_44850)[sext_i32_i64(local_tid_45943)] =
            ((__local float *) mem_44578)[sext_i32_i64(local_tid_45943)];
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    
    int32_t i_40201 = sdiv32(y_40017, 2);
    int32_t j_40202 = sub32(i_40201, 1);
    bool cond_40203 = x_40010 == x_40011;
    float defunc_0_f_res_40204;
    
    if (cond_40203) {
        defunc_0_f_res_40204 = 0.0F;
    } else {
        int32_t x_40205 = smod32(y_40017, 2);
        bool cond_40206 = x_40205 == 0;
        float defunc_0_f_res_f_res_40207;
        
        if (cond_40206) {
            int64_t j_40208 = sext_i32_i64(j_40202);
            bool x_40209 = sle64(0, j_40208);
            bool y_40210 = slt64(j_40208, iota32_arg_31257);
            bool bounds_check_40211 = x_40209 && y_40210;
            bool index_certs_40212;
            
            if (!bounds_check_40211) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 8) ==
                        -1) {
                        global_failure_args[0] = j_40208;
                        global_failure_args[1] = iota32_arg_31257;
                        ;
                    }
                    local_failure = true;
                    goto error_6;
                }
            }
            
            float x_40213 = ((__local
                              float *) double_buffer_mem_44850)[j_40208];
            int64_t i_40214 = sext_i32_i64(i_40201);
            bool x_40215 = sle64(0, i_40214);
            bool y_40216 = slt64(i_40214, iota32_arg_31257);
            bool bounds_check_40217 = x_40215 && y_40216;
            bool index_certs_40218;
            
            if (!bounds_check_40217) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 9) ==
                        -1) {
                        global_failure_args[0] = i_40214;
                        global_failure_args[1] = iota32_arg_31257;
                        ;
                    }
                    local_failure = true;
                    goto error_6;
                }
            }
            
            float y_40219 = ((__local
                              float *) double_buffer_mem_44850)[i_40214];
            float x_40220 = x_40213 + y_40219;
            float defunc_0_f_res_f_res_t_res_40221 = x_40220 / 2.0F;
            
            defunc_0_f_res_f_res_40207 = defunc_0_f_res_f_res_t_res_40221;
        } else {
            int64_t i_40222 = sext_i32_i64(i_40201);
            bool x_40223 = sle64(0, i_40222);
            bool y_40224 = slt64(i_40222, iota32_arg_31257);
            bool bounds_check_40225 = x_40223 && y_40224;
            bool index_certs_40226;
            
            if (!bounds_check_40225) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 10) ==
                        -1) {
                        global_failure_args[0] = i_40222;
                        global_failure_args[1] = iota32_arg_31257;
                        ;
                    }
                    local_failure = true;
                    goto error_6;
                }
            }
            
            float defunc_0_f_res_f_res_f_res_40227 = ((__local
                                                       float *) double_buffer_mem_44850)[i_40222];
            
            defunc_0_f_res_f_res_40207 = defunc_0_f_res_f_res_f_res_40227;
        }
        defunc_0_f_res_40204 = defunc_0_f_res_f_res_40207;
    }
    
    bool cond_40228 = !x_40082;
    int32_t fst_breakzq_40229;
    
    if (cond_40228) {
        fst_breakzq_40229 = -1;
    } else {
        bool cond_40230 = slt32(defunc_1_op_res_f_res_40086, y_40017);
        int32_t adjustValInds_res_40231;
        
        if (cond_40230) {
            int32_t i_40232 = add32(x_40011, defunc_1_op_res_f_res_40086);
            int64_t i_40233 = sext_i32_i64(i_40232);
            int32_t x_40234 = ((__global
                                int32_t *) defunc_4_map_res_mem_44333)[gtid_39492 *
                                                                       N_30870 +
                                                                       i_40233];
            int32_t adjustValInds_res_t_res_40235 = sub32(x_40234, n_30875);
            
            adjustValInds_res_40231 = adjustValInds_res_t_res_40235;
        } else {
            adjustValInds_res_40231 = -1;
        }
        fst_breakzq_40229 = adjustValInds_res_40231;
    }
    
    bool cond_40236 = sle32(x_40011, 5);
    bool cond_f_res_40237 = sle32(y_40017, 5);
    bool x_40238 = !cond_40236;
    bool y_40239 = cond_f_res_40237 && x_40238;
    bool cond_40240 = cond_40236 || y_40239;
    int32_t fst_breakzq_40241;
    
    if (cond_40240) {
        fst_breakzq_40241 = -2;
    } else {
        fst_breakzq_40241 = fst_breakzq_40229;
    }
    if (local_tid_45943 == 0) {
        ((__global int32_t *) mem_44588)[gtid_39492] = fst_breakzq_40241;
    }
    if (local_tid_45943 == 0) {
        ((__global float *) mem_44590)[gtid_39492] = defunc_0_f_res_40093;
    }
    if (local_tid_45943 == 0) {
        ((__global float *) mem_44592)[gtid_39492] = defunc_0_f_res_40204;
    }
    
  error_6:
    return;
}
__kernel void mainzisegmap_intragroup_40311(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_44646_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_44644_backing_aligned_1,
                                            __local volatile
                                            int64_t *mem_44642_backing_aligned_2,
                                            __local volatile
                                            int64_t *mem_44640_backing_aligned_3,
                                            __local volatile
                                            int64_t *mem_44638_backing_aligned_4,
                                            __local volatile
                                            int64_t *mem_44636_backing_aligned_5,
                                            int64_t m_30871,
                                            int64_t iota32_arg_31257,
                                            int64_t i_31290,
                                            int32_t defunc_2_radix_sort_step_arg_41201,
                                            int32_t defunc_0_get_bit_arg_41202,
                                            unsigned char cond_f_res_41203,
                                            unsigned char cond_f_res_41204,
                                            __global
                                            unsigned char *mem_param_44627,
                                            __global unsigned char *mem_44632,
                                            __global unsigned char *mem_44650)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44646_backing_5 = (__local volatile
                                                           char *) mem_44646_backing_aligned_0;
    __local volatile char *restrict mem_44644_backing_4 = (__local volatile
                                                           char *) mem_44644_backing_aligned_1;
    __local volatile char *restrict mem_44642_backing_3 = (__local volatile
                                                           char *) mem_44642_backing_aligned_2;
    __local volatile char *restrict mem_44640_backing_2 = (__local volatile
                                                           char *) mem_44640_backing_aligned_3;
    __local volatile char *restrict mem_44638_backing_1 = (__local volatile
                                                           char *) mem_44638_backing_aligned_4;
    __local volatile char *restrict mem_44636_backing_0 = (__local volatile
                                                           char *) mem_44636_backing_aligned_5;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46165;
    int32_t local_tid_46166;
    int64_t group_sizze_46169;
    int32_t wave_sizze_46168;
    int32_t group_tid_46167;
    
    global_tid_46165 = get_global_id(0);
    local_tid_46166 = get_local_id(0);
    group_sizze_46169 = get_local_size(0);
    wave_sizze_46168 = LOCKSTEP_WIDTH;
    group_tid_46167 = get_group_id(0);
    
    int32_t phys_tid_40311;
    
    phys_tid_40311 = group_tid_46167;
    
    int32_t ltid_pre_46170;
    
    ltid_pre_46170 = local_tid_46166;
    
    int64_t gtid_40304;
    
    gtid_40304 = sext_i32_i64(group_tid_46167);
    
    __local char *mem_44636;
    
    mem_44636 = (__local char *) mem_44636_backing_0;
    
    __local char *mem_44638;
    
    mem_44638 = (__local char *) mem_44638_backing_1;
    
    __local char *mem_44640;
    
    mem_44640 = (__local char *) mem_44640_backing_2;
    
    __local char *mem_44642;
    
    mem_44642 = (__local char *) mem_44642_backing_3;
    
    __local char *mem_44644;
    
    mem_44644 = (__local char *) mem_44644_backing_4;
    
    int64_t gtid_40307 = sext_i32_i64(ltid_pre_46170);
    int32_t phys_tid_40308 = local_tid_46166;
    float x_41234 = ((__global float *) mem_param_44627)[gtid_40304 *
                                                         iota32_arg_31257 +
                                                         gtid_40307];
    int32_t i32_arg_41235;
    
    i32_arg_41235 = futrts_to_bits32(x_41234);
    
    int32_t unsign_arg_41236 = ashr32(i32_arg_41235,
                                      defunc_0_get_bit_arg_41202);
    int32_t unsign_arg_41237 = 1 & unsign_arg_41236;
    int32_t unsign_arg_41238 = ashr32(i32_arg_41235, 31);
    int32_t unsign_arg_41239 = 1 & unsign_arg_41238;
    bool cond_41240 = unsign_arg_41239 == 1;
    bool x_41241 = !cond_41240;
    bool y_41242 = cond_f_res_41203 && x_41241;
    bool cond_41243 = cond_41240 || y_41242;
    int32_t defunc_1_get_bit_res_41244;
    
    if (cond_41243) {
        int32_t defunc_1_get_bit_res_t_res_41245 = 1 ^ unsign_arg_41237;
        
        defunc_1_get_bit_res_41244 = defunc_1_get_bit_res_t_res_41245;
    } else {
        defunc_1_get_bit_res_41244 = unsign_arg_41237;
    }
    
    int32_t x_41246 = mul32(2, defunc_1_get_bit_res_41244);
    int32_t unsign_arg_41247 = ashr32(i32_arg_41235,
                                      defunc_2_radix_sort_step_arg_41201);
    int32_t unsign_arg_41248 = 1 & unsign_arg_41247;
    bool y_41249 = cond_f_res_41204 && x_41241;
    bool cond_41250 = cond_41240 || y_41249;
    int32_t defunc_1_get_bit_res_41251;
    
    if (cond_41250) {
        int32_t defunc_1_get_bit_res_t_res_41252 = 1 ^ unsign_arg_41248;
        
        defunc_1_get_bit_res_41251 = defunc_1_get_bit_res_t_res_41252;
    } else {
        defunc_1_get_bit_res_41251 = unsign_arg_41248;
    }
    
    int32_t defunc_0_f_res_41253 = add32(x_41246, defunc_1_get_bit_res_41251);
    bool cond_41254 = defunc_0_f_res_41253 == 0;
    int64_t defunc_0_f_res_41255 = btoi_bool_i64(cond_41254);
    int64_t defunc_0_f_res_41256;
    int64_t defunc_0_f_res_41257;
    int64_t defunc_0_f_res_41258;
    
    if (cond_41254) {
        defunc_0_f_res_41256 = 0;
        defunc_0_f_res_41257 = 0;
        defunc_0_f_res_41258 = 0;
    } else {
        bool cond_41259 = defunc_0_f_res_41253 == 1;
        int64_t defunc_0_f_res_f_res_41260 = btoi_bool_i64(cond_41259);
        int64_t defunc_0_f_res_f_res_41261;
        int64_t defunc_0_f_res_f_res_41262;
        
        if (cond_41259) {
            defunc_0_f_res_f_res_41261 = 0;
            defunc_0_f_res_f_res_41262 = 0;
        } else {
            bool cond_41263 = defunc_0_f_res_41253 == 2;
            int64_t defunc_0_f_res_f_res_f_res_41264 =
                    btoi_bool_i64(cond_41263);
            bool cond_neg_41265 = !cond_41263;
            int64_t defunc_0_f_res_f_res_f_res_41266 =
                    btoi_bool_i64(cond_neg_41265);
            
            defunc_0_f_res_f_res_41261 = defunc_0_f_res_f_res_f_res_41264;
            defunc_0_f_res_f_res_41262 = defunc_0_f_res_f_res_f_res_41266;
        }
        defunc_0_f_res_41256 = defunc_0_f_res_f_res_41260;
        defunc_0_f_res_41257 = defunc_0_f_res_f_res_41261;
        defunc_0_f_res_41258 = defunc_0_f_res_f_res_41262;
    }
    ((__local int64_t *) mem_44636)[gtid_40307] = defunc_0_f_res_41255;
    ((__local int64_t *) mem_44638)[gtid_40307] = defunc_0_f_res_41256;
    ((__local int64_t *) mem_44640)[gtid_40307] = defunc_0_f_res_41257;
    ((__local int64_t *) mem_44642)[gtid_40307] = defunc_0_f_res_41258;
    ((__local int32_t *) mem_44644)[gtid_40307] = defunc_0_f_res_41253;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_46171;
    
    dims_flat_46171 = iota32_arg_31257;
    
    int64_t x_41222;
    int64_t x_41223;
    int64_t x_41224;
    int64_t x_41225;
    int64_t x_41226;
    int64_t x_41227;
    int64_t x_41228;
    int64_t x_41229;
    int64_t x_46176;
    int64_t x_46177;
    int64_t x_46178;
    int64_t x_46179;
    int64_t x_46180;
    int64_t x_46181;
    int64_t x_46182;
    int64_t x_46183;
    bool ltid_in_bounds_46188;
    
    ltid_in_bounds_46188 = slt64(sext_i32_i64(local_tid_46166),
                                 iota32_arg_31257);
    
    int32_t skip_threads_46189;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_46188) {
            x_41226 = ((volatile __local
                        int64_t *) mem_44636)[sext_i32_i64(local_tid_46166)];
            x_41227 = ((volatile __local
                        int64_t *) mem_44638)[sext_i32_i64(local_tid_46166)];
            x_41228 = ((volatile __local
                        int64_t *) mem_44640)[sext_i32_i64(local_tid_46166)];
            x_41229 = ((volatile __local
                        int64_t *) mem_44642)[sext_i32_i64(local_tid_46166)];
            if ((local_tid_46166 - squot32(local_tid_46166, 32) * 32) == 0) {
                x_41222 = x_41226;
                x_41223 = x_41227;
                x_41224 = x_41228;
                x_41225 = x_41229;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_46189 = 1;
        while (slt32(skip_threads_46189, 32)) {
            if (sle32(skip_threads_46189, local_tid_46166 -
                      squot32(local_tid_46166, 32) * 32) &&
                ltid_in_bounds_46188) {
                // read operands
                {
                    x_41222 = ((volatile __local
                                int64_t *) mem_44636)[sext_i32_i64(local_tid_46166) -
                                                      sext_i32_i64(skip_threads_46189)];
                    x_41223 = ((volatile __local
                                int64_t *) mem_44638)[sext_i32_i64(local_tid_46166) -
                                                      sext_i32_i64(skip_threads_46189)];
                    x_41224 = ((volatile __local
                                int64_t *) mem_44640)[sext_i32_i64(local_tid_46166) -
                                                      sext_i32_i64(skip_threads_46189)];
                    x_41225 = ((volatile __local
                                int64_t *) mem_44642)[sext_i32_i64(local_tid_46166) -
                                                      sext_i32_i64(skip_threads_46189)];
                }
                // perform operation
                {
                    bool inactive_46190 =
                         slt64(srem64(sext_i32_i64(local_tid_46166),
                                      iota32_arg_31257),
                               sext_i32_i64(local_tid_46166) -
                               sext_i32_i64(local_tid_46166 -
                               skip_threads_46189));
                    
                    if (inactive_46190) {
                        x_41222 = x_41226;
                        x_41223 = x_41227;
                        x_41224 = x_41228;
                        x_41225 = x_41229;
                    }
                    if (!inactive_46190) {
                        int64_t defunc_1_op_res_41230 = add64(x_41222, x_41226);
                        int64_t defunc_1_op_res_41231 = add64(x_41223, x_41227);
                        int64_t defunc_1_op_res_41232 = add64(x_41224, x_41228);
                        int64_t defunc_1_op_res_41233 = add64(x_41225, x_41229);
                        
                        x_41222 = defunc_1_op_res_41230;
                        x_41223 = defunc_1_op_res_41231;
                        x_41224 = defunc_1_op_res_41232;
                        x_41225 = defunc_1_op_res_41233;
                    }
                }
            }
            if (sle32(wave_sizze_46168, skip_threads_46189)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_46189, local_tid_46166 -
                      squot32(local_tid_46166, 32) * 32) &&
                ltid_in_bounds_46188) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_44636)[sext_i32_i64(local_tid_46166)] =
                        x_41222;
                    x_41226 = x_41222;
                    ((volatile __local
                      int64_t *) mem_44638)[sext_i32_i64(local_tid_46166)] =
                        x_41223;
                    x_41227 = x_41223;
                    ((volatile __local
                      int64_t *) mem_44640)[sext_i32_i64(local_tid_46166)] =
                        x_41224;
                    x_41228 = x_41224;
                    ((volatile __local
                      int64_t *) mem_44642)[sext_i32_i64(local_tid_46166)] =
                        x_41225;
                    x_41229 = x_41225;
                }
            }
            if (sle32(wave_sizze_46168, skip_threads_46189)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_46189 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_46166 - squot32(local_tid_46166, 32) * 32) == 31 &&
            ltid_in_bounds_46188) {
            ((volatile __local
              int64_t *) mem_44636)[sext_i32_i64(squot32(local_tid_46166,
                                                         32))] = x_41222;
            ((volatile __local
              int64_t *) mem_44638)[sext_i32_i64(squot32(local_tid_46166,
                                                         32))] = x_41223;
            ((volatile __local
              int64_t *) mem_44640)[sext_i32_i64(squot32(local_tid_46166,
                                                         32))] = x_41224;
            ((volatile __local
              int64_t *) mem_44642)[sext_i32_i64(squot32(local_tid_46166,
                                                         32))] = x_41225;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_46191;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_46166, 32) == 0 && ltid_in_bounds_46188) {
                x_46180 = ((volatile __local
                            int64_t *) mem_44636)[sext_i32_i64(local_tid_46166)];
                x_46181 = ((volatile __local
                            int64_t *) mem_44638)[sext_i32_i64(local_tid_46166)];
                x_46182 = ((volatile __local
                            int64_t *) mem_44640)[sext_i32_i64(local_tid_46166)];
                x_46183 = ((volatile __local
                            int64_t *) mem_44642)[sext_i32_i64(local_tid_46166)];
                if ((local_tid_46166 - squot32(local_tid_46166, 32) * 32) ==
                    0) {
                    x_46176 = x_46180;
                    x_46177 = x_46181;
                    x_46178 = x_46182;
                    x_46179 = x_46183;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_46191 = 1;
            while (slt32(skip_threads_46191, 32)) {
                if (sle32(skip_threads_46191, local_tid_46166 -
                          squot32(local_tid_46166, 32) * 32) &&
                    (squot32(local_tid_46166, 32) == 0 &&
                     ltid_in_bounds_46188)) {
                    // read operands
                    {
                        x_46176 = ((volatile __local
                                    int64_t *) mem_44636)[sext_i32_i64(local_tid_46166) -
                                                          sext_i32_i64(skip_threads_46191)];
                        x_46177 = ((volatile __local
                                    int64_t *) mem_44638)[sext_i32_i64(local_tid_46166) -
                                                          sext_i32_i64(skip_threads_46191)];
                        x_46178 = ((volatile __local
                                    int64_t *) mem_44640)[sext_i32_i64(local_tid_46166) -
                                                          sext_i32_i64(skip_threads_46191)];
                        x_46179 = ((volatile __local
                                    int64_t *) mem_44642)[sext_i32_i64(local_tid_46166) -
                                                          sext_i32_i64(skip_threads_46191)];
                    }
                    // perform operation
                    {
                        bool inactive_46192 =
                             slt64(srem64(sext_i32_i64(local_tid_46166 * 32 +
                                          32 - 1), iota32_arg_31257),
                                   sext_i32_i64(local_tid_46166 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_46166 -
                                                 skip_threads_46191) * 32 + 32 -
                                   1));
                        
                        if (inactive_46192) {
                            x_46176 = x_46180;
                            x_46177 = x_46181;
                            x_46178 = x_46182;
                            x_46179 = x_46183;
                        }
                        if (!inactive_46192) {
                            int64_t defunc_1_op_res_46184 = add64(x_46176,
                                                                  x_46180);
                            int64_t defunc_1_op_res_46185 = add64(x_46177,
                                                                  x_46181);
                            int64_t defunc_1_op_res_46186 = add64(x_46178,
                                                                  x_46182);
                            int64_t defunc_1_op_res_46187 = add64(x_46179,
                                                                  x_46183);
                            
                            x_46176 = defunc_1_op_res_46184;
                            x_46177 = defunc_1_op_res_46185;
                            x_46178 = defunc_1_op_res_46186;
                            x_46179 = defunc_1_op_res_46187;
                        }
                    }
                }
                if (sle32(wave_sizze_46168, skip_threads_46191)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_46191, local_tid_46166 -
                          squot32(local_tid_46166, 32) * 32) &&
                    (squot32(local_tid_46166, 32) == 0 &&
                     ltid_in_bounds_46188)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_44636)[sext_i32_i64(local_tid_46166)] =
                            x_46176;
                        x_46180 = x_46176;
                        ((volatile __local
                          int64_t *) mem_44638)[sext_i32_i64(local_tid_46166)] =
                            x_46177;
                        x_46181 = x_46177;
                        ((volatile __local
                          int64_t *) mem_44640)[sext_i32_i64(local_tid_46166)] =
                            x_46178;
                        x_46182 = x_46178;
                        ((volatile __local
                          int64_t *) mem_44642)[sext_i32_i64(local_tid_46166)] =
                            x_46179;
                        x_46183 = x_46179;
                    }
                }
                if (sle32(wave_sizze_46168, skip_threads_46191)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_46191 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_46166, 32) == 0 || !ltid_in_bounds_46188)) {
            // read operands
            {
                x_41226 = x_41222;
                x_41227 = x_41223;
                x_41228 = x_41224;
                x_41229 = x_41225;
                x_41222 = ((__local
                            int64_t *) mem_44636)[sext_i32_i64(squot32(local_tid_46166,
                                                                       32)) -
                                                  1];
                x_41223 = ((__local
                            int64_t *) mem_44638)[sext_i32_i64(squot32(local_tid_46166,
                                                                       32)) -
                                                  1];
                x_41224 = ((__local
                            int64_t *) mem_44640)[sext_i32_i64(squot32(local_tid_46166,
                                                                       32)) -
                                                  1];
                x_41225 = ((__local
                            int64_t *) mem_44642)[sext_i32_i64(squot32(local_tid_46166,
                                                                       32)) -
                                                  1];
            }
            // perform operation
            {
                bool inactive_46193 =
                     slt64(srem64(sext_i32_i64(local_tid_46166),
                                  iota32_arg_31257),
                           sext_i32_i64(local_tid_46166) -
                           sext_i32_i64(squot32(local_tid_46166, 32) * 32 - 1));
                
                if (inactive_46193) {
                    x_41222 = x_41226;
                    x_41223 = x_41227;
                    x_41224 = x_41228;
                    x_41225 = x_41229;
                }
                if (!inactive_46193) {
                    int64_t defunc_1_op_res_41230 = add64(x_41222, x_41226);
                    int64_t defunc_1_op_res_41231 = add64(x_41223, x_41227);
                    int64_t defunc_1_op_res_41232 = add64(x_41224, x_41228);
                    int64_t defunc_1_op_res_41233 = add64(x_41225, x_41229);
                    
                    x_41222 = defunc_1_op_res_41230;
                    x_41223 = defunc_1_op_res_41231;
                    x_41224 = defunc_1_op_res_41232;
                    x_41225 = defunc_1_op_res_41233;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_44636)[sext_i32_i64(local_tid_46166)] =
                    x_41222;
                ((__local int64_t *) mem_44638)[sext_i32_i64(local_tid_46166)] =
                    x_41223;
                ((__local int64_t *) mem_44640)[sext_i32_i64(local_tid_46166)] =
                    x_41224;
                ((__local int64_t *) mem_44642)[sext_i32_i64(local_tid_46166)] =
                    x_41225;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_46166, 32) == 0) {
            ((__local int64_t *) mem_44636)[sext_i32_i64(local_tid_46166)] =
                x_41226;
            ((__local int64_t *) mem_44638)[sext_i32_i64(local_tid_46166)] =
                x_41227;
            ((__local int64_t *) mem_44640)[sext_i32_i64(local_tid_46166)] =
                x_41228;
            ((__local int64_t *) mem_44642)[sext_i32_i64(local_tid_46166)] =
                x_41229;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_41267 = ((__local int64_t *) mem_44636)[i_31290];
    int64_t last_res_41268 = ((__local int64_t *) mem_44638)[i_31290];
    int64_t last_res_41269 = ((__local int64_t *) mem_44640)[i_31290];
    __local char *mem_44646;
    
    mem_44646 = (__local char *) mem_44646_backing_5;
    ((__local float *) mem_44646)[sext_i32_i64(local_tid_46166)] = ((__global
                                                                     float *) mem_44632)[gtid_40304 +
                                                                                         sext_i32_i64(local_tid_46166) *
                                                                                         m_30871];
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_40309 = sext_i32_i64(ltid_pre_46170);
    int32_t phys_tid_40310 = local_tid_46166;
    int32_t x_41272 = ((__local int32_t *) mem_44644)[write_i_40309];
    float write_value_41277 = ((__global float *) mem_param_44627)[gtid_40304 *
                                                                   iota32_arg_31257 +
                                                                   write_i_40309];
    bool match_lit_41278 = 0 == x_41272;
    int64_t defunc_1_f_res_41279;
    
    if (match_lit_41278) {
        int64_t x_41273 = ((__local int64_t *) mem_44636)[write_i_40309];
        int64_t case_res_41280 = sub64(x_41273, 1);
        
        defunc_1_f_res_41279 = case_res_41280;
    } else {
        int64_t x_41274 = ((__local int64_t *) mem_44638)[write_i_40309];
        int64_t x_41275 = ((__local int64_t *) mem_44640)[write_i_40309];
        int64_t x_41276 = ((__local int64_t *) mem_44642)[write_i_40309];
        bool match_lit_41281 = 1 == x_41272;
        int64_t x_41282;
        
        if (match_lit_41281) {
            int64_t x_41283 = add64(last_res_41267, x_41274);
            int64_t case_res_41284 = sub64(x_41283, 1);
            
            x_41282 = case_res_41284;
        } else {
            bool match_lit_41285 = 2 == x_41272;
            int64_t x_41286;
            
            if (match_lit_41285) {
                int64_t x_41287 = add64(last_res_41267, last_res_41268);
                int64_t x_41288 = add64(x_41275, x_41287);
                int64_t case_res_41289 = sub64(x_41288, 1);
                
                x_41286 = case_res_41289;
            } else {
                int64_t x_41290 = add64(last_res_41267, last_res_41268);
                int64_t x_41291 = add64(last_res_41269, x_41290);
                int64_t x_41292 = add64(x_41276, x_41291);
                int64_t defunc_1_f_res_res_41293 = sub64(x_41292, 1);
                
                x_41286 = defunc_1_f_res_res_41293;
            }
            x_41282 = x_41286;
        }
        defunc_1_f_res_41279 = x_41282;
    }
    if (sle64(0, defunc_1_f_res_41279) && slt64(defunc_1_f_res_41279,
                                                iota32_arg_31257)) {
        ((__local float *) mem_44646)[defunc_1_f_res_41279] = write_value_41277;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global float *) mem_44650)[gtid_40304 * iota32_arg_31257 +
                                   sext_i32_i64(local_tid_46166)] = ((__local
                                                                      float *) mem_44646)[sext_i32_i64(local_tid_46166)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainzisegmap_intragroup_41641(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43631_backing_aligned_0,
                                            int64_t m_30871, int32_t n_30875,
                                            int64_t i32_res_30890,
                                            int64_t Ty_41629, int64_t Tx_41630,
                                            int64_t gridDim_x_41631,
                                            int64_t gridDim_y_41632,
                                            int64_t group_sizze_41636,
                                            int64_t count_shmem_41637, __global
                                            unsigned char *mem_43544, __global
                                            unsigned char *mem_43548, __global
                                            unsigned char *mem_43619, __global
                                            unsigned char *mem_43679)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43631_backing_0 = (__local volatile
                                                           char *) mem_43631_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45031;
    int32_t local_tid_45032;
    int64_t group_sizze_45035;
    int32_t wave_sizze_45034;
    int32_t group_tid_45033;
    
    global_tid_45031 = get_global_id(0);
    local_tid_45032 = get_local_id(0);
    group_sizze_45035 = get_local_size(0);
    wave_sizze_45034 = LOCKSTEP_WIDTH;
    group_tid_45033 = get_group_id(0);
    
    int32_t gid_flat_41641;
    
    gid_flat_41641 = group_tid_45033;
    
    int32_t ltid_pre_45036;
    
    ltid_pre_45036 = squot32(local_tid_45032, sext_i64_i32(Ty_41629) *
                             sext_i64_i32(Tx_41630));
    
    int32_t ltid_pre_45037;
    
    ltid_pre_45037 = squot32(local_tid_45032 - squot32(local_tid_45032,
                                                       sext_i64_i32(Ty_41629) *
                                                       sext_i64_i32(Tx_41630)) *
                             (sext_i64_i32(Ty_41629) * sext_i64_i32(Tx_41630)),
                             sext_i64_i32(Tx_41630));
    
    int32_t ltid_pre_45038;
    
    ltid_pre_45038 = local_tid_45032 - squot32(local_tid_45032,
                                               sext_i64_i32(Ty_41629) *
                                               sext_i64_i32(Tx_41630)) *
        (sext_i64_i32(Ty_41629) * sext_i64_i32(Tx_41630)) -
        squot32(local_tid_45032 - squot32(local_tid_45032,
                                          sext_i64_i32(Ty_41629) *
                                          sext_i64_i32(Tx_41630)) *
                (sext_i64_i32(Ty_41629) * sext_i64_i32(Tx_41630)),
                sext_i64_i32(Tx_41630)) * sext_i64_i32(Tx_41630);
    
    int32_t ltid_pre_45039;
    
    ltid_pre_45039 = squot32(local_tid_45032, sext_i64_i32(Tx_41630));
    
    int32_t ltid_pre_45040;
    
    ltid_pre_45040 = local_tid_45032 - squot32(local_tid_45032,
                                               sext_i64_i32(Tx_41630)) *
        sext_i64_i32(Tx_41630);
    
    int32_t ltid_pre_45041;
    
    ltid_pre_45041 = local_tid_45032;
    
    int64_t gid_zz_41640;
    
    gid_zz_41640 = squot64(sext_i32_i64(group_tid_45033), gridDim_y_41632 *
                           gridDim_x_41631);
    
    int64_t gid_y_41639;
    
    gid_y_41639 = squot64(sext_i32_i64(group_tid_45033) -
                          squot64(sext_i32_i64(group_tid_45033),
                                  gridDim_y_41632 * gridDim_x_41631) *
                          (gridDim_y_41632 * gridDim_x_41631), gridDim_x_41631);
    
    int64_t gid_x_41638;
    
    gid_x_41638 = sext_i32_i64(group_tid_45033) -
        squot64(sext_i32_i64(group_tid_45033), gridDim_y_41632 *
                gridDim_x_41631) * (gridDim_y_41632 * gridDim_x_41631) -
        squot64(sext_i32_i64(group_tid_45033) -
                squot64(sext_i32_i64(group_tid_45033), gridDim_y_41632 *
                        gridDim_x_41631) * (gridDim_y_41632 * gridDim_x_41631),
                gridDim_x_41631) * gridDim_x_41631;
    
    int64_t ii_41642;
    
    ii_41642 = 30 * gid_zz_41640;
    
    int64_t jj1_41643 = Ty_41629 * gid_y_41639;
    int64_t jj2_41644 = Tx_41630 * gid_x_41638;
    float mem_43629[30];
    int64_t ltid_y_41647 = sext_i32_i64(ltid_pre_45039);
    int64_t ltid_x_41645 = sext_i32_i64(ltid_pre_45040);
    int32_t ltid_flat_41646 = local_tid_45032;
    float mem_43623[30];
    
    for (int32_t i_43384 = 0; i_43384 < 30; i_43384++) {
        int64_t i_41655 = sext_i32_i64(i_43384);
        
        mem_43623[i_41655] = 0.0F;
    }
    for (int64_t i_45043 = 0; i_45043 < 30; i_45043++) {
        mem_43629[i_45043] = mem_43623[i_45043];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43631;
    
    mem_43631 = (__local char *) mem_43631_backing_0;
    
    float loop_mem_43661[30];
    float mem_param_43632[30];
    
    for (int32_t i_1 = 0; i_1 < 30; i_1++)
        mem_param_43632[i_1] = mem_43629[i_1];
    for (int32_t i_43386 = 0; i_43386 < n_30875; i_43386++) {
        int64_t i_41660 = sext_i32_i64(i_43386);
        
        for (int64_t i_41663 = 0; i_41663 < count_shmem_41637; i_41663++) {
            int64_t offs_41676 = group_sizze_41636 * i_41663;
            int64_t ltid_41666 = sext_i32_i64(ltid_pre_45041);
            int32_t ltid_flat_41665 = local_tid_45032;
            int64_t loc_ind_41677 = ltid_41666 + offs_41676;
            int64_t gtid_41678 = ii_41642 + loc_ind_41677;
            bool cond_41679 = slt64(gtid_41678, m_30871);
            float y_elem_41680;
            
            if (cond_41679) {
                float Y_elem_41682 = ((__global float *) mem_43619)[i_41660 *
                                                                    m_30871 +
                                                                    gtid_41678];
                
                y_elem_41680 = Y_elem_41682;
            } else {
                y_elem_41680 = 0.0F;
            }
            
            bool cond_41684 = slt64(loc_ind_41677, 30);
            int64_t y_loc_ind_41685;
            
            if (cond_41684) {
                y_loc_ind_41685 = loc_ind_41677;
            } else {
                y_loc_ind_41685 = -1;
            }
            if (sle64(0, y_loc_ind_41685) && slt64(y_loc_ind_41685, 30)) {
                ((__local float *) mem_43631)[y_loc_ind_41685] = y_elem_41680;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
        
        float mem_43660[30];
        int64_t ltid_y_41691 = sext_i32_i64(ltid_pre_45039);
        int64_t ltid_x_41689 = sext_i32_i64(ltid_pre_45040);
        int32_t ltid_flat_41690 = local_tid_45032;
        int64_t gtid_41718 = jj1_41643 + ltid_y_41691;
        int64_t gtid_41719 = jj2_41644 + ltid_x_41689;
        bool binop_x_41721 = slt64(gtid_41718, i32_res_30890);
        bool binop_y_41722 = slt64(gtid_41719, i32_res_30890);
        bool cond_41723 = binop_x_41721 && binop_y_41722;
        float mem_44761[30];
        
        if (cond_41723) {
            float x_41726 = ((__global float *) mem_43544)[i_41660 *
                                                           i32_res_30890 +
                                                           gtid_41718];
            float x_41728 = ((__global float *) mem_43548)[i_41660 *
                                                           i32_res_30890 +
                                                           gtid_41719];
            
            for (int32_t i_43385 = 0; i_43385 < 30; i_43385++) {
                int64_t i_41730 = sext_i32_i64(i_43385);
                int64_t gtid_41732 = ii_41642 + i_41730;
                bool cond_41733 = slt64(gtid_41732, m_30871);
                
                if (cond_41733) {
                    float inp_reg_var2zz_41735 = ((__local
                                                   float *) mem_43631)[i_41730];
                    float res_reg_var2zz_41736 = mem_param_43632[i_41730];
                    float x_41740 = x_41726 * x_41728;
                    bool isnan_res_41741;
                    
                    isnan_res_41741 = futrts_isnan32(inp_reg_var2zz_41735);
                    
                    float y_41742;
                    
                    if (isnan_res_41741) {
                        y_41742 = 0.0F;
                    } else {
                        y_41742 = 1.0F;
                    }
                    
                    float defunc_2_f_res_41743 = x_41740 * y_41742;
                    float defunc_1_op_res_41747 = res_reg_var2zz_41736 +
                          defunc_2_f_res_41743;
                    
                    mem_param_43632[i_41730] = defunc_1_op_res_41747;
                }
            }
            for (int64_t i_45049 = 0; i_45049 < 30; i_45049++) {
                mem_44761[i_45049] = mem_param_43632[i_45049];
            }
        } else {
            for (int64_t i_45050 = 0; i_45050 < 30; i_45050++) {
                mem_44761[i_45050] = mem_param_43632[i_45050];
            }
        }
        for (int64_t i_45051 = 0; i_45051 < 30; i_45051++) {
            mem_43660[i_45051] = mem_44761[i_45051];
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45044[30];
        
        for (int32_t i_2 = 0; i_2 < 30; i_2++)
            mem_param_tmp_45044[i_2] = mem_43660[i_2];
        for (int32_t i_3 = 0; i_3 < 30; i_3++)
            mem_param_43632[i_3] = mem_param_tmp_45044[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 30; i_4++)
        loop_mem_43661[i_4] = mem_param_43632[i_4];
    
    float mem_43675[30 * 1 * 1];
    int64_t ltid_zz_41756 = sext_i32_i64(ltid_pre_45036);
    int64_t ltid_y_41755 = sext_i32_i64(ltid_pre_45037);
    int64_t ltid_x_41753 = sext_i32_i64(ltid_pre_45038);
    int32_t ltid_flat_41754 = local_tid_45032;
    float mem_43669[30 * 1 * 1];
    
    for (int32_t i_43388 = 0; i_43388 < 30; i_43388++) {
        int64_t i_41765 = sext_i32_i64(i_43388);
        
        for (int64_t i_45053 = 0; i_45053 < 1; i_45053++) {
            mem_43669[i_41765 + i_45053] = loop_mem_43661[i_41765 + i_45053];
        }
    }
    for (int64_t i_45054 = 0; i_45054 < 30; i_45054++) {
        for (int64_t i_45055 = 0; i_45055 < 1; i_45055++) {
            for (int64_t i_45056 = 0; i_45056 < 1; i_45056++) {
                mem_43675[i_45054 + i_45055 + i_45056] = mem_43669[i_45054 +
                                                                   i_45055 +
                                                                   i_45056];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t reg_tile_i_45057 = squot64(sext_i32_i64(local_tid_45032), Ty_41629 *
                                       Tx_41630);
    int64_t reg_tile_i_45058 = squot64(sext_i32_i64(local_tid_45032) -
                                       squot64(sext_i32_i64(local_tid_45032),
                                               Ty_41629 * Tx_41630) *
                                       (Ty_41629 * Tx_41630), Tx_41630);
    int64_t reg_tile_i_45059 = sext_i32_i64(local_tid_45032) -
            squot64(sext_i32_i64(local_tid_45032), Ty_41629 * Tx_41630) *
            (Ty_41629 * Tx_41630) - squot64(sext_i32_i64(local_tid_45032) -
                                            squot64(sext_i32_i64(local_tid_45032),
                                                    Ty_41629 * Tx_41630) *
                                            (Ty_41629 * Tx_41630), Tx_41630) *
            Tx_41630;
    int64_t tile_dim_start_45060 = 30 * (gid_zz_41640 + reg_tile_i_45057);
    int64_t tile_dim_start_45061 = Ty_41629 * gid_y_41639 + reg_tile_i_45058;
    int64_t tile_dim_start_45062 = Tx_41630 * gid_x_41638 + reg_tile_i_45059;
    
    for (int64_t nest_i_45063 = 0; nest_i_45063 < 30; nest_i_45063++) {
        for (int64_t nest_i_45064 = 0; nest_i_45064 < 1; nest_i_45064++) {
            for (int64_t nest_i_45065 = 0; nest_i_45065 < 1; nest_i_45065++) {
                if ((slt64(tile_dim_start_45060 + nest_i_45063, m_30871) &&
                     slt64(tile_dim_start_45061 + nest_i_45064,
                           i32_res_30890)) && slt64(tile_dim_start_45062 +
                                                    nest_i_45065,
                                                    i32_res_30890)) {
                    ((__global float *) mem_43679)[(tile_dim_start_45060 +
                                                    nest_i_45063) *
                                                   (i32_res_30890 *
                                                    i32_res_30890) +
                                                   (tile_dim_start_45061 +
                                                    nest_i_45064) *
                                                   i32_res_30890 +
                                                   (tile_dim_start_45062 +
                                                    nest_i_45065)] =
                        mem_43675[nest_i_45063 + nest_i_45064 + nest_i_45065];
                }
            }
        }
    }
    
  error_4:
    return;
}
__kernel void mainzisegmap_intragroup_41794(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43822_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43820_backing_aligned_1,
                                            int64_t m_30871, int64_t N_30872,
                                            int64_t i32_res_30884,
                                            int64_t i32_res_30890,
                                            int64_t gridDim_x_41788,
                                            int64_t full_tiles_41819,
                                            int64_t kk_42026, __global
                                            unsigned char *images_mem_43532,
                                            __global unsigned char *mem_43544,
                                            __global unsigned char *mem_43994)
{
    #define Ty_41775 (mainziTy_41772)
    #define Ry_41776 (mainziRy_41774)
    #define Tx_41777 (mainziTx_41771)
    #define Rx_41778 (mainziRx_41773)
    #define Tk_41779 (mainziTk_41770)
    #define tk_div_tx_41780 (sdiv_up64(mainziTk_41770, mainziTx_41771))
    #define tk_div_ty_41781 (sdiv_up64(mainziTk_41770, mainziTy_41772))
    #define TxRx_41782 (mainziTx_41771 * mainziRx_41773)
    #define TyRy_41783 (mainziTy_41772 * mainziRy_41774)
    #define a_loc_szz_41785 (mainziTk_41770 * (mainziTy_41772 * mainziRy_41774))
    #define b_loc_szz_41787 (mainziRx_41773 * (mainziTx_41771 * mainziTk_41770))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43822_backing_1 = (__local volatile
                                                           char *) mem_43822_backing_aligned_0;
    __local volatile char *restrict mem_43820_backing_0 = (__local volatile
                                                           char *) mem_43820_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45207;
    int32_t local_tid_45208;
    int64_t group_sizze_45211;
    int32_t wave_sizze_45210;
    int32_t group_tid_45209;
    
    global_tid_45207 = get_global_id(0);
    local_tid_45208 = get_local_id(0);
    group_sizze_45211 = get_local_size(0);
    wave_sizze_45210 = LOCKSTEP_WIDTH;
    group_tid_45209 = get_group_id(0);
    
    int32_t gid_flat_41794;
    
    gid_flat_41794 = group_tid_45209;
    
    int32_t ltid_pre_45212;
    
    ltid_pre_45212 = squot32(local_tid_45208, sext_i64_i32(Tx_41777));
    
    int32_t ltid_pre_45213;
    
    ltid_pre_45213 = local_tid_45208 - squot32(local_tid_45208,
                                               sext_i64_i32(Tx_41777)) *
        sext_i64_i32(Tx_41777);
    
    int64_t gid_y_41793;
    
    gid_y_41793 = squot64(sext_i32_i64(group_tid_45209), gridDim_x_41788);
    
    int64_t gid_x_41792;
    
    gid_x_41792 = sext_i32_i64(group_tid_45209) -
        squot64(sext_i32_i64(group_tid_45209), gridDim_x_41788) *
        gridDim_x_41788;
    
    int64_t iii_41795;
    
    iii_41795 = TyRy_41783 * gid_y_41793;
    
    int64_t jjj_41796 = TxRx_41782 * gid_x_41792;
    float mem_43818[Ry_41776 * Rx_41778];
    int64_t ltid_y_41799 = sext_i32_i64(ltid_pre_45212);
    int64_t ltid_x_41797 = sext_i32_i64(ltid_pre_45213);
    int32_t ltid_flat_41798 = local_tid_45208;
    float mem_43809[Ry_41776 * Rx_41778];
    
    for (int64_t i_41810 = 0; i_41810 < Ry_41776; i_41810++) {
        for (int64_t i_41813 = 0; i_41813 < Rx_41778; i_41813++) {
            mem_43809[i_41810 * Rx_41778 + i_41813] = 0.0F;
        }
    }
    for (int64_t i_45216 = 0; i_45216 < Ry_41776; i_45216++) {
        for (int64_t i_45217 = 0; i_45217 < Rx_41778; i_45217++) {
            mem_43818[i_45216 * Rx_41778 + i_45217] = mem_43809[i_45216 *
                                                                Rx_41778 +
                                                                i_45217];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43820;
    
    mem_43820 = (__local char *) mem_43820_backing_0;
    
    __local char *mem_43822;
    
    mem_43822 = (__local char *) mem_43822_backing_1;
    
    float mem_43893[Ry_41776];
    float mem_43897[Rx_41778];
    float loop_mem_43909[Ry_41776 * Rx_41778];
    float mem_param_43823[Ry_41776 * Rx_41778];
    
    for (int32_t i_2 = 0; i_2 < Ry_41776 * Rx_41778; i_2++)
        mem_param_43823[i_2] = mem_43818[i_2];
    for (int64_t i_41820 = 0; i_41820 < full_tiles_41819; i_41820++) {
        int64_t kk_41824 = Tk_41779 * i_41820;
        
        for (int64_t i_41825 = 0; i_41825 < Ry_41776; i_41825++) {
            int64_t binop_y_41848 = Ty_41775 * i_41825;
            
            for (int64_t i_41827 = 0; i_41827 < tk_div_tx_41780; i_41827++) {
                int64_t binop_y_41846 = Tx_41777 * i_41827;
                int64_t ltid_x_41829 = sext_i32_i64(ltid_pre_45212);
                int64_t ltid_y_41830 = sext_i32_i64(ltid_pre_45213);
                int32_t ltid_flat_41831 = local_tid_45208;
                int64_t k_41847 = ltid_y_41830 + binop_y_41846;
                int64_t i_41849 = ltid_x_41829 + binop_y_41848;
                int64_t gtid_41850 = iii_41795 + i_41849;
                int64_t A_col_idx_41851 = kk_41824 + k_41847;
                bool cond_41852 = slt64(gtid_41850, m_30871);
                float A_elem_41853;
                
                if (cond_41852) {
                    float A_elem_41855 = ((__global
                                           float *) images_mem_43532)[gtid_41850 *
                                                                      N_30872 +
                                                                      A_col_idx_41851];
                    
                    A_elem_41853 = A_elem_41855;
                } else {
                    A_elem_41853 = 0.0F;
                }
                
                bool cond_41857 = slt64(k_41847, Tk_41779);
                int64_t a_loc_ind_41858;
                
                if (cond_41857) {
                    int64_t binop_y_41859 = Tk_41779 * i_41849;
                    int64_t loc_fi_41860 = k_41847 + binop_y_41859;
                    
                    a_loc_ind_41858 = loc_fi_41860;
                } else {
                    a_loc_ind_41858 = -1;
                }
                if (sle64(0, a_loc_ind_41858) && slt64(a_loc_ind_41858,
                                                       a_loc_szz_41785)) {
                    ((__local float *) mem_43820)[a_loc_ind_41858] =
                        A_elem_41853;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_41865 = 0; i_41865 < tk_div_ty_41781; i_41865++) {
            int64_t binop_y_41886 = Ty_41775 * i_41865;
            
            for (int64_t i_41867 = 0; i_41867 < Rx_41778; i_41867++) {
                int64_t binop_y_41888 = Tx_41777 * i_41867;
                int64_t ltid_x_41869 = sext_i32_i64(ltid_pre_45212);
                int64_t ltid_y_41870 = sext_i32_i64(ltid_pre_45213);
                int32_t ltid_flat_41871 = local_tid_45208;
                int64_t k_41887 = ltid_x_41869 + binop_y_41886;
                int64_t j_41889 = ltid_y_41870 + binop_y_41888;
                int64_t gtid_41890 = jjj_41796 + j_41889;
                int64_t B_row_idx_41891 = kk_41824 + k_41887;
                bool cond_41892 = slt64(gtid_41890, i32_res_30890);
                float B_elem_41893;
                
                if (cond_41892) {
                    float B_elem_41895 = ((__global
                                           float *) mem_43544)[B_row_idx_41891 *
                                                               i32_res_30890 +
                                                               gtid_41890];
                    
                    B_elem_41893 = B_elem_41895;
                } else {
                    B_elem_41893 = 0.0F;
                }
                
                bool cond_41897 = slt64(k_41887, Tk_41779);
                int64_t b_loc_ind_41898;
                
                if (cond_41897) {
                    int64_t binop_y_41899 = TxRx_41782 * k_41887;
                    int64_t loc_fi_41900 = j_41889 + binop_y_41899;
                    
                    b_loc_ind_41898 = loc_fi_41900;
                } else {
                    b_loc_ind_41898 = -1;
                }
                if (sle64(0, b_loc_ind_41898) && slt64(b_loc_ind_41898,
                                                       b_loc_szz_41787)) {
                    ((__local float *) mem_43822)[b_loc_ind_41898] =
                        B_elem_41893;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_43908[Ry_41776 * Rx_41778];
        float mem_param_43880[Ry_41776 * Rx_41778];
        
        for (int32_t i_3 = 0; i_3 < Ry_41776 * Rx_41778; i_3++)
            mem_param_43880[i_3] = mem_param_43823[i_3];
        for (int64_t i_41905 = 0; i_41905 < Tk_41779; i_41905++) {
            int64_t binop_y_41944 = TxRx_41782 * i_41905;
            int64_t ltid_y_41909 = sext_i32_i64(ltid_pre_45212);
            int64_t ltid_x_41907 = sext_i32_i64(ltid_pre_45213);
            int32_t ltid_flat_41908 = local_tid_45208;
            float mem_43883[Ry_41776];
            float mem_43885[Rx_41778];
            int64_t binop_x_41935 = Ry_41776 * ltid_y_41909;
            
            for (int64_t i_41933 = 0; i_41933 < Ry_41776; i_41933++) {
                int64_t binop_x_41936 = i_41933 + binop_x_41935;
                int64_t binop_y_41937 = Tk_41779 * binop_x_41936;
                int64_t a_loc_ind_41938 = i_41905 + binop_y_41937;
                
                for (int64_t i_45229 = 0; i_45229 < 1; i_45229++) {
                    mem_43883[i_41933 + i_45229] = ((__local
                                                     float *) mem_43820)[a_loc_ind_41938 +
                                                                         i_45229];
                }
            }
            
            int64_t binop_y_41946 = Rx_41778 * ltid_x_41907;
            
            for (int64_t i_41942 = 0; i_41942 < Rx_41778; i_41942++) {
                int64_t binop_x_41945 = i_41942 + binop_y_41944;
                int64_t b_loc_ind_41947 = binop_x_41945 + binop_y_41946;
                
                for (int64_t i_45231 = 0; i_45231 < 1; i_45231++) {
                    mem_43885[i_41942 + i_45231] = ((__local
                                                     float *) mem_43822)[b_loc_ind_41947 +
                                                                         i_45231];
                }
            }
            for (int64_t i_45232 = 0; i_45232 < Ry_41776; i_45232++) {
                mem_43893[i_45232] = mem_43883[i_45232];
            }
            for (int64_t i_45233 = 0; i_45233 < Rx_41778; i_45233++) {
                mem_43897[i_45233] = mem_43885[i_45233];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_43907[Ry_41776 * Rx_41778];
            int64_t ltid_y_41954 = sext_i32_i64(ltid_pre_45212);
            int64_t ltid_x_41952 = sext_i32_i64(ltid_pre_45213);
            int32_t ltid_flat_41953 = local_tid_45208;
            int64_t binop_y_41997 = Ry_41776 * ltid_y_41954;
            int64_t binop_y_42001 = Rx_41778 * ltid_x_41952;
            
            for (int64_t i_41991 = 0; i_41991 < Ry_41776; i_41991++) {
                int64_t binop_x_41996 = iii_41795 + i_41991;
                int64_t cmpop_x_41998 = binop_x_41996 + binop_y_41997;
                bool binop_x_41999 = slt64(cmpop_x_41998, m_30871);
                
                for (int64_t i_41994 = 0; i_41994 < Rx_41778; i_41994++) {
                    int64_t binop_x_42000 = jjj_41796 + i_41994;
                    int64_t cmpop_x_42002 = binop_x_42000 + binop_y_42001;
                    bool binop_y_42003 = slt64(cmpop_x_42002, i32_res_30890);
                    bool cond_42004 = binop_x_41999 && binop_y_42003;
                    
                    if (cond_42004) {
                        float a_42006 = mem_43893[i_41991];
                        float c_42008 = mem_param_43880[i_41991 * Rx_41778 +
                                                        i_41994];
                        bool isnan_res_42011;
                        
                        isnan_res_42011 = futrts_isnan32(a_42006);
                        
                        float defunc_1_f_res_42012;
                        
                        if (isnan_res_42011) {
                            defunc_1_f_res_42012 = 0.0F;
                        } else {
                            float b_42007 = mem_43897[i_41994];
                            float defunc_1_f_res_f_res_42013 = a_42006 *
                                  b_42007;
                            
                            defunc_1_f_res_42012 = defunc_1_f_res_f_res_42013;
                        }
                        
                        float defunc_1_op_res_42017 = c_42008 +
                              defunc_1_f_res_42012;
                        
                        mem_param_43880[i_41991 * Rx_41778 + i_41994] =
                            defunc_1_op_res_42017;
                    }
                }
            }
            for (int64_t i_45236 = 0; i_45236 < Ry_41776; i_45236++) {
                for (int64_t i_45237 = 0; i_45237 < Rx_41778; i_45237++) {
                    mem_43907[i_45236 * Rx_41778 + i_45237] =
                        mem_param_43880[i_45236 * Rx_41778 + i_45237];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_45226[Ry_41776 * Rx_41778];
            
            for (int32_t i_4 = 0; i_4 < Ry_41776 * Rx_41778; i_4++)
                mem_param_tmp_45226[i_4] = mem_43907[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_41776 * Rx_41778; i_5++)
                mem_param_43880[i_5] = mem_param_tmp_45226[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_41776 * Rx_41778; i_6++)
            loop_mem_43908[i_6] = mem_param_43880[i_6];
        
        float mem_param_tmp_45218[Ry_41776 * Rx_41778];
        
        for (int32_t i_7 = 0; i_7 < Ry_41776 * Rx_41778; i_7++)
            mem_param_tmp_45218[i_7] = loop_mem_43908[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_41776 * Rx_41778; i_8++)
            mem_param_43823[i_8] = mem_param_tmp_45218[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_41776 * Rx_41778; i_9++)
        loop_mem_43909[i_9] = mem_param_43823[i_9];
    for (int64_t i_42027 = 0; i_42027 < Ry_41776; i_42027++) {
        int64_t binop_y_42052 = Ty_41775 * i_42027;
        
        for (int64_t i_42029 = 0; i_42029 < tk_div_tx_41780; i_42029++) {
            int64_t binop_y_42050 = Tx_41777 * i_42029;
            int64_t ltid_x_42031 = sext_i32_i64(ltid_pre_45212);
            int64_t ltid_y_42032 = sext_i32_i64(ltid_pre_45213);
            int32_t ltid_flat_42033 = local_tid_45208;
            int64_t k_42051 = ltid_y_42032 + binop_y_42050;
            int64_t i_42053 = ltid_x_42031 + binop_y_42052;
            int64_t gtid_42054 = iii_41795 + i_42053;
            int64_t A_col_idx_42055 = kk_42026 + k_42051;
            bool binop_x_42056 = slt64(gtid_42054, m_30871);
            bool binop_y_42057 = slt64(A_col_idx_42055, i32_res_30884);
            bool cond_42058 = binop_x_42056 && binop_y_42057;
            float A_elem_42059;
            
            if (cond_42058) {
                float A_elem_42061 = ((__global
                                       float *) images_mem_43532)[gtid_42054 *
                                                                  N_30872 +
                                                                  A_col_idx_42055];
                
                A_elem_42059 = A_elem_42061;
            } else {
                A_elem_42059 = 0.0F;
            }
            
            bool cond_42063 = slt64(k_42051, Tk_41779);
            int64_t a_loc_ind_42064;
            
            if (cond_42063) {
                int64_t binop_y_42065 = Tk_41779 * i_42053;
                int64_t loc_fi_42066 = k_42051 + binop_y_42065;
                
                a_loc_ind_42064 = loc_fi_42066;
            } else {
                a_loc_ind_42064 = -1;
            }
            if (sle64(0, a_loc_ind_42064) && slt64(a_loc_ind_42064,
                                                   a_loc_szz_41785)) {
                ((__local float *) mem_43820)[a_loc_ind_42064] = A_elem_42059;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_42071 = 0; i_42071 < tk_div_ty_41781; i_42071++) {
        int64_t binop_y_42094 = Ty_41775 * i_42071;
        
        for (int64_t i_42073 = 0; i_42073 < Rx_41778; i_42073++) {
            int64_t binop_y_42096 = Tx_41777 * i_42073;
            int64_t ltid_x_42075 = sext_i32_i64(ltid_pre_45212);
            int64_t ltid_y_42076 = sext_i32_i64(ltid_pre_45213);
            int32_t ltid_flat_42077 = local_tid_45208;
            int64_t k_42095 = ltid_x_42075 + binop_y_42094;
            int64_t j_42097 = ltid_y_42076 + binop_y_42096;
            int64_t gtid_42098 = jjj_41796 + j_42097;
            int64_t B_row_idx_42099 = kk_42026 + k_42095;
            bool binop_x_42100 = slt64(gtid_42098, i32_res_30890);
            bool binop_y_42101 = slt64(B_row_idx_42099, i32_res_30884);
            bool cond_42102 = binop_x_42100 && binop_y_42101;
            float B_elem_42103;
            
            if (cond_42102) {
                float B_elem_42105 = ((__global
                                       float *) mem_43544)[B_row_idx_42099 *
                                                           i32_res_30890 +
                                                           gtid_42098];
                
                B_elem_42103 = B_elem_42105;
            } else {
                B_elem_42103 = 0.0F;
            }
            
            bool cond_42107 = slt64(k_42095, Tk_41779);
            int64_t b_loc_ind_42108;
            
            if (cond_42107) {
                int64_t binop_y_42109 = TxRx_41782 * k_42095;
                int64_t loc_fi_42110 = j_42097 + binop_y_42109;
                
                b_loc_ind_42108 = loc_fi_42110;
            } else {
                b_loc_ind_42108 = -1;
            }
            if (sle64(0, b_loc_ind_42108) && slt64(b_loc_ind_42108,
                                                   b_loc_szz_41787)) {
                ((__local float *) mem_43822)[b_loc_ind_42108] = B_elem_42103;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_43975[Ry_41776];
    float mem_43979[Rx_41778];
    float mem_43989[Ry_41776 * Rx_41778];
    float loop_mem_43991[Ry_41776 * Rx_41778];
    float mem_param_43962[Ry_41776 * Rx_41778];
    
    for (int32_t i_10 = 0; i_10 < Ry_41776 * Rx_41778; i_10++)
        mem_param_43962[i_10] = loop_mem_43909[i_10];
    for (int64_t i_42115 = 0; i_42115 < Tk_41779; i_42115++) {
        int64_t cmpop_x_42117 = kk_42026 + i_42115;
        bool cond_42118 = slt64(cmpop_x_42117, i32_res_30884);
        float mem_44779[Ry_41776 * Rx_41778];
        
        if (cond_42118) {
            int64_t binop_y_42156 = TxRx_41782 * i_42115;
            int64_t bytes_43964 = 4 * Ry_41776;
            int64_t bytes_43966 = 4 * Rx_41778;
            int64_t ltid_y_42121 = sext_i32_i64(ltid_pre_45212);
            int64_t ltid_x_42119 = sext_i32_i64(ltid_pre_45213);
            int32_t ltid_flat_42120 = local_tid_45208;
            float mem_43965[Ry_41776];
            float mem_43967[Rx_41778];
            int64_t binop_x_42147 = Ry_41776 * ltid_y_42121;
            
            for (int64_t i_42145 = 0; i_42145 < Ry_41776; i_42145++) {
                int64_t binop_x_42148 = i_42145 + binop_x_42147;
                int64_t binop_y_42149 = Tk_41779 * binop_x_42148;
                int64_t a_loc_ind_42150 = i_42115 + binop_y_42149;
                
                for (int64_t i_45245 = 0; i_45245 < 1; i_45245++) {
                    mem_43965[i_42145 + i_45245] = ((__local
                                                     float *) mem_43820)[a_loc_ind_42150 +
                                                                         i_45245];
                }
            }
            
            int64_t binop_y_42158 = Rx_41778 * ltid_x_42119;
            
            for (int64_t i_42154 = 0; i_42154 < Rx_41778; i_42154++) {
                int64_t binop_x_42157 = i_42154 + binop_y_42156;
                int64_t b_loc_ind_42159 = binop_x_42157 + binop_y_42158;
                
                for (int64_t i_45247 = 0; i_45247 < 1; i_45247++) {
                    mem_43967[i_42154 + i_45247] = ((__local
                                                     float *) mem_43822)[b_loc_ind_42159 +
                                                                         i_45247];
                }
            }
            for (int64_t i_45248 = 0; i_45248 < Ry_41776; i_45248++) {
                mem_43975[i_45248] = mem_43965[i_45248];
            }
            for (int64_t i_45249 = 0; i_45249 < Rx_41778; i_45249++) {
                mem_43979[i_45249] = mem_43967[i_45249];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_42166 = sext_i32_i64(ltid_pre_45212);
            int64_t ltid_x_42164 = sext_i32_i64(ltid_pre_45213);
            int32_t ltid_flat_42165 = local_tid_45208;
            int64_t binop_y_42209 = Ry_41776 * ltid_y_42166;
            int64_t binop_y_42213 = Rx_41778 * ltid_x_42164;
            
            for (int64_t i_42203 = 0; i_42203 < Ry_41776; i_42203++) {
                int64_t binop_x_42208 = iii_41795 + i_42203;
                int64_t cmpop_x_42210 = binop_x_42208 + binop_y_42209;
                bool binop_x_42211 = slt64(cmpop_x_42210, m_30871);
                
                for (int64_t i_42206 = 0; i_42206 < Rx_41778; i_42206++) {
                    int64_t binop_x_42212 = jjj_41796 + i_42206;
                    int64_t cmpop_x_42214 = binop_x_42212 + binop_y_42213;
                    bool binop_y_42215 = slt64(cmpop_x_42214, i32_res_30890);
                    bool cond_42216 = binop_x_42211 && binop_y_42215;
                    
                    if (cond_42216) {
                        float a_42218 = mem_43975[i_42203];
                        float c_42220 = mem_param_43962[i_42203 * Rx_41778 +
                                                        i_42206];
                        bool isnan_res_42223;
                        
                        isnan_res_42223 = futrts_isnan32(a_42218);
                        
                        float defunc_1_f_res_42224;
                        
                        if (isnan_res_42223) {
                            defunc_1_f_res_42224 = 0.0F;
                        } else {
                            float b_42219 = mem_43979[i_42206];
                            float defunc_1_f_res_f_res_42225 = a_42218 *
                                  b_42219;
                            
                            defunc_1_f_res_42224 = defunc_1_f_res_f_res_42225;
                        }
                        
                        float defunc_1_op_res_42229 = c_42220 +
                              defunc_1_f_res_42224;
                        
                        mem_param_43962[i_42203 * Rx_41778 + i_42206] =
                            defunc_1_op_res_42229;
                    }
                }
            }
            for (int64_t i_45252 = 0; i_45252 < Ry_41776; i_45252++) {
                for (int64_t i_45253 = 0; i_45253 < Rx_41778; i_45253++) {
                    mem_43989[i_45252 * Rx_41778 + i_45253] =
                        mem_param_43962[i_45252 * Rx_41778 + i_45253];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_45254 = 0; i_45254 < Ry_41776; i_45254++) {
                for (int64_t i_45255 = 0; i_45255 < Rx_41778; i_45255++) {
                    mem_44779[i_45254 * Rx_41778 + i_45255] =
                        mem_43989[i_45254 * Rx_41778 + i_45255];
                }
            }
        } else {
            for (int64_t i_45256 = 0; i_45256 < Ry_41776; i_45256++) {
                for (int64_t i_45257 = 0; i_45257 < Rx_41778; i_45257++) {
                    mem_44779[i_45256 * Rx_41778 + i_45257] =
                        mem_param_43962[i_45256 * Rx_41778 + i_45257];
                }
            }
        }
        
        float mem_param_tmp_45242[Ry_41776 * Rx_41778];
        
        for (int32_t i_11 = 0; i_11 < Ry_41776 * Rx_41778; i_11++)
            mem_param_tmp_45242[i_11] = mem_44779[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_41776 * Rx_41778; i_12++)
            mem_param_43962[i_12] = mem_param_tmp_45242[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_41776 * Rx_41778; i_13++)
        loop_mem_43991[i_13] = mem_param_43962[i_13];
    
    int64_t reg_tile_i_45258 = squot64(sext_i32_i64(local_tid_45208), Tx_41777);
    int64_t reg_tile_i_45259 = sext_i32_i64(local_tid_45208) -
            squot64(sext_i32_i64(local_tid_45208), Tx_41777) * Tx_41777;
    int64_t tile_dim_start_45260 = Ry_41776 * (Ty_41775 * gid_y_41793 +
                                               reg_tile_i_45258);
    int64_t tile_dim_start_45261 = Rx_41778 * (Tx_41777 * gid_x_41792 +
                                               reg_tile_i_45259);
    
    for (int64_t nest_i_45262 = 0; nest_i_45262 < Ry_41776; nest_i_45262++) {
        for (int64_t nest_i_45263 = 0; nest_i_45263 < Rx_41778;
             nest_i_45263++) {
            if (slt64(tile_dim_start_45260 + nest_i_45262, m_30871) &&
                slt64(tile_dim_start_45261 + nest_i_45263, i32_res_30890)) {
                ((__global float *) mem_43994)[(tile_dim_start_45260 +
                                                nest_i_45262) * i32_res_30890 +
                                               (tile_dim_start_45261 +
                                                nest_i_45263)] =
                    loop_mem_43991[nest_i_45262 * Rx_41778 + nest_i_45263];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_41775
    #undef Ry_41776
    #undef Tx_41777
    #undef Rx_41778
    #undef Tk_41779
    #undef tk_div_tx_41780
    #undef tk_div_ty_41781
    #undef TxRx_41782
    #undef TyRy_41783
    #undef a_loc_szz_41785
    #undef b_loc_szz_41787
}
__kernel void mainzisegmap_intragroup_42243(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_44052_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_44043_backing_aligned_1,
                                            int64_t m_30871,
                                            int64_t i32_res_30890,
                                            int64_t num_groups_y_42241,
                                            int64_t num_whole_tiles_42259,
                                            int64_t residual_input_42386,
                                            unsigned char cond_42387, __global
                                            unsigned char *defunc_3_map_res_mem_44004,
                                            __global unsigned char *mem_44033,
                                            __global unsigned char *mem_44060)
{
    #define tile_sizze_42238 (mainzitile_sizze_42237)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44052_backing_5 = (__local volatile
                                                           char *) mem_44052_backing_aligned_0;
    __local volatile char *restrict mem_44043_backing_0 = (__local volatile
                                                           char *) mem_44043_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45339;
    int32_t local_tid_45340;
    int64_t group_sizze_45343;
    int32_t wave_sizze_45342;
    int32_t group_tid_45341;
    
    global_tid_45339 = get_global_id(0);
    local_tid_45340 = get_local_id(0);
    group_sizze_45343 = get_local_size(0);
    wave_sizze_45342 = LOCKSTEP_WIDTH;
    group_tid_45341 = get_group_id(0);
    
    int32_t gid_flat_42243;
    
    gid_flat_42243 = group_tid_45341;
    
    int32_t ltid_pre_45344;
    
    ltid_pre_45344 = squot32(local_tid_45340, sext_i64_i32(tile_sizze_42238));
    
    int32_t ltid_pre_45345;
    
    ltid_pre_45345 = local_tid_45340 - squot32(local_tid_45340,
                                               sext_i64_i32(tile_sizze_42238)) *
        sext_i64_i32(tile_sizze_42238);
    
    int64_t gid_x_42235;
    
    gid_x_42235 = squot64(sext_i32_i64(group_tid_45341), num_groups_y_42241);
    
    int64_t gid_y_42236;
    
    gid_y_42236 = sext_i32_i64(group_tid_45341) -
        squot64(sext_i32_i64(group_tid_45341), num_groups_y_42241) *
        num_groups_y_42241;
    
    float mem_44038[1];
    int64_t ltid_x_42260 = sext_i32_i64(ltid_pre_45344);
    int64_t ltid_y_42261 = sext_i32_i64(ltid_pre_45345);
    int32_t ltid_flat_42262 = local_tid_45340;
    
    if (slt64(ltid_x_42260, tile_sizze_42238) && slt64(ltid_y_42261,
                                                       tile_sizze_42238)) {
        mem_44038[0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_42345 = gid_x_42235 * tile_sizze_42238;
    int64_t binop_x_42360 = gid_y_42236 * tile_sizze_42238;
    __local char *mem_44043;
    
    mem_44043 = (__local char *) mem_44043_backing_0;
    
    float accs_mem_44048[1];
    float mem_param_44039[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_44039[i_1] = mem_44038[i_1];
    for (int64_t tile_id_42271 = 0; tile_id_42271 < num_whole_tiles_42259;
         tile_id_42271++) {
        int64_t binop_x_42343 = tile_sizze_42238 * tile_id_42271;
        int64_t ltid_x_42272 = sext_i32_i64(ltid_pre_45344);
        int64_t ltid_y_42273 = sext_i32_i64(ltid_pre_45345);
        int32_t ltid_flat_42274 = local_tid_45340;
        int64_t j_42344 = ltid_y_42273 + binop_x_42343;
        int64_t gtid_42346 = ltid_x_42272 + binop_x_42345;
        bool binop_x_42351 = slt64(j_42344, i32_res_30890);
        bool binop_y_42352 = slt64(gtid_42346, m_30871);
        bool cond_42353 = binop_x_42351 && binop_y_42352;
        float pre_42354;
        
        if (cond_42353) {
            float x_42355 = ((__global
                              float *) defunc_3_map_res_mem_44004)[gtid_42346 *
                                                                   i32_res_30890 +
                                                                   j_42344];
            
            pre_42354 = x_42355;
        } else {
            pre_42354 = 0.0F;
        }
        ((__local float *) mem_44043)[ltid_x_42272 * tile_sizze_42238 +
                                      ltid_y_42273] = pre_42354;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_44047[1];
        int64_t ltid_x_42304 = sext_i32_i64(ltid_pre_45344);
        int64_t ltid_y_42305 = sext_i32_i64(ltid_pre_45345);
        int32_t ltid_flat_42306 = local_tid_45340;
        int64_t gtid_42359 = ltid_x_42304 + binop_x_42345;
        int64_t gtid_42361 = ltid_y_42305 + binop_x_42360;
        float acc_42364 = mem_param_44039[0];
        bool binop_x_42368 = slt64(gtid_42359, m_30871);
        bool binop_y_42369 = slt64(gtid_42361, i32_res_30890);
        bool cond_42370 = binop_x_42368 && binop_y_42369;
        float acc_42371;
        
        if (cond_42370) {
            float x_42372;
            float redout_43431 = acc_42364;
            
            for (int64_t i_43432 = 0; i_43432 < tile_sizze_42238; i_43432++) {
                float x_42376 = ((__local float *) mem_44043)[ltid_x_42304 *
                                                              tile_sizze_42238 +
                                                              i_43432];
                int64_t slice_43516 = binop_x_42343 + i_43432;
                float x_42377 = ((__global float *) mem_44033)[slice_43516 *
                                                               (i32_res_30890 *
                                                                m_30871) +
                                                               gtid_42359 *
                                                               i32_res_30890 +
                                                               gtid_42361];
                float defunc_1_f_res_42378 = x_42376 * x_42377;
                float defunc_1_op_res_42375 = defunc_1_f_res_42378 +
                      redout_43431;
                float redout_tmp_45348 = defunc_1_op_res_42375;
                
                redout_43431 = redout_tmp_45348;
            }
            x_42372 = redout_43431;
            acc_42371 = x_42372;
        } else {
            acc_42371 = acc_42364;
        }
        mem_44047[0] = acc_42371;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45346[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_45346[i_2] = mem_44047[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_44039[i_3] = mem_param_tmp_45346[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_44048[i_4] = mem_param_44039[i_4];
    
    __local char *mem_44052;
    
    mem_44052 = (__local char *) mem_44052_backing_5;
    
    float mem_44056[1];
    float mem_44793[1];
    
    if (cond_42387) {
        mem_44793[0] = accs_mem_44048[0];
    } else {
        int64_t binop_x_42460 = tile_sizze_42238 * num_whole_tiles_42259;
        int64_t ltid_x_42388 = sext_i32_i64(ltid_pre_45344);
        int64_t ltid_y_42389 = sext_i32_i64(ltid_pre_45345);
        int32_t ltid_flat_42390 = local_tid_45340;
        int64_t j_42461 = ltid_y_42389 + binop_x_42460;
        int64_t gtid_42463 = binop_x_42345 + ltid_x_42388;
        bool binop_x_42468 = slt64(j_42461, i32_res_30890);
        bool binop_y_42469 = slt64(gtid_42463, m_30871);
        bool cond_42470 = binop_x_42468 && binop_y_42469;
        float pre_42471;
        
        if (cond_42470) {
            float x_42472 = ((__global
                              float *) defunc_3_map_res_mem_44004)[gtid_42463 *
                                                                   i32_res_30890 +
                                                                   j_42461];
            
            pre_42471 = x_42472;
        } else {
            pre_42471 = 0.0F;
        }
        ((__local float *) mem_44052)[ltid_x_42388 * tile_sizze_42238 +
                                      ltid_y_42389] = pre_42471;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_x_42421 = sext_i32_i64(ltid_pre_45344);
        int64_t ltid_y_42422 = sext_i32_i64(ltid_pre_45345);
        int32_t ltid_flat_42423 = local_tid_45340;
        int64_t gtid_42477 = binop_x_42345 + ltid_x_42421;
        int64_t gtid_42479 = binop_x_42360 + ltid_y_42422;
        float acc_42482 = accs_mem_44048[0];
        bool binop_x_42486 = slt64(gtid_42477, m_30871);
        bool binop_y_42487 = slt64(gtid_42479, i32_res_30890);
        bool cond_42488 = binop_x_42486 && binop_y_42487;
        float acc_42489;
        
        if (cond_42488) {
            float x_42490;
            float redout_43433 = acc_42482;
            
            for (int64_t i_43434 = 0; i_43434 < residual_input_42386;
                 i_43434++) {
                float x_42494 = ((__local float *) mem_44052)[ltid_x_42421 *
                                                              tile_sizze_42238 +
                                                              i_43434];
                int64_t slice_43517 = binop_x_42460 + i_43434;
                float x_42495 = ((__global float *) mem_44033)[slice_43517 *
                                                               (i32_res_30890 *
                                                                m_30871) +
                                                               gtid_42477 *
                                                               i32_res_30890 +
                                                               gtid_42479];
                float defunc_1_f_res_42496 = x_42494 * x_42495;
                float defunc_1_op_res_42493 = defunc_1_f_res_42496 +
                      redout_43433;
                float redout_tmp_45349 = defunc_1_op_res_42493;
                
                redout_43433 = redout_tmp_45349;
            }
            x_42490 = redout_43433;
            acc_42489 = x_42490;
        } else {
            acc_42489 = acc_42482;
        }
        mem_44056[0] = acc_42489;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44793[0] = mem_44056[0];
    }
    
    int64_t thread_out_index_45350 = gid_x_42235 * tile_sizze_42238 +
            sext_i32_i64(ltid_pre_45344);
    int64_t thread_out_index_45351 = gid_y_42236 * tile_sizze_42238 +
            sext_i32_i64(ltid_pre_45345);
    
    if (slt64(thread_out_index_45350, m_30871) && slt64(thread_out_index_45351,
                                                        i32_res_30890)) {
        ((__global float *) mem_44060)[thread_out_index_45350 * i32_res_30890 +
                                       thread_out_index_45351] = mem_44793[0];
    }
    
  error_5:
    return;
    #undef tile_sizze_42238
}
__kernel void mainzisegmap_intragroup_42535(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_44112_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_44110_backing_aligned_1,
                                            int64_t N_30870, int64_t m_30871,
                                            int64_t i32_res_30890,
                                            int64_t gridDim_x_42529,
                                            int64_t full_tiles_42560,
                                            int64_t kk_42763, __global
                                            unsigned char *defunc_4_map_res_mem_44070,
                                            __global unsigned char *mem_44094,
                                            __global unsigned char *mem_44284)
{
    #define Ty_42516 (mainziTy_42513)
    #define Ry_42517 (mainziRy_42515)
    #define Tx_42518 (mainziTx_42512)
    #define Rx_42519 (mainziRx_42514)
    #define Tk_42520 (mainziTk_42511)
    #define tk_div_tx_42521 (sdiv_up64(mainziTk_42511, mainziTx_42512))
    #define tk_div_ty_42522 (sdiv_up64(mainziTk_42511, mainziTy_42513))
    #define TxRx_42523 (mainziTx_42512 * mainziRx_42514)
    #define TyRy_42524 (mainziTy_42513 * mainziRy_42515)
    #define a_loc_szz_42526 (mainziTk_42511 * (mainziTy_42513 * mainziRy_42515))
    #define b_loc_szz_42528 (mainziRx_42514 * (mainziTx_42512 * mainziTk_42511))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44112_backing_1 = (__local volatile
                                                           char *) mem_44112_backing_aligned_0;
    __local volatile char *restrict mem_44110_backing_0 = (__local volatile
                                                           char *) mem_44110_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45427;
    int32_t local_tid_45428;
    int64_t group_sizze_45431;
    int32_t wave_sizze_45430;
    int32_t group_tid_45429;
    
    global_tid_45427 = get_global_id(0);
    local_tid_45428 = get_local_id(0);
    group_sizze_45431 = get_local_size(0);
    wave_sizze_45430 = LOCKSTEP_WIDTH;
    group_tid_45429 = get_group_id(0);
    
    int32_t gid_flat_42535;
    
    gid_flat_42535 = group_tid_45429;
    
    int32_t ltid_pre_45432;
    
    ltid_pre_45432 = squot32(local_tid_45428, sext_i64_i32(Tx_42518));
    
    int32_t ltid_pre_45433;
    
    ltid_pre_45433 = local_tid_45428 - squot32(local_tid_45428,
                                               sext_i64_i32(Tx_42518)) *
        sext_i64_i32(Tx_42518);
    
    int64_t gid_y_42534;
    
    gid_y_42534 = squot64(sext_i32_i64(group_tid_45429), gridDim_x_42529);
    
    int64_t gid_x_42533;
    
    gid_x_42533 = sext_i32_i64(group_tid_45429) -
        squot64(sext_i32_i64(group_tid_45429), gridDim_x_42529) *
        gridDim_x_42529;
    
    int64_t iii_42536;
    
    iii_42536 = TyRy_42524 * gid_y_42534;
    
    int64_t jjj_42537 = TxRx_42523 * gid_x_42533;
    float mem_44108[Ry_42517 * Rx_42519];
    int64_t ltid_y_42540 = sext_i32_i64(ltid_pre_45432);
    int64_t ltid_x_42538 = sext_i32_i64(ltid_pre_45433);
    int32_t ltid_flat_42539 = local_tid_45428;
    float mem_44099[Ry_42517 * Rx_42519];
    
    for (int64_t i_42551 = 0; i_42551 < Ry_42517; i_42551++) {
        for (int64_t i_42554 = 0; i_42554 < Rx_42519; i_42554++) {
            mem_44099[i_42551 * Rx_42519 + i_42554] = 0.0F;
        }
    }
    for (int64_t i_45436 = 0; i_45436 < Ry_42517; i_45436++) {
        for (int64_t i_45437 = 0; i_45437 < Rx_42519; i_45437++) {
            mem_44108[i_45436 * Rx_42519 + i_45437] = mem_44099[i_45436 *
                                                                Rx_42519 +
                                                                i_45437];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44110;
    
    mem_44110 = (__local char *) mem_44110_backing_0;
    
    __local char *mem_44112;
    
    mem_44112 = (__local char *) mem_44112_backing_1;
    
    float mem_44183[Ry_42517];
    float mem_44187[Rx_42519];
    float loop_mem_44199[Ry_42517 * Rx_42519];
    float mem_param_44113[Ry_42517 * Rx_42519];
    
    for (int32_t i_2 = 0; i_2 < Ry_42517 * Rx_42519; i_2++)
        mem_param_44113[i_2] = mem_44108[i_2];
    for (int64_t i_42561 = 0; i_42561 < full_tiles_42560; i_42561++) {
        int64_t kk_42565 = Tk_42520 * i_42561;
        
        for (int64_t i_42566 = 0; i_42566 < Ry_42517; i_42566++) {
            int64_t binop_y_42589 = Ty_42516 * i_42566;
            
            for (int64_t i_42568 = 0; i_42568 < tk_div_tx_42521; i_42568++) {
                int64_t binop_y_42587 = Tx_42518 * i_42568;
                int64_t ltid_x_42570 = sext_i32_i64(ltid_pre_45432);
                int64_t ltid_y_42571 = sext_i32_i64(ltid_pre_45433);
                int32_t ltid_flat_42572 = local_tid_45428;
                int64_t k_42588 = ltid_y_42571 + binop_y_42587;
                int64_t i_42590 = ltid_x_42570 + binop_y_42589;
                int64_t gtid_42591 = iii_42536 + i_42590;
                int64_t A_col_idx_42592 = kk_42565 + k_42588;
                bool cond_42593 = slt64(gtid_42591, m_30871);
                float A_elem_42594;
                
                if (cond_42593) {
                    float A_elem_42596 = ((__global
                                           float *) defunc_4_map_res_mem_44070)[gtid_42591 *
                                                                                i32_res_30890 +
                                                                                A_col_idx_42592];
                    
                    A_elem_42594 = A_elem_42596;
                } else {
                    A_elem_42594 = 0.0F;
                }
                
                bool cond_42598 = slt64(k_42588, Tk_42520);
                int64_t a_loc_ind_42599;
                
                if (cond_42598) {
                    int64_t binop_y_42600 = Tk_42520 * i_42590;
                    int64_t loc_fi_42601 = k_42588 + binop_y_42600;
                    
                    a_loc_ind_42599 = loc_fi_42601;
                } else {
                    a_loc_ind_42599 = -1;
                }
                if (sle64(0, a_loc_ind_42599) && slt64(a_loc_ind_42599,
                                                       a_loc_szz_42526)) {
                    ((__local float *) mem_44110)[a_loc_ind_42599] =
                        A_elem_42594;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_42606 = 0; i_42606 < tk_div_ty_42522; i_42606++) {
            int64_t binop_y_42627 = Ty_42516 * i_42606;
            
            for (int64_t i_42608 = 0; i_42608 < Rx_42519; i_42608++) {
                int64_t binop_y_42629 = Tx_42518 * i_42608;
                int64_t ltid_x_42610 = sext_i32_i64(ltid_pre_45432);
                int64_t ltid_y_42611 = sext_i32_i64(ltid_pre_45433);
                int32_t ltid_flat_42612 = local_tid_45428;
                int64_t k_42628 = ltid_x_42610 + binop_y_42627;
                int64_t j_42630 = ltid_y_42611 + binop_y_42629;
                int64_t gtid_42631 = jjj_42537 + j_42630;
                int64_t B_row_idx_42632 = kk_42565 + k_42628;
                bool cond_42633 = slt64(gtid_42631, N_30870);
                float B_elem_42634;
                
                if (cond_42633) {
                    float B_elem_42636 = ((__global
                                           float *) mem_44094)[B_row_idx_42632 *
                                                               N_30870 +
                                                               gtid_42631];
                    
                    B_elem_42634 = B_elem_42636;
                } else {
                    B_elem_42634 = 0.0F;
                }
                
                bool cond_42638 = slt64(k_42628, Tk_42520);
                int64_t b_loc_ind_42639;
                
                if (cond_42638) {
                    int64_t binop_y_42640 = TxRx_42523 * k_42628;
                    int64_t loc_fi_42641 = j_42630 + binop_y_42640;
                    
                    b_loc_ind_42639 = loc_fi_42641;
                } else {
                    b_loc_ind_42639 = -1;
                }
                if (sle64(0, b_loc_ind_42639) && slt64(b_loc_ind_42639,
                                                       b_loc_szz_42528)) {
                    ((__local float *) mem_44112)[b_loc_ind_42639] =
                        B_elem_42634;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_44198[Ry_42517 * Rx_42519];
        float mem_param_44170[Ry_42517 * Rx_42519];
        
        for (int32_t i_3 = 0; i_3 < Ry_42517 * Rx_42519; i_3++)
            mem_param_44170[i_3] = mem_param_44113[i_3];
        for (int64_t i_42646 = 0; i_42646 < Tk_42520; i_42646++) {
            int64_t binop_y_42685 = TxRx_42523 * i_42646;
            int64_t ltid_y_42650 = sext_i32_i64(ltid_pre_45432);
            int64_t ltid_x_42648 = sext_i32_i64(ltid_pre_45433);
            int32_t ltid_flat_42649 = local_tid_45428;
            float mem_44173[Ry_42517];
            float mem_44175[Rx_42519];
            int64_t binop_x_42676 = Ry_42517 * ltid_y_42650;
            
            for (int64_t i_42674 = 0; i_42674 < Ry_42517; i_42674++) {
                int64_t binop_x_42677 = i_42674 + binop_x_42676;
                int64_t binop_y_42678 = Tk_42520 * binop_x_42677;
                int64_t a_loc_ind_42679 = i_42646 + binop_y_42678;
                
                for (int64_t i_45449 = 0; i_45449 < 1; i_45449++) {
                    mem_44173[i_42674 + i_45449] = ((__local
                                                     float *) mem_44110)[a_loc_ind_42679 +
                                                                         i_45449];
                }
            }
            
            int64_t binop_y_42687 = Rx_42519 * ltid_x_42648;
            
            for (int64_t i_42683 = 0; i_42683 < Rx_42519; i_42683++) {
                int64_t binop_x_42686 = i_42683 + binop_y_42685;
                int64_t b_loc_ind_42688 = binop_x_42686 + binop_y_42687;
                
                for (int64_t i_45451 = 0; i_45451 < 1; i_45451++) {
                    mem_44175[i_42683 + i_45451] = ((__local
                                                     float *) mem_44112)[b_loc_ind_42688 +
                                                                         i_45451];
                }
            }
            for (int64_t i_45452 = 0; i_45452 < Ry_42517; i_45452++) {
                mem_44183[i_45452] = mem_44173[i_45452];
            }
            for (int64_t i_45453 = 0; i_45453 < Rx_42519; i_45453++) {
                mem_44187[i_45453] = mem_44175[i_45453];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_44197[Ry_42517 * Rx_42519];
            int64_t ltid_y_42695 = sext_i32_i64(ltid_pre_45432);
            int64_t ltid_x_42693 = sext_i32_i64(ltid_pre_45433);
            int32_t ltid_flat_42694 = local_tid_45428;
            int64_t binop_y_42736 = Ry_42517 * ltid_y_42695;
            int64_t binop_y_42740 = Rx_42519 * ltid_x_42693;
            
            for (int64_t i_42730 = 0; i_42730 < Ry_42517; i_42730++) {
                int64_t binop_x_42735 = iii_42536 + i_42730;
                int64_t cmpop_x_42737 = binop_x_42735 + binop_y_42736;
                bool binop_x_42738 = slt64(cmpop_x_42737, m_30871);
                
                for (int64_t i_42733 = 0; i_42733 < Rx_42519; i_42733++) {
                    int64_t binop_x_42739 = jjj_42537 + i_42733;
                    int64_t cmpop_x_42741 = binop_x_42739 + binop_y_42740;
                    bool binop_y_42742 = slt64(cmpop_x_42741, N_30870);
                    bool cond_42743 = binop_x_42738 && binop_y_42742;
                    
                    if (cond_42743) {
                        float a_42745 = mem_44183[i_42730];
                        float b_42746 = mem_44187[i_42733];
                        float c_42747 = mem_param_44170[i_42730 * Rx_42519 +
                                                        i_42733];
                        float defunc_1_f_res_42750 = a_42745 * b_42746;
                        float defunc_1_op_res_42754 = c_42747 +
                              defunc_1_f_res_42750;
                        
                        mem_param_44170[i_42730 * Rx_42519 + i_42733] =
                            defunc_1_op_res_42754;
                    }
                }
            }
            for (int64_t i_45456 = 0; i_45456 < Ry_42517; i_45456++) {
                for (int64_t i_45457 = 0; i_45457 < Rx_42519; i_45457++) {
                    mem_44197[i_45456 * Rx_42519 + i_45457] =
                        mem_param_44170[i_45456 * Rx_42519 + i_45457];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_45446[Ry_42517 * Rx_42519];
            
            for (int32_t i_4 = 0; i_4 < Ry_42517 * Rx_42519; i_4++)
                mem_param_tmp_45446[i_4] = mem_44197[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_42517 * Rx_42519; i_5++)
                mem_param_44170[i_5] = mem_param_tmp_45446[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_42517 * Rx_42519; i_6++)
            loop_mem_44198[i_6] = mem_param_44170[i_6];
        
        float mem_param_tmp_45438[Ry_42517 * Rx_42519];
        
        for (int32_t i_7 = 0; i_7 < Ry_42517 * Rx_42519; i_7++)
            mem_param_tmp_45438[i_7] = loop_mem_44198[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_42517 * Rx_42519; i_8++)
            mem_param_44113[i_8] = mem_param_tmp_45438[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_42517 * Rx_42519; i_9++)
        loop_mem_44199[i_9] = mem_param_44113[i_9];
    for (int64_t i_42764 = 0; i_42764 < Ry_42517; i_42764++) {
        int64_t binop_y_42789 = Ty_42516 * i_42764;
        
        for (int64_t i_42766 = 0; i_42766 < tk_div_tx_42521; i_42766++) {
            int64_t binop_y_42787 = Tx_42518 * i_42766;
            int64_t ltid_x_42768 = sext_i32_i64(ltid_pre_45432);
            int64_t ltid_y_42769 = sext_i32_i64(ltid_pre_45433);
            int32_t ltid_flat_42770 = local_tid_45428;
            int64_t k_42788 = ltid_y_42769 + binop_y_42787;
            int64_t i_42790 = ltid_x_42768 + binop_y_42789;
            int64_t gtid_42791 = iii_42536 + i_42790;
            int64_t A_col_idx_42792 = kk_42763 + k_42788;
            bool binop_x_42793 = slt64(gtid_42791, m_30871);
            bool binop_y_42794 = slt64(A_col_idx_42792, i32_res_30890);
            bool cond_42795 = binop_x_42793 && binop_y_42794;
            float A_elem_42796;
            
            if (cond_42795) {
                float A_elem_42798 = ((__global
                                       float *) defunc_4_map_res_mem_44070)[gtid_42791 *
                                                                            i32_res_30890 +
                                                                            A_col_idx_42792];
                
                A_elem_42796 = A_elem_42798;
            } else {
                A_elem_42796 = 0.0F;
            }
            
            bool cond_42800 = slt64(k_42788, Tk_42520);
            int64_t a_loc_ind_42801;
            
            if (cond_42800) {
                int64_t binop_y_42802 = Tk_42520 * i_42790;
                int64_t loc_fi_42803 = k_42788 + binop_y_42802;
                
                a_loc_ind_42801 = loc_fi_42803;
            } else {
                a_loc_ind_42801 = -1;
            }
            if (sle64(0, a_loc_ind_42801) && slt64(a_loc_ind_42801,
                                                   a_loc_szz_42526)) {
                ((__local float *) mem_44110)[a_loc_ind_42801] = A_elem_42796;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_42808 = 0; i_42808 < tk_div_ty_42522; i_42808++) {
        int64_t binop_y_42831 = Ty_42516 * i_42808;
        
        for (int64_t i_42810 = 0; i_42810 < Rx_42519; i_42810++) {
            int64_t binop_y_42833 = Tx_42518 * i_42810;
            int64_t ltid_x_42812 = sext_i32_i64(ltid_pre_45432);
            int64_t ltid_y_42813 = sext_i32_i64(ltid_pre_45433);
            int32_t ltid_flat_42814 = local_tid_45428;
            int64_t k_42832 = ltid_x_42812 + binop_y_42831;
            int64_t j_42834 = ltid_y_42813 + binop_y_42833;
            int64_t gtid_42835 = jjj_42537 + j_42834;
            int64_t B_row_idx_42836 = kk_42763 + k_42832;
            bool binop_x_42837 = slt64(gtid_42835, N_30870);
            bool binop_y_42838 = slt64(B_row_idx_42836, i32_res_30890);
            bool cond_42839 = binop_x_42837 && binop_y_42838;
            float B_elem_42840;
            
            if (cond_42839) {
                float B_elem_42842 = ((__global
                                       float *) mem_44094)[B_row_idx_42836 *
                                                           N_30870 +
                                                           gtid_42835];
                
                B_elem_42840 = B_elem_42842;
            } else {
                B_elem_42840 = 0.0F;
            }
            
            bool cond_42844 = slt64(k_42832, Tk_42520);
            int64_t b_loc_ind_42845;
            
            if (cond_42844) {
                int64_t binop_y_42846 = TxRx_42523 * k_42832;
                int64_t loc_fi_42847 = j_42834 + binop_y_42846;
                
                b_loc_ind_42845 = loc_fi_42847;
            } else {
                b_loc_ind_42845 = -1;
            }
            if (sle64(0, b_loc_ind_42845) && slt64(b_loc_ind_42845,
                                                   b_loc_szz_42528)) {
                ((__local float *) mem_44112)[b_loc_ind_42845] = B_elem_42840;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_44265[Ry_42517];
    float mem_44269[Rx_42519];
    float mem_44279[Ry_42517 * Rx_42519];
    float loop_mem_44281[Ry_42517 * Rx_42519];
    float mem_param_44252[Ry_42517 * Rx_42519];
    
    for (int32_t i_10 = 0; i_10 < Ry_42517 * Rx_42519; i_10++)
        mem_param_44252[i_10] = loop_mem_44199[i_10];
    for (int64_t i_42852 = 0; i_42852 < Tk_42520; i_42852++) {
        int64_t cmpop_x_42854 = kk_42763 + i_42852;
        bool cond_42855 = slt64(cmpop_x_42854, i32_res_30890);
        float mem_44809[Ry_42517 * Rx_42519];
        
        if (cond_42855) {
            int64_t binop_y_42893 = TxRx_42523 * i_42852;
            int64_t bytes_44254 = 4 * Ry_42517;
            int64_t bytes_44256 = 4 * Rx_42519;
            int64_t ltid_y_42858 = sext_i32_i64(ltid_pre_45432);
            int64_t ltid_x_42856 = sext_i32_i64(ltid_pre_45433);
            int32_t ltid_flat_42857 = local_tid_45428;
            float mem_44255[Ry_42517];
            float mem_44257[Rx_42519];
            int64_t binop_x_42884 = Ry_42517 * ltid_y_42858;
            
            for (int64_t i_42882 = 0; i_42882 < Ry_42517; i_42882++) {
                int64_t binop_x_42885 = i_42882 + binop_x_42884;
                int64_t binop_y_42886 = Tk_42520 * binop_x_42885;
                int64_t a_loc_ind_42887 = i_42852 + binop_y_42886;
                
                for (int64_t i_45465 = 0; i_45465 < 1; i_45465++) {
                    mem_44255[i_42882 + i_45465] = ((__local
                                                     float *) mem_44110)[a_loc_ind_42887 +
                                                                         i_45465];
                }
            }
            
            int64_t binop_y_42895 = Rx_42519 * ltid_x_42856;
            
            for (int64_t i_42891 = 0; i_42891 < Rx_42519; i_42891++) {
                int64_t binop_x_42894 = i_42891 + binop_y_42893;
                int64_t b_loc_ind_42896 = binop_x_42894 + binop_y_42895;
                
                for (int64_t i_45467 = 0; i_45467 < 1; i_45467++) {
                    mem_44257[i_42891 + i_45467] = ((__local
                                                     float *) mem_44112)[b_loc_ind_42896 +
                                                                         i_45467];
                }
            }
            for (int64_t i_45468 = 0; i_45468 < Ry_42517; i_45468++) {
                mem_44265[i_45468] = mem_44255[i_45468];
            }
            for (int64_t i_45469 = 0; i_45469 < Rx_42519; i_45469++) {
                mem_44269[i_45469] = mem_44257[i_45469];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_42903 = sext_i32_i64(ltid_pre_45432);
            int64_t ltid_x_42901 = sext_i32_i64(ltid_pre_45433);
            int32_t ltid_flat_42902 = local_tid_45428;
            int64_t binop_y_42944 = Ry_42517 * ltid_y_42903;
            int64_t binop_y_42948 = Rx_42519 * ltid_x_42901;
            
            for (int64_t i_42938 = 0; i_42938 < Ry_42517; i_42938++) {
                int64_t binop_x_42943 = iii_42536 + i_42938;
                int64_t cmpop_x_42945 = binop_x_42943 + binop_y_42944;
                bool binop_x_42946 = slt64(cmpop_x_42945, m_30871);
                
                for (int64_t i_42941 = 0; i_42941 < Rx_42519; i_42941++) {
                    int64_t binop_x_42947 = jjj_42537 + i_42941;
                    int64_t cmpop_x_42949 = binop_x_42947 + binop_y_42948;
                    bool binop_y_42950 = slt64(cmpop_x_42949, N_30870);
                    bool cond_42951 = binop_x_42946 && binop_y_42950;
                    
                    if (cond_42951) {
                        float a_42953 = mem_44265[i_42938];
                        float b_42954 = mem_44269[i_42941];
                        float c_42955 = mem_param_44252[i_42938 * Rx_42519 +
                                                        i_42941];
                        float defunc_1_f_res_42958 = a_42953 * b_42954;
                        float defunc_1_op_res_42962 = c_42955 +
                              defunc_1_f_res_42958;
                        
                        mem_param_44252[i_42938 * Rx_42519 + i_42941] =
                            defunc_1_op_res_42962;
                    }
                }
            }
            for (int64_t i_45472 = 0; i_45472 < Ry_42517; i_45472++) {
                for (int64_t i_45473 = 0; i_45473 < Rx_42519; i_45473++) {
                    mem_44279[i_45472 * Rx_42519 + i_45473] =
                        mem_param_44252[i_45472 * Rx_42519 + i_45473];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_45474 = 0; i_45474 < Ry_42517; i_45474++) {
                for (int64_t i_45475 = 0; i_45475 < Rx_42519; i_45475++) {
                    mem_44809[i_45474 * Rx_42519 + i_45475] =
                        mem_44279[i_45474 * Rx_42519 + i_45475];
                }
            }
        } else {
            for (int64_t i_45476 = 0; i_45476 < Ry_42517; i_45476++) {
                for (int64_t i_45477 = 0; i_45477 < Rx_42519; i_45477++) {
                    mem_44809[i_45476 * Rx_42519 + i_45477] =
                        mem_param_44252[i_45476 * Rx_42519 + i_45477];
                }
            }
        }
        
        float mem_param_tmp_45462[Ry_42517 * Rx_42519];
        
        for (int32_t i_11 = 0; i_11 < Ry_42517 * Rx_42519; i_11++)
            mem_param_tmp_45462[i_11] = mem_44809[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_42517 * Rx_42519; i_12++)
            mem_param_44252[i_12] = mem_param_tmp_45462[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_42517 * Rx_42519; i_13++)
        loop_mem_44281[i_13] = mem_param_44252[i_13];
    
    int64_t reg_tile_i_45478 = squot64(sext_i32_i64(local_tid_45428), Tx_42518);
    int64_t reg_tile_i_45479 = sext_i32_i64(local_tid_45428) -
            squot64(sext_i32_i64(local_tid_45428), Tx_42518) * Tx_42518;
    int64_t tile_dim_start_45480 = Ry_42517 * (Ty_42516 * gid_y_42534 +
                                               reg_tile_i_45478);
    int64_t tile_dim_start_45481 = Rx_42519 * (Tx_42518 * gid_x_42533 +
                                               reg_tile_i_45479);
    
    for (int64_t nest_i_45482 = 0; nest_i_45482 < Ry_42517; nest_i_45482++) {
        for (int64_t nest_i_45483 = 0; nest_i_45483 < Rx_42519;
             nest_i_45483++) {
            if (slt64(tile_dim_start_45480 + nest_i_45482, m_30871) &&
                slt64(tile_dim_start_45481 + nest_i_45483, N_30870)) {
                ((__global float *) mem_44284)[(tile_dim_start_45480 +
                                                nest_i_45482) * N_30870 +
                                               (tile_dim_start_45481 +
                                                nest_i_45483)] =
                    loop_mem_44281[nest_i_45482 * Rx_42519 + nest_i_45483];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_42516
    #undef Ry_42517
    #undef Tx_42518
    #undef Rx_42519
    #undef Tk_42520
    #undef tk_div_tx_42521
    #undef tk_div_ty_42522
    #undef TxRx_42523
    #undef TyRy_42524
    #undef a_loc_szz_42526
    #undef b_loc_szz_42528
}
__kernel void mainzisegmap_intragroup_42969(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_44354_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_44347_backing_aligned_1,
                                            int64_t m_30871, int32_t n_30875,
                                            float hfrac_30877,
                                            int64_t i32_res_30884,
                                            int32_t k2p2_30886,
                                            int64_t num_whole_tiles_42977,
                                            int64_t residual_input_43098,
                                            unsigned char cond_43099, __global
                                            unsigned char *mem_44336, __global
                                            unsigned char *mem_44339, __global
                                            unsigned char *mem_44367, __global
                                            unsigned char *mem_44369, __global
                                            unsigned char *mem_44371)
{
    #define segmap_group_sizze_39114 (mainzisegmap_group_sizze_39083)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44354_backing_5 = (__local volatile
                                                           char *) mem_44354_backing_aligned_0;
    __local volatile char *restrict mem_44347_backing_0 = (__local volatile
                                                           char *) mem_44347_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45651;
    int32_t local_tid_45652;
    int64_t group_sizze_45655;
    int32_t wave_sizze_45654;
    int32_t group_tid_45653;
    
    global_tid_45651 = get_global_id(0);
    local_tid_45652 = get_local_id(0);
    group_sizze_45655 = get_local_size(0);
    wave_sizze_45654 = LOCKSTEP_WIDTH;
    group_tid_45653 = get_group_id(0);
    
    int32_t gid_flat_42969;
    
    gid_flat_42969 = group_tid_45653;
    
    int32_t ltid_pre_45656;
    
    ltid_pre_45656 = local_tid_45652;
    
    int64_t gid_42968;
    
    gid_42968 = sext_i32_i64(group_tid_45653);
    
    float mem_44343[1];
    int64_t ltid_42978 = sext_i32_i64(ltid_pre_45656);
    int32_t ltid_flat_42979 = local_tid_45652;
    
    mem_44343[0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_43064 = segmap_group_sizze_39114 * gid_42968;
    __local char *mem_44347;
    
    mem_44347 = (__local char *) mem_44347_backing_0;
    
    float accs_mem_44351[1];
    float mem_param_44344[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_44344[i_1] = mem_44343[i_1];
    for (int64_t tile_id_42985 = 0; tile_id_42985 < num_whole_tiles_42977;
         tile_id_42985++) {
        int64_t binop_x_43046 = segmap_group_sizze_39114 * tile_id_42985;
        int64_t ltid_42986 = sext_i32_i64(ltid_pre_45656);
        int32_t ltid_flat_42987 = local_tid_45652;
        int64_t j_43047 = ltid_42986 + binop_x_43046;
        bool cond_43059 = slt64(j_43047, i32_res_30884);
        int32_t pre_43060;
        
        if (cond_43059) {
            int32_t index_primexp_43397 = sext_i64_i32(j_43047);
            
            pre_43060 = index_primexp_43397;
        } else {
            pre_43060 = 0;
        }
        ((__local int32_t *) mem_44347)[ltid_42986] = pre_43060;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_44350[1];
        int64_t ltid_43013 = sext_i32_i64(ltid_pre_45656);
        int32_t ltid_flat_43014 = local_tid_45652;
        int64_t gtid_43065 = ltid_43013 + binop_x_43064;
        int32_t defunc_0_f_res_43067;
        int32_t redout_43441 = 0;
        
        for (int32_t i_43519 = 0; i_43519 < n_30875; i_43519++) {
            int64_t i_43442 = sext_i32_i64(i_43519);
            float x_43071 = ((__global float *) mem_44336)[i_43442 * m_30871 +
                                                           gtid_43065];
            bool isnan_res_43072;
            
            isnan_res_43072 = futrts_isnan32(x_43071);
            
            bool cond_43073 = !isnan_res_43072;
            int32_t defunc_0_f_res_43074 = btoi_bool_i32(cond_43073);
            int32_t defunc_1_op_res_43070 = add32(defunc_0_f_res_43074,
                                                  redout_43441);
            int32_t redout_tmp_45659 = defunc_1_op_res_43070;
            
            redout_43441 = redout_tmp_45659;
        }
        defunc_0_f_res_43067 = redout_43441;
        
        float acc_43075 = mem_param_44344[0];
        bool cond_43076 = slt64(gtid_43065, m_30871);
        float acc_43077;
        
        if (cond_43076) {
            float x_43078;
            float redout_43443 = acc_43075;
            
            for (int64_t i_43444 = 0; i_43444 < segmap_group_sizze_39114;
                 i_43444++) {
                int32_t x_43082 = ((__local int32_t *) mem_44347)[i_43444];
                bool cond_43083 = slt32(x_43082, defunc_0_f_res_43067);
                float defunc_0_f_res_43084;
                
                if (cond_43083) {
                    int64_t i_43085 = sext_i32_i64(x_43082);
                    float defunc_0_f_res_t_res_43086 = ((__global
                                                         float *) mem_44339)[i_43085 *
                                                                             m_30871 +
                                                                             gtid_43065];
                    
                    defunc_0_f_res_43084 = defunc_0_f_res_t_res_43086;
                } else {
                    defunc_0_f_res_43084 = 0.0F;
                }
                
                float defunc_0_f_res_43087 = defunc_0_f_res_43084 *
                      defunc_0_f_res_43084;
                float defunc_1_op_res_43081 = defunc_0_f_res_43087 +
                      redout_43443;
                float redout_tmp_45660 = defunc_1_op_res_43081;
                
                redout_43443 = redout_tmp_45660;
            }
            x_43078 = redout_43443;
            acc_43077 = x_43078;
        } else {
            acc_43077 = acc_43075;
        }
        mem_44350[0] = acc_43077;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45657[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_45657[i_2] = mem_44350[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_44344[i_3] = mem_param_tmp_45657[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_44351[i_4] = mem_param_44344[i_4];
    
    __local char *mem_44354;
    
    mem_44354 = (__local char *) mem_44354_backing_5;
    
    float mem_44357[1];
    float mem_44822[1];
    
    if (cond_43099) {
        mem_44822[0] = accs_mem_44351[0];
    } else {
        int64_t binop_x_43109 = segmap_group_sizze_39114 *
                num_whole_tiles_42977;
        int64_t ltid_43100 = sext_i32_i64(ltid_pre_45656);
        int32_t ltid_flat_43101 = local_tid_45652;
        int64_t j_43110 = ltid_43100 + binop_x_43109;
        bool cond_43122 = slt64(j_43110, i32_res_30884);
        int32_t pre_43123;
        
        if (cond_43122) {
            int32_t index_primexp_43398 = sext_i64_i32(j_43110);
            
            pre_43123 = index_primexp_43398;
        } else {
            pre_43123 = 0;
        }
        ((__local int32_t *) mem_44354)[ltid_43100] = pre_43123;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_43128 = sext_i32_i64(ltid_pre_45656);
        int32_t ltid_flat_43129 = local_tid_45652;
        int64_t gtid_43136 = binop_x_43064 + ltid_43128;
        int32_t defunc_0_f_res_43138;
        int32_t redout_43445 = 0;
        
        for (int32_t i_43520 = 0; i_43520 < n_30875; i_43520++) {
            int64_t i_43446 = sext_i32_i64(i_43520);
            float x_43142 = ((__global float *) mem_44336)[i_43446 * m_30871 +
                                                           gtid_43136];
            bool isnan_res_43143;
            
            isnan_res_43143 = futrts_isnan32(x_43142);
            
            bool cond_43144 = !isnan_res_43143;
            int32_t defunc_0_f_res_43145 = btoi_bool_i32(cond_43144);
            int32_t defunc_1_op_res_43141 = add32(defunc_0_f_res_43145,
                                                  redout_43445);
            int32_t redout_tmp_45661 = defunc_1_op_res_43141;
            
            redout_43445 = redout_tmp_45661;
        }
        defunc_0_f_res_43138 = redout_43445;
        
        float acc_43146 = accs_mem_44351[0];
        bool cond_43147 = slt64(gtid_43136, m_30871);
        float acc_43148;
        
        if (cond_43147) {
            float x_43149;
            float redout_43447 = acc_43146;
            
            for (int64_t i_43448 = 0; i_43448 < residual_input_43098;
                 i_43448++) {
                int32_t x_43153 = ((__local int32_t *) mem_44354)[i_43448];
                bool cond_43154 = slt32(x_43153, defunc_0_f_res_43138);
                float defunc_0_f_res_43155;
                
                if (cond_43154) {
                    int64_t i_43156 = sext_i32_i64(x_43153);
                    float defunc_0_f_res_t_res_43157 = ((__global
                                                         float *) mem_44339)[i_43156 *
                                                                             m_30871 +
                                                                             gtid_43136];
                    
                    defunc_0_f_res_43155 = defunc_0_f_res_t_res_43157;
                } else {
                    defunc_0_f_res_43155 = 0.0F;
                }
                
                float defunc_0_f_res_43158 = defunc_0_f_res_43155 *
                      defunc_0_f_res_43155;
                float defunc_1_op_res_43152 = defunc_0_f_res_43158 +
                      redout_43447;
                float redout_tmp_45662 = defunc_1_op_res_43152;
                
                redout_43447 = redout_tmp_45662;
            }
            x_43149 = redout_43447;
            acc_43148 = x_43149;
        } else {
            acc_43148 = acc_43146;
        }
        mem_44357[0] = acc_43148;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44822[0] = mem_44357[0];
    }
    
    int32_t mem_44361[1];
    int32_t mem_44363[1];
    float mem_44365[1];
    int64_t ltid_43161 = sext_i32_i64(ltid_pre_45656);
    int32_t ltid_flat_43162 = local_tid_45652;
    int64_t gtid_43172 = binop_x_43064 + ltid_43161;
    bool cond_43174 = slt64(gtid_43172, m_30871);
    int32_t postlude_43175;
    int32_t postlude_43176;
    float postlude_43177;
    
    if (cond_43174) {
        float defunc_0_f_res_43173 = mem_44822[0];
        int32_t defunc_0_f_res_43179;
        int32_t redout_43449 = 0;
        
        for (int32_t i_43521 = 0; i_43521 < n_30875; i_43521++) {
            int64_t i_43450 = sext_i32_i64(i_43521);
            float x_43183 = ((__global float *) mem_44336)[i_43450 * m_30871 +
                                                           gtid_43172];
            bool isnan_res_43184;
            
            isnan_res_43184 = futrts_isnan32(x_43183);
            
            bool cond_43185 = !isnan_res_43184;
            int32_t defunc_0_f_res_43186 = btoi_bool_i32(cond_43185);
            int32_t defunc_1_op_res_43182 = add32(defunc_0_f_res_43186,
                                                  redout_43449);
            int32_t redout_tmp_45663 = defunc_1_op_res_43182;
            
            redout_43449 = redout_tmp_45663;
        }
        defunc_0_f_res_43179 = redout_43449;
        
        int32_t r32_arg_43187 = sub32(defunc_0_f_res_43179, k2p2_30886);
        float i32_res_43188 = sitofp_i32_f32(r32_arg_43187);
        float sqrt_arg_43189 = defunc_0_f_res_43173 / i32_res_43188;
        float sqrt_res_43190;
        
        sqrt_res_43190 = futrts_sqrt32(sqrt_arg_43189);
        
        float i32_res_43191 = sitofp_i32_f32(defunc_0_f_res_43179);
        float t32_arg_43192 = hfrac_30877 * i32_res_43191;
        int32_t f32_res_43193 = fptosi_f32_i32(t32_arg_43192);
        
        postlude_43175 = f32_res_43193;
        postlude_43176 = defunc_0_f_res_43179;
        postlude_43177 = sqrt_res_43190;
    } else {
        postlude_43175 = 0;
        postlude_43176 = 0;
        postlude_43177 = 0.0F;
    }
    mem_44361[0] = postlude_43175;
    mem_44363[0] = postlude_43176;
    mem_44365[0] = postlude_43177;
    barrier(CLK_LOCAL_MEM_FENCE);
    if (slt64(sext_i32_i64(local_tid_45652) + segmap_group_sizze_39114 *
              sext_i32_i64(group_tid_45653), m_30871)) {
        ((__global int32_t *) mem_44367)[sext_i32_i64(local_tid_45652) +
                                         segmap_group_sizze_39114 *
                                         sext_i32_i64(group_tid_45653)] =
            mem_44361[0];
    }
    if (slt64(sext_i32_i64(local_tid_45652) + segmap_group_sizze_39114 *
              sext_i32_i64(group_tid_45653), m_30871)) {
        ((__global int32_t *) mem_44369)[sext_i32_i64(local_tid_45652) +
                                         segmap_group_sizze_39114 *
                                         sext_i32_i64(group_tid_45653)] =
            mem_44363[0];
    }
    if (slt64(sext_i32_i64(local_tid_45652) + segmap_group_sizze_39114 *
              sext_i32_i64(group_tid_45653), m_30871)) {
        ((__global float *) mem_44371)[sext_i32_i64(local_tid_45652) +
                                       segmap_group_sizze_39114 *
                                       sext_i32_i64(group_tid_45653)] =
            mem_44365[0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_39114
}
__kernel void mainzisegmap_intragroup_43201(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_44420_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_44413_backing_aligned_1,
                                            int64_t N_30870, int64_t m_30871,
                                            int64_t i32_res_31232,
                                            int64_t num_whole_tiles_43221,
                                            int64_t residual_input_43320,
                                            unsigned char cond_43321, __global
                                            unsigned char *defunc_4_map_res_mem_44332,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_44395,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_44396,
                                            __global unsigned char *mem_44426)
{
    #define segmap_group_sizze_39351 (mainzisegmap_group_sizze_39332)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44420_backing_5 = (__local volatile
                                                           char *) mem_44420_backing_aligned_0;
    __local volatile char *restrict mem_44413_backing_0 = (__local volatile
                                                           char *) mem_44413_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45837;
    int32_t local_tid_45838;
    int64_t group_sizze_45841;
    int32_t wave_sizze_45840;
    int32_t group_tid_45839;
    
    global_tid_45837 = get_global_id(0);
    local_tid_45838 = get_local_id(0);
    group_sizze_45841 = get_local_size(0);
    wave_sizze_45840 = LOCKSTEP_WIDTH;
    group_tid_45839 = get_group_id(0);
    
    int32_t gid_flat_43201;
    
    gid_flat_43201 = group_tid_45839;
    
    int32_t ltid_pre_45842;
    
    ltid_pre_45842 = local_tid_45838;
    
    int64_t gid_43200;
    
    gid_43200 = sext_i32_i64(group_tid_45839);
    
    int64_t binop_x_43210;
    
    binop_x_43210 = segmap_group_sizze_39351 * gid_43200;
    
    int32_t mem_44404[1];
    int32_t mem_44406[1];
    int64_t ltid_43202 = sext_i32_i64(ltid_pre_45842);
    int32_t ltid_flat_43203 = local_tid_45838;
    int64_t gtid_43211 = ltid_43202 + binop_x_43210;
    bool cond_43212 = slt64(gtid_43211, m_30871);
    int32_t pre_43213;
    int32_t pre_43214;
    
    if (cond_43212) {
        int32_t x_43215 = ((__global
                            int32_t *) defunc_3_map_res_mem_44396)[gtid_43211];
        int32_t x_43216 = ((__global
                            int32_t *) defunc_3_map_res_mem_44395)[gtid_43211];
        
        pre_43213 = x_43215;
        pre_43214 = x_43216;
    } else {
        pre_43213 = 0;
        pre_43214 = 0;
    }
    mem_44404[0] = pre_43213;
    mem_44406[0] = pre_43214;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_44409[1];
    int64_t ltid_43222 = sext_i32_i64(ltid_pre_45842);
    int32_t ltid_flat_43223 = local_tid_45838;
    
    mem_44409[0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44413;
    
    mem_44413 = (__local char *) mem_44413_backing_0;
    
    float accs_mem_44417[1];
    float mem_param_44410[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_44410[i_1] = mem_44409[i_1];
    for (int64_t tile_id_43229 = 0; tile_id_43229 < num_whole_tiles_43221;
         tile_id_43229++) {
        int64_t binop_x_43278 = segmap_group_sizze_39351 * tile_id_43229;
        int64_t ltid_43230 = sext_i32_i64(ltid_pre_45842);
        int32_t ltid_flat_43231 = local_tid_45838;
        int64_t j_43279 = ltid_43230 + binop_x_43278;
        bool cond_43284 = slt64(j_43279, i32_res_31232);
        int32_t pre_43285;
        
        if (cond_43284) {
            int32_t index_primexp_43399 = sext_i64_i32(j_43279);
            int32_t tile_elem_43286 = index_primexp_43399;
            
            pre_43285 = tile_elem_43286;
        } else {
            pre_43285 = 0;
        }
        ((__local int32_t *) mem_44413)[ltid_43230] = pre_43285;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_44416[1];
        int64_t ltid_43250 = sext_i32_i64(ltid_pre_45842);
        int32_t ltid_flat_43251 = local_tid_45838;
        int64_t gtid_43290 = binop_x_43210 + ltid_43250;
        float acc_43293 = mem_param_44410[0];
        bool cond_43294 = slt64(gtid_43290, m_30871);
        float acc_43295;
        
        if (cond_43294) {
            int32_t x_43291 = mem_44404[0];
            int32_t x_43292 = mem_44406[0];
            float x_43296;
            float redout_43451 = acc_43293;
            
            for (int64_t i_43452 = 0; i_43452 < segmap_group_sizze_39351;
                 i_43452++) {
                int32_t x_43300 = ((__local int32_t *) mem_44413)[i_43452];
                bool cond_43301 = slt32(x_43300, x_43292);
                float defunc_0_f_res_43302;
                
                if (cond_43301) {
                    int32_t x_43303 = add32(x_43291, x_43300);
                    int32_t x_43304 = sub32(x_43303, x_43292);
                    int32_t i_43305 = add32(1, x_43304);
                    int64_t i_43306 = sext_i32_i64(i_43305);
                    float defunc_0_f_res_t_res_43307 = ((__global
                                                         float *) defunc_4_map_res_mem_44332)[gtid_43290 *
                                                                                              N_30870 +
                                                                                              i_43306];
                    
                    defunc_0_f_res_43302 = defunc_0_f_res_t_res_43307;
                } else {
                    defunc_0_f_res_43302 = 0.0F;
                }
                
                float defunc_1_op_res_43299 = defunc_0_f_res_43302 +
                      redout_43451;
                float redout_tmp_45845 = defunc_1_op_res_43299;
                
                redout_43451 = redout_tmp_45845;
            }
            x_43296 = redout_43451;
            acc_43295 = x_43296;
        } else {
            acc_43295 = acc_43293;
        }
        mem_44416[0] = acc_43295;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45843[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_45843[i_2] = mem_44416[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_44410[i_3] = mem_param_tmp_45843[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_44417[i_4] = mem_param_44410[i_4];
    
    __local char *mem_44420;
    
    mem_44420 = (__local char *) mem_44420_backing_5;
    
    float mem_44423[1];
    float mem_44831[1];
    
    if (cond_43321) {
        mem_44831[0] = accs_mem_44417[0];
    } else {
        int64_t binop_x_43331 = segmap_group_sizze_39351 *
                num_whole_tiles_43221;
        int64_t ltid_43322 = sext_i32_i64(ltid_pre_45842);
        int32_t ltid_flat_43323 = local_tid_45838;
        int64_t j_43332 = ltid_43322 + binop_x_43331;
        bool cond_43337 = slt64(j_43332, i32_res_31232);
        int32_t pre_43338;
        
        if (cond_43337) {
            int32_t index_primexp_43400 = sext_i64_i32(j_43332);
            int32_t tile_elem_43339 = index_primexp_43400;
            
            pre_43338 = tile_elem_43339;
        } else {
            pre_43338 = 0;
        }
        ((__local int32_t *) mem_44420)[ltid_43322] = pre_43338;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_43343 = sext_i32_i64(ltid_pre_45842);
        int32_t ltid_flat_43344 = local_tid_45838;
        int64_t gtid_43351 = binop_x_43210 + ltid_43343;
        float acc_43354 = accs_mem_44417[0];
        bool cond_43355 = slt64(gtid_43351, m_30871);
        float acc_43356;
        
        if (cond_43355) {
            int32_t x_43352 = mem_44404[0];
            int32_t x_43353 = mem_44406[0];
            float x_43357;
            float redout_43453 = acc_43354;
            
            for (int64_t i_43454 = 0; i_43454 < residual_input_43320;
                 i_43454++) {
                int32_t x_43361 = ((__local int32_t *) mem_44420)[i_43454];
                bool cond_43362 = slt32(x_43361, x_43353);
                float defunc_0_f_res_43363;
                
                if (cond_43362) {
                    int32_t x_43364 = add32(x_43352, x_43361);
                    int32_t x_43365 = sub32(x_43364, x_43353);
                    int32_t i_43366 = add32(1, x_43365);
                    int64_t i_43367 = sext_i32_i64(i_43366);
                    float defunc_0_f_res_t_res_43368 = ((__global
                                                         float *) defunc_4_map_res_mem_44332)[gtid_43351 *
                                                                                              N_30870 +
                                                                                              i_43367];
                    
                    defunc_0_f_res_43363 = defunc_0_f_res_t_res_43368;
                } else {
                    defunc_0_f_res_43363 = 0.0F;
                }
                
                float defunc_1_op_res_43360 = defunc_0_f_res_43363 +
                      redout_43453;
                float redout_tmp_45846 = defunc_1_op_res_43360;
                
                redout_43453 = redout_tmp_45846;
            }
            x_43357 = redout_43453;
            acc_43356 = x_43357;
        } else {
            acc_43356 = acc_43354;
        }
        mem_44423[0] = acc_43356;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44831[0] = mem_44423[0];
    }
    if (slt64(sext_i32_i64(local_tid_45838) + segmap_group_sizze_39351 *
              sext_i32_i64(group_tid_45839), m_30871)) {
        ((__global float *) mem_44426)[sext_i32_i64(local_tid_45838) +
                                       segmap_group_sizze_39351 *
                                       sext_i32_i64(group_tid_45839)] =
            mem_44831[0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_39351
}
__kernel void mainzisegred_large_37200(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_45103_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45101_backing_aligned_1,
                                       int64_t N_30870, int64_t N_30872,
                                       int64_t i32_res_30884,
                                       int64_t i32_res_30890,
                                       int64_t num_groups_37339, __global
                                       unsigned char *images_mem_43532, __global
                                       unsigned char *binop_p_mem_43541,
                                       __global unsigned char *mem_43682,
                                       __global unsigned char *mem_43687,
                                       int64_t groups_per_segment_45087,
                                       int64_t elements_per_thread_45088,
                                       int64_t virt_num_groups_45089,
                                       int64_t threads_per_segment_45091,
                                       __global
                                       unsigned char *group_res_arr_mem_45092,
                                       __global
                                       unsigned char *mainzicounter_mem_45094)
{
    #define segred_group_sizze_37338 (mainzisegred_group_sizze_37194)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45103_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45103_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45101_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45101_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45096;
    int32_t local_tid_45097;
    int64_t group_sizze_45100;
    int32_t wave_sizze_45099;
    int32_t group_tid_45098;
    
    global_tid_45096 = get_global_id(0);
    local_tid_45097 = get_local_id(0);
    group_sizze_45100 = get_local_size(0);
    wave_sizze_45099 = LOCKSTEP_WIDTH;
    group_tid_45098 = get_group_id(0);
    
    int32_t phys_tid_37200;
    
    phys_tid_37200 = global_tid_45096;
    
    __local char *red_arr_mem_45101;
    
    red_arr_mem_45101 = (__local char *) red_arr_mem_45101_backing_0;
    
    __local char *sync_arr_mem_45103;
    
    sync_arr_mem_45103 = (__local char *) sync_arr_mem_45103_backing_1;
    
    int32_t phys_group_id_45105;
    
    phys_group_id_45105 = get_group_id(0);
    for (int32_t i_45106 = 0; i_45106 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45089) - phys_group_id_45105,
                   sext_i64_i32(num_groups_37339)); i_45106++) {
        int32_t virt_group_id_45107 = phys_group_id_45105 + i_45106 *
                sext_i64_i32(num_groups_37339);
        int32_t flat_segment_id_45108 = squot32(virt_group_id_45107,
                                                sext_i64_i32(groups_per_segment_45087));
        int64_t global_tid_45109 = srem64(sext_i32_i64(virt_group_id_45107) *
                                          segred_group_sizze_37338 +
                                          sext_i32_i64(local_tid_45097),
                                          segred_group_sizze_37338 *
                                          groups_per_segment_45087);
        int64_t gtid_37187 = squot64(sext_i32_i64(flat_segment_id_45108),
                                     i32_res_30890 * i32_res_30890);
        int64_t gtid_37188 = squot64(sext_i32_i64(flat_segment_id_45108) -
                                     squot64(sext_i32_i64(flat_segment_id_45108),
                                             i32_res_30890 * i32_res_30890) *
                                     (i32_res_30890 * i32_res_30890),
                                     i32_res_30890);
        int64_t gtid_37189 = sext_i32_i64(flat_segment_id_45108) -
                squot64(sext_i32_i64(flat_segment_id_45108), i32_res_30890 *
                        i32_res_30890) * (i32_res_30890 * i32_res_30890) -
                squot64(sext_i32_i64(flat_segment_id_45108) -
                        squot64(sext_i32_i64(flat_segment_id_45108),
                                i32_res_30890 * i32_res_30890) *
                        (i32_res_30890 * i32_res_30890), i32_res_30890) *
                i32_res_30890;
        int64_t gtid_37199;
        float x_acc_45110;
        int64_t chunk_sizze_45111;
        
        chunk_sizze_45111 = smin64(elements_per_thread_45088,
                                   sdiv_up64(i32_res_30884 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45109)),
                                             threads_per_segment_45091));
        
        float x_37342;
        float x_37343;
        
        // neutral-initialise the accumulators
        {
            x_acc_45110 = 0.0F;
        }
        for (int64_t i_45115 = 0; i_45115 < chunk_sizze_45111; i_45115++) {
            gtid_37199 = sext_i32_i64(sext_i64_i32(global_tid_45109)) +
                threads_per_segment_45091 * i_45115;
            // apply map function
            {
                float x_37348 = ((__global
                                  float *) images_mem_43532)[gtid_37187 *
                                                             N_30872 +
                                                             gtid_37199];
                float x_37349 = ((__global
                                  float *) binop_p_mem_43541)[gtid_37188 *
                                                              N_30870 +
                                                              gtid_37199];
                float x_37350 = ((__global float *) mem_43682)[gtid_37189 *
                                                               N_30870 +
                                                               gtid_37199];
                float x_37351 = x_37349 * x_37350;
                bool isnan_res_37352;
                
                isnan_res_37352 = futrts_isnan32(x_37348);
                
                float y_37353;
                
                if (isnan_res_37352) {
                    y_37353 = 0.0F;
                } else {
                    y_37353 = 1.0F;
                }
                
                float defunc_2_f_res_37354 = x_37351 * y_37353;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_37342 = x_acc_45110;
                }
                // load new values
                {
                    x_37343 = defunc_2_f_res_37354;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_37344 = x_37342 + x_37343;
                    
                    // store in accumulator
                    {
                        x_acc_45110 = defunc_1_op_res_37344;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_37342 = x_acc_45110;
            ((__local
              float *) red_arr_mem_45101)[sext_i32_i64(local_tid_45097)] =
                x_37342;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45116;
        int32_t skip_waves_45117;
        
        skip_waves_45117 = 1;
        
        float x_45112;
        float x_45113;
        
        offset_45116 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45097,
                      sext_i64_i32(segred_group_sizze_37338))) {
                x_45112 = ((__local
                            float *) red_arr_mem_45101)[sext_i32_i64(local_tid_45097 +
                                                        offset_45116)];
            }
        }
        offset_45116 = 1;
        while (slt32(offset_45116, wave_sizze_45099)) {
            if (slt32(local_tid_45097 + offset_45116,
                      sext_i64_i32(segred_group_sizze_37338)) &&
                ((local_tid_45097 - squot32(local_tid_45097, wave_sizze_45099) *
                  wave_sizze_45099) & (2 * offset_45116 - 1)) == 0) {
                // read array element
                {
                    x_45113 = ((volatile __local
                                float *) red_arr_mem_45101)[sext_i32_i64(local_tid_45097 +
                                                            offset_45116)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45114 = x_45112 + x_45113;
                    
                    x_45112 = defunc_1_op_res_45114;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45101)[sext_i32_i64(local_tid_45097)] =
                        x_45112;
                }
            }
            offset_45116 *= 2;
        }
        while (slt32(skip_waves_45117,
                     squot32(sext_i64_i32(segred_group_sizze_37338) +
                             wave_sizze_45099 - 1, wave_sizze_45099))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45116 = skip_waves_45117 * wave_sizze_45099;
            if (slt32(local_tid_45097 + offset_45116,
                      sext_i64_i32(segred_group_sizze_37338)) &&
                ((local_tid_45097 - squot32(local_tid_45097, wave_sizze_45099) *
                  wave_sizze_45099) == 0 && (squot32(local_tid_45097,
                                                     wave_sizze_45099) & (2 *
                                                                          skip_waves_45117 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45113 = ((__local
                                float *) red_arr_mem_45101)[sext_i32_i64(local_tid_45097 +
                                                            offset_45116)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45114 = x_45112 + x_45113;
                    
                    x_45112 = defunc_1_op_res_45114;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45101)[sext_i32_i64(local_tid_45097)] =
                        x_45112;
                }
            }
            skip_waves_45117 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45097) == 0) {
                x_acc_45110 = x_45112;
            }
        }
        if (groups_per_segment_45087 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45097 == 0) {
                    ((__global float *) mem_43687)[gtid_37187 * (i32_res_30890 *
                                                                 i32_res_30890) +
                                                   gtid_37188 * i32_res_30890 +
                                                   gtid_37189] = x_acc_45110;
                }
            }
        } else {
            int32_t old_counter_45118;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45097 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45092)[sext_i32_i64(virt_group_id_45107) *
                                                        segred_group_sizze_37338] =
                        x_acc_45110;
                    mem_fence_global();
                    old_counter_45118 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45094)[sext_i32_i64(srem32(flat_segment_id_45108,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45103)[0] =
                        old_counter_45118 == groups_per_segment_45087 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45119;
            
            is_last_group_45119 = ((__local bool *) sync_arr_mem_45103)[0];
            if (is_last_group_45119) {
                if (local_tid_45097 == 0) {
                    old_counter_45118 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45094)[sext_i32_i64(srem32(flat_segment_id_45108,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_45087));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45120 =
                            sdiv_up64(groups_per_segment_45087,
                                      segred_group_sizze_37338);
                    
                    x_37342 = 0.0F;
                    for (int64_t i_45121 = 0; i_45121 < read_per_thread_45120;
                         i_45121++) {
                        int64_t group_res_id_45122 =
                                sext_i32_i64(local_tid_45097) *
                                read_per_thread_45120 + i_45121;
                        int64_t index_of_group_res_45123 =
                                sext_i32_i64(flat_segment_id_45108) *
                                groups_per_segment_45087 + group_res_id_45122;
                        
                        if (slt64(group_res_id_45122,
                                  groups_per_segment_45087)) {
                            x_37343 = ((__global
                                        float *) group_res_arr_mem_45092)[index_of_group_res_45123 *
                                                                          segred_group_sizze_37338];
                            
                            float defunc_1_op_res_37344;
                            
                            defunc_1_op_res_37344 = x_37342 + x_37343;
                            x_37342 = defunc_1_op_res_37344;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45101)[sext_i32_i64(local_tid_45097)] =
                    x_37342;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45124;
                    int32_t skip_waves_45125;
                    
                    skip_waves_45125 = 1;
                    
                    float x_45112;
                    float x_45113;
                    
                    offset_45124 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45097,
                                  sext_i64_i32(segred_group_sizze_37338))) {
                            x_45112 = ((__local
                                        float *) red_arr_mem_45101)[sext_i32_i64(local_tid_45097 +
                                                                    offset_45124)];
                        }
                    }
                    offset_45124 = 1;
                    while (slt32(offset_45124, wave_sizze_45099)) {
                        if (slt32(local_tid_45097 + offset_45124,
                                  sext_i64_i32(segred_group_sizze_37338)) &&
                            ((local_tid_45097 - squot32(local_tid_45097,
                                                        wave_sizze_45099) *
                              wave_sizze_45099) & (2 * offset_45124 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45113 = ((volatile __local
                                            float *) red_arr_mem_45101)[sext_i32_i64(local_tid_45097 +
                                                                        offset_45124)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45114 = x_45112 + x_45113;
                                
                                x_45112 = defunc_1_op_res_45114;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45101)[sext_i32_i64(local_tid_45097)] =
                                    x_45112;
                            }
                        }
                        offset_45124 *= 2;
                    }
                    while (slt32(skip_waves_45125,
                                 squot32(sext_i64_i32(segred_group_sizze_37338) +
                                         wave_sizze_45099 - 1,
                                         wave_sizze_45099))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45124 = skip_waves_45125 * wave_sizze_45099;
                        if (slt32(local_tid_45097 + offset_45124,
                                  sext_i64_i32(segred_group_sizze_37338)) &&
                            ((local_tid_45097 - squot32(local_tid_45097,
                                                        wave_sizze_45099) *
                              wave_sizze_45099) == 0 &&
                             (squot32(local_tid_45097, wave_sizze_45099) & (2 *
                                                                            skip_waves_45125 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45113 = ((__local
                                            float *) red_arr_mem_45101)[sext_i32_i64(local_tid_45097 +
                                                                        offset_45124)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45114 = x_45112 + x_45113;
                                
                                x_45112 = defunc_1_op_res_45114;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45101)[sext_i32_i64(local_tid_45097)] =
                                    x_45112;
                            }
                        }
                        skip_waves_45125 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45097 == 0) {
                            ((__global float *) mem_43687)[gtid_37187 *
                                                           (i32_res_30890 *
                                                            i32_res_30890) +
                                                           gtid_37188 *
                                                           i32_res_30890 +
                                                           gtid_37189] =
                                x_45112;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_37338
}
__kernel void mainzisegred_large_38373(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_45301_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45299_backing_aligned_1,
                                       int64_t N_30870, int64_t N_30872,
                                       int64_t i32_res_30884,
                                       int64_t i32_res_30890,
                                       int64_t num_groups_38426, __global
                                       unsigned char *images_mem_43532, __global
                                       unsigned char *binop_p_mem_43541,
                                       __global unsigned char *mem_43998,
                                       int64_t groups_per_segment_45285,
                                       int64_t elements_per_thread_45286,
                                       int64_t virt_num_groups_45287,
                                       int64_t threads_per_segment_45289,
                                       __global
                                       unsigned char *group_res_arr_mem_45290,
                                       __global
                                       unsigned char *mainzicounter_mem_45292)
{
    #define segred_group_sizze_38425 (mainzisegred_group_sizze_38367)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45301_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45301_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45299_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45299_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45294;
    int32_t local_tid_45295;
    int64_t group_sizze_45298;
    int32_t wave_sizze_45297;
    int32_t group_tid_45296;
    
    global_tid_45294 = get_global_id(0);
    local_tid_45295 = get_local_id(0);
    group_sizze_45298 = get_local_size(0);
    wave_sizze_45297 = LOCKSTEP_WIDTH;
    group_tid_45296 = get_group_id(0);
    
    int32_t phys_tid_38373;
    
    phys_tid_38373 = global_tid_45294;
    
    __local char *red_arr_mem_45299;
    
    red_arr_mem_45299 = (__local char *) red_arr_mem_45299_backing_0;
    
    __local char *sync_arr_mem_45301;
    
    sync_arr_mem_45301 = (__local char *) sync_arr_mem_45301_backing_1;
    
    int32_t phys_group_id_45303;
    
    phys_group_id_45303 = get_group_id(0);
    for (int32_t i_45304 = 0; i_45304 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45287) - phys_group_id_45303,
                   sext_i64_i32(num_groups_38426)); i_45304++) {
        int32_t virt_group_id_45305 = phys_group_id_45303 + i_45304 *
                sext_i64_i32(num_groups_38426);
        int32_t flat_segment_id_45306 = squot32(virt_group_id_45305,
                                                sext_i64_i32(groups_per_segment_45285));
        int64_t global_tid_45307 = srem64(sext_i32_i64(virt_group_id_45305) *
                                          segred_group_sizze_38425 +
                                          sext_i32_i64(local_tid_45295),
                                          segred_group_sizze_38425 *
                                          groups_per_segment_45285);
        int64_t gtid_38362 = squot64(sext_i32_i64(flat_segment_id_45306),
                                     i32_res_30890);
        int64_t gtid_38363 = sext_i32_i64(flat_segment_id_45306) -
                squot64(sext_i32_i64(flat_segment_id_45306), i32_res_30890) *
                i32_res_30890;
        int64_t gtid_38372;
        float x_acc_45308;
        int64_t chunk_sizze_45309;
        
        chunk_sizze_45309 = smin64(elements_per_thread_45286,
                                   sdiv_up64(i32_res_30884 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45307)),
                                             threads_per_segment_45289));
        
        float x_38429;
        float x_38430;
        
        // neutral-initialise the accumulators
        {
            x_acc_45308 = 0.0F;
        }
        for (int64_t i_45313 = 0; i_45313 < chunk_sizze_45309; i_45313++) {
            gtid_38372 = sext_i32_i64(sext_i64_i32(global_tid_45307)) +
                threads_per_segment_45289 * i_45313;
            // apply map function
            {
                float x_38435 = ((__global
                                  float *) images_mem_43532)[gtid_38362 *
                                                             N_30872 +
                                                             gtid_38372];
                bool isnan_res_38436;
                
                isnan_res_38436 = futrts_isnan32(x_38435);
                
                float defunc_1_f_res_38437;
                
                if (isnan_res_38436) {
                    defunc_1_f_res_38437 = 0.0F;
                } else {
                    float x_38434 = ((__global
                                      float *) binop_p_mem_43541)[gtid_38363 *
                                                                  N_30870 +
                                                                  gtid_38372];
                    float defunc_1_f_res_f_res_38438 = x_38434 * x_38435;
                    
                    defunc_1_f_res_38437 = defunc_1_f_res_f_res_38438;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_38429 = x_acc_45308;
                }
                // load new values
                {
                    x_38430 = defunc_1_f_res_38437;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_38431 = x_38429 + x_38430;
                    
                    // store in accumulator
                    {
                        x_acc_45308 = defunc_1_op_res_38431;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_38429 = x_acc_45308;
            ((__local
              float *) red_arr_mem_45299)[sext_i32_i64(local_tid_45295)] =
                x_38429;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45314;
        int32_t skip_waves_45315;
        
        skip_waves_45315 = 1;
        
        float x_45310;
        float x_45311;
        
        offset_45314 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45295,
                      sext_i64_i32(segred_group_sizze_38425))) {
                x_45310 = ((__local
                            float *) red_arr_mem_45299)[sext_i32_i64(local_tid_45295 +
                                                        offset_45314)];
            }
        }
        offset_45314 = 1;
        while (slt32(offset_45314, wave_sizze_45297)) {
            if (slt32(local_tid_45295 + offset_45314,
                      sext_i64_i32(segred_group_sizze_38425)) &&
                ((local_tid_45295 - squot32(local_tid_45295, wave_sizze_45297) *
                  wave_sizze_45297) & (2 * offset_45314 - 1)) == 0) {
                // read array element
                {
                    x_45311 = ((volatile __local
                                float *) red_arr_mem_45299)[sext_i32_i64(local_tid_45295 +
                                                            offset_45314)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45312 = x_45310 + x_45311;
                    
                    x_45310 = defunc_1_op_res_45312;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45299)[sext_i32_i64(local_tid_45295)] =
                        x_45310;
                }
            }
            offset_45314 *= 2;
        }
        while (slt32(skip_waves_45315,
                     squot32(sext_i64_i32(segred_group_sizze_38425) +
                             wave_sizze_45297 - 1, wave_sizze_45297))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45314 = skip_waves_45315 * wave_sizze_45297;
            if (slt32(local_tid_45295 + offset_45314,
                      sext_i64_i32(segred_group_sizze_38425)) &&
                ((local_tid_45295 - squot32(local_tid_45295, wave_sizze_45297) *
                  wave_sizze_45297) == 0 && (squot32(local_tid_45295,
                                                     wave_sizze_45297) & (2 *
                                                                          skip_waves_45315 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45311 = ((__local
                                float *) red_arr_mem_45299)[sext_i32_i64(local_tid_45295 +
                                                            offset_45314)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45312 = x_45310 + x_45311;
                    
                    x_45310 = defunc_1_op_res_45312;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45299)[sext_i32_i64(local_tid_45295)] =
                        x_45310;
                }
            }
            skip_waves_45315 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45295) == 0) {
                x_acc_45308 = x_45310;
            }
        }
        if (groups_per_segment_45285 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45295 == 0) {
                    ((__global float *) mem_43998)[gtid_38362 * i32_res_30890 +
                                                   gtid_38363] = x_acc_45308;
                }
            }
        } else {
            int32_t old_counter_45316;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45295 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45290)[sext_i32_i64(virt_group_id_45305) *
                                                        segred_group_sizze_38425] =
                        x_acc_45308;
                    mem_fence_global();
                    old_counter_45316 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45292)[sext_i32_i64(srem32(flat_segment_id_45306,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45301)[0] =
                        old_counter_45316 == groups_per_segment_45285 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45317;
            
            is_last_group_45317 = ((__local bool *) sync_arr_mem_45301)[0];
            if (is_last_group_45317) {
                if (local_tid_45295 == 0) {
                    old_counter_45316 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45292)[sext_i32_i64(srem32(flat_segment_id_45306,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_45285));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45318 =
                            sdiv_up64(groups_per_segment_45285,
                                      segred_group_sizze_38425);
                    
                    x_38429 = 0.0F;
                    for (int64_t i_45319 = 0; i_45319 < read_per_thread_45318;
                         i_45319++) {
                        int64_t group_res_id_45320 =
                                sext_i32_i64(local_tid_45295) *
                                read_per_thread_45318 + i_45319;
                        int64_t index_of_group_res_45321 =
                                sext_i32_i64(flat_segment_id_45306) *
                                groups_per_segment_45285 + group_res_id_45320;
                        
                        if (slt64(group_res_id_45320,
                                  groups_per_segment_45285)) {
                            x_38430 = ((__global
                                        float *) group_res_arr_mem_45290)[index_of_group_res_45321 *
                                                                          segred_group_sizze_38425];
                            
                            float defunc_1_op_res_38431;
                            
                            defunc_1_op_res_38431 = x_38429 + x_38430;
                            x_38429 = defunc_1_op_res_38431;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45299)[sext_i32_i64(local_tid_45295)] =
                    x_38429;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45322;
                    int32_t skip_waves_45323;
                    
                    skip_waves_45323 = 1;
                    
                    float x_45310;
                    float x_45311;
                    
                    offset_45322 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45295,
                                  sext_i64_i32(segred_group_sizze_38425))) {
                            x_45310 = ((__local
                                        float *) red_arr_mem_45299)[sext_i32_i64(local_tid_45295 +
                                                                    offset_45322)];
                        }
                    }
                    offset_45322 = 1;
                    while (slt32(offset_45322, wave_sizze_45297)) {
                        if (slt32(local_tid_45295 + offset_45322,
                                  sext_i64_i32(segred_group_sizze_38425)) &&
                            ((local_tid_45295 - squot32(local_tid_45295,
                                                        wave_sizze_45297) *
                              wave_sizze_45297) & (2 * offset_45322 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45311 = ((volatile __local
                                            float *) red_arr_mem_45299)[sext_i32_i64(local_tid_45295 +
                                                                        offset_45322)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45312 = x_45310 + x_45311;
                                
                                x_45310 = defunc_1_op_res_45312;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45299)[sext_i32_i64(local_tid_45295)] =
                                    x_45310;
                            }
                        }
                        offset_45322 *= 2;
                    }
                    while (slt32(skip_waves_45323,
                                 squot32(sext_i64_i32(segred_group_sizze_38425) +
                                         wave_sizze_45297 - 1,
                                         wave_sizze_45297))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45322 = skip_waves_45323 * wave_sizze_45297;
                        if (slt32(local_tid_45295 + offset_45322,
                                  sext_i64_i32(segred_group_sizze_38425)) &&
                            ((local_tid_45295 - squot32(local_tid_45295,
                                                        wave_sizze_45297) *
                              wave_sizze_45297) == 0 &&
                             (squot32(local_tid_45295, wave_sizze_45297) & (2 *
                                                                            skip_waves_45323 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45311 = ((__local
                                            float *) red_arr_mem_45299)[sext_i32_i64(local_tid_45295 +
                                                                        offset_45322)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45312 = x_45310 + x_45311;
                                
                                x_45310 = defunc_1_op_res_45312;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45299)[sext_i32_i64(local_tid_45295)] =
                                    x_45310;
                            }
                        }
                        skip_waves_45323 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45295 == 0) {
                            ((__global float *) mem_43998)[gtid_38362 *
                                                           i32_res_30890 +
                                                           gtid_38363] =
                                x_45310;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38425
}
__kernel void mainzisegred_large_38510(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_45389_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45387_backing_aligned_1,
                                       int64_t i32_res_30890,
                                       int64_t num_groups_38559, __global
                                       unsigned char *defunc_3_map_res_mem_43783,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_44004,
                                       __global unsigned char *mem_44064,
                                       int64_t groups_per_segment_45373,
                                       int64_t elements_per_thread_45374,
                                       int64_t virt_num_groups_45375,
                                       int64_t threads_per_segment_45377,
                                       __global
                                       unsigned char *group_res_arr_mem_45378,
                                       __global
                                       unsigned char *mainzicounter_mem_45380)
{
    #define segred_group_sizze_38558 (mainzisegred_group_sizze_38504)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45389_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45389_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45387_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45387_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45382;
    int32_t local_tid_45383;
    int64_t group_sizze_45386;
    int32_t wave_sizze_45385;
    int32_t group_tid_45384;
    
    global_tid_45382 = get_global_id(0);
    local_tid_45383 = get_local_id(0);
    group_sizze_45386 = get_local_size(0);
    wave_sizze_45385 = LOCKSTEP_WIDTH;
    group_tid_45384 = get_group_id(0);
    
    int32_t phys_tid_38510;
    
    phys_tid_38510 = global_tid_45382;
    
    __local char *red_arr_mem_45387;
    
    red_arr_mem_45387 = (__local char *) red_arr_mem_45387_backing_0;
    
    __local char *sync_arr_mem_45389;
    
    sync_arr_mem_45389 = (__local char *) sync_arr_mem_45389_backing_1;
    
    int32_t phys_group_id_45391;
    
    phys_group_id_45391 = get_group_id(0);
    for (int32_t i_45392 = 0; i_45392 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45375) - phys_group_id_45391,
                   sext_i64_i32(num_groups_38559)); i_45392++) {
        int32_t virt_group_id_45393 = phys_group_id_45391 + i_45392 *
                sext_i64_i32(num_groups_38559);
        int32_t flat_segment_id_45394 = squot32(virt_group_id_45393,
                                                sext_i64_i32(groups_per_segment_45373));
        int64_t global_tid_45395 = srem64(sext_i32_i64(virt_group_id_45393) *
                                          segred_group_sizze_38558 +
                                          sext_i32_i64(local_tid_45383),
                                          segred_group_sizze_38558 *
                                          groups_per_segment_45373);
        int64_t gtid_38499 = squot64(sext_i32_i64(flat_segment_id_45394),
                                     i32_res_30890);
        int64_t gtid_38500 = sext_i32_i64(flat_segment_id_45394) -
                squot64(sext_i32_i64(flat_segment_id_45394), i32_res_30890) *
                i32_res_30890;
        int64_t gtid_38509;
        float x_acc_45396;
        int64_t chunk_sizze_45397;
        
        chunk_sizze_45397 = smin64(elements_per_thread_45374,
                                   sdiv_up64(i32_res_30890 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45395)),
                                             threads_per_segment_45377));
        
        float x_38562;
        float x_38563;
        
        // neutral-initialise the accumulators
        {
            x_acc_45396 = 0.0F;
        }
        for (int64_t i_45401 = 0; i_45401 < chunk_sizze_45397; i_45401++) {
            gtid_38509 = sext_i32_i64(sext_i64_i32(global_tid_45395)) +
                threads_per_segment_45377 * i_45401;
            // apply map function
            {
                float x_38568 = ((__global
                                  float *) defunc_3_map_res_mem_44004)[gtid_38499 *
                                                                       i32_res_30890 +
                                                                       gtid_38509];
                float x_38569 = ((__global
                                  float *) defunc_3_map_res_mem_43783)[gtid_38499 *
                                                                       (i32_res_30890 *
                                                                        i32_res_30890) +
                                                                       gtid_38500 *
                                                                       i32_res_30890 +
                                                                       gtid_38509];
                float defunc_1_f_res_38570 = x_38568 * x_38569;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_38562 = x_acc_45396;
                }
                // load new values
                {
                    x_38563 = defunc_1_f_res_38570;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_38564 = x_38562 + x_38563;
                    
                    // store in accumulator
                    {
                        x_acc_45396 = defunc_1_op_res_38564;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_38562 = x_acc_45396;
            ((__local
              float *) red_arr_mem_45387)[sext_i32_i64(local_tid_45383)] =
                x_38562;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45402;
        int32_t skip_waves_45403;
        
        skip_waves_45403 = 1;
        
        float x_45398;
        float x_45399;
        
        offset_45402 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45383,
                      sext_i64_i32(segred_group_sizze_38558))) {
                x_45398 = ((__local
                            float *) red_arr_mem_45387)[sext_i32_i64(local_tid_45383 +
                                                        offset_45402)];
            }
        }
        offset_45402 = 1;
        while (slt32(offset_45402, wave_sizze_45385)) {
            if (slt32(local_tid_45383 + offset_45402,
                      sext_i64_i32(segred_group_sizze_38558)) &&
                ((local_tid_45383 - squot32(local_tid_45383, wave_sizze_45385) *
                  wave_sizze_45385) & (2 * offset_45402 - 1)) == 0) {
                // read array element
                {
                    x_45399 = ((volatile __local
                                float *) red_arr_mem_45387)[sext_i32_i64(local_tid_45383 +
                                                            offset_45402)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45400 = x_45398 + x_45399;
                    
                    x_45398 = defunc_1_op_res_45400;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45387)[sext_i32_i64(local_tid_45383)] =
                        x_45398;
                }
            }
            offset_45402 *= 2;
        }
        while (slt32(skip_waves_45403,
                     squot32(sext_i64_i32(segred_group_sizze_38558) +
                             wave_sizze_45385 - 1, wave_sizze_45385))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45402 = skip_waves_45403 * wave_sizze_45385;
            if (slt32(local_tid_45383 + offset_45402,
                      sext_i64_i32(segred_group_sizze_38558)) &&
                ((local_tid_45383 - squot32(local_tid_45383, wave_sizze_45385) *
                  wave_sizze_45385) == 0 && (squot32(local_tid_45383,
                                                     wave_sizze_45385) & (2 *
                                                                          skip_waves_45403 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45399 = ((__local
                                float *) red_arr_mem_45387)[sext_i32_i64(local_tid_45383 +
                                                            offset_45402)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45400 = x_45398 + x_45399;
                    
                    x_45398 = defunc_1_op_res_45400;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45387)[sext_i32_i64(local_tid_45383)] =
                        x_45398;
                }
            }
            skip_waves_45403 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45383) == 0) {
                x_acc_45396 = x_45398;
            }
        }
        if (groups_per_segment_45373 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45383 == 0) {
                    ((__global float *) mem_44064)[gtid_38499 * i32_res_30890 +
                                                   gtid_38500] = x_acc_45396;
                }
            }
        } else {
            int32_t old_counter_45404;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45383 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45378)[sext_i32_i64(virt_group_id_45393) *
                                                        segred_group_sizze_38558] =
                        x_acc_45396;
                    mem_fence_global();
                    old_counter_45404 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45380)[sext_i32_i64(srem32(flat_segment_id_45394,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45389)[0] =
                        old_counter_45404 == groups_per_segment_45373 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45405;
            
            is_last_group_45405 = ((__local bool *) sync_arr_mem_45389)[0];
            if (is_last_group_45405) {
                if (local_tid_45383 == 0) {
                    old_counter_45404 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45380)[sext_i32_i64(srem32(flat_segment_id_45394,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_45373));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45406 =
                            sdiv_up64(groups_per_segment_45373,
                                      segred_group_sizze_38558);
                    
                    x_38562 = 0.0F;
                    for (int64_t i_45407 = 0; i_45407 < read_per_thread_45406;
                         i_45407++) {
                        int64_t group_res_id_45408 =
                                sext_i32_i64(local_tid_45383) *
                                read_per_thread_45406 + i_45407;
                        int64_t index_of_group_res_45409 =
                                sext_i32_i64(flat_segment_id_45394) *
                                groups_per_segment_45373 + group_res_id_45408;
                        
                        if (slt64(group_res_id_45408,
                                  groups_per_segment_45373)) {
                            x_38563 = ((__global
                                        float *) group_res_arr_mem_45378)[index_of_group_res_45409 *
                                                                          segred_group_sizze_38558];
                            
                            float defunc_1_op_res_38564;
                            
                            defunc_1_op_res_38564 = x_38562 + x_38563;
                            x_38562 = defunc_1_op_res_38564;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45387)[sext_i32_i64(local_tid_45383)] =
                    x_38562;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45410;
                    int32_t skip_waves_45411;
                    
                    skip_waves_45411 = 1;
                    
                    float x_45398;
                    float x_45399;
                    
                    offset_45410 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45383,
                                  sext_i64_i32(segred_group_sizze_38558))) {
                            x_45398 = ((__local
                                        float *) red_arr_mem_45387)[sext_i32_i64(local_tid_45383 +
                                                                    offset_45410)];
                        }
                    }
                    offset_45410 = 1;
                    while (slt32(offset_45410, wave_sizze_45385)) {
                        if (slt32(local_tid_45383 + offset_45410,
                                  sext_i64_i32(segred_group_sizze_38558)) &&
                            ((local_tid_45383 - squot32(local_tid_45383,
                                                        wave_sizze_45385) *
                              wave_sizze_45385) & (2 * offset_45410 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45399 = ((volatile __local
                                            float *) red_arr_mem_45387)[sext_i32_i64(local_tid_45383 +
                                                                        offset_45410)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45400 = x_45398 + x_45399;
                                
                                x_45398 = defunc_1_op_res_45400;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45387)[sext_i32_i64(local_tid_45383)] =
                                    x_45398;
                            }
                        }
                        offset_45410 *= 2;
                    }
                    while (slt32(skip_waves_45411,
                                 squot32(sext_i64_i32(segred_group_sizze_38558) +
                                         wave_sizze_45385 - 1,
                                         wave_sizze_45385))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45410 = skip_waves_45411 * wave_sizze_45385;
                        if (slt32(local_tid_45383 + offset_45410,
                                  sext_i64_i32(segred_group_sizze_38558)) &&
                            ((local_tid_45383 - squot32(local_tid_45383,
                                                        wave_sizze_45385) *
                              wave_sizze_45385) == 0 &&
                             (squot32(local_tid_45383, wave_sizze_45385) & (2 *
                                                                            skip_waves_45411 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45399 = ((__local
                                            float *) red_arr_mem_45387)[sext_i32_i64(local_tid_45383 +
                                                                        offset_45410)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45400 = x_45398 + x_45399;
                                
                                x_45398 = defunc_1_op_res_45400;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45387)[sext_i32_i64(local_tid_45383)] =
                                    x_45398;
                            }
                        }
                        skip_waves_45411 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45383 == 0) {
                            ((__global float *) mem_44064)[gtid_38499 *
                                                           i32_res_30890 +
                                                           gtid_38500] =
                                x_45398;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38558
}
__kernel void mainzisegred_large_38640(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_45521_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45519_backing_aligned_1,
                                       int64_t N_30870, int64_t i32_res_30890,
                                       int64_t num_groups_38687, __global
                                       unsigned char *mem_43548, __global
                                       unsigned char *defunc_4_map_res_mem_44070,
                                       __global unsigned char *mem_44288,
                                       int64_t groups_per_segment_45505,
                                       int64_t elements_per_thread_45506,
                                       int64_t virt_num_groups_45507,
                                       int64_t threads_per_segment_45509,
                                       __global
                                       unsigned char *group_res_arr_mem_45510,
                                       __global
                                       unsigned char *mainzicounter_mem_45512)
{
    #define segred_group_sizze_38686 (mainzisegred_group_sizze_38634)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45521_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45521_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45519_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45519_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45514;
    int32_t local_tid_45515;
    int64_t group_sizze_45518;
    int32_t wave_sizze_45517;
    int32_t group_tid_45516;
    
    global_tid_45514 = get_global_id(0);
    local_tid_45515 = get_local_id(0);
    group_sizze_45518 = get_local_size(0);
    wave_sizze_45517 = LOCKSTEP_WIDTH;
    group_tid_45516 = get_group_id(0);
    
    int32_t phys_tid_38640;
    
    phys_tid_38640 = global_tid_45514;
    
    __local char *red_arr_mem_45519;
    
    red_arr_mem_45519 = (__local char *) red_arr_mem_45519_backing_0;
    
    __local char *sync_arr_mem_45521;
    
    sync_arr_mem_45521 = (__local char *) sync_arr_mem_45521_backing_1;
    
    int32_t phys_group_id_45523;
    
    phys_group_id_45523 = get_group_id(0);
    for (int32_t i_45524 = 0; i_45524 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45507) - phys_group_id_45523,
                   sext_i64_i32(num_groups_38687)); i_45524++) {
        int32_t virt_group_id_45525 = phys_group_id_45523 + i_45524 *
                sext_i64_i32(num_groups_38687);
        int32_t flat_segment_id_45526 = squot32(virt_group_id_45525,
                                                sext_i64_i32(groups_per_segment_45505));
        int64_t global_tid_45527 = srem64(sext_i32_i64(virt_group_id_45525) *
                                          segred_group_sizze_38686 +
                                          sext_i32_i64(local_tid_45515),
                                          segred_group_sizze_38686 *
                                          groups_per_segment_45505);
        int64_t gtid_38629 = squot64(sext_i32_i64(flat_segment_id_45526),
                                     N_30870);
        int64_t gtid_38630 = sext_i32_i64(flat_segment_id_45526) -
                squot64(sext_i32_i64(flat_segment_id_45526), N_30870) * N_30870;
        int64_t gtid_38639;
        float x_acc_45528;
        int64_t chunk_sizze_45529;
        
        chunk_sizze_45529 = smin64(elements_per_thread_45506,
                                   sdiv_up64(i32_res_30890 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45527)),
                                             threads_per_segment_45509));
        
        float x_38690;
        float x_38691;
        
        // neutral-initialise the accumulators
        {
            x_acc_45528 = 0.0F;
        }
        for (int64_t i_45533 = 0; i_45533 < chunk_sizze_45529; i_45533++) {
            gtid_38639 = sext_i32_i64(sext_i64_i32(global_tid_45527)) +
                threads_per_segment_45509 * i_45533;
            // apply map function
            {
                float x_38695 = ((__global
                                  float *) defunc_4_map_res_mem_44070)[gtid_38629 *
                                                                       i32_res_30890 +
                                                                       gtid_38639];
                float x_38696 = ((__global float *) mem_43548)[gtid_38630 *
                                                               i32_res_30890 +
                                                               gtid_38639];
                float defunc_1_f_res_38697 = x_38695 * x_38696;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_38690 = x_acc_45528;
                }
                // load new values
                {
                    x_38691 = defunc_1_f_res_38697;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_38692 = x_38690 + x_38691;
                    
                    // store in accumulator
                    {
                        x_acc_45528 = defunc_1_op_res_38692;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_38690 = x_acc_45528;
            ((__local
              float *) red_arr_mem_45519)[sext_i32_i64(local_tid_45515)] =
                x_38690;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45534;
        int32_t skip_waves_45535;
        
        skip_waves_45535 = 1;
        
        float x_45530;
        float x_45531;
        
        offset_45534 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45515,
                      sext_i64_i32(segred_group_sizze_38686))) {
                x_45530 = ((__local
                            float *) red_arr_mem_45519)[sext_i32_i64(local_tid_45515 +
                                                        offset_45534)];
            }
        }
        offset_45534 = 1;
        while (slt32(offset_45534, wave_sizze_45517)) {
            if (slt32(local_tid_45515 + offset_45534,
                      sext_i64_i32(segred_group_sizze_38686)) &&
                ((local_tid_45515 - squot32(local_tid_45515, wave_sizze_45517) *
                  wave_sizze_45517) & (2 * offset_45534 - 1)) == 0) {
                // read array element
                {
                    x_45531 = ((volatile __local
                                float *) red_arr_mem_45519)[sext_i32_i64(local_tid_45515 +
                                                            offset_45534)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45532 = x_45530 + x_45531;
                    
                    x_45530 = defunc_1_op_res_45532;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45519)[sext_i32_i64(local_tid_45515)] =
                        x_45530;
                }
            }
            offset_45534 *= 2;
        }
        while (slt32(skip_waves_45535,
                     squot32(sext_i64_i32(segred_group_sizze_38686) +
                             wave_sizze_45517 - 1, wave_sizze_45517))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45534 = skip_waves_45535 * wave_sizze_45517;
            if (slt32(local_tid_45515 + offset_45534,
                      sext_i64_i32(segred_group_sizze_38686)) &&
                ((local_tid_45515 - squot32(local_tid_45515, wave_sizze_45517) *
                  wave_sizze_45517) == 0 && (squot32(local_tid_45515,
                                                     wave_sizze_45517) & (2 *
                                                                          skip_waves_45535 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45531 = ((__local
                                float *) red_arr_mem_45519)[sext_i32_i64(local_tid_45515 +
                                                            offset_45534)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45532 = x_45530 + x_45531;
                    
                    x_45530 = defunc_1_op_res_45532;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45519)[sext_i32_i64(local_tid_45515)] =
                        x_45530;
                }
            }
            skip_waves_45535 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45515) == 0) {
                x_acc_45528 = x_45530;
            }
        }
        if (groups_per_segment_45505 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45515 == 0) {
                    ((__global float *) mem_44288)[gtid_38629 * N_30870 +
                                                   gtid_38630] = x_acc_45528;
                }
            }
        } else {
            int32_t old_counter_45536;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45515 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45510)[sext_i32_i64(virt_group_id_45525) *
                                                        segred_group_sizze_38686] =
                        x_acc_45528;
                    mem_fence_global();
                    old_counter_45536 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45512)[sext_i32_i64(srem32(flat_segment_id_45526,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45521)[0] =
                        old_counter_45536 == groups_per_segment_45505 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45537;
            
            is_last_group_45537 = ((__local bool *) sync_arr_mem_45521)[0];
            if (is_last_group_45537) {
                if (local_tid_45515 == 0) {
                    old_counter_45536 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45512)[sext_i32_i64(srem32(flat_segment_id_45526,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_45505));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45538 =
                            sdiv_up64(groups_per_segment_45505,
                                      segred_group_sizze_38686);
                    
                    x_38690 = 0.0F;
                    for (int64_t i_45539 = 0; i_45539 < read_per_thread_45538;
                         i_45539++) {
                        int64_t group_res_id_45540 =
                                sext_i32_i64(local_tid_45515) *
                                read_per_thread_45538 + i_45539;
                        int64_t index_of_group_res_45541 =
                                sext_i32_i64(flat_segment_id_45526) *
                                groups_per_segment_45505 + group_res_id_45540;
                        
                        if (slt64(group_res_id_45540,
                                  groups_per_segment_45505)) {
                            x_38691 = ((__global
                                        float *) group_res_arr_mem_45510)[index_of_group_res_45541 *
                                                                          segred_group_sizze_38686];
                            
                            float defunc_1_op_res_38692;
                            
                            defunc_1_op_res_38692 = x_38690 + x_38691;
                            x_38690 = defunc_1_op_res_38692;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45519)[sext_i32_i64(local_tid_45515)] =
                    x_38690;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45542;
                    int32_t skip_waves_45543;
                    
                    skip_waves_45543 = 1;
                    
                    float x_45530;
                    float x_45531;
                    
                    offset_45542 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45515,
                                  sext_i64_i32(segred_group_sizze_38686))) {
                            x_45530 = ((__local
                                        float *) red_arr_mem_45519)[sext_i32_i64(local_tid_45515 +
                                                                    offset_45542)];
                        }
                    }
                    offset_45542 = 1;
                    while (slt32(offset_45542, wave_sizze_45517)) {
                        if (slt32(local_tid_45515 + offset_45542,
                                  sext_i64_i32(segred_group_sizze_38686)) &&
                            ((local_tid_45515 - squot32(local_tid_45515,
                                                        wave_sizze_45517) *
                              wave_sizze_45517) & (2 * offset_45542 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45531 = ((volatile __local
                                            float *) red_arr_mem_45519)[sext_i32_i64(local_tid_45515 +
                                                                        offset_45542)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45532 = x_45530 + x_45531;
                                
                                x_45530 = defunc_1_op_res_45532;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45519)[sext_i32_i64(local_tid_45515)] =
                                    x_45530;
                            }
                        }
                        offset_45542 *= 2;
                    }
                    while (slt32(skip_waves_45543,
                                 squot32(sext_i64_i32(segred_group_sizze_38686) +
                                         wave_sizze_45517 - 1,
                                         wave_sizze_45517))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45542 = skip_waves_45543 * wave_sizze_45517;
                        if (slt32(local_tid_45515 + offset_45542,
                                  sext_i64_i32(segred_group_sizze_38686)) &&
                            ((local_tid_45515 - squot32(local_tid_45515,
                                                        wave_sizze_45517) *
                              wave_sizze_45517) == 0 &&
                             (squot32(local_tid_45515, wave_sizze_45517) & (2 *
                                                                            skip_waves_45543 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45531 = ((__local
                                            float *) red_arr_mem_45519)[sext_i32_i64(local_tid_45515 +
                                                                        offset_45542)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45532 = x_45530 + x_45531;
                                
                                x_45530 = defunc_1_op_res_45532;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45519)[sext_i32_i64(local_tid_45515)] =
                                    x_45530;
                            }
                        }
                        skip_waves_45543 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45515 == 0) {
                            ((__global float *) mem_44288)[gtid_38629 *
                                                           N_30870 +
                                                           gtid_38630] =
                                x_45530;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38686
}
__kernel void mainzisegred_large_39206(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_45775_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45773_backing_aligned_1,
                                       int64_t N_30870, int64_t i32_res_30884,
                                       int64_t num_groups_39253, __global
                                       unsigned char *defunc_4_map_res_mem_44332,
                                       __global unsigned char *mem_44383,
                                       __global unsigned char *mem_44386,
                                       int64_t groups_per_segment_45759,
                                       int64_t elements_per_thread_45760,
                                       int64_t virt_num_groups_45761,
                                       int64_t threads_per_segment_45763,
                                       __global
                                       unsigned char *group_res_arr_mem_45764,
                                       __global
                                       unsigned char *mainzicounter_mem_45766)
{
    #define segred_group_sizze_39252 (mainzisegred_group_sizze_39200)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45775_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45775_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45773_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45773_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45768;
    int32_t local_tid_45769;
    int64_t group_sizze_45772;
    int32_t wave_sizze_45771;
    int32_t group_tid_45770;
    
    global_tid_45768 = get_global_id(0);
    local_tid_45769 = get_local_id(0);
    group_sizze_45772 = get_local_size(0);
    wave_sizze_45771 = LOCKSTEP_WIDTH;
    group_tid_45770 = get_group_id(0);
    
    int32_t phys_tid_39206;
    
    phys_tid_39206 = global_tid_45768;
    
    __local char *red_arr_mem_45773;
    
    red_arr_mem_45773 = (__local char *) red_arr_mem_45773_backing_0;
    
    __local char *sync_arr_mem_45775;
    
    sync_arr_mem_45775 = (__local char *) sync_arr_mem_45775_backing_1;
    
    int32_t phys_group_id_45777;
    
    phys_group_id_45777 = get_group_id(0);
    for (int32_t i_45778 = 0; i_45778 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45761) - phys_group_id_45777,
                   sext_i64_i32(num_groups_39253)); i_45778++) {
        int32_t virt_group_id_45779 = phys_group_id_45777 + i_45778 *
                sext_i64_i32(num_groups_39253);
        int32_t flat_segment_id_45780 = squot32(virt_group_id_45779,
                                                sext_i64_i32(groups_per_segment_45759));
        int64_t global_tid_45781 = srem64(sext_i32_i64(virt_group_id_45779) *
                                          segred_group_sizze_39252 +
                                          sext_i32_i64(local_tid_45769),
                                          segred_group_sizze_39252 *
                                          groups_per_segment_45759);
        int64_t gtid_39197 = sext_i32_i64(flat_segment_id_45780);
        int64_t gtid_39205;
        float x_acc_45782;
        int64_t chunk_sizze_45783;
        
        chunk_sizze_45783 = smin64(elements_per_thread_45760,
                                   sdiv_up64(i32_res_30884 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45781)),
                                             threads_per_segment_45763));
        
        float x_39256;
        float x_39257;
        
        // neutral-initialise the accumulators
        {
            x_acc_45782 = 0.0F;
        }
        for (int64_t i_45787 = 0; i_45787 < chunk_sizze_45783; i_45787++) {
            gtid_39205 = sext_i32_i64(sext_i64_i32(global_tid_45781)) +
                threads_per_segment_45763 * i_45787;
            // apply map function
            {
                int32_t defunc_0_f_res_39260 = ((__global
                                                 int32_t *) mem_44383)[gtid_39197];
                int32_t index_primexp_41523 = sext_i64_i32(gtid_39205);
                bool cond_39262 = slt32(index_primexp_41523,
                                        defunc_0_f_res_39260);
                float defunc_0_f_res_39263;
                
                if (cond_39262) {
                    int64_t i_39264 = sext_i32_i64(index_primexp_41523);
                    float defunc_0_f_res_t_res_39265 = ((__global
                                                         float *) defunc_4_map_res_mem_44332)[gtid_39197 *
                                                                                              N_30870 +
                                                                                              i_39264];
                    
                    defunc_0_f_res_39263 = defunc_0_f_res_t_res_39265;
                } else {
                    defunc_0_f_res_39263 = 0.0F;
                }
                
                float defunc_0_f_res_39266 = defunc_0_f_res_39263 *
                      defunc_0_f_res_39263;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_39256 = x_acc_45782;
                }
                // load new values
                {
                    x_39257 = defunc_0_f_res_39266;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_39258 = x_39256 + x_39257;
                    
                    // store in accumulator
                    {
                        x_acc_45782 = defunc_1_op_res_39258;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_39256 = x_acc_45782;
            ((__local
              float *) red_arr_mem_45773)[sext_i32_i64(local_tid_45769)] =
                x_39256;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45788;
        int32_t skip_waves_45789;
        
        skip_waves_45789 = 1;
        
        float x_45784;
        float x_45785;
        
        offset_45788 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45769,
                      sext_i64_i32(segred_group_sizze_39252))) {
                x_45784 = ((__local
                            float *) red_arr_mem_45773)[sext_i32_i64(local_tid_45769 +
                                                        offset_45788)];
            }
        }
        offset_45788 = 1;
        while (slt32(offset_45788, wave_sizze_45771)) {
            if (slt32(local_tid_45769 + offset_45788,
                      sext_i64_i32(segred_group_sizze_39252)) &&
                ((local_tid_45769 - squot32(local_tid_45769, wave_sizze_45771) *
                  wave_sizze_45771) & (2 * offset_45788 - 1)) == 0) {
                // read array element
                {
                    x_45785 = ((volatile __local
                                float *) red_arr_mem_45773)[sext_i32_i64(local_tid_45769 +
                                                            offset_45788)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45786 = x_45784 + x_45785;
                    
                    x_45784 = defunc_1_op_res_45786;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45773)[sext_i32_i64(local_tid_45769)] =
                        x_45784;
                }
            }
            offset_45788 *= 2;
        }
        while (slt32(skip_waves_45789,
                     squot32(sext_i64_i32(segred_group_sizze_39252) +
                             wave_sizze_45771 - 1, wave_sizze_45771))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45788 = skip_waves_45789 * wave_sizze_45771;
            if (slt32(local_tid_45769 + offset_45788,
                      sext_i64_i32(segred_group_sizze_39252)) &&
                ((local_tid_45769 - squot32(local_tid_45769, wave_sizze_45771) *
                  wave_sizze_45771) == 0 && (squot32(local_tid_45769,
                                                     wave_sizze_45771) & (2 *
                                                                          skip_waves_45789 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45785 = ((__local
                                float *) red_arr_mem_45773)[sext_i32_i64(local_tid_45769 +
                                                            offset_45788)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45786 = x_45784 + x_45785;
                    
                    x_45784 = defunc_1_op_res_45786;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45773)[sext_i32_i64(local_tid_45769)] =
                        x_45784;
                }
            }
            skip_waves_45789 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45769) == 0) {
                x_acc_45782 = x_45784;
            }
        }
        if (groups_per_segment_45759 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45769 == 0) {
                    ((__global float *) mem_44386)[gtid_39197] = x_acc_45782;
                }
            }
        } else {
            int32_t old_counter_45790;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45769 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45764)[sext_i32_i64(virt_group_id_45779) *
                                                        segred_group_sizze_39252] =
                        x_acc_45782;
                    mem_fence_global();
                    old_counter_45790 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45766)[sext_i32_i64(srem32(flat_segment_id_45780,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45775)[0] =
                        old_counter_45790 == groups_per_segment_45759 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45791;
            
            is_last_group_45791 = ((__local bool *) sync_arr_mem_45775)[0];
            if (is_last_group_45791) {
                if (local_tid_45769 == 0) {
                    old_counter_45790 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45766)[sext_i32_i64(srem32(flat_segment_id_45780,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_45759));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45792 =
                            sdiv_up64(groups_per_segment_45759,
                                      segred_group_sizze_39252);
                    
                    x_39256 = 0.0F;
                    for (int64_t i_45793 = 0; i_45793 < read_per_thread_45792;
                         i_45793++) {
                        int64_t group_res_id_45794 =
                                sext_i32_i64(local_tid_45769) *
                                read_per_thread_45792 + i_45793;
                        int64_t index_of_group_res_45795 =
                                sext_i32_i64(flat_segment_id_45780) *
                                groups_per_segment_45759 + group_res_id_45794;
                        
                        if (slt64(group_res_id_45794,
                                  groups_per_segment_45759)) {
                            x_39257 = ((__global
                                        float *) group_res_arr_mem_45764)[index_of_group_res_45795 *
                                                                          segred_group_sizze_39252];
                            
                            float defunc_1_op_res_39258;
                            
                            defunc_1_op_res_39258 = x_39256 + x_39257;
                            x_39256 = defunc_1_op_res_39258;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45773)[sext_i32_i64(local_tid_45769)] =
                    x_39256;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45796;
                    int32_t skip_waves_45797;
                    
                    skip_waves_45797 = 1;
                    
                    float x_45784;
                    float x_45785;
                    
                    offset_45796 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45769,
                                  sext_i64_i32(segred_group_sizze_39252))) {
                            x_45784 = ((__local
                                        float *) red_arr_mem_45773)[sext_i32_i64(local_tid_45769 +
                                                                    offset_45796)];
                        }
                    }
                    offset_45796 = 1;
                    while (slt32(offset_45796, wave_sizze_45771)) {
                        if (slt32(local_tid_45769 + offset_45796,
                                  sext_i64_i32(segred_group_sizze_39252)) &&
                            ((local_tid_45769 - squot32(local_tid_45769,
                                                        wave_sizze_45771) *
                              wave_sizze_45771) & (2 * offset_45796 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45785 = ((volatile __local
                                            float *) red_arr_mem_45773)[sext_i32_i64(local_tid_45769 +
                                                                        offset_45796)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45786 = x_45784 + x_45785;
                                
                                x_45784 = defunc_1_op_res_45786;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45773)[sext_i32_i64(local_tid_45769)] =
                                    x_45784;
                            }
                        }
                        offset_45796 *= 2;
                    }
                    while (slt32(skip_waves_45797,
                                 squot32(sext_i64_i32(segred_group_sizze_39252) +
                                         wave_sizze_45771 - 1,
                                         wave_sizze_45771))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45796 = skip_waves_45797 * wave_sizze_45771;
                        if (slt32(local_tid_45769 + offset_45796,
                                  sext_i64_i32(segred_group_sizze_39252)) &&
                            ((local_tid_45769 - squot32(local_tid_45769,
                                                        wave_sizze_45771) *
                              wave_sizze_45771) == 0 &&
                             (squot32(local_tid_45769, wave_sizze_45771) & (2 *
                                                                            skip_waves_45797 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45785 = ((__local
                                            float *) red_arr_mem_45773)[sext_i32_i64(local_tid_45769 +
                                                                        offset_45796)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45786 = x_45784 + x_45785;
                                
                                x_45784 = defunc_1_op_res_45786;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45773)[sext_i32_i64(local_tid_45769)] =
                                    x_45784;
                            }
                        }
                        skip_waves_45797 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45769 == 0) {
                            ((__global float *) mem_44386)[gtid_39197] =
                                x_45784;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39252
}
__kernel void mainzisegred_large_39227(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_45715_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45713_backing_aligned_1,
                                       int64_t N_30872, int64_t i32_res_30884,
                                       int64_t num_groups_39239, __global
                                       unsigned char *images_mem_43532, __global
                                       unsigned char *mem_44383,
                                       int64_t groups_per_segment_45699,
                                       int64_t elements_per_thread_45700,
                                       int64_t virt_num_groups_45701,
                                       int64_t threads_per_segment_45703,
                                       __global
                                       unsigned char *group_res_arr_mem_45704,
                                       __global
                                       unsigned char *mainzicounter_mem_45706)
{
    #define segred_group_sizze_39238 (mainzisegred_group_sizze_39221)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45715_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45715_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45713_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45713_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45708;
    int32_t local_tid_45709;
    int64_t group_sizze_45712;
    int32_t wave_sizze_45711;
    int32_t group_tid_45710;
    
    global_tid_45708 = get_global_id(0);
    local_tid_45709 = get_local_id(0);
    group_sizze_45712 = get_local_size(0);
    wave_sizze_45711 = LOCKSTEP_WIDTH;
    group_tid_45710 = get_group_id(0);
    
    int32_t phys_tid_39227;
    
    phys_tid_39227 = global_tid_45708;
    
    __local char *red_arr_mem_45713;
    
    red_arr_mem_45713 = (__local char *) red_arr_mem_45713_backing_0;
    
    __local char *sync_arr_mem_45715;
    
    sync_arr_mem_45715 = (__local char *) sync_arr_mem_45715_backing_1;
    
    int32_t phys_group_id_45717;
    
    phys_group_id_45717 = get_group_id(0);
    for (int32_t i_45718 = 0; i_45718 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45701) - phys_group_id_45717,
                   sext_i64_i32(num_groups_39239)); i_45718++) {
        int32_t virt_group_id_45719 = phys_group_id_45717 + i_45718 *
                sext_i64_i32(num_groups_39239);
        int32_t flat_segment_id_45720 = squot32(virt_group_id_45719,
                                                sext_i64_i32(groups_per_segment_45699));
        int64_t global_tid_45721 = srem64(sext_i32_i64(virt_group_id_45719) *
                                          segred_group_sizze_39238 +
                                          sext_i32_i64(local_tid_45709),
                                          segred_group_sizze_39238 *
                                          groups_per_segment_45699);
        int64_t gtid_39218 = sext_i32_i64(flat_segment_id_45720);
        int64_t gtid_39226;
        int32_t x_acc_45722;
        int64_t chunk_sizze_45723;
        
        chunk_sizze_45723 = smin64(elements_per_thread_45700,
                                   sdiv_up64(i32_res_30884 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45721)),
                                             threads_per_segment_45703));
        
        int32_t x_39242;
        int32_t x_39243;
        
        // neutral-initialise the accumulators
        {
            x_acc_45722 = 0;
        }
        for (int64_t i_45727 = 0; i_45727 < chunk_sizze_45723; i_45727++) {
            gtid_39226 = sext_i32_i64(sext_i64_i32(global_tid_45721)) +
                threads_per_segment_45703 * i_45727;
            // apply map function
            {
                float x_39246 = ((__global
                                  float *) images_mem_43532)[gtid_39218 *
                                                             N_30872 +
                                                             gtid_39226];
                bool isnan_res_39247;
                
                isnan_res_39247 = futrts_isnan32(x_39246);
                
                bool cond_39248 = !isnan_res_39247;
                int32_t defunc_0_f_res_39249 = btoi_bool_i32(cond_39248);
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_39242 = x_acc_45722;
                }
                // load new values
                {
                    x_39243 = defunc_0_f_res_39249;
                }
                // apply reduction operator
                {
                    int32_t defunc_1_op_res_39244 = add32(x_39242, x_39243);
                    
                    // store in accumulator
                    {
                        x_acc_45722 = defunc_1_op_res_39244;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_39242 = x_acc_45722;
            ((__local
              int32_t *) red_arr_mem_45713)[sext_i32_i64(local_tid_45709)] =
                x_39242;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45728;
        int32_t skip_waves_45729;
        
        skip_waves_45729 = 1;
        
        int32_t x_45724;
        int32_t x_45725;
        
        offset_45728 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45709,
                      sext_i64_i32(segred_group_sizze_39238))) {
                x_45724 = ((__local
                            int32_t *) red_arr_mem_45713)[sext_i32_i64(local_tid_45709 +
                                                          offset_45728)];
            }
        }
        offset_45728 = 1;
        while (slt32(offset_45728, wave_sizze_45711)) {
            if (slt32(local_tid_45709 + offset_45728,
                      sext_i64_i32(segred_group_sizze_39238)) &&
                ((local_tid_45709 - squot32(local_tid_45709, wave_sizze_45711) *
                  wave_sizze_45711) & (2 * offset_45728 - 1)) == 0) {
                // read array element
                {
                    x_45725 = ((volatile __local
                                int32_t *) red_arr_mem_45713)[sext_i32_i64(local_tid_45709 +
                                                              offset_45728)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_45726 = add32(x_45724, x_45725);
                    
                    x_45724 = defunc_1_op_res_45726;
                }
                // write result of operation
                {
                    ((volatile __local
                      int32_t *) red_arr_mem_45713)[sext_i32_i64(local_tid_45709)] =
                        x_45724;
                }
            }
            offset_45728 *= 2;
        }
        while (slt32(skip_waves_45729,
                     squot32(sext_i64_i32(segred_group_sizze_39238) +
                             wave_sizze_45711 - 1, wave_sizze_45711))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45728 = skip_waves_45729 * wave_sizze_45711;
            if (slt32(local_tid_45709 + offset_45728,
                      sext_i64_i32(segred_group_sizze_39238)) &&
                ((local_tid_45709 - squot32(local_tid_45709, wave_sizze_45711) *
                  wave_sizze_45711) == 0 && (squot32(local_tid_45709,
                                                     wave_sizze_45711) & (2 *
                                                                          skip_waves_45729 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45725 = ((__local
                                int32_t *) red_arr_mem_45713)[sext_i32_i64(local_tid_45709 +
                                                              offset_45728)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_45726 = add32(x_45724, x_45725);
                    
                    x_45724 = defunc_1_op_res_45726;
                }
                // write result of operation
                {
                    ((__local
                      int32_t *) red_arr_mem_45713)[sext_i32_i64(local_tid_45709)] =
                        x_45724;
                }
            }
            skip_waves_45729 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45709) == 0) {
                x_acc_45722 = x_45724;
            }
        }
        if (groups_per_segment_45699 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45709 == 0) {
                    ((__global int32_t *) mem_44383)[gtid_39218] = x_acc_45722;
                }
            }
        } else {
            int32_t old_counter_45730;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45709 == 0) {
                    ((__global
                      int32_t *) group_res_arr_mem_45704)[sext_i32_i64(virt_group_id_45719) *
                                                          segred_group_sizze_39238] =
                        x_acc_45722;
                    mem_fence_global();
                    old_counter_45730 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45706)[sext_i32_i64(srem32(flat_segment_id_45720,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45715)[0] =
                        old_counter_45730 == groups_per_segment_45699 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45731;
            
            is_last_group_45731 = ((__local bool *) sync_arr_mem_45715)[0];
            if (is_last_group_45731) {
                if (local_tid_45709 == 0) {
                    old_counter_45730 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45706)[sext_i32_i64(srem32(flat_segment_id_45720,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_45699));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45732 =
                            sdiv_up64(groups_per_segment_45699,
                                      segred_group_sizze_39238);
                    
                    x_39242 = 0;
                    for (int64_t i_45733 = 0; i_45733 < read_per_thread_45732;
                         i_45733++) {
                        int64_t group_res_id_45734 =
                                sext_i32_i64(local_tid_45709) *
                                read_per_thread_45732 + i_45733;
                        int64_t index_of_group_res_45735 =
                                sext_i32_i64(flat_segment_id_45720) *
                                groups_per_segment_45699 + group_res_id_45734;
                        
                        if (slt64(group_res_id_45734,
                                  groups_per_segment_45699)) {
                            x_39243 = ((__global
                                        int32_t *) group_res_arr_mem_45704)[index_of_group_res_45735 *
                                                                            segred_group_sizze_39238];
                            
                            int32_t defunc_1_op_res_39244;
                            
                            defunc_1_op_res_39244 = add32(x_39242, x_39243);
                            x_39242 = defunc_1_op_res_39244;
                        }
                    }
                }
                ((__local
                  int32_t *) red_arr_mem_45713)[sext_i32_i64(local_tid_45709)] =
                    x_39242;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45736;
                    int32_t skip_waves_45737;
                    
                    skip_waves_45737 = 1;
                    
                    int32_t x_45724;
                    int32_t x_45725;
                    
                    offset_45736 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45709,
                                  sext_i64_i32(segred_group_sizze_39238))) {
                            x_45724 = ((__local
                                        int32_t *) red_arr_mem_45713)[sext_i32_i64(local_tid_45709 +
                                                                      offset_45736)];
                        }
                    }
                    offset_45736 = 1;
                    while (slt32(offset_45736, wave_sizze_45711)) {
                        if (slt32(local_tid_45709 + offset_45736,
                                  sext_i64_i32(segred_group_sizze_39238)) &&
                            ((local_tid_45709 - squot32(local_tid_45709,
                                                        wave_sizze_45711) *
                              wave_sizze_45711) & (2 * offset_45736 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45725 = ((volatile __local
                                            int32_t *) red_arr_mem_45713)[sext_i32_i64(local_tid_45709 +
                                                                          offset_45736)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_45726 = add32(x_45724,
                                                                      x_45725);
                                
                                x_45724 = defunc_1_op_res_45726;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_45713)[sext_i32_i64(local_tid_45709)] =
                                    x_45724;
                            }
                        }
                        offset_45736 *= 2;
                    }
                    while (slt32(skip_waves_45737,
                                 squot32(sext_i64_i32(segred_group_sizze_39238) +
                                         wave_sizze_45711 - 1,
                                         wave_sizze_45711))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45736 = skip_waves_45737 * wave_sizze_45711;
                        if (slt32(local_tid_45709 + offset_45736,
                                  sext_i64_i32(segred_group_sizze_39238)) &&
                            ((local_tid_45709 - squot32(local_tid_45709,
                                                        wave_sizze_45711) *
                              wave_sizze_45711) == 0 &&
                             (squot32(local_tid_45709, wave_sizze_45711) & (2 *
                                                                            skip_waves_45737 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45725 = ((__local
                                            int32_t *) red_arr_mem_45713)[sext_i32_i64(local_tid_45709 +
                                                                          offset_45736)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_45726 = add32(x_45724,
                                                                      x_45725);
                                
                                x_45724 = defunc_1_op_res_45726;
                            }
                            // write result of operation
                            {
                                ((__local
                                  int32_t *) red_arr_mem_45713)[sext_i32_i64(local_tid_45709)] =
                                    x_45724;
                            }
                        }
                        skip_waves_45737 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45709 == 0) {
                            ((__global int32_t *) mem_44383)[gtid_39218] =
                                x_45724;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39238
}
__kernel void mainzisegred_large_39378(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_45884_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45882_backing_aligned_1,
                                       int64_t N_30870, int64_t i32_res_31232,
                                       int64_t num_groups_39396, __global
                                       unsigned char *defunc_4_map_res_mem_44332,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_44395,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_44396,
                                       __global unsigned char *mem_44429,
                                       int64_t groups_per_segment_45868,
                                       int64_t elements_per_thread_45869,
                                       int64_t virt_num_groups_45870,
                                       int64_t threads_per_segment_45872,
                                       __global
                                       unsigned char *group_res_arr_mem_45873,
                                       __global
                                       unsigned char *mainzicounter_mem_45875)
{
    #define segred_group_sizze_39395 (mainzisegred_group_sizze_39372)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45884_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45884_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45882_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45882_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45877;
    int32_t local_tid_45878;
    int64_t group_sizze_45881;
    int32_t wave_sizze_45880;
    int32_t group_tid_45879;
    
    global_tid_45877 = get_global_id(0);
    local_tid_45878 = get_local_id(0);
    group_sizze_45881 = get_local_size(0);
    wave_sizze_45880 = LOCKSTEP_WIDTH;
    group_tid_45879 = get_group_id(0);
    
    int32_t phys_tid_39378;
    
    phys_tid_39378 = global_tid_45877;
    
    __local char *red_arr_mem_45882;
    
    red_arr_mem_45882 = (__local char *) red_arr_mem_45882_backing_0;
    
    __local char *sync_arr_mem_45884;
    
    sync_arr_mem_45884 = (__local char *) sync_arr_mem_45884_backing_1;
    
    int32_t phys_group_id_45886;
    
    phys_group_id_45886 = get_group_id(0);
    for (int32_t i_45887 = 0; i_45887 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45870) - phys_group_id_45886,
                   sext_i64_i32(num_groups_39396)); i_45887++) {
        int32_t virt_group_id_45888 = phys_group_id_45886 + i_45887 *
                sext_i64_i32(num_groups_39396);
        int32_t flat_segment_id_45889 = squot32(virt_group_id_45888,
                                                sext_i64_i32(groups_per_segment_45868));
        int64_t global_tid_45890 = srem64(sext_i32_i64(virt_group_id_45888) *
                                          segred_group_sizze_39395 +
                                          sext_i32_i64(local_tid_45878),
                                          segred_group_sizze_39395 *
                                          groups_per_segment_45868);
        int64_t gtid_39369 = sext_i32_i64(flat_segment_id_45889);
        int64_t gtid_39377;
        float x_acc_45891;
        int64_t chunk_sizze_45892;
        
        chunk_sizze_45892 = smin64(elements_per_thread_45869,
                                   sdiv_up64(i32_res_31232 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45890)),
                                             threads_per_segment_45872));
        
        float x_39399;
        float x_39400;
        
        // neutral-initialise the accumulators
        {
            x_acc_45891 = 0.0F;
        }
        for (int64_t i_45896 = 0; i_45896 < chunk_sizze_45892; i_45896++) {
            gtid_39377 = sext_i32_i64(sext_i64_i32(global_tid_45890)) +
                threads_per_segment_45872 * i_45896;
            // apply map function
            {
                int32_t x_39404 = ((__global
                                    int32_t *) defunc_3_map_res_mem_44395)[gtid_39369];
                int32_t index_primexp_41528 = sext_i64_i32(gtid_39377);
                bool cond_39406 = slt32(index_primexp_41528, x_39404);
                float defunc_0_f_res_39407;
                
                if (cond_39406) {
                    int32_t x_39403 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44396)[gtid_39369];
                    int32_t x_39408 = add32(x_39403, index_primexp_41528);
                    int32_t x_39409 = sub32(x_39408, x_39404);
                    int32_t i_39410 = add32(1, x_39409);
                    int64_t i_39411 = sext_i32_i64(i_39410);
                    float defunc_0_f_res_t_res_39412 = ((__global
                                                         float *) defunc_4_map_res_mem_44332)[gtid_39369 *
                                                                                              N_30870 +
                                                                                              i_39411];
                    
                    defunc_0_f_res_39407 = defunc_0_f_res_t_res_39412;
                } else {
                    defunc_0_f_res_39407 = 0.0F;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_39399 = x_acc_45891;
                }
                // load new values
                {
                    x_39400 = defunc_0_f_res_39407;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_39401 = x_39399 + x_39400;
                    
                    // store in accumulator
                    {
                        x_acc_45891 = defunc_1_op_res_39401;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_39399 = x_acc_45891;
            ((__local
              float *) red_arr_mem_45882)[sext_i32_i64(local_tid_45878)] =
                x_39399;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45897;
        int32_t skip_waves_45898;
        
        skip_waves_45898 = 1;
        
        float x_45893;
        float x_45894;
        
        offset_45897 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45878,
                      sext_i64_i32(segred_group_sizze_39395))) {
                x_45893 = ((__local
                            float *) red_arr_mem_45882)[sext_i32_i64(local_tid_45878 +
                                                        offset_45897)];
            }
        }
        offset_45897 = 1;
        while (slt32(offset_45897, wave_sizze_45880)) {
            if (slt32(local_tid_45878 + offset_45897,
                      sext_i64_i32(segred_group_sizze_39395)) &&
                ((local_tid_45878 - squot32(local_tid_45878, wave_sizze_45880) *
                  wave_sizze_45880) & (2 * offset_45897 - 1)) == 0) {
                // read array element
                {
                    x_45894 = ((volatile __local
                                float *) red_arr_mem_45882)[sext_i32_i64(local_tid_45878 +
                                                            offset_45897)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45895 = x_45893 + x_45894;
                    
                    x_45893 = defunc_1_op_res_45895;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45882)[sext_i32_i64(local_tid_45878)] =
                        x_45893;
                }
            }
            offset_45897 *= 2;
        }
        while (slt32(skip_waves_45898,
                     squot32(sext_i64_i32(segred_group_sizze_39395) +
                             wave_sizze_45880 - 1, wave_sizze_45880))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45897 = skip_waves_45898 * wave_sizze_45880;
            if (slt32(local_tid_45878 + offset_45897,
                      sext_i64_i32(segred_group_sizze_39395)) &&
                ((local_tid_45878 - squot32(local_tid_45878, wave_sizze_45880) *
                  wave_sizze_45880) == 0 && (squot32(local_tid_45878,
                                                     wave_sizze_45880) & (2 *
                                                                          skip_waves_45898 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45894 = ((__local
                                float *) red_arr_mem_45882)[sext_i32_i64(local_tid_45878 +
                                                            offset_45897)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45895 = x_45893 + x_45894;
                    
                    x_45893 = defunc_1_op_res_45895;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45882)[sext_i32_i64(local_tid_45878)] =
                        x_45893;
                }
            }
            skip_waves_45898 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45878) == 0) {
                x_acc_45891 = x_45893;
            }
        }
        if (groups_per_segment_45868 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45878 == 0) {
                    ((__global float *) mem_44429)[gtid_39369] = x_acc_45891;
                }
            }
        } else {
            int32_t old_counter_45899;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45878 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45873)[sext_i32_i64(virt_group_id_45888) *
                                                        segred_group_sizze_39395] =
                        x_acc_45891;
                    mem_fence_global();
                    old_counter_45899 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45875)[sext_i32_i64(srem32(flat_segment_id_45889,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45884)[0] =
                        old_counter_45899 == groups_per_segment_45868 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45900;
            
            is_last_group_45900 = ((__local bool *) sync_arr_mem_45884)[0];
            if (is_last_group_45900) {
                if (local_tid_45878 == 0) {
                    old_counter_45899 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45875)[sext_i32_i64(srem32(flat_segment_id_45889,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_45868));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45901 =
                            sdiv_up64(groups_per_segment_45868,
                                      segred_group_sizze_39395);
                    
                    x_39399 = 0.0F;
                    for (int64_t i_45902 = 0; i_45902 < read_per_thread_45901;
                         i_45902++) {
                        int64_t group_res_id_45903 =
                                sext_i32_i64(local_tid_45878) *
                                read_per_thread_45901 + i_45902;
                        int64_t index_of_group_res_45904 =
                                sext_i32_i64(flat_segment_id_45889) *
                                groups_per_segment_45868 + group_res_id_45903;
                        
                        if (slt64(group_res_id_45903,
                                  groups_per_segment_45868)) {
                            x_39400 = ((__global
                                        float *) group_res_arr_mem_45873)[index_of_group_res_45904 *
                                                                          segred_group_sizze_39395];
                            
                            float defunc_1_op_res_39401;
                            
                            defunc_1_op_res_39401 = x_39399 + x_39400;
                            x_39399 = defunc_1_op_res_39401;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45882)[sext_i32_i64(local_tid_45878)] =
                    x_39399;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45905;
                    int32_t skip_waves_45906;
                    
                    skip_waves_45906 = 1;
                    
                    float x_45893;
                    float x_45894;
                    
                    offset_45905 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45878,
                                  sext_i64_i32(segred_group_sizze_39395))) {
                            x_45893 = ((__local
                                        float *) red_arr_mem_45882)[sext_i32_i64(local_tid_45878 +
                                                                    offset_45905)];
                        }
                    }
                    offset_45905 = 1;
                    while (slt32(offset_45905, wave_sizze_45880)) {
                        if (slt32(local_tid_45878 + offset_45905,
                                  sext_i64_i32(segred_group_sizze_39395)) &&
                            ((local_tid_45878 - squot32(local_tid_45878,
                                                        wave_sizze_45880) *
                              wave_sizze_45880) & (2 * offset_45905 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45894 = ((volatile __local
                                            float *) red_arr_mem_45882)[sext_i32_i64(local_tid_45878 +
                                                                        offset_45905)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45895 = x_45893 + x_45894;
                                
                                x_45893 = defunc_1_op_res_45895;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45882)[sext_i32_i64(local_tid_45878)] =
                                    x_45893;
                            }
                        }
                        offset_45905 *= 2;
                    }
                    while (slt32(skip_waves_45906,
                                 squot32(sext_i64_i32(segred_group_sizze_39395) +
                                         wave_sizze_45880 - 1,
                                         wave_sizze_45880))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45905 = skip_waves_45906 * wave_sizze_45880;
                        if (slt32(local_tid_45878 + offset_45905,
                                  sext_i64_i32(segred_group_sizze_39395)) &&
                            ((local_tid_45878 - squot32(local_tid_45878,
                                                        wave_sizze_45880) *
                              wave_sizze_45880) == 0 &&
                             (squot32(local_tid_45878, wave_sizze_45880) & (2 *
                                                                            skip_waves_45906 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45894 = ((__local
                                            float *) red_arr_mem_45882)[sext_i32_i64(local_tid_45878 +
                                                                        offset_45905)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45895 = x_45893 + x_45894;
                                
                                x_45893 = defunc_1_op_res_45895;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45882)[sext_i32_i64(local_tid_45878)] =
                                    x_45893;
                            }
                        }
                        skip_waves_45906 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45878 == 0) {
                            ((__global float *) mem_44429)[gtid_39369] =
                                x_45893;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39395
}
__kernel void mainzisegred_large_40927(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_46115_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_46113_backing_aligned_1,
                                       __local volatile
                                       int64_t *red_arr_mem_46111_backing_aligned_2,
                                       __local volatile
                                       int64_t *red_arr_mem_46109_backing_aligned_3,
                                       int64_t iota32_arg_31257,
                                       int64_t num_groups_41098, __global
                                       unsigned char *mem_44435, __global
                                       unsigned char *mem_44595, __global
                                       unsigned char *mem_44597, __global
                                       unsigned char *mem_44601, __global
                                       unsigned char *mem_44604, __global
                                       unsigned char *mem_44606, __global
                                       unsigned char *mem_44608,
                                       int64_t groups_per_segment_46091,
                                       int64_t elements_per_thread_46092,
                                       int64_t virt_num_groups_46093, __global
                                       unsigned char *group_res_arr_mem_46096,
                                       __global
                                       unsigned char *group_res_arr_mem_46098,
                                       __global
                                       unsigned char *group_res_arr_mem_46100,
                                       __global
                                       unsigned char *mainzicounter_mem_46102)
{
    #define segred_group_sizze_41097 (mainzisegred_group_sizze_40921)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_46115_backing_3 =
                          (__local volatile
                           char *) sync_arr_mem_46115_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46113_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_46113_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_46111_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_46111_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_46109_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46109_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46104;
    int32_t local_tid_46105;
    int64_t group_sizze_46108;
    int32_t wave_sizze_46107;
    int32_t group_tid_46106;
    
    global_tid_46104 = get_global_id(0);
    local_tid_46105 = get_local_id(0);
    group_sizze_46108 = get_local_size(0);
    wave_sizze_46107 = LOCKSTEP_WIDTH;
    group_tid_46106 = get_group_id(0);
    
    int32_t phys_tid_40927;
    
    phys_tid_40927 = global_tid_46104;
    
    __local char *red_arr_mem_46109;
    
    red_arr_mem_46109 = (__local char *) red_arr_mem_46109_backing_0;
    
    __local char *red_arr_mem_46111;
    
    red_arr_mem_46111 = (__local char *) red_arr_mem_46111_backing_1;
    
    __local char *red_arr_mem_46113;
    
    red_arr_mem_46113 = (__local char *) red_arr_mem_46113_backing_2;
    
    __local char *sync_arr_mem_46115;
    
    sync_arr_mem_46115 = (__local char *) sync_arr_mem_46115_backing_3;
    
    int32_t phys_group_id_46117;
    
    phys_group_id_46117 = get_group_id(0);
    for (int32_t i_46118 = 0; i_46118 <
         sdiv_up32(sext_i64_i32(virt_num_groups_46093) - phys_group_id_46117,
                   sext_i64_i32(num_groups_41098)); i_46118++) {
        int32_t virt_group_id_46119 = phys_group_id_46117 + i_46118 *
                sext_i64_i32(num_groups_41098);
        int32_t flat_segment_id_46120 = squot32(virt_group_id_46119,
                                                sext_i64_i32(groups_per_segment_46091));
        int64_t global_tid_46121 = srem64(sext_i32_i64(virt_group_id_46119) *
                                          segred_group_sizze_41097 +
                                          sext_i32_i64(local_tid_46105),
                                          segred_group_sizze_41097 *
                                          groups_per_segment_46091);
        int64_t gtid_40918 = sext_i32_i64(flat_segment_id_46120);
        int64_t gtid_40926;
        bool x_acc_46122;
        int32_t x_acc_46123;
        float x_acc_46124;
        int64_t chunk_sizze_46125;
        int64_t starting_point_46126;
        
        starting_point_46126 = sext_i32_i64(sext_i64_i32(global_tid_46121)) *
            elements_per_thread_46092;
        
        int64_t remaining_elements_46127;
        
        remaining_elements_46127 = iota32_arg_31257 - starting_point_46126;
        if (sle64(remaining_elements_46127, 0) || sle64(iota32_arg_31257,
                                                        starting_point_46126)) {
            chunk_sizze_46125 = 0;
        } else {
            if (slt64(iota32_arg_31257,
                      (sext_i32_i64(sext_i64_i32(global_tid_46121)) + 1) *
                      elements_per_thread_46092)) {
                chunk_sizze_46125 = iota32_arg_31257 -
                    sext_i32_i64(sext_i64_i32(global_tid_46121)) *
                    elements_per_thread_46092;
            } else {
                chunk_sizze_46125 = elements_per_thread_46092;
            }
        }
        
        bool x_41103;
        int32_t x_41104;
        float x_41105;
        bool x_41106;
        int32_t x_41107;
        float x_41108;
        
        // neutral-initialise the accumulators
        {
            x_acc_46122 = 0;
            x_acc_46123 = -1;
            x_acc_46124 = 0.0F;
        }
        for (int64_t i_46142 = 0; i_46142 < elements_per_thread_46092;
             i_46142++) {
            gtid_40926 = sext_i32_i64(local_tid_46105) +
                (sext_i32_i64(squot32(sext_i64_i32(global_tid_46121),
                                      sext_i64_i32(segred_group_sizze_41097))) *
                 elements_per_thread_46092 + i_46142) *
                segred_group_sizze_41097;
            if (slt64(gtid_40926, iota32_arg_31257)) {
                // apply map function
                {
                    int32_t y_41117 = ((__global
                                        int32_t *) mem_44597)[gtid_40918];
                    float y_41118 = ((__global float *) mem_44595)[gtid_40918];
                    float x_41122 = ((__global float *) mem_44601)[gtid_40918 *
                                                                   iota32_arg_31257 +
                                                                   gtid_40926];
                    float x_41123 = ((__global float *) mem_44435)[gtid_40926];
                    int32_t index_primexp_41545 = sext_i64_i32(gtid_40926);
                    float defunc_0_f_res_41126 = x_41122 / y_41118;
                    bool cond_41127 = slt32(index_primexp_41545, y_41117);
                    bool isnan_res_41128;
                    
                    isnan_res_41128 = futrts_isnan32(defunc_0_f_res_41126);
                    
                    bool cond_t_res_41129 = !isnan_res_41128;
                    bool x_41130 = cond_41127 && cond_t_res_41129;
                    float abs_res_41131 = (float) fabs(defunc_0_f_res_41126);
                    bool defunc_2_f_res_t_res_41132 = x_41123 < abs_res_41131;
                    bool x_41133 = x_41130 && defunc_2_f_res_t_res_41132;
                    float defunc_1_f_res_41134;
                    
                    if (cond_41127) {
                        defunc_1_f_res_41134 = defunc_0_f_res_41126;
                    } else {
                        defunc_1_f_res_41134 = 0.0F;
                    }
                    // save map-out results
                    { }
                    // load accumulator
                    {
                        x_41103 = x_acc_46122;
                        x_41104 = x_acc_46123;
                        x_41105 = x_acc_46124;
                    }
                    // load new values
                    {
                        x_41106 = x_41133;
                        x_41107 = index_primexp_41545;
                        x_41108 = defunc_1_f_res_41134;
                    }
                    // apply reduction operator
                    {
                        bool defunc_1_op_res_41109;
                        int32_t defunc_1_op_res_41110;
                        
                        if (x_41103) {
                            defunc_1_op_res_41109 = x_41103;
                            defunc_1_op_res_41110 = x_41104;
                        } else {
                            bool x_41111 = x_41106 && x_41106;
                            bool x_41112 = !x_41106;
                            bool y_41113 = x_41103 && x_41112;
                            bool defunc_1_op_res_f_res_41114 = x_41111 ||
                                 y_41113;
                            int32_t defunc_1_op_res_f_res_41115;
                            
                            if (x_41106) {
                                defunc_1_op_res_f_res_41115 = x_41107;
                            } else {
                                defunc_1_op_res_f_res_41115 = x_41104;
                            }
                            defunc_1_op_res_41109 = defunc_1_op_res_f_res_41114;
                            defunc_1_op_res_41110 = defunc_1_op_res_f_res_41115;
                        }
                        
                        float defunc_1_op_res_41116 = x_41105 + x_41108;
                        
                        // store in accumulator
                        {
                            x_acc_46122 = defunc_1_op_res_41109;
                            x_acc_46123 = defunc_1_op_res_41110;
                            x_acc_46124 = defunc_1_op_res_41116;
                        }
                    }
                }
            }
            // to reduce current chunk, first store our result in memory
            {
                x_41103 = x_acc_46122;
                x_41104 = x_acc_46123;
                x_41105 = x_acc_46124;
                ((__local
                  bool *) red_arr_mem_46109)[sext_i32_i64(local_tid_46105)] =
                    x_41103;
                ((__local
                  int32_t *) red_arr_mem_46111)[sext_i32_i64(local_tid_46105)] =
                    x_41104;
                ((__local
                  float *) red_arr_mem_46113)[sext_i32_i64(local_tid_46105)] =
                    x_41105;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t offset_46143;
            int32_t skip_waves_46144;
            
            skip_waves_46144 = 1;
            
            bool x_46128;
            int32_t x_46129;
            float x_46130;
            bool x_46131;
            int32_t x_46132;
            float x_46133;
            
            offset_46143 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_46105,
                          sext_i64_i32(segred_group_sizze_41097))) {
                    x_46128 = ((__local
                                bool *) red_arr_mem_46109)[sext_i32_i64(local_tid_46105 +
                                                           offset_46143)];
                    x_46129 = ((__local
                                int32_t *) red_arr_mem_46111)[sext_i32_i64(local_tid_46105 +
                                                              offset_46143)];
                    x_46130 = ((__local
                                float *) red_arr_mem_46113)[sext_i32_i64(local_tid_46105 +
                                                            offset_46143)];
                }
            }
            offset_46143 = 1;
            while (slt32(offset_46143, wave_sizze_46107)) {
                if (slt32(local_tid_46105 + offset_46143,
                          sext_i64_i32(segred_group_sizze_41097)) &&
                    ((local_tid_46105 - squot32(local_tid_46105,
                                                wave_sizze_46107) *
                      wave_sizze_46107) & (2 * offset_46143 - 1)) == 0) {
                    // read array element
                    {
                        x_46131 = ((volatile __local
                                    bool *) red_arr_mem_46109)[sext_i32_i64(local_tid_46105 +
                                                               offset_46143)];
                        x_46132 = ((volatile __local
                                    int32_t *) red_arr_mem_46111)[sext_i32_i64(local_tid_46105 +
                                                                  offset_46143)];
                        x_46133 = ((volatile __local
                                    float *) red_arr_mem_46113)[sext_i32_i64(local_tid_46105 +
                                                                offset_46143)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_46134;
                        int32_t defunc_1_op_res_46135;
                        
                        if (x_46128) {
                            defunc_1_op_res_46134 = x_46128;
                            defunc_1_op_res_46135 = x_46129;
                        } else {
                            bool x_46136 = x_46131 && x_46131;
                            bool x_46137 = !x_46131;
                            bool y_46138 = x_46128 && x_46137;
                            bool defunc_1_op_res_f_res_46139 = x_46136 ||
                                 y_46138;
                            int32_t defunc_1_op_res_f_res_46140;
                            
                            if (x_46131) {
                                defunc_1_op_res_f_res_46140 = x_46132;
                            } else {
                                defunc_1_op_res_f_res_46140 = x_46129;
                            }
                            defunc_1_op_res_46134 = defunc_1_op_res_f_res_46139;
                            defunc_1_op_res_46135 = defunc_1_op_res_f_res_46140;
                        }
                        
                        float defunc_1_op_res_46141 = x_46130 + x_46133;
                        
                        x_46128 = defunc_1_op_res_46134;
                        x_46129 = defunc_1_op_res_46135;
                        x_46130 = defunc_1_op_res_46141;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          bool *) red_arr_mem_46109)[sext_i32_i64(local_tid_46105)] =
                            x_46128;
                        ((volatile __local
                          int32_t *) red_arr_mem_46111)[sext_i32_i64(local_tid_46105)] =
                            x_46129;
                        ((volatile __local
                          float *) red_arr_mem_46113)[sext_i32_i64(local_tid_46105)] =
                            x_46130;
                    }
                }
                offset_46143 *= 2;
            }
            while (slt32(skip_waves_46144,
                         squot32(sext_i64_i32(segred_group_sizze_41097) +
                                 wave_sizze_46107 - 1, wave_sizze_46107))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_46143 = skip_waves_46144 * wave_sizze_46107;
                if (slt32(local_tid_46105 + offset_46143,
                          sext_i64_i32(segred_group_sizze_41097)) &&
                    ((local_tid_46105 - squot32(local_tid_46105,
                                                wave_sizze_46107) *
                      wave_sizze_46107) == 0 && (squot32(local_tid_46105,
                                                         wave_sizze_46107) &
                                                 (2 * skip_waves_46144 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_46131 = ((__local
                                    bool *) red_arr_mem_46109)[sext_i32_i64(local_tid_46105 +
                                                               offset_46143)];
                        x_46132 = ((__local
                                    int32_t *) red_arr_mem_46111)[sext_i32_i64(local_tid_46105 +
                                                                  offset_46143)];
                        x_46133 = ((__local
                                    float *) red_arr_mem_46113)[sext_i32_i64(local_tid_46105 +
                                                                offset_46143)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_46134;
                        int32_t defunc_1_op_res_46135;
                        
                        if (x_46128) {
                            defunc_1_op_res_46134 = x_46128;
                            defunc_1_op_res_46135 = x_46129;
                        } else {
                            bool x_46136 = x_46131 && x_46131;
                            bool x_46137 = !x_46131;
                            bool y_46138 = x_46128 && x_46137;
                            bool defunc_1_op_res_f_res_46139 = x_46136 ||
                                 y_46138;
                            int32_t defunc_1_op_res_f_res_46140;
                            
                            if (x_46131) {
                                defunc_1_op_res_f_res_46140 = x_46132;
                            } else {
                                defunc_1_op_res_f_res_46140 = x_46129;
                            }
                            defunc_1_op_res_46134 = defunc_1_op_res_f_res_46139;
                            defunc_1_op_res_46135 = defunc_1_op_res_f_res_46140;
                        }
                        
                        float defunc_1_op_res_46141 = x_46130 + x_46133;
                        
                        x_46128 = defunc_1_op_res_46134;
                        x_46129 = defunc_1_op_res_46135;
                        x_46130 = defunc_1_op_res_46141;
                    }
                    // write result of operation
                    {
                        ((__local
                          bool *) red_arr_mem_46109)[sext_i32_i64(local_tid_46105)] =
                            x_46128;
                        ((__local
                          int32_t *) red_arr_mem_46111)[sext_i32_i64(local_tid_46105)] =
                            x_46129;
                        ((__local
                          float *) red_arr_mem_46113)[sext_i32_i64(local_tid_46105)] =
                            x_46130;
                    }
                }
                skip_waves_46144 *= 2;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread saves the result in accumulator
            {
                if (sext_i32_i64(local_tid_46105) == 0) {
                    x_acc_46122 = x_46128;
                    x_acc_46123 = x_46129;
                    x_acc_46124 = x_46130;
                }
            }
            // first thread keeps accumulator; others reset to neutral element
            {
                if (!(sext_i32_i64(local_tid_46105) == 0)) {
                    x_acc_46122 = 0;
                    x_acc_46123 = -1;
                    x_acc_46124 = 0.0F;
                }
            }
        }
        x_41103 = x_acc_46122;
        x_41104 = x_acc_46123;
        x_41105 = x_acc_46124;
        if (groups_per_segment_46091 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_46105 == 0) {
                    ((__global bool *) mem_44604)[gtid_40918] = x_acc_46122;
                    ((__global int32_t *) mem_44606)[gtid_40918] = x_acc_46123;
                    ((__global float *) mem_44608)[gtid_40918] = x_acc_46124;
                }
            }
        } else {
            int32_t old_counter_46145;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_46105 == 0) {
                    ((__global
                      bool *) group_res_arr_mem_46096)[sext_i32_i64(virt_group_id_46119) *
                                                       segred_group_sizze_41097] =
                        x_acc_46122;
                    ((__global
                      int32_t *) group_res_arr_mem_46098)[sext_i32_i64(virt_group_id_46119) *
                                                          segred_group_sizze_41097] =
                        x_acc_46123;
                    ((__global
                      float *) group_res_arr_mem_46100)[sext_i32_i64(virt_group_id_46119) *
                                                        segred_group_sizze_41097] =
                        x_acc_46124;
                    mem_fence_global();
                    old_counter_46145 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_46102)[sext_i32_i64(srem32(flat_segment_id_46120,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_46115)[0] =
                        old_counter_46145 == groups_per_segment_46091 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_46146;
            
            is_last_group_46146 = ((__local bool *) sync_arr_mem_46115)[0];
            if (is_last_group_46146) {
                if (local_tid_46105 == 0) {
                    old_counter_46145 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_46102)[sext_i32_i64(srem32(flat_segment_id_46120,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_46091));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_46147 =
                            sdiv_up64(groups_per_segment_46091,
                                      segred_group_sizze_41097);
                    
                    x_41103 = 0;
                    x_41104 = -1;
                    x_41105 = 0.0F;
                    for (int64_t i_46148 = 0; i_46148 < read_per_thread_46147;
                         i_46148++) {
                        int64_t group_res_id_46149 =
                                sext_i32_i64(local_tid_46105) *
                                read_per_thread_46147 + i_46148;
                        int64_t index_of_group_res_46150 =
                                sext_i32_i64(flat_segment_id_46120) *
                                groups_per_segment_46091 + group_res_id_46149;
                        
                        if (slt64(group_res_id_46149,
                                  groups_per_segment_46091)) {
                            x_41106 = ((__global
                                        bool *) group_res_arr_mem_46096)[index_of_group_res_46150 *
                                                                         segred_group_sizze_41097];
                            x_41107 = ((__global
                                        int32_t *) group_res_arr_mem_46098)[index_of_group_res_46150 *
                                                                            segred_group_sizze_41097];
                            x_41108 = ((__global
                                        float *) group_res_arr_mem_46100)[index_of_group_res_46150 *
                                                                          segred_group_sizze_41097];
                            
                            bool defunc_1_op_res_41109;
                            int32_t defunc_1_op_res_41110;
                            
                            if (x_41103) {
                                defunc_1_op_res_41109 = x_41103;
                                defunc_1_op_res_41110 = x_41104;
                            } else {
                                bool x_41111 = x_41106 && x_41106;
                                bool x_41112 = !x_41106;
                                bool y_41113 = x_41103 && x_41112;
                                bool defunc_1_op_res_f_res_41114 = x_41111 ||
                                     y_41113;
                                int32_t defunc_1_op_res_f_res_41115;
                                
                                if (x_41106) {
                                    defunc_1_op_res_f_res_41115 = x_41107;
                                } else {
                                    defunc_1_op_res_f_res_41115 = x_41104;
                                }
                                defunc_1_op_res_41109 =
                                    defunc_1_op_res_f_res_41114;
                                defunc_1_op_res_41110 =
                                    defunc_1_op_res_f_res_41115;
                            }
                            
                            float defunc_1_op_res_41116 = x_41105 + x_41108;
                            
                            x_41103 = defunc_1_op_res_41109;
                            x_41104 = defunc_1_op_res_41110;
                            x_41105 = defunc_1_op_res_41116;
                        }
                    }
                }
                ((__local
                  bool *) red_arr_mem_46109)[sext_i32_i64(local_tid_46105)] =
                    x_41103;
                ((__local
                  int32_t *) red_arr_mem_46111)[sext_i32_i64(local_tid_46105)] =
                    x_41104;
                ((__local
                  float *) red_arr_mem_46113)[sext_i32_i64(local_tid_46105)] =
                    x_41105;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_46151;
                    int32_t skip_waves_46152;
                    
                    skip_waves_46152 = 1;
                    
                    bool x_46128;
                    int32_t x_46129;
                    float x_46130;
                    bool x_46131;
                    int32_t x_46132;
                    float x_46133;
                    
                    offset_46151 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_46105,
                                  sext_i64_i32(segred_group_sizze_41097))) {
                            x_46128 = ((__local
                                        bool *) red_arr_mem_46109)[sext_i32_i64(local_tid_46105 +
                                                                   offset_46151)];
                            x_46129 = ((__local
                                        int32_t *) red_arr_mem_46111)[sext_i32_i64(local_tid_46105 +
                                                                      offset_46151)];
                            x_46130 = ((__local
                                        float *) red_arr_mem_46113)[sext_i32_i64(local_tid_46105 +
                                                                    offset_46151)];
                        }
                    }
                    offset_46151 = 1;
                    while (slt32(offset_46151, wave_sizze_46107)) {
                        if (slt32(local_tid_46105 + offset_46151,
                                  sext_i64_i32(segred_group_sizze_41097)) &&
                            ((local_tid_46105 - squot32(local_tid_46105,
                                                        wave_sizze_46107) *
                              wave_sizze_46107) & (2 * offset_46151 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_46131 = ((volatile __local
                                            bool *) red_arr_mem_46109)[sext_i32_i64(local_tid_46105 +
                                                                       offset_46151)];
                                x_46132 = ((volatile __local
                                            int32_t *) red_arr_mem_46111)[sext_i32_i64(local_tid_46105 +
                                                                          offset_46151)];
                                x_46133 = ((volatile __local
                                            float *) red_arr_mem_46113)[sext_i32_i64(local_tid_46105 +
                                                                        offset_46151)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_46134;
                                int32_t defunc_1_op_res_46135;
                                
                                if (x_46128) {
                                    defunc_1_op_res_46134 = x_46128;
                                    defunc_1_op_res_46135 = x_46129;
                                } else {
                                    bool x_46136 = x_46131 && x_46131;
                                    bool x_46137 = !x_46131;
                                    bool y_46138 = x_46128 && x_46137;
                                    bool defunc_1_op_res_f_res_46139 =
                                         x_46136 || y_46138;
                                    int32_t defunc_1_op_res_f_res_46140;
                                    
                                    if (x_46131) {
                                        defunc_1_op_res_f_res_46140 = x_46132;
                                    } else {
                                        defunc_1_op_res_f_res_46140 = x_46129;
                                    }
                                    defunc_1_op_res_46134 =
                                        defunc_1_op_res_f_res_46139;
                                    defunc_1_op_res_46135 =
                                        defunc_1_op_res_f_res_46140;
                                }
                                
                                float defunc_1_op_res_46141 = x_46130 + x_46133;
                                
                                x_46128 = defunc_1_op_res_46134;
                                x_46129 = defunc_1_op_res_46135;
                                x_46130 = defunc_1_op_res_46141;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_46109)[sext_i32_i64(local_tid_46105)] =
                                    x_46128;
                                ((volatile __local
                                  int32_t *) red_arr_mem_46111)[sext_i32_i64(local_tid_46105)] =
                                    x_46129;
                                ((volatile __local
                                  float *) red_arr_mem_46113)[sext_i32_i64(local_tid_46105)] =
                                    x_46130;
                            }
                        }
                        offset_46151 *= 2;
                    }
                    while (slt32(skip_waves_46152,
                                 squot32(sext_i64_i32(segred_group_sizze_41097) +
                                         wave_sizze_46107 - 1,
                                         wave_sizze_46107))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_46151 = skip_waves_46152 * wave_sizze_46107;
                        if (slt32(local_tid_46105 + offset_46151,
                                  sext_i64_i32(segred_group_sizze_41097)) &&
                            ((local_tid_46105 - squot32(local_tid_46105,
                                                        wave_sizze_46107) *
                              wave_sizze_46107) == 0 &&
                             (squot32(local_tid_46105, wave_sizze_46107) & (2 *
                                                                            skip_waves_46152 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_46131 = ((__local
                                            bool *) red_arr_mem_46109)[sext_i32_i64(local_tid_46105 +
                                                                       offset_46151)];
                                x_46132 = ((__local
                                            int32_t *) red_arr_mem_46111)[sext_i32_i64(local_tid_46105 +
                                                                          offset_46151)];
                                x_46133 = ((__local
                                            float *) red_arr_mem_46113)[sext_i32_i64(local_tid_46105 +
                                                                        offset_46151)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_46134;
                                int32_t defunc_1_op_res_46135;
                                
                                if (x_46128) {
                                    defunc_1_op_res_46134 = x_46128;
                                    defunc_1_op_res_46135 = x_46129;
                                } else {
                                    bool x_46136 = x_46131 && x_46131;
                                    bool x_46137 = !x_46131;
                                    bool y_46138 = x_46128 && x_46137;
                                    bool defunc_1_op_res_f_res_46139 =
                                         x_46136 || y_46138;
                                    int32_t defunc_1_op_res_f_res_46140;
                                    
                                    if (x_46131) {
                                        defunc_1_op_res_f_res_46140 = x_46132;
                                    } else {
                                        defunc_1_op_res_f_res_46140 = x_46129;
                                    }
                                    defunc_1_op_res_46134 =
                                        defunc_1_op_res_f_res_46139;
                                    defunc_1_op_res_46135 =
                                        defunc_1_op_res_f_res_46140;
                                }
                                
                                float defunc_1_op_res_46141 = x_46130 + x_46133;
                                
                                x_46128 = defunc_1_op_res_46134;
                                x_46129 = defunc_1_op_res_46135;
                                x_46130 = defunc_1_op_res_46141;
                            }
                            // write result of operation
                            {
                                ((__local
                                  bool *) red_arr_mem_46109)[sext_i32_i64(local_tid_46105)] =
                                    x_46128;
                                ((__local
                                  int32_t *) red_arr_mem_46111)[sext_i32_i64(local_tid_46105)] =
                                    x_46129;
                                ((__local
                                  float *) red_arr_mem_46113)[sext_i32_i64(local_tid_46105)] =
                                    x_46130;
                            }
                        }
                        skip_waves_46152 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_46105 == 0) {
                            ((__global bool *) mem_44604)[gtid_40918] = x_46128;
                            ((__global int32_t *) mem_44606)[gtid_40918] =
                                x_46129;
                            ((__global float *) mem_44608)[gtid_40918] =
                                x_46130;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_41097
}
__kernel void mainzisegred_nonseg_39296(__global int *global_failure,
                                        __local volatile
                                        int64_t *red_arr_mem_45818_backing_aligned_0,
                                        __local volatile
                                        int64_t *sync_arr_mem_45816_backing_aligned_1,
                                        int64_t m_30871,
                                        int64_t num_groups_39291, __global
                                        unsigned char *defunc_3_map_res_mem_44395,
                                        __global unsigned char *mem_44400,
                                        __global
                                        unsigned char *mainzicounter_mem_45806,
                                        __global
                                        unsigned char *group_res_arr_mem_45808,
                                        int64_t num_threads_45810)
{
    #define segred_group_sizze_39289 (mainzisegred_group_sizze_39288)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45818_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45818_backing_aligned_0;
    __local volatile char *restrict sync_arr_mem_45816_backing_0 =
                          (__local volatile
                           char *) sync_arr_mem_45816_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45811;
    int32_t local_tid_45812;
    int64_t group_sizze_45815;
    int32_t wave_sizze_45814;
    int32_t group_tid_45813;
    
    global_tid_45811 = get_global_id(0);
    local_tid_45812 = get_local_id(0);
    group_sizze_45815 = get_local_size(0);
    wave_sizze_45814 = LOCKSTEP_WIDTH;
    group_tid_45813 = get_group_id(0);
    
    int32_t phys_tid_39296;
    
    phys_tid_39296 = global_tid_45811;
    
    __local char *sync_arr_mem_45816;
    
    sync_arr_mem_45816 = (__local char *) sync_arr_mem_45816_backing_0;
    
    __local char *red_arr_mem_45818;
    
    red_arr_mem_45818 = (__local char *) red_arr_mem_45818_backing_1;
    
    int64_t dummy_39294;
    
    dummy_39294 = 0;
    
    int64_t gtid_39295;
    
    gtid_39295 = 0;
    
    int32_t x_acc_45820;
    int64_t chunk_sizze_45821;
    
    chunk_sizze_45821 = smin64(sdiv_up64(m_30871,
                                         sext_i32_i64(sext_i64_i32(segred_group_sizze_39289 *
                                         num_groups_39291))),
                               sdiv_up64(m_30871 - sext_i32_i64(phys_tid_39296),
                                         num_threads_45810));
    
    int32_t x_31228;
    int32_t x_31229;
    
    // neutral-initialise the accumulators
    {
        x_acc_45820 = 0;
    }
    for (int64_t i_45825 = 0; i_45825 < chunk_sizze_45821; i_45825++) {
        gtid_39295 = sext_i32_i64(phys_tid_39296) + num_threads_45810 * i_45825;
        // apply map function
        {
            int32_t x_31231 = ((__global
                                int32_t *) defunc_3_map_res_mem_44395)[gtid_39295];
            
            // save map-out results
            { }
            // load accumulator
            {
                x_31228 = x_acc_45820;
            }
            // load new values
            {
                x_31229 = x_31231;
            }
            // apply reduction operator
            {
                int32_t defunc_1_op_res_31230 = smax32(x_31228, x_31229);
                
                // store in accumulator
                {
                    x_acc_45820 = defunc_1_op_res_31230;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_31228 = x_acc_45820;
        ((__local int32_t *) red_arr_mem_45818)[sext_i32_i64(local_tid_45812)] =
            x_31228;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45826;
    int32_t skip_waves_45827;
    
    skip_waves_45827 = 1;
    
    int32_t x_45822;
    int32_t x_45823;
    
    offset_45826 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45812, sext_i64_i32(segred_group_sizze_39289))) {
            x_45822 = ((__local
                        int32_t *) red_arr_mem_45818)[sext_i32_i64(local_tid_45812 +
                                                      offset_45826)];
        }
    }
    offset_45826 = 1;
    while (slt32(offset_45826, wave_sizze_45814)) {
        if (slt32(local_tid_45812 + offset_45826,
                  sext_i64_i32(segred_group_sizze_39289)) && ((local_tid_45812 -
                                                               squot32(local_tid_45812,
                                                                       wave_sizze_45814) *
                                                               wave_sizze_45814) &
                                                              (2 *
                                                               offset_45826 -
                                                               1)) == 0) {
            // read array element
            {
                x_45823 = ((volatile __local
                            int32_t *) red_arr_mem_45818)[sext_i32_i64(local_tid_45812 +
                                                          offset_45826)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_45824 = smax32(x_45822, x_45823);
                
                x_45822 = defunc_1_op_res_45824;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_45818)[sext_i32_i64(local_tid_45812)] =
                    x_45822;
            }
        }
        offset_45826 *= 2;
    }
    while (slt32(skip_waves_45827,
                 squot32(sext_i64_i32(segred_group_sizze_39289) +
                         wave_sizze_45814 - 1, wave_sizze_45814))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45826 = skip_waves_45827 * wave_sizze_45814;
        if (slt32(local_tid_45812 + offset_45826,
                  sext_i64_i32(segred_group_sizze_39289)) && ((local_tid_45812 -
                                                               squot32(local_tid_45812,
                                                                       wave_sizze_45814) *
                                                               wave_sizze_45814) ==
                                                              0 &&
                                                              (squot32(local_tid_45812,
                                                                       wave_sizze_45814) &
                                                               (2 *
                                                                skip_waves_45827 -
                                                                1)) == 0)) {
            // read array element
            {
                x_45823 = ((__local
                            int32_t *) red_arr_mem_45818)[sext_i32_i64(local_tid_45812 +
                                                          offset_45826)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_45824 = smax32(x_45822, x_45823);
                
                x_45822 = defunc_1_op_res_45824;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_45818)[sext_i32_i64(local_tid_45812)] =
                    x_45822;
            }
        }
        skip_waves_45827 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_45812) == 0) {
            x_acc_45820 = x_45822;
        }
    }
    
    int32_t old_counter_45828;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_45812 == 0) {
            ((__global
              int32_t *) group_res_arr_mem_45808)[sext_i32_i64(group_tid_45813) *
                                                  segred_group_sizze_39289] =
                x_acc_45820;
            mem_fence_global();
            old_counter_45828 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainzicounter_mem_45806)[0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_45816)[0] = old_counter_45828 ==
                num_groups_39291 - 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_45829;
    
    is_last_group_45829 = ((__local bool *) sync_arr_mem_45816)[0];
    if (is_last_group_45829) {
        if (local_tid_45812 == 0) {
            old_counter_45828 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainzicounter_mem_45806)[0],
                                                      (int) (0 -
                                                             num_groups_39291));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_45830 = sdiv_up64(num_groups_39291,
                                                      segred_group_sizze_39289);
            
            x_31228 = 0;
            for (int64_t i_45831 = 0; i_45831 < read_per_thread_45830;
                 i_45831++) {
                int64_t group_res_id_45832 = sext_i32_i64(local_tid_45812) *
                        read_per_thread_45830 + i_45831;
                int64_t index_of_group_res_45833 = group_res_id_45832;
                
                if (slt64(group_res_id_45832, num_groups_39291)) {
                    x_31229 = ((__global
                                int32_t *) group_res_arr_mem_45808)[index_of_group_res_45833 *
                                                                    segred_group_sizze_39289];
                    
                    int32_t defunc_1_op_res_31230;
                    
                    defunc_1_op_res_31230 = smax32(x_31228, x_31229);
                    x_31228 = defunc_1_op_res_31230;
                }
            }
        }
        ((__local int32_t *) red_arr_mem_45818)[sext_i32_i64(local_tid_45812)] =
            x_31228;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_45834;
            int32_t skip_waves_45835;
            
            skip_waves_45835 = 1;
            
            int32_t x_45822;
            int32_t x_45823;
            
            offset_45834 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_45812,
                          sext_i64_i32(segred_group_sizze_39289))) {
                    x_45822 = ((__local
                                int32_t *) red_arr_mem_45818)[sext_i32_i64(local_tid_45812 +
                                                              offset_45834)];
                }
            }
            offset_45834 = 1;
            while (slt32(offset_45834, wave_sizze_45814)) {
                if (slt32(local_tid_45812 + offset_45834,
                          sext_i64_i32(segred_group_sizze_39289)) &&
                    ((local_tid_45812 - squot32(local_tid_45812,
                                                wave_sizze_45814) *
                      wave_sizze_45814) & (2 * offset_45834 - 1)) == 0) {
                    // read array element
                    {
                        x_45823 = ((volatile __local
                                    int32_t *) red_arr_mem_45818)[sext_i32_i64(local_tid_45812 +
                                                                  offset_45834)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_45824 = smax32(x_45822,
                                                               x_45823);
                        
                        x_45822 = defunc_1_op_res_45824;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          int32_t *) red_arr_mem_45818)[sext_i32_i64(local_tid_45812)] =
                            x_45822;
                    }
                }
                offset_45834 *= 2;
            }
            while (slt32(skip_waves_45835,
                         squot32(sext_i64_i32(segred_group_sizze_39289) +
                                 wave_sizze_45814 - 1, wave_sizze_45814))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_45834 = skip_waves_45835 * wave_sizze_45814;
                if (slt32(local_tid_45812 + offset_45834,
                          sext_i64_i32(segred_group_sizze_39289)) &&
                    ((local_tid_45812 - squot32(local_tid_45812,
                                                wave_sizze_45814) *
                      wave_sizze_45814) == 0 && (squot32(local_tid_45812,
                                                         wave_sizze_45814) &
                                                 (2 * skip_waves_45835 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_45823 = ((__local
                                    int32_t *) red_arr_mem_45818)[sext_i32_i64(local_tid_45812 +
                                                                  offset_45834)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_45824 = smax32(x_45822,
                                                               x_45823);
                        
                        x_45822 = defunc_1_op_res_45824;
                    }
                    // write result of operation
                    {
                        ((__local
                          int32_t *) red_arr_mem_45818)[sext_i32_i64(local_tid_45812)] =
                            x_45822;
                    }
                }
                skip_waves_45835 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_45812 == 0) {
                    ((__global int32_t *) mem_44400)[0] = x_45822;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39289
}
__kernel void mainzisegred_small_37200(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_45073_backing_aligned_0,
                                       int64_t N_30870, int64_t m_30871,
                                       int64_t N_30872, int64_t i32_res_30884,
                                       int64_t i32_res_30890,
                                       int64_t num_groups_37339, __global
                                       unsigned char *images_mem_43532, __global
                                       unsigned char *binop_p_mem_43541,
                                       __global unsigned char *mem_43682,
                                       __global unsigned char *mem_43687,
                                       int64_t segment_sizze_nonzzero_45066)
{
    #define segred_group_sizze_37338 (mainzisegred_group_sizze_37194)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45073_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45073_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45068;
    int32_t local_tid_45069;
    int64_t group_sizze_45072;
    int32_t wave_sizze_45071;
    int32_t group_tid_45070;
    
    global_tid_45068 = get_global_id(0);
    local_tid_45069 = get_local_id(0);
    group_sizze_45072 = get_local_size(0);
    wave_sizze_45071 = LOCKSTEP_WIDTH;
    group_tid_45070 = get_group_id(0);
    
    int32_t phys_tid_37200;
    
    phys_tid_37200 = global_tid_45068;
    
    __local char *red_arr_mem_45073;
    
    red_arr_mem_45073 = (__local char *) red_arr_mem_45073_backing_0;
    
    int32_t phys_group_id_45075;
    
    phys_group_id_45075 = get_group_id(0);
    for (int32_t i_45076 = 0; i_45076 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30871 * i32_res_30890 *
                                          i32_res_30890,
                                          squot64(segred_group_sizze_37338,
                                                  segment_sizze_nonzzero_45066))) -
                   phys_group_id_45075, sext_i64_i32(num_groups_37339));
         i_45076++) {
        int32_t virt_group_id_45077 = phys_group_id_45075 + i_45076 *
                sext_i64_i32(num_groups_37339);
        int64_t gtid_37187 = squot64(squot64(sext_i32_i64(local_tid_45069),
                                             segment_sizze_nonzzero_45066) +
                                     sext_i32_i64(virt_group_id_45077) *
                                     squot64(segred_group_sizze_37338,
                                             segment_sizze_nonzzero_45066),
                                     i32_res_30890 * i32_res_30890);
        int64_t gtid_37188 = squot64(squot64(sext_i32_i64(local_tid_45069),
                                             segment_sizze_nonzzero_45066) +
                                     sext_i32_i64(virt_group_id_45077) *
                                     squot64(segred_group_sizze_37338,
                                             segment_sizze_nonzzero_45066) -
                                     squot64(squot64(sext_i32_i64(local_tid_45069),
                                                     segment_sizze_nonzzero_45066) +
                                             sext_i32_i64(virt_group_id_45077) *
                                             squot64(segred_group_sizze_37338,
                                                     segment_sizze_nonzzero_45066),
                                             i32_res_30890 * i32_res_30890) *
                                     (i32_res_30890 * i32_res_30890),
                                     i32_res_30890);
        int64_t gtid_37189 = squot64(sext_i32_i64(local_tid_45069),
                                     segment_sizze_nonzzero_45066) +
                sext_i32_i64(virt_group_id_45077) *
                squot64(segred_group_sizze_37338,
                        segment_sizze_nonzzero_45066) -
                squot64(squot64(sext_i32_i64(local_tid_45069),
                                segment_sizze_nonzzero_45066) +
                        sext_i32_i64(virt_group_id_45077) *
                        squot64(segred_group_sizze_37338,
                                segment_sizze_nonzzero_45066), i32_res_30890 *
                        i32_res_30890) * (i32_res_30890 * i32_res_30890) -
                squot64(squot64(sext_i32_i64(local_tid_45069),
                                segment_sizze_nonzzero_45066) +
                        sext_i32_i64(virt_group_id_45077) *
                        squot64(segred_group_sizze_37338,
                                segment_sizze_nonzzero_45066) -
                        squot64(squot64(sext_i32_i64(local_tid_45069),
                                        segment_sizze_nonzzero_45066) +
                                sext_i32_i64(virt_group_id_45077) *
                                squot64(segred_group_sizze_37338,
                                        segment_sizze_nonzzero_45066),
                                i32_res_30890 * i32_res_30890) *
                        (i32_res_30890 * i32_res_30890), i32_res_30890) *
                i32_res_30890;
        int64_t gtid_37199 = srem64(sext_i32_i64(local_tid_45069),
                                    i32_res_30884);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_30884) && (((slt64(gtid_37187, m_30871) &&
                                              slt64(gtid_37188,
                                                    i32_res_30890)) &&
                                             slt64(gtid_37189,
                                                   i32_res_30890)) &&
                                            slt64(sext_i32_i64(local_tid_45069),
                                                  i32_res_30884 *
                                                  squot64(segred_group_sizze_37338,
                                                          segment_sizze_nonzzero_45066)))) {
                float x_37348 = ((__global
                                  float *) images_mem_43532)[gtid_37187 *
                                                             N_30872 +
                                                             gtid_37199];
                float x_37349 = ((__global
                                  float *) binop_p_mem_43541)[gtid_37188 *
                                                              N_30870 +
                                                              gtid_37199];
                float x_37350 = ((__global float *) mem_43682)[gtid_37189 *
                                                               N_30870 +
                                                               gtid_37199];
                float x_37351 = x_37349 * x_37350;
                bool isnan_res_37352;
                
                isnan_res_37352 = futrts_isnan32(x_37348);
                
                float y_37353;
                
                if (isnan_res_37352) {
                    y_37353 = 0.0F;
                } else {
                    y_37353 = 1.0F;
                }
                
                float defunc_2_f_res_37354 = x_37351 * y_37353;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45073)[sext_i32_i64(local_tid_45069)] =
                        defunc_2_f_res_37354;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45073)[sext_i32_i64(local_tid_45069)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_30884)) {
            // perform segmented scan to imitate reduction
            {
                float x_37342;
                float x_37343;
                float x_45078;
                float x_45079;
                bool ltid_in_bounds_45081;
                
                ltid_in_bounds_45081 = slt64(sext_i32_i64(local_tid_45069),
                                             i32_res_30884 *
                                             squot64(segred_group_sizze_37338,
                                                     segment_sizze_nonzzero_45066));
                
                int32_t skip_threads_45082;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45081) {
                        x_37343 = ((volatile __local
                                    float *) red_arr_mem_45073)[sext_i32_i64(local_tid_45069)];
                        if ((local_tid_45069 - squot32(local_tid_45069, 32) *
                             32) == 0) {
                            x_37342 = x_37343;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45082 = 1;
                    while (slt32(skip_threads_45082, 32)) {
                        if (sle32(skip_threads_45082, local_tid_45069 -
                                  squot32(local_tid_45069, 32) * 32) &&
                            ltid_in_bounds_45081) {
                            // read operands
                            {
                                x_37342 = ((volatile __local
                                            float *) red_arr_mem_45073)[sext_i32_i64(local_tid_45069) -
                                                                        sext_i32_i64(skip_threads_45082)];
                            }
                            // perform operation
                            {
                                bool inactive_45083 =
                                     slt64(srem64(sext_i32_i64(local_tid_45069),
                                                  i32_res_30884),
                                           sext_i32_i64(local_tid_45069) -
                                           sext_i32_i64(local_tid_45069 -
                                           skip_threads_45082));
                                
                                if (inactive_45083) {
                                    x_37342 = x_37343;
                                }
                                if (!inactive_45083) {
                                    float defunc_1_op_res_37344 = x_37342 +
                                          x_37343;
                                    
                                    x_37342 = defunc_1_op_res_37344;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45071, skip_threads_45082)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45082, local_tid_45069 -
                                  squot32(local_tid_45069, 32) * 32) &&
                            ltid_in_bounds_45081) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45073)[sext_i32_i64(local_tid_45069)] =
                                    x_37342;
                                x_37343 = x_37342;
                            }
                        }
                        if (sle32(wave_sizze_45071, skip_threads_45082)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45082 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45069 - squot32(local_tid_45069, 32) * 32) ==
                        31 && ltid_in_bounds_45081) {
                        ((volatile __local
                          float *) red_arr_mem_45073)[sext_i32_i64(squot32(local_tid_45069,
                                                                           32))] =
                            x_37342;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45084;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45069, 32) == 0 &&
                            ltid_in_bounds_45081) {
                            x_45079 = ((volatile __local
                                        float *) red_arr_mem_45073)[sext_i32_i64(local_tid_45069)];
                            if ((local_tid_45069 - squot32(local_tid_45069,
                                                           32) * 32) == 0) {
                                x_45078 = x_45079;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45084 = 1;
                        while (slt32(skip_threads_45084, 32)) {
                            if (sle32(skip_threads_45084, local_tid_45069 -
                                      squot32(local_tid_45069, 32) * 32) &&
                                (squot32(local_tid_45069, 32) == 0 &&
                                 ltid_in_bounds_45081)) {
                                // read operands
                                {
                                    x_45078 = ((volatile __local
                                                float *) red_arr_mem_45073)[sext_i32_i64(local_tid_45069) -
                                                                            sext_i32_i64(skip_threads_45084)];
                                }
                                // perform operation
                                {
                                    bool inactive_45085 =
                                         slt64(srem64(sext_i32_i64(local_tid_45069 *
                                                      32 + 32 - 1),
                                                      i32_res_30884),
                                               sext_i32_i64(local_tid_45069 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45069 -
                                                             skip_threads_45084) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45085) {
                                        x_45078 = x_45079;
                                    }
                                    if (!inactive_45085) {
                                        float defunc_1_op_res_45080 = x_45078 +
                                              x_45079;
                                        
                                        x_45078 = defunc_1_op_res_45080;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45071, skip_threads_45084)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45084, local_tid_45069 -
                                      squot32(local_tid_45069, 32) * 32) &&
                                (squot32(local_tid_45069, 32) == 0 &&
                                 ltid_in_bounds_45081)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45073)[sext_i32_i64(local_tid_45069)] =
                                        x_45078;
                                    x_45079 = x_45078;
                                }
                            }
                            if (sle32(wave_sizze_45071, skip_threads_45084)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45084 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45069, 32) == 0 ||
                          !ltid_in_bounds_45081)) {
                        // read operands
                        {
                            x_37343 = x_37342;
                            x_37342 = ((__local
                                        float *) red_arr_mem_45073)[sext_i32_i64(squot32(local_tid_45069,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45086 =
                                 slt64(srem64(sext_i32_i64(local_tid_45069),
                                              i32_res_30884),
                                       sext_i32_i64(local_tid_45069) -
                                       sext_i32_i64(squot32(local_tid_45069,
                                                            32) * 32 - 1));
                            
                            if (inactive_45086) {
                                x_37342 = x_37343;
                            }
                            if (!inactive_45086) {
                                float defunc_1_op_res_37344 = x_37342 + x_37343;
                                
                                x_37342 = defunc_1_op_res_37344;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45073)[sext_i32_i64(local_tid_45069)] =
                                x_37342;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45069, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45073)[sext_i32_i64(local_tid_45069)] =
                            x_37343;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45077) *
                      squot64(segred_group_sizze_37338,
                              segment_sizze_nonzzero_45066) +
                      sext_i32_i64(local_tid_45069), m_30871 * i32_res_30890 *
                      i32_res_30890) && slt64(sext_i32_i64(local_tid_45069),
                                              squot64(segred_group_sizze_37338,
                                                      segment_sizze_nonzzero_45066))) {
                ((__global
                  float *) mem_43687)[squot64(sext_i32_i64(virt_group_id_45077) *
                                              squot64(segred_group_sizze_37338,
                                                      segment_sizze_nonzzero_45066) +
                                              sext_i32_i64(local_tid_45069),
                                              i32_res_30890 * i32_res_30890) *
                                      (i32_res_30890 * i32_res_30890) +
                                      squot64(sext_i32_i64(virt_group_id_45077) *
                                              squot64(segred_group_sizze_37338,
                                                      segment_sizze_nonzzero_45066) +
                                              sext_i32_i64(local_tid_45069) -
                                              squot64(sext_i32_i64(virt_group_id_45077) *
                                                      squot64(segred_group_sizze_37338,
                                                              segment_sizze_nonzzero_45066) +
                                                      sext_i32_i64(local_tid_45069),
                                                      i32_res_30890 *
                                                      i32_res_30890) *
                                              (i32_res_30890 * i32_res_30890),
                                              i32_res_30890) * i32_res_30890 +
                                      (sext_i32_i64(virt_group_id_45077) *
                                       squot64(segred_group_sizze_37338,
                                               segment_sizze_nonzzero_45066) +
                                       sext_i32_i64(local_tid_45069) -
                                       squot64(sext_i32_i64(virt_group_id_45077) *
                                               squot64(segred_group_sizze_37338,
                                                       segment_sizze_nonzzero_45066) +
                                               sext_i32_i64(local_tid_45069),
                                               i32_res_30890 * i32_res_30890) *
                                       (i32_res_30890 * i32_res_30890) -
                                       squot64(sext_i32_i64(virt_group_id_45077) *
                                               squot64(segred_group_sizze_37338,
                                                       segment_sizze_nonzzero_45066) +
                                               sext_i32_i64(local_tid_45069) -
                                               squot64(sext_i32_i64(virt_group_id_45077) *
                                                       squot64(segred_group_sizze_37338,
                                                               segment_sizze_nonzzero_45066) +
                                                       sext_i32_i64(local_tid_45069),
                                                       i32_res_30890 *
                                                       i32_res_30890) *
                                               (i32_res_30890 * i32_res_30890),
                                               i32_res_30890) *
                                       i32_res_30890)] = ((__local
                                                           float *) red_arr_mem_45073)[(sext_i32_i64(local_tid_45069) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_45066 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_37338
}
__kernel void mainzisegred_small_38373(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_45271_backing_aligned_0,
                                       int64_t N_30870, int64_t m_30871,
                                       int64_t N_30872, int64_t i32_res_30884,
                                       int64_t i32_res_30890,
                                       int64_t num_groups_38426, __global
                                       unsigned char *images_mem_43532, __global
                                       unsigned char *binop_p_mem_43541,
                                       __global unsigned char *mem_43998,
                                       int64_t segment_sizze_nonzzero_45264)
{
    #define segred_group_sizze_38425 (mainzisegred_group_sizze_38367)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45271_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45271_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45266;
    int32_t local_tid_45267;
    int64_t group_sizze_45270;
    int32_t wave_sizze_45269;
    int32_t group_tid_45268;
    
    global_tid_45266 = get_global_id(0);
    local_tid_45267 = get_local_id(0);
    group_sizze_45270 = get_local_size(0);
    wave_sizze_45269 = LOCKSTEP_WIDTH;
    group_tid_45268 = get_group_id(0);
    
    int32_t phys_tid_38373;
    
    phys_tid_38373 = global_tid_45266;
    
    __local char *red_arr_mem_45271;
    
    red_arr_mem_45271 = (__local char *) red_arr_mem_45271_backing_0;
    
    int32_t phys_group_id_45273;
    
    phys_group_id_45273 = get_group_id(0);
    for (int32_t i_45274 = 0; i_45274 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30871 * i32_res_30890,
                                          squot64(segred_group_sizze_38425,
                                                  segment_sizze_nonzzero_45264))) -
                   phys_group_id_45273, sext_i64_i32(num_groups_38426));
         i_45274++) {
        int32_t virt_group_id_45275 = phys_group_id_45273 + i_45274 *
                sext_i64_i32(num_groups_38426);
        int64_t gtid_38362 = squot64(squot64(sext_i32_i64(local_tid_45267),
                                             segment_sizze_nonzzero_45264) +
                                     sext_i32_i64(virt_group_id_45275) *
                                     squot64(segred_group_sizze_38425,
                                             segment_sizze_nonzzero_45264),
                                     i32_res_30890);
        int64_t gtid_38363 = squot64(sext_i32_i64(local_tid_45267),
                                     segment_sizze_nonzzero_45264) +
                sext_i32_i64(virt_group_id_45275) *
                squot64(segred_group_sizze_38425,
                        segment_sizze_nonzzero_45264) -
                squot64(squot64(sext_i32_i64(local_tid_45267),
                                segment_sizze_nonzzero_45264) +
                        sext_i32_i64(virt_group_id_45275) *
                        squot64(segred_group_sizze_38425,
                                segment_sizze_nonzzero_45264), i32_res_30890) *
                i32_res_30890;
        int64_t gtid_38372 = srem64(sext_i32_i64(local_tid_45267),
                                    i32_res_30884);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_30884) && ((slt64(gtid_38362, m_30871) &&
                                             slt64(gtid_38363,
                                                   i32_res_30890)) &&
                                            slt64(sext_i32_i64(local_tid_45267),
                                                  i32_res_30884 *
                                                  squot64(segred_group_sizze_38425,
                                                          segment_sizze_nonzzero_45264)))) {
                float x_38435 = ((__global
                                  float *) images_mem_43532)[gtid_38362 *
                                                             N_30872 +
                                                             gtid_38372];
                bool isnan_res_38436;
                
                isnan_res_38436 = futrts_isnan32(x_38435);
                
                float defunc_1_f_res_38437;
                
                if (isnan_res_38436) {
                    defunc_1_f_res_38437 = 0.0F;
                } else {
                    float x_38434 = ((__global
                                      float *) binop_p_mem_43541)[gtid_38363 *
                                                                  N_30870 +
                                                                  gtid_38372];
                    float defunc_1_f_res_f_res_38438 = x_38434 * x_38435;
                    
                    defunc_1_f_res_38437 = defunc_1_f_res_f_res_38438;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45271)[sext_i32_i64(local_tid_45267)] =
                        defunc_1_f_res_38437;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45271)[sext_i32_i64(local_tid_45267)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_30884)) {
            // perform segmented scan to imitate reduction
            {
                float x_38429;
                float x_38430;
                float x_45276;
                float x_45277;
                bool ltid_in_bounds_45279;
                
                ltid_in_bounds_45279 = slt64(sext_i32_i64(local_tid_45267),
                                             i32_res_30884 *
                                             squot64(segred_group_sizze_38425,
                                                     segment_sizze_nonzzero_45264));
                
                int32_t skip_threads_45280;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45279) {
                        x_38430 = ((volatile __local
                                    float *) red_arr_mem_45271)[sext_i32_i64(local_tid_45267)];
                        if ((local_tid_45267 - squot32(local_tid_45267, 32) *
                             32) == 0) {
                            x_38429 = x_38430;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45280 = 1;
                    while (slt32(skip_threads_45280, 32)) {
                        if (sle32(skip_threads_45280, local_tid_45267 -
                                  squot32(local_tid_45267, 32) * 32) &&
                            ltid_in_bounds_45279) {
                            // read operands
                            {
                                x_38429 = ((volatile __local
                                            float *) red_arr_mem_45271)[sext_i32_i64(local_tid_45267) -
                                                                        sext_i32_i64(skip_threads_45280)];
                            }
                            // perform operation
                            {
                                bool inactive_45281 =
                                     slt64(srem64(sext_i32_i64(local_tid_45267),
                                                  i32_res_30884),
                                           sext_i32_i64(local_tid_45267) -
                                           sext_i32_i64(local_tid_45267 -
                                           skip_threads_45280));
                                
                                if (inactive_45281) {
                                    x_38429 = x_38430;
                                }
                                if (!inactive_45281) {
                                    float defunc_1_op_res_38431 = x_38429 +
                                          x_38430;
                                    
                                    x_38429 = defunc_1_op_res_38431;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45269, skip_threads_45280)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45280, local_tid_45267 -
                                  squot32(local_tid_45267, 32) * 32) &&
                            ltid_in_bounds_45279) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45271)[sext_i32_i64(local_tid_45267)] =
                                    x_38429;
                                x_38430 = x_38429;
                            }
                        }
                        if (sle32(wave_sizze_45269, skip_threads_45280)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45280 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45267 - squot32(local_tid_45267, 32) * 32) ==
                        31 && ltid_in_bounds_45279) {
                        ((volatile __local
                          float *) red_arr_mem_45271)[sext_i32_i64(squot32(local_tid_45267,
                                                                           32))] =
                            x_38429;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45282;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45267, 32) == 0 &&
                            ltid_in_bounds_45279) {
                            x_45277 = ((volatile __local
                                        float *) red_arr_mem_45271)[sext_i32_i64(local_tid_45267)];
                            if ((local_tid_45267 - squot32(local_tid_45267,
                                                           32) * 32) == 0) {
                                x_45276 = x_45277;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45282 = 1;
                        while (slt32(skip_threads_45282, 32)) {
                            if (sle32(skip_threads_45282, local_tid_45267 -
                                      squot32(local_tid_45267, 32) * 32) &&
                                (squot32(local_tid_45267, 32) == 0 &&
                                 ltid_in_bounds_45279)) {
                                // read operands
                                {
                                    x_45276 = ((volatile __local
                                                float *) red_arr_mem_45271)[sext_i32_i64(local_tid_45267) -
                                                                            sext_i32_i64(skip_threads_45282)];
                                }
                                // perform operation
                                {
                                    bool inactive_45283 =
                                         slt64(srem64(sext_i32_i64(local_tid_45267 *
                                                      32 + 32 - 1),
                                                      i32_res_30884),
                                               sext_i32_i64(local_tid_45267 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45267 -
                                                             skip_threads_45282) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45283) {
                                        x_45276 = x_45277;
                                    }
                                    if (!inactive_45283) {
                                        float defunc_1_op_res_45278 = x_45276 +
                                              x_45277;
                                        
                                        x_45276 = defunc_1_op_res_45278;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45269, skip_threads_45282)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45282, local_tid_45267 -
                                      squot32(local_tid_45267, 32) * 32) &&
                                (squot32(local_tid_45267, 32) == 0 &&
                                 ltid_in_bounds_45279)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45271)[sext_i32_i64(local_tid_45267)] =
                                        x_45276;
                                    x_45277 = x_45276;
                                }
                            }
                            if (sle32(wave_sizze_45269, skip_threads_45282)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45282 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45267, 32) == 0 ||
                          !ltid_in_bounds_45279)) {
                        // read operands
                        {
                            x_38430 = x_38429;
                            x_38429 = ((__local
                                        float *) red_arr_mem_45271)[sext_i32_i64(squot32(local_tid_45267,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45284 =
                                 slt64(srem64(sext_i32_i64(local_tid_45267),
                                              i32_res_30884),
                                       sext_i32_i64(local_tid_45267) -
                                       sext_i32_i64(squot32(local_tid_45267,
                                                            32) * 32 - 1));
                            
                            if (inactive_45284) {
                                x_38429 = x_38430;
                            }
                            if (!inactive_45284) {
                                float defunc_1_op_res_38431 = x_38429 + x_38430;
                                
                                x_38429 = defunc_1_op_res_38431;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45271)[sext_i32_i64(local_tid_45267)] =
                                x_38429;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45267, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45271)[sext_i32_i64(local_tid_45267)] =
                            x_38430;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45275) *
                      squot64(segred_group_sizze_38425,
                              segment_sizze_nonzzero_45264) +
                      sext_i32_i64(local_tid_45267), m_30871 * i32_res_30890) &&
                slt64(sext_i32_i64(local_tid_45267),
                      squot64(segred_group_sizze_38425,
                              segment_sizze_nonzzero_45264))) {
                ((__global
                  float *) mem_43998)[squot64(sext_i32_i64(virt_group_id_45275) *
                                              squot64(segred_group_sizze_38425,
                                                      segment_sizze_nonzzero_45264) +
                                              sext_i32_i64(local_tid_45267),
                                              i32_res_30890) * i32_res_30890 +
                                      (sext_i32_i64(virt_group_id_45275) *
                                       squot64(segred_group_sizze_38425,
                                               segment_sizze_nonzzero_45264) +
                                       sext_i32_i64(local_tid_45267) -
                                       squot64(sext_i32_i64(virt_group_id_45275) *
                                               squot64(segred_group_sizze_38425,
                                                       segment_sizze_nonzzero_45264) +
                                               sext_i32_i64(local_tid_45267),
                                               i32_res_30890) *
                                       i32_res_30890)] = ((__local
                                                           float *) red_arr_mem_45271)[(sext_i32_i64(local_tid_45267) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_45264 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38425
}
__kernel void mainzisegred_small_38510(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_45359_backing_aligned_0,
                                       int64_t m_30871, int64_t i32_res_30890,
                                       int64_t num_groups_38559, __global
                                       unsigned char *defunc_3_map_res_mem_43783,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_44004,
                                       __global unsigned char *mem_44064,
                                       int64_t segment_sizze_nonzzero_45352)
{
    #define segred_group_sizze_38558 (mainzisegred_group_sizze_38504)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45359_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45359_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45354;
    int32_t local_tid_45355;
    int64_t group_sizze_45358;
    int32_t wave_sizze_45357;
    int32_t group_tid_45356;
    
    global_tid_45354 = get_global_id(0);
    local_tid_45355 = get_local_id(0);
    group_sizze_45358 = get_local_size(0);
    wave_sizze_45357 = LOCKSTEP_WIDTH;
    group_tid_45356 = get_group_id(0);
    
    int32_t phys_tid_38510;
    
    phys_tid_38510 = global_tid_45354;
    
    __local char *red_arr_mem_45359;
    
    red_arr_mem_45359 = (__local char *) red_arr_mem_45359_backing_0;
    
    int32_t phys_group_id_45361;
    
    phys_group_id_45361 = get_group_id(0);
    for (int32_t i_45362 = 0; i_45362 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30871 * i32_res_30890,
                                          squot64(segred_group_sizze_38558,
                                                  segment_sizze_nonzzero_45352))) -
                   phys_group_id_45361, sext_i64_i32(num_groups_38559));
         i_45362++) {
        int32_t virt_group_id_45363 = phys_group_id_45361 + i_45362 *
                sext_i64_i32(num_groups_38559);
        int64_t gtid_38499 = squot64(squot64(sext_i32_i64(local_tid_45355),
                                             segment_sizze_nonzzero_45352) +
                                     sext_i32_i64(virt_group_id_45363) *
                                     squot64(segred_group_sizze_38558,
                                             segment_sizze_nonzzero_45352),
                                     i32_res_30890);
        int64_t gtid_38500 = squot64(sext_i32_i64(local_tid_45355),
                                     segment_sizze_nonzzero_45352) +
                sext_i32_i64(virt_group_id_45363) *
                squot64(segred_group_sizze_38558,
                        segment_sizze_nonzzero_45352) -
                squot64(squot64(sext_i32_i64(local_tid_45355),
                                segment_sizze_nonzzero_45352) +
                        sext_i32_i64(virt_group_id_45363) *
                        squot64(segred_group_sizze_38558,
                                segment_sizze_nonzzero_45352), i32_res_30890) *
                i32_res_30890;
        int64_t gtid_38509 = srem64(sext_i32_i64(local_tid_45355),
                                    i32_res_30890);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_30890) && ((slt64(gtid_38499, m_30871) &&
                                             slt64(gtid_38500,
                                                   i32_res_30890)) &&
                                            slt64(sext_i32_i64(local_tid_45355),
                                                  i32_res_30890 *
                                                  squot64(segred_group_sizze_38558,
                                                          segment_sizze_nonzzero_45352)))) {
                float x_38568 = ((__global
                                  float *) defunc_3_map_res_mem_44004)[gtid_38499 *
                                                                       i32_res_30890 +
                                                                       gtid_38509];
                float x_38569 = ((__global
                                  float *) defunc_3_map_res_mem_43783)[gtid_38499 *
                                                                       (i32_res_30890 *
                                                                        i32_res_30890) +
                                                                       gtid_38500 *
                                                                       i32_res_30890 +
                                                                       gtid_38509];
                float defunc_1_f_res_38570 = x_38568 * x_38569;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45359)[sext_i32_i64(local_tid_45355)] =
                        defunc_1_f_res_38570;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45359)[sext_i32_i64(local_tid_45355)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_30890)) {
            // perform segmented scan to imitate reduction
            {
                float x_38562;
                float x_38563;
                float x_45364;
                float x_45365;
                bool ltid_in_bounds_45367;
                
                ltid_in_bounds_45367 = slt64(sext_i32_i64(local_tid_45355),
                                             i32_res_30890 *
                                             squot64(segred_group_sizze_38558,
                                                     segment_sizze_nonzzero_45352));
                
                int32_t skip_threads_45368;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45367) {
                        x_38563 = ((volatile __local
                                    float *) red_arr_mem_45359)[sext_i32_i64(local_tid_45355)];
                        if ((local_tid_45355 - squot32(local_tid_45355, 32) *
                             32) == 0) {
                            x_38562 = x_38563;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45368 = 1;
                    while (slt32(skip_threads_45368, 32)) {
                        if (sle32(skip_threads_45368, local_tid_45355 -
                                  squot32(local_tid_45355, 32) * 32) &&
                            ltid_in_bounds_45367) {
                            // read operands
                            {
                                x_38562 = ((volatile __local
                                            float *) red_arr_mem_45359)[sext_i32_i64(local_tid_45355) -
                                                                        sext_i32_i64(skip_threads_45368)];
                            }
                            // perform operation
                            {
                                bool inactive_45369 =
                                     slt64(srem64(sext_i32_i64(local_tid_45355),
                                                  i32_res_30890),
                                           sext_i32_i64(local_tid_45355) -
                                           sext_i32_i64(local_tid_45355 -
                                           skip_threads_45368));
                                
                                if (inactive_45369) {
                                    x_38562 = x_38563;
                                }
                                if (!inactive_45369) {
                                    float defunc_1_op_res_38564 = x_38562 +
                                          x_38563;
                                    
                                    x_38562 = defunc_1_op_res_38564;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45357, skip_threads_45368)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45368, local_tid_45355 -
                                  squot32(local_tid_45355, 32) * 32) &&
                            ltid_in_bounds_45367) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45359)[sext_i32_i64(local_tid_45355)] =
                                    x_38562;
                                x_38563 = x_38562;
                            }
                        }
                        if (sle32(wave_sizze_45357, skip_threads_45368)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45368 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45355 - squot32(local_tid_45355, 32) * 32) ==
                        31 && ltid_in_bounds_45367) {
                        ((volatile __local
                          float *) red_arr_mem_45359)[sext_i32_i64(squot32(local_tid_45355,
                                                                           32))] =
                            x_38562;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45370;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45355, 32) == 0 &&
                            ltid_in_bounds_45367) {
                            x_45365 = ((volatile __local
                                        float *) red_arr_mem_45359)[sext_i32_i64(local_tid_45355)];
                            if ((local_tid_45355 - squot32(local_tid_45355,
                                                           32) * 32) == 0) {
                                x_45364 = x_45365;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45370 = 1;
                        while (slt32(skip_threads_45370, 32)) {
                            if (sle32(skip_threads_45370, local_tid_45355 -
                                      squot32(local_tid_45355, 32) * 32) &&
                                (squot32(local_tid_45355, 32) == 0 &&
                                 ltid_in_bounds_45367)) {
                                // read operands
                                {
                                    x_45364 = ((volatile __local
                                                float *) red_arr_mem_45359)[sext_i32_i64(local_tid_45355) -
                                                                            sext_i32_i64(skip_threads_45370)];
                                }
                                // perform operation
                                {
                                    bool inactive_45371 =
                                         slt64(srem64(sext_i32_i64(local_tid_45355 *
                                                      32 + 32 - 1),
                                                      i32_res_30890),
                                               sext_i32_i64(local_tid_45355 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45355 -
                                                             skip_threads_45370) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45371) {
                                        x_45364 = x_45365;
                                    }
                                    if (!inactive_45371) {
                                        float defunc_1_op_res_45366 = x_45364 +
                                              x_45365;
                                        
                                        x_45364 = defunc_1_op_res_45366;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45357, skip_threads_45370)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45370, local_tid_45355 -
                                      squot32(local_tid_45355, 32) * 32) &&
                                (squot32(local_tid_45355, 32) == 0 &&
                                 ltid_in_bounds_45367)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45359)[sext_i32_i64(local_tid_45355)] =
                                        x_45364;
                                    x_45365 = x_45364;
                                }
                            }
                            if (sle32(wave_sizze_45357, skip_threads_45370)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45370 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45355, 32) == 0 ||
                          !ltid_in_bounds_45367)) {
                        // read operands
                        {
                            x_38563 = x_38562;
                            x_38562 = ((__local
                                        float *) red_arr_mem_45359)[sext_i32_i64(squot32(local_tid_45355,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45372 =
                                 slt64(srem64(sext_i32_i64(local_tid_45355),
                                              i32_res_30890),
                                       sext_i32_i64(local_tid_45355) -
                                       sext_i32_i64(squot32(local_tid_45355,
                                                            32) * 32 - 1));
                            
                            if (inactive_45372) {
                                x_38562 = x_38563;
                            }
                            if (!inactive_45372) {
                                float defunc_1_op_res_38564 = x_38562 + x_38563;
                                
                                x_38562 = defunc_1_op_res_38564;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45359)[sext_i32_i64(local_tid_45355)] =
                                x_38562;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45355, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45359)[sext_i32_i64(local_tid_45355)] =
                            x_38563;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45363) *
                      squot64(segred_group_sizze_38558,
                              segment_sizze_nonzzero_45352) +
                      sext_i32_i64(local_tid_45355), m_30871 * i32_res_30890) &&
                slt64(sext_i32_i64(local_tid_45355),
                      squot64(segred_group_sizze_38558,
                              segment_sizze_nonzzero_45352))) {
                ((__global
                  float *) mem_44064)[squot64(sext_i32_i64(virt_group_id_45363) *
                                              squot64(segred_group_sizze_38558,
                                                      segment_sizze_nonzzero_45352) +
                                              sext_i32_i64(local_tid_45355),
                                              i32_res_30890) * i32_res_30890 +
                                      (sext_i32_i64(virt_group_id_45363) *
                                       squot64(segred_group_sizze_38558,
                                               segment_sizze_nonzzero_45352) +
                                       sext_i32_i64(local_tid_45355) -
                                       squot64(sext_i32_i64(virt_group_id_45363) *
                                               squot64(segred_group_sizze_38558,
                                                       segment_sizze_nonzzero_45352) +
                                               sext_i32_i64(local_tid_45355),
                                               i32_res_30890) *
                                       i32_res_30890)] = ((__local
                                                           float *) red_arr_mem_45359)[(sext_i32_i64(local_tid_45355) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_45352 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38558
}
__kernel void mainzisegred_small_38640(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_45491_backing_aligned_0,
                                       int64_t N_30870, int64_t m_30871,
                                       int64_t i32_res_30890,
                                       int64_t num_groups_38687, __global
                                       unsigned char *mem_43548, __global
                                       unsigned char *defunc_4_map_res_mem_44070,
                                       __global unsigned char *mem_44288,
                                       int64_t segment_sizze_nonzzero_45484)
{
    #define segred_group_sizze_38686 (mainzisegred_group_sizze_38634)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45491_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45491_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45486;
    int32_t local_tid_45487;
    int64_t group_sizze_45490;
    int32_t wave_sizze_45489;
    int32_t group_tid_45488;
    
    global_tid_45486 = get_global_id(0);
    local_tid_45487 = get_local_id(0);
    group_sizze_45490 = get_local_size(0);
    wave_sizze_45489 = LOCKSTEP_WIDTH;
    group_tid_45488 = get_group_id(0);
    
    int32_t phys_tid_38640;
    
    phys_tid_38640 = global_tid_45486;
    
    __local char *red_arr_mem_45491;
    
    red_arr_mem_45491 = (__local char *) red_arr_mem_45491_backing_0;
    
    int32_t phys_group_id_45493;
    
    phys_group_id_45493 = get_group_id(0);
    for (int32_t i_45494 = 0; i_45494 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30871 * N_30870,
                                          squot64(segred_group_sizze_38686,
                                                  segment_sizze_nonzzero_45484))) -
                   phys_group_id_45493, sext_i64_i32(num_groups_38687));
         i_45494++) {
        int32_t virt_group_id_45495 = phys_group_id_45493 + i_45494 *
                sext_i64_i32(num_groups_38687);
        int64_t gtid_38629 = squot64(squot64(sext_i32_i64(local_tid_45487),
                                             segment_sizze_nonzzero_45484) +
                                     sext_i32_i64(virt_group_id_45495) *
                                     squot64(segred_group_sizze_38686,
                                             segment_sizze_nonzzero_45484),
                                     N_30870);
        int64_t gtid_38630 = squot64(sext_i32_i64(local_tid_45487),
                                     segment_sizze_nonzzero_45484) +
                sext_i32_i64(virt_group_id_45495) *
                squot64(segred_group_sizze_38686,
                        segment_sizze_nonzzero_45484) -
                squot64(squot64(sext_i32_i64(local_tid_45487),
                                segment_sizze_nonzzero_45484) +
                        sext_i32_i64(virt_group_id_45495) *
                        squot64(segred_group_sizze_38686,
                                segment_sizze_nonzzero_45484), N_30870) *
                N_30870;
        int64_t gtid_38639 = srem64(sext_i32_i64(local_tid_45487),
                                    i32_res_30890);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_30890) && ((slt64(gtid_38629, m_30871) &&
                                             slt64(gtid_38630, N_30870)) &&
                                            slt64(sext_i32_i64(local_tid_45487),
                                                  i32_res_30890 *
                                                  squot64(segred_group_sizze_38686,
                                                          segment_sizze_nonzzero_45484)))) {
                float x_38695 = ((__global
                                  float *) defunc_4_map_res_mem_44070)[gtid_38629 *
                                                                       i32_res_30890 +
                                                                       gtid_38639];
                float x_38696 = ((__global float *) mem_43548)[gtid_38630 *
                                                               i32_res_30890 +
                                                               gtid_38639];
                float defunc_1_f_res_38697 = x_38695 * x_38696;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45491)[sext_i32_i64(local_tid_45487)] =
                        defunc_1_f_res_38697;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45491)[sext_i32_i64(local_tid_45487)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_30890)) {
            // perform segmented scan to imitate reduction
            {
                float x_38690;
                float x_38691;
                float x_45496;
                float x_45497;
                bool ltid_in_bounds_45499;
                
                ltid_in_bounds_45499 = slt64(sext_i32_i64(local_tid_45487),
                                             i32_res_30890 *
                                             squot64(segred_group_sizze_38686,
                                                     segment_sizze_nonzzero_45484));
                
                int32_t skip_threads_45500;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45499) {
                        x_38691 = ((volatile __local
                                    float *) red_arr_mem_45491)[sext_i32_i64(local_tid_45487)];
                        if ((local_tid_45487 - squot32(local_tid_45487, 32) *
                             32) == 0) {
                            x_38690 = x_38691;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45500 = 1;
                    while (slt32(skip_threads_45500, 32)) {
                        if (sle32(skip_threads_45500, local_tid_45487 -
                                  squot32(local_tid_45487, 32) * 32) &&
                            ltid_in_bounds_45499) {
                            // read operands
                            {
                                x_38690 = ((volatile __local
                                            float *) red_arr_mem_45491)[sext_i32_i64(local_tid_45487) -
                                                                        sext_i32_i64(skip_threads_45500)];
                            }
                            // perform operation
                            {
                                bool inactive_45501 =
                                     slt64(srem64(sext_i32_i64(local_tid_45487),
                                                  i32_res_30890),
                                           sext_i32_i64(local_tid_45487) -
                                           sext_i32_i64(local_tid_45487 -
                                           skip_threads_45500));
                                
                                if (inactive_45501) {
                                    x_38690 = x_38691;
                                }
                                if (!inactive_45501) {
                                    float defunc_1_op_res_38692 = x_38690 +
                                          x_38691;
                                    
                                    x_38690 = defunc_1_op_res_38692;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45489, skip_threads_45500)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45500, local_tid_45487 -
                                  squot32(local_tid_45487, 32) * 32) &&
                            ltid_in_bounds_45499) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45491)[sext_i32_i64(local_tid_45487)] =
                                    x_38690;
                                x_38691 = x_38690;
                            }
                        }
                        if (sle32(wave_sizze_45489, skip_threads_45500)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45500 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45487 - squot32(local_tid_45487, 32) * 32) ==
                        31 && ltid_in_bounds_45499) {
                        ((volatile __local
                          float *) red_arr_mem_45491)[sext_i32_i64(squot32(local_tid_45487,
                                                                           32))] =
                            x_38690;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45502;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45487, 32) == 0 &&
                            ltid_in_bounds_45499) {
                            x_45497 = ((volatile __local
                                        float *) red_arr_mem_45491)[sext_i32_i64(local_tid_45487)];
                            if ((local_tid_45487 - squot32(local_tid_45487,
                                                           32) * 32) == 0) {
                                x_45496 = x_45497;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45502 = 1;
                        while (slt32(skip_threads_45502, 32)) {
                            if (sle32(skip_threads_45502, local_tid_45487 -
                                      squot32(local_tid_45487, 32) * 32) &&
                                (squot32(local_tid_45487, 32) == 0 &&
                                 ltid_in_bounds_45499)) {
                                // read operands
                                {
                                    x_45496 = ((volatile __local
                                                float *) red_arr_mem_45491)[sext_i32_i64(local_tid_45487) -
                                                                            sext_i32_i64(skip_threads_45502)];
                                }
                                // perform operation
                                {
                                    bool inactive_45503 =
                                         slt64(srem64(sext_i32_i64(local_tid_45487 *
                                                      32 + 32 - 1),
                                                      i32_res_30890),
                                               sext_i32_i64(local_tid_45487 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45487 -
                                                             skip_threads_45502) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45503) {
                                        x_45496 = x_45497;
                                    }
                                    if (!inactive_45503) {
                                        float defunc_1_op_res_45498 = x_45496 +
                                              x_45497;
                                        
                                        x_45496 = defunc_1_op_res_45498;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45489, skip_threads_45502)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45502, local_tid_45487 -
                                      squot32(local_tid_45487, 32) * 32) &&
                                (squot32(local_tid_45487, 32) == 0 &&
                                 ltid_in_bounds_45499)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45491)[sext_i32_i64(local_tid_45487)] =
                                        x_45496;
                                    x_45497 = x_45496;
                                }
                            }
                            if (sle32(wave_sizze_45489, skip_threads_45502)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45502 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45487, 32) == 0 ||
                          !ltid_in_bounds_45499)) {
                        // read operands
                        {
                            x_38691 = x_38690;
                            x_38690 = ((__local
                                        float *) red_arr_mem_45491)[sext_i32_i64(squot32(local_tid_45487,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45504 =
                                 slt64(srem64(sext_i32_i64(local_tid_45487),
                                              i32_res_30890),
                                       sext_i32_i64(local_tid_45487) -
                                       sext_i32_i64(squot32(local_tid_45487,
                                                            32) * 32 - 1));
                            
                            if (inactive_45504) {
                                x_38690 = x_38691;
                            }
                            if (!inactive_45504) {
                                float defunc_1_op_res_38692 = x_38690 + x_38691;
                                
                                x_38690 = defunc_1_op_res_38692;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45491)[sext_i32_i64(local_tid_45487)] =
                                x_38690;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45487, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45491)[sext_i32_i64(local_tid_45487)] =
                            x_38691;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45495) *
                      squot64(segred_group_sizze_38686,
                              segment_sizze_nonzzero_45484) +
                      sext_i32_i64(local_tid_45487), m_30871 * N_30870) &&
                slt64(sext_i32_i64(local_tid_45487),
                      squot64(segred_group_sizze_38686,
                              segment_sizze_nonzzero_45484))) {
                ((__global
                  float *) mem_44288)[squot64(sext_i32_i64(virt_group_id_45495) *
                                              squot64(segred_group_sizze_38686,
                                                      segment_sizze_nonzzero_45484) +
                                              sext_i32_i64(local_tid_45487),
                                              N_30870) * N_30870 +
                                      (sext_i32_i64(virt_group_id_45495) *
                                       squot64(segred_group_sizze_38686,
                                               segment_sizze_nonzzero_45484) +
                                       sext_i32_i64(local_tid_45487) -
                                       squot64(sext_i32_i64(virt_group_id_45495) *
                                               squot64(segred_group_sizze_38686,
                                                       segment_sizze_nonzzero_45484) +
                                               sext_i32_i64(local_tid_45487),
                                               N_30870) * N_30870)] = ((__local
                                                                        float *) red_arr_mem_45491)[(sext_i32_i64(local_tid_45487) +
                                                                                                     1) *
                                                                                                    segment_sizze_nonzzero_45484 -
                                                                                                    1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38686
}
__kernel void mainzisegred_small_39206(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_45745_backing_aligned_0,
                                       int64_t N_30870, int64_t m_30871,
                                       int64_t i32_res_30884,
                                       int64_t num_groups_39253, __global
                                       unsigned char *defunc_4_map_res_mem_44332,
                                       __global unsigned char *mem_44383,
                                       __global unsigned char *mem_44386,
                                       int64_t segment_sizze_nonzzero_45738)
{
    #define segred_group_sizze_39252 (mainzisegred_group_sizze_39200)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45745_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45745_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45740;
    int32_t local_tid_45741;
    int64_t group_sizze_45744;
    int32_t wave_sizze_45743;
    int32_t group_tid_45742;
    
    global_tid_45740 = get_global_id(0);
    local_tid_45741 = get_local_id(0);
    group_sizze_45744 = get_local_size(0);
    wave_sizze_45743 = LOCKSTEP_WIDTH;
    group_tid_45742 = get_group_id(0);
    
    int32_t phys_tid_39206;
    
    phys_tid_39206 = global_tid_45740;
    
    __local char *red_arr_mem_45745;
    
    red_arr_mem_45745 = (__local char *) red_arr_mem_45745_backing_0;
    
    int32_t phys_group_id_45747;
    
    phys_group_id_45747 = get_group_id(0);
    for (int32_t i_45748 = 0; i_45748 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30871,
                                          squot64(segred_group_sizze_39252,
                                                  segment_sizze_nonzzero_45738))) -
                   phys_group_id_45747, sext_i64_i32(num_groups_39253));
         i_45748++) {
        int32_t virt_group_id_45749 = phys_group_id_45747 + i_45748 *
                sext_i64_i32(num_groups_39253);
        int64_t gtid_39197 = squot64(sext_i32_i64(local_tid_45741),
                                     segment_sizze_nonzzero_45738) +
                sext_i32_i64(virt_group_id_45749) *
                squot64(segred_group_sizze_39252, segment_sizze_nonzzero_45738);
        int64_t gtid_39205 = srem64(sext_i32_i64(local_tid_45741),
                                    i32_res_30884);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_30884) && (slt64(gtid_39197, m_30871) &&
                                            slt64(sext_i32_i64(local_tid_45741),
                                                  i32_res_30884 *
                                                  squot64(segred_group_sizze_39252,
                                                          segment_sizze_nonzzero_45738)))) {
                int32_t defunc_0_f_res_39260 = ((__global
                                                 int32_t *) mem_44383)[gtid_39197];
                int32_t index_primexp_41523 = sext_i64_i32(gtid_39205);
                bool cond_39262 = slt32(index_primexp_41523,
                                        defunc_0_f_res_39260);
                float defunc_0_f_res_39263;
                
                if (cond_39262) {
                    int64_t i_39264 = sext_i32_i64(index_primexp_41523);
                    float defunc_0_f_res_t_res_39265 = ((__global
                                                         float *) defunc_4_map_res_mem_44332)[gtid_39197 *
                                                                                              N_30870 +
                                                                                              i_39264];
                    
                    defunc_0_f_res_39263 = defunc_0_f_res_t_res_39265;
                } else {
                    defunc_0_f_res_39263 = 0.0F;
                }
                
                float defunc_0_f_res_39266 = defunc_0_f_res_39263 *
                      defunc_0_f_res_39263;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45745)[sext_i32_i64(local_tid_45741)] =
                        defunc_0_f_res_39266;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45745)[sext_i32_i64(local_tid_45741)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_30884)) {
            // perform segmented scan to imitate reduction
            {
                float x_39256;
                float x_39257;
                float x_45750;
                float x_45751;
                bool ltid_in_bounds_45753;
                
                ltid_in_bounds_45753 = slt64(sext_i32_i64(local_tid_45741),
                                             i32_res_30884 *
                                             squot64(segred_group_sizze_39252,
                                                     segment_sizze_nonzzero_45738));
                
                int32_t skip_threads_45754;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45753) {
                        x_39257 = ((volatile __local
                                    float *) red_arr_mem_45745)[sext_i32_i64(local_tid_45741)];
                        if ((local_tid_45741 - squot32(local_tid_45741, 32) *
                             32) == 0) {
                            x_39256 = x_39257;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45754 = 1;
                    while (slt32(skip_threads_45754, 32)) {
                        if (sle32(skip_threads_45754, local_tid_45741 -
                                  squot32(local_tid_45741, 32) * 32) &&
                            ltid_in_bounds_45753) {
                            // read operands
                            {
                                x_39256 = ((volatile __local
                                            float *) red_arr_mem_45745)[sext_i32_i64(local_tid_45741) -
                                                                        sext_i32_i64(skip_threads_45754)];
                            }
                            // perform operation
                            {
                                bool inactive_45755 =
                                     slt64(srem64(sext_i32_i64(local_tid_45741),
                                                  i32_res_30884),
                                           sext_i32_i64(local_tid_45741) -
                                           sext_i32_i64(local_tid_45741 -
                                           skip_threads_45754));
                                
                                if (inactive_45755) {
                                    x_39256 = x_39257;
                                }
                                if (!inactive_45755) {
                                    float defunc_1_op_res_39258 = x_39256 +
                                          x_39257;
                                    
                                    x_39256 = defunc_1_op_res_39258;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45743, skip_threads_45754)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45754, local_tid_45741 -
                                  squot32(local_tid_45741, 32) * 32) &&
                            ltid_in_bounds_45753) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45745)[sext_i32_i64(local_tid_45741)] =
                                    x_39256;
                                x_39257 = x_39256;
                            }
                        }
                        if (sle32(wave_sizze_45743, skip_threads_45754)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45754 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45741 - squot32(local_tid_45741, 32) * 32) ==
                        31 && ltid_in_bounds_45753) {
                        ((volatile __local
                          float *) red_arr_mem_45745)[sext_i32_i64(squot32(local_tid_45741,
                                                                           32))] =
                            x_39256;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45756;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45741, 32) == 0 &&
                            ltid_in_bounds_45753) {
                            x_45751 = ((volatile __local
                                        float *) red_arr_mem_45745)[sext_i32_i64(local_tid_45741)];
                            if ((local_tid_45741 - squot32(local_tid_45741,
                                                           32) * 32) == 0) {
                                x_45750 = x_45751;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45756 = 1;
                        while (slt32(skip_threads_45756, 32)) {
                            if (sle32(skip_threads_45756, local_tid_45741 -
                                      squot32(local_tid_45741, 32) * 32) &&
                                (squot32(local_tid_45741, 32) == 0 &&
                                 ltid_in_bounds_45753)) {
                                // read operands
                                {
                                    x_45750 = ((volatile __local
                                                float *) red_arr_mem_45745)[sext_i32_i64(local_tid_45741) -
                                                                            sext_i32_i64(skip_threads_45756)];
                                }
                                // perform operation
                                {
                                    bool inactive_45757 =
                                         slt64(srem64(sext_i32_i64(local_tid_45741 *
                                                      32 + 32 - 1),
                                                      i32_res_30884),
                                               sext_i32_i64(local_tid_45741 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45741 -
                                                             skip_threads_45756) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45757) {
                                        x_45750 = x_45751;
                                    }
                                    if (!inactive_45757) {
                                        float defunc_1_op_res_45752 = x_45750 +
                                              x_45751;
                                        
                                        x_45750 = defunc_1_op_res_45752;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45743, skip_threads_45756)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45756, local_tid_45741 -
                                      squot32(local_tid_45741, 32) * 32) &&
                                (squot32(local_tid_45741, 32) == 0 &&
                                 ltid_in_bounds_45753)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45745)[sext_i32_i64(local_tid_45741)] =
                                        x_45750;
                                    x_45751 = x_45750;
                                }
                            }
                            if (sle32(wave_sizze_45743, skip_threads_45756)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45756 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45741, 32) == 0 ||
                          !ltid_in_bounds_45753)) {
                        // read operands
                        {
                            x_39257 = x_39256;
                            x_39256 = ((__local
                                        float *) red_arr_mem_45745)[sext_i32_i64(squot32(local_tid_45741,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45758 =
                                 slt64(srem64(sext_i32_i64(local_tid_45741),
                                              i32_res_30884),
                                       sext_i32_i64(local_tid_45741) -
                                       sext_i32_i64(squot32(local_tid_45741,
                                                            32) * 32 - 1));
                            
                            if (inactive_45758) {
                                x_39256 = x_39257;
                            }
                            if (!inactive_45758) {
                                float defunc_1_op_res_39258 = x_39256 + x_39257;
                                
                                x_39256 = defunc_1_op_res_39258;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45745)[sext_i32_i64(local_tid_45741)] =
                                x_39256;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45741, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45745)[sext_i32_i64(local_tid_45741)] =
                            x_39257;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45749) *
                      squot64(segred_group_sizze_39252,
                              segment_sizze_nonzzero_45738) +
                      sext_i32_i64(local_tid_45741), m_30871) &&
                slt64(sext_i32_i64(local_tid_45741),
                      squot64(segred_group_sizze_39252,
                              segment_sizze_nonzzero_45738))) {
                ((__global
                  float *) mem_44386)[sext_i32_i64(virt_group_id_45749) *
                                      squot64(segred_group_sizze_39252,
                                              segment_sizze_nonzzero_45738) +
                                      sext_i32_i64(local_tid_45741)] = ((__local
                                                                         float *) red_arr_mem_45745)[(sext_i32_i64(local_tid_45741) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45738 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39252
}
__kernel void mainzisegred_small_39227(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_45685_backing_aligned_0,
                                       int64_t m_30871, int64_t N_30872,
                                       int64_t i32_res_30884,
                                       int64_t num_groups_39239, __global
                                       unsigned char *images_mem_43532, __global
                                       unsigned char *mem_44383,
                                       int64_t segment_sizze_nonzzero_45678)
{
    #define segred_group_sizze_39238 (mainzisegred_group_sizze_39221)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45685_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45685_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45680;
    int32_t local_tid_45681;
    int64_t group_sizze_45684;
    int32_t wave_sizze_45683;
    int32_t group_tid_45682;
    
    global_tid_45680 = get_global_id(0);
    local_tid_45681 = get_local_id(0);
    group_sizze_45684 = get_local_size(0);
    wave_sizze_45683 = LOCKSTEP_WIDTH;
    group_tid_45682 = get_group_id(0);
    
    int32_t phys_tid_39227;
    
    phys_tid_39227 = global_tid_45680;
    
    __local char *red_arr_mem_45685;
    
    red_arr_mem_45685 = (__local char *) red_arr_mem_45685_backing_0;
    
    int32_t phys_group_id_45687;
    
    phys_group_id_45687 = get_group_id(0);
    for (int32_t i_45688 = 0; i_45688 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30871,
                                          squot64(segred_group_sizze_39238,
                                                  segment_sizze_nonzzero_45678))) -
                   phys_group_id_45687, sext_i64_i32(num_groups_39239));
         i_45688++) {
        int32_t virt_group_id_45689 = phys_group_id_45687 + i_45688 *
                sext_i64_i32(num_groups_39239);
        int64_t gtid_39218 = squot64(sext_i32_i64(local_tid_45681),
                                     segment_sizze_nonzzero_45678) +
                sext_i32_i64(virt_group_id_45689) *
                squot64(segred_group_sizze_39238, segment_sizze_nonzzero_45678);
        int64_t gtid_39226 = srem64(sext_i32_i64(local_tid_45681),
                                    i32_res_30884);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_30884) && (slt64(gtid_39218, m_30871) &&
                                            slt64(sext_i32_i64(local_tid_45681),
                                                  i32_res_30884 *
                                                  squot64(segred_group_sizze_39238,
                                                          segment_sizze_nonzzero_45678)))) {
                float x_39246 = ((__global
                                  float *) images_mem_43532)[gtid_39218 *
                                                             N_30872 +
                                                             gtid_39226];
                bool isnan_res_39247;
                
                isnan_res_39247 = futrts_isnan32(x_39246);
                
                bool cond_39248 = !isnan_res_39247;
                int32_t defunc_0_f_res_39249 = btoi_bool_i32(cond_39248);
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      int32_t *) red_arr_mem_45685)[sext_i32_i64(local_tid_45681)] =
                        defunc_0_f_res_39249;
                }
            } else {
                ((__local
                  int32_t *) red_arr_mem_45685)[sext_i32_i64(local_tid_45681)] =
                    0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_30884)) {
            // perform segmented scan to imitate reduction
            {
                int32_t x_39242;
                int32_t x_39243;
                int32_t x_45690;
                int32_t x_45691;
                bool ltid_in_bounds_45693;
                
                ltid_in_bounds_45693 = slt64(sext_i32_i64(local_tid_45681),
                                             i32_res_30884 *
                                             squot64(segred_group_sizze_39238,
                                                     segment_sizze_nonzzero_45678));
                
                int32_t skip_threads_45694;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45693) {
                        x_39243 = ((volatile __local
                                    int32_t *) red_arr_mem_45685)[sext_i32_i64(local_tid_45681)];
                        if ((local_tid_45681 - squot32(local_tid_45681, 32) *
                             32) == 0) {
                            x_39242 = x_39243;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45694 = 1;
                    while (slt32(skip_threads_45694, 32)) {
                        if (sle32(skip_threads_45694, local_tid_45681 -
                                  squot32(local_tid_45681, 32) * 32) &&
                            ltid_in_bounds_45693) {
                            // read operands
                            {
                                x_39242 = ((volatile __local
                                            int32_t *) red_arr_mem_45685)[sext_i32_i64(local_tid_45681) -
                                                                          sext_i32_i64(skip_threads_45694)];
                            }
                            // perform operation
                            {
                                bool inactive_45695 =
                                     slt64(srem64(sext_i32_i64(local_tid_45681),
                                                  i32_res_30884),
                                           sext_i32_i64(local_tid_45681) -
                                           sext_i32_i64(local_tid_45681 -
                                           skip_threads_45694));
                                
                                if (inactive_45695) {
                                    x_39242 = x_39243;
                                }
                                if (!inactive_45695) {
                                    int32_t defunc_1_op_res_39244 =
                                            add32(x_39242, x_39243);
                                    
                                    x_39242 = defunc_1_op_res_39244;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45683, skip_threads_45694)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45694, local_tid_45681 -
                                  squot32(local_tid_45681, 32) * 32) &&
                            ltid_in_bounds_45693) {
                            // write result
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_45685)[sext_i32_i64(local_tid_45681)] =
                                    x_39242;
                                x_39243 = x_39242;
                            }
                        }
                        if (sle32(wave_sizze_45683, skip_threads_45694)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45694 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45681 - squot32(local_tid_45681, 32) * 32) ==
                        31 && ltid_in_bounds_45693) {
                        ((volatile __local
                          int32_t *) red_arr_mem_45685)[sext_i32_i64(squot32(local_tid_45681,
                                                                             32))] =
                            x_39242;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45696;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45681, 32) == 0 &&
                            ltid_in_bounds_45693) {
                            x_45691 = ((volatile __local
                                        int32_t *) red_arr_mem_45685)[sext_i32_i64(local_tid_45681)];
                            if ((local_tid_45681 - squot32(local_tid_45681,
                                                           32) * 32) == 0) {
                                x_45690 = x_45691;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45696 = 1;
                        while (slt32(skip_threads_45696, 32)) {
                            if (sle32(skip_threads_45696, local_tid_45681 -
                                      squot32(local_tid_45681, 32) * 32) &&
                                (squot32(local_tid_45681, 32) == 0 &&
                                 ltid_in_bounds_45693)) {
                                // read operands
                                {
                                    x_45690 = ((volatile __local
                                                int32_t *) red_arr_mem_45685)[sext_i32_i64(local_tid_45681) -
                                                                              sext_i32_i64(skip_threads_45696)];
                                }
                                // perform operation
                                {
                                    bool inactive_45697 =
                                         slt64(srem64(sext_i32_i64(local_tid_45681 *
                                                      32 + 32 - 1),
                                                      i32_res_30884),
                                               sext_i32_i64(local_tid_45681 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45681 -
                                                             skip_threads_45696) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45697) {
                                        x_45690 = x_45691;
                                    }
                                    if (!inactive_45697) {
                                        int32_t defunc_1_op_res_45692 =
                                                add32(x_45690, x_45691);
                                        
                                        x_45690 = defunc_1_op_res_45692;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45683, skip_threads_45696)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45696, local_tid_45681 -
                                      squot32(local_tid_45681, 32) * 32) &&
                                (squot32(local_tid_45681, 32) == 0 &&
                                 ltid_in_bounds_45693)) {
                                // write result
                                {
                                    ((volatile __local
                                      int32_t *) red_arr_mem_45685)[sext_i32_i64(local_tid_45681)] =
                                        x_45690;
                                    x_45691 = x_45690;
                                }
                            }
                            if (sle32(wave_sizze_45683, skip_threads_45696)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45696 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45681, 32) == 0 ||
                          !ltid_in_bounds_45693)) {
                        // read operands
                        {
                            x_39243 = x_39242;
                            x_39242 = ((__local
                                        int32_t *) red_arr_mem_45685)[sext_i32_i64(squot32(local_tid_45681,
                                                                                           32)) -
                                                                      1];
                        }
                        // perform operation
                        {
                            bool inactive_45698 =
                                 slt64(srem64(sext_i32_i64(local_tid_45681),
                                              i32_res_30884),
                                       sext_i32_i64(local_tid_45681) -
                                       sext_i32_i64(squot32(local_tid_45681,
                                                            32) * 32 - 1));
                            
                            if (inactive_45698) {
                                x_39242 = x_39243;
                            }
                            if (!inactive_45698) {
                                int32_t defunc_1_op_res_39244 = add32(x_39242,
                                                                      x_39243);
                                
                                x_39242 = defunc_1_op_res_39244;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              int32_t *) red_arr_mem_45685)[sext_i32_i64(local_tid_45681)] =
                                x_39242;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45681, 32) == 0) {
                        ((__local
                          int32_t *) red_arr_mem_45685)[sext_i32_i64(local_tid_45681)] =
                            x_39243;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45689) *
                      squot64(segred_group_sizze_39238,
                              segment_sizze_nonzzero_45678) +
                      sext_i32_i64(local_tid_45681), m_30871) &&
                slt64(sext_i32_i64(local_tid_45681),
                      squot64(segred_group_sizze_39238,
                              segment_sizze_nonzzero_45678))) {
                ((__global
                  int32_t *) mem_44383)[sext_i32_i64(virt_group_id_45689) *
                                        squot64(segred_group_sizze_39238,
                                                segment_sizze_nonzzero_45678) +
                                        sext_i32_i64(local_tid_45681)] =
                    ((__local
                      int32_t *) red_arr_mem_45685)[(sext_i32_i64(local_tid_45681) +
                                                     1) *
                                                    segment_sizze_nonzzero_45678 -
                                                    1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39238
}
__kernel void mainzisegred_small_39378(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_45854_backing_aligned_0,
                                       int64_t N_30870, int64_t m_30871,
                                       int64_t i32_res_31232,
                                       int64_t num_groups_39396, __global
                                       unsigned char *defunc_4_map_res_mem_44332,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_44395,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_44396,
                                       __global unsigned char *mem_44429,
                                       int64_t segment_sizze_nonzzero_45847)
{
    #define segred_group_sizze_39395 (mainzisegred_group_sizze_39372)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45854_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45854_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45849;
    int32_t local_tid_45850;
    int64_t group_sizze_45853;
    int32_t wave_sizze_45852;
    int32_t group_tid_45851;
    
    global_tid_45849 = get_global_id(0);
    local_tid_45850 = get_local_id(0);
    group_sizze_45853 = get_local_size(0);
    wave_sizze_45852 = LOCKSTEP_WIDTH;
    group_tid_45851 = get_group_id(0);
    
    int32_t phys_tid_39378;
    
    phys_tid_39378 = global_tid_45849;
    
    __local char *red_arr_mem_45854;
    
    red_arr_mem_45854 = (__local char *) red_arr_mem_45854_backing_0;
    
    int32_t phys_group_id_45856;
    
    phys_group_id_45856 = get_group_id(0);
    for (int32_t i_45857 = 0; i_45857 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30871,
                                          squot64(segred_group_sizze_39395,
                                                  segment_sizze_nonzzero_45847))) -
                   phys_group_id_45856, sext_i64_i32(num_groups_39396));
         i_45857++) {
        int32_t virt_group_id_45858 = phys_group_id_45856 + i_45857 *
                sext_i64_i32(num_groups_39396);
        int64_t gtid_39369 = squot64(sext_i32_i64(local_tid_45850),
                                     segment_sizze_nonzzero_45847) +
                sext_i32_i64(virt_group_id_45858) *
                squot64(segred_group_sizze_39395, segment_sizze_nonzzero_45847);
        int64_t gtid_39377 = srem64(sext_i32_i64(local_tid_45850),
                                    i32_res_31232);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_31232) && (slt64(gtid_39369, m_30871) &&
                                            slt64(sext_i32_i64(local_tid_45850),
                                                  i32_res_31232 *
                                                  squot64(segred_group_sizze_39395,
                                                          segment_sizze_nonzzero_45847)))) {
                int32_t x_39404 = ((__global
                                    int32_t *) defunc_3_map_res_mem_44395)[gtid_39369];
                int32_t index_primexp_41528 = sext_i64_i32(gtid_39377);
                bool cond_39406 = slt32(index_primexp_41528, x_39404);
                float defunc_0_f_res_39407;
                
                if (cond_39406) {
                    int32_t x_39403 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44396)[gtid_39369];
                    int32_t x_39408 = add32(x_39403, index_primexp_41528);
                    int32_t x_39409 = sub32(x_39408, x_39404);
                    int32_t i_39410 = add32(1, x_39409);
                    int64_t i_39411 = sext_i32_i64(i_39410);
                    float defunc_0_f_res_t_res_39412 = ((__global
                                                         float *) defunc_4_map_res_mem_44332)[gtid_39369 *
                                                                                              N_30870 +
                                                                                              i_39411];
                    
                    defunc_0_f_res_39407 = defunc_0_f_res_t_res_39412;
                } else {
                    defunc_0_f_res_39407 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45854)[sext_i32_i64(local_tid_45850)] =
                        defunc_0_f_res_39407;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45854)[sext_i32_i64(local_tid_45850)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_31232)) {
            // perform segmented scan to imitate reduction
            {
                float x_39399;
                float x_39400;
                float x_45859;
                float x_45860;
                bool ltid_in_bounds_45862;
                
                ltid_in_bounds_45862 = slt64(sext_i32_i64(local_tid_45850),
                                             i32_res_31232 *
                                             squot64(segred_group_sizze_39395,
                                                     segment_sizze_nonzzero_45847));
                
                int32_t skip_threads_45863;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45862) {
                        x_39400 = ((volatile __local
                                    float *) red_arr_mem_45854)[sext_i32_i64(local_tid_45850)];
                        if ((local_tid_45850 - squot32(local_tid_45850, 32) *
                             32) == 0) {
                            x_39399 = x_39400;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45863 = 1;
                    while (slt32(skip_threads_45863, 32)) {
                        if (sle32(skip_threads_45863, local_tid_45850 -
                                  squot32(local_tid_45850, 32) * 32) &&
                            ltid_in_bounds_45862) {
                            // read operands
                            {
                                x_39399 = ((volatile __local
                                            float *) red_arr_mem_45854)[sext_i32_i64(local_tid_45850) -
                                                                        sext_i32_i64(skip_threads_45863)];
                            }
                            // perform operation
                            {
                                bool inactive_45864 =
                                     slt64(srem64(sext_i32_i64(local_tid_45850),
                                                  i32_res_31232),
                                           sext_i32_i64(local_tid_45850) -
                                           sext_i32_i64(local_tid_45850 -
                                           skip_threads_45863));
                                
                                if (inactive_45864) {
                                    x_39399 = x_39400;
                                }
                                if (!inactive_45864) {
                                    float defunc_1_op_res_39401 = x_39399 +
                                          x_39400;
                                    
                                    x_39399 = defunc_1_op_res_39401;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45852, skip_threads_45863)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45863, local_tid_45850 -
                                  squot32(local_tid_45850, 32) * 32) &&
                            ltid_in_bounds_45862) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45854)[sext_i32_i64(local_tid_45850)] =
                                    x_39399;
                                x_39400 = x_39399;
                            }
                        }
                        if (sle32(wave_sizze_45852, skip_threads_45863)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45863 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45850 - squot32(local_tid_45850, 32) * 32) ==
                        31 && ltid_in_bounds_45862) {
                        ((volatile __local
                          float *) red_arr_mem_45854)[sext_i32_i64(squot32(local_tid_45850,
                                                                           32))] =
                            x_39399;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45865;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45850, 32) == 0 &&
                            ltid_in_bounds_45862) {
                            x_45860 = ((volatile __local
                                        float *) red_arr_mem_45854)[sext_i32_i64(local_tid_45850)];
                            if ((local_tid_45850 - squot32(local_tid_45850,
                                                           32) * 32) == 0) {
                                x_45859 = x_45860;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45865 = 1;
                        while (slt32(skip_threads_45865, 32)) {
                            if (sle32(skip_threads_45865, local_tid_45850 -
                                      squot32(local_tid_45850, 32) * 32) &&
                                (squot32(local_tid_45850, 32) == 0 &&
                                 ltid_in_bounds_45862)) {
                                // read operands
                                {
                                    x_45859 = ((volatile __local
                                                float *) red_arr_mem_45854)[sext_i32_i64(local_tid_45850) -
                                                                            sext_i32_i64(skip_threads_45865)];
                                }
                                // perform operation
                                {
                                    bool inactive_45866 =
                                         slt64(srem64(sext_i32_i64(local_tid_45850 *
                                                      32 + 32 - 1),
                                                      i32_res_31232),
                                               sext_i32_i64(local_tid_45850 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45850 -
                                                             skip_threads_45865) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45866) {
                                        x_45859 = x_45860;
                                    }
                                    if (!inactive_45866) {
                                        float defunc_1_op_res_45861 = x_45859 +
                                              x_45860;
                                        
                                        x_45859 = defunc_1_op_res_45861;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45852, skip_threads_45865)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45865, local_tid_45850 -
                                      squot32(local_tid_45850, 32) * 32) &&
                                (squot32(local_tid_45850, 32) == 0 &&
                                 ltid_in_bounds_45862)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45854)[sext_i32_i64(local_tid_45850)] =
                                        x_45859;
                                    x_45860 = x_45859;
                                }
                            }
                            if (sle32(wave_sizze_45852, skip_threads_45865)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45865 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45850, 32) == 0 ||
                          !ltid_in_bounds_45862)) {
                        // read operands
                        {
                            x_39400 = x_39399;
                            x_39399 = ((__local
                                        float *) red_arr_mem_45854)[sext_i32_i64(squot32(local_tid_45850,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45867 =
                                 slt64(srem64(sext_i32_i64(local_tid_45850),
                                              i32_res_31232),
                                       sext_i32_i64(local_tid_45850) -
                                       sext_i32_i64(squot32(local_tid_45850,
                                                            32) * 32 - 1));
                            
                            if (inactive_45867) {
                                x_39399 = x_39400;
                            }
                            if (!inactive_45867) {
                                float defunc_1_op_res_39401 = x_39399 + x_39400;
                                
                                x_39399 = defunc_1_op_res_39401;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45854)[sext_i32_i64(local_tid_45850)] =
                                x_39399;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45850, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45854)[sext_i32_i64(local_tid_45850)] =
                            x_39400;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45858) *
                      squot64(segred_group_sizze_39395,
                              segment_sizze_nonzzero_45847) +
                      sext_i32_i64(local_tid_45850), m_30871) &&
                slt64(sext_i32_i64(local_tid_45850),
                      squot64(segred_group_sizze_39395,
                              segment_sizze_nonzzero_45847))) {
                ((__global
                  float *) mem_44429)[sext_i32_i64(virt_group_id_45858) *
                                      squot64(segred_group_sizze_39395,
                                              segment_sizze_nonzzero_45847) +
                                      sext_i32_i64(local_tid_45850)] = ((__local
                                                                         float *) red_arr_mem_45854)[(sext_i32_i64(local_tid_45850) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45847 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39395
}
__kernel void mainzisegred_small_40927(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_46066_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_46064_backing_aligned_1,
                                       __local volatile
                                       int64_t *red_arr_mem_46062_backing_aligned_2,
                                       int64_t m_30871,
                                       int64_t iota32_arg_31257,
                                       int64_t num_groups_41098, __global
                                       unsigned char *mem_44435, __global
                                       unsigned char *mem_44595, __global
                                       unsigned char *mem_44597, __global
                                       unsigned char *mem_44601, __global
                                       unsigned char *mem_44604, __global
                                       unsigned char *mem_44606, __global
                                       unsigned char *mem_44608,
                                       int64_t segment_sizze_nonzzero_46055)
{
    #define segred_group_sizze_41097 (mainzisegred_group_sizze_40921)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46066_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_46066_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46064_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_46064_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_46062_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46062_backing_aligned_2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46057;
    int32_t local_tid_46058;
    int64_t group_sizze_46061;
    int32_t wave_sizze_46060;
    int32_t group_tid_46059;
    
    global_tid_46057 = get_global_id(0);
    local_tid_46058 = get_local_id(0);
    group_sizze_46061 = get_local_size(0);
    wave_sizze_46060 = LOCKSTEP_WIDTH;
    group_tid_46059 = get_group_id(0);
    
    int32_t phys_tid_40927;
    
    phys_tid_40927 = global_tid_46057;
    
    __local char *red_arr_mem_46062;
    
    red_arr_mem_46062 = (__local char *) red_arr_mem_46062_backing_0;
    
    __local char *red_arr_mem_46064;
    
    red_arr_mem_46064 = (__local char *) red_arr_mem_46064_backing_1;
    
    __local char *red_arr_mem_46066;
    
    red_arr_mem_46066 = (__local char *) red_arr_mem_46066_backing_2;
    
    int32_t phys_group_id_46068;
    
    phys_group_id_46068 = get_group_id(0);
    for (int32_t i_46069 = 0; i_46069 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30871,
                                          squot64(segred_group_sizze_41097,
                                                  segment_sizze_nonzzero_46055))) -
                   phys_group_id_46068, sext_i64_i32(num_groups_41098));
         i_46069++) {
        int32_t virt_group_id_46070 = phys_group_id_46068 + i_46069 *
                sext_i64_i32(num_groups_41098);
        int64_t gtid_40918 = squot64(sext_i32_i64(local_tid_46058),
                                     segment_sizze_nonzzero_46055) +
                sext_i32_i64(virt_group_id_46070) *
                squot64(segred_group_sizze_41097, segment_sizze_nonzzero_46055);
        int64_t gtid_40926 = srem64(sext_i32_i64(local_tid_46058),
                                    iota32_arg_31257);
        
        // apply map function if in bounds
        {
            if (slt64(0, iota32_arg_31257) && (slt64(gtid_40918, m_30871) &&
                                               slt64(sext_i32_i64(local_tid_46058),
                                                     iota32_arg_31257 *
                                                     squot64(segred_group_sizze_41097,
                                                             segment_sizze_nonzzero_46055)))) {
                int32_t y_41117 = ((__global int32_t *) mem_44597)[gtid_40918];
                float y_41118 = ((__global float *) mem_44595)[gtid_40918];
                float x_41122 = ((__global float *) mem_44601)[gtid_40918 *
                                                               iota32_arg_31257 +
                                                               gtid_40926];
                float x_41123 = ((__global float *) mem_44435)[gtid_40926];
                int32_t index_primexp_41545 = sext_i64_i32(gtid_40926);
                float defunc_0_f_res_41126 = x_41122 / y_41118;
                bool cond_41127 = slt32(index_primexp_41545, y_41117);
                bool isnan_res_41128;
                
                isnan_res_41128 = futrts_isnan32(defunc_0_f_res_41126);
                
                bool cond_t_res_41129 = !isnan_res_41128;
                bool x_41130 = cond_41127 && cond_t_res_41129;
                float abs_res_41131 = (float) fabs(defunc_0_f_res_41126);
                bool defunc_2_f_res_t_res_41132 = x_41123 < abs_res_41131;
                bool x_41133 = x_41130 && defunc_2_f_res_t_res_41132;
                float defunc_1_f_res_41134;
                
                if (cond_41127) {
                    defunc_1_f_res_41134 = defunc_0_f_res_41126;
                } else {
                    defunc_1_f_res_41134 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      bool *) red_arr_mem_46062)[sext_i32_i64(local_tid_46058)] =
                        x_41133;
                    ((__local
                      int32_t *) red_arr_mem_46064)[sext_i32_i64(local_tid_46058)] =
                        index_primexp_41545;
                    ((__local
                      float *) red_arr_mem_46066)[sext_i32_i64(local_tid_46058)] =
                        defunc_1_f_res_41134;
                }
            } else {
                ((__local
                  bool *) red_arr_mem_46062)[sext_i32_i64(local_tid_46058)] = 0;
                ((__local
                  int32_t *) red_arr_mem_46064)[sext_i32_i64(local_tid_46058)] =
                    -1;
                ((__local
                  float *) red_arr_mem_46066)[sext_i32_i64(local_tid_46058)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, iota32_arg_31257)) {
            // perform segmented scan to imitate reduction
            {
                bool x_41103;
                int32_t x_41104;
                float x_41105;
                bool x_41106;
                int32_t x_41107;
                float x_41108;
                bool x_46071;
                int32_t x_46072;
                float x_46073;
                bool x_46074;
                int32_t x_46075;
                float x_46076;
                bool ltid_in_bounds_46085;
                
                ltid_in_bounds_46085 = slt64(sext_i32_i64(local_tid_46058),
                                             iota32_arg_31257 *
                                             squot64(segred_group_sizze_41097,
                                                     segment_sizze_nonzzero_46055));
                
                int32_t skip_threads_46086;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_46085) {
                        x_41106 = ((volatile __local
                                    bool *) red_arr_mem_46062)[sext_i32_i64(local_tid_46058)];
                        x_41107 = ((volatile __local
                                    int32_t *) red_arr_mem_46064)[sext_i32_i64(local_tid_46058)];
                        x_41108 = ((volatile __local
                                    float *) red_arr_mem_46066)[sext_i32_i64(local_tid_46058)];
                        if ((local_tid_46058 - squot32(local_tid_46058, 32) *
                             32) == 0) {
                            x_41103 = x_41106;
                            x_41104 = x_41107;
                            x_41105 = x_41108;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46086 = 1;
                    while (slt32(skip_threads_46086, 32)) {
                        if (sle32(skip_threads_46086, local_tid_46058 -
                                  squot32(local_tid_46058, 32) * 32) &&
                            ltid_in_bounds_46085) {
                            // read operands
                            {
                                x_41103 = ((volatile __local
                                            bool *) red_arr_mem_46062)[sext_i32_i64(local_tid_46058) -
                                                                       sext_i32_i64(skip_threads_46086)];
                                x_41104 = ((volatile __local
                                            int32_t *) red_arr_mem_46064)[sext_i32_i64(local_tid_46058) -
                                                                          sext_i32_i64(skip_threads_46086)];
                                x_41105 = ((volatile __local
                                            float *) red_arr_mem_46066)[sext_i32_i64(local_tid_46058) -
                                                                        sext_i32_i64(skip_threads_46086)];
                            }
                            // perform operation
                            {
                                bool inactive_46087 =
                                     slt64(srem64(sext_i32_i64(local_tid_46058),
                                                  iota32_arg_31257),
                                           sext_i32_i64(local_tid_46058) -
                                           sext_i32_i64(local_tid_46058 -
                                           skip_threads_46086));
                                
                                if (inactive_46087) {
                                    x_41103 = x_41106;
                                    x_41104 = x_41107;
                                    x_41105 = x_41108;
                                }
                                if (!inactive_46087) {
                                    bool defunc_1_op_res_41109;
                                    int32_t defunc_1_op_res_41110;
                                    
                                    if (x_41103) {
                                        defunc_1_op_res_41109 = x_41103;
                                        defunc_1_op_res_41110 = x_41104;
                                    } else {
                                        bool x_41111 = x_41106 && x_41106;
                                        bool x_41112 = !x_41106;
                                        bool y_41113 = x_41103 && x_41112;
                                        bool defunc_1_op_res_f_res_41114 =
                                             x_41111 || y_41113;
                                        int32_t defunc_1_op_res_f_res_41115;
                                        
                                        if (x_41106) {
                                            defunc_1_op_res_f_res_41115 =
                                                x_41107;
                                        } else {
                                            defunc_1_op_res_f_res_41115 =
                                                x_41104;
                                        }
                                        defunc_1_op_res_41109 =
                                            defunc_1_op_res_f_res_41114;
                                        defunc_1_op_res_41110 =
                                            defunc_1_op_res_f_res_41115;
                                    }
                                    
                                    float defunc_1_op_res_41116 = x_41105 +
                                          x_41108;
                                    
                                    x_41103 = defunc_1_op_res_41109;
                                    x_41104 = defunc_1_op_res_41110;
                                    x_41105 = defunc_1_op_res_41116;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46060, skip_threads_46086)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46086, local_tid_46058 -
                                  squot32(local_tid_46058, 32) * 32) &&
                            ltid_in_bounds_46085) {
                            // write result
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_46062)[sext_i32_i64(local_tid_46058)] =
                                    x_41103;
                                x_41106 = x_41103;
                                ((volatile __local
                                  int32_t *) red_arr_mem_46064)[sext_i32_i64(local_tid_46058)] =
                                    x_41104;
                                x_41107 = x_41104;
                                ((volatile __local
                                  float *) red_arr_mem_46066)[sext_i32_i64(local_tid_46058)] =
                                    x_41105;
                                x_41108 = x_41105;
                            }
                        }
                        if (sle32(wave_sizze_46060, skip_threads_46086)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46086 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_46058 - squot32(local_tid_46058, 32) * 32) ==
                        31 && ltid_in_bounds_46085) {
                        ((volatile __local
                          bool *) red_arr_mem_46062)[sext_i32_i64(squot32(local_tid_46058,
                                                                          32))] =
                            x_41103;
                        ((volatile __local
                          int32_t *) red_arr_mem_46064)[sext_i32_i64(squot32(local_tid_46058,
                                                                             32))] =
                            x_41104;
                        ((volatile __local
                          float *) red_arr_mem_46066)[sext_i32_i64(squot32(local_tid_46058,
                                                                           32))] =
                            x_41105;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_46088;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_46058, 32) == 0 &&
                            ltid_in_bounds_46085) {
                            x_46074 = ((volatile __local
                                        bool *) red_arr_mem_46062)[sext_i32_i64(local_tid_46058)];
                            x_46075 = ((volatile __local
                                        int32_t *) red_arr_mem_46064)[sext_i32_i64(local_tid_46058)];
                            x_46076 = ((volatile __local
                                        float *) red_arr_mem_46066)[sext_i32_i64(local_tid_46058)];
                            if ((local_tid_46058 - squot32(local_tid_46058,
                                                           32) * 32) == 0) {
                                x_46071 = x_46074;
                                x_46072 = x_46075;
                                x_46073 = x_46076;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_46088 = 1;
                        while (slt32(skip_threads_46088, 32)) {
                            if (sle32(skip_threads_46088, local_tid_46058 -
                                      squot32(local_tid_46058, 32) * 32) &&
                                (squot32(local_tid_46058, 32) == 0 &&
                                 ltid_in_bounds_46085)) {
                                // read operands
                                {
                                    x_46071 = ((volatile __local
                                                bool *) red_arr_mem_46062)[sext_i32_i64(local_tid_46058) -
                                                                           sext_i32_i64(skip_threads_46088)];
                                    x_46072 = ((volatile __local
                                                int32_t *) red_arr_mem_46064)[sext_i32_i64(local_tid_46058) -
                                                                              sext_i32_i64(skip_threads_46088)];
                                    x_46073 = ((volatile __local
                                                float *) red_arr_mem_46066)[sext_i32_i64(local_tid_46058) -
                                                                            sext_i32_i64(skip_threads_46088)];
                                }
                                // perform operation
                                {
                                    bool inactive_46089 =
                                         slt64(srem64(sext_i32_i64(local_tid_46058 *
                                                      32 + 32 - 1),
                                                      iota32_arg_31257),
                                               sext_i32_i64(local_tid_46058 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_46058 -
                                                             skip_threads_46088) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_46089) {
                                        x_46071 = x_46074;
                                        x_46072 = x_46075;
                                        x_46073 = x_46076;
                                    }
                                    if (!inactive_46089) {
                                        bool defunc_1_op_res_46077;
                                        int32_t defunc_1_op_res_46078;
                                        
                                        if (x_46071) {
                                            defunc_1_op_res_46077 = x_46071;
                                            defunc_1_op_res_46078 = x_46072;
                                        } else {
                                            bool x_46079 = x_46074 && x_46074;
                                            bool x_46080 = !x_46074;
                                            bool y_46081 = x_46071 && x_46080;
                                            bool defunc_1_op_res_f_res_46082 =
                                                 x_46079 || y_46081;
                                            int32_t defunc_1_op_res_f_res_46083;
                                            
                                            if (x_46074) {
                                                defunc_1_op_res_f_res_46083 =
                                                    x_46075;
                                            } else {
                                                defunc_1_op_res_f_res_46083 =
                                                    x_46072;
                                            }
                                            defunc_1_op_res_46077 =
                                                defunc_1_op_res_f_res_46082;
                                            defunc_1_op_res_46078 =
                                                defunc_1_op_res_f_res_46083;
                                        }
                                        
                                        float defunc_1_op_res_46084 = x_46073 +
                                              x_46076;
                                        
                                        x_46071 = defunc_1_op_res_46077;
                                        x_46072 = defunc_1_op_res_46078;
                                        x_46073 = defunc_1_op_res_46084;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_46060, skip_threads_46088)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_46088, local_tid_46058 -
                                      squot32(local_tid_46058, 32) * 32) &&
                                (squot32(local_tid_46058, 32) == 0 &&
                                 ltid_in_bounds_46085)) {
                                // write result
                                {
                                    ((volatile __local
                                      bool *) red_arr_mem_46062)[sext_i32_i64(local_tid_46058)] =
                                        x_46071;
                                    x_46074 = x_46071;
                                    ((volatile __local
                                      int32_t *) red_arr_mem_46064)[sext_i32_i64(local_tid_46058)] =
                                        x_46072;
                                    x_46075 = x_46072;
                                    ((volatile __local
                                      float *) red_arr_mem_46066)[sext_i32_i64(local_tid_46058)] =
                                        x_46073;
                                    x_46076 = x_46073;
                                }
                            }
                            if (sle32(wave_sizze_46060, skip_threads_46088)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_46088 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_46058, 32) == 0 ||
                          !ltid_in_bounds_46085)) {
                        // read operands
                        {
                            x_41106 = x_41103;
                            x_41107 = x_41104;
                            x_41108 = x_41105;
                            x_41103 = ((__local
                                        bool *) red_arr_mem_46062)[sext_i32_i64(squot32(local_tid_46058,
                                                                                        32)) -
                                                                   1];
                            x_41104 = ((__local
                                        int32_t *) red_arr_mem_46064)[sext_i32_i64(squot32(local_tid_46058,
                                                                                           32)) -
                                                                      1];
                            x_41105 = ((__local
                                        float *) red_arr_mem_46066)[sext_i32_i64(squot32(local_tid_46058,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_46090 =
                                 slt64(srem64(sext_i32_i64(local_tid_46058),
                                              iota32_arg_31257),
                                       sext_i32_i64(local_tid_46058) -
                                       sext_i32_i64(squot32(local_tid_46058,
                                                            32) * 32 - 1));
                            
                            if (inactive_46090) {
                                x_41103 = x_41106;
                                x_41104 = x_41107;
                                x_41105 = x_41108;
                            }
                            if (!inactive_46090) {
                                bool defunc_1_op_res_41109;
                                int32_t defunc_1_op_res_41110;
                                
                                if (x_41103) {
                                    defunc_1_op_res_41109 = x_41103;
                                    defunc_1_op_res_41110 = x_41104;
                                } else {
                                    bool x_41111 = x_41106 && x_41106;
                                    bool x_41112 = !x_41106;
                                    bool y_41113 = x_41103 && x_41112;
                                    bool defunc_1_op_res_f_res_41114 =
                                         x_41111 || y_41113;
                                    int32_t defunc_1_op_res_f_res_41115;
                                    
                                    if (x_41106) {
                                        defunc_1_op_res_f_res_41115 = x_41107;
                                    } else {
                                        defunc_1_op_res_f_res_41115 = x_41104;
                                    }
                                    defunc_1_op_res_41109 =
                                        defunc_1_op_res_f_res_41114;
                                    defunc_1_op_res_41110 =
                                        defunc_1_op_res_f_res_41115;
                                }
                                
                                float defunc_1_op_res_41116 = x_41105 + x_41108;
                                
                                x_41103 = defunc_1_op_res_41109;
                                x_41104 = defunc_1_op_res_41110;
                                x_41105 = defunc_1_op_res_41116;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              bool *) red_arr_mem_46062)[sext_i32_i64(local_tid_46058)] =
                                x_41103;
                            ((__local
                              int32_t *) red_arr_mem_46064)[sext_i32_i64(local_tid_46058)] =
                                x_41104;
                            ((__local
                              float *) red_arr_mem_46066)[sext_i32_i64(local_tid_46058)] =
                                x_41105;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_46058, 32) == 0) {
                        ((__local
                          bool *) red_arr_mem_46062)[sext_i32_i64(local_tid_46058)] =
                            x_41106;
                        ((__local
                          int32_t *) red_arr_mem_46064)[sext_i32_i64(local_tid_46058)] =
                            x_41107;
                        ((__local
                          float *) red_arr_mem_46066)[sext_i32_i64(local_tid_46058)] =
                            x_41108;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_46070) *
                      squot64(segred_group_sizze_41097,
                              segment_sizze_nonzzero_46055) +
                      sext_i32_i64(local_tid_46058), m_30871) &&
                slt64(sext_i32_i64(local_tid_46058),
                      squot64(segred_group_sizze_41097,
                              segment_sizze_nonzzero_46055))) {
                ((__global
                  bool *) mem_44604)[sext_i32_i64(virt_group_id_46070) *
                                     squot64(segred_group_sizze_41097,
                                             segment_sizze_nonzzero_46055) +
                                     sext_i32_i64(local_tid_46058)] = ((__local
                                                                        bool *) red_arr_mem_46062)[(sext_i32_i64(local_tid_46058) +
                                                                                                    1) *
                                                                                                   segment_sizze_nonzzero_46055 -
                                                                                                   1];
                ((__global
                  int32_t *) mem_44606)[sext_i32_i64(virt_group_id_46070) *
                                        squot64(segred_group_sizze_41097,
                                                segment_sizze_nonzzero_46055) +
                                        sext_i32_i64(local_tid_46058)] =
                    ((__local
                      int32_t *) red_arr_mem_46064)[(sext_i32_i64(local_tid_46058) +
                                                     1) *
                                                    segment_sizze_nonzzero_46055 -
                                                    1];
                ((__global
                  float *) mem_44608)[sext_i32_i64(virt_group_id_46070) *
                                      squot64(segred_group_sizze_41097,
                                              segment_sizze_nonzzero_46055) +
                                      sext_i32_i64(local_tid_46058)] = ((__local
                                                                         float *) red_arr_mem_46066)[(sext_i32_i64(local_tid_46058) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_46055 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_41097
}
__kernel void mainDetailedzicopy_45182(int64_t m_30124, int64_t nm_30275,
                                       int64_t ctx_param_ext_43735,
                                       int64_t ctx_param_ext_43736,
                                       int64_t ctx_param_ext_43738, __global
                                       unsigned char *mem_param_43740, __global
                                       unsigned char *mem_43745)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_45182;
    int32_t copy_ltid_45183;
    int32_t copy_gid_45184;
    
    copy_gtid_45182 = get_global_id(0);
    copy_ltid_45183 = get_local_id(0);
    copy_gid_45184 = get_group_id(0);
    if (slt64(sext_i32_i64(copy_gtid_45182), m_30124 * nm_30275)) {
        ((__global float *) mem_43745)[(sext_i32_i64(copy_gtid_45182) -
                                        squot64(sext_i32_i64(copy_gtid_45182),
                                                nm_30275) * nm_30275) *
                                       m_30124 +
                                       squot64(sext_i32_i64(copy_gtid_45182),
                                               nm_30275)] = ((__global
                                                              float *) mem_param_43740)[ctx_param_ext_43735 +
                                                                                        (squot64(sext_i32_i64(copy_gtid_45182),
                                                                                                 nm_30275) *
                                                                                         ctx_param_ext_43736 +
                                                                                         (sext_i32_i64(copy_gtid_45182) -
                                                                                          squot64(sext_i32_i64(copy_gtid_45182),
                                                                                                  nm_30275) *
                                                                                          nm_30275) *
                                                                                         ctx_param_ext_43738)];
    }
    
  error_0:
    return;
}
__kernel void mainDetailedziscan_stage1_33993(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_45612_backing_aligned_0,
                                              int64_t N_30123, int64_t m_30124,
                                              int64_t N_30125, __global
                                              unsigned char *images_mem_43532,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_44294,
                                              __global unsigned char *mem_44323,
                                              __global unsigned char *mem_44326,
                                              int32_t num_threads_45606)
{
    #define segscan_group_sizze_34010 (mainDetailedzisegscan_group_sizze_33987)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45612_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45612_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45607;
    int32_t local_tid_45608;
    int64_t group_sizze_45611;
    int32_t wave_sizze_45610;
    int32_t group_tid_45609;
    
    global_tid_45607 = get_global_id(0);
    local_tid_45608 = get_local_id(0);
    group_sizze_45611 = get_local_size(0);
    wave_sizze_45610 = LOCKSTEP_WIDTH;
    group_tid_45609 = get_group_id(0);
    
    int32_t phys_tid_33993;
    
    phys_tid_33993 = global_tid_45607;
    
    __local char *scan_arr_mem_45612;
    
    scan_arr_mem_45612 = (__local char *) scan_arr_mem_45612_backing_0;
    
    int64_t x_34015;
    int64_t x_34016;
    
    x_34015 = 0;
    for (int64_t j_45614 = 0; j_45614 < sdiv_up64(m_30124 * N_30123,
                                                  sext_i32_i64(num_threads_45606));
         j_45614++) {
        int64_t chunk_offset_45615 = segscan_group_sizze_34010 * j_45614 +
                sext_i32_i64(group_tid_45609) * (segscan_group_sizze_34010 *
                                                 sdiv_up64(m_30124 * N_30123,
                                                           sext_i32_i64(num_threads_45606)));
        int64_t flat_idx_45616 = chunk_offset_45615 +
                sext_i32_i64(local_tid_45608);
        int64_t gtid_33984 = squot64(flat_idx_45616, N_30123);
        int64_t gtid_33992 = flat_idx_45616 - squot64(flat_idx_45616, N_30123) *
                N_30123;
        
        // threads in bounds read input
        {
            if (slt64(gtid_33984, m_30124) && slt64(gtid_33992, N_30123)) {
                float x_34020 = ((__global
                                  float *) images_mem_43532)[gtid_33984 *
                                                             N_30125 +
                                                             gtid_33992];
                bool isnan_res_34022;
                
                isnan_res_34022 = futrts_isnan32(x_34020);
                
                bool cond_34023 = !isnan_res_34022;
                float defunc_0_f_res_34024;
                
                if (cond_34023) {
                    float x_34021 = ((__global
                                      float *) defunc_3_map_res_mem_44294)[gtid_33984 *
                                                                           N_30123 +
                                                                           gtid_33992];
                    float defunc_0_f_res_t_res_34025 = x_34020 - x_34021;
                    
                    defunc_0_f_res_34024 = defunc_0_f_res_t_res_34025;
                } else {
                    defunc_0_f_res_34024 = NAN;
                }
                
                bool isnan_res_34026;
                
                isnan_res_34026 = futrts_isnan32(defunc_0_f_res_34024);
                
                bool defunc_0_p_res_34027 = !isnan_res_34026;
                int64_t defunc_0_f_res_34028 =
                        btoi_bool_i64(defunc_0_p_res_34027);
                
                // write to-scan values to parameters
                {
                    x_34016 = defunc_0_f_res_34028;
                }
                // write mapped values results to global memory
                {
                    ((__global float *) mem_44326)[gtid_33984 * N_30123 +
                                                   gtid_33992] =
                        defunc_0_f_res_34024;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_33984, m_30124) && slt64(gtid_33992,
                                                          N_30123))) {
                    x_34016 = 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_34017 = add64(x_34015, x_34016);
                
                ((__local
                  int64_t *) scan_arr_mem_45612)[sext_i32_i64(local_tid_45608)] =
                    defunc_1_op_res_34017;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_45617;
            int64_t x_45618;
            int64_t x_45620;
            int64_t x_45621;
            bool ltid_in_bounds_45623;
            
            ltid_in_bounds_45623 = slt64(sext_i32_i64(local_tid_45608),
                                         segscan_group_sizze_34010);
            
            int32_t skip_threads_45624;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_45623) {
                    x_45618 = ((volatile __local
                                int64_t *) scan_arr_mem_45612)[sext_i32_i64(local_tid_45608)];
                    if ((local_tid_45608 - squot32(local_tid_45608, 32) * 32) ==
                        0) {
                        x_45617 = x_45618;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_45624 = 1;
                while (slt32(skip_threads_45624, 32)) {
                    if (sle32(skip_threads_45624, local_tid_45608 -
                              squot32(local_tid_45608, 32) * 32) &&
                        ltid_in_bounds_45623) {
                        // read operands
                        {
                            x_45617 = ((volatile __local
                                        int64_t *) scan_arr_mem_45612)[sext_i32_i64(local_tid_45608) -
                                                                       sext_i32_i64(skip_threads_45624)];
                        }
                        // perform operation
                        {
                            bool inactive_45625 =
                                 slt64(srem64(sext_i32_i64(local_tid_45608) +
                                              chunk_offset_45615, N_30123),
                                       sext_i32_i64(local_tid_45608) +
                                       chunk_offset_45615 -
                                       (sext_i32_i64(local_tid_45608 -
                                        skip_threads_45624) +
                                        chunk_offset_45615));
                            
                            if (inactive_45625) {
                                x_45617 = x_45618;
                            }
                            if (!inactive_45625) {
                                int64_t defunc_1_op_res_45619 = add64(x_45617,
                                                                      x_45618);
                                
                                x_45617 = defunc_1_op_res_45619;
                            }
                        }
                    }
                    if (sle32(wave_sizze_45610, skip_threads_45624)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_45624, local_tid_45608 -
                              squot32(local_tid_45608, 32) * 32) &&
                        ltid_in_bounds_45623) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_45612)[sext_i32_i64(local_tid_45608)] =
                                x_45617;
                            x_45618 = x_45617;
                        }
                    }
                    if (sle32(wave_sizze_45610, skip_threads_45624)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_45624 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_45608 - squot32(local_tid_45608, 32) * 32) ==
                    31 && ltid_in_bounds_45623) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_45612)[sext_i32_i64(squot32(local_tid_45608,
                                                                          32))] =
                        x_45617;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_45626;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_45608, 32) == 0 &&
                        ltid_in_bounds_45623) {
                        x_45621 = ((volatile __local
                                    int64_t *) scan_arr_mem_45612)[sext_i32_i64(local_tid_45608)];
                        if ((local_tid_45608 - squot32(local_tid_45608, 32) *
                             32) == 0) {
                            x_45620 = x_45621;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45626 = 1;
                    while (slt32(skip_threads_45626, 32)) {
                        if (sle32(skip_threads_45626, local_tid_45608 -
                                  squot32(local_tid_45608, 32) * 32) &&
                            (squot32(local_tid_45608, 32) == 0 &&
                             ltid_in_bounds_45623)) {
                            // read operands
                            {
                                x_45620 = ((volatile __local
                                            int64_t *) scan_arr_mem_45612)[sext_i32_i64(local_tid_45608) -
                                                                           sext_i32_i64(skip_threads_45626)];
                            }
                            // perform operation
                            {
                                bool inactive_45627 =
                                     slt64(srem64(sext_i32_i64(local_tid_45608 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_45615, N_30123),
                                           sext_i32_i64(local_tid_45608 * 32 +
                                           32 - 1) + chunk_offset_45615 -
                                           (sext_i32_i64((local_tid_45608 -
                                                          skip_threads_45626) *
                                            32 + 32 - 1) + chunk_offset_45615));
                                
                                if (inactive_45627) {
                                    x_45620 = x_45621;
                                }
                                if (!inactive_45627) {
                                    int64_t defunc_1_op_res_45622 =
                                            add64(x_45620, x_45621);
                                    
                                    x_45620 = defunc_1_op_res_45622;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45610, skip_threads_45626)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45626, local_tid_45608 -
                                  squot32(local_tid_45608, 32) * 32) &&
                            (squot32(local_tid_45608, 32) == 0 &&
                             ltid_in_bounds_45623)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_45612)[sext_i32_i64(local_tid_45608)] =
                                    x_45620;
                                x_45621 = x_45620;
                            }
                        }
                        if (sle32(wave_sizze_45610, skip_threads_45626)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45626 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_45608, 32) == 0 ||
                      !ltid_in_bounds_45623)) {
                    // read operands
                    {
                        x_45618 = x_45617;
                        x_45617 = ((__local
                                    int64_t *) scan_arr_mem_45612)[sext_i32_i64(squot32(local_tid_45608,
                                                                                        32)) -
                                                                   1];
                    }
                    // perform operation
                    {
                        bool inactive_45628 =
                             slt64(srem64(sext_i32_i64(local_tid_45608) +
                                          chunk_offset_45615, N_30123),
                                   sext_i32_i64(local_tid_45608) +
                                   chunk_offset_45615 -
                                   (sext_i32_i64(squot32(local_tid_45608, 32) *
                                    32 - 1) + chunk_offset_45615));
                        
                        if (inactive_45628) {
                            x_45617 = x_45618;
                        }
                        if (!inactive_45628) {
                            int64_t defunc_1_op_res_45619 = add64(x_45617,
                                                                  x_45618);
                            
                            x_45617 = defunc_1_op_res_45619;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_45612)[sext_i32_i64(local_tid_45608)] =
                            x_45617;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_45608, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_45612)[sext_i32_i64(local_tid_45608)] =
                        x_45618;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_33984, m_30124) && slt64(gtid_33992, N_30123)) {
                    ((__global int64_t *) mem_44323)[gtid_33984 * N_30123 +
                                                     gtid_33992] = ((__local
                                                                     int64_t *) scan_arr_mem_45612)[sext_i32_i64(local_tid_45608)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_45629 = slt64(srem64(chunk_offset_45615 +
                                                          segscan_group_sizze_34010,
                                                          N_30123),
                                                   chunk_offset_45615 +
                                                   segscan_group_sizze_34010 -
                                                   (chunk_offset_45615 +
                                                    segscan_group_sizze_34010 -
                                                    1));
                bool should_load_carry_45630 = local_tid_45608 == 0 &&
                     !crosses_segment_45629;
                
                if (should_load_carry_45630) {
                    x_34015 = ((__local
                                int64_t *) scan_arr_mem_45612)[segscan_group_sizze_34010 -
                                                               1];
                }
                if (!should_load_carry_45630) {
                    x_34015 = 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_34010
}
__kernel void mainDetailedziscan_stage1_35779(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_46245_backing_aligned_0,
                                              __local volatile
                                              int64_t *scan_arr_mem_46243_backing_aligned_1,
                                              __local volatile
                                              int64_t *scan_arr_mem_46241_backing_aligned_2,
                                              __local volatile
                                              int64_t *scan_arr_mem_46239_backing_aligned_3,
                                              int64_t m_30124,
                                              int64_t iota32_arg_30510,
                                              int32_t defunc_2_radix_sort_step_arg_36361,
                                              int32_t defunc_0_get_bit_arg_36362,
                                              unsigned char cond_f_res_36363,
                                              unsigned char cond_f_res_36364,
                                              __global
                                              unsigned char *mem_param_44679,
                                              __global unsigned char *mem_44706,
                                              __global unsigned char *mem_44709,
                                              __global unsigned char *mem_44712,
                                              __global unsigned char *mem_44715,
                                              __global unsigned char *mem_44718,
                                              int32_t num_threads_46233)
{
    #define segscan_group_sizze_36456 (mainDetailedzisegscan_group_sizze_35773)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_46245_backing_3 =
                          (__local volatile
                           char *) scan_arr_mem_46245_backing_aligned_0;
    __local volatile char *restrict scan_arr_mem_46243_backing_2 =
                          (__local volatile
                           char *) scan_arr_mem_46243_backing_aligned_1;
    __local volatile char *restrict scan_arr_mem_46241_backing_1 =
                          (__local volatile
                           char *) scan_arr_mem_46241_backing_aligned_2;
    __local volatile char *restrict scan_arr_mem_46239_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_46239_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46234;
    int32_t local_tid_46235;
    int64_t group_sizze_46238;
    int32_t wave_sizze_46237;
    int32_t group_tid_46236;
    
    global_tid_46234 = get_global_id(0);
    local_tid_46235 = get_local_id(0);
    group_sizze_46238 = get_local_size(0);
    wave_sizze_46237 = LOCKSTEP_WIDTH;
    group_tid_46236 = get_group_id(0);
    
    int32_t phys_tid_35779;
    
    phys_tid_35779 = global_tid_46234;
    
    __local char *scan_arr_mem_46239;
    __local char *scan_arr_mem_46241;
    __local char *scan_arr_mem_46243;
    __local char *scan_arr_mem_46245;
    
    scan_arr_mem_46239 = (__local char *) scan_arr_mem_46239_backing_0;
    scan_arr_mem_46241 = (__local char *) scan_arr_mem_46241_backing_1;
    scan_arr_mem_46243 = (__local char *) scan_arr_mem_46243_backing_2;
    scan_arr_mem_46245 = (__local char *) scan_arr_mem_46245_backing_3;
    
    int64_t x_36464;
    int64_t x_36465;
    int64_t x_36466;
    int64_t x_36467;
    int64_t x_36468;
    int64_t x_36469;
    int64_t x_36470;
    int64_t x_36471;
    
    x_36464 = 0;
    x_36465 = 0;
    x_36466 = 0;
    x_36467 = 0;
    for (int64_t j_46247 = 0; j_46247 < sdiv_up64(m_30124 * iota32_arg_30510,
                                                  sext_i32_i64(num_threads_46233));
         j_46247++) {
        int64_t chunk_offset_46248 = segscan_group_sizze_36456 * j_46247 +
                sext_i32_i64(group_tid_46236) * (segscan_group_sizze_36456 *
                                                 sdiv_up64(m_30124 *
                                                           iota32_arg_30510,
                                                           sext_i32_i64(num_threads_46233)));
        int64_t flat_idx_46249 = chunk_offset_46248 +
                sext_i32_i64(local_tid_46235);
        int64_t gtid_35770 = squot64(flat_idx_46249, iota32_arg_30510);
        int64_t gtid_35778 = flat_idx_46249 - squot64(flat_idx_46249,
                                                      iota32_arg_30510) *
                iota32_arg_30510;
        
        // threads in bounds read input
        {
            if (slt64(gtid_35770, m_30124) && slt64(gtid_35778,
                                                    iota32_arg_30510)) {
                float x_36477 = ((__global
                                  float *) mem_param_44679)[gtid_35770 *
                                                            iota32_arg_30510 +
                                                            gtid_35778];
                int32_t i32_arg_36478;
                
                i32_arg_36478 = futrts_to_bits32(x_36477);
                
                int32_t unsign_arg_36479 = ashr32(i32_arg_36478,
                                                  defunc_0_get_bit_arg_36362);
                int32_t unsign_arg_36480 = 1 & unsign_arg_36479;
                int32_t unsign_arg_36481 = ashr32(i32_arg_36478, 31);
                int32_t unsign_arg_36482 = 1 & unsign_arg_36481;
                bool cond_36483 = unsign_arg_36482 == 1;
                bool x_36484 = !cond_36483;
                bool y_36485 = cond_f_res_36363 && x_36484;
                bool cond_36486 = cond_36483 || y_36485;
                int32_t defunc_1_get_bit_res_36487;
                
                if (cond_36486) {
                    int32_t defunc_1_get_bit_res_t_res_36488 = 1 ^
                            unsign_arg_36480;
                    
                    defunc_1_get_bit_res_36487 =
                        defunc_1_get_bit_res_t_res_36488;
                } else {
                    defunc_1_get_bit_res_36487 = unsign_arg_36480;
                }
                
                int32_t x_36489 = mul32(2, defunc_1_get_bit_res_36487);
                int32_t unsign_arg_36490 = ashr32(i32_arg_36478,
                                                  defunc_2_radix_sort_step_arg_36361);
                int32_t unsign_arg_36491 = 1 & unsign_arg_36490;
                bool y_36492 = cond_f_res_36364 && x_36484;
                bool cond_36493 = cond_36483 || y_36492;
                int32_t defunc_1_get_bit_res_36494;
                
                if (cond_36493) {
                    int32_t defunc_1_get_bit_res_t_res_36495 = 1 ^
                            unsign_arg_36491;
                    
                    defunc_1_get_bit_res_36494 =
                        defunc_1_get_bit_res_t_res_36495;
                } else {
                    defunc_1_get_bit_res_36494 = unsign_arg_36491;
                }
                
                int32_t defunc_0_f_res_36496 = add32(x_36489,
                                                     defunc_1_get_bit_res_36494);
                bool cond_36497 = defunc_0_f_res_36496 == 0;
                int64_t defunc_0_f_res_36498 = btoi_bool_i64(cond_36497);
                int64_t defunc_0_f_res_36499;
                int64_t defunc_0_f_res_36500;
                int64_t defunc_0_f_res_36501;
                
                if (cond_36497) {
                    defunc_0_f_res_36499 = 0;
                    defunc_0_f_res_36500 = 0;
                    defunc_0_f_res_36501 = 0;
                } else {
                    bool cond_36502 = defunc_0_f_res_36496 == 1;
                    int64_t defunc_0_f_res_f_res_36503 =
                            btoi_bool_i64(cond_36502);
                    int64_t defunc_0_f_res_f_res_36504;
                    int64_t defunc_0_f_res_f_res_36505;
                    
                    if (cond_36502) {
                        defunc_0_f_res_f_res_36504 = 0;
                        defunc_0_f_res_f_res_36505 = 0;
                    } else {
                        bool cond_36506 = defunc_0_f_res_36496 == 2;
                        int64_t defunc_0_f_res_f_res_f_res_36507 =
                                btoi_bool_i64(cond_36506);
                        bool cond_neg_36508 = !cond_36506;
                        int64_t defunc_0_f_res_f_res_f_res_36509 =
                                btoi_bool_i64(cond_neg_36508);
                        
                        defunc_0_f_res_f_res_36504 =
                            defunc_0_f_res_f_res_f_res_36507;
                        defunc_0_f_res_f_res_36505 =
                            defunc_0_f_res_f_res_f_res_36509;
                    }
                    defunc_0_f_res_36499 = defunc_0_f_res_f_res_36503;
                    defunc_0_f_res_36500 = defunc_0_f_res_f_res_36504;
                    defunc_0_f_res_36501 = defunc_0_f_res_f_res_36505;
                }
                // write to-scan values to parameters
                {
                    x_36468 = defunc_0_f_res_36498;
                    x_36469 = defunc_0_f_res_36499;
                    x_36470 = defunc_0_f_res_36500;
                    x_36471 = defunc_0_f_res_36501;
                }
                // write mapped values results to global memory
                {
                    ((__global int32_t *) mem_44718)[gtid_35770 *
                                                     iota32_arg_30510 +
                                                     gtid_35778] =
                        defunc_0_f_res_36496;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_35770, m_30124) && slt64(gtid_35778,
                                                          iota32_arg_30510))) {
                    x_36468 = 0;
                    x_36469 = 0;
                    x_36470 = 0;
                    x_36471 = 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_36472 = add64(x_36464, x_36468);
                int64_t defunc_1_op_res_36473 = add64(x_36465, x_36469);
                int64_t defunc_1_op_res_36474 = add64(x_36466, x_36470);
                int64_t defunc_1_op_res_36475 = add64(x_36467, x_36471);
                
                ((__local
                  int64_t *) scan_arr_mem_46239)[sext_i32_i64(local_tid_46235)] =
                    defunc_1_op_res_36472;
                ((__local
                  int64_t *) scan_arr_mem_46241)[sext_i32_i64(local_tid_46235)] =
                    defunc_1_op_res_36473;
                ((__local
                  int64_t *) scan_arr_mem_46243)[sext_i32_i64(local_tid_46235)] =
                    defunc_1_op_res_36474;
                ((__local
                  int64_t *) scan_arr_mem_46245)[sext_i32_i64(local_tid_46235)] =
                    defunc_1_op_res_36475;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_46250;
            int64_t x_46251;
            int64_t x_46252;
            int64_t x_46253;
            int64_t x_46254;
            int64_t x_46255;
            int64_t x_46256;
            int64_t x_46257;
            int64_t x_46262;
            int64_t x_46263;
            int64_t x_46264;
            int64_t x_46265;
            int64_t x_46266;
            int64_t x_46267;
            int64_t x_46268;
            int64_t x_46269;
            bool ltid_in_bounds_46274;
            
            ltid_in_bounds_46274 = slt64(sext_i32_i64(local_tid_46235),
                                         segscan_group_sizze_36456);
            
            int32_t skip_threads_46275;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_46274) {
                    x_46254 = ((volatile __local
                                int64_t *) scan_arr_mem_46239)[sext_i32_i64(local_tid_46235)];
                    x_46255 = ((volatile __local
                                int64_t *) scan_arr_mem_46241)[sext_i32_i64(local_tid_46235)];
                    x_46256 = ((volatile __local
                                int64_t *) scan_arr_mem_46243)[sext_i32_i64(local_tid_46235)];
                    x_46257 = ((volatile __local
                                int64_t *) scan_arr_mem_46245)[sext_i32_i64(local_tid_46235)];
                    if ((local_tid_46235 - squot32(local_tid_46235, 32) * 32) ==
                        0) {
                        x_46250 = x_46254;
                        x_46251 = x_46255;
                        x_46252 = x_46256;
                        x_46253 = x_46257;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_46275 = 1;
                while (slt32(skip_threads_46275, 32)) {
                    if (sle32(skip_threads_46275, local_tid_46235 -
                              squot32(local_tid_46235, 32) * 32) &&
                        ltid_in_bounds_46274) {
                        // read operands
                        {
                            x_46250 = ((volatile __local
                                        int64_t *) scan_arr_mem_46239)[sext_i32_i64(local_tid_46235) -
                                                                       sext_i32_i64(skip_threads_46275)];
                            x_46251 = ((volatile __local
                                        int64_t *) scan_arr_mem_46241)[sext_i32_i64(local_tid_46235) -
                                                                       sext_i32_i64(skip_threads_46275)];
                            x_46252 = ((volatile __local
                                        int64_t *) scan_arr_mem_46243)[sext_i32_i64(local_tid_46235) -
                                                                       sext_i32_i64(skip_threads_46275)];
                            x_46253 = ((volatile __local
                                        int64_t *) scan_arr_mem_46245)[sext_i32_i64(local_tid_46235) -
                                                                       sext_i32_i64(skip_threads_46275)];
                        }
                        // perform operation
                        {
                            bool inactive_46276 =
                                 slt64(srem64(sext_i32_i64(local_tid_46235) +
                                              chunk_offset_46248,
                                              iota32_arg_30510),
                                       sext_i32_i64(local_tid_46235) +
                                       chunk_offset_46248 -
                                       (sext_i32_i64(local_tid_46235 -
                                        skip_threads_46275) +
                                        chunk_offset_46248));
                            
                            if (inactive_46276) {
                                x_46250 = x_46254;
                                x_46251 = x_46255;
                                x_46252 = x_46256;
                                x_46253 = x_46257;
                            }
                            if (!inactive_46276) {
                                int64_t defunc_1_op_res_46258 = add64(x_46250,
                                                                      x_46254);
                                int64_t defunc_1_op_res_46259 = add64(x_46251,
                                                                      x_46255);
                                int64_t defunc_1_op_res_46260 = add64(x_46252,
                                                                      x_46256);
                                int64_t defunc_1_op_res_46261 = add64(x_46253,
                                                                      x_46257);
                                
                                x_46250 = defunc_1_op_res_46258;
                                x_46251 = defunc_1_op_res_46259;
                                x_46252 = defunc_1_op_res_46260;
                                x_46253 = defunc_1_op_res_46261;
                            }
                        }
                    }
                    if (sle32(wave_sizze_46237, skip_threads_46275)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_46275, local_tid_46235 -
                              squot32(local_tid_46235, 32) * 32) &&
                        ltid_in_bounds_46274) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_46239)[sext_i32_i64(local_tid_46235)] =
                                x_46250;
                            x_46254 = x_46250;
                            ((volatile __local
                              int64_t *) scan_arr_mem_46241)[sext_i32_i64(local_tid_46235)] =
                                x_46251;
                            x_46255 = x_46251;
                            ((volatile __local
                              int64_t *) scan_arr_mem_46243)[sext_i32_i64(local_tid_46235)] =
                                x_46252;
                            x_46256 = x_46252;
                            ((volatile __local
                              int64_t *) scan_arr_mem_46245)[sext_i32_i64(local_tid_46235)] =
                                x_46253;
                            x_46257 = x_46253;
                        }
                    }
                    if (sle32(wave_sizze_46237, skip_threads_46275)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_46275 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_46235 - squot32(local_tid_46235, 32) * 32) ==
                    31 && ltid_in_bounds_46274) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_46239)[sext_i32_i64(squot32(local_tid_46235,
                                                                          32))] =
                        x_46250;
                    ((volatile __local
                      int64_t *) scan_arr_mem_46241)[sext_i32_i64(squot32(local_tid_46235,
                                                                          32))] =
                        x_46251;
                    ((volatile __local
                      int64_t *) scan_arr_mem_46243)[sext_i32_i64(squot32(local_tid_46235,
                                                                          32))] =
                        x_46252;
                    ((volatile __local
                      int64_t *) scan_arr_mem_46245)[sext_i32_i64(squot32(local_tid_46235,
                                                                          32))] =
                        x_46253;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_46277;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_46235, 32) == 0 &&
                        ltid_in_bounds_46274) {
                        x_46266 = ((volatile __local
                                    int64_t *) scan_arr_mem_46239)[sext_i32_i64(local_tid_46235)];
                        x_46267 = ((volatile __local
                                    int64_t *) scan_arr_mem_46241)[sext_i32_i64(local_tid_46235)];
                        x_46268 = ((volatile __local
                                    int64_t *) scan_arr_mem_46243)[sext_i32_i64(local_tid_46235)];
                        x_46269 = ((volatile __local
                                    int64_t *) scan_arr_mem_46245)[sext_i32_i64(local_tid_46235)];
                        if ((local_tid_46235 - squot32(local_tid_46235, 32) *
                             32) == 0) {
                            x_46262 = x_46266;
                            x_46263 = x_46267;
                            x_46264 = x_46268;
                            x_46265 = x_46269;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46277 = 1;
                    while (slt32(skip_threads_46277, 32)) {
                        if (sle32(skip_threads_46277, local_tid_46235 -
                                  squot32(local_tid_46235, 32) * 32) &&
                            (squot32(local_tid_46235, 32) == 0 &&
                             ltid_in_bounds_46274)) {
                            // read operands
                            {
                                x_46262 = ((volatile __local
                                            int64_t *) scan_arr_mem_46239)[sext_i32_i64(local_tid_46235) -
                                                                           sext_i32_i64(skip_threads_46277)];
                                x_46263 = ((volatile __local
                                            int64_t *) scan_arr_mem_46241)[sext_i32_i64(local_tid_46235) -
                                                                           sext_i32_i64(skip_threads_46277)];
                                x_46264 = ((volatile __local
                                            int64_t *) scan_arr_mem_46243)[sext_i32_i64(local_tid_46235) -
                                                                           sext_i32_i64(skip_threads_46277)];
                                x_46265 = ((volatile __local
                                            int64_t *) scan_arr_mem_46245)[sext_i32_i64(local_tid_46235) -
                                                                           sext_i32_i64(skip_threads_46277)];
                            }
                            // perform operation
                            {
                                bool inactive_46278 =
                                     slt64(srem64(sext_i32_i64(local_tid_46235 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_46248,
                                                  iota32_arg_30510),
                                           sext_i32_i64(local_tid_46235 * 32 +
                                           32 - 1) + chunk_offset_46248 -
                                           (sext_i32_i64((local_tid_46235 -
                                                          skip_threads_46277) *
                                            32 + 32 - 1) + chunk_offset_46248));
                                
                                if (inactive_46278) {
                                    x_46262 = x_46266;
                                    x_46263 = x_46267;
                                    x_46264 = x_46268;
                                    x_46265 = x_46269;
                                }
                                if (!inactive_46278) {
                                    int64_t defunc_1_op_res_46270 =
                                            add64(x_46262, x_46266);
                                    int64_t defunc_1_op_res_46271 =
                                            add64(x_46263, x_46267);
                                    int64_t defunc_1_op_res_46272 =
                                            add64(x_46264, x_46268);
                                    int64_t defunc_1_op_res_46273 =
                                            add64(x_46265, x_46269);
                                    
                                    x_46262 = defunc_1_op_res_46270;
                                    x_46263 = defunc_1_op_res_46271;
                                    x_46264 = defunc_1_op_res_46272;
                                    x_46265 = defunc_1_op_res_46273;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46237, skip_threads_46277)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46277, local_tid_46235 -
                                  squot32(local_tid_46235, 32) * 32) &&
                            (squot32(local_tid_46235, 32) == 0 &&
                             ltid_in_bounds_46274)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_46239)[sext_i32_i64(local_tid_46235)] =
                                    x_46262;
                                x_46266 = x_46262;
                                ((volatile __local
                                  int64_t *) scan_arr_mem_46241)[sext_i32_i64(local_tid_46235)] =
                                    x_46263;
                                x_46267 = x_46263;
                                ((volatile __local
                                  int64_t *) scan_arr_mem_46243)[sext_i32_i64(local_tid_46235)] =
                                    x_46264;
                                x_46268 = x_46264;
                                ((volatile __local
                                  int64_t *) scan_arr_mem_46245)[sext_i32_i64(local_tid_46235)] =
                                    x_46265;
                                x_46269 = x_46265;
                            }
                        }
                        if (sle32(wave_sizze_46237, skip_threads_46277)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46277 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_46235, 32) == 0 ||
                      !ltid_in_bounds_46274)) {
                    // read operands
                    {
                        x_46254 = x_46250;
                        x_46255 = x_46251;
                        x_46256 = x_46252;
                        x_46257 = x_46253;
                        x_46250 = ((__local
                                    int64_t *) scan_arr_mem_46239)[sext_i32_i64(squot32(local_tid_46235,
                                                                                        32)) -
                                                                   1];
                        x_46251 = ((__local
                                    int64_t *) scan_arr_mem_46241)[sext_i32_i64(squot32(local_tid_46235,
                                                                                        32)) -
                                                                   1];
                        x_46252 = ((__local
                                    int64_t *) scan_arr_mem_46243)[sext_i32_i64(squot32(local_tid_46235,
                                                                                        32)) -
                                                                   1];
                        x_46253 = ((__local
                                    int64_t *) scan_arr_mem_46245)[sext_i32_i64(squot32(local_tid_46235,
                                                                                        32)) -
                                                                   1];
                    }
                    // perform operation
                    {
                        bool inactive_46279 =
                             slt64(srem64(sext_i32_i64(local_tid_46235) +
                                          chunk_offset_46248, iota32_arg_30510),
                                   sext_i32_i64(local_tid_46235) +
                                   chunk_offset_46248 -
                                   (sext_i32_i64(squot32(local_tid_46235, 32) *
                                    32 - 1) + chunk_offset_46248));
                        
                        if (inactive_46279) {
                            x_46250 = x_46254;
                            x_46251 = x_46255;
                            x_46252 = x_46256;
                            x_46253 = x_46257;
                        }
                        if (!inactive_46279) {
                            int64_t defunc_1_op_res_46258 = add64(x_46250,
                                                                  x_46254);
                            int64_t defunc_1_op_res_46259 = add64(x_46251,
                                                                  x_46255);
                            int64_t defunc_1_op_res_46260 = add64(x_46252,
                                                                  x_46256);
                            int64_t defunc_1_op_res_46261 = add64(x_46253,
                                                                  x_46257);
                            
                            x_46250 = defunc_1_op_res_46258;
                            x_46251 = defunc_1_op_res_46259;
                            x_46252 = defunc_1_op_res_46260;
                            x_46253 = defunc_1_op_res_46261;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_46239)[sext_i32_i64(local_tid_46235)] =
                            x_46250;
                        ((__local
                          int64_t *) scan_arr_mem_46241)[sext_i32_i64(local_tid_46235)] =
                            x_46251;
                        ((__local
                          int64_t *) scan_arr_mem_46243)[sext_i32_i64(local_tid_46235)] =
                            x_46252;
                        ((__local
                          int64_t *) scan_arr_mem_46245)[sext_i32_i64(local_tid_46235)] =
                            x_46253;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_46235, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_46239)[sext_i32_i64(local_tid_46235)] =
                        x_46254;
                    ((__local
                      int64_t *) scan_arr_mem_46241)[sext_i32_i64(local_tid_46235)] =
                        x_46255;
                    ((__local
                      int64_t *) scan_arr_mem_46243)[sext_i32_i64(local_tid_46235)] =
                        x_46256;
                    ((__local
                      int64_t *) scan_arr_mem_46245)[sext_i32_i64(local_tid_46235)] =
                        x_46257;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_35770, m_30124) && slt64(gtid_35778,
                                                        iota32_arg_30510)) {
                    ((__global int64_t *) mem_44706)[gtid_35770 *
                                                     iota32_arg_30510 +
                                                     gtid_35778] = ((__local
                                                                     int64_t *) scan_arr_mem_46239)[sext_i32_i64(local_tid_46235)];
                    ((__global int64_t *) mem_44709)[gtid_35770 *
                                                     iota32_arg_30510 +
                                                     gtid_35778] = ((__local
                                                                     int64_t *) scan_arr_mem_46241)[sext_i32_i64(local_tid_46235)];
                    ((__global int64_t *) mem_44712)[gtid_35770 *
                                                     iota32_arg_30510 +
                                                     gtid_35778] = ((__local
                                                                     int64_t *) scan_arr_mem_46243)[sext_i32_i64(local_tid_46235)];
                    ((__global int64_t *) mem_44715)[gtid_35770 *
                                                     iota32_arg_30510 +
                                                     gtid_35778] = ((__local
                                                                     int64_t *) scan_arr_mem_46245)[sext_i32_i64(local_tid_46235)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_46280 = slt64(srem64(chunk_offset_46248 +
                                                          segscan_group_sizze_36456,
                                                          iota32_arg_30510),
                                                   chunk_offset_46248 +
                                                   segscan_group_sizze_36456 -
                                                   (chunk_offset_46248 +
                                                    segscan_group_sizze_36456 -
                                                    1));
                bool should_load_carry_46281 = local_tid_46235 == 0 &&
                     !crosses_segment_46280;
                
                if (should_load_carry_46281) {
                    x_36464 = ((__local
                                int64_t *) scan_arr_mem_46239)[segscan_group_sizze_36456 -
                                                               1];
                    x_36465 = ((__local
                                int64_t *) scan_arr_mem_46241)[segscan_group_sizze_36456 -
                                                               1];
                    x_36466 = ((__local
                                int64_t *) scan_arr_mem_46243)[segscan_group_sizze_36456 -
                                                               1];
                    x_36467 = ((__local
                                int64_t *) scan_arr_mem_46245)[segscan_group_sizze_36456 -
                                                               1];
                }
                if (!should_load_carry_46281) {
                    x_36464 = 0;
                    x_36465 = 0;
                    x_36466 = 0;
                    x_36467 = 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_36456
}
__kernel void mainDetailedziscan_stage1_36134(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_46039_backing_aligned_0,
                                              int64_t N_30123, int64_t m_30124,
                                              int64_t iota32_arg_30510, __global
                                              unsigned char *defunc_4_map_res_mem_44332,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_44395,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_44396,
                                              __global
                                              unsigned char *defunc_0_f_res_mem_44430,
                                              __global unsigned char *mem_44645,
                                              __global unsigned char *mem_44649,
                                              int32_t num_threads_46033)
{
    #define segscan_group_sizze_36212 (mainDetailedzisegscan_group_sizze_36128)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_46039_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_46039_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46034;
    int32_t local_tid_46035;
    int64_t group_sizze_46038;
    int32_t wave_sizze_46037;
    int32_t group_tid_46036;
    
    global_tid_46034 = get_global_id(0);
    local_tid_46035 = get_local_id(0);
    group_sizze_46038 = get_local_size(0);
    wave_sizze_46037 = LOCKSTEP_WIDTH;
    group_tid_46036 = get_group_id(0);
    
    int32_t phys_tid_36134;
    
    phys_tid_36134 = global_tid_46034;
    
    __local char *scan_arr_mem_46039;
    
    scan_arr_mem_46039 = (__local char *) scan_arr_mem_46039_backing_0;
    
    float x_36216;
    float x_36217;
    
    x_36216 = 0.0F;
    for (int64_t j_46041 = 0; j_46041 < sdiv_up64(m_30124 * iota32_arg_30510,
                                                  sext_i32_i64(num_threads_46033));
         j_46041++) {
        int64_t chunk_offset_46042 = segscan_group_sizze_36212 * j_46041 +
                sext_i32_i64(group_tid_46036) * (segscan_group_sizze_36212 *
                                                 sdiv_up64(m_30124 *
                                                           iota32_arg_30510,
                                                           sext_i32_i64(num_threads_46033)));
        int64_t flat_idx_46043 = chunk_offset_46042 +
                sext_i32_i64(local_tid_46035);
        int64_t gtid_36125 = squot64(flat_idx_46043, iota32_arg_30510);
        int64_t gtid_36133 = flat_idx_46043 - squot64(flat_idx_46043,
                                                      iota32_arg_30510) *
                iota32_arg_30510;
        
        // threads in bounds read input
        {
            if (slt64(gtid_36125, m_30124) && slt64(gtid_36133,
                                                    iota32_arg_30510)) {
                int32_t y_36223 = ((__global int32_t *) mem_44645)[gtid_36125];
                int32_t index_primexp_41545 = sext_i64_i32(gtid_36133);
                bool cond_36226 = sle32(y_36223, index_primexp_41545);
                float defunc_0_f_res_36227;
                
                if (cond_36226) {
                    defunc_0_f_res_36227 = 0.0F;
                } else {
                    int32_t x_36219 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44396)[gtid_36125];
                    int32_t x_36220 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44395)[gtid_36125];
                    float x_36221 = ((__global
                                      float *) defunc_0_f_res_mem_44430)[gtid_36125];
                    bool cond_36228 = index_primexp_41545 == 0;
                    float defunc_0_f_res_f_res_36229;
                    
                    if (cond_36228) {
                        defunc_0_f_res_f_res_36229 = x_36221;
                    } else {
                        int32_t i_36230 = add32(x_36219, index_primexp_41545);
                        int64_t i_36231 = sext_i32_i64(i_36230);
                        float x_36232 = ((__global
                                          float *) defunc_4_map_res_mem_44332)[gtid_36125 *
                                                                               N_30123 +
                                                                               i_36231];
                        int32_t x_36233 = sub32(x_36219, x_36220);
                        int32_t i_36234 = add32(x_36233, index_primexp_41545);
                        int64_t i_36235 = sext_i32_i64(i_36234);
                        float y_36236 = ((__global
                                          float *) defunc_4_map_res_mem_44332)[gtid_36125 *
                                                                               N_30123 +
                                                                               i_36235];
                        float defunc_0_f_res_f_res_f_res_36237 = x_36232 -
                              y_36236;
                        
                        defunc_0_f_res_f_res_36229 =
                            defunc_0_f_res_f_res_f_res_36237;
                    }
                    defunc_0_f_res_36227 = defunc_0_f_res_f_res_36229;
                }
                // write to-scan values to parameters
                {
                    x_36217 = defunc_0_f_res_36227;
                }
                // write mapped values results to global memory
                { }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_36125, m_30124) && slt64(gtid_36133,
                                                          iota32_arg_30510))) {
                    x_36217 = 0.0F;
                }
            }
            // combine with carry and write to local memory
            {
                float defunc_1_op_res_36218 = x_36216 + x_36217;
                
                ((__local
                  float *) scan_arr_mem_46039)[sext_i32_i64(local_tid_46035)] =
                    defunc_1_op_res_36218;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float x_46044;
            float x_46045;
            float x_46047;
            float x_46048;
            bool ltid_in_bounds_46050;
            
            ltid_in_bounds_46050 = slt64(sext_i32_i64(local_tid_46035),
                                         segscan_group_sizze_36212);
            
            int32_t skip_threads_46051;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_46050) {
                    x_46045 = ((volatile __local
                                float *) scan_arr_mem_46039)[sext_i32_i64(local_tid_46035)];
                    if ((local_tid_46035 - squot32(local_tid_46035, 32) * 32) ==
                        0) {
                        x_46044 = x_46045;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_46051 = 1;
                while (slt32(skip_threads_46051, 32)) {
                    if (sle32(skip_threads_46051, local_tid_46035 -
                              squot32(local_tid_46035, 32) * 32) &&
                        ltid_in_bounds_46050) {
                        // read operands
                        {
                            x_46044 = ((volatile __local
                                        float *) scan_arr_mem_46039)[sext_i32_i64(local_tid_46035) -
                                                                     sext_i32_i64(skip_threads_46051)];
                        }
                        // perform operation
                        {
                            bool inactive_46052 =
                                 slt64(srem64(sext_i32_i64(local_tid_46035) +
                                              chunk_offset_46042,
                                              iota32_arg_30510),
                                       sext_i32_i64(local_tid_46035) +
                                       chunk_offset_46042 -
                                       (sext_i32_i64(local_tid_46035 -
                                        skip_threads_46051) +
                                        chunk_offset_46042));
                            
                            if (inactive_46052) {
                                x_46044 = x_46045;
                            }
                            if (!inactive_46052) {
                                float defunc_1_op_res_46046 = x_46044 + x_46045;
                                
                                x_46044 = defunc_1_op_res_46046;
                            }
                        }
                    }
                    if (sle32(wave_sizze_46037, skip_threads_46051)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_46051, local_tid_46035 -
                              squot32(local_tid_46035, 32) * 32) &&
                        ltid_in_bounds_46050) {
                        // write result
                        {
                            ((volatile __local
                              float *) scan_arr_mem_46039)[sext_i32_i64(local_tid_46035)] =
                                x_46044;
                            x_46045 = x_46044;
                        }
                    }
                    if (sle32(wave_sizze_46037, skip_threads_46051)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_46051 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_46035 - squot32(local_tid_46035, 32) * 32) ==
                    31 && ltid_in_bounds_46050) {
                    ((volatile __local
                      float *) scan_arr_mem_46039)[sext_i32_i64(squot32(local_tid_46035,
                                                                        32))] =
                        x_46044;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_46053;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_46035, 32) == 0 &&
                        ltid_in_bounds_46050) {
                        x_46048 = ((volatile __local
                                    float *) scan_arr_mem_46039)[sext_i32_i64(local_tid_46035)];
                        if ((local_tid_46035 - squot32(local_tid_46035, 32) *
                             32) == 0) {
                            x_46047 = x_46048;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46053 = 1;
                    while (slt32(skip_threads_46053, 32)) {
                        if (sle32(skip_threads_46053, local_tid_46035 -
                                  squot32(local_tid_46035, 32) * 32) &&
                            (squot32(local_tid_46035, 32) == 0 &&
                             ltid_in_bounds_46050)) {
                            // read operands
                            {
                                x_46047 = ((volatile __local
                                            float *) scan_arr_mem_46039)[sext_i32_i64(local_tid_46035) -
                                                                         sext_i32_i64(skip_threads_46053)];
                            }
                            // perform operation
                            {
                                bool inactive_46054 =
                                     slt64(srem64(sext_i32_i64(local_tid_46035 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_46042,
                                                  iota32_arg_30510),
                                           sext_i32_i64(local_tid_46035 * 32 +
                                           32 - 1) + chunk_offset_46042 -
                                           (sext_i32_i64((local_tid_46035 -
                                                          skip_threads_46053) *
                                            32 + 32 - 1) + chunk_offset_46042));
                                
                                if (inactive_46054) {
                                    x_46047 = x_46048;
                                }
                                if (!inactive_46054) {
                                    float defunc_1_op_res_46049 = x_46047 +
                                          x_46048;
                                    
                                    x_46047 = defunc_1_op_res_46049;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46037, skip_threads_46053)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46053, local_tid_46035 -
                                  squot32(local_tid_46035, 32) * 32) &&
                            (squot32(local_tid_46035, 32) == 0 &&
                             ltid_in_bounds_46050)) {
                            // write result
                            {
                                ((volatile __local
                                  float *) scan_arr_mem_46039)[sext_i32_i64(local_tid_46035)] =
                                    x_46047;
                                x_46048 = x_46047;
                            }
                        }
                        if (sle32(wave_sizze_46037, skip_threads_46053)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46053 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_46035, 32) == 0 ||
                      !ltid_in_bounds_46050)) {
                    // read operands
                    {
                        x_46045 = x_46044;
                        x_46044 = ((__local
                                    float *) scan_arr_mem_46039)[sext_i32_i64(squot32(local_tid_46035,
                                                                                      32)) -
                                                                 1];
                    }
                    // perform operation
                    {
                        bool inactive_46055 =
                             slt64(srem64(sext_i32_i64(local_tid_46035) +
                                          chunk_offset_46042, iota32_arg_30510),
                                   sext_i32_i64(local_tid_46035) +
                                   chunk_offset_46042 -
                                   (sext_i32_i64(squot32(local_tid_46035, 32) *
                                    32 - 1) + chunk_offset_46042));
                        
                        if (inactive_46055) {
                            x_46044 = x_46045;
                        }
                        if (!inactive_46055) {
                            float defunc_1_op_res_46046 = x_46044 + x_46045;
                            
                            x_46044 = defunc_1_op_res_46046;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          float *) scan_arr_mem_46039)[sext_i32_i64(local_tid_46035)] =
                            x_46044;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_46035, 32) == 0) {
                    ((__local
                      float *) scan_arr_mem_46039)[sext_i32_i64(local_tid_46035)] =
                        x_46045;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_36125, m_30124) && slt64(gtid_36133,
                                                        iota32_arg_30510)) {
                    ((__global float *) mem_44649)[gtid_36125 *
                                                   iota32_arg_30510 +
                                                   gtid_36133] = ((__local
                                                                   float *) scan_arr_mem_46039)[sext_i32_i64(local_tid_46035)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_46056 = slt64(srem64(chunk_offset_46042 +
                                                          segscan_group_sizze_36212,
                                                          iota32_arg_30510),
                                                   chunk_offset_46042 +
                                                   segscan_group_sizze_36212 -
                                                   (chunk_offset_46042 +
                                                    segscan_group_sizze_36212 -
                                                    1));
                bool should_load_carry_46057 = local_tid_46035 == 0 &&
                     !crosses_segment_46056;
                
                if (should_load_carry_46057) {
                    x_36216 = ((__local
                                float *) scan_arr_mem_46039)[segscan_group_sizze_36212 -
                                                             1];
                }
                if (!should_load_carry_46057) {
                    x_36216 = 0.0F;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_36212
}
__kernel void mainDetailedziscan_stage2_33993(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_45636_backing_aligned_0,
                                              int64_t N_30123, int64_t m_30124,
                                              __global unsigned char *mem_44323,
                                              int64_t stage1_num_groups_45605,
                                              int32_t num_threads_45606)
{
    #define segscan_group_sizze_34010 (mainDetailedzisegscan_group_sizze_33987)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45636_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45636_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45631;
    int32_t local_tid_45632;
    int64_t group_sizze_45635;
    int32_t wave_sizze_45634;
    int32_t group_tid_45633;
    
    global_tid_45631 = get_global_id(0);
    local_tid_45632 = get_local_id(0);
    group_sizze_45635 = get_local_size(0);
    wave_sizze_45634 = LOCKSTEP_WIDTH;
    group_tid_45633 = get_group_id(0);
    
    int32_t phys_tid_33993;
    
    phys_tid_33993 = global_tid_45631;
    
    __local char *scan_arr_mem_45636;
    
    scan_arr_mem_45636 = (__local char *) scan_arr_mem_45636_backing_0;
    
    int64_t flat_idx_45638;
    
    flat_idx_45638 = (sext_i32_i64(local_tid_45632) + 1) *
        (segscan_group_sizze_34010 * sdiv_up64(m_30124 * N_30123,
                                               sext_i32_i64(num_threads_45606))) -
        1;
    
    int64_t gtid_33984;
    
    gtid_33984 = squot64(flat_idx_45638, N_30123);
    
    int64_t gtid_33992;
    
    gtid_33992 = flat_idx_45638 - squot64(flat_idx_45638, N_30123) * N_30123;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_33984, m_30124) && slt64(gtid_33992, N_30123)) {
            ((__local
              int64_t *) scan_arr_mem_45636)[sext_i32_i64(local_tid_45632)] =
                ((__global int64_t *) mem_44323)[gtid_33984 * N_30123 +
                                                 gtid_33992];
        } else {
            ((__local
              int64_t *) scan_arr_mem_45636)[sext_i32_i64(local_tid_45632)] = 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_34015;
    int64_t x_34016;
    int64_t x_45639;
    int64_t x_45640;
    bool ltid_in_bounds_45642;
    
    ltid_in_bounds_45642 = slt64(sext_i32_i64(local_tid_45632),
                                 stage1_num_groups_45605);
    
    int32_t skip_threads_45643;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45642) {
            x_34016 = ((volatile __local
                        int64_t *) scan_arr_mem_45636)[sext_i32_i64(local_tid_45632)];
            if ((local_tid_45632 - squot32(local_tid_45632, 32) * 32) == 0) {
                x_34015 = x_34016;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45643 = 1;
        while (slt32(skip_threads_45643, 32)) {
            if (sle32(skip_threads_45643, local_tid_45632 -
                      squot32(local_tid_45632, 32) * 32) &&
                ltid_in_bounds_45642) {
                // read operands
                {
                    x_34015 = ((volatile __local
                                int64_t *) scan_arr_mem_45636)[sext_i32_i64(local_tid_45632) -
                                                               sext_i32_i64(skip_threads_45643)];
                }
                // perform operation
                {
                    bool inactive_45644 =
                         slt64(srem64((sext_i32_i64(local_tid_45632) + 1) *
                                      (segscan_group_sizze_34010 *
                                       sdiv_up64(m_30124 * N_30123,
                                                 sext_i32_i64(num_threads_45606))) -
                                      1, N_30123),
                               (sext_i32_i64(local_tid_45632) + 1) *
                               (segscan_group_sizze_34010 * sdiv_up64(m_30124 *
                                                                      N_30123,
                                                                      sext_i32_i64(num_threads_45606))) -
                               1 - ((sext_i32_i64(local_tid_45632 -
                                     skip_threads_45643) + 1) *
                                    (segscan_group_sizze_34010 *
                                     sdiv_up64(m_30124 * N_30123,
                                               sext_i32_i64(num_threads_45606))) -
                                    1));
                    
                    if (inactive_45644) {
                        x_34015 = x_34016;
                    }
                    if (!inactive_45644) {
                        int64_t defunc_1_op_res_34017 = add64(x_34015, x_34016);
                        
                        x_34015 = defunc_1_op_res_34017;
                    }
                }
            }
            if (sle32(wave_sizze_45634, skip_threads_45643)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45643, local_tid_45632 -
                      squot32(local_tid_45632, 32) * 32) &&
                ltid_in_bounds_45642) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_45636)[sext_i32_i64(local_tid_45632)] =
                        x_34015;
                    x_34016 = x_34015;
                }
            }
            if (sle32(wave_sizze_45634, skip_threads_45643)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45643 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45632 - squot32(local_tid_45632, 32) * 32) == 31 &&
            ltid_in_bounds_45642) {
            ((volatile __local
              int64_t *) scan_arr_mem_45636)[sext_i32_i64(squot32(local_tid_45632,
                                                                  32))] =
                x_34015;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45645;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45632, 32) == 0 && ltid_in_bounds_45642) {
                x_45640 = ((volatile __local
                            int64_t *) scan_arr_mem_45636)[sext_i32_i64(local_tid_45632)];
                if ((local_tid_45632 - squot32(local_tid_45632, 32) * 32) ==
                    0) {
                    x_45639 = x_45640;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45645 = 1;
            while (slt32(skip_threads_45645, 32)) {
                if (sle32(skip_threads_45645, local_tid_45632 -
                          squot32(local_tid_45632, 32) * 32) &&
                    (squot32(local_tid_45632, 32) == 0 &&
                     ltid_in_bounds_45642)) {
                    // read operands
                    {
                        x_45639 = ((volatile __local
                                    int64_t *) scan_arr_mem_45636)[sext_i32_i64(local_tid_45632) -
                                                                   sext_i32_i64(skip_threads_45645)];
                    }
                    // perform operation
                    {
                        bool inactive_45646 =
                             slt64(srem64((sext_i32_i64(local_tid_45632 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_34010 *
                                           sdiv_up64(m_30124 * N_30123,
                                                     sext_i32_i64(num_threads_45606))) -
                                          1, N_30123),
                                   (sext_i32_i64(local_tid_45632 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_34010 *
                                               sdiv_up64(m_30124 * N_30123,
                                                         sext_i32_i64(num_threads_45606))) -
                                   1 - ((sext_i32_i64((local_tid_45632 -
                                                       skip_threads_45645) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_34010 *
                                         sdiv_up64(m_30124 * N_30123,
                                                   sext_i32_i64(num_threads_45606))) -
                                        1));
                        
                        if (inactive_45646) {
                            x_45639 = x_45640;
                        }
                        if (!inactive_45646) {
                            int64_t defunc_1_op_res_45641 = add64(x_45639,
                                                                  x_45640);
                            
                            x_45639 = defunc_1_op_res_45641;
                        }
                    }
                }
                if (sle32(wave_sizze_45634, skip_threads_45645)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45645, local_tid_45632 -
                          squot32(local_tid_45632, 32) * 32) &&
                    (squot32(local_tid_45632, 32) == 0 &&
                     ltid_in_bounds_45642)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_45636)[sext_i32_i64(local_tid_45632)] =
                            x_45639;
                        x_45640 = x_45639;
                    }
                }
                if (sle32(wave_sizze_45634, skip_threads_45645)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45645 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45632, 32) == 0 || !ltid_in_bounds_45642)) {
            // read operands
            {
                x_34016 = x_34015;
                x_34015 = ((__local
                            int64_t *) scan_arr_mem_45636)[sext_i32_i64(squot32(local_tid_45632,
                                                                                32)) -
                                                           1];
            }
            // perform operation
            {
                bool inactive_45647 =
                     slt64(srem64((sext_i32_i64(local_tid_45632) + 1) *
                                  (segscan_group_sizze_34010 *
                                   sdiv_up64(m_30124 * N_30123,
                                             sext_i32_i64(num_threads_45606))) -
                                  1, N_30123), (sext_i32_i64(local_tid_45632) +
                                                1) *
                           (segscan_group_sizze_34010 * sdiv_up64(m_30124 *
                                                                  N_30123,
                                                                  sext_i32_i64(num_threads_45606))) -
                           1 - ((sext_i32_i64(squot32(local_tid_45632, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_34010 *
                                                 sdiv_up64(m_30124 * N_30123,
                                                           sext_i32_i64(num_threads_45606))) -
                                1));
                
                if (inactive_45647) {
                    x_34015 = x_34016;
                }
                if (!inactive_45647) {
                    int64_t defunc_1_op_res_34017 = add64(x_34015, x_34016);
                    
                    x_34015 = defunc_1_op_res_34017;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_45636)[sext_i32_i64(local_tid_45632)] =
                    x_34015;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45632, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_45636)[sext_i32_i64(local_tid_45632)] =
                x_34016;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_33984, m_30124) && slt64(gtid_33992, N_30123)) {
            ((__global int64_t *) mem_44323)[gtid_33984 * N_30123 +
                                             gtid_33992] = ((__local
                                                             int64_t *) scan_arr_mem_45636)[sext_i32_i64(local_tid_45632)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_34010
}
__kernel void mainDetailedziscan_stage2_35779(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_46293_backing_aligned_0,
                                              __local volatile
                                              int64_t *scan_arr_mem_46291_backing_aligned_1,
                                              __local volatile
                                              int64_t *scan_arr_mem_46289_backing_aligned_2,
                                              __local volatile
                                              int64_t *scan_arr_mem_46287_backing_aligned_3,
                                              int64_t m_30124,
                                              int64_t iota32_arg_30510, __global
                                              unsigned char *mem_44706, __global
                                              unsigned char *mem_44709, __global
                                              unsigned char *mem_44712, __global
                                              unsigned char *mem_44715,
                                              int64_t stage1_num_groups_46232,
                                              int32_t num_threads_46233)
{
    #define segscan_group_sizze_36456 (mainDetailedzisegscan_group_sizze_35773)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_46293_backing_3 =
                          (__local volatile
                           char *) scan_arr_mem_46293_backing_aligned_0;
    __local volatile char *restrict scan_arr_mem_46291_backing_2 =
                          (__local volatile
                           char *) scan_arr_mem_46291_backing_aligned_1;
    __local volatile char *restrict scan_arr_mem_46289_backing_1 =
                          (__local volatile
                           char *) scan_arr_mem_46289_backing_aligned_2;
    __local volatile char *restrict scan_arr_mem_46287_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_46287_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46282;
    int32_t local_tid_46283;
    int64_t group_sizze_46286;
    int32_t wave_sizze_46285;
    int32_t group_tid_46284;
    
    global_tid_46282 = get_global_id(0);
    local_tid_46283 = get_local_id(0);
    group_sizze_46286 = get_local_size(0);
    wave_sizze_46285 = LOCKSTEP_WIDTH;
    group_tid_46284 = get_group_id(0);
    
    int32_t phys_tid_35779;
    
    phys_tid_35779 = global_tid_46282;
    
    __local char *scan_arr_mem_46287;
    __local char *scan_arr_mem_46289;
    __local char *scan_arr_mem_46291;
    __local char *scan_arr_mem_46293;
    
    scan_arr_mem_46287 = (__local char *) scan_arr_mem_46287_backing_0;
    scan_arr_mem_46289 = (__local char *) scan_arr_mem_46289_backing_1;
    scan_arr_mem_46291 = (__local char *) scan_arr_mem_46291_backing_2;
    scan_arr_mem_46293 = (__local char *) scan_arr_mem_46293_backing_3;
    
    int64_t flat_idx_46295;
    
    flat_idx_46295 = (sext_i32_i64(local_tid_46283) + 1) *
        (segscan_group_sizze_36456 * sdiv_up64(m_30124 * iota32_arg_30510,
                                               sext_i32_i64(num_threads_46233))) -
        1;
    
    int64_t gtid_35770;
    
    gtid_35770 = squot64(flat_idx_46295, iota32_arg_30510);
    
    int64_t gtid_35778;
    
    gtid_35778 = flat_idx_46295 - squot64(flat_idx_46295, iota32_arg_30510) *
        iota32_arg_30510;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_35770, m_30124) && slt64(gtid_35778, iota32_arg_30510)) {
            ((__local
              int64_t *) scan_arr_mem_46287)[sext_i32_i64(local_tid_46283)] =
                ((__global int64_t *) mem_44706)[gtid_35770 * iota32_arg_30510 +
                                                 gtid_35778];
            ((__local
              int64_t *) scan_arr_mem_46289)[sext_i32_i64(local_tid_46283)] =
                ((__global int64_t *) mem_44709)[gtid_35770 * iota32_arg_30510 +
                                                 gtid_35778];
            ((__local
              int64_t *) scan_arr_mem_46291)[sext_i32_i64(local_tid_46283)] =
                ((__global int64_t *) mem_44712)[gtid_35770 * iota32_arg_30510 +
                                                 gtid_35778];
            ((__local
              int64_t *) scan_arr_mem_46293)[sext_i32_i64(local_tid_46283)] =
                ((__global int64_t *) mem_44715)[gtid_35770 * iota32_arg_30510 +
                                                 gtid_35778];
        } else {
            ((__local
              int64_t *) scan_arr_mem_46287)[sext_i32_i64(local_tid_46283)] = 0;
            ((__local
              int64_t *) scan_arr_mem_46289)[sext_i32_i64(local_tid_46283)] = 0;
            ((__local
              int64_t *) scan_arr_mem_46291)[sext_i32_i64(local_tid_46283)] = 0;
            ((__local
              int64_t *) scan_arr_mem_46293)[sext_i32_i64(local_tid_46283)] = 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_36464;
    int64_t x_36465;
    int64_t x_36466;
    int64_t x_36467;
    int64_t x_36468;
    int64_t x_36469;
    int64_t x_36470;
    int64_t x_36471;
    int64_t x_46296;
    int64_t x_46297;
    int64_t x_46298;
    int64_t x_46299;
    int64_t x_46300;
    int64_t x_46301;
    int64_t x_46302;
    int64_t x_46303;
    bool ltid_in_bounds_46308;
    
    ltid_in_bounds_46308 = slt64(sext_i32_i64(local_tid_46283),
                                 stage1_num_groups_46232);
    
    int32_t skip_threads_46309;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_46308) {
            x_36468 = ((volatile __local
                        int64_t *) scan_arr_mem_46287)[sext_i32_i64(local_tid_46283)];
            x_36469 = ((volatile __local
                        int64_t *) scan_arr_mem_46289)[sext_i32_i64(local_tid_46283)];
            x_36470 = ((volatile __local
                        int64_t *) scan_arr_mem_46291)[sext_i32_i64(local_tid_46283)];
            x_36471 = ((volatile __local
                        int64_t *) scan_arr_mem_46293)[sext_i32_i64(local_tid_46283)];
            if ((local_tid_46283 - squot32(local_tid_46283, 32) * 32) == 0) {
                x_36464 = x_36468;
                x_36465 = x_36469;
                x_36466 = x_36470;
                x_36467 = x_36471;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_46309 = 1;
        while (slt32(skip_threads_46309, 32)) {
            if (sle32(skip_threads_46309, local_tid_46283 -
                      squot32(local_tid_46283, 32) * 32) &&
                ltid_in_bounds_46308) {
                // read operands
                {
                    x_36464 = ((volatile __local
                                int64_t *) scan_arr_mem_46287)[sext_i32_i64(local_tid_46283) -
                                                               sext_i32_i64(skip_threads_46309)];
                    x_36465 = ((volatile __local
                                int64_t *) scan_arr_mem_46289)[sext_i32_i64(local_tid_46283) -
                                                               sext_i32_i64(skip_threads_46309)];
                    x_36466 = ((volatile __local
                                int64_t *) scan_arr_mem_46291)[sext_i32_i64(local_tid_46283) -
                                                               sext_i32_i64(skip_threads_46309)];
                    x_36467 = ((volatile __local
                                int64_t *) scan_arr_mem_46293)[sext_i32_i64(local_tid_46283) -
                                                               sext_i32_i64(skip_threads_46309)];
                }
                // perform operation
                {
                    bool inactive_46310 =
                         slt64(srem64((sext_i32_i64(local_tid_46283) + 1) *
                                      (segscan_group_sizze_36456 *
                                       sdiv_up64(m_30124 * iota32_arg_30510,
                                                 sext_i32_i64(num_threads_46233))) -
                                      1, iota32_arg_30510),
                               (sext_i32_i64(local_tid_46283) + 1) *
                               (segscan_group_sizze_36456 * sdiv_up64(m_30124 *
                                                                      iota32_arg_30510,
                                                                      sext_i32_i64(num_threads_46233))) -
                               1 - ((sext_i32_i64(local_tid_46283 -
                                     skip_threads_46309) + 1) *
                                    (segscan_group_sizze_36456 *
                                     sdiv_up64(m_30124 * iota32_arg_30510,
                                               sext_i32_i64(num_threads_46233))) -
                                    1));
                    
                    if (inactive_46310) {
                        x_36464 = x_36468;
                        x_36465 = x_36469;
                        x_36466 = x_36470;
                        x_36467 = x_36471;
                    }
                    if (!inactive_46310) {
                        int64_t defunc_1_op_res_36472 = add64(x_36464, x_36468);
                        int64_t defunc_1_op_res_36473 = add64(x_36465, x_36469);
                        int64_t defunc_1_op_res_36474 = add64(x_36466, x_36470);
                        int64_t defunc_1_op_res_36475 = add64(x_36467, x_36471);
                        
                        x_36464 = defunc_1_op_res_36472;
                        x_36465 = defunc_1_op_res_36473;
                        x_36466 = defunc_1_op_res_36474;
                        x_36467 = defunc_1_op_res_36475;
                    }
                }
            }
            if (sle32(wave_sizze_46285, skip_threads_46309)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_46309, local_tid_46283 -
                      squot32(local_tid_46283, 32) * 32) &&
                ltid_in_bounds_46308) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_46287)[sext_i32_i64(local_tid_46283)] =
                        x_36464;
                    x_36468 = x_36464;
                    ((volatile __local
                      int64_t *) scan_arr_mem_46289)[sext_i32_i64(local_tid_46283)] =
                        x_36465;
                    x_36469 = x_36465;
                    ((volatile __local
                      int64_t *) scan_arr_mem_46291)[sext_i32_i64(local_tid_46283)] =
                        x_36466;
                    x_36470 = x_36466;
                    ((volatile __local
                      int64_t *) scan_arr_mem_46293)[sext_i32_i64(local_tid_46283)] =
                        x_36467;
                    x_36471 = x_36467;
                }
            }
            if (sle32(wave_sizze_46285, skip_threads_46309)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_46309 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_46283 - squot32(local_tid_46283, 32) * 32) == 31 &&
            ltid_in_bounds_46308) {
            ((volatile __local
              int64_t *) scan_arr_mem_46287)[sext_i32_i64(squot32(local_tid_46283,
                                                                  32))] =
                x_36464;
            ((volatile __local
              int64_t *) scan_arr_mem_46289)[sext_i32_i64(squot32(local_tid_46283,
                                                                  32))] =
                x_36465;
            ((volatile __local
              int64_t *) scan_arr_mem_46291)[sext_i32_i64(squot32(local_tid_46283,
                                                                  32))] =
                x_36466;
            ((volatile __local
              int64_t *) scan_arr_mem_46293)[sext_i32_i64(squot32(local_tid_46283,
                                                                  32))] =
                x_36467;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_46311;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_46283, 32) == 0 && ltid_in_bounds_46308) {
                x_46300 = ((volatile __local
                            int64_t *) scan_arr_mem_46287)[sext_i32_i64(local_tid_46283)];
                x_46301 = ((volatile __local
                            int64_t *) scan_arr_mem_46289)[sext_i32_i64(local_tid_46283)];
                x_46302 = ((volatile __local
                            int64_t *) scan_arr_mem_46291)[sext_i32_i64(local_tid_46283)];
                x_46303 = ((volatile __local
                            int64_t *) scan_arr_mem_46293)[sext_i32_i64(local_tid_46283)];
                if ((local_tid_46283 - squot32(local_tid_46283, 32) * 32) ==
                    0) {
                    x_46296 = x_46300;
                    x_46297 = x_46301;
                    x_46298 = x_46302;
                    x_46299 = x_46303;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_46311 = 1;
            while (slt32(skip_threads_46311, 32)) {
                if (sle32(skip_threads_46311, local_tid_46283 -
                          squot32(local_tid_46283, 32) * 32) &&
                    (squot32(local_tid_46283, 32) == 0 &&
                     ltid_in_bounds_46308)) {
                    // read operands
                    {
                        x_46296 = ((volatile __local
                                    int64_t *) scan_arr_mem_46287)[sext_i32_i64(local_tid_46283) -
                                                                   sext_i32_i64(skip_threads_46311)];
                        x_46297 = ((volatile __local
                                    int64_t *) scan_arr_mem_46289)[sext_i32_i64(local_tid_46283) -
                                                                   sext_i32_i64(skip_threads_46311)];
                        x_46298 = ((volatile __local
                                    int64_t *) scan_arr_mem_46291)[sext_i32_i64(local_tid_46283) -
                                                                   sext_i32_i64(skip_threads_46311)];
                        x_46299 = ((volatile __local
                                    int64_t *) scan_arr_mem_46293)[sext_i32_i64(local_tid_46283) -
                                                                   sext_i32_i64(skip_threads_46311)];
                    }
                    // perform operation
                    {
                        bool inactive_46312 =
                             slt64(srem64((sext_i32_i64(local_tid_46283 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_36456 *
                                           sdiv_up64(m_30124 * iota32_arg_30510,
                                                     sext_i32_i64(num_threads_46233))) -
                                          1, iota32_arg_30510),
                                   (sext_i32_i64(local_tid_46283 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_36456 *
                                               sdiv_up64(m_30124 *
                                                         iota32_arg_30510,
                                                         sext_i32_i64(num_threads_46233))) -
                                   1 - ((sext_i32_i64((local_tid_46283 -
                                                       skip_threads_46311) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_36456 *
                                         sdiv_up64(m_30124 * iota32_arg_30510,
                                                   sext_i32_i64(num_threads_46233))) -
                                        1));
                        
                        if (inactive_46312) {
                            x_46296 = x_46300;
                            x_46297 = x_46301;
                            x_46298 = x_46302;
                            x_46299 = x_46303;
                        }
                        if (!inactive_46312) {
                            int64_t defunc_1_op_res_46304 = add64(x_46296,
                                                                  x_46300);
                            int64_t defunc_1_op_res_46305 = add64(x_46297,
                                                                  x_46301);
                            int64_t defunc_1_op_res_46306 = add64(x_46298,
                                                                  x_46302);
                            int64_t defunc_1_op_res_46307 = add64(x_46299,
                                                                  x_46303);
                            
                            x_46296 = defunc_1_op_res_46304;
                            x_46297 = defunc_1_op_res_46305;
                            x_46298 = defunc_1_op_res_46306;
                            x_46299 = defunc_1_op_res_46307;
                        }
                    }
                }
                if (sle32(wave_sizze_46285, skip_threads_46311)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_46311, local_tid_46283 -
                          squot32(local_tid_46283, 32) * 32) &&
                    (squot32(local_tid_46283, 32) == 0 &&
                     ltid_in_bounds_46308)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_46287)[sext_i32_i64(local_tid_46283)] =
                            x_46296;
                        x_46300 = x_46296;
                        ((volatile __local
                          int64_t *) scan_arr_mem_46289)[sext_i32_i64(local_tid_46283)] =
                            x_46297;
                        x_46301 = x_46297;
                        ((volatile __local
                          int64_t *) scan_arr_mem_46291)[sext_i32_i64(local_tid_46283)] =
                            x_46298;
                        x_46302 = x_46298;
                        ((volatile __local
                          int64_t *) scan_arr_mem_46293)[sext_i32_i64(local_tid_46283)] =
                            x_46299;
                        x_46303 = x_46299;
                    }
                }
                if (sle32(wave_sizze_46285, skip_threads_46311)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_46311 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_46283, 32) == 0 || !ltid_in_bounds_46308)) {
            // read operands
            {
                x_36468 = x_36464;
                x_36469 = x_36465;
                x_36470 = x_36466;
                x_36471 = x_36467;
                x_36464 = ((__local
                            int64_t *) scan_arr_mem_46287)[sext_i32_i64(squot32(local_tid_46283,
                                                                                32)) -
                                                           1];
                x_36465 = ((__local
                            int64_t *) scan_arr_mem_46289)[sext_i32_i64(squot32(local_tid_46283,
                                                                                32)) -
                                                           1];
                x_36466 = ((__local
                            int64_t *) scan_arr_mem_46291)[sext_i32_i64(squot32(local_tid_46283,
                                                                                32)) -
                                                           1];
                x_36467 = ((__local
                            int64_t *) scan_arr_mem_46293)[sext_i32_i64(squot32(local_tid_46283,
                                                                                32)) -
                                                           1];
            }
            // perform operation
            {
                bool inactive_46313 =
                     slt64(srem64((sext_i32_i64(local_tid_46283) + 1) *
                                  (segscan_group_sizze_36456 *
                                   sdiv_up64(m_30124 * iota32_arg_30510,
                                             sext_i32_i64(num_threads_46233))) -
                                  1, iota32_arg_30510),
                           (sext_i32_i64(local_tid_46283) + 1) *
                           (segscan_group_sizze_36456 * sdiv_up64(m_30124 *
                                                                  iota32_arg_30510,
                                                                  sext_i32_i64(num_threads_46233))) -
                           1 - ((sext_i32_i64(squot32(local_tid_46283, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_36456 *
                                                 sdiv_up64(m_30124 *
                                                           iota32_arg_30510,
                                                           sext_i32_i64(num_threads_46233))) -
                                1));
                
                if (inactive_46313) {
                    x_36464 = x_36468;
                    x_36465 = x_36469;
                    x_36466 = x_36470;
                    x_36467 = x_36471;
                }
                if (!inactive_46313) {
                    int64_t defunc_1_op_res_36472 = add64(x_36464, x_36468);
                    int64_t defunc_1_op_res_36473 = add64(x_36465, x_36469);
                    int64_t defunc_1_op_res_36474 = add64(x_36466, x_36470);
                    int64_t defunc_1_op_res_36475 = add64(x_36467, x_36471);
                    
                    x_36464 = defunc_1_op_res_36472;
                    x_36465 = defunc_1_op_res_36473;
                    x_36466 = defunc_1_op_res_36474;
                    x_36467 = defunc_1_op_res_36475;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_46287)[sext_i32_i64(local_tid_46283)] =
                    x_36464;
                ((__local
                  int64_t *) scan_arr_mem_46289)[sext_i32_i64(local_tid_46283)] =
                    x_36465;
                ((__local
                  int64_t *) scan_arr_mem_46291)[sext_i32_i64(local_tid_46283)] =
                    x_36466;
                ((__local
                  int64_t *) scan_arr_mem_46293)[sext_i32_i64(local_tid_46283)] =
                    x_36467;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_46283, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_46287)[sext_i32_i64(local_tid_46283)] =
                x_36468;
            ((__local
              int64_t *) scan_arr_mem_46289)[sext_i32_i64(local_tid_46283)] =
                x_36469;
            ((__local
              int64_t *) scan_arr_mem_46291)[sext_i32_i64(local_tid_46283)] =
                x_36470;
            ((__local
              int64_t *) scan_arr_mem_46293)[sext_i32_i64(local_tid_46283)] =
                x_36471;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_35770, m_30124) && slt64(gtid_35778, iota32_arg_30510)) {
            ((__global int64_t *) mem_44706)[gtid_35770 * iota32_arg_30510 +
                                             gtid_35778] = ((__local
                                                             int64_t *) scan_arr_mem_46287)[sext_i32_i64(local_tid_46283)];
            ((__global int64_t *) mem_44709)[gtid_35770 * iota32_arg_30510 +
                                             gtid_35778] = ((__local
                                                             int64_t *) scan_arr_mem_46289)[sext_i32_i64(local_tid_46283)];
            ((__global int64_t *) mem_44712)[gtid_35770 * iota32_arg_30510 +
                                             gtid_35778] = ((__local
                                                             int64_t *) scan_arr_mem_46291)[sext_i32_i64(local_tid_46283)];
            ((__global int64_t *) mem_44715)[gtid_35770 * iota32_arg_30510 +
                                             gtid_35778] = ((__local
                                                             int64_t *) scan_arr_mem_46293)[sext_i32_i64(local_tid_46283)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_36456
}
__kernel void mainDetailedziscan_stage2_36134(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_46063_backing_aligned_0,
                                              int64_t m_30124,
                                              int64_t iota32_arg_30510, __global
                                              unsigned char *mem_44649,
                                              int64_t stage1_num_groups_46032,
                                              int32_t num_threads_46033)
{
    #define segscan_group_sizze_36212 (mainDetailedzisegscan_group_sizze_36128)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_46063_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_46063_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46058;
    int32_t local_tid_46059;
    int64_t group_sizze_46062;
    int32_t wave_sizze_46061;
    int32_t group_tid_46060;
    
    global_tid_46058 = get_global_id(0);
    local_tid_46059 = get_local_id(0);
    group_sizze_46062 = get_local_size(0);
    wave_sizze_46061 = LOCKSTEP_WIDTH;
    group_tid_46060 = get_group_id(0);
    
    int32_t phys_tid_36134;
    
    phys_tid_36134 = global_tid_46058;
    
    __local char *scan_arr_mem_46063;
    
    scan_arr_mem_46063 = (__local char *) scan_arr_mem_46063_backing_0;
    
    int64_t flat_idx_46065;
    
    flat_idx_46065 = (sext_i32_i64(local_tid_46059) + 1) *
        (segscan_group_sizze_36212 * sdiv_up64(m_30124 * iota32_arg_30510,
                                               sext_i32_i64(num_threads_46033))) -
        1;
    
    int64_t gtid_36125;
    
    gtid_36125 = squot64(flat_idx_46065, iota32_arg_30510);
    
    int64_t gtid_36133;
    
    gtid_36133 = flat_idx_46065 - squot64(flat_idx_46065, iota32_arg_30510) *
        iota32_arg_30510;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_36125, m_30124) && slt64(gtid_36133, iota32_arg_30510)) {
            ((__local
              float *) scan_arr_mem_46063)[sext_i32_i64(local_tid_46059)] =
                ((__global float *) mem_44649)[gtid_36125 * iota32_arg_30510 +
                                               gtid_36133];
        } else {
            ((__local
              float *) scan_arr_mem_46063)[sext_i32_i64(local_tid_46059)] =
                0.0F;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float x_36216;
    float x_36217;
    float x_46066;
    float x_46067;
    bool ltid_in_bounds_46069;
    
    ltid_in_bounds_46069 = slt64(sext_i32_i64(local_tid_46059),
                                 stage1_num_groups_46032);
    
    int32_t skip_threads_46070;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_46069) {
            x_36217 = ((volatile __local
                        float *) scan_arr_mem_46063)[sext_i32_i64(local_tid_46059)];
            if ((local_tid_46059 - squot32(local_tid_46059, 32) * 32) == 0) {
                x_36216 = x_36217;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_46070 = 1;
        while (slt32(skip_threads_46070, 32)) {
            if (sle32(skip_threads_46070, local_tid_46059 -
                      squot32(local_tid_46059, 32) * 32) &&
                ltid_in_bounds_46069) {
                // read operands
                {
                    x_36216 = ((volatile __local
                                float *) scan_arr_mem_46063)[sext_i32_i64(local_tid_46059) -
                                                             sext_i32_i64(skip_threads_46070)];
                }
                // perform operation
                {
                    bool inactive_46071 =
                         slt64(srem64((sext_i32_i64(local_tid_46059) + 1) *
                                      (segscan_group_sizze_36212 *
                                       sdiv_up64(m_30124 * iota32_arg_30510,
                                                 sext_i32_i64(num_threads_46033))) -
                                      1, iota32_arg_30510),
                               (sext_i32_i64(local_tid_46059) + 1) *
                               (segscan_group_sizze_36212 * sdiv_up64(m_30124 *
                                                                      iota32_arg_30510,
                                                                      sext_i32_i64(num_threads_46033))) -
                               1 - ((sext_i32_i64(local_tid_46059 -
                                     skip_threads_46070) + 1) *
                                    (segscan_group_sizze_36212 *
                                     sdiv_up64(m_30124 * iota32_arg_30510,
                                               sext_i32_i64(num_threads_46033))) -
                                    1));
                    
                    if (inactive_46071) {
                        x_36216 = x_36217;
                    }
                    if (!inactive_46071) {
                        float defunc_1_op_res_36218 = x_36216 + x_36217;
                        
                        x_36216 = defunc_1_op_res_36218;
                    }
                }
            }
            if (sle32(wave_sizze_46061, skip_threads_46070)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_46070, local_tid_46059 -
                      squot32(local_tid_46059, 32) * 32) &&
                ltid_in_bounds_46069) {
                // write result
                {
                    ((volatile __local
                      float *) scan_arr_mem_46063)[sext_i32_i64(local_tid_46059)] =
                        x_36216;
                    x_36217 = x_36216;
                }
            }
            if (sle32(wave_sizze_46061, skip_threads_46070)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_46070 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_46059 - squot32(local_tid_46059, 32) * 32) == 31 &&
            ltid_in_bounds_46069) {
            ((volatile __local
              float *) scan_arr_mem_46063)[sext_i32_i64(squot32(local_tid_46059,
                                                                32))] = x_36216;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_46072;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_46059, 32) == 0 && ltid_in_bounds_46069) {
                x_46067 = ((volatile __local
                            float *) scan_arr_mem_46063)[sext_i32_i64(local_tid_46059)];
                if ((local_tid_46059 - squot32(local_tid_46059, 32) * 32) ==
                    0) {
                    x_46066 = x_46067;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_46072 = 1;
            while (slt32(skip_threads_46072, 32)) {
                if (sle32(skip_threads_46072, local_tid_46059 -
                          squot32(local_tid_46059, 32) * 32) &&
                    (squot32(local_tid_46059, 32) == 0 &&
                     ltid_in_bounds_46069)) {
                    // read operands
                    {
                        x_46066 = ((volatile __local
                                    float *) scan_arr_mem_46063)[sext_i32_i64(local_tid_46059) -
                                                                 sext_i32_i64(skip_threads_46072)];
                    }
                    // perform operation
                    {
                        bool inactive_46073 =
                             slt64(srem64((sext_i32_i64(local_tid_46059 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_36212 *
                                           sdiv_up64(m_30124 * iota32_arg_30510,
                                                     sext_i32_i64(num_threads_46033))) -
                                          1, iota32_arg_30510),
                                   (sext_i32_i64(local_tid_46059 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_36212 *
                                               sdiv_up64(m_30124 *
                                                         iota32_arg_30510,
                                                         sext_i32_i64(num_threads_46033))) -
                                   1 - ((sext_i32_i64((local_tid_46059 -
                                                       skip_threads_46072) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_36212 *
                                         sdiv_up64(m_30124 * iota32_arg_30510,
                                                   sext_i32_i64(num_threads_46033))) -
                                        1));
                        
                        if (inactive_46073) {
                            x_46066 = x_46067;
                        }
                        if (!inactive_46073) {
                            float defunc_1_op_res_46068 = x_46066 + x_46067;
                            
                            x_46066 = defunc_1_op_res_46068;
                        }
                    }
                }
                if (sle32(wave_sizze_46061, skip_threads_46072)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_46072, local_tid_46059 -
                          squot32(local_tid_46059, 32) * 32) &&
                    (squot32(local_tid_46059, 32) == 0 &&
                     ltid_in_bounds_46069)) {
                    // write result
                    {
                        ((volatile __local
                          float *) scan_arr_mem_46063)[sext_i32_i64(local_tid_46059)] =
                            x_46066;
                        x_46067 = x_46066;
                    }
                }
                if (sle32(wave_sizze_46061, skip_threads_46072)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_46072 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_46059, 32) == 0 || !ltid_in_bounds_46069)) {
            // read operands
            {
                x_36217 = x_36216;
                x_36216 = ((__local
                            float *) scan_arr_mem_46063)[sext_i32_i64(squot32(local_tid_46059,
                                                                              32)) -
                                                         1];
            }
            // perform operation
            {
                bool inactive_46074 =
                     slt64(srem64((sext_i32_i64(local_tid_46059) + 1) *
                                  (segscan_group_sizze_36212 *
                                   sdiv_up64(m_30124 * iota32_arg_30510,
                                             sext_i32_i64(num_threads_46033))) -
                                  1, iota32_arg_30510),
                           (sext_i32_i64(local_tid_46059) + 1) *
                           (segscan_group_sizze_36212 * sdiv_up64(m_30124 *
                                                                  iota32_arg_30510,
                                                                  sext_i32_i64(num_threads_46033))) -
                           1 - ((sext_i32_i64(squot32(local_tid_46059, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_36212 *
                                                 sdiv_up64(m_30124 *
                                                           iota32_arg_30510,
                                                           sext_i32_i64(num_threads_46033))) -
                                1));
                
                if (inactive_46074) {
                    x_36216 = x_36217;
                }
                if (!inactive_46074) {
                    float defunc_1_op_res_36218 = x_36216 + x_36217;
                    
                    x_36216 = defunc_1_op_res_36218;
                }
            }
            // write final result
            {
                ((__local
                  float *) scan_arr_mem_46063)[sext_i32_i64(local_tid_46059)] =
                    x_36216;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_46059, 32) == 0) {
            ((__local
              float *) scan_arr_mem_46063)[sext_i32_i64(local_tid_46059)] =
                x_36217;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_36125, m_30124) && slt64(gtid_36133, iota32_arg_30510)) {
            ((__global float *) mem_44649)[gtid_36125 * iota32_arg_30510 +
                                           gtid_36133] = ((__local
                                                           float *) scan_arr_mem_46063)[sext_i32_i64(local_tid_46059)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_36212
}
__kernel void mainDetailedziscan_stage3_33993(__global int *global_failure,
                                              int64_t N_30123, int64_t m_30124,
                                              int64_t num_groups_34011, __global
                                              unsigned char *mem_44323,
                                              int32_t num_threads_45606,
                                              int32_t required_groups_45648)
{
    #define segscan_group_sizze_34010 (mainDetailedzisegscan_group_sizze_33987)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45649;
    int32_t local_tid_45650;
    int64_t group_sizze_45653;
    int32_t wave_sizze_45652;
    int32_t group_tid_45651;
    
    global_tid_45649 = get_global_id(0);
    local_tid_45650 = get_local_id(0);
    group_sizze_45653 = get_local_size(0);
    wave_sizze_45652 = LOCKSTEP_WIDTH;
    group_tid_45651 = get_group_id(0);
    
    int32_t phys_tid_33993;
    
    phys_tid_33993 = global_tid_45649;
    
    int32_t phys_group_id_45654;
    
    phys_group_id_45654 = get_group_id(0);
    for (int32_t i_45655 = 0; i_45655 < sdiv_up32(required_groups_45648 -
                                                  phys_group_id_45654,
                                                  sext_i64_i32(num_groups_34011));
         i_45655++) {
        int32_t virt_group_id_45656 = phys_group_id_45654 + i_45655 *
                sext_i64_i32(num_groups_34011);
        int64_t flat_idx_45657 = sext_i32_i64(virt_group_id_45656) *
                segscan_group_sizze_34010 + sext_i32_i64(local_tid_45650);
        int64_t gtid_33984 = squot64(flat_idx_45657, N_30123);
        int64_t gtid_33992 = flat_idx_45657 - squot64(flat_idx_45657, N_30123) *
                N_30123;
        int64_t orig_group_45658 = squot64(flat_idx_45657,
                                           segscan_group_sizze_34010 *
                                           sdiv_up64(m_30124 * N_30123,
                                                     sext_i32_i64(num_threads_45606)));
        int64_t carry_in_flat_idx_45659 = orig_group_45658 *
                (segscan_group_sizze_34010 * sdiv_up64(m_30124 * N_30123,
                                                       sext_i32_i64(num_threads_45606))) -
                1;
        
        if (slt64(gtid_33984, m_30124) && slt64(gtid_33992, N_30123)) {
            if (!(orig_group_45658 == 0 || (flat_idx_45657 ==
                                            (orig_group_45658 + 1) *
                                            (segscan_group_sizze_34010 *
                                             sdiv_up64(m_30124 * N_30123,
                                                       sext_i32_i64(num_threads_45606))) -
                                            1 || slt64(srem64(flat_idx_45657,
                                                              N_30123),
                                                       flat_idx_45657 -
                                                       carry_in_flat_idx_45659)))) {
                int64_t x_34015;
                int64_t x_34016;
                
                x_34015 = ((__global
                            int64_t *) mem_44323)[squot64(carry_in_flat_idx_45659,
                                                          N_30123) * N_30123 +
                                                  (carry_in_flat_idx_45659 -
                                                   squot64(carry_in_flat_idx_45659,
                                                           N_30123) * N_30123)];
                x_34016 = ((__global int64_t *) mem_44323)[gtid_33984 *
                                                           N_30123 +
                                                           gtid_33992];
                
                int64_t defunc_1_op_res_34017;
                
                defunc_1_op_res_34017 = add64(x_34015, x_34016);
                x_34015 = defunc_1_op_res_34017;
                ((__global int64_t *) mem_44323)[gtid_33984 * N_30123 +
                                                 gtid_33992] = x_34015;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_34010
}
__kernel void mainDetailedziscan_stage3_35779(__global int *global_failure,
                                              int64_t m_30124,
                                              int64_t iota32_arg_30510,
                                              int64_t num_groups_36457, __global
                                              unsigned char *mem_44706, __global
                                              unsigned char *mem_44709, __global
                                              unsigned char *mem_44712, __global
                                              unsigned char *mem_44715,
                                              int32_t num_threads_46233,
                                              int32_t required_groups_46314)
{
    #define segscan_group_sizze_36456 (mainDetailedzisegscan_group_sizze_35773)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46315;
    int32_t local_tid_46316;
    int64_t group_sizze_46319;
    int32_t wave_sizze_46318;
    int32_t group_tid_46317;
    
    global_tid_46315 = get_global_id(0);
    local_tid_46316 = get_local_id(0);
    group_sizze_46319 = get_local_size(0);
    wave_sizze_46318 = LOCKSTEP_WIDTH;
    group_tid_46317 = get_group_id(0);
    
    int32_t phys_tid_35779;
    
    phys_tid_35779 = global_tid_46315;
    
    int32_t phys_group_id_46320;
    
    phys_group_id_46320 = get_group_id(0);
    for (int32_t i_46321 = 0; i_46321 < sdiv_up32(required_groups_46314 -
                                                  phys_group_id_46320,
                                                  sext_i64_i32(num_groups_36457));
         i_46321++) {
        int32_t virt_group_id_46322 = phys_group_id_46320 + i_46321 *
                sext_i64_i32(num_groups_36457);
        int64_t flat_idx_46323 = sext_i32_i64(virt_group_id_46322) *
                segscan_group_sizze_36456 + sext_i32_i64(local_tid_46316);
        int64_t gtid_35770 = squot64(flat_idx_46323, iota32_arg_30510);
        int64_t gtid_35778 = flat_idx_46323 - squot64(flat_idx_46323,
                                                      iota32_arg_30510) *
                iota32_arg_30510;
        int64_t orig_group_46324 = squot64(flat_idx_46323,
                                           segscan_group_sizze_36456 *
                                           sdiv_up64(m_30124 * iota32_arg_30510,
                                                     sext_i32_i64(num_threads_46233)));
        int64_t carry_in_flat_idx_46325 = orig_group_46324 *
                (segscan_group_sizze_36456 * sdiv_up64(m_30124 *
                                                       iota32_arg_30510,
                                                       sext_i32_i64(num_threads_46233))) -
                1;
        
        if (slt64(gtid_35770, m_30124) && slt64(gtid_35778, iota32_arg_30510)) {
            if (!(orig_group_46324 == 0 || (flat_idx_46323 ==
                                            (orig_group_46324 + 1) *
                                            (segscan_group_sizze_36456 *
                                             sdiv_up64(m_30124 *
                                                       iota32_arg_30510,
                                                       sext_i32_i64(num_threads_46233))) -
                                            1 || slt64(srem64(flat_idx_46323,
                                                              iota32_arg_30510),
                                                       flat_idx_46323 -
                                                       carry_in_flat_idx_46325)))) {
                int64_t x_36464;
                int64_t x_36465;
                int64_t x_36466;
                int64_t x_36467;
                int64_t x_36468;
                int64_t x_36469;
                int64_t x_36470;
                int64_t x_36471;
                
                x_36464 = ((__global
                            int64_t *) mem_44706)[squot64(carry_in_flat_idx_46325,
                                                          iota32_arg_30510) *
                                                  iota32_arg_30510 +
                                                  (carry_in_flat_idx_46325 -
                                                   squot64(carry_in_flat_idx_46325,
                                                           iota32_arg_30510) *
                                                   iota32_arg_30510)];
                x_36465 = ((__global
                            int64_t *) mem_44709)[squot64(carry_in_flat_idx_46325,
                                                          iota32_arg_30510) *
                                                  iota32_arg_30510 +
                                                  (carry_in_flat_idx_46325 -
                                                   squot64(carry_in_flat_idx_46325,
                                                           iota32_arg_30510) *
                                                   iota32_arg_30510)];
                x_36466 = ((__global
                            int64_t *) mem_44712)[squot64(carry_in_flat_idx_46325,
                                                          iota32_arg_30510) *
                                                  iota32_arg_30510 +
                                                  (carry_in_flat_idx_46325 -
                                                   squot64(carry_in_flat_idx_46325,
                                                           iota32_arg_30510) *
                                                   iota32_arg_30510)];
                x_36467 = ((__global
                            int64_t *) mem_44715)[squot64(carry_in_flat_idx_46325,
                                                          iota32_arg_30510) *
                                                  iota32_arg_30510 +
                                                  (carry_in_flat_idx_46325 -
                                                   squot64(carry_in_flat_idx_46325,
                                                           iota32_arg_30510) *
                                                   iota32_arg_30510)];
                x_36468 = ((__global int64_t *) mem_44706)[gtid_35770 *
                                                           iota32_arg_30510 +
                                                           gtid_35778];
                x_36469 = ((__global int64_t *) mem_44709)[gtid_35770 *
                                                           iota32_arg_30510 +
                                                           gtid_35778];
                x_36470 = ((__global int64_t *) mem_44712)[gtid_35770 *
                                                           iota32_arg_30510 +
                                                           gtid_35778];
                x_36471 = ((__global int64_t *) mem_44715)[gtid_35770 *
                                                           iota32_arg_30510 +
                                                           gtid_35778];
                
                int64_t defunc_1_op_res_36472;
                
                defunc_1_op_res_36472 = add64(x_36464, x_36468);
                
                int64_t defunc_1_op_res_36473 = add64(x_36465, x_36469);
                int64_t defunc_1_op_res_36474 = add64(x_36466, x_36470);
                int64_t defunc_1_op_res_36475 = add64(x_36467, x_36471);
                
                x_36464 = defunc_1_op_res_36472;
                x_36465 = defunc_1_op_res_36473;
                x_36466 = defunc_1_op_res_36474;
                x_36467 = defunc_1_op_res_36475;
                ((__global int64_t *) mem_44706)[gtid_35770 * iota32_arg_30510 +
                                                 gtid_35778] = x_36464;
                ((__global int64_t *) mem_44709)[gtid_35770 * iota32_arg_30510 +
                                                 gtid_35778] = x_36465;
                ((__global int64_t *) mem_44712)[gtid_35770 * iota32_arg_30510 +
                                                 gtid_35778] = x_36466;
                ((__global int64_t *) mem_44715)[gtid_35770 * iota32_arg_30510 +
                                                 gtid_35778] = x_36467;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_36456
}
__kernel void mainDetailedziscan_stage3_36134(__global int *global_failure,
                                              int64_t m_30124,
                                              int64_t iota32_arg_30510,
                                              int64_t num_groups_36213, __global
                                              unsigned char *mem_44649,
                                              int32_t num_threads_46033,
                                              int32_t required_groups_46075)
{
    #define segscan_group_sizze_36212 (mainDetailedzisegscan_group_sizze_36128)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46076;
    int32_t local_tid_46077;
    int64_t group_sizze_46080;
    int32_t wave_sizze_46079;
    int32_t group_tid_46078;
    
    global_tid_46076 = get_global_id(0);
    local_tid_46077 = get_local_id(0);
    group_sizze_46080 = get_local_size(0);
    wave_sizze_46079 = LOCKSTEP_WIDTH;
    group_tid_46078 = get_group_id(0);
    
    int32_t phys_tid_36134;
    
    phys_tid_36134 = global_tid_46076;
    
    int32_t phys_group_id_46081;
    
    phys_group_id_46081 = get_group_id(0);
    for (int32_t i_46082 = 0; i_46082 < sdiv_up32(required_groups_46075 -
                                                  phys_group_id_46081,
                                                  sext_i64_i32(num_groups_36213));
         i_46082++) {
        int32_t virt_group_id_46083 = phys_group_id_46081 + i_46082 *
                sext_i64_i32(num_groups_36213);
        int64_t flat_idx_46084 = sext_i32_i64(virt_group_id_46083) *
                segscan_group_sizze_36212 + sext_i32_i64(local_tid_46077);
        int64_t gtid_36125 = squot64(flat_idx_46084, iota32_arg_30510);
        int64_t gtid_36133 = flat_idx_46084 - squot64(flat_idx_46084,
                                                      iota32_arg_30510) *
                iota32_arg_30510;
        int64_t orig_group_46085 = squot64(flat_idx_46084,
                                           segscan_group_sizze_36212 *
                                           sdiv_up64(m_30124 * iota32_arg_30510,
                                                     sext_i32_i64(num_threads_46033)));
        int64_t carry_in_flat_idx_46086 = orig_group_46085 *
                (segscan_group_sizze_36212 * sdiv_up64(m_30124 *
                                                       iota32_arg_30510,
                                                       sext_i32_i64(num_threads_46033))) -
                1;
        
        if (slt64(gtid_36125, m_30124) && slt64(gtid_36133, iota32_arg_30510)) {
            if (!(orig_group_46085 == 0 || (flat_idx_46084 ==
                                            (orig_group_46085 + 1) *
                                            (segscan_group_sizze_36212 *
                                             sdiv_up64(m_30124 *
                                                       iota32_arg_30510,
                                                       sext_i32_i64(num_threads_46033))) -
                                            1 || slt64(srem64(flat_idx_46084,
                                                              iota32_arg_30510),
                                                       flat_idx_46084 -
                                                       carry_in_flat_idx_46086)))) {
                float x_36216;
                float x_36217;
                
                x_36216 = ((__global
                            float *) mem_44649)[squot64(carry_in_flat_idx_46086,
                                                        iota32_arg_30510) *
                                                iota32_arg_30510 +
                                                (carry_in_flat_idx_46086 -
                                                 squot64(carry_in_flat_idx_46086,
                                                         iota32_arg_30510) *
                                                 iota32_arg_30510)];
                x_36217 = ((__global float *) mem_44649)[gtid_36125 *
                                                         iota32_arg_30510 +
                                                         gtid_36133];
                
                float defunc_1_op_res_36218;
                
                defunc_1_op_res_36218 = x_36216 + x_36217;
                x_36216 = defunc_1_op_res_36218;
                ((__global float *) mem_44649)[gtid_36125 * iota32_arg_30510 +
                                               gtid_36133] = x_36216;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_36212
}
__kernel void mainDetailedzisegmap_31790(__global int *global_failure,
                                         int64_t N_30123, float freq_30129,
                                         int64_t i32_res_30143, __global
                                         unsigned char *mappingindices_mem_43531,
                                         __global unsigned char *mem_43536)
{
    #define segmap_group_sizze_31863 (mainDetailedzisegmap_group_sizze_31793)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45011;
    int32_t local_tid_45012;
    int64_t group_sizze_45015;
    int32_t wave_sizze_45014;
    int32_t group_tid_45013;
    
    global_tid_45011 = get_global_id(0);
    local_tid_45012 = get_local_id(0);
    group_sizze_45015 = get_local_size(0);
    wave_sizze_45014 = LOCKSTEP_WIDTH;
    group_tid_45013 = get_group_id(0);
    
    int32_t phys_tid_31790;
    
    phys_tid_31790 = global_tid_45011;
    
    int64_t gtid_31788;
    
    gtid_31788 = squot64(sext_i32_i64(group_tid_45013) *
                         segmap_group_sizze_31863 +
                         sext_i32_i64(local_tid_45012), N_30123);
    
    int64_t gtid_31789;
    
    gtid_31789 = sext_i32_i64(group_tid_45013) * segmap_group_sizze_31863 +
        sext_i32_i64(local_tid_45012) - squot64(sext_i32_i64(group_tid_45013) *
                                                segmap_group_sizze_31863 +
                                                sext_i32_i64(local_tid_45012),
                                                N_30123) * N_30123;
    if (slt64(gtid_31788, i32_res_30143) && slt64(gtid_31789, N_30123)) {
        int32_t index_primexp_41468 = sext_i64_i32(gtid_31788);
        bool index_primexp_41465 = index_primexp_41468 == 0;
        float defunc_0_f_res_31869;
        
        if (index_primexp_41465) {
            defunc_0_f_res_31869 = 1.0F;
        } else {
            int32_t x_31868 = ((__global
                                int32_t *) mappingindices_mem_43531)[gtid_31789];
            bool cond_31870 = index_primexp_41468 == 1;
            float defunc_0_f_res_f_res_31871;
            
            if (cond_31870) {
                float i32_res_31872 = sitofp_i32_f32(x_31868);
                
                defunc_0_f_res_f_res_31871 = i32_res_31872;
            } else {
                int32_t r32_arg_31873 = sdiv32(index_primexp_41468, 2);
                float i32_res_31874 = sitofp_i32_f32(r32_arg_31873);
                float i32_res_31875 = sitofp_i32_f32(x_31868);
                float x_31876 = 6.2831855F * i32_res_31874;
                float x_31877 = i32_res_31875 * x_31876;
                float angle_31878 = x_31877 / freq_30129;
                int32_t x_31879 = smod32(index_primexp_41468, 2);
                bool cond_31880 = x_31879 == 0;
                float defunc_0_f_res_f_res_f_res_31881;
                
                if (cond_31880) {
                    float sin_res_31882;
                    
                    sin_res_31882 = futrts_sin32(angle_31878);
                    defunc_0_f_res_f_res_f_res_31881 = sin_res_31882;
                } else {
                    float cos_res_31883;
                    
                    cos_res_31883 = futrts_cos32(angle_31878);
                    defunc_0_f_res_f_res_f_res_31881 = cos_res_31883;
                }
                defunc_0_f_res_f_res_31871 = defunc_0_f_res_f_res_f_res_31881;
            }
            defunc_0_f_res_31869 = defunc_0_f_res_f_res_31871;
        }
        ((__global float *) mem_43536)[gtid_31788 * N_30123 + gtid_31789] =
            defunc_0_f_res_31869;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31863
}
__kernel void mainDetailedzisegmap_31968(__global int *global_failure,
                                         int64_t N_30123, float freq_30129,
                                         int64_t i32_res_30143, __global
                                         unsigned char *mappingindices_mem_43531,
                                         __global unsigned char *mem_43540)
{
    #define segmap_group_sizze_32037 (mainDetailedzisegmap_group_sizze_31971)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45016;
    int32_t local_tid_45017;
    int64_t group_sizze_45020;
    int32_t wave_sizze_45019;
    int32_t group_tid_45018;
    
    global_tid_45016 = get_global_id(0);
    local_tid_45017 = get_local_id(0);
    group_sizze_45020 = get_local_size(0);
    wave_sizze_45019 = LOCKSTEP_WIDTH;
    group_tid_45018 = get_group_id(0);
    
    int32_t phys_tid_31968;
    
    phys_tid_31968 = global_tid_45016;
    
    int64_t gtid_31966;
    
    gtid_31966 = squot64(sext_i32_i64(group_tid_45018) *
                         segmap_group_sizze_32037 +
                         sext_i32_i64(local_tid_45017), N_30123);
    
    int64_t gtid_31967;
    
    gtid_31967 = sext_i32_i64(group_tid_45018) * segmap_group_sizze_32037 +
        sext_i32_i64(local_tid_45017) - squot64(sext_i32_i64(group_tid_45018) *
                                                segmap_group_sizze_32037 +
                                                sext_i32_i64(local_tid_45017),
                                                N_30123) * N_30123;
    if (slt64(gtid_31966, i32_res_30143) && slt64(gtid_31967, N_30123)) {
        int32_t index_primexp_41477 = sext_i64_i32(gtid_31966);
        bool index_primexp_41474 = index_primexp_41477 == 0;
        float defunc_0_f_res_32043;
        
        if (index_primexp_41474) {
            defunc_0_f_res_32043 = 1.0F;
        } else {
            int32_t x_32042 = ((__global
                                int32_t *) mappingindices_mem_43531)[gtid_31967];
            int32_t i_32044 = add32(1, index_primexp_41477);
            int32_t r32_arg_32045 = sdiv32(i_32044, 2);
            float i32_res_32046 = sitofp_i32_f32(r32_arg_32045);
            float i32_res_32047 = sitofp_i32_f32(x_32042);
            float x_32048 = 6.2831855F * i32_res_32046;
            float x_32049 = i32_res_32047 * x_32048;
            float angle_32050 = x_32049 / freq_30129;
            int32_t x_32051 = smod32(i_32044, 2);
            bool cond_32052 = x_32051 == 0;
            float defunc_0_f_res_f_res_32053;
            
            if (cond_32052) {
                float sin_res_32054;
                
                sin_res_32054 = futrts_sin32(angle_32050);
                defunc_0_f_res_f_res_32053 = sin_res_32054;
            } else {
                float cos_res_32055;
                
                cos_res_32055 = futrts_cos32(angle_32050);
                defunc_0_f_res_f_res_32053 = cos_res_32055;
            }
            defunc_0_f_res_32043 = defunc_0_f_res_f_res_32053;
        }
        ((__global float *) mem_43540)[gtid_31966 * N_30123 + gtid_31967] =
            defunc_0_f_res_32043;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32037
}
__kernel void mainDetailedzisegmap_32096(__global int *global_failure,
                                         int64_t N_30123, int64_t i32_res_30143,
                                         float i32_res_30208, __global
                                         unsigned char *mem_43544, __global
                                         unsigned char *mem_43548)
{
    #define segmap_group_sizze_32120 (mainDetailedzisegmap_group_sizze_32099)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45021;
    int32_t local_tid_45022;
    int64_t group_sizze_45025;
    int32_t wave_sizze_45024;
    int32_t group_tid_45023;
    
    global_tid_45021 = get_global_id(0);
    local_tid_45022 = get_local_id(0);
    group_sizze_45025 = get_local_size(0);
    wave_sizze_45024 = LOCKSTEP_WIDTH;
    group_tid_45023 = get_group_id(0);
    
    int32_t phys_tid_32096;
    
    phys_tid_32096 = global_tid_45021;
    
    int64_t gtid_32094;
    
    gtid_32094 = squot64(sext_i32_i64(group_tid_45023) *
                         segmap_group_sizze_32120 +
                         sext_i32_i64(local_tid_45022), i32_res_30143);
    
    int64_t gtid_32095;
    
    gtid_32095 = sext_i32_i64(group_tid_45023) * segmap_group_sizze_32120 +
        sext_i32_i64(local_tid_45022) - squot64(sext_i32_i64(group_tid_45023) *
                                                segmap_group_sizze_32120 +
                                                sext_i32_i64(local_tid_45022),
                                                i32_res_30143) * i32_res_30143;
    if (slt64(gtid_32094, N_30123) && slt64(gtid_32095, i32_res_30143)) {
        float x_32123 = ((__global float *) mem_43544)[gtid_32094 *
                                                       i32_res_30143 +
                                                       gtid_32095];
        float defunc_0_f_res_32124 = i32_res_30208 + x_32123;
        
        ((__global float *) mem_43548)[gtid_32094 * i32_res_30143 +
                                       gtid_32095] = defunc_0_f_res_32124;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32120
}
__kernel void mainDetailedzisegmap_32129(__global int *global_failure,
                                         int64_t N_30123, int64_t m_30124,
                                         int32_t n_30128, int32_t k2p2zq_30141,
                                         int64_t i32_res_30143,
                                         int64_t num_groups_32154, __global
                                         unsigned char *binop_p_mem_43541,
                                         __global unsigned char *mem_43548,
                                         __global unsigned char *mem_43551,
                                         __global unsigned char *mem_43555,
                                         __global unsigned char *mem_43597)
{
    #define segmap_group_sizze_32153 (mainDetailedzisegmap_group_sizze_32131)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45029;
    int32_t local_tid_45030;
    int64_t group_sizze_45033;
    int32_t wave_sizze_45032;
    int32_t group_tid_45031;
    
    global_tid_45029 = get_global_id(0);
    local_tid_45030 = get_local_id(0);
    group_sizze_45033 = get_local_size(0);
    wave_sizze_45032 = LOCKSTEP_WIDTH;
    group_tid_45031 = get_group_id(0);
    
    int32_t phys_tid_32129;
    
    phys_tid_32129 = global_tid_45029;
    
    int32_t phys_group_id_45034;
    
    phys_group_id_45034 = get_group_id(0);
    for (int32_t i_45035 = 0; i_45035 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30124, segmap_group_sizze_32153)) -
                   phys_group_id_45034, sext_i64_i32(num_groups_32154));
         i_45035++) {
        int32_t virt_group_id_45036 = phys_group_id_45034 + i_45035 *
                sext_i64_i32(num_groups_32154);
        int64_t gtid_32128 = sext_i32_i64(virt_group_id_45036) *
                segmap_group_sizze_32153 + sext_i32_i64(local_tid_45030);
        
        if (slt64(gtid_32128, m_30124)) {
            for (int32_t i_43509 = 0; i_43509 < k2p2zq_30141; i_43509++) {
                int64_t i_43405 = sext_i32_i64(i_43509);
                
                for (int32_t i_43508 = 0; i_43508 < k2p2zq_30141; i_43508++) {
                    int64_t i_43409 = sext_i32_i64(i_43508);
                    float defunc_2_reduce_res_32162;
                    float redout_43411 = 0.0F;
                    
                    for (int32_t i_43507 = 0; i_43507 < n_30128; i_43507++) {
                        int64_t i_43412 = sext_i32_i64(i_43507);
                        float x_32166 = ((__global float *) mem_43551)[i_43412 *
                                                                       m_30124 +
                                                                       gtid_32128];
                        float x_32167 = ((__global
                                          float *) binop_p_mem_43541)[i_43405 *
                                                                      N_30123 +
                                                                      i_43412];
                        float x_32168 = ((__global float *) mem_43548)[i_43412 *
                                                                       i32_res_30143 +
                                                                       i_43409];
                        float x_32169 = x_32167 * x_32168;
                        bool isnan_res_32170;
                        
                        isnan_res_32170 = futrts_isnan32(x_32166);
                        
                        float y_32171;
                        
                        if (isnan_res_32170) {
                            y_32171 = 0.0F;
                        } else {
                            y_32171 = 1.0F;
                        }
                        
                        float defunc_2_f_res_32172 = x_32169 * y_32171;
                        float defunc_1_op_res_32165 = defunc_2_f_res_32172 +
                              redout_43411;
                        float redout_tmp_45039 = defunc_1_op_res_32165;
                        
                        redout_43411 = redout_tmp_45039;
                    }
                    defunc_2_reduce_res_32162 = redout_43411;
                    ((__global float *) mem_43555)[phys_tid_32129 + (i_43405 *
                                                                     (num_groups_32154 *
                                                                      segmap_group_sizze_32153 *
                                                                      i32_res_30143) +
                                                                     i_43409 *
                                                                     (num_groups_32154 *
                                                                      segmap_group_sizze_32153))] =
                        defunc_2_reduce_res_32162;
                }
            }
            for (int64_t i_45040 = 0; i_45040 < i32_res_30143; i_45040++) {
                for (int64_t i_45041 = 0; i_45041 < i32_res_30143; i_45041++) {
                    ((__global float *) mem_43597)[i_45040 * (m_30124 *
                                                              i32_res_30143) +
                                                   i_45041 * m_30124 +
                                                   gtid_32128] = ((__global
                                                                   float *) mem_43555)[phys_tid_32129 +
                                                                                       (i_45040 *
                                                                                        (num_groups_32154 *
                                                                                         segmap_group_sizze_32153 *
                                                                                         i32_res_30143) +
                                                                                        i_45041 *
                                                                                        (num_groups_32154 *
                                                                                         segmap_group_sizze_32153))];
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32153
}
__kernel void mainDetailedzisegmap_32175(__global int *global_failure,
                                         int64_t m_30124, int64_t N_30125,
                                         int32_t n_30128, int32_t k2p2zq_30141,
                                         int64_t i32_res_30143,
                                         int64_t num_groups_32331, __global
                                         unsigned char *images_mem_43532,
                                         __global unsigned char *mem_43544,
                                         __global unsigned char *mem_43548,
                                         __global unsigned char *mem_43600,
                                         __global unsigned char *mem_43616)
{
    #define segmap_group_sizze_32330 (mainDetailedzisegmap_group_sizze_32178)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45042;
    int32_t local_tid_45043;
    int64_t group_sizze_45046;
    int32_t wave_sizze_45045;
    int32_t group_tid_45044;
    
    global_tid_45042 = get_global_id(0);
    local_tid_45043 = get_local_id(0);
    group_sizze_45046 = get_local_size(0);
    wave_sizze_45045 = LOCKSTEP_WIDTH;
    group_tid_45044 = get_group_id(0);
    
    int32_t phys_tid_32175;
    
    phys_tid_32175 = global_tid_45042;
    
    int32_t phys_group_id_45047;
    
    phys_group_id_45047 = get_group_id(0);
    for (int32_t i_45048 = 0; i_45048 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30124 * i32_res_30143,
                                          segmap_group_sizze_32330)) -
                   phys_group_id_45047, sext_i64_i32(num_groups_32331));
         i_45048++) {
        int32_t virt_group_id_45049 = phys_group_id_45047 + i_45048 *
                sext_i64_i32(num_groups_32331);
        int64_t gtid_32173 = squot64(sext_i32_i64(virt_group_id_45049) *
                                     segmap_group_sizze_32330 +
                                     sext_i32_i64(local_tid_45043),
                                     i32_res_30143);
        int64_t gtid_32174 = sext_i32_i64(virt_group_id_45049) *
                segmap_group_sizze_32330 + sext_i32_i64(local_tid_45043) -
                squot64(sext_i32_i64(virt_group_id_45049) *
                        segmap_group_sizze_32330 +
                        sext_i32_i64(local_tid_45043), i32_res_30143) *
                i32_res_30143;
        
        if (slt64(gtid_32173, m_30124) && slt64(gtid_32174, i32_res_30143)) {
            for (int32_t i_43511 = 0; i_43511 < k2p2zq_30141; i_43511++) {
                int64_t i_43415 = sext_i32_i64(i_43511);
                float defunc_2_reduce_res_32342;
                float redout_43417 = 0.0F;
                
                for (int32_t i_43510 = 0; i_43510 < n_30128; i_43510++) {
                    int64_t i_43418 = sext_i32_i64(i_43510);
                    float x_32346 = ((__global
                                      float *) images_mem_43532)[gtid_32173 *
                                                                 N_30125 +
                                                                 i_43418];
                    float x_32347 = ((__global float *) mem_43544)[i_43418 *
                                                                   i32_res_30143 +
                                                                   gtid_32174];
                    float x_32348 = ((__global float *) mem_43548)[i_43418 *
                                                                   i32_res_30143 +
                                                                   i_43415];
                    float x_32349 = x_32347 * x_32348;
                    bool isnan_res_32350;
                    
                    isnan_res_32350 = futrts_isnan32(x_32346);
                    
                    float y_32351;
                    
                    if (isnan_res_32350) {
                        y_32351 = 0.0F;
                    } else {
                        y_32351 = 1.0F;
                    }
                    
                    float defunc_2_f_res_32352 = x_32349 * y_32351;
                    float defunc_1_op_res_32345 = defunc_2_f_res_32352 +
                          redout_43417;
                    float redout_tmp_45051 = defunc_1_op_res_32345;
                    
                    redout_43417 = redout_tmp_45051;
                }
                defunc_2_reduce_res_32342 = redout_43417;
                ((__global float *) mem_43600)[phys_tid_32175 + i_43415 *
                                               (num_groups_32331 *
                                                segmap_group_sizze_32330)] =
                    defunc_2_reduce_res_32342;
            }
            for (int64_t i_45052 = 0; i_45052 < i32_res_30143; i_45052++) {
                ((__global float *) mem_43616)[i_45052 * (i32_res_30143 *
                                                          m_30124) +
                                               gtid_32173 * i32_res_30143 +
                                               gtid_32174] = ((__global
                                                               float *) mem_43600)[phys_tid_32175 +
                                                                                   i_45052 *
                                                                                   (num_groups_32331 *
                                                                                    segmap_group_sizze_32330)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32330
}
__kernel void mainDetailedzisegmap_32709(__global int *global_failure,
                                         int64_t m_30124, int64_t i32_res_30143,
                                         int64_t m_30274,
                                         int64_t gauss_jordan_res_r_ixfn_43772,
                                         int64_t gauss_jordan_res_r_ixfn_43773,
                                         int64_t gauss_jordan_res_r_ixfn_43775,
                                         __global
                                         unsigned char *gauss_jordan_res_r_mem_43777,
                                         __global unsigned char *mem_43782)
{
    #define segmap_group_sizze_33332 (mainDetailedzisegmap_group_sizze_32713)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45210;
    int32_t local_tid_45211;
    int64_t group_sizze_45214;
    int32_t wave_sizze_45213;
    int32_t group_tid_45212;
    
    global_tid_45210 = get_global_id(0);
    local_tid_45211 = get_local_id(0);
    group_sizze_45214 = get_local_size(0);
    wave_sizze_45213 = LOCKSTEP_WIDTH;
    group_tid_45212 = get_group_id(0);
    
    int32_t phys_tid_32709;
    
    phys_tid_32709 = global_tid_45210;
    
    int64_t gtid_32706;
    
    gtid_32706 = squot64(sext_i32_i64(group_tid_45212) *
                         segmap_group_sizze_33332 +
                         sext_i32_i64(local_tid_45211), i32_res_30143 *
                         i32_res_30143);
    
    int64_t gtid_32707;
    
    gtid_32707 = squot64(sext_i32_i64(group_tid_45212) *
                         segmap_group_sizze_33332 +
                         sext_i32_i64(local_tid_45211) -
                         squot64(sext_i32_i64(group_tid_45212) *
                                 segmap_group_sizze_33332 +
                                 sext_i32_i64(local_tid_45211), i32_res_30143 *
                                 i32_res_30143) * (i32_res_30143 *
                                                   i32_res_30143),
                         i32_res_30143);
    
    int64_t gtid_32708;
    
    gtid_32708 = sext_i32_i64(group_tid_45212) * segmap_group_sizze_33332 +
        sext_i32_i64(local_tid_45211) - squot64(sext_i32_i64(group_tid_45212) *
                                                segmap_group_sizze_33332 +
                                                sext_i32_i64(local_tid_45211),
                                                i32_res_30143 * i32_res_30143) *
        (i32_res_30143 * i32_res_30143) -
        squot64(sext_i32_i64(group_tid_45212) * segmap_group_sizze_33332 +
                sext_i32_i64(local_tid_45211) -
                squot64(sext_i32_i64(group_tid_45212) *
                        segmap_group_sizze_33332 +
                        sext_i32_i64(local_tid_45211), i32_res_30143 *
                        i32_res_30143) * (i32_res_30143 * i32_res_30143),
                i32_res_30143) * i32_res_30143;
    if ((slt64(gtid_32706, m_30124) && slt64(gtid_32707, i32_res_30143)) &&
        slt64(gtid_32708, i32_res_30143)) {
        int64_t index_primexp_41507 = m_30274 * gtid_32707;
        int64_t i_33338 = add64(i32_res_30143, gtid_32708);
        int64_t new_index_33339 = i_33338 + index_primexp_41507;
        float defunc_0_f_res_33340 = ((__global
                                       float *) gauss_jordan_res_r_mem_43777)[gauss_jordan_res_r_ixfn_43772 +
                                                                              (gtid_32706 *
                                                                               gauss_jordan_res_r_ixfn_43773 +
                                                                               new_index_33339 *
                                                                               gauss_jordan_res_r_ixfn_43775)];
        
        ((__global float *) mem_43782)[gtid_32706 * (i32_res_30143 *
                                                     i32_res_30143) +
                                       gtid_32707 * i32_res_30143 +
                                       gtid_32708] = defunc_0_f_res_33340;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33332
}
__kernel void mainDetailedzisegmap_32928(__global int *global_failure,
                                         int64_t m_30124, int64_t nm_30275,
                                         int64_t ctx_param_ext_43735,
                                         int64_t ctx_param_ext_43736,
                                         int64_t ctx_param_ext_43738, __global
                                         unsigned char *mem_param_43740,
                                         __global unsigned char *mem_43760)
{
    #define segmap_group_sizze_33297 (mainDetailedzisegmap_group_sizze_32931)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45204;
    int32_t local_tid_45205;
    int64_t group_sizze_45208;
    int32_t wave_sizze_45207;
    int32_t group_tid_45206;
    
    global_tid_45204 = get_global_id(0);
    local_tid_45205 = get_local_id(0);
    group_sizze_45208 = get_local_size(0);
    wave_sizze_45207 = LOCKSTEP_WIDTH;
    group_tid_45206 = get_group_id(0);
    
    int32_t phys_tid_32928;
    
    phys_tid_32928 = global_tid_45204;
    
    int64_t gtid_32926;
    
    gtid_32926 = squot64(sext_i32_i64(group_tid_45206) *
                         segmap_group_sizze_33297 +
                         sext_i32_i64(local_tid_45205), nm_30275);
    
    int64_t gtid_32927;
    
    gtid_32927 = sext_i32_i64(group_tid_45206) * segmap_group_sizze_33297 +
        sext_i32_i64(local_tid_45205) - squot64(sext_i32_i64(group_tid_45206) *
                                                segmap_group_sizze_33297 +
                                                sext_i32_i64(local_tid_45205),
                                                nm_30275) * nm_30275;
    if (slt64(gtid_32926, m_30124) && slt64(gtid_32927, nm_30275)) {
        float write_value_33303 = ((__global float *) mem_43760)[gtid_32926 *
                                                                 nm_30275 +
                                                                 gtid_32927];
        
        if ((sle64(0, gtid_32926) && slt64(gtid_32926, m_30124)) && (sle64(0,
                                                                           gtid_32927) &&
                                                                     slt64(gtid_32927,
                                                                           nm_30275))) {
            ((__global float *) mem_param_43740)[ctx_param_ext_43735 +
                                                 (gtid_32926 *
                                                  ctx_param_ext_43736 +
                                                  gtid_32927 *
                                                  ctx_param_ext_43738)] =
                write_value_33303;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33297
}
__kernel void mainDetailedzisegmap_32982(__global int *global_failure,
                                         int64_t m_30124, int32_t k2p2zq_30141,
                                         int64_t nm_30275,
                                         int32_t i64_res_30283, int32_t i_33196,
                                         int64_t i_33198,
                                         int64_t ctx_param_ext_43735,
                                         int64_t ctx_param_ext_43736,
                                         int64_t ctx_param_ext_43738, __global
                                         unsigned char *mem_param_43740,
                                         __global unsigned char *mem_43756,
                                         __global unsigned char *mem_43760)
{
    #define segmap_group_sizze_33263 (mainDetailedzisegmap_group_sizze_32985)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45199;
    int32_t local_tid_45200;
    int64_t group_sizze_45203;
    int32_t wave_sizze_45202;
    int32_t group_tid_45201;
    
    global_tid_45199 = get_global_id(0);
    local_tid_45200 = get_local_id(0);
    group_sizze_45203 = get_local_size(0);
    wave_sizze_45202 = LOCKSTEP_WIDTH;
    group_tid_45201 = get_group_id(0);
    
    int32_t phys_tid_32982;
    
    phys_tid_32982 = global_tid_45199;
    
    int64_t gtid_32980;
    
    gtid_32980 = squot64(sext_i32_i64(group_tid_45201) *
                         segmap_group_sizze_33263 +
                         sext_i32_i64(local_tid_45200), nm_30275);
    
    int64_t gtid_32981;
    
    gtid_32981 = sext_i32_i64(group_tid_45201) * segmap_group_sizze_33263 +
        sext_i32_i64(local_tid_45200) - squot64(sext_i32_i64(group_tid_45201) *
                                                segmap_group_sizze_33263 +
                                                sext_i32_i64(local_tid_45200),
                                                nm_30275) * nm_30275;
    if (slt64(gtid_32980, m_30124) && slt64(gtid_32981, nm_30275)) {
        bool cond_33268 = ((__global bool *) mem_43756)[gtid_32980];
        int32_t defunc_0_f_res_33270 = sext_i64_i32(gtid_32981);
        int32_t defunc_0_f_res_33271 = sdiv32(defunc_0_f_res_33270,
                                              i64_res_30283);
        int32_t defunc_0_f_res_33272 = smod32(defunc_0_f_res_33270,
                                              i64_res_30283);
        float defunc_0_f_res_33273;
        
        if (cond_33268) {
            int32_t x_33274 = mul32(i64_res_30283, defunc_0_f_res_33271);
            int32_t i_33275 = add32(defunc_0_f_res_33272, x_33274);
            int64_t i_33276 = sext_i32_i64(i_33275);
            float defunc_0_f_res_t_res_33277 = ((__global
                                                 float *) mem_param_43740)[ctx_param_ext_43735 +
                                                                           (gtid_32980 *
                                                                            ctx_param_ext_43736 +
                                                                            i_33276 *
                                                                            ctx_param_ext_43738)];
            
            defunc_0_f_res_33273 = defunc_0_f_res_t_res_33277;
        } else {
            float v1_33267 = ((__global
                               float *) mem_param_43740)[ctx_param_ext_43735 +
                                                         (gtid_32980 *
                                                          ctx_param_ext_43736 +
                                                          i_33198 *
                                                          ctx_param_ext_43738)];
            int64_t j_33278 = sext_i32_i64(defunc_0_f_res_33272);
            float x_33279 = ((__global
                              float *) mem_param_43740)[ctx_param_ext_43735 +
                                                        (gtid_32980 *
                                                         ctx_param_ext_43736 +
                                                         j_33278 *
                                                         ctx_param_ext_43738)];
            float x_33280 = x_33279 / v1_33267;
            int32_t y_33281 = sub32(k2p2zq_30141, 1);
            bool cond_33282 = slt32(defunc_0_f_res_33271, y_33281);
            float defunc_0_f_res_f_res_33283;
            
            if (cond_33282) {
                int32_t x_33284 = add32(1, defunc_0_f_res_33271);
                int32_t x_33285 = mul32(i64_res_30283, x_33284);
                int32_t i_33286 = add32(defunc_0_f_res_33272, x_33285);
                int64_t i_33287 = sext_i32_i64(i_33286);
                float x_33288 = ((__global
                                  float *) mem_param_43740)[ctx_param_ext_43735 +
                                                            (gtid_32980 *
                                                             ctx_param_ext_43736 +
                                                             i_33287 *
                                                             ctx_param_ext_43738)];
                int32_t i_33289 = add32(i_33196, x_33285);
                int64_t i_33290 = sext_i32_i64(i_33289);
                float x_33291 = ((__global
                                  float *) mem_param_43740)[ctx_param_ext_43735 +
                                                            (gtid_32980 *
                                                             ctx_param_ext_43736 +
                                                             i_33290 *
                                                             ctx_param_ext_43738)];
                float y_33292 = x_33280 * x_33291;
                float defunc_0_f_res_f_res_t_res_33293 = x_33288 - y_33292;
                
                defunc_0_f_res_f_res_33283 = defunc_0_f_res_f_res_t_res_33293;
            } else {
                defunc_0_f_res_f_res_33283 = x_33280;
            }
            defunc_0_f_res_33273 = defunc_0_f_res_f_res_33283;
        }
        ((__global float *) mem_43760)[gtid_32980 * nm_30275 + gtid_32981] =
            defunc_0_f_res_33273;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33263
}
__kernel void mainDetailedzisegmap_33050(__global int *global_failure,
                                         int64_t m_30124, int64_t i_33198,
                                         int64_t ctx_param_ext_43735,
                                         int64_t ctx_param_ext_43736,
                                         int64_t ctx_param_ext_43738, __global
                                         unsigned char *mem_param_43740,
                                         __global unsigned char *mem_43756)
{
    #define segmap_group_sizze_33247 (mainDetailedzisegmap_group_sizze_33052)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45194;
    int32_t local_tid_45195;
    int64_t group_sizze_45198;
    int32_t wave_sizze_45197;
    int32_t group_tid_45196;
    
    global_tid_45194 = get_global_id(0);
    local_tid_45195 = get_local_id(0);
    group_sizze_45198 = get_local_size(0);
    wave_sizze_45197 = LOCKSTEP_WIDTH;
    group_tid_45196 = get_group_id(0);
    
    int32_t phys_tid_33050;
    
    phys_tid_33050 = global_tid_45194;
    
    int64_t gtid_33049;
    
    gtid_33049 = sext_i32_i64(group_tid_45196) * segmap_group_sizze_33247 +
        sext_i32_i64(local_tid_45195);
    if (slt64(gtid_33049, m_30124)) {
        float v1_33252 = ((__global
                           float *) mem_param_43740)[ctx_param_ext_43735 +
                                                     (gtid_33049 *
                                                      ctx_param_ext_43736 +
                                                      i_33198 *
                                                      ctx_param_ext_43738)];
        bool cond_33253 = v1_33252 == 0.0F;
        
        ((__global bool *) mem_43756)[gtid_33049] = cond_33253;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33247
}
__kernel void mainDetailedzisegmap_33141(__global int *global_failure,
                                         int64_t m_30124, int64_t i32_res_30143,
                                         int64_t m_30274, int64_t nm_30275,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43700,
                                         __global unsigned char *mem_43732)
{
    #define segmap_group_sizze_33181 (mainDetailedzisegmap_group_sizze_33144)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45161;
    int32_t local_tid_45162;
    int64_t group_sizze_45165;
    int32_t wave_sizze_45164;
    int32_t group_tid_45163;
    
    global_tid_45161 = get_global_id(0);
    local_tid_45162 = get_local_id(0);
    group_sizze_45165 = get_local_size(0);
    wave_sizze_45164 = LOCKSTEP_WIDTH;
    group_tid_45163 = get_group_id(0);
    
    int32_t phys_tid_33141;
    
    phys_tid_33141 = global_tid_45161;
    
    int64_t gtid_33139;
    
    gtid_33139 = squot64(sext_i32_i64(group_tid_45163) *
                         segmap_group_sizze_33181 +
                         sext_i32_i64(local_tid_45162), nm_30275);
    
    int64_t gtid_33140;
    
    gtid_33140 = sext_i32_i64(group_tid_45163) * segmap_group_sizze_33181 +
        sext_i32_i64(local_tid_45162) - squot64(sext_i32_i64(group_tid_45163) *
                                                segmap_group_sizze_33181 +
                                                sext_i32_i64(local_tid_45162),
                                                nm_30275) * nm_30275;
    if (slt64(gtid_33139, m_30124) && slt64(gtid_33140, nm_30275)) {
        int64_t defunc_0_f_res_33186 = sdiv64(gtid_33140, m_30274);
        int64_t defunc_0_f_res_33187 = smod64(gtid_33140, m_30274);
        bool cond_33188 = slt64(defunc_0_f_res_33187, i32_res_30143);
        float defunc_0_f_res_33189;
        
        if (cond_33188) {
            float defunc_0_f_res_t_res_33190 = ((__global
                                                 float *) defunc_3_map_res_mem_43700)[gtid_33139 *
                                                                                      (i32_res_30143 *
                                                                                       i32_res_30143) +
                                                                                      defunc_0_f_res_33186 *
                                                                                      i32_res_30143 +
                                                                                      defunc_0_f_res_33187];
            
            defunc_0_f_res_33189 = defunc_0_f_res_t_res_33190;
        } else {
            int64_t y_33191 = add64(i32_res_30143, defunc_0_f_res_33186);
            bool cond_33192 = defunc_0_f_res_33187 == y_33191;
            float defunc_0_f_res_f_res_33193;
            
            if (cond_33192) {
                defunc_0_f_res_f_res_33193 = 1.0F;
            } else {
                defunc_0_f_res_f_res_33193 = 0.0F;
            }
            defunc_0_f_res_33189 = defunc_0_f_res_f_res_33193;
        }
        ((__global float *) mem_43732)[gtid_33139 * nm_30275 + gtid_33140] =
            defunc_0_f_res_33189;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33181
}
__kernel void mainDetailedzisegmap_33347(__global int *global_failure,
                                         int64_t N_30123, int64_t m_30124,
                                         int32_t n_30128, int32_t k2p2zq_30141,
                                         int64_t i32_res_30143,
                                         int64_t num_groups_33368, __global
                                         unsigned char *binop_p_mem_43541,
                                         __global unsigned char *mem_43786,
                                         __global unsigned char *mem_43789,
                                         __global unsigned char *mem_43804)
{
    #define segmap_group_sizze_33367 (mainDetailedzisegmap_group_sizze_33349)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45218;
    int32_t local_tid_45219;
    int64_t group_sizze_45222;
    int32_t wave_sizze_45221;
    int32_t group_tid_45220;
    
    global_tid_45218 = get_global_id(0);
    local_tid_45219 = get_local_id(0);
    group_sizze_45222 = get_local_size(0);
    wave_sizze_45221 = LOCKSTEP_WIDTH;
    group_tid_45220 = get_group_id(0);
    
    int32_t phys_tid_33347;
    
    phys_tid_33347 = global_tid_45218;
    
    int32_t phys_group_id_45223;
    
    phys_group_id_45223 = get_group_id(0);
    for (int32_t i_45224 = 0; i_45224 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30124, segmap_group_sizze_33367)) -
                   phys_group_id_45223, sext_i64_i32(num_groups_33368));
         i_45224++) {
        int32_t virt_group_id_45225 = phys_group_id_45223 + i_45224 *
                sext_i64_i32(num_groups_33368);
        int64_t gtid_33346 = sext_i32_i64(virt_group_id_45225) *
                segmap_group_sizze_33367 + sext_i32_i64(local_tid_45219);
        
        if (slt64(gtid_33346, m_30124)) {
            for (int32_t i_43513 = 0; i_43513 < k2p2zq_30141; i_43513++) {
                int64_t i_43421 = sext_i32_i64(i_43513);
                float defunc_2_reduce_res_33374;
                float redout_43423 = 0.0F;
                
                for (int32_t i_43512 = 0; i_43512 < n_30128; i_43512++) {
                    int64_t i_43424 = sext_i32_i64(i_43512);
                    float x_33379 = ((__global float *) mem_43786)[i_43424 *
                                                                   m_30124 +
                                                                   gtid_33346];
                    bool isnan_res_33380;
                    
                    isnan_res_33380 = futrts_isnan32(x_33379);
                    
                    float defunc_1_f_res_33381;
                    
                    if (isnan_res_33380) {
                        defunc_1_f_res_33381 = 0.0F;
                    } else {
                        float x_33378 = ((__global
                                          float *) binop_p_mem_43541)[i_43421 *
                                                                      N_30123 +
                                                                      i_43424];
                        float defunc_1_f_res_f_res_33382 = x_33378 * x_33379;
                        
                        defunc_1_f_res_33381 = defunc_1_f_res_f_res_33382;
                    }
                    
                    float defunc_1_op_res_33377 = defunc_1_f_res_33381 +
                          redout_43423;
                    float redout_tmp_45227 = defunc_1_op_res_33377;
                    
                    redout_43423 = redout_tmp_45227;
                }
                defunc_2_reduce_res_33374 = redout_43423;
                ((__global float *) mem_43789)[phys_tid_33347 + i_43421 *
                                               (num_groups_33368 *
                                                segmap_group_sizze_33367)] =
                    defunc_2_reduce_res_33374;
            }
            for (int64_t i_45228 = 0; i_45228 < i32_res_30143; i_45228++) {
                ((__global float *) mem_43804)[i_45228 * m_30124 + gtid_33346] =
                    ((__global float *) mem_43789)[phys_tid_33347 + i_45228 *
                                                   (num_groups_33368 *
                                                    segmap_group_sizze_33367)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33367
}
__kernel void mainDetailedzisegmap_33488(__global int *global_failure,
                                         int64_t m_30124, int32_t k2p2zq_30141,
                                         int64_t i32_res_30143,
                                         int64_t num_groups_33508, __global
                                         unsigned char *mem_44008, __global
                                         unsigned char *mem_44011, __global
                                         unsigned char *mem_44014, __global
                                         unsigned char *mem_44029)
{
    #define segmap_group_sizze_33507 (mainDetailedzisegmap_group_sizze_33490)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45350;
    int32_t local_tid_45351;
    int64_t group_sizze_45354;
    int32_t wave_sizze_45353;
    int32_t group_tid_45352;
    
    global_tid_45350 = get_global_id(0);
    local_tid_45351 = get_local_id(0);
    group_sizze_45354 = get_local_size(0);
    wave_sizze_45353 = LOCKSTEP_WIDTH;
    group_tid_45352 = get_group_id(0);
    
    int32_t phys_tid_33488;
    
    phys_tid_33488 = global_tid_45350;
    
    int32_t phys_group_id_45355;
    
    phys_group_id_45355 = get_group_id(0);
    for (int32_t i_45356 = 0; i_45356 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30124, segmap_group_sizze_33507)) -
                   phys_group_id_45355, sext_i64_i32(num_groups_33508));
         i_45356++) {
        int32_t virt_group_id_45357 = phys_group_id_45355 + i_45356 *
                sext_i64_i32(num_groups_33508);
        int64_t gtid_33487 = sext_i32_i64(virt_group_id_45357) *
                segmap_group_sizze_33507 + sext_i32_i64(local_tid_45351);
        
        if (slt64(gtid_33487, m_30124)) {
            for (int32_t i_43515 = 0; i_43515 < k2p2zq_30141; i_43515++) {
                int64_t i_43427 = sext_i32_i64(i_43515);
                float defunc_0_f_res_33515;
                float redout_43429 = 0.0F;
                
                for (int32_t i_43514 = 0; i_43514 < k2p2zq_30141; i_43514++) {
                    int64_t i_43430 = sext_i32_i64(i_43514);
                    float x_33519 = ((__global float *) mem_44011)[i_43430 *
                                                                   m_30124 +
                                                                   gtid_33487];
                    float x_33520 = ((__global float *) mem_44008)[i_43427 *
                                                                   (m_30124 *
                                                                    i32_res_30143) +
                                                                   i_43430 *
                                                                   m_30124 +
                                                                   gtid_33487];
                    float defunc_1_f_res_33521 = x_33519 * x_33520;
                    float defunc_1_op_res_33518 = defunc_1_f_res_33521 +
                          redout_43429;
                    float redout_tmp_45359 = defunc_1_op_res_33518;
                    
                    redout_43429 = redout_tmp_45359;
                }
                defunc_0_f_res_33515 = redout_43429;
                ((__global float *) mem_44014)[phys_tid_33488 + i_43427 *
                                               (num_groups_33508 *
                                                segmap_group_sizze_33507)] =
                    defunc_0_f_res_33515;
            }
            for (int64_t i_45360 = 0; i_45360 < i32_res_30143; i_45360++) {
                ((__global float *) mem_44029)[i_45360 * m_30124 + gtid_33487] =
                    ((__global float *) mem_44014)[phys_tid_33488 + i_45360 *
                                                   (num_groups_33508 *
                                                    segmap_group_sizze_33507)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33507
}
__kernel void mainDetailedzisegmap_33620(__global int *global_failure,
                                         int64_t N_30123, int64_t m_30124,
                                         int32_t k2p2zq_30141,
                                         int64_t i32_res_30143,
                                         int64_t num_groups_33639, __global
                                         unsigned char *mem_43548, __global
                                         unsigned char *mem_44073, __global
                                         unsigned char *mem_44076, __global
                                         unsigned char *mem_44091)
{
    #define segmap_group_sizze_33638 (mainDetailedzisegmap_group_sizze_33622)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45438;
    int32_t local_tid_45439;
    int64_t group_sizze_45442;
    int32_t wave_sizze_45441;
    int32_t group_tid_45440;
    
    global_tid_45438 = get_global_id(0);
    local_tid_45439 = get_local_id(0);
    group_sizze_45442 = get_local_size(0);
    wave_sizze_45441 = LOCKSTEP_WIDTH;
    group_tid_45440 = get_group_id(0);
    
    int32_t phys_tid_33620;
    
    phys_tid_33620 = global_tid_45438;
    
    int32_t phys_group_id_45443;
    
    phys_group_id_45443 = get_group_id(0);
    for (int32_t i_45444 = 0; i_45444 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30124, segmap_group_sizze_33638)) -
                   phys_group_id_45443, sext_i64_i32(num_groups_33639));
         i_45444++) {
        int32_t virt_group_id_45445 = phys_group_id_45443 + i_45444 *
                sext_i64_i32(num_groups_33639);
        int64_t gtid_33619 = sext_i32_i64(virt_group_id_45445) *
                segmap_group_sizze_33638 + sext_i32_i64(local_tid_45439);
        
        if (slt64(gtid_33619, m_30124)) {
            for (int64_t i_43437 = 0; i_43437 < N_30123; i_43437++) {
                float defunc_0_f_res_33645;
                float redout_43439 = 0.0F;
                
                for (int32_t i_43518 = 0; i_43518 < k2p2zq_30141; i_43518++) {
                    int64_t i_43440 = sext_i32_i64(i_43518);
                    float x_33649 = ((__global float *) mem_44073)[i_43440 *
                                                                   m_30124 +
                                                                   gtid_33619];
                    float x_33650 = ((__global float *) mem_43548)[i_43437 *
                                                                   i32_res_30143 +
                                                                   i_43440];
                    float defunc_1_f_res_33651 = x_33649 * x_33650;
                    float defunc_1_op_res_33648 = defunc_1_f_res_33651 +
                          redout_43439;
                    float redout_tmp_45447 = defunc_1_op_res_33648;
                    
                    redout_43439 = redout_tmp_45447;
                }
                defunc_0_f_res_33645 = redout_43439;
                ((__global float *) mem_44076)[phys_tid_33620 + i_43437 *
                                               (num_groups_33639 *
                                                segmap_group_sizze_33638)] =
                    defunc_0_f_res_33645;
            }
            for (int64_t i_45448 = 0; i_45448 < N_30123; i_45448++) {
                ((__global float *) mem_44091)[i_45448 * m_30124 + gtid_33619] =
                    ((__global float *) mem_44076)[phys_tid_33620 + i_45448 *
                                                   (num_groups_33639 *
                                                    segmap_group_sizze_33638)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33638
}
__kernel void mainDetailedzisegmap_33900(__global int *global_failure,
                                         int64_t N_30123, int64_t m_30124,
                                         __global unsigned char *mem_44297,
                                         __global unsigned char *mem_44300,
                                         __global unsigned char *mem_44323,
                                         __global unsigned char *mem_44326)
{
    #define segmap_group_sizze_34066 (mainDetailedzisegmap_group_sizze_33903)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45665;
    int32_t local_tid_45666;
    int64_t group_sizze_45669;
    int32_t wave_sizze_45668;
    int32_t group_tid_45667;
    
    global_tid_45665 = get_global_id(0);
    local_tid_45666 = get_local_id(0);
    group_sizze_45669 = get_local_size(0);
    wave_sizze_45668 = LOCKSTEP_WIDTH;
    group_tid_45667 = get_group_id(0);
    
    int32_t phys_tid_33900;
    
    phys_tid_33900 = global_tid_45665;
    
    int64_t gtid_33898;
    
    gtid_33898 = squot64(sext_i32_i64(group_tid_45667) *
                         segmap_group_sizze_34066 +
                         sext_i32_i64(local_tid_45666), N_30123);
    
    int64_t gtid_33899;
    
    gtid_33899 = sext_i32_i64(group_tid_45667) * segmap_group_sizze_34066 +
        sext_i32_i64(local_tid_45666) - squot64(sext_i32_i64(group_tid_45667) *
                                                segmap_group_sizze_34066 +
                                                sext_i32_i64(local_tid_45666),
                                                N_30123) * N_30123;
    if (slt64(gtid_33898, m_30124) && slt64(gtid_33899, N_30123)) {
        float x_34074 = ((__global float *) mem_44326)[gtid_33898 * N_30123 +
                                                       gtid_33899];
        int32_t index_primexp_41515 = sext_i64_i32(gtid_33899);
        bool isnan_res_34077;
        
        isnan_res_34077 = futrts_isnan32(x_34074);
        
        bool defunc_0_p_res_34078 = !isnan_res_34077;
        int64_t defunc_1_f_res_34079;
        
        if (defunc_0_p_res_34078) {
            int64_t x_34075 = ((__global int64_t *) mem_44323)[gtid_33898 *
                                                               N_30123 +
                                                               gtid_33899];
            int64_t defunc_1_f_res_t_res_34080 = sub64(x_34075, 1);
            
            defunc_1_f_res_34079 = defunc_1_f_res_t_res_34080;
        } else {
            defunc_1_f_res_34079 = -1;
        }
        if ((sle64(0, gtid_33898) && slt64(gtid_33898, m_30124)) && (sle64(0,
                                                                           defunc_1_f_res_34079) &&
                                                                     slt64(defunc_1_f_res_34079,
                                                                           N_30123))) {
            ((__global int32_t *) mem_44300)[gtid_33898 * N_30123 +
                                             defunc_1_f_res_34079] =
                index_primexp_41515;
        }
        if ((sle64(0, gtid_33898) && slt64(gtid_33898, m_30124)) && (sle64(0,
                                                                           defunc_1_f_res_34079) &&
                                                                     slt64(defunc_1_f_res_34079,
                                                                           N_30123))) {
            ((__global float *) mem_44297)[gtid_33898 * N_30123 +
                                           defunc_1_f_res_34079] = x_34074;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34066
}
__kernel void mainDetailedzisegmap_33976(__global int *global_failure,
                                         int64_t N_30123, int64_t m_30124,
                                         int64_t i_30390, __global
                                         unsigned char *mem_44323, __global
                                         unsigned char *mem_44329)
{
    #define segmap_group_sizze_34030 (mainDetailedzisegmap_group_sizze_33978)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45660;
    int32_t local_tid_45661;
    int64_t group_sizze_45664;
    int32_t wave_sizze_45663;
    int32_t group_tid_45662;
    
    global_tid_45660 = get_global_id(0);
    local_tid_45661 = get_local_id(0);
    group_sizze_45664 = get_local_size(0);
    wave_sizze_45663 = LOCKSTEP_WIDTH;
    group_tid_45662 = get_group_id(0);
    
    int32_t phys_tid_33976;
    
    phys_tid_33976 = global_tid_45660;
    
    int64_t gtid_33975;
    
    gtid_33975 = sext_i32_i64(group_tid_45662) * segmap_group_sizze_34030 +
        sext_i32_i64(local_tid_45661);
    if (slt64(gtid_33975, m_30124)) {
        int64_t last_res_34034 = ((__global int64_t *) mem_44323)[gtid_33975 *
                                                                  N_30123 +
                                                                  i_30390];
        int32_t defunc_0_f_res_34035 = sext_i64_i32(last_res_34034);
        
        ((__global int32_t *) mem_44329)[gtid_33975] = defunc_0_f_res_34035;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34030
}
__kernel void mainDetailedzisegmap_34227(__global int *global_failure,
                                         int64_t m_30124, float hfrac_30130,
                                         int32_t k2p2_30139, __global
                                         unsigned char *mem_44383, __global
                                         unsigned char *mem_44386, __global
                                         unsigned char *mem_44389, __global
                                         unsigned char *mem_44391)
{
    #define segmap_group_sizze_34312 (mainDetailedzisegmap_group_sizze_34229)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45820;
    int32_t local_tid_45821;
    int64_t group_sizze_45824;
    int32_t wave_sizze_45823;
    int32_t group_tid_45822;
    
    global_tid_45820 = get_global_id(0);
    local_tid_45821 = get_local_id(0);
    group_sizze_45824 = get_local_size(0);
    wave_sizze_45823 = LOCKSTEP_WIDTH;
    group_tid_45822 = get_group_id(0);
    
    int32_t phys_tid_34227;
    
    phys_tid_34227 = global_tid_45820;
    
    int64_t gtid_34226;
    
    gtid_34226 = sext_i32_i64(group_tid_45822) * segmap_group_sizze_34312 +
        sext_i32_i64(local_tid_45821);
    if (slt64(gtid_34226, m_30124)) {
        int32_t defunc_0_f_res_34316 = ((__global
                                         int32_t *) mem_44383)[gtid_34226];
        float defunc_0_f_res_34317 = ((__global float *) mem_44386)[gtid_34226];
        int32_t r32_arg_34318 = sub32(defunc_0_f_res_34316, k2p2_30139);
        float i32_res_34319 = sitofp_i32_f32(r32_arg_34318);
        float sqrt_arg_34320 = defunc_0_f_res_34317 / i32_res_34319;
        float sqrt_res_34321;
        
        sqrt_res_34321 = futrts_sqrt32(sqrt_arg_34320);
        
        float i32_res_34322 = sitofp_i32_f32(defunc_0_f_res_34316);
        float t32_arg_34323 = hfrac_30130 * i32_res_34322;
        int32_t f32_res_34324 = fptosi_f32_i32(t32_arg_34323);
        
        ((__global int32_t *) mem_44389)[gtid_34226] = f32_res_34324;
        ((__global float *) mem_44391)[gtid_34226] = sqrt_res_34321;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34312
}
__kernel void mainDetailedzisegmap_34498(__global int *global_failure,
                                         float lam_30131,
                                         int64_t iota32_arg_30510,
                                         int32_t x_30515, float i32_res_30523,
                                         __global
                                         unsigned char *mappingindices_mem_43531,
                                         __global unsigned char *mem_44433,
                                         __global unsigned char *mem_44435)
{
    #define segmap_group_sizze_34517 (mainDetailedzisegmap_group_sizze_34500)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45930;
    int32_t local_tid_45931;
    int64_t group_sizze_45934;
    int32_t wave_sizze_45933;
    int32_t group_tid_45932;
    
    global_tid_45930 = get_global_id(0);
    local_tid_45931 = get_local_id(0);
    group_sizze_45934 = get_local_size(0);
    wave_sizze_45933 = LOCKSTEP_WIDTH;
    group_tid_45932 = get_group_id(0);
    
    int32_t phys_tid_34498;
    
    phys_tid_34498 = global_tid_45930;
    
    int64_t gtid_34497;
    
    gtid_34497 = sext_i32_i64(group_tid_45932) * segmap_group_sizze_34517 +
        sext_i32_i64(local_tid_45931);
    if (slt64(gtid_34497, iota32_arg_30510)) {
        int32_t defunc_0_f_res_34522 = sext_i64_i32(gtid_34497);
        int32_t t_34523 = add32(x_30515, defunc_0_f_res_34522);
        int32_t i_34524 = sub32(t_34523, 1);
        int64_t i_34525 = sext_i32_i64(i_34524);
        int32_t time_34526 = ((__global
                               int32_t *) mappingindices_mem_43531)[i_34525];
        float i32_res_34527 = sitofp_i32_f32(time_34526);
        float logplus_arg_34528 = i32_res_34527 / i32_res_30523;
        bool cond_34529 = 2.7182817F < logplus_arg_34528;
        float logplus_res_34530;
        
        if (cond_34529) {
            float log_res_34531;
            
            log_res_34531 = futrts_log32(logplus_arg_34528);
            logplus_res_34530 = log_res_34531;
        } else {
            logplus_res_34530 = 1.0F;
        }
        
        float sqrt_res_34532;
        
        sqrt_res_34532 = futrts_sqrt32(logplus_res_34530);
        
        float defunc_0_f_res_34533 = lam_30131 * sqrt_res_34532;
        
        ((__global int32_t *) mem_44433)[gtid_34497] = defunc_0_f_res_34522;
        ((__global float *) mem_44435)[gtid_34497] = defunc_0_f_res_34533;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34517
}
__kernel void mainDetailedzisegmap_34573(__global int *global_failure,
                                         int failure_is_an_option, __global
                                         int64_t *global_failure_args,
                                         int64_t N_30123, int64_t m_30124,
                                         int32_t n_30128,
                                         int64_t iota32_arg_30510,
                                         int32_t iters_30541, int64_t i_30543,
                                         int64_t num_groups_34827, __global
                                         unsigned char *defunc_4_map_res_mem_44331,
                                         __global
                                         unsigned char *defunc_4_map_res_mem_44332,
                                         __global
                                         unsigned char *defunc_4_map_res_mem_44333,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_44395,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_44396,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_44397,
                                         __global
                                         unsigned char *defunc_0_f_res_mem_44430,
                                         __global unsigned char *mem_44435,
                                         __global unsigned char *mem_44441,
                                         __global unsigned char *mem_44455,
                                         __global unsigned char *mem_44474,
                                         __global unsigned char *mem_44476,
                                         __global unsigned char *mem_44478,
                                         __global unsigned char *mem_44480,
                                         __global unsigned char *mem_44482,
                                         __global unsigned char *mem_44544,
                                         __global unsigned char *mem_44563,
                                         __global unsigned char *mem_44578,
                                         __global unsigned char *mem_44581,
                                         __global unsigned char *mem_44583,
                                         __global unsigned char *mem_44585,
                                         __global unsigned char *mem_44587,
                                         __global
                                         unsigned char *double_buffer_mem_44846)
{
    #define segmap_group_sizze_34826 (mainDetailedzisegmap_group_sizze_34575)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_45940;
    int32_t local_tid_45941;
    int64_t group_sizze_45944;
    int32_t wave_sizze_45943;
    int32_t group_tid_45942;
    
    global_tid_45940 = get_global_id(0);
    local_tid_45941 = get_local_id(0);
    group_sizze_45944 = get_local_size(0);
    wave_sizze_45943 = LOCKSTEP_WIDTH;
    group_tid_45942 = get_group_id(0);
    
    int32_t phys_tid_34573;
    
    phys_tid_34573 = global_tid_45940;
    
    int32_t phys_group_id_45945;
    
    phys_group_id_45945 = get_group_id(0);
    for (int32_t i_45946 = 0; i_45946 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30124, segmap_group_sizze_34826)) -
                   phys_group_id_45945, sext_i64_i32(num_groups_34827));
         i_45946++) {
        int32_t virt_group_id_45947 = phys_group_id_45945 + i_45946 *
                sext_i64_i32(num_groups_34827);
        int64_t gtid_34572 = sext_i32_i64(virt_group_id_45947) *
                segmap_group_sizze_34826 + sext_i32_i64(local_tid_45941);
        
        if (slt64(gtid_34572, m_30124)) {
            int32_t x_34834 = ((__global
                                int32_t *) defunc_4_map_res_mem_44331)[gtid_34572];
            int32_t x_34835 = ((__global
                                int32_t *) defunc_3_map_res_mem_44396)[gtid_34572];
            float x_34836 = ((__global
                              float *) defunc_3_map_res_mem_44397)[gtid_34572];
            int32_t x_34837 = ((__global
                                int32_t *) defunc_3_map_res_mem_44395)[gtid_34572];
            float x_34838 = ((__global
                              float *) defunc_0_f_res_mem_44430)[gtid_34572];
            int32_t y_34841 = sub32(x_34834, x_34835);
            float i32_res_34842 = sitofp_i32_f32(x_34835);
            float sqrt_res_34843;
            
            sqrt_res_34843 = futrts_sqrt32(i32_res_34842);
            
            float y_34844 = x_34836 * sqrt_res_34843;
            float inpacc_34845;
            bool defunc_0_f_res_34846;
            int32_t defunc_0_f_res_34847;
            float defunc_0_f_res_34848;
            float inpacc_34851;
            bool inpacc_34852;
            int32_t inpacc_34853;
            float inpacc_34854;
            
            inpacc_34851 = 0.0F;
            inpacc_34852 = 0;
            inpacc_34853 = -1;
            inpacc_34854 = 0.0F;
            for (int64_t i_43382 = 0; i_43382 < iota32_arg_30510; i_43382++) {
                int32_t index_primexp_43402 = sext_i64_i32(i_43382);
                bool cond_34862 = sle32(y_34841, index_primexp_43402);
                float defunc_0_f_res_34863;
                
                if (cond_34862) {
                    defunc_0_f_res_34863 = 0.0F;
                } else {
                    bool cond_34864 = index_primexp_43402 == 0;
                    float defunc_0_f_res_f_res_34865;
                    
                    if (cond_34864) {
                        defunc_0_f_res_f_res_34865 = x_34838;
                    } else {
                        int32_t i_34866 = add32(x_34835, index_primexp_43402);
                        int64_t i_34867 = sext_i32_i64(i_34866);
                        float x_34868 = ((__global
                                          float *) defunc_4_map_res_mem_44332)[gtid_34572 *
                                                                               N_30123 +
                                                                               i_34867];
                        int32_t x_34869 = sub32(x_34835, x_34837);
                        int32_t i_34870 = add32(x_34869, index_primexp_43402);
                        int64_t i_34871 = sext_i32_i64(i_34870);
                        float y_34872 = ((__global
                                          float *) defunc_4_map_res_mem_44332)[gtid_34572 *
                                                                               N_30123 +
                                                                               i_34871];
                        float defunc_0_f_res_f_res_f_res_34873 = x_34868 -
                              y_34872;
                        
                        defunc_0_f_res_f_res_34865 =
                            defunc_0_f_res_f_res_f_res_34873;
                    }
                    defunc_0_f_res_34863 = defunc_0_f_res_f_res_34865;
                }
                
                float defunc_1_op_res_34878 = inpacc_34851 +
                      defunc_0_f_res_34863;
                float x_34898 = ((__global float *) mem_44435)[i_43382];
                float defunc_0_f_res_34901 = defunc_1_op_res_34878 / y_34844;
                bool cond_34902 = slt32(index_primexp_43402, y_34841);
                bool isnan_res_34903;
                
                isnan_res_34903 = futrts_isnan32(defunc_0_f_res_34901);
                
                bool cond_t_res_34904 = !isnan_res_34903;
                bool x_34905 = cond_34902 && cond_t_res_34904;
                float abs_res_34906 = (float) fabs(defunc_0_f_res_34901);
                bool defunc_2_f_res_t_res_34907 = x_34898 < abs_res_34906;
                bool x_34908 = x_34905 && defunc_2_f_res_t_res_34907;
                float defunc_1_f_res_34909;
                
                if (cond_34902) {
                    defunc_1_f_res_34909 = defunc_0_f_res_34901;
                } else {
                    defunc_1_f_res_34909 = 0.0F;
                }
                
                int32_t x_34887 = index_primexp_43402;
                bool x_34891 = x_34908 && x_34908;
                int32_t defunc_1_op_res_f_res_34895;
                
                if (x_34908) {
                    defunc_1_op_res_f_res_34895 = x_34887;
                } else {
                    defunc_1_op_res_f_res_34895 = -1;
                }
                
                bool defunc_1_op_res_34910;
                int32_t defunc_1_op_res_34911;
                
                if (inpacc_34852) {
                    defunc_1_op_res_34910 = inpacc_34852;
                    defunc_1_op_res_34911 = inpacc_34853;
                } else {
                    bool x_34912 = x_34891 && x_34891;
                    bool x_34913 = !x_34891;
                    bool y_34914 = inpacc_34852 && x_34913;
                    bool defunc_1_op_res_f_res_34915 = x_34912 || y_34914;
                    int32_t defunc_1_op_res_f_res_34916;
                    
                    if (x_34891) {
                        defunc_1_op_res_f_res_34916 =
                            defunc_1_op_res_f_res_34895;
                    } else {
                        defunc_1_op_res_f_res_34916 = inpacc_34853;
                    }
                    defunc_1_op_res_34910 = defunc_1_op_res_f_res_34915;
                    defunc_1_op_res_34911 = defunc_1_op_res_f_res_34916;
                }
                
                float defunc_1_op_res_34917 = inpacc_34854 +
                      defunc_1_f_res_34909;
                
                ((__global float *) mem_44441)[phys_tid_34573 + i_43382 *
                                               (num_groups_34827 *
                                                segmap_group_sizze_34826)] =
                    defunc_0_f_res_34901;
                
                float inpacc_tmp_45948 = defunc_1_op_res_34878;
                bool inpacc_tmp_45949 = defunc_1_op_res_34910;
                int32_t inpacc_tmp_45950 = defunc_1_op_res_34911;
                float inpacc_tmp_45951 = defunc_1_op_res_34917;
                
                inpacc_34851 = inpacc_tmp_45948;
                inpacc_34852 = inpacc_tmp_45949;
                inpacc_34853 = inpacc_tmp_45950;
                inpacc_34854 = inpacc_tmp_45951;
            }
            inpacc_34845 = inpacc_34851;
            defunc_0_f_res_34846 = inpacc_34852;
            defunc_0_f_res_34847 = inpacc_34853;
            defunc_0_f_res_34848 = inpacc_34854;
            
            bool cond_34918 = y_34841 == 0;
            float defunc_0_f_res_34919;
            
            if (cond_34918) {
                defunc_0_f_res_34919 = 0.0F;
            } else {
                float i32_res_34920 = sitofp_i32_f32(y_34841);
                float defunc_0_f_res_f_res_34921 = defunc_0_f_res_34848 /
                      i32_res_34920;
                
                defunc_0_f_res_34919 = defunc_0_f_res_f_res_34921;
            }
            for (int64_t i_43457 = 0; i_43457 < iota32_arg_30510; i_43457++) {
                int32_t index_primexp_43522 = sext_i64_i32(i_43457);
                bool cond_34924 = slt32(index_primexp_43522, y_34841);
                bool cond_34925;
                
                if (cond_34924) {
                    int32_t i_34926 = add32(x_34835, index_primexp_43522);
                    int64_t i_34927 = sext_i32_i64(i_34926);
                    bool x_34928 = sle64(0, i_34927);
                    bool y_34929 = slt64(i_34927, N_30123);
                    bool bounds_check_34930 = x_34928 && y_34929;
                    bool index_certs_34931;
                    
                    if (!bounds_check_34930) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          17) == -1) {
                                global_failure_args[0] = i_34927;
                                global_failure_args[1] = N_30123;
                                ;
                            }
                            local_failure = true;
                            goto error_0;
                        }
                    }
                    
                    float isnan_arg_34932 = ((__global
                                              float *) defunc_4_map_res_mem_44332)[gtid_34572 *
                                                                                   N_30123 +
                                                                                   i_34927];
                    bool isnan_res_34933;
                    
                    isnan_res_34933 = futrts_isnan32(isnan_arg_34932);
                    
                    bool cond_t_res_34934 = !isnan_res_34933;
                    
                    cond_34925 = cond_t_res_34934;
                } else {
                    cond_34925 = 0;
                }
                
                float defunc_0_f_res_34935;
                
                if (cond_34925) {
                    int32_t i_34936 = add32(x_34835, index_primexp_43522);
                    int64_t i_34937 = sext_i32_i64(i_34936);
                    bool x_34938 = sle64(0, i_34937);
                    bool y_34939 = slt64(i_34937, N_30123);
                    bool bounds_check_34940 = x_34938 && y_34939;
                    bool index_certs_34941;
                    
                    if (!bounds_check_34940) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          18) == -1) {
                                global_failure_args[0] = i_34937;
                                global_failure_args[1] = N_30123;
                                ;
                            }
                            local_failure = true;
                            goto error_0;
                        }
                    }
                    
                    float defunc_0_f_res_t_res_34942 = ((__global
                                                         float *) defunc_4_map_res_mem_44332)[gtid_34572 *
                                                                                              N_30123 +
                                                                                              i_34937];
                    
                    defunc_0_f_res_34935 = defunc_0_f_res_t_res_34942;
                } else {
                    defunc_0_f_res_34935 = INFINITY;
                }
                ((__global float *) mem_44455)[phys_tid_34573 + i_43457 *
                                               (num_groups_34827 *
                                                segmap_group_sizze_34826)] =
                    defunc_0_f_res_34935;
            }
            for (int64_t i_45954 = 0; i_45954 < iota32_arg_30510; i_45954++) {
                ((__global float *) double_buffer_mem_44846)[phys_tid_34573 +
                                                             i_45954 *
                                                             (num_groups_34827 *
                                                              segmap_group_sizze_34826)] =
                    ((__global float *) mem_44455)[phys_tid_34573 + i_45954 *
                                                   (num_groups_34827 *
                                                    segmap_group_sizze_34826)];
            }
            for (int32_t i_34944 = 0; i_34944 < iters_30541; i_34944++) {
                int32_t defunc_2_radix_sort_step_arg_34946 = mul32(2, i_34944);
                int32_t defunc_0_get_bit_arg_34947 = add32(1,
                                                           defunc_2_radix_sort_step_arg_34946);
                bool cond_f_res_34948 = defunc_0_get_bit_arg_34947 == 31;
                bool cond_f_res_34949 = defunc_2_radix_sort_step_arg_34946 ==
                     31;
                int64_t discard_43479;
                int64_t discard_43480;
                int64_t discard_43481;
                int64_t discard_43482;
                int64_t scanacc_43464;
                int64_t scanacc_43465;
                int64_t scanacc_43466;
                int64_t scanacc_43467;
                
                scanacc_43464 = 0;
                scanacc_43465 = 0;
                scanacc_43466 = 0;
                scanacc_43467 = 0;
                for (int64_t i_43473 = 0; i_43473 < iota32_arg_30510;
                     i_43473++) {
                    float x_34967 = ((__global
                                      float *) double_buffer_mem_44846)[phys_tid_34573 +
                                                                        i_43473 *
                                                                        (num_groups_34827 *
                                                                         segmap_group_sizze_34826)];
                    int32_t i32_arg_34968;
                    
                    i32_arg_34968 = futrts_to_bits32(x_34967);
                    
                    int32_t unsign_arg_34969 = ashr32(i32_arg_34968,
                                                      defunc_0_get_bit_arg_34947);
                    int32_t unsign_arg_34970 = 1 & unsign_arg_34969;
                    int32_t unsign_arg_34971 = ashr32(i32_arg_34968, 31);
                    int32_t unsign_arg_34972 = 1 & unsign_arg_34971;
                    bool cond_34973 = unsign_arg_34972 == 1;
                    bool x_34974 = !cond_34973;
                    bool y_34975 = cond_f_res_34948 && x_34974;
                    bool cond_34976 = cond_34973 || y_34975;
                    int32_t defunc_1_get_bit_res_34977;
                    
                    if (cond_34976) {
                        int32_t defunc_1_get_bit_res_t_res_34978 = 1 ^
                                unsign_arg_34970;
                        
                        defunc_1_get_bit_res_34977 =
                            defunc_1_get_bit_res_t_res_34978;
                    } else {
                        defunc_1_get_bit_res_34977 = unsign_arg_34970;
                    }
                    
                    int32_t x_34979 = mul32(2, defunc_1_get_bit_res_34977);
                    int32_t unsign_arg_34980 = ashr32(i32_arg_34968,
                                                      defunc_2_radix_sort_step_arg_34946);
                    int32_t unsign_arg_34981 = 1 & unsign_arg_34980;
                    bool y_34982 = cond_f_res_34949 && x_34974;
                    bool cond_34983 = cond_34973 || y_34982;
                    int32_t defunc_1_get_bit_res_34984;
                    
                    if (cond_34983) {
                        int32_t defunc_1_get_bit_res_t_res_34985 = 1 ^
                                unsign_arg_34981;
                        
                        defunc_1_get_bit_res_34984 =
                            defunc_1_get_bit_res_t_res_34985;
                    } else {
                        defunc_1_get_bit_res_34984 = unsign_arg_34981;
                    }
                    
                    int32_t defunc_0_f_res_34986 = add32(x_34979,
                                                         defunc_1_get_bit_res_34984);
                    bool cond_34987 = defunc_0_f_res_34986 == 0;
                    int64_t defunc_0_f_res_34988 = btoi_bool_i64(cond_34987);
                    int64_t defunc_0_f_res_34989;
                    int64_t defunc_0_f_res_34990;
                    int64_t defunc_0_f_res_34991;
                    
                    if (cond_34987) {
                        defunc_0_f_res_34989 = 0;
                        defunc_0_f_res_34990 = 0;
                        defunc_0_f_res_34991 = 0;
                    } else {
                        bool cond_34992 = defunc_0_f_res_34986 == 1;
                        int64_t defunc_0_f_res_f_res_34993 =
                                btoi_bool_i64(cond_34992);
                        int64_t defunc_0_f_res_f_res_34994;
                        int64_t defunc_0_f_res_f_res_34995;
                        
                        if (cond_34992) {
                            defunc_0_f_res_f_res_34994 = 0;
                            defunc_0_f_res_f_res_34995 = 0;
                        } else {
                            bool cond_34996 = defunc_0_f_res_34986 == 2;
                            int64_t defunc_0_f_res_f_res_f_res_34997 =
                                    btoi_bool_i64(cond_34996);
                            bool cond_neg_34998 = !cond_34996;
                            int64_t defunc_0_f_res_f_res_f_res_34999 =
                                    btoi_bool_i64(cond_neg_34998);
                            
                            defunc_0_f_res_f_res_34994 =
                                defunc_0_f_res_f_res_f_res_34997;
                            defunc_0_f_res_f_res_34995 =
                                defunc_0_f_res_f_res_f_res_34999;
                        }
                        defunc_0_f_res_34989 = defunc_0_f_res_f_res_34993;
                        defunc_0_f_res_34990 = defunc_0_f_res_f_res_34994;
                        defunc_0_f_res_34991 = defunc_0_f_res_f_res_34995;
                    }
                    
                    int64_t defunc_1_op_res_34963 = add64(defunc_0_f_res_34988,
                                                          scanacc_43464);
                    int64_t defunc_1_op_res_34964 = add64(defunc_0_f_res_34989,
                                                          scanacc_43465);
                    int64_t defunc_1_op_res_34965 = add64(defunc_0_f_res_34990,
                                                          scanacc_43466);
                    int64_t defunc_1_op_res_34966 = add64(defunc_0_f_res_34991,
                                                          scanacc_43467);
                    
                    ((__global int64_t *) mem_44474)[phys_tid_34573 + i_43473 *
                                                     (num_groups_34827 *
                                                      segmap_group_sizze_34826)] =
                        defunc_1_op_res_34963;
                    ((__global int64_t *) mem_44476)[phys_tid_34573 + i_43473 *
                                                     (num_groups_34827 *
                                                      segmap_group_sizze_34826)] =
                        defunc_1_op_res_34964;
                    ((__global int64_t *) mem_44478)[phys_tid_34573 + i_43473 *
                                                     (num_groups_34827 *
                                                      segmap_group_sizze_34826)] =
                        defunc_1_op_res_34965;
                    ((__global int64_t *) mem_44480)[phys_tid_34573 + i_43473 *
                                                     (num_groups_34827 *
                                                      segmap_group_sizze_34826)] =
                        defunc_1_op_res_34966;
                    ((__global int32_t *) mem_44482)[phys_tid_34573 + i_43473 *
                                                     (num_groups_34827 *
                                                      segmap_group_sizze_34826)] =
                        defunc_0_f_res_34986;
                    
                    int64_t scanacc_tmp_45956 = defunc_1_op_res_34963;
                    int64_t scanacc_tmp_45957 = defunc_1_op_res_34964;
                    int64_t scanacc_tmp_45958 = defunc_1_op_res_34965;
                    int64_t scanacc_tmp_45959 = defunc_1_op_res_34966;
                    
                    scanacc_43464 = scanacc_tmp_45956;
                    scanacc_43465 = scanacc_tmp_45957;
                    scanacc_43466 = scanacc_tmp_45958;
                    scanacc_43467 = scanacc_tmp_45959;
                }
                discard_43479 = scanacc_43464;
                discard_43480 = scanacc_43465;
                discard_43481 = scanacc_43466;
                discard_43482 = scanacc_43467;
                
                int64_t last_res_35000 = ((__global
                                           int64_t *) mem_44474)[phys_tid_34573 +
                                                                 i_30543 *
                                                                 (num_groups_34827 *
                                                                  segmap_group_sizze_34826)];
                int64_t last_res_35001 = ((__global
                                           int64_t *) mem_44476)[phys_tid_34573 +
                                                                 i_30543 *
                                                                 (num_groups_34827 *
                                                                  segmap_group_sizze_34826)];
                int64_t last_res_35002 = ((__global
                                           int64_t *) mem_44478)[phys_tid_34573 +
                                                                 i_30543 *
                                                                 (num_groups_34827 *
                                                                  segmap_group_sizze_34826)];
                
                for (int64_t i_45965 = 0; i_45965 < iota32_arg_30510;
                     i_45965++) {
                    ((__global float *) mem_44544)[phys_tid_34573 + i_45965 *
                                                   (num_groups_34827 *
                                                    segmap_group_sizze_34826)] =
                        ((__global
                          float *) double_buffer_mem_44846)[phys_tid_34573 +
                                                            i_45965 *
                                                            (num_groups_34827 *
                                                             segmap_group_sizze_34826)];
                }
                for (int64_t write_iter_43483 = 0; write_iter_43483 <
                     iota32_arg_30510; write_iter_43483++) {
                    int32_t write_iv_43485 = ((__global
                                               int32_t *) mem_44482)[phys_tid_34573 +
                                                                     write_iter_43483 *
                                                                     (num_groups_34827 *
                                                                      segmap_group_sizze_34826)];
                    bool match_lit_35011 = 0 == write_iv_43485;
                    int64_t defunc_1_f_res_35012;
                    
                    if (match_lit_35011) {
                        int64_t write_iv_43486 = ((__global
                                                   int64_t *) mem_44474)[phys_tid_34573 +
                                                                         write_iter_43483 *
                                                                         (num_groups_34827 *
                                                                          segmap_group_sizze_34826)];
                        int64_t case_res_35013 = sub64(write_iv_43486, 1);
                        
                        defunc_1_f_res_35012 = case_res_35013;
                    } else {
                        int64_t write_iv_43487 = ((__global
                                                   int64_t *) mem_44476)[phys_tid_34573 +
                                                                         write_iter_43483 *
                                                                         (num_groups_34827 *
                                                                          segmap_group_sizze_34826)];
                        int64_t write_iv_43488 = ((__global
                                                   int64_t *) mem_44478)[phys_tid_34573 +
                                                                         write_iter_43483 *
                                                                         (num_groups_34827 *
                                                                          segmap_group_sizze_34826)];
                        int64_t write_iv_43489 = ((__global
                                                   int64_t *) mem_44480)[phys_tid_34573 +
                                                                         write_iter_43483 *
                                                                         (num_groups_34827 *
                                                                          segmap_group_sizze_34826)];
                        bool match_lit_35014 = 1 == write_iv_43485;
                        int64_t x_35015;
                        
                        if (match_lit_35014) {
                            int64_t x_35016 = add64(last_res_35000,
                                                    write_iv_43487);
                            int64_t case_res_35017 = sub64(x_35016, 1);
                            
                            x_35015 = case_res_35017;
                        } else {
                            bool match_lit_35018 = 2 == write_iv_43485;
                            int64_t x_35019;
                            
                            if (match_lit_35018) {
                                int64_t x_35020 = add64(last_res_35000,
                                                        last_res_35001);
                                int64_t x_35021 = add64(x_35020,
                                                        write_iv_43488);
                                int64_t case_res_35022 = sub64(x_35021, 1);
                                
                                x_35019 = case_res_35022;
                            } else {
                                int64_t x_35023 = add64(last_res_35000,
                                                        last_res_35001);
                                int64_t x_35024 = add64(last_res_35002,
                                                        x_35023);
                                int64_t x_35025 = add64(x_35024,
                                                        write_iv_43489);
                                int64_t defunc_1_f_res_res_35026 =
                                        sub64(x_35025, 1);
                                
                                x_35019 = defunc_1_f_res_res_35026;
                            }
                            x_35015 = x_35019;
                        }
                        defunc_1_f_res_35012 = x_35015;
                    }
                    
                    bool less_than_zzero_43491 = slt64(defunc_1_f_res_35012, 0);
                    bool greater_than_sizze_43492 = sle64(iota32_arg_30510,
                                                          defunc_1_f_res_35012);
                    bool outside_bounds_dim_43493 = less_than_zzero_43491 ||
                         greater_than_sizze_43492;
                    
                    if (!outside_bounds_dim_43493) {
                        for (int64_t i_45967 = 0; i_45967 < 1; i_45967++) {
                            ((__global float *) mem_44544)[phys_tid_34573 +
                                                           (defunc_1_f_res_35012 +
                                                            i_45967) *
                                                           (num_groups_34827 *
                                                            segmap_group_sizze_34826)] =
                                ((__global
                                  float *) double_buffer_mem_44846)[phys_tid_34573 +
                                                                    num_groups_34827 *
                                                                    segmap_group_sizze_34826 *
                                                                    write_iter_43483 +
                                                                    i_45967 *
                                                                    (num_groups_34827 *
                                                                     segmap_group_sizze_34826)];
                        }
                    }
                }
                for (int64_t i_45968 = 0; i_45968 < iota32_arg_30510;
                     i_45968++) {
                    ((__global
                      float *) double_buffer_mem_44846)[phys_tid_34573 +
                                                        i_45968 *
                                                        (num_groups_34827 *
                                                         segmap_group_sizze_34826)] =
                        ((__global float *) mem_44544)[phys_tid_34573 +
                                                       i_45968 *
                                                       (num_groups_34827 *
                                                        segmap_group_sizze_34826)];
                }
            }
            
            int32_t i_35027 = sdiv32(y_34841, 2);
            int32_t j_35028 = sub32(i_35027, 1);
            bool cond_35029 = x_34834 == x_34835;
            float defunc_0_f_res_35030;
            
            if (cond_35029) {
                defunc_0_f_res_35030 = 0.0F;
            } else {
                int32_t x_35031 = smod32(y_34841, 2);
                bool cond_35032 = x_35031 == 0;
                float defunc_0_f_res_f_res_35033;
                
                if (cond_35032) {
                    int64_t j_35034 = sext_i32_i64(j_35028);
                    bool x_35035 = sle64(0, j_35034);
                    bool y_35036 = slt64(j_35034, iota32_arg_30510);
                    bool bounds_check_35037 = x_35035 && y_35036;
                    bool index_certs_35038;
                    
                    if (!bounds_check_35037) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          19) == -1) {
                                global_failure_args[0] = j_35034;
                                global_failure_args[1] = iota32_arg_30510;
                                ;
                            }
                            local_failure = true;
                            goto error_0;
                        }
                    }
                    
                    float x_35039 = ((__global
                                      float *) double_buffer_mem_44846)[phys_tid_34573 +
                                                                        j_35034 *
                                                                        (num_groups_34827 *
                                                                         segmap_group_sizze_34826)];
                    int64_t i_35040 = sext_i32_i64(i_35027);
                    bool x_35041 = sle64(0, i_35040);
                    bool y_35042 = slt64(i_35040, iota32_arg_30510);
                    bool bounds_check_35043 = x_35041 && y_35042;
                    bool index_certs_35044;
                    
                    if (!bounds_check_35043) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          20) == -1) {
                                global_failure_args[0] = i_35040;
                                global_failure_args[1] = iota32_arg_30510;
                                ;
                            }
                            local_failure = true;
                            goto error_0;
                        }
                    }
                    
                    float y_35045 = ((__global
                                      float *) double_buffer_mem_44846)[phys_tid_34573 +
                                                                        i_35040 *
                                                                        (num_groups_34827 *
                                                                         segmap_group_sizze_34826)];
                    float x_35046 = x_35039 + y_35045;
                    float defunc_0_f_res_f_res_t_res_35047 = x_35046 / 2.0F;
                    
                    defunc_0_f_res_f_res_35033 =
                        defunc_0_f_res_f_res_t_res_35047;
                } else {
                    int64_t i_35048 = sext_i32_i64(i_35027);
                    bool x_35049 = sle64(0, i_35048);
                    bool y_35050 = slt64(i_35048, iota32_arg_30510);
                    bool bounds_check_35051 = x_35049 && y_35050;
                    bool index_certs_35052;
                    
                    if (!bounds_check_35051) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          21) == -1) {
                                global_failure_args[0] = i_35048;
                                global_failure_args[1] = iota32_arg_30510;
                                ;
                            }
                            local_failure = true;
                            goto error_0;
                        }
                    }
                    
                    float defunc_0_f_res_f_res_f_res_35053 = ((__global
                                                               float *) double_buffer_mem_44846)[phys_tid_34573 +
                                                                                                 i_35048 *
                                                                                                 (num_groups_34827 *
                                                                                                  segmap_group_sizze_34826)];
                    
                    defunc_0_f_res_f_res_35033 =
                        defunc_0_f_res_f_res_f_res_35053;
                }
                defunc_0_f_res_35030 = defunc_0_f_res_f_res_35033;
            }
            
            bool cond_35054 = !defunc_0_f_res_34846;
            int32_t fst_breakzq_35055;
            
            if (cond_35054) {
                fst_breakzq_35055 = -1;
            } else {
                bool cond_35056 = slt32(defunc_0_f_res_34847, y_34841);
                int32_t adjustValInds_res_35057;
                
                if (cond_35056) {
                    int32_t i_35058 = add32(x_34835, defunc_0_f_res_34847);
                    int64_t i_35059 = sext_i32_i64(i_35058);
                    int32_t x_35060 = ((__global
                                        int32_t *) defunc_4_map_res_mem_44333)[gtid_34572 *
                                                                               N_30123 +
                                                                               i_35059];
                    int32_t adjustValInds_res_t_res_35061 = sub32(x_35060,
                                                                  n_30128);
                    
                    adjustValInds_res_35057 = adjustValInds_res_t_res_35061;
                } else {
                    adjustValInds_res_35057 = -1;
                }
                fst_breakzq_35055 = adjustValInds_res_35057;
            }
            
            bool cond_35062 = sle32(x_34835, 5);
            bool cond_f_res_35063 = sle32(y_34841, 5);
            bool x_35064 = !cond_35062;
            bool y_35065 = cond_f_res_35063 && x_35064;
            bool cond_35066 = cond_35062 || y_35065;
            int32_t fst_breakzq_35067;
            
            if (cond_35066) {
                fst_breakzq_35067 = -2;
            } else {
                fst_breakzq_35067 = fst_breakzq_35055;
            }
            for (int64_t i_45969 = 0; i_45969 < iota32_arg_30510; i_45969++) {
                ((__global float *) mem_44563)[phys_tid_34573 + i_45969 *
                                               (num_groups_34827 *
                                                segmap_group_sizze_34826)] =
                    NAN;
            }
            for (int64_t write_iter_43497 = 0; write_iter_43497 <
                 iota32_arg_30510; write_iter_43497++) {
                int32_t index_primexp_43525 = sext_i64_i32(write_iter_43497);
                bool cond_35072 = slt32(index_primexp_43525, y_34841);
                int32_t defunc_0_f_res_35073;
                
                if (cond_35072) {
                    int32_t i_35074 = add32(x_34835, index_primexp_43525);
                    int64_t i_35075 = sext_i32_i64(i_35074);
                    int32_t x_35076 = ((__global
                                        int32_t *) defunc_4_map_res_mem_44333)[gtid_34572 *
                                                                               N_30123 +
                                                                               i_35075];
                    int32_t defunc_0_f_res_t_res_35077 = sub32(x_35076,
                                                               n_30128);
                    
                    defunc_0_f_res_35073 = defunc_0_f_res_t_res_35077;
                } else {
                    defunc_0_f_res_35073 = -1;
                }
                
                int64_t defunc_0_f_res_35078 =
                        sext_i32_i64(defunc_0_f_res_35073);
                bool less_than_zzero_43501 = slt64(defunc_0_f_res_35078, 0);
                bool greater_than_sizze_43502 = sle64(iota32_arg_30510,
                                                      defunc_0_f_res_35078);
                bool outside_bounds_dim_43503 = less_than_zzero_43501 ||
                     greater_than_sizze_43502;
                
                if (!outside_bounds_dim_43503) {
                    for (int64_t i_45971 = 0; i_45971 < 1; i_45971++) {
                        ((__global float *) mem_44563)[phys_tid_34573 +
                                                       (defunc_0_f_res_35078 +
                                                        i_45971) *
                                                       (num_groups_34827 *
                                                        segmap_group_sizze_34826)] =
                            ((__global float *) mem_44441)[phys_tid_34573 +
                                                           num_groups_34827 *
                                                           segmap_group_sizze_34826 *
                                                           write_iter_43497 +
                                                           i_45971 *
                                                           (num_groups_34827 *
                                                            segmap_group_sizze_34826)];
                    }
                }
            }
            for (int64_t i_45972 = 0; i_45972 < iota32_arg_30510; i_45972++) {
                ((__global float *) mem_44578)[i_45972 * m_30124 + gtid_34572] =
                    ((__global float *) mem_44563)[phys_tid_34573 + i_45972 *
                                                   (num_groups_34827 *
                                                    segmap_group_sizze_34826)];
            }
            for (int64_t i_45973 = 0; i_45973 < iota32_arg_30510; i_45973++) {
                ((__global float *) mem_44581)[i_45973 * m_30124 + gtid_34572] =
                    ((__global float *) mem_44441)[phys_tid_34573 + i_45973 *
                                                   (num_groups_34827 *
                                                    segmap_group_sizze_34826)];
            }
            ((__global int32_t *) mem_44583)[gtid_34572] = fst_breakzq_35067;
            ((__global float *) mem_44585)[gtid_34572] = defunc_0_f_res_34919;
            ((__global float *) mem_44587)[gtid_34572] = defunc_0_f_res_35030;
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34826
}
__kernel void mainDetailedzisegmap_35338(__global int *global_failure,
                                         int64_t N_30123, int64_t m_30124,
                                         int32_t n_30128,
                                         int64_t iota32_arg_30510, __global
                                         unsigned char *defunc_4_map_res_mem_44333,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_44396,
                                         __global unsigned char *mem_44438,
                                         __global unsigned char *mem_44645,
                                         __global unsigned char *mem_44659)
{
    #define segmap_group_sizze_36630 (mainDetailedzisegmap_group_sizze_35341)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46337;
    int32_t local_tid_46338;
    int64_t group_sizze_46341;
    int32_t wave_sizze_46340;
    int32_t group_tid_46339;
    
    global_tid_46337 = get_global_id(0);
    local_tid_46338 = get_local_id(0);
    group_sizze_46341 = get_local_size(0);
    wave_sizze_46340 = LOCKSTEP_WIDTH;
    group_tid_46339 = get_group_id(0);
    
    int32_t phys_tid_35338;
    
    phys_tid_35338 = global_tid_46337;
    
    int64_t gtid_35336;
    
    gtid_35336 = squot64(sext_i32_i64(group_tid_46339) *
                         segmap_group_sizze_36630 +
                         sext_i32_i64(local_tid_46338), iota32_arg_30510);
    
    int64_t gtid_35337;
    
    gtid_35337 = sext_i32_i64(group_tid_46339) * segmap_group_sizze_36630 +
        sext_i32_i64(local_tid_46338) - squot64(sext_i32_i64(group_tid_46339) *
                                                segmap_group_sizze_36630 +
                                                sext_i32_i64(local_tid_46338),
                                                iota32_arg_30510) *
        iota32_arg_30510;
    if (slt64(gtid_35336, m_30124) && slt64(gtid_35337, iota32_arg_30510)) {
        int32_t y_36635 = ((__global int32_t *) mem_44645)[gtid_35336];
        int32_t index_primexp_41554 = sext_i64_i32(gtid_35337);
        float write_value_36639 = ((__global float *) mem_44659)[gtid_35336 *
                                                                 iota32_arg_30510 +
                                                                 gtid_35337];
        bool cond_36640 = slt32(index_primexp_41554, y_36635);
        int32_t defunc_0_f_res_36641;
        
        if (cond_36640) {
            int32_t x_36633 = ((__global
                                int32_t *) defunc_3_map_res_mem_44396)[gtid_35336];
            int32_t i_36642 = add32(x_36633, index_primexp_41554);
            int64_t i_36643 = sext_i32_i64(i_36642);
            int32_t x_36644 = ((__global
                                int32_t *) defunc_4_map_res_mem_44333)[gtid_35336 *
                                                                       N_30123 +
                                                                       i_36643];
            int32_t defunc_0_f_res_t_res_36645 = sub32(x_36644, n_30128);
            
            defunc_0_f_res_36641 = defunc_0_f_res_t_res_36645;
        } else {
            defunc_0_f_res_36641 = -1;
        }
        
        int64_t defunc_0_f_res_36646 = sext_i32_i64(defunc_0_f_res_36641);
        
        if ((sle64(0, gtid_35336) && slt64(gtid_35336, m_30124)) && (sle64(0,
                                                                           defunc_0_f_res_36646) &&
                                                                     slt64(defunc_0_f_res_36646,
                                                                           iota32_arg_30510))) {
            ((__global float *) mem_44438)[gtid_35336 * iota32_arg_30510 +
                                           defunc_0_f_res_36646] =
                write_value_36639;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36630
}
__kernel void mainDetailedzisegmap_35391(__global int *global_failure,
                                         int failure_is_an_option, __global
                                         int64_t *global_failure_args,
                                         int64_t N_30123, int64_t m_30124,
                                         int32_t n_30128,
                                         int64_t iota32_arg_30510, __global
                                         unsigned char *defunc_4_map_res_mem_44331,
                                         __global
                                         unsigned char *defunc_4_map_res_mem_44333,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_44396,
                                         __global unsigned char *mem_44645,
                                         __global unsigned char *mem_44662,
                                         __global unsigned char *mem_44664,
                                         __global
                                         unsigned char *defunc_2_radix_sort_res_r_mem_44733,
                                         __global unsigned char *mem_44736,
                                         __global unsigned char *mem_44738)
{
    #define segmap_group_sizze_36562 (mainDetailedzisegmap_group_sizze_35393)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46332;
    int32_t local_tid_46333;
    int64_t group_sizze_46336;
    int32_t wave_sizze_46335;
    int32_t group_tid_46334;
    
    global_tid_46332 = get_global_id(0);
    local_tid_46333 = get_local_id(0);
    group_sizze_46336 = get_local_size(0);
    wave_sizze_46335 = LOCKSTEP_WIDTH;
    group_tid_46334 = get_group_id(0);
    
    int32_t phys_tid_35391;
    
    phys_tid_35391 = global_tid_46332;
    
    int64_t gtid_35390;
    
    gtid_35390 = sext_i32_i64(group_tid_46334) * segmap_group_sizze_36562 +
        sext_i32_i64(local_tid_46333);
    if (slt64(gtid_35390, m_30124)) {
        int32_t x_36566 = ((__global
                            int32_t *) defunc_4_map_res_mem_44331)[gtid_35390];
        int32_t x_36567 = ((__global
                            int32_t *) defunc_3_map_res_mem_44396)[gtid_35390];
        int32_t y_36569 = ((__global int32_t *) mem_44645)[gtid_35390];
        bool defunc_0_f_res_36570 = ((__global bool *) mem_44662)[gtid_35390];
        int32_t i_36573 = sdiv32(y_36569, 2);
        int32_t j_36574 = sub32(i_36573, 1);
        bool cond_36575 = x_36566 == x_36567;
        float defunc_0_f_res_36576;
        
        if (cond_36575) {
            defunc_0_f_res_36576 = 0.0F;
        } else {
            int32_t x_36577 = smod32(y_36569, 2);
            bool cond_36578 = x_36577 == 0;
            float defunc_0_f_res_f_res_36579;
            
            if (cond_36578) {
                int64_t j_36580 = sext_i32_i64(j_36574);
                bool x_36581 = sle64(0, j_36580);
                bool y_36582 = slt64(j_36580, iota32_arg_30510);
                bool bounds_check_36583 = x_36581 && y_36582;
                bool index_certs_36584;
                
                if (!bounds_check_36583) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 29) ==
                            -1) {
                            global_failure_args[0] = j_36580;
                            global_failure_args[1] = iota32_arg_30510;
                            ;
                        }
                        return;
                    }
                }
                
                float x_36585 = ((__global
                                  float *) defunc_2_radix_sort_res_r_mem_44733)[gtid_35390 *
                                                                                iota32_arg_30510 +
                                                                                j_36580];
                int64_t i_36586 = sext_i32_i64(i_36573);
                bool x_36587 = sle64(0, i_36586);
                bool y_36588 = slt64(i_36586, iota32_arg_30510);
                bool bounds_check_36589 = x_36587 && y_36588;
                bool index_certs_36590;
                
                if (!bounds_check_36589) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 30) ==
                            -1) {
                            global_failure_args[0] = i_36586;
                            global_failure_args[1] = iota32_arg_30510;
                            ;
                        }
                        return;
                    }
                }
                
                float y_36591 = ((__global
                                  float *) defunc_2_radix_sort_res_r_mem_44733)[gtid_35390 *
                                                                                iota32_arg_30510 +
                                                                                i_36586];
                float x_36592 = x_36585 + y_36591;
                float defunc_0_f_res_f_res_t_res_36593 = x_36592 / 2.0F;
                
                defunc_0_f_res_f_res_36579 = defunc_0_f_res_f_res_t_res_36593;
            } else {
                int64_t i_36594 = sext_i32_i64(i_36573);
                bool x_36595 = sle64(0, i_36594);
                bool y_36596 = slt64(i_36594, iota32_arg_30510);
                bool bounds_check_36597 = x_36595 && y_36596;
                bool index_certs_36598;
                
                if (!bounds_check_36597) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 31) ==
                            -1) {
                            global_failure_args[0] = i_36594;
                            global_failure_args[1] = iota32_arg_30510;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_0_f_res_f_res_f_res_36599 = ((__global
                                                           float *) defunc_2_radix_sort_res_r_mem_44733)[gtid_35390 *
                                                                                                         iota32_arg_30510 +
                                                                                                         i_36594];
                
                defunc_0_f_res_f_res_36579 = defunc_0_f_res_f_res_f_res_36599;
            }
            defunc_0_f_res_36576 = defunc_0_f_res_f_res_36579;
        }
        
        bool cond_36600 = !defunc_0_f_res_36570;
        int32_t fst_breakzq_36601;
        
        if (cond_36600) {
            fst_breakzq_36601 = -1;
        } else {
            int32_t defunc_0_f_res_36571 = ((__global
                                             int32_t *) mem_44664)[gtid_35390];
            bool cond_36602 = slt32(defunc_0_f_res_36571, y_36569);
            int32_t adjustValInds_res_36603;
            
            if (cond_36602) {
                int32_t i_36604 = add32(x_36567, defunc_0_f_res_36571);
                int64_t i_36605 = sext_i32_i64(i_36604);
                int32_t x_36606 = ((__global
                                    int32_t *) defunc_4_map_res_mem_44333)[gtid_35390 *
                                                                           N_30123 +
                                                                           i_36605];
                int32_t adjustValInds_res_t_res_36607 = sub32(x_36606, n_30128);
                
                adjustValInds_res_36603 = adjustValInds_res_t_res_36607;
            } else {
                adjustValInds_res_36603 = -1;
            }
            fst_breakzq_36601 = adjustValInds_res_36603;
        }
        
        bool cond_36608 = sle32(x_36567, 5);
        bool cond_f_res_36609 = sle32(y_36569, 5);
        bool x_36610 = !cond_36608;
        bool y_36611 = cond_f_res_36609 && x_36610;
        bool cond_36612 = cond_36608 || y_36611;
        int32_t fst_breakzq_36613;
        
        if (cond_36612) {
            fst_breakzq_36613 = -2;
        } else {
            fst_breakzq_36613 = fst_breakzq_36601;
        }
        ((__global int32_t *) mem_44736)[gtid_35390] = fst_breakzq_36613;
        ((__global float *) mem_44738)[gtid_35390] = defunc_0_f_res_36576;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36562
}
__kernel void mainDetailedzisegmap_35720(__global int *global_failure,
                                         int64_t m_30124,
                                         int64_t iota32_arg_30510,
                                         int64_t i_30543, __global
                                         unsigned char *mem_param_44679,
                                         __global unsigned char *mem_44706,
                                         __global unsigned char *mem_44709,
                                         __global unsigned char *mem_44712,
                                         __global unsigned char *mem_44715,
                                         __global unsigned char *mem_44718,
                                         __global unsigned char *mem_44721)
{
    #define segmap_group_sizze_36525 (mainDetailedzisegmap_group_sizze_35723)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46326;
    int32_t local_tid_46327;
    int64_t group_sizze_46330;
    int32_t wave_sizze_46329;
    int32_t group_tid_46328;
    
    global_tid_46326 = get_global_id(0);
    local_tid_46327 = get_local_id(0);
    group_sizze_46330 = get_local_size(0);
    wave_sizze_46329 = LOCKSTEP_WIDTH;
    group_tid_46328 = get_group_id(0);
    
    int32_t phys_tid_35720;
    
    phys_tid_35720 = global_tid_46326;
    
    int64_t gtid_35718;
    
    gtid_35718 = squot64(sext_i32_i64(group_tid_46328) *
                         segmap_group_sizze_36525 +
                         sext_i32_i64(local_tid_46327), iota32_arg_30510);
    
    int64_t gtid_35719;
    
    gtid_35719 = sext_i32_i64(group_tid_46328) * segmap_group_sizze_36525 +
        sext_i32_i64(local_tid_46327) - squot64(sext_i32_i64(group_tid_46328) *
                                                segmap_group_sizze_36525 +
                                                sext_i32_i64(local_tid_46327),
                                                iota32_arg_30510) *
        iota32_arg_30510;
    if (slt64(gtid_35718, m_30124) && slt64(gtid_35719, iota32_arg_30510)) {
        int32_t x_36538 = ((__global int32_t *) mem_44718)[gtid_35718 *
                                                           iota32_arg_30510 +
                                                           gtid_35719];
        float write_value_36543 = ((__global
                                    float *) mem_param_44679)[gtid_35718 *
                                                              iota32_arg_30510 +
                                                              gtid_35719];
        bool match_lit_36544 = 0 == x_36538;
        int64_t defunc_1_f_res_36545;
        
        if (match_lit_36544) {
            int64_t x_36539 = ((__global int64_t *) mem_44706)[gtid_35718 *
                                                               iota32_arg_30510 +
                                                               gtid_35719];
            int64_t case_res_36546 = sub64(x_36539, 1);
            
            defunc_1_f_res_36545 = case_res_36546;
        } else {
            int64_t last_res_36534 = ((__global
                                       int64_t *) mem_44706)[gtid_35718 *
                                                             iota32_arg_30510 +
                                                             i_30543];
            int64_t last_res_36535 = ((__global
                                       int64_t *) mem_44709)[gtid_35718 *
                                                             iota32_arg_30510 +
                                                             i_30543];
            int64_t last_res_36536 = ((__global
                                       int64_t *) mem_44712)[gtid_35718 *
                                                             iota32_arg_30510 +
                                                             i_30543];
            int64_t x_36540 = ((__global int64_t *) mem_44709)[gtid_35718 *
                                                               iota32_arg_30510 +
                                                               gtid_35719];
            int64_t x_36541 = ((__global int64_t *) mem_44712)[gtid_35718 *
                                                               iota32_arg_30510 +
                                                               gtid_35719];
            int64_t x_36542 = ((__global int64_t *) mem_44715)[gtid_35718 *
                                                               iota32_arg_30510 +
                                                               gtid_35719];
            bool match_lit_36547 = 1 == x_36538;
            int64_t x_36548;
            
            if (match_lit_36547) {
                int64_t x_36549 = add64(last_res_36534, x_36540);
                int64_t case_res_36550 = sub64(x_36549, 1);
                
                x_36548 = case_res_36550;
            } else {
                bool match_lit_36551 = 2 == x_36538;
                int64_t x_36552;
                
                if (match_lit_36551) {
                    int64_t x_36553 = add64(last_res_36534, last_res_36535);
                    int64_t x_36554 = add64(x_36541, x_36553);
                    int64_t case_res_36555 = sub64(x_36554, 1);
                    
                    x_36552 = case_res_36555;
                } else {
                    int64_t x_36556 = add64(last_res_36534, last_res_36535);
                    int64_t x_36557 = add64(last_res_36536, x_36556);
                    int64_t x_36558 = add64(x_36542, x_36557);
                    int64_t defunc_1_f_res_res_36559 = sub64(x_36558, 1);
                    
                    x_36552 = defunc_1_f_res_res_36559;
                }
                x_36548 = x_36552;
            }
            defunc_1_f_res_36545 = x_36548;
        }
        if ((sle64(0, gtid_35718) && slt64(gtid_35718, m_30124)) && (sle64(0,
                                                                           defunc_1_f_res_36545) &&
                                                                     slt64(defunc_1_f_res_36545,
                                                                           iota32_arg_30510))) {
            ((__global float *) mem_44721)[gtid_35718 * iota32_arg_30510 +
                                           defunc_1_f_res_36545] =
                write_value_36543;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36525
}
__kernel void mainDetailedzisegmap_35970(__global int *global_failure,
                                         int failure_is_an_option, __global
                                         int64_t *global_failure_args,
                                         int64_t N_30123, int64_t m_30124,
                                         int64_t iota32_arg_30510, __global
                                         unsigned char *defunc_4_map_res_mem_44332,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_44396,
                                         __global unsigned char *mem_44645,
                                         __global unsigned char *mem_44671)
{
    #define segmap_group_sizze_36331 (mainDetailedzisegmap_group_sizze_35973)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46195;
    int32_t local_tid_46196;
    int64_t group_sizze_46199;
    int32_t wave_sizze_46198;
    int32_t group_tid_46197;
    
    global_tid_46195 = get_global_id(0);
    local_tid_46196 = get_local_id(0);
    group_sizze_46199 = get_local_size(0);
    wave_sizze_46198 = LOCKSTEP_WIDTH;
    group_tid_46197 = get_group_id(0);
    
    int32_t phys_tid_35970;
    
    phys_tid_35970 = global_tid_46195;
    
    int64_t gtid_35968;
    
    gtid_35968 = squot64(sext_i32_i64(group_tid_46197) *
                         segmap_group_sizze_36331 +
                         sext_i32_i64(local_tid_46196), iota32_arg_30510);
    
    int64_t gtid_35969;
    
    gtid_35969 = sext_i32_i64(group_tid_46197) * segmap_group_sizze_36331 +
        sext_i32_i64(local_tid_46196) - squot64(sext_i32_i64(group_tid_46197) *
                                                segmap_group_sizze_36331 +
                                                sext_i32_i64(local_tid_46196),
                                                iota32_arg_30510) *
        iota32_arg_30510;
    if (slt64(gtid_35968, m_30124) && slt64(gtid_35969, iota32_arg_30510)) {
        int32_t x_36334 = ((__global
                            int32_t *) defunc_3_map_res_mem_44396)[gtid_35968];
        int32_t y_36336 = ((__global int32_t *) mem_44645)[gtid_35968];
        int32_t index_primexp_41551 = sext_i64_i32(gtid_35969);
        bool cond_36338 = slt32(index_primexp_41551, y_36336);
        bool cond_36339;
        
        if (cond_36338) {
            int32_t i_36340 = add32(x_36334, index_primexp_41551);
            int64_t i_36341 = sext_i32_i64(i_36340);
            bool x_36342 = sle64(0, i_36341);
            bool y_36343 = slt64(i_36341, N_30123);
            bool bounds_check_36344 = x_36342 && y_36343;
            bool index_certs_36345;
            
            if (!bounds_check_36344) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 27) ==
                        -1) {
                        global_failure_args[0] = i_36341;
                        global_failure_args[1] = N_30123;
                        ;
                    }
                    return;
                }
            }
            
            float isnan_arg_36346 = ((__global
                                      float *) defunc_4_map_res_mem_44332)[gtid_35968 *
                                                                           N_30123 +
                                                                           i_36341];
            bool isnan_res_36347;
            
            isnan_res_36347 = futrts_isnan32(isnan_arg_36346);
            
            bool cond_t_res_36348 = !isnan_res_36347;
            
            cond_36339 = cond_t_res_36348;
        } else {
            cond_36339 = 0;
        }
        
        float defunc_0_f_res_36349;
        
        if (cond_36339) {
            int32_t i_36350 = add32(x_36334, index_primexp_41551);
            int64_t i_36351 = sext_i32_i64(i_36350);
            bool x_36352 = sle64(0, i_36351);
            bool y_36353 = slt64(i_36351, N_30123);
            bool bounds_check_36354 = x_36352 && y_36353;
            bool index_certs_36355;
            
            if (!bounds_check_36354) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 28) ==
                        -1) {
                        global_failure_args[0] = i_36351;
                        global_failure_args[1] = N_30123;
                        ;
                    }
                    return;
                }
            }
            
            float defunc_0_f_res_t_res_36356 = ((__global
                                                 float *) defunc_4_map_res_mem_44332)[gtid_35968 *
                                                                                      N_30123 +
                                                                                      i_36351];
            
            defunc_0_f_res_36349 = defunc_0_f_res_t_res_36356;
        } else {
            defunc_0_f_res_36349 = INFINITY;
        }
        ((__global float *) mem_44671)[gtid_35968 * iota32_arg_30510 +
                                       gtid_35969] = defunc_0_f_res_36349;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36331
}
__kernel void mainDetailedzisegmap_36029(__global int *global_failure,
                                         int64_t m_30124, __global
                                         unsigned char *mem_44645, __global
                                         unsigned char *mem_44656, __global
                                         unsigned char *mem_44667)
{
    #define segmap_group_sizze_36313 (mainDetailedzisegmap_group_sizze_36031)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46190;
    int32_t local_tid_46191;
    int64_t group_sizze_46194;
    int32_t wave_sizze_46193;
    int32_t group_tid_46192;
    
    global_tid_46190 = get_global_id(0);
    local_tid_46191 = get_local_id(0);
    group_sizze_46194 = get_local_size(0);
    wave_sizze_46193 = LOCKSTEP_WIDTH;
    group_tid_46192 = get_group_id(0);
    
    int32_t phys_tid_36029;
    
    phys_tid_36029 = global_tid_46190;
    
    int64_t gtid_36028;
    
    gtid_36028 = sext_i32_i64(group_tid_46192) * segmap_group_sizze_36313 +
        sext_i32_i64(local_tid_46191);
    if (slt64(gtid_36028, m_30124)) {
        int32_t y_36316 = ((__global int32_t *) mem_44645)[gtid_36028];
        bool cond_36318 = y_36316 == 0;
        float defunc_0_f_res_36319;
        
        if (cond_36318) {
            defunc_0_f_res_36319 = 0.0F;
        } else {
            float defunc_0_f_res_36317 = ((__global
                                           float *) mem_44656)[gtid_36028];
            float i32_res_36320 = sitofp_i32_f32(y_36316);
            float defunc_0_f_res_f_res_36321 = defunc_0_f_res_36317 /
                  i32_res_36320;
            
            defunc_0_f_res_36319 = defunc_0_f_res_f_res_36321;
        }
        ((__global float *) mem_44667)[gtid_36028] = defunc_0_f_res_36319;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36313
}
__kernel void mainDetailedzisegmap_36046(__global int *global_failure,
                                         int64_t m_30124, __global
                                         unsigned char *mem_44652, __global
                                         unsigned char *mem_44654, __global
                                         unsigned char *mem_44662, __global
                                         unsigned char *mem_44664)
{
    #define segmap_group_sizze_36290 (mainDetailedzisegmap_group_sizze_36048)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46185;
    int32_t local_tid_46186;
    int64_t group_sizze_46189;
    int32_t wave_sizze_46188;
    int32_t group_tid_46187;
    
    global_tid_46185 = get_global_id(0);
    local_tid_46186 = get_local_id(0);
    group_sizze_46189 = get_local_size(0);
    wave_sizze_46188 = LOCKSTEP_WIDTH;
    group_tid_46187 = get_group_id(0);
    
    int32_t phys_tid_36046;
    
    phys_tid_36046 = global_tid_46185;
    
    int64_t gtid_36045;
    
    gtid_36045 = sext_i32_i64(group_tid_46187) * segmap_group_sizze_36290 +
        sext_i32_i64(local_tid_46186);
    if (slt64(gtid_36045, m_30124)) {
        bool acc0_36296 = ((__global bool *) mem_44652)[gtid_36045];
        bool x_36301 = acc0_36296 && acc0_36296;
        int32_t defunc_1_op_res_f_res_36305;
        
        if (acc0_36296) {
            int32_t acc0_36297 = ((__global int32_t *) mem_44654)[gtid_36045];
            
            defunc_1_op_res_f_res_36305 = acc0_36297;
        } else {
            defunc_1_op_res_f_res_36305 = -1;
        }
        ((__global bool *) mem_44662)[gtid_36045] = x_36301;
        ((__global int32_t *) mem_44664)[gtid_36045] =
            defunc_1_op_res_f_res_36305;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36290
}
__kernel void mainDetailedzisegmap_36167(__global int *global_failure,
                                         int64_t m_30124,
                                         int64_t num_groups_36190, __global
                                         unsigned char *defunc_4_map_res_mem_44331,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_44396,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_44397,
                                         __global unsigned char *mem_44643,
                                         __global unsigned char *mem_44645)
{
    #define segmap_group_sizze_36189 (mainDetailedzisegmap_group_sizze_36169)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46023;
    int32_t local_tid_46024;
    int64_t group_sizze_46027;
    int32_t wave_sizze_46026;
    int32_t group_tid_46025;
    
    global_tid_46023 = get_global_id(0);
    local_tid_46024 = get_local_id(0);
    group_sizze_46027 = get_local_size(0);
    wave_sizze_46026 = LOCKSTEP_WIDTH;
    group_tid_46025 = get_group_id(0);
    
    int32_t phys_tid_36167;
    
    phys_tid_36167 = global_tid_46023;
    
    int32_t phys_group_id_46028;
    
    phys_group_id_46028 = get_group_id(0);
    for (int32_t i_46029 = 0; i_46029 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30124, segmap_group_sizze_36189)) -
                   phys_group_id_46028, sext_i64_i32(num_groups_36190));
         i_46029++) {
        int32_t virt_group_id_46030 = phys_group_id_46028 + i_46029 *
                sext_i64_i32(num_groups_36190);
        int64_t gtid_36166 = sext_i32_i64(virt_group_id_46030) *
                segmap_group_sizze_36189 + sext_i32_i64(local_tid_46024);
        
        if (slt64(gtid_36166, m_30124)) {
            int32_t x_36196 = ((__global
                                int32_t *) defunc_4_map_res_mem_44331)[gtid_36166];
            int32_t x_36197 = ((__global
                                int32_t *) defunc_3_map_res_mem_44396)[gtid_36166];
            float x_36198 = ((__global
                              float *) defunc_3_map_res_mem_44397)[gtid_36166];
            int32_t y_36199 = sub32(x_36196, x_36197);
            float i32_res_36200 = sitofp_i32_f32(x_36197);
            float sqrt_res_36201;
            
            sqrt_res_36201 = futrts_sqrt32(i32_res_36200);
            
            float y_36202 = x_36198 * sqrt_res_36201;
            
            ((__global float *) mem_44643)[gtid_36166] = y_36202;
            ((__global int32_t *) mem_44645)[gtid_36166] = y_36199;
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36189
}
__kernel void mainDetailedzisegmap_intragroup_32465(__global
                                                    int *global_failure,
                                                    int failure_is_an_option,
                                                    __global
                                                    int64_t *global_failure_args,
                                                    __local volatile
                                                    int64_t *mem_43724_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43714_backing_aligned_1,
                                                    __local volatile
                                                    int64_t *mem_43704_backing_aligned_2,
                                                    int32_t k2p2zq_30141,
                                                    int64_t i32_res_30143,
                                                    int64_t m_30274,
                                                    int64_t nm_30275,
                                                    int32_t i64_res_30283,
                                                    int64_t computed_group_sizze_32406,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43700,
                                                    __global
                                                    unsigned char *mem_43728)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43724_backing_2 = (__local volatile
                                                           char *) mem_43724_backing_aligned_0;
    __local volatile char *restrict mem_43714_backing_1 = (__local volatile
                                                           char *) mem_43714_backing_aligned_1;
    __local volatile char *restrict mem_43704_backing_0 = (__local volatile
                                                           char *) mem_43704_backing_aligned_2;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_45151;
    int32_t local_tid_45152;
    int64_t group_sizze_45155;
    int32_t wave_sizze_45154;
    int32_t group_tid_45153;
    
    global_tid_45151 = get_global_id(0);
    local_tid_45152 = get_local_id(0);
    group_sizze_45155 = get_local_size(0);
    wave_sizze_45154 = LOCKSTEP_WIDTH;
    group_tid_45153 = get_group_id(0);
    
    int32_t phys_tid_32465;
    
    phys_tid_32465 = group_tid_45153;
    
    int32_t ltid_pre_45156;
    
    ltid_pre_45156 = squot32(local_tid_45152, sext_i64_i32(i32_res_30143));
    
    int32_t ltid_pre_45157;
    
    ltid_pre_45157 = local_tid_45152 - squot32(local_tid_45152,
                                               sext_i64_i32(i32_res_30143)) *
        sext_i64_i32(i32_res_30143);
    
    int32_t ltid_pre_45158;
    
    ltid_pre_45158 = local_tid_45152;
    
    int64_t gtid_32404;
    
    gtid_32404 = sext_i32_i64(group_tid_45153);
    
    __local char *mem_43704;
    
    mem_43704 = (__local char *) mem_43704_backing_0;
    
    int64_t gtid_32407 = sext_i32_i64(ltid_pre_45158);
    int32_t phys_tid_32408 = local_tid_45152;
    
    if (slt64(gtid_32407, nm_30275)) {
        int64_t defunc_0_f_res_32604 = sdiv64(gtid_32407, m_30274);
        int64_t defunc_0_f_res_32605 = smod64(gtid_32407, m_30274);
        bool cond_32606 = slt64(defunc_0_f_res_32605, i32_res_30143);
        float defunc_0_f_res_32607;
        
        if (cond_32606) {
            float defunc_0_f_res_t_res_32608 = ((__global
                                                 float *) defunc_3_map_res_mem_43700)[gtid_32404 *
                                                                                      (i32_res_30143 *
                                                                                       i32_res_30143) +
                                                                                      defunc_0_f_res_32604 *
                                                                                      i32_res_30143 +
                                                                                      defunc_0_f_res_32605];
            
            defunc_0_f_res_32607 = defunc_0_f_res_t_res_32608;
        } else {
            int64_t y_32609 = add64(i32_res_30143, defunc_0_f_res_32604);
            bool cond_32610 = defunc_0_f_res_32605 == y_32609;
            float defunc_0_f_res_f_res_32611;
            
            if (cond_32610) {
                defunc_0_f_res_f_res_32611 = 1.0F;
            } else {
                defunc_0_f_res_f_res_32611 = 0.0F;
            }
            defunc_0_f_res_32607 = defunc_0_f_res_f_res_32611;
        }
        ((__local float *) mem_43704)[gtid_32407] = defunc_0_f_res_32607;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43714;
    
    mem_43714 = (__local char *) mem_43714_backing_1;
    for (int32_t i_32613 = 0; i_32613 < k2p2zq_30141; i_32613++) {
        int64_t i_32615 = sext_i32_i64(i_32613);
        bool x_32616 = sle64(0, i_32615);
        bool y_32617 = slt64(i_32615, nm_30275);
        bool bounds_check_32618 = x_32616 && y_32617;
        bool index_certs_32619;
        
        if (!bounds_check_32618) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 16) == -1) {
                    global_failure_args[0] = i_32615;
                    global_failure_args[1] = nm_30275;
                    ;
                }
                local_failure = true;
                goto error_1;
            }
        }
        
        float v1_32620 = ((__local float *) mem_43704)[i_32615];
        bool cond_32621 = v1_32620 == 0.0F;
        int64_t gtid_32418 = sext_i32_i64(ltid_pre_45158);
        int32_t phys_tid_32419 = local_tid_45152;
        
        if (slt64(gtid_32418, nm_30275)) {
            int32_t defunc_0_f_res_32624 = sext_i64_i32(gtid_32418);
            int32_t defunc_0_f_res_32625 = sdiv32(defunc_0_f_res_32624,
                                                  i64_res_30283);
            int32_t defunc_0_f_res_32626 = smod32(defunc_0_f_res_32624,
                                                  i64_res_30283);
            float defunc_0_f_res_32627;
            
            if (cond_32621) {
                int32_t x_32628 = mul32(i64_res_30283, defunc_0_f_res_32625);
                int32_t i_32629 = add32(defunc_0_f_res_32626, x_32628);
                int64_t i_32630 = sext_i32_i64(i_32629);
                float defunc_0_f_res_t_res_32631 = ((__local
                                                     float *) mem_43704)[i_32630];
                
                defunc_0_f_res_32627 = defunc_0_f_res_t_res_32631;
            } else {
                int64_t j_32632 = sext_i32_i64(defunc_0_f_res_32626);
                float x_32633 = ((__local float *) mem_43704)[j_32632];
                float x_32634 = x_32633 / v1_32620;
                int32_t y_32635 = sub32(k2p2zq_30141, 1);
                bool cond_32636 = slt32(defunc_0_f_res_32625, y_32635);
                float defunc_0_f_res_f_res_32637;
                
                if (cond_32636) {
                    int32_t x_32638 = add32(1, defunc_0_f_res_32625);
                    int32_t x_32639 = mul32(i64_res_30283, x_32638);
                    int32_t i_32640 = add32(defunc_0_f_res_32626, x_32639);
                    int64_t i_32641 = sext_i32_i64(i_32640);
                    float x_32642 = ((__local float *) mem_43704)[i_32641];
                    int32_t i_32643 = add32(i_32613, x_32639);
                    int64_t i_32644 = sext_i32_i64(i_32643);
                    float x_32645 = ((__local float *) mem_43704)[i_32644];
                    float y_32646 = x_32634 * x_32645;
                    float defunc_0_f_res_f_res_t_res_32647 = x_32642 - y_32646;
                    
                    defunc_0_f_res_f_res_32637 =
                        defunc_0_f_res_f_res_t_res_32647;
                } else {
                    defunc_0_f_res_f_res_32637 = x_32634;
                }
                defunc_0_f_res_32627 = defunc_0_f_res_f_res_32637;
            }
            ((__local float *) mem_43714)[gtid_32418] = defunc_0_f_res_32627;
        }
        
      error_1:
        barrier(CLK_LOCAL_MEM_FENCE);
        if (local_failure)
            return;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_32445 = sext_i32_i64(ltid_pre_45158);
        int32_t phys_tid_32446 = local_tid_45152;
        
        if (slt64(write_i_32445, nm_30275)) {
            float write_value_32650 = ((__local
                                        float *) mem_43714)[write_i_32445];
            
            if (sle64(0, write_i_32445) && slt64(write_i_32445, nm_30275)) {
                ((__local float *) mem_43704)[write_i_32445] =
                    write_value_32650;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    
    __local char *mem_43724;
    
    mem_43724 = (__local char *) mem_43724_backing_2;
    
    int64_t gtid_32448 = sext_i32_i64(ltid_pre_45156);
    int64_t gtid_32449 = sext_i32_i64(ltid_pre_45157);
    int32_t phys_tid_32450 = local_tid_45152;
    
    if (slt64(gtid_32448, i32_res_30143) && slt64(gtid_32449, i32_res_30143)) {
        int64_t index_primexp_41490 = m_30274 * gtid_32448;
        int64_t i_32657 = add64(i32_res_30143, gtid_32449);
        int64_t new_index_32658 = i_32657 + index_primexp_41490;
        float defunc_0_f_res_32659 = ((__local
                                       float *) mem_43704)[new_index_32658];
        
        ((__local float *) mem_43724)[gtid_32448 * i32_res_30143 + gtid_32449] =
            defunc_0_f_res_32659;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    for (int64_t i_45160 = 0; i_45160 < sdiv_up64(i32_res_30143 *
                                                  i32_res_30143 -
                                                  sext_i32_i64(local_tid_45152),
                                                  computed_group_sizze_32406);
         i_45160++) {
        ((__global float *) mem_43728)[gtid_32404 * (i32_res_30143 *
                                                     i32_res_30143) +
                                       squot64(i_45160 *
                                               computed_group_sizze_32406 +
                                               sext_i32_i64(local_tid_45152),
                                               i32_res_30143) * i32_res_30143 +
                                       (i_45160 * computed_group_sizze_32406 +
                                        sext_i32_i64(local_tid_45152) -
                                        squot64(i_45160 *
                                                computed_group_sizze_32406 +
                                                sext_i32_i64(local_tid_45152),
                                                i32_res_30143) *
                                        i32_res_30143)] = ((__local
                                                            float *) mem_43724)[squot64(i_45160 *
                                                                                        computed_group_sizze_32406 +
                                                                                        sext_i32_i64(local_tid_45152),
                                                                                        i32_res_30143) *
                                                                                i32_res_30143 +
                                                                                (i_45160 *
                                                                                 computed_group_sizze_32406 +
                                                                                 sext_i32_i64(local_tid_45152) -
                                                                                 squot64(i_45160 *
                                                                                         computed_group_sizze_32406 +
                                                                                         sext_i32_i64(local_tid_45152),
                                                                                         i32_res_30143) *
                                                                                 i32_res_30143)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_4:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_32809(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43749_backing_aligned_0,
                                                    int64_t m_30124,
                                                    int32_t k2p2zq_30141,
                                                    int64_t nm_30275,
                                                    int32_t i64_res_30283,
                                                    int32_t i_33196,
                                                    int64_t i_33198,
                                                    int64_t ctx_param_ext_43735,
                                                    int64_t ctx_param_ext_43736,
                                                    int64_t ctx_param_ext_43738,
                                                    __global
                                                    unsigned char *mem_param_43740,
                                                    __global
                                                    unsigned char *mem_43745,
                                                    __global
                                                    unsigned char *mem_43753)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43749_backing_0 = (__local volatile
                                                           char *) mem_43749_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45187;
    int32_t local_tid_45188;
    int64_t group_sizze_45191;
    int32_t wave_sizze_45190;
    int32_t group_tid_45189;
    
    global_tid_45187 = get_global_id(0);
    local_tid_45188 = get_local_id(0);
    group_sizze_45191 = get_local_size(0);
    wave_sizze_45190 = LOCKSTEP_WIDTH;
    group_tid_45189 = get_group_id(0);
    
    int32_t phys_tid_32809;
    
    phys_tid_32809 = group_tid_45189;
    
    int32_t ltid_pre_45192;
    
    ltid_pre_45192 = local_tid_45188;
    
    int64_t gtid_32777;
    
    gtid_32777 = sext_i32_i64(group_tid_45189);
    
    float v1_33215 = ((__global float *) mem_param_43740)[ctx_param_ext_43735 +
                                                          (gtid_32777 *
                                                           ctx_param_ext_43736 +
                                                           i_33198 *
                                                           ctx_param_ext_43738)];
    bool cond_33216 = v1_33215 == 0.0F;
    __local char *mem_43749;
    
    mem_43749 = (__local char *) mem_43749_backing_0;
    
    int64_t gtid_32780 = sext_i32_i64(ltid_pre_45192);
    int32_t phys_tid_32781 = local_tid_45188;
    int32_t defunc_0_f_res_33219 = sext_i64_i32(gtid_32780);
    int32_t defunc_0_f_res_33220 = sdiv32(defunc_0_f_res_33219, i64_res_30283);
    int32_t defunc_0_f_res_33221 = smod32(defunc_0_f_res_33219, i64_res_30283);
    float defunc_0_f_res_33222;
    
    if (cond_33216) {
        int32_t x_33223 = mul32(i64_res_30283, defunc_0_f_res_33220);
        int32_t i_33224 = add32(defunc_0_f_res_33221, x_33223);
        int64_t i_33225 = sext_i32_i64(i_33224);
        float defunc_0_f_res_t_res_33226 = ((__global
                                             float *) mem_param_43740)[ctx_param_ext_43735 +
                                                                       (gtid_32777 *
                                                                        ctx_param_ext_43736 +
                                                                        i_33225 *
                                                                        ctx_param_ext_43738)];
        
        defunc_0_f_res_33222 = defunc_0_f_res_t_res_33226;
    } else {
        int64_t j_33227 = sext_i32_i64(defunc_0_f_res_33221);
        float x_33228 = ((__global
                          float *) mem_param_43740)[ctx_param_ext_43735 +
                                                    (gtid_32777 *
                                                     ctx_param_ext_43736 +
                                                     j_33227 *
                                                     ctx_param_ext_43738)];
        float x_33229 = x_33228 / v1_33215;
        int32_t y_33230 = sub32(k2p2zq_30141, 1);
        bool cond_33231 = slt32(defunc_0_f_res_33220, y_33230);
        float defunc_0_f_res_f_res_33232;
        
        if (cond_33231) {
            int32_t x_33233 = add32(1, defunc_0_f_res_33220);
            int32_t x_33234 = mul32(i64_res_30283, x_33233);
            int32_t i_33235 = add32(defunc_0_f_res_33221, x_33234);
            int64_t i_33236 = sext_i32_i64(i_33235);
            float x_33237 = ((__global
                              float *) mem_param_43740)[ctx_param_ext_43735 +
                                                        (gtid_32777 *
                                                         ctx_param_ext_43736 +
                                                         i_33236 *
                                                         ctx_param_ext_43738)];
            int32_t i_33238 = add32(i_33196, x_33234);
            int64_t i_33239 = sext_i32_i64(i_33238);
            float x_33240 = ((__global
                              float *) mem_param_43740)[ctx_param_ext_43735 +
                                                        (gtid_32777 *
                                                         ctx_param_ext_43736 +
                                                         i_33239 *
                                                         ctx_param_ext_43738)];
            float y_33241 = x_33229 * x_33240;
            float defunc_0_f_res_f_res_t_res_33242 = x_33237 - y_33241;
            
            defunc_0_f_res_f_res_33232 = defunc_0_f_res_f_res_t_res_33242;
        } else {
            defunc_0_f_res_f_res_33232 = x_33229;
        }
        defunc_0_f_res_33222 = defunc_0_f_res_f_res_33232;
    }
    ((__local float *) mem_43749)[gtid_32780] = defunc_0_f_res_33222;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_32807 = sext_i32_i64(ltid_pre_45192);
    int32_t phys_tid_32808 = local_tid_45188;
    float write_value_33245 = ((__local float *) mem_43749)[write_i_32807];
    
    if (sle64(0, write_i_32807) && slt64(write_i_32807, nm_30275)) {
        ((__global float *) mem_43745)[gtid_32777 + write_i_32807 * m_30124] =
            write_value_33245;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_45188 == 0) {
        for (int64_t i_45193 = 0; i_45193 < nm_30275; i_45193++) {
            ((__global float *) mem_43753)[gtid_32777 * nm_30275 + i_45193] =
                ((__global float *) mem_43745)[gtid_32777 + i_45193 * m_30124];
        }
    }
    
  error_2:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_33783(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_44310_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_44308_backing_aligned_1,
                                                    __local volatile
                                                    int64_t *mem_44306_backing_aligned_2,
                                                    __local volatile
                                                    int64_t *mem_44304_backing_aligned_3,
                                                    int64_t N_30123,
                                                    int64_t N_30125,
                                                    int64_t i_30390, __global
                                                    unsigned char *images_mem_43532,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_44294,
                                                    __global
                                                    unsigned char *mem_44313,
                                                    __global
                                                    unsigned char *mem_44316,
                                                    __global
                                                    unsigned char *mem_44319)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44310_backing_3 = (__local volatile
                                                           char *) mem_44310_backing_aligned_0;
    __local volatile char *restrict mem_44308_backing_2 = (__local volatile
                                                           char *) mem_44308_backing_aligned_1;
    __local volatile char *restrict mem_44306_backing_1 = (__local volatile
                                                           char *) mem_44306_backing_aligned_2;
    __local volatile char *restrict mem_44304_backing_0 = (__local volatile
                                                           char *) mem_44304_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45587;
    int32_t local_tid_45588;
    int64_t group_sizze_45591;
    int32_t wave_sizze_45590;
    int32_t group_tid_45589;
    
    global_tid_45587 = get_global_id(0);
    local_tid_45588 = get_local_id(0);
    group_sizze_45591 = get_local_size(0);
    wave_sizze_45590 = LOCKSTEP_WIDTH;
    group_tid_45589 = get_group_id(0);
    
    int32_t phys_tid_33783;
    
    phys_tid_33783 = group_tid_45589;
    
    int32_t ltid_pre_45592;
    
    ltid_pre_45592 = local_tid_45588;
    
    int64_t gtid_33776;
    
    gtid_33776 = sext_i32_i64(group_tid_45589);
    
    __local char *mem_44304;
    
    mem_44304 = (__local char *) mem_44304_backing_0;
    
    __local char *mem_44306;
    
    mem_44306 = (__local char *) mem_44306_backing_1;
    
    int64_t gtid_33779 = sext_i32_i64(ltid_pre_45592);
    int32_t phys_tid_33780 = local_tid_45588;
    float x_33872 = ((__global float *) images_mem_43532)[gtid_33776 * N_30125 +
                                                          gtid_33779];
    bool isnan_res_33874;
    
    isnan_res_33874 = futrts_isnan32(x_33872);
    
    bool cond_33875 = !isnan_res_33874;
    float defunc_0_f_res_33876;
    
    if (cond_33875) {
        float x_33873 = ((__global
                          float *) defunc_3_map_res_mem_44294)[gtid_33776 *
                                                               N_30123 +
                                                               gtid_33779];
        float defunc_0_f_res_t_res_33877 = x_33872 - x_33873;
        
        defunc_0_f_res_33876 = defunc_0_f_res_t_res_33877;
    } else {
        defunc_0_f_res_33876 = NAN;
    }
    
    bool isnan_res_33878;
    
    isnan_res_33878 = futrts_isnan32(defunc_0_f_res_33876);
    
    bool defunc_0_p_res_33879 = !isnan_res_33878;
    int64_t defunc_0_f_res_33880 = btoi_bool_i64(defunc_0_p_res_33879);
    
    ((__local int64_t *) mem_44304)[gtid_33779] = defunc_0_f_res_33880;
    ((__local float *) mem_44306)[gtid_33779] = defunc_0_f_res_33876;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_45593;
    
    dims_flat_45593 = N_30123;
    
    int64_t x_33869;
    int64_t x_33870;
    int64_t x_45595;
    int64_t x_45596;
    bool ltid_in_bounds_45598;
    
    ltid_in_bounds_45598 = slt64(sext_i32_i64(local_tid_45588), N_30123);
    
    int32_t skip_threads_45599;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45598) {
            x_33870 = ((volatile __local
                        int64_t *) mem_44304)[sext_i32_i64(local_tid_45588)];
            if ((local_tid_45588 - squot32(local_tid_45588, 32) * 32) == 0) {
                x_33869 = x_33870;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45599 = 1;
        while (slt32(skip_threads_45599, 32)) {
            if (sle32(skip_threads_45599, local_tid_45588 -
                      squot32(local_tid_45588, 32) * 32) &&
                ltid_in_bounds_45598) {
                // read operands
                {
                    x_33869 = ((volatile __local
                                int64_t *) mem_44304)[sext_i32_i64(local_tid_45588) -
                                                      sext_i32_i64(skip_threads_45599)];
                }
                // perform operation
                {
                    bool inactive_45600 =
                         slt64(srem64(sext_i32_i64(local_tid_45588), N_30123),
                               sext_i32_i64(local_tid_45588) -
                               sext_i32_i64(local_tid_45588 -
                               skip_threads_45599));
                    
                    if (inactive_45600) {
                        x_33869 = x_33870;
                    }
                    if (!inactive_45600) {
                        int64_t defunc_1_op_res_33871 = add64(x_33869, x_33870);
                        
                        x_33869 = defunc_1_op_res_33871;
                    }
                }
            }
            if (sle32(wave_sizze_45590, skip_threads_45599)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45599, local_tid_45588 -
                      squot32(local_tid_45588, 32) * 32) &&
                ltid_in_bounds_45598) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_44304)[sext_i32_i64(local_tid_45588)] =
                        x_33869;
                    x_33870 = x_33869;
                }
            }
            if (sle32(wave_sizze_45590, skip_threads_45599)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45599 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45588 - squot32(local_tid_45588, 32) * 32) == 31 &&
            ltid_in_bounds_45598) {
            ((volatile __local
              int64_t *) mem_44304)[sext_i32_i64(squot32(local_tid_45588,
                                                         32))] = x_33869;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45601;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45588, 32) == 0 && ltid_in_bounds_45598) {
                x_45596 = ((volatile __local
                            int64_t *) mem_44304)[sext_i32_i64(local_tid_45588)];
                if ((local_tid_45588 - squot32(local_tid_45588, 32) * 32) ==
                    0) {
                    x_45595 = x_45596;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45601 = 1;
            while (slt32(skip_threads_45601, 32)) {
                if (sle32(skip_threads_45601, local_tid_45588 -
                          squot32(local_tid_45588, 32) * 32) &&
                    (squot32(local_tid_45588, 32) == 0 &&
                     ltid_in_bounds_45598)) {
                    // read operands
                    {
                        x_45595 = ((volatile __local
                                    int64_t *) mem_44304)[sext_i32_i64(local_tid_45588) -
                                                          sext_i32_i64(skip_threads_45601)];
                    }
                    // perform operation
                    {
                        bool inactive_45602 =
                             slt64(srem64(sext_i32_i64(local_tid_45588 * 32 +
                                          32 - 1), N_30123),
                                   sext_i32_i64(local_tid_45588 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_45588 -
                                                 skip_threads_45601) * 32 + 32 -
                                   1));
                        
                        if (inactive_45602) {
                            x_45595 = x_45596;
                        }
                        if (!inactive_45602) {
                            int64_t defunc_1_op_res_45597 = add64(x_45595,
                                                                  x_45596);
                            
                            x_45595 = defunc_1_op_res_45597;
                        }
                    }
                }
                if (sle32(wave_sizze_45590, skip_threads_45601)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45601, local_tid_45588 -
                          squot32(local_tid_45588, 32) * 32) &&
                    (squot32(local_tid_45588, 32) == 0 &&
                     ltid_in_bounds_45598)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_44304)[sext_i32_i64(local_tid_45588)] =
                            x_45595;
                        x_45596 = x_45595;
                    }
                }
                if (sle32(wave_sizze_45590, skip_threads_45601)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45601 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45588, 32) == 0 || !ltid_in_bounds_45598)) {
            // read operands
            {
                x_33870 = x_33869;
                x_33869 = ((__local
                            int64_t *) mem_44304)[sext_i32_i64(squot32(local_tid_45588,
                                                                       32)) -
                                                  1];
            }
            // perform operation
            {
                bool inactive_45603 =
                     slt64(srem64(sext_i32_i64(local_tid_45588), N_30123),
                           sext_i32_i64(local_tid_45588) -
                           sext_i32_i64(squot32(local_tid_45588, 32) * 32 - 1));
                
                if (inactive_45603) {
                    x_33869 = x_33870;
                }
                if (!inactive_45603) {
                    int64_t defunc_1_op_res_33871 = add64(x_33869, x_33870);
                    
                    x_33869 = defunc_1_op_res_33871;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_44304)[sext_i32_i64(local_tid_45588)] =
                    x_33869;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45588, 32) == 0) {
            ((__local int64_t *) mem_44304)[sext_i32_i64(local_tid_45588)] =
                x_33870;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_33881 = ((__local int64_t *) mem_44304)[i_30390];
    int32_t defunc_0_f_res_33882 = sext_i64_i32(last_res_33881);
    __local char *mem_44308;
    
    mem_44308 = (__local char *) mem_44308_backing_2;
    ((__local float *) mem_44308)[sext_i32_i64(local_tid_45588)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44310;
    
    mem_44310 = (__local char *) mem_44310_backing_3;
    ((__local int32_t *) mem_44310)[sext_i32_i64(local_tid_45588)] = 0;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_33781 = sext_i32_i64(ltid_pre_45592);
    int32_t phys_tid_33782 = local_tid_45588;
    float x_33887 = ((__local float *) mem_44306)[write_i_33781];
    int32_t index_primexp_41512 = sext_i64_i32(write_i_33781);
    bool isnan_res_33890;
    
    isnan_res_33890 = futrts_isnan32(x_33887);
    
    bool defunc_0_p_res_33891 = !isnan_res_33890;
    int64_t defunc_1_f_res_33892;
    
    if (defunc_0_p_res_33891) {
        int64_t x_33888 = ((__local int64_t *) mem_44304)[write_i_33781];
        int64_t defunc_1_f_res_t_res_33893 = sub64(x_33888, 1);
        
        defunc_1_f_res_33892 = defunc_1_f_res_t_res_33893;
    } else {
        defunc_1_f_res_33892 = -1;
    }
    if (sle64(0, defunc_1_f_res_33892) && slt64(defunc_1_f_res_33892,
                                                N_30123)) {
        ((__local int32_t *) mem_44310)[defunc_1_f_res_33892] =
            index_primexp_41512;
    }
    if (sle64(0, defunc_1_f_res_33892) && slt64(defunc_1_f_res_33892,
                                                N_30123)) {
        ((__local float *) mem_44308)[defunc_1_f_res_33892] = x_33887;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_45588 == 0) {
        ((__global int32_t *) mem_44313)[gtid_33776] = defunc_0_f_res_33882;
    }
    ((__global float *) mem_44316)[gtid_33776 * N_30123 +
                                   sext_i32_i64(local_tid_45588)] = ((__local
                                                                      float *) mem_44308)[sext_i32_i64(local_tid_45588)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global int32_t *) mem_44319)[gtid_33776 * N_30123 +
                                     sext_i32_i64(local_tid_45588)] = ((__local
                                                                        int32_t *) mem_44310)[sext_i32_i64(local_tid_45588)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_34123(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *red_arr_mem_45696_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *red_arr_mem_45692_backing_aligned_1,
                                                    int64_t N_30123,
                                                    int64_t N_30125,
                                                    float hfrac_30130,
                                                    int64_t i32_res_30137,
                                                    int32_t k2p2_30139, __global
                                                    unsigned char *images_mem_43532,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_44332,
                                                    __global
                                                    unsigned char *mem_44376,
                                                    __global
                                                    unsigned char *mem_44378,
                                                    __global
                                                    unsigned char *mem_44380)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45696_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45696_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45692_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45692_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45686;
    int32_t local_tid_45687;
    int64_t group_sizze_45690;
    int32_t wave_sizze_45689;
    int32_t group_tid_45688;
    
    global_tid_45686 = get_global_id(0);
    local_tid_45687 = get_local_id(0);
    group_sizze_45690 = get_local_size(0);
    wave_sizze_45689 = LOCKSTEP_WIDTH;
    group_tid_45688 = get_group_id(0);
    
    int32_t phys_tid_34123;
    
    phys_tid_34123 = group_tid_45688;
    
    int32_t ltid_pre_45691;
    
    ltid_pre_45691 = local_tid_45687;
    
    int64_t gtid_34116;
    
    gtid_34116 = sext_i32_i64(group_tid_45688);
    
    int32_t defunc_0_f_res_34200;
    int64_t gtid_34119 = sext_i32_i64(ltid_pre_45691);
    int32_t phys_tid_34120 = local_tid_45687;
    __local char *red_arr_mem_45692;
    
    red_arr_mem_45692 = (__local char *) red_arr_mem_45692_backing_0;
    
    float x_34204;
    
    x_34204 = ((__global float *) images_mem_43532)[gtid_34116 * N_30125 +
                                                    gtid_34119];
    
    bool isnan_res_34205;
    
    isnan_res_34205 = futrts_isnan32(x_34204);
    
    bool cond_34206 = !isnan_res_34205;
    int32_t defunc_0_f_res_34207 = btoi_bool_i32(cond_34206);
    
    ((__local int32_t *) red_arr_mem_45692)[gtid_34119] = defunc_0_f_res_34207;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45694;
    int32_t skip_waves_45695;
    
    skip_waves_45695 = 1;
    
    int32_t x_34201;
    int32_t x_34202;
    
    offset_45694 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45687, sext_i64_i32(i32_res_30137))) {
            x_34201 = ((__local
                        int32_t *) red_arr_mem_45692)[sext_i32_i64(local_tid_45687 +
                                                      offset_45694)];
        }
    }
    offset_45694 = 1;
    while (slt32(offset_45694, wave_sizze_45689)) {
        if (slt32(local_tid_45687 + offset_45694,
                  sext_i64_i32(i32_res_30137)) && ((local_tid_45687 -
                                                    squot32(local_tid_45687,
                                                            wave_sizze_45689) *
                                                    wave_sizze_45689) & (2 *
                                                                         offset_45694 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_34202 = ((volatile __local
                            int32_t *) red_arr_mem_45692)[sext_i32_i64(local_tid_45687 +
                                                          offset_45694)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_34203 = add32(x_34201, x_34202);
                
                x_34201 = defunc_1_op_res_34203;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_45692)[sext_i32_i64(local_tid_45687)] =
                    x_34201;
            }
        }
        offset_45694 *= 2;
    }
    while (slt32(skip_waves_45695, squot32(sext_i64_i32(i32_res_30137) +
                                           wave_sizze_45689 - 1,
                                           wave_sizze_45689))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45694 = skip_waves_45695 * wave_sizze_45689;
        if (slt32(local_tid_45687 + offset_45694,
                  sext_i64_i32(i32_res_30137)) && ((local_tid_45687 -
                                                    squot32(local_tid_45687,
                                                            wave_sizze_45689) *
                                                    wave_sizze_45689) == 0 &&
                                                   (squot32(local_tid_45687,
                                                            wave_sizze_45689) &
                                                    (2 * skip_waves_45695 -
                                                     1)) == 0)) {
            // read array element
            {
                x_34202 = ((__local
                            int32_t *) red_arr_mem_45692)[sext_i32_i64(local_tid_45687 +
                                                          offset_45694)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_34203 = add32(x_34201, x_34202);
                
                x_34201 = defunc_1_op_res_34203;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_45692)[sext_i32_i64(local_tid_45687)] =
                    x_34201;
            }
        }
        skip_waves_45695 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_34200 = ((__local int32_t *) red_arr_mem_45692)[0];
    
    float defunc_0_f_res_34208;
    int64_t gtid_34121 = sext_i32_i64(ltid_pre_45691);
    int32_t phys_tid_34122 = local_tid_45687;
    __local char *red_arr_mem_45696;
    
    red_arr_mem_45696 = (__local char *) red_arr_mem_45696_backing_1;
    
    int32_t index_primexp_41520;
    
    index_primexp_41520 = sext_i64_i32(gtid_34121);
    
    bool cond_34213 = slt32(index_primexp_41520, defunc_0_f_res_34200);
    float defunc_0_f_res_34214;
    
    if (cond_34213) {
        int64_t i_34215 = sext_i32_i64(index_primexp_41520);
        float defunc_0_f_res_t_res_34216 = ((__global
                                             float *) defunc_4_map_res_mem_44332)[gtid_34116 *
                                                                                  N_30123 +
                                                                                  i_34215];
        
        defunc_0_f_res_34214 = defunc_0_f_res_t_res_34216;
    } else {
        defunc_0_f_res_34214 = 0.0F;
    }
    
    float defunc_0_f_res_34217 = defunc_0_f_res_34214 * defunc_0_f_res_34214;
    
    ((__local float *) red_arr_mem_45696)[gtid_34121] = defunc_0_f_res_34217;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45698;
    int32_t skip_waves_45699;
    
    skip_waves_45699 = 1;
    
    float x_34209;
    float x_34210;
    
    offset_45698 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45687, sext_i64_i32(i32_res_30137))) {
            x_34209 = ((__local
                        float *) red_arr_mem_45696)[sext_i32_i64(local_tid_45687 +
                                                    offset_45698)];
        }
    }
    offset_45698 = 1;
    while (slt32(offset_45698, wave_sizze_45689)) {
        if (slt32(local_tid_45687 + offset_45698,
                  sext_i64_i32(i32_res_30137)) && ((local_tid_45687 -
                                                    squot32(local_tid_45687,
                                                            wave_sizze_45689) *
                                                    wave_sizze_45689) & (2 *
                                                                         offset_45698 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_34210 = ((volatile __local
                            float *) red_arr_mem_45696)[sext_i32_i64(local_tid_45687 +
                                                        offset_45698)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_34211 = x_34209 + x_34210;
                
                x_34209 = defunc_1_op_res_34211;
            }
            // write result of operation
            {
                ((volatile __local
                  float *) red_arr_mem_45696)[sext_i32_i64(local_tid_45687)] =
                    x_34209;
            }
        }
        offset_45698 *= 2;
    }
    while (slt32(skip_waves_45699, squot32(sext_i64_i32(i32_res_30137) +
                                           wave_sizze_45689 - 1,
                                           wave_sizze_45689))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45698 = skip_waves_45699 * wave_sizze_45689;
        if (slt32(local_tid_45687 + offset_45698,
                  sext_i64_i32(i32_res_30137)) && ((local_tid_45687 -
                                                    squot32(local_tid_45687,
                                                            wave_sizze_45689) *
                                                    wave_sizze_45689) == 0 &&
                                                   (squot32(local_tid_45687,
                                                            wave_sizze_45689) &
                                                    (2 * skip_waves_45699 -
                                                     1)) == 0)) {
            // read array element
            {
                x_34210 = ((__local
                            float *) red_arr_mem_45696)[sext_i32_i64(local_tid_45687 +
                                                        offset_45698)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_34211 = x_34209 + x_34210;
                
                x_34209 = defunc_1_op_res_34211;
            }
            // write result of operation
            {
                ((__local
                  float *) red_arr_mem_45696)[sext_i32_i64(local_tid_45687)] =
                    x_34209;
            }
        }
        skip_waves_45699 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_34208 = ((__local float *) red_arr_mem_45696)[0];
    
    int32_t r32_arg_34218 = sub32(defunc_0_f_res_34200, k2p2_30139);
    float i32_res_34219 = sitofp_i32_f32(r32_arg_34218);
    float sqrt_arg_34220 = defunc_0_f_res_34208 / i32_res_34219;
    float sqrt_res_34221;
    
    sqrt_res_34221 = futrts_sqrt32(sqrt_arg_34220);
    
    float i32_res_34222 = sitofp_i32_f32(defunc_0_f_res_34200);
    float t32_arg_34223 = hfrac_30130 * i32_res_34222;
    int32_t f32_res_34224 = fptosi_f32_i32(t32_arg_34223);
    
    if (local_tid_45687 == 0) {
        ((__global int32_t *) mem_44376)[gtid_34116] = f32_res_34224;
    }
    if (local_tid_45687 == 0) {
        ((__global int32_t *) mem_44378)[gtid_34116] = defunc_0_f_res_34200;
    }
    if (local_tid_45687 == 0) {
        ((__global float *) mem_44380)[gtid_34116] = sqrt_res_34221;
    }
    
  error_4:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_34571(__global
                                                    int *global_failure,
                                                    int failure_is_an_option,
                                                    __global
                                                    int64_t *global_failure_args,
                                                    __local volatile
                                                    int64_t *mem_44627_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_44617_backing_aligned_1,
                                                    __local volatile
                                                    int64_t *double_buffer_mem_44850_backing_aligned_2,
                                                    __local volatile
                                                    int64_t *mem_44615_backing_aligned_3,
                                                    __local volatile
                                                    int64_t *mem_44613_backing_aligned_4,
                                                    __local volatile
                                                    int64_t *mem_44611_backing_aligned_5,
                                                    __local volatile
                                                    int64_t *mem_44609_backing_aligned_6,
                                                    __local volatile
                                                    int64_t *mem_44607_backing_aligned_7,
                                                    __local volatile
                                                    int64_t *mem_44597_backing_aligned_8,
                                                    __local volatile
                                                    int64_t *red_arr_mem_45995_backing_aligned_9,
                                                    __local volatile
                                                    int64_t *red_arr_mem_45993_backing_aligned_10,
                                                    __local volatile
                                                    int64_t *red_arr_mem_45991_backing_aligned_11,
                                                    __local volatile
                                                    int64_t *mem_44594_backing_aligned_12,
                                                    __local volatile
                                                    int64_t *mem_44591_backing_aligned_13,
                                                    int64_t N_30123,
                                                    int32_t n_30128,
                                                    int64_t iota32_arg_30510,
                                                    int32_t iters_30541,
                                                    int64_t i_30543, __global
                                                    unsigned char *defunc_4_map_res_mem_44331,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_44332,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_44333,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_44395,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_44396,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_44397,
                                                    __global
                                                    unsigned char *defunc_0_f_res_mem_44430,
                                                    __global
                                                    unsigned char *mem_44435,
                                                    __global
                                                    unsigned char *mem_44631,
                                                    __global
                                                    unsigned char *mem_44634,
                                                    __global
                                                    unsigned char *mem_44636,
                                                    __global
                                                    unsigned char *mem_44638,
                                                    __global
                                                    unsigned char *mem_44640)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44627_backing_13 = (__local volatile
                                                            char *) mem_44627_backing_aligned_0;
    __local volatile char *restrict mem_44617_backing_12 = (__local volatile
                                                            char *) mem_44617_backing_aligned_1;
    __local volatile char *restrict double_buffer_mem_44850_backing_11 =
                          (__local volatile
                           char *) double_buffer_mem_44850_backing_aligned_2;
    __local volatile char *restrict mem_44615_backing_10 = (__local volatile
                                                            char *) mem_44615_backing_aligned_3;
    __local volatile char *restrict mem_44613_backing_9 = (__local volatile
                                                           char *) mem_44613_backing_aligned_4;
    __local volatile char *restrict mem_44611_backing_8 = (__local volatile
                                                           char *) mem_44611_backing_aligned_5;
    __local volatile char *restrict mem_44609_backing_7 = (__local volatile
                                                           char *) mem_44609_backing_aligned_6;
    __local volatile char *restrict mem_44607_backing_6 = (__local volatile
                                                           char *) mem_44607_backing_aligned_7;
    __local volatile char *restrict mem_44597_backing_5 = (__local volatile
                                                           char *) mem_44597_backing_aligned_8;
    __local volatile char *restrict red_arr_mem_45995_backing_4 =
                          (__local volatile
                           char *) red_arr_mem_45995_backing_aligned_9;
    __local volatile char *restrict red_arr_mem_45993_backing_3 =
                          (__local volatile
                           char *) red_arr_mem_45993_backing_aligned_10;
    __local volatile char *restrict red_arr_mem_45991_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45991_backing_aligned_11;
    __local volatile char *restrict mem_44594_backing_1 = (__local volatile
                                                           char *) mem_44594_backing_aligned_12;
    __local volatile char *restrict mem_44591_backing_0 = (__local volatile
                                                           char *) mem_44591_backing_aligned_13;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_45974;
    int32_t local_tid_45975;
    int64_t group_sizze_45978;
    int32_t wave_sizze_45977;
    int32_t group_tid_45976;
    
    global_tid_45974 = get_global_id(0);
    local_tid_45975 = get_local_id(0);
    group_sizze_45978 = get_local_size(0);
    wave_sizze_45977 = LOCKSTEP_WIDTH;
    group_tid_45976 = get_group_id(0);
    
    int32_t phys_tid_34571;
    
    phys_tid_34571 = group_tid_45976;
    
    int32_t ltid_pre_45979;
    
    ltid_pre_45979 = local_tid_45975;
    
    int64_t gtid_34536;
    
    gtid_34536 = sext_i32_i64(group_tid_45976);
    
    int32_t x_35089;
    
    x_35089 = ((__global int32_t *) defunc_4_map_res_mem_44331)[gtid_34536];
    
    int32_t x_35090 = ((__global
                        int32_t *) defunc_3_map_res_mem_44396)[gtid_34536];
    float x_35091 = ((__global float *) defunc_3_map_res_mem_44397)[gtid_34536];
    int32_t x_35092 = ((__global
                        int32_t *) defunc_3_map_res_mem_44395)[gtid_34536];
    float x_35093 = ((__global float *) defunc_0_f_res_mem_44430)[gtid_34536];
    int32_t y_35096 = sub32(x_35089, x_35090);
    float i32_res_35097 = sitofp_i32_f32(x_35090);
    float sqrt_res_35098;
    
    sqrt_res_35098 = futrts_sqrt32(i32_res_35097);
    
    float y_35099 = x_35091 * sqrt_res_35098;
    __local char *mem_44591;
    
    mem_44591 = (__local char *) mem_44591_backing_0;
    
    int64_t gtid_34539 = sext_i32_i64(ltid_pre_45979);
    int32_t phys_tid_34540 = local_tid_45975;
    int32_t index_primexp_41533 = sext_i64_i32(gtid_34539);
    bool cond_35112 = sle32(y_35096, index_primexp_41533);
    float defunc_0_f_res_35113;
    
    if (cond_35112) {
        defunc_0_f_res_35113 = 0.0F;
    } else {
        bool cond_35114 = index_primexp_41533 == 0;
        float defunc_0_f_res_f_res_35115;
        
        if (cond_35114) {
            defunc_0_f_res_f_res_35115 = x_35093;
        } else {
            int32_t i_35116 = add32(x_35090, index_primexp_41533);
            int64_t i_35117 = sext_i32_i64(i_35116);
            float x_35118 = ((__global
                              float *) defunc_4_map_res_mem_44332)[gtid_34536 *
                                                                   N_30123 +
                                                                   i_35117];
            int32_t x_35119 = sub32(x_35090, x_35092);
            int32_t i_35120 = add32(x_35119, index_primexp_41533);
            int64_t i_35121 = sext_i32_i64(i_35120);
            float y_35122 = ((__global
                              float *) defunc_4_map_res_mem_44332)[gtid_34536 *
                                                                   N_30123 +
                                                                   i_35121];
            float defunc_0_f_res_f_res_f_res_35123 = x_35118 - y_35122;
            
            defunc_0_f_res_f_res_35115 = defunc_0_f_res_f_res_f_res_35123;
        }
        defunc_0_f_res_35113 = defunc_0_f_res_f_res_35115;
    }
    ((__local float *) mem_44591)[gtid_34539] = defunc_0_f_res_35113;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_45980;
    
    dims_flat_45980 = iota32_arg_30510;
    
    float x_35108;
    float x_35109;
    float x_45982;
    float x_45983;
    bool ltid_in_bounds_45985;
    
    ltid_in_bounds_45985 = slt64(sext_i32_i64(local_tid_45975),
                                 iota32_arg_30510);
    
    int32_t skip_threads_45986;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45985) {
            x_35109 = ((volatile __local
                        float *) mem_44591)[sext_i32_i64(local_tid_45975)];
            if ((local_tid_45975 - squot32(local_tid_45975, 32) * 32) == 0) {
                x_35108 = x_35109;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45986 = 1;
        while (slt32(skip_threads_45986, 32)) {
            if (sle32(skip_threads_45986, local_tid_45975 -
                      squot32(local_tid_45975, 32) * 32) &&
                ltid_in_bounds_45985) {
                // read operands
                {
                    x_35108 = ((volatile __local
                                float *) mem_44591)[sext_i32_i64(local_tid_45975) -
                                                    sext_i32_i64(skip_threads_45986)];
                }
                // perform operation
                {
                    bool inactive_45987 =
                         slt64(srem64(sext_i32_i64(local_tid_45975),
                                      iota32_arg_30510),
                               sext_i32_i64(local_tid_45975) -
                               sext_i32_i64(local_tid_45975 -
                               skip_threads_45986));
                    
                    if (inactive_45987) {
                        x_35108 = x_35109;
                    }
                    if (!inactive_45987) {
                        float defunc_1_op_res_35110 = x_35108 + x_35109;
                        
                        x_35108 = defunc_1_op_res_35110;
                    }
                }
            }
            if (sle32(wave_sizze_45977, skip_threads_45986)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45986, local_tid_45975 -
                      squot32(local_tid_45975, 32) * 32) &&
                ltid_in_bounds_45985) {
                // write result
                {
                    ((volatile __local
                      float *) mem_44591)[sext_i32_i64(local_tid_45975)] =
                        x_35108;
                    x_35109 = x_35108;
                }
            }
            if (sle32(wave_sizze_45977, skip_threads_45986)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45986 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45975 - squot32(local_tid_45975, 32) * 32) == 31 &&
            ltid_in_bounds_45985) {
            ((volatile __local
              float *) mem_44591)[sext_i32_i64(squot32(local_tid_45975, 32))] =
                x_35108;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45988;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45975, 32) == 0 && ltid_in_bounds_45985) {
                x_45983 = ((volatile __local
                            float *) mem_44591)[sext_i32_i64(local_tid_45975)];
                if ((local_tid_45975 - squot32(local_tid_45975, 32) * 32) ==
                    0) {
                    x_45982 = x_45983;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45988 = 1;
            while (slt32(skip_threads_45988, 32)) {
                if (sle32(skip_threads_45988, local_tid_45975 -
                          squot32(local_tid_45975, 32) * 32) &&
                    (squot32(local_tid_45975, 32) == 0 &&
                     ltid_in_bounds_45985)) {
                    // read operands
                    {
                        x_45982 = ((volatile __local
                                    float *) mem_44591)[sext_i32_i64(local_tid_45975) -
                                                        sext_i32_i64(skip_threads_45988)];
                    }
                    // perform operation
                    {
                        bool inactive_45989 =
                             slt64(srem64(sext_i32_i64(local_tid_45975 * 32 +
                                          32 - 1), iota32_arg_30510),
                                   sext_i32_i64(local_tid_45975 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_45975 -
                                                 skip_threads_45988) * 32 + 32 -
                                   1));
                        
                        if (inactive_45989) {
                            x_45982 = x_45983;
                        }
                        if (!inactive_45989) {
                            float defunc_1_op_res_45984 = x_45982 + x_45983;
                            
                            x_45982 = defunc_1_op_res_45984;
                        }
                    }
                }
                if (sle32(wave_sizze_45977, skip_threads_45988)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45988, local_tid_45975 -
                          squot32(local_tid_45975, 32) * 32) &&
                    (squot32(local_tid_45975, 32) == 0 &&
                     ltid_in_bounds_45985)) {
                    // write result
                    {
                        ((volatile __local
                          float *) mem_44591)[sext_i32_i64(local_tid_45975)] =
                            x_45982;
                        x_45983 = x_45982;
                    }
                }
                if (sle32(wave_sizze_45977, skip_threads_45988)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45988 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45975, 32) == 0 || !ltid_in_bounds_45985)) {
            // read operands
            {
                x_35109 = x_35108;
                x_35108 = ((__local
                            float *) mem_44591)[sext_i32_i64(squot32(local_tid_45975,
                                                                     32)) - 1];
            }
            // perform operation
            {
                bool inactive_45990 =
                     slt64(srem64(sext_i32_i64(local_tid_45975),
                                  iota32_arg_30510),
                           sext_i32_i64(local_tid_45975) -
                           sext_i32_i64(squot32(local_tid_45975, 32) * 32 - 1));
                
                if (inactive_45990) {
                    x_35108 = x_35109;
                }
                if (!inactive_45990) {
                    float defunc_1_op_res_35110 = x_35108 + x_35109;
                    
                    x_35108 = defunc_1_op_res_35110;
                }
            }
            // write final result
            {
                ((__local float *) mem_44591)[sext_i32_i64(local_tid_45975)] =
                    x_35108;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45975, 32) == 0) {
            ((__local float *) mem_44591)[sext_i32_i64(local_tid_45975)] =
                x_35109;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44594;
    
    mem_44594 = (__local char *) mem_44594_backing_1;
    
    bool acc0_35129;
    int32_t acc0_35130;
    float acc0_35131;
    int64_t gtid_34541 = sext_i32_i64(ltid_pre_45979);
    int32_t phys_tid_34542 = local_tid_45975;
    __local char *red_arr_mem_45991;
    
    red_arr_mem_45991 = (__local char *) red_arr_mem_45991_backing_2;
    
    __local char *red_arr_mem_45993;
    
    red_arr_mem_45993 = (__local char *) red_arr_mem_45993_backing_3;
    
    __local char *red_arr_mem_45995;
    
    red_arr_mem_45995 = (__local char *) red_arr_mem_45995_backing_4;
    
    float x_35147;
    
    x_35147 = ((__local float *) mem_44591)[gtid_34541];
    
    float x_35148 = ((__global float *) mem_44435)[gtid_34541];
    int32_t index_primexp_41536 = sext_i64_i32(gtid_34541);
    float defunc_0_f_res_35151 = x_35147 / y_35099;
    bool cond_35152 = slt32(index_primexp_41536, y_35096);
    bool isnan_res_35153;
    
    isnan_res_35153 = futrts_isnan32(defunc_0_f_res_35151);
    
    bool cond_t_res_35154 = !isnan_res_35153;
    bool x_35155 = cond_35152 && cond_t_res_35154;
    float abs_res_35156 = (float) fabs(defunc_0_f_res_35151);
    bool defunc_2_f_res_t_res_35157 = x_35148 < abs_res_35156;
    bool x_35158 = x_35155 && defunc_2_f_res_t_res_35157;
    float defunc_1_f_res_35159;
    
    if (cond_35152) {
        defunc_1_f_res_35159 = defunc_0_f_res_35151;
    } else {
        defunc_1_f_res_35159 = 0.0F;
    }
    ((__local bool *) red_arr_mem_45991)[gtid_34541] = x_35158;
    ((__local int32_t *) red_arr_mem_45993)[gtid_34541] = index_primexp_41536;
    ((__local float *) red_arr_mem_45995)[gtid_34541] = defunc_1_f_res_35159;
    ((__local float *) mem_44594)[gtid_34541] = defunc_0_f_res_35151;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45997;
    int32_t skip_waves_45998;
    
    skip_waves_45998 = 1;
    
    bool x_35133;
    int32_t x_35134;
    float x_35135;
    bool x_35136;
    int32_t x_35137;
    float x_35138;
    
    offset_45997 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45975, sext_i64_i32(iota32_arg_30510))) {
            x_35133 = ((__local
                        bool *) red_arr_mem_45991)[sext_i32_i64(local_tid_45975 +
                                                   offset_45997)];
            x_35134 = ((__local
                        int32_t *) red_arr_mem_45993)[sext_i32_i64(local_tid_45975 +
                                                      offset_45997)];
            x_35135 = ((__local
                        float *) red_arr_mem_45995)[sext_i32_i64(local_tid_45975 +
                                                    offset_45997)];
        }
    }
    offset_45997 = 1;
    while (slt32(offset_45997, wave_sizze_45977)) {
        if (slt32(local_tid_45975 + offset_45997,
                  sext_i64_i32(iota32_arg_30510)) && ((local_tid_45975 -
                                                       squot32(local_tid_45975,
                                                               wave_sizze_45977) *
                                                       wave_sizze_45977) & (2 *
                                                                            offset_45997 -
                                                                            1)) ==
            0) {
            // read array element
            {
                x_35136 = ((volatile __local
                            bool *) red_arr_mem_45991)[sext_i32_i64(local_tid_45975 +
                                                       offset_45997)];
                x_35137 = ((volatile __local
                            int32_t *) red_arr_mem_45993)[sext_i32_i64(local_tid_45975 +
                                                          offset_45997)];
                x_35138 = ((volatile __local
                            float *) red_arr_mem_45995)[sext_i32_i64(local_tid_45975 +
                                                        offset_45997)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_35139;
                int32_t defunc_1_op_res_35140;
                
                if (x_35133) {
                    defunc_1_op_res_35139 = x_35133;
                    defunc_1_op_res_35140 = x_35134;
                } else {
                    bool x_35141 = x_35136 && x_35136;
                    bool x_35142 = !x_35136;
                    bool y_35143 = x_35133 && x_35142;
                    bool defunc_1_op_res_f_res_35144 = x_35141 || y_35143;
                    int32_t defunc_1_op_res_f_res_35145;
                    
                    if (x_35136) {
                        defunc_1_op_res_f_res_35145 = x_35137;
                    } else {
                        defunc_1_op_res_f_res_35145 = x_35134;
                    }
                    defunc_1_op_res_35139 = defunc_1_op_res_f_res_35144;
                    defunc_1_op_res_35140 = defunc_1_op_res_f_res_35145;
                }
                
                float defunc_1_op_res_35146 = x_35135 + x_35138;
                
                x_35133 = defunc_1_op_res_35139;
                x_35134 = defunc_1_op_res_35140;
                x_35135 = defunc_1_op_res_35146;
            }
            // write result of operation
            {
                ((volatile __local
                  bool *) red_arr_mem_45991)[sext_i32_i64(local_tid_45975)] =
                    x_35133;
                ((volatile __local
                  int32_t *) red_arr_mem_45993)[sext_i32_i64(local_tid_45975)] =
                    x_35134;
                ((volatile __local
                  float *) red_arr_mem_45995)[sext_i32_i64(local_tid_45975)] =
                    x_35135;
            }
        }
        offset_45997 *= 2;
    }
    while (slt32(skip_waves_45998, squot32(sext_i64_i32(iota32_arg_30510) +
                                           wave_sizze_45977 - 1,
                                           wave_sizze_45977))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45997 = skip_waves_45998 * wave_sizze_45977;
        if (slt32(local_tid_45975 + offset_45997,
                  sext_i64_i32(iota32_arg_30510)) && ((local_tid_45975 -
                                                       squot32(local_tid_45975,
                                                               wave_sizze_45977) *
                                                       wave_sizze_45977) == 0 &&
                                                      (squot32(local_tid_45975,
                                                               wave_sizze_45977) &
                                                       (2 * skip_waves_45998 -
                                                        1)) == 0)) {
            // read array element
            {
                x_35136 = ((__local
                            bool *) red_arr_mem_45991)[sext_i32_i64(local_tid_45975 +
                                                       offset_45997)];
                x_35137 = ((__local
                            int32_t *) red_arr_mem_45993)[sext_i32_i64(local_tid_45975 +
                                                          offset_45997)];
                x_35138 = ((__local
                            float *) red_arr_mem_45995)[sext_i32_i64(local_tid_45975 +
                                                        offset_45997)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_35139;
                int32_t defunc_1_op_res_35140;
                
                if (x_35133) {
                    defunc_1_op_res_35139 = x_35133;
                    defunc_1_op_res_35140 = x_35134;
                } else {
                    bool x_35141 = x_35136 && x_35136;
                    bool x_35142 = !x_35136;
                    bool y_35143 = x_35133 && x_35142;
                    bool defunc_1_op_res_f_res_35144 = x_35141 || y_35143;
                    int32_t defunc_1_op_res_f_res_35145;
                    
                    if (x_35136) {
                        defunc_1_op_res_f_res_35145 = x_35137;
                    } else {
                        defunc_1_op_res_f_res_35145 = x_35134;
                    }
                    defunc_1_op_res_35139 = defunc_1_op_res_f_res_35144;
                    defunc_1_op_res_35140 = defunc_1_op_res_f_res_35145;
                }
                
                float defunc_1_op_res_35146 = x_35135 + x_35138;
                
                x_35133 = defunc_1_op_res_35139;
                x_35134 = defunc_1_op_res_35140;
                x_35135 = defunc_1_op_res_35146;
            }
            // write result of operation
            {
                ((__local
                  bool *) red_arr_mem_45991)[sext_i32_i64(local_tid_45975)] =
                    x_35133;
                ((__local
                  int32_t *) red_arr_mem_45993)[sext_i32_i64(local_tid_45975)] =
                    x_35134;
                ((__local
                  float *) red_arr_mem_45995)[sext_i32_i64(local_tid_45975)] =
                    x_35135;
            }
        }
        skip_waves_45998 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    acc0_35129 = ((__local bool *) red_arr_mem_45991)[0];
    acc0_35130 = ((__local int32_t *) red_arr_mem_45993)[0];
    acc0_35131 = ((__local float *) red_arr_mem_45995)[0];
    
    bool x_35162 = acc0_35129 && acc0_35129;
    int32_t defunc_1_op_res_f_res_35166;
    
    if (acc0_35129) {
        defunc_1_op_res_f_res_35166 = acc0_35130;
    } else {
        defunc_1_op_res_f_res_35166 = -1;
    }
    
    bool cond_35173 = y_35096 == 0;
    float defunc_0_f_res_35174;
    
    if (cond_35173) {
        defunc_0_f_res_35174 = 0.0F;
    } else {
        float i32_res_35175 = sitofp_i32_f32(y_35096);
        float defunc_0_f_res_f_res_35176 = acc0_35131 / i32_res_35175;
        
        defunc_0_f_res_35174 = defunc_0_f_res_f_res_35176;
    }
    
    __local char *mem_44597;
    
    mem_44597 = (__local char *) mem_44597_backing_5;
    
    int64_t gtid_34543 = sext_i32_i64(ltid_pre_45979);
    int32_t phys_tid_34544 = local_tid_45975;
    int32_t index_primexp_41539 = sext_i64_i32(gtid_34543);
    bool cond_35179 = slt32(index_primexp_41539, y_35096);
    bool cond_35180;
    
    if (cond_35179) {
        int32_t i_35181 = add32(x_35090, index_primexp_41539);
        int64_t i_35182 = sext_i32_i64(i_35181);
        bool x_35183 = sle64(0, i_35182);
        bool y_35184 = slt64(i_35182, N_30123);
        bool bounds_check_35185 = x_35183 && y_35184;
        bool index_certs_35186;
        
        if (!bounds_check_35185) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 22) == -1) {
                    global_failure_args[0] = i_35182;
                    global_failure_args[1] = N_30123;
                    ;
                }
                local_failure = true;
                goto error_3;
            }
        }
        
        float isnan_arg_35187 = ((__global
                                  float *) defunc_4_map_res_mem_44332)[gtid_34536 *
                                                                       N_30123 +
                                                                       i_35182];
        bool isnan_res_35188;
        
        isnan_res_35188 = futrts_isnan32(isnan_arg_35187);
        
        bool cond_t_res_35189 = !isnan_res_35188;
        
        cond_35180 = cond_t_res_35189;
    } else {
        cond_35180 = 0;
    }
    
    float defunc_0_f_res_35190;
    
    if (cond_35180) {
        int32_t i_35191 = add32(x_35090, index_primexp_41539);
        int64_t i_35192 = sext_i32_i64(i_35191);
        bool x_35193 = sle64(0, i_35192);
        bool y_35194 = slt64(i_35192, N_30123);
        bool bounds_check_35195 = x_35193 && y_35194;
        bool index_certs_35196;
        
        if (!bounds_check_35195) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 23) == -1) {
                    global_failure_args[0] = i_35192;
                    global_failure_args[1] = N_30123;
                    ;
                }
                local_failure = true;
                goto error_3;
            }
        }
        
        float defunc_0_f_res_t_res_35197 = ((__global
                                             float *) defunc_4_map_res_mem_44332)[gtid_34536 *
                                                                                  N_30123 +
                                                                                  i_35192];
        
        defunc_0_f_res_35190 = defunc_0_f_res_t_res_35197;
    } else {
        defunc_0_f_res_35190 = INFINITY;
    }
    ((__local float *) mem_44597)[gtid_34543] = defunc_0_f_res_35190;
    
  error_3:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44607;
    
    mem_44607 = (__local char *) mem_44607_backing_6;
    
    __local char *mem_44609;
    
    mem_44609 = (__local char *) mem_44609_backing_7;
    
    __local char *mem_44611;
    
    mem_44611 = (__local char *) mem_44611_backing_8;
    
    __local char *mem_44613;
    
    mem_44613 = (__local char *) mem_44613_backing_9;
    
    __local char *mem_44615;
    
    mem_44615 = (__local char *) mem_44615_backing_10;
    
    __local char *double_buffer_mem_44850;
    
    double_buffer_mem_44850 = (__local
                               char *) double_buffer_mem_44850_backing_11;
    ((__local float *) double_buffer_mem_44850)[sext_i32_i64(local_tid_45975)] =
        ((__local float *) mem_44597)[sext_i32_i64(local_tid_45975)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44617;
    
    mem_44617 = (__local char *) mem_44617_backing_12;
    for (int32_t i_35199 = 0; i_35199 < iters_30541; i_35199++) {
        int32_t defunc_2_radix_sort_step_arg_35201 = mul32(2, i_35199);
        int32_t defunc_0_get_bit_arg_35202 = add32(1,
                                                   defunc_2_radix_sort_step_arg_35201);
        bool cond_f_res_35203 = defunc_0_get_bit_arg_35202 == 31;
        bool cond_f_res_35204 = defunc_2_radix_sort_step_arg_35201 == 31;
        int64_t gtid_34565 = sext_i32_i64(ltid_pre_45979);
        int32_t phys_tid_34566 = local_tid_45975;
        float x_35222 = ((__local float *) double_buffer_mem_44850)[gtid_34565];
        int32_t i32_arg_35223;
        
        i32_arg_35223 = futrts_to_bits32(x_35222);
        
        int32_t unsign_arg_35224 = ashr32(i32_arg_35223,
                                          defunc_0_get_bit_arg_35202);
        int32_t unsign_arg_35225 = 1 & unsign_arg_35224;
        int32_t unsign_arg_35226 = ashr32(i32_arg_35223, 31);
        int32_t unsign_arg_35227 = 1 & unsign_arg_35226;
        bool cond_35228 = unsign_arg_35227 == 1;
        bool x_35229 = !cond_35228;
        bool y_35230 = cond_f_res_35203 && x_35229;
        bool cond_35231 = cond_35228 || y_35230;
        int32_t defunc_1_get_bit_res_35232;
        
        if (cond_35231) {
            int32_t defunc_1_get_bit_res_t_res_35233 = 1 ^ unsign_arg_35225;
            
            defunc_1_get_bit_res_35232 = defunc_1_get_bit_res_t_res_35233;
        } else {
            defunc_1_get_bit_res_35232 = unsign_arg_35225;
        }
        
        int32_t x_35234 = mul32(2, defunc_1_get_bit_res_35232);
        int32_t unsign_arg_35235 = ashr32(i32_arg_35223,
                                          defunc_2_radix_sort_step_arg_35201);
        int32_t unsign_arg_35236 = 1 & unsign_arg_35235;
        bool y_35237 = cond_f_res_35204 && x_35229;
        bool cond_35238 = cond_35228 || y_35237;
        int32_t defunc_1_get_bit_res_35239;
        
        if (cond_35238) {
            int32_t defunc_1_get_bit_res_t_res_35240 = 1 ^ unsign_arg_35236;
            
            defunc_1_get_bit_res_35239 = defunc_1_get_bit_res_t_res_35240;
        } else {
            defunc_1_get_bit_res_35239 = unsign_arg_35236;
        }
        
        int32_t defunc_0_f_res_35241 = add32(x_35234,
                                             defunc_1_get_bit_res_35239);
        bool cond_35242 = defunc_0_f_res_35241 == 0;
        int64_t defunc_0_f_res_35243 = btoi_bool_i64(cond_35242);
        int64_t defunc_0_f_res_35244;
        int64_t defunc_0_f_res_35245;
        int64_t defunc_0_f_res_35246;
        
        if (cond_35242) {
            defunc_0_f_res_35244 = 0;
            defunc_0_f_res_35245 = 0;
            defunc_0_f_res_35246 = 0;
        } else {
            bool cond_35247 = defunc_0_f_res_35241 == 1;
            int64_t defunc_0_f_res_f_res_35248 = btoi_bool_i64(cond_35247);
            int64_t defunc_0_f_res_f_res_35249;
            int64_t defunc_0_f_res_f_res_35250;
            
            if (cond_35247) {
                defunc_0_f_res_f_res_35249 = 0;
                defunc_0_f_res_f_res_35250 = 0;
            } else {
                bool cond_35251 = defunc_0_f_res_35241 == 2;
                int64_t defunc_0_f_res_f_res_f_res_35252 =
                        btoi_bool_i64(cond_35251);
                bool cond_neg_35253 = !cond_35251;
                int64_t defunc_0_f_res_f_res_f_res_35254 =
                        btoi_bool_i64(cond_neg_35253);
                
                defunc_0_f_res_f_res_35249 = defunc_0_f_res_f_res_f_res_35252;
                defunc_0_f_res_f_res_35250 = defunc_0_f_res_f_res_f_res_35254;
            }
            defunc_0_f_res_35244 = defunc_0_f_res_f_res_35248;
            defunc_0_f_res_35245 = defunc_0_f_res_f_res_35249;
            defunc_0_f_res_35246 = defunc_0_f_res_f_res_35250;
        }
        ((__local int64_t *) mem_44607)[gtid_34565] = defunc_0_f_res_35243;
        ((__local int64_t *) mem_44609)[gtid_34565] = defunc_0_f_res_35244;
        ((__local int64_t *) mem_44611)[gtid_34565] = defunc_0_f_res_35245;
        ((__local int64_t *) mem_44613)[gtid_34565] = defunc_0_f_res_35246;
        ((__local int32_t *) mem_44615)[gtid_34565] = defunc_0_f_res_35241;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t dims_flat_46000;
        
        dims_flat_46000 = iota32_arg_30510;
        
        int64_t x_35210;
        int64_t x_35211;
        int64_t x_35212;
        int64_t x_35213;
        int64_t x_35214;
        int64_t x_35215;
        int64_t x_35216;
        int64_t x_35217;
        int64_t x_46005;
        int64_t x_46006;
        int64_t x_46007;
        int64_t x_46008;
        int64_t x_46009;
        int64_t x_46010;
        int64_t x_46011;
        int64_t x_46012;
        bool ltid_in_bounds_46017;
        
        ltid_in_bounds_46017 = slt64(sext_i32_i64(local_tid_45975),
                                     iota32_arg_30510);
        
        int32_t skip_threads_46018;
        
        // read input for in-block scan
        {
            if (ltid_in_bounds_46017) {
                x_35214 = ((volatile __local
                            int64_t *) mem_44607)[sext_i32_i64(local_tid_45975)];
                x_35215 = ((volatile __local
                            int64_t *) mem_44609)[sext_i32_i64(local_tid_45975)];
                x_35216 = ((volatile __local
                            int64_t *) mem_44611)[sext_i32_i64(local_tid_45975)];
                x_35217 = ((volatile __local
                            int64_t *) mem_44613)[sext_i32_i64(local_tid_45975)];
                if ((local_tid_45975 - squot32(local_tid_45975, 32) * 32) ==
                    0) {
                    x_35210 = x_35214;
                    x_35211 = x_35215;
                    x_35212 = x_35216;
                    x_35213 = x_35217;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_46018 = 1;
            while (slt32(skip_threads_46018, 32)) {
                if (sle32(skip_threads_46018, local_tid_45975 -
                          squot32(local_tid_45975, 32) * 32) &&
                    ltid_in_bounds_46017) {
                    // read operands
                    {
                        x_35210 = ((volatile __local
                                    int64_t *) mem_44607)[sext_i32_i64(local_tid_45975) -
                                                          sext_i32_i64(skip_threads_46018)];
                        x_35211 = ((volatile __local
                                    int64_t *) mem_44609)[sext_i32_i64(local_tid_45975) -
                                                          sext_i32_i64(skip_threads_46018)];
                        x_35212 = ((volatile __local
                                    int64_t *) mem_44611)[sext_i32_i64(local_tid_45975) -
                                                          sext_i32_i64(skip_threads_46018)];
                        x_35213 = ((volatile __local
                                    int64_t *) mem_44613)[sext_i32_i64(local_tid_45975) -
                                                          sext_i32_i64(skip_threads_46018)];
                    }
                    // perform operation
                    {
                        bool inactive_46019 =
                             slt64(srem64(sext_i32_i64(local_tid_45975),
                                          iota32_arg_30510),
                                   sext_i32_i64(local_tid_45975) -
                                   sext_i32_i64(local_tid_45975 -
                                   skip_threads_46018));
                        
                        if (inactive_46019) {
                            x_35210 = x_35214;
                            x_35211 = x_35215;
                            x_35212 = x_35216;
                            x_35213 = x_35217;
                        }
                        if (!inactive_46019) {
                            int64_t defunc_1_op_res_35218 = add64(x_35210,
                                                                  x_35214);
                            int64_t defunc_1_op_res_35219 = add64(x_35211,
                                                                  x_35215);
                            int64_t defunc_1_op_res_35220 = add64(x_35212,
                                                                  x_35216);
                            int64_t defunc_1_op_res_35221 = add64(x_35213,
                                                                  x_35217);
                            
                            x_35210 = defunc_1_op_res_35218;
                            x_35211 = defunc_1_op_res_35219;
                            x_35212 = defunc_1_op_res_35220;
                            x_35213 = defunc_1_op_res_35221;
                        }
                    }
                }
                if (sle32(wave_sizze_45977, skip_threads_46018)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_46018, local_tid_45975 -
                          squot32(local_tid_45975, 32) * 32) &&
                    ltid_in_bounds_46017) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_44607)[sext_i32_i64(local_tid_45975)] =
                            x_35210;
                        x_35214 = x_35210;
                        ((volatile __local
                          int64_t *) mem_44609)[sext_i32_i64(local_tid_45975)] =
                            x_35211;
                        x_35215 = x_35211;
                        ((volatile __local
                          int64_t *) mem_44611)[sext_i32_i64(local_tid_45975)] =
                            x_35212;
                        x_35216 = x_35212;
                        ((volatile __local
                          int64_t *) mem_44613)[sext_i32_i64(local_tid_45975)] =
                            x_35213;
                        x_35217 = x_35213;
                    }
                }
                if (sle32(wave_sizze_45977, skip_threads_46018)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_46018 *= 2;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // last thread of block 'i' writes its result to offset 'i'
        {
            if ((local_tid_45975 - squot32(local_tid_45975, 32) * 32) == 31 &&
                ltid_in_bounds_46017) {
                ((volatile __local
                  int64_t *) mem_44607)[sext_i32_i64(squot32(local_tid_45975,
                                                             32))] = x_35210;
                ((volatile __local
                  int64_t *) mem_44609)[sext_i32_i64(squot32(local_tid_45975,
                                                             32))] = x_35211;
                ((volatile __local
                  int64_t *) mem_44611)[sext_i32_i64(squot32(local_tid_45975,
                                                             32))] = x_35212;
                ((volatile __local
                  int64_t *) mem_44613)[sext_i32_i64(squot32(local_tid_45975,
                                                             32))] = x_35213;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
        {
            int32_t skip_threads_46020;
            
            // read input for in-block scan
            {
                if (squot32(local_tid_45975, 32) == 0 && ltid_in_bounds_46017) {
                    x_46009 = ((volatile __local
                                int64_t *) mem_44607)[sext_i32_i64(local_tid_45975)];
                    x_46010 = ((volatile __local
                                int64_t *) mem_44609)[sext_i32_i64(local_tid_45975)];
                    x_46011 = ((volatile __local
                                int64_t *) mem_44611)[sext_i32_i64(local_tid_45975)];
                    x_46012 = ((volatile __local
                                int64_t *) mem_44613)[sext_i32_i64(local_tid_45975)];
                    if ((local_tid_45975 - squot32(local_tid_45975, 32) * 32) ==
                        0) {
                        x_46005 = x_46009;
                        x_46006 = x_46010;
                        x_46007 = x_46011;
                        x_46008 = x_46012;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_46020 = 1;
                while (slt32(skip_threads_46020, 32)) {
                    if (sle32(skip_threads_46020, local_tid_45975 -
                              squot32(local_tid_45975, 32) * 32) &&
                        (squot32(local_tid_45975, 32) == 0 &&
                         ltid_in_bounds_46017)) {
                        // read operands
                        {
                            x_46005 = ((volatile __local
                                        int64_t *) mem_44607)[sext_i32_i64(local_tid_45975) -
                                                              sext_i32_i64(skip_threads_46020)];
                            x_46006 = ((volatile __local
                                        int64_t *) mem_44609)[sext_i32_i64(local_tid_45975) -
                                                              sext_i32_i64(skip_threads_46020)];
                            x_46007 = ((volatile __local
                                        int64_t *) mem_44611)[sext_i32_i64(local_tid_45975) -
                                                              sext_i32_i64(skip_threads_46020)];
                            x_46008 = ((volatile __local
                                        int64_t *) mem_44613)[sext_i32_i64(local_tid_45975) -
                                                              sext_i32_i64(skip_threads_46020)];
                        }
                        // perform operation
                        {
                            bool inactive_46021 =
                                 slt64(srem64(sext_i32_i64(local_tid_45975 *
                                              32 + 32 - 1), iota32_arg_30510),
                                       sext_i32_i64(local_tid_45975 * 32 + 32 -
                                       1) - sext_i32_i64((local_tid_45975 -
                                                          skip_threads_46020) *
                                       32 + 32 - 1));
                            
                            if (inactive_46021) {
                                x_46005 = x_46009;
                                x_46006 = x_46010;
                                x_46007 = x_46011;
                                x_46008 = x_46012;
                            }
                            if (!inactive_46021) {
                                int64_t defunc_1_op_res_46013 = add64(x_46005,
                                                                      x_46009);
                                int64_t defunc_1_op_res_46014 = add64(x_46006,
                                                                      x_46010);
                                int64_t defunc_1_op_res_46015 = add64(x_46007,
                                                                      x_46011);
                                int64_t defunc_1_op_res_46016 = add64(x_46008,
                                                                      x_46012);
                                
                                x_46005 = defunc_1_op_res_46013;
                                x_46006 = defunc_1_op_res_46014;
                                x_46007 = defunc_1_op_res_46015;
                                x_46008 = defunc_1_op_res_46016;
                            }
                        }
                    }
                    if (sle32(wave_sizze_45977, skip_threads_46020)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_46020, local_tid_45975 -
                              squot32(local_tid_45975, 32) * 32) &&
                        (squot32(local_tid_45975, 32) == 0 &&
                         ltid_in_bounds_46017)) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) mem_44607)[sext_i32_i64(local_tid_45975)] =
                                x_46005;
                            x_46009 = x_46005;
                            ((volatile __local
                              int64_t *) mem_44609)[sext_i32_i64(local_tid_45975)] =
                                x_46006;
                            x_46010 = x_46006;
                            ((volatile __local
                              int64_t *) mem_44611)[sext_i32_i64(local_tid_45975)] =
                                x_46007;
                            x_46011 = x_46007;
                            ((volatile __local
                              int64_t *) mem_44613)[sext_i32_i64(local_tid_45975)] =
                                x_46008;
                            x_46012 = x_46008;
                        }
                    }
                    if (sle32(wave_sizze_45977, skip_threads_46020)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_46020 *= 2;
                }
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // carry-in for every block except the first
        {
            if (!(squot32(local_tid_45975, 32) == 0 || !ltid_in_bounds_46017)) {
                // read operands
                {
                    x_35214 = x_35210;
                    x_35215 = x_35211;
                    x_35216 = x_35212;
                    x_35217 = x_35213;
                    x_35210 = ((__local
                                int64_t *) mem_44607)[sext_i32_i64(squot32(local_tid_45975,
                                                                           32)) -
                                                      1];
                    x_35211 = ((__local
                                int64_t *) mem_44609)[sext_i32_i64(squot32(local_tid_45975,
                                                                           32)) -
                                                      1];
                    x_35212 = ((__local
                                int64_t *) mem_44611)[sext_i32_i64(squot32(local_tid_45975,
                                                                           32)) -
                                                      1];
                    x_35213 = ((__local
                                int64_t *) mem_44613)[sext_i32_i64(squot32(local_tid_45975,
                                                                           32)) -
                                                      1];
                }
                // perform operation
                {
                    bool inactive_46022 =
                         slt64(srem64(sext_i32_i64(local_tid_45975),
                                      iota32_arg_30510),
                               sext_i32_i64(local_tid_45975) -
                               sext_i32_i64(squot32(local_tid_45975, 32) * 32 -
                               1));
                    
                    if (inactive_46022) {
                        x_35210 = x_35214;
                        x_35211 = x_35215;
                        x_35212 = x_35216;
                        x_35213 = x_35217;
                    }
                    if (!inactive_46022) {
                        int64_t defunc_1_op_res_35218 = add64(x_35210, x_35214);
                        int64_t defunc_1_op_res_35219 = add64(x_35211, x_35215);
                        int64_t defunc_1_op_res_35220 = add64(x_35212, x_35216);
                        int64_t defunc_1_op_res_35221 = add64(x_35213, x_35217);
                        
                        x_35210 = defunc_1_op_res_35218;
                        x_35211 = defunc_1_op_res_35219;
                        x_35212 = defunc_1_op_res_35220;
                        x_35213 = defunc_1_op_res_35221;
                    }
                }
                // write final result
                {
                    ((__local
                      int64_t *) mem_44607)[sext_i32_i64(local_tid_45975)] =
                        x_35210;
                    ((__local
                      int64_t *) mem_44609)[sext_i32_i64(local_tid_45975)] =
                        x_35211;
                    ((__local
                      int64_t *) mem_44611)[sext_i32_i64(local_tid_45975)] =
                        x_35212;
                    ((__local
                      int64_t *) mem_44613)[sext_i32_i64(local_tid_45975)] =
                        x_35213;
                }
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // restore correct values for first block
        {
            if (squot32(local_tid_45975, 32) == 0) {
                ((__local int64_t *) mem_44607)[sext_i32_i64(local_tid_45975)] =
                    x_35214;
                ((__local int64_t *) mem_44609)[sext_i32_i64(local_tid_45975)] =
                    x_35215;
                ((__local int64_t *) mem_44611)[sext_i32_i64(local_tid_45975)] =
                    x_35216;
                ((__local int64_t *) mem_44613)[sext_i32_i64(local_tid_45975)] =
                    x_35217;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t last_res_35255 = ((__local int64_t *) mem_44607)[i_30543];
        int64_t last_res_35256 = ((__local int64_t *) mem_44609)[i_30543];
        int64_t last_res_35257 = ((__local int64_t *) mem_44611)[i_30543];
        
        ((__local float *) mem_44617)[sext_i32_i64(local_tid_45975)] = ((__local
                                                                         float *) double_buffer_mem_44850)[sext_i32_i64(local_tid_45975)];
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_34567 = sext_i32_i64(ltid_pre_45979);
        int32_t phys_tid_34568 = local_tid_45975;
        int32_t x_35260 = ((__local int32_t *) mem_44615)[write_i_34567];
        float write_value_35265 = ((__local
                                    float *) double_buffer_mem_44850)[write_i_34567];
        bool match_lit_35266 = 0 == x_35260;
        int64_t defunc_1_f_res_35267;
        
        if (match_lit_35266) {
            int64_t x_35261 = ((__local int64_t *) mem_44607)[write_i_34567];
            int64_t case_res_35268 = sub64(x_35261, 1);
            
            defunc_1_f_res_35267 = case_res_35268;
        } else {
            int64_t x_35262 = ((__local int64_t *) mem_44609)[write_i_34567];
            int64_t x_35263 = ((__local int64_t *) mem_44611)[write_i_34567];
            int64_t x_35264 = ((__local int64_t *) mem_44613)[write_i_34567];
            bool match_lit_35269 = 1 == x_35260;
            int64_t x_35270;
            
            if (match_lit_35269) {
                int64_t x_35271 = add64(last_res_35255, x_35262);
                int64_t case_res_35272 = sub64(x_35271, 1);
                
                x_35270 = case_res_35272;
            } else {
                bool match_lit_35273 = 2 == x_35260;
                int64_t x_35274;
                
                if (match_lit_35273) {
                    int64_t x_35275 = add64(last_res_35255, last_res_35256);
                    int64_t x_35276 = add64(x_35263, x_35275);
                    int64_t case_res_35277 = sub64(x_35276, 1);
                    
                    x_35274 = case_res_35277;
                } else {
                    int64_t x_35278 = add64(last_res_35255, last_res_35256);
                    int64_t x_35279 = add64(last_res_35257, x_35278);
                    int64_t x_35280 = add64(x_35264, x_35279);
                    int64_t defunc_1_f_res_res_35281 = sub64(x_35280, 1);
                    
                    x_35274 = defunc_1_f_res_res_35281;
                }
                x_35270 = x_35274;
            }
            defunc_1_f_res_35267 = x_35270;
        }
        if (sle64(0, defunc_1_f_res_35267) && slt64(defunc_1_f_res_35267,
                                                    iota32_arg_30510)) {
            ((__local float *) mem_44617)[defunc_1_f_res_35267] =
                write_value_35265;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        ((__local
          float *) double_buffer_mem_44850)[sext_i32_i64(local_tid_45975)] =
            ((__local float *) mem_44617)[sext_i32_i64(local_tid_45975)];
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    
    int32_t i_35282 = sdiv32(y_35096, 2);
    int32_t j_35283 = sub32(i_35282, 1);
    bool cond_35284 = x_35089 == x_35090;
    float defunc_0_f_res_35285;
    
    if (cond_35284) {
        defunc_0_f_res_35285 = 0.0F;
    } else {
        int32_t x_35286 = smod32(y_35096, 2);
        bool cond_35287 = x_35286 == 0;
        float defunc_0_f_res_f_res_35288;
        
        if (cond_35287) {
            int64_t j_35289 = sext_i32_i64(j_35283);
            bool x_35290 = sle64(0, j_35289);
            bool y_35291 = slt64(j_35289, iota32_arg_30510);
            bool bounds_check_35292 = x_35290 && y_35291;
            bool index_certs_35293;
            
            if (!bounds_check_35292) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 24) ==
                        -1) {
                        global_failure_args[0] = j_35289;
                        global_failure_args[1] = iota32_arg_30510;
                        ;
                    }
                    local_failure = true;
                    goto error_6;
                }
            }
            
            float x_35294 = ((__local
                              float *) double_buffer_mem_44850)[j_35289];
            int64_t i_35295 = sext_i32_i64(i_35282);
            bool x_35296 = sle64(0, i_35295);
            bool y_35297 = slt64(i_35295, iota32_arg_30510);
            bool bounds_check_35298 = x_35296 && y_35297;
            bool index_certs_35299;
            
            if (!bounds_check_35298) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 25) ==
                        -1) {
                        global_failure_args[0] = i_35295;
                        global_failure_args[1] = iota32_arg_30510;
                        ;
                    }
                    local_failure = true;
                    goto error_6;
                }
            }
            
            float y_35300 = ((__local
                              float *) double_buffer_mem_44850)[i_35295];
            float x_35301 = x_35294 + y_35300;
            float defunc_0_f_res_f_res_t_res_35302 = x_35301 / 2.0F;
            
            defunc_0_f_res_f_res_35288 = defunc_0_f_res_f_res_t_res_35302;
        } else {
            int64_t i_35303 = sext_i32_i64(i_35282);
            bool x_35304 = sle64(0, i_35303);
            bool y_35305 = slt64(i_35303, iota32_arg_30510);
            bool bounds_check_35306 = x_35304 && y_35305;
            bool index_certs_35307;
            
            if (!bounds_check_35306) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 26) ==
                        -1) {
                        global_failure_args[0] = i_35303;
                        global_failure_args[1] = iota32_arg_30510;
                        ;
                    }
                    local_failure = true;
                    goto error_6;
                }
            }
            
            float defunc_0_f_res_f_res_f_res_35308 = ((__local
                                                       float *) double_buffer_mem_44850)[i_35303];
            
            defunc_0_f_res_f_res_35288 = defunc_0_f_res_f_res_f_res_35308;
        }
        defunc_0_f_res_35285 = defunc_0_f_res_f_res_35288;
    }
    
    bool cond_35309 = !x_35162;
    int32_t fst_breakzq_35310;
    
    if (cond_35309) {
        fst_breakzq_35310 = -1;
    } else {
        bool cond_35311 = slt32(defunc_1_op_res_f_res_35166, y_35096);
        int32_t adjustValInds_res_35312;
        
        if (cond_35311) {
            int32_t i_35313 = add32(x_35090, defunc_1_op_res_f_res_35166);
            int64_t i_35314 = sext_i32_i64(i_35313);
            int32_t x_35315 = ((__global
                                int32_t *) defunc_4_map_res_mem_44333)[gtid_34536 *
                                                                       N_30123 +
                                                                       i_35314];
            int32_t adjustValInds_res_t_res_35316 = sub32(x_35315, n_30128);
            
            adjustValInds_res_35312 = adjustValInds_res_t_res_35316;
        } else {
            adjustValInds_res_35312 = -1;
        }
        fst_breakzq_35310 = adjustValInds_res_35312;
    }
    
    bool cond_35317 = sle32(x_35090, 5);
    bool cond_f_res_35318 = sle32(y_35096, 5);
    bool x_35319 = !cond_35317;
    bool y_35320 = cond_f_res_35318 && x_35319;
    bool cond_35321 = cond_35317 || y_35320;
    int32_t fst_breakzq_35322;
    
    if (cond_35321) {
        fst_breakzq_35322 = -2;
    } else {
        fst_breakzq_35322 = fst_breakzq_35310;
    }
    
    __local char *mem_44627;
    
    mem_44627 = (__local char *) mem_44627_backing_13;
    ((__local float *) mem_44627)[sext_i32_i64(local_tid_45975)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_34569 = sext_i32_i64(ltid_pre_45979);
    int32_t phys_tid_34570 = local_tid_45975;
    int32_t index_primexp_41542 = sext_i64_i32(write_i_34569);
    float write_value_35326 = ((__local float *) mem_44594)[write_i_34569];
    bool cond_35327 = slt32(index_primexp_41542, y_35096);
    int32_t defunc_0_f_res_35328;
    
    if (cond_35327) {
        int32_t i_35329 = add32(x_35090, index_primexp_41542);
        int64_t i_35330 = sext_i32_i64(i_35329);
        int32_t x_35331 = ((__global
                            int32_t *) defunc_4_map_res_mem_44333)[gtid_34536 *
                                                                   N_30123 +
                                                                   i_35330];
        int32_t defunc_0_f_res_t_res_35332 = sub32(x_35331, n_30128);
        
        defunc_0_f_res_35328 = defunc_0_f_res_t_res_35332;
    } else {
        defunc_0_f_res_35328 = -1;
    }
    
    int64_t defunc_0_f_res_35333 = sext_i32_i64(defunc_0_f_res_35328);
    
    if (sle64(0, defunc_0_f_res_35333) && slt64(defunc_0_f_res_35333,
                                                iota32_arg_30510)) {
        ((__local float *) mem_44627)[defunc_0_f_res_35333] = write_value_35326;
    }
    
  error_6:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global float *) mem_44631)[gtid_34536 * iota32_arg_30510 +
                                   sext_i32_i64(local_tid_45975)] = ((__local
                                                                      float *) mem_44627)[sext_i32_i64(local_tid_45975)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global float *) mem_44634)[gtid_34536 * iota32_arg_30510 +
                                   sext_i32_i64(local_tid_45975)] = ((__local
                                                                      float *) mem_44594)[sext_i32_i64(local_tid_45975)];
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_45975 == 0) {
        ((__global int32_t *) mem_44636)[gtid_34536] = fst_breakzq_35322;
    }
    if (local_tid_45975 == 0) {
        ((__global float *) mem_44638)[gtid_34536] = defunc_0_f_res_35174;
    }
    if (local_tid_45975 == 0) {
        ((__global float *) mem_44640)[gtid_34536] = defunc_0_f_res_35285;
    }
    
  error_7:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_35455(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_44698_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_44696_backing_aligned_1,
                                                    __local volatile
                                                    int64_t *mem_44694_backing_aligned_2,
                                                    __local volatile
                                                    int64_t *mem_44692_backing_aligned_3,
                                                    __local volatile
                                                    int64_t *mem_44690_backing_aligned_4,
                                                    __local volatile
                                                    int64_t *mem_44688_backing_aligned_5,
                                                    int64_t m_30124,
                                                    int64_t iota32_arg_30510,
                                                    int64_t i_30543,
                                                    int32_t defunc_2_radix_sort_step_arg_36361,
                                                    int32_t defunc_0_get_bit_arg_36362,
                                                    unsigned char cond_f_res_36363,
                                                    unsigned char cond_f_res_36364,
                                                    __global
                                                    unsigned char *mem_param_44679,
                                                    __global
                                                    unsigned char *mem_44684,
                                                    __global
                                                    unsigned char *mem_44702)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44698_backing_5 = (__local volatile
                                                           char *) mem_44698_backing_aligned_0;
    __local volatile char *restrict mem_44696_backing_4 = (__local volatile
                                                           char *) mem_44696_backing_aligned_1;
    __local volatile char *restrict mem_44694_backing_3 = (__local volatile
                                                           char *) mem_44694_backing_aligned_2;
    __local volatile char *restrict mem_44692_backing_2 = (__local volatile
                                                           char *) mem_44692_backing_aligned_3;
    __local volatile char *restrict mem_44690_backing_1 = (__local volatile
                                                           char *) mem_44690_backing_aligned_4;
    __local volatile char *restrict mem_44688_backing_0 = (__local volatile
                                                           char *) mem_44688_backing_aligned_5;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46202;
    int32_t local_tid_46203;
    int64_t group_sizze_46206;
    int32_t wave_sizze_46205;
    int32_t group_tid_46204;
    
    global_tid_46202 = get_global_id(0);
    local_tid_46203 = get_local_id(0);
    group_sizze_46206 = get_local_size(0);
    wave_sizze_46205 = LOCKSTEP_WIDTH;
    group_tid_46204 = get_group_id(0);
    
    int32_t phys_tid_35455;
    
    phys_tid_35455 = group_tid_46204;
    
    int32_t ltid_pre_46207;
    
    ltid_pre_46207 = local_tid_46203;
    
    int64_t gtid_35448;
    
    gtid_35448 = sext_i32_i64(group_tid_46204);
    
    __local char *mem_44688;
    
    mem_44688 = (__local char *) mem_44688_backing_0;
    
    __local char *mem_44690;
    
    mem_44690 = (__local char *) mem_44690_backing_1;
    
    __local char *mem_44692;
    
    mem_44692 = (__local char *) mem_44692_backing_2;
    
    __local char *mem_44694;
    
    mem_44694 = (__local char *) mem_44694_backing_3;
    
    __local char *mem_44696;
    
    mem_44696 = (__local char *) mem_44696_backing_4;
    
    int64_t gtid_35451 = sext_i32_i64(ltid_pre_46207);
    int32_t phys_tid_35452 = local_tid_46203;
    float x_36394 = ((__global float *) mem_param_44679)[gtid_35448 *
                                                         iota32_arg_30510 +
                                                         gtid_35451];
    int32_t i32_arg_36395;
    
    i32_arg_36395 = futrts_to_bits32(x_36394);
    
    int32_t unsign_arg_36396 = ashr32(i32_arg_36395,
                                      defunc_0_get_bit_arg_36362);
    int32_t unsign_arg_36397 = 1 & unsign_arg_36396;
    int32_t unsign_arg_36398 = ashr32(i32_arg_36395, 31);
    int32_t unsign_arg_36399 = 1 & unsign_arg_36398;
    bool cond_36400 = unsign_arg_36399 == 1;
    bool x_36401 = !cond_36400;
    bool y_36402 = cond_f_res_36363 && x_36401;
    bool cond_36403 = cond_36400 || y_36402;
    int32_t defunc_1_get_bit_res_36404;
    
    if (cond_36403) {
        int32_t defunc_1_get_bit_res_t_res_36405 = 1 ^ unsign_arg_36397;
        
        defunc_1_get_bit_res_36404 = defunc_1_get_bit_res_t_res_36405;
    } else {
        defunc_1_get_bit_res_36404 = unsign_arg_36397;
    }
    
    int32_t x_36406 = mul32(2, defunc_1_get_bit_res_36404);
    int32_t unsign_arg_36407 = ashr32(i32_arg_36395,
                                      defunc_2_radix_sort_step_arg_36361);
    int32_t unsign_arg_36408 = 1 & unsign_arg_36407;
    bool y_36409 = cond_f_res_36364 && x_36401;
    bool cond_36410 = cond_36400 || y_36409;
    int32_t defunc_1_get_bit_res_36411;
    
    if (cond_36410) {
        int32_t defunc_1_get_bit_res_t_res_36412 = 1 ^ unsign_arg_36408;
        
        defunc_1_get_bit_res_36411 = defunc_1_get_bit_res_t_res_36412;
    } else {
        defunc_1_get_bit_res_36411 = unsign_arg_36408;
    }
    
    int32_t defunc_0_f_res_36413 = add32(x_36406, defunc_1_get_bit_res_36411);
    bool cond_36414 = defunc_0_f_res_36413 == 0;
    int64_t defunc_0_f_res_36415 = btoi_bool_i64(cond_36414);
    int64_t defunc_0_f_res_36416;
    int64_t defunc_0_f_res_36417;
    int64_t defunc_0_f_res_36418;
    
    if (cond_36414) {
        defunc_0_f_res_36416 = 0;
        defunc_0_f_res_36417 = 0;
        defunc_0_f_res_36418 = 0;
    } else {
        bool cond_36419 = defunc_0_f_res_36413 == 1;
        int64_t defunc_0_f_res_f_res_36420 = btoi_bool_i64(cond_36419);
        int64_t defunc_0_f_res_f_res_36421;
        int64_t defunc_0_f_res_f_res_36422;
        
        if (cond_36419) {
            defunc_0_f_res_f_res_36421 = 0;
            defunc_0_f_res_f_res_36422 = 0;
        } else {
            bool cond_36423 = defunc_0_f_res_36413 == 2;
            int64_t defunc_0_f_res_f_res_f_res_36424 =
                    btoi_bool_i64(cond_36423);
            bool cond_neg_36425 = !cond_36423;
            int64_t defunc_0_f_res_f_res_f_res_36426 =
                    btoi_bool_i64(cond_neg_36425);
            
            defunc_0_f_res_f_res_36421 = defunc_0_f_res_f_res_f_res_36424;
            defunc_0_f_res_f_res_36422 = defunc_0_f_res_f_res_f_res_36426;
        }
        defunc_0_f_res_36416 = defunc_0_f_res_f_res_36420;
        defunc_0_f_res_36417 = defunc_0_f_res_f_res_36421;
        defunc_0_f_res_36418 = defunc_0_f_res_f_res_36422;
    }
    ((__local int64_t *) mem_44688)[gtid_35451] = defunc_0_f_res_36415;
    ((__local int64_t *) mem_44690)[gtid_35451] = defunc_0_f_res_36416;
    ((__local int64_t *) mem_44692)[gtid_35451] = defunc_0_f_res_36417;
    ((__local int64_t *) mem_44694)[gtid_35451] = defunc_0_f_res_36418;
    ((__local int32_t *) mem_44696)[gtid_35451] = defunc_0_f_res_36413;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_46208;
    
    dims_flat_46208 = iota32_arg_30510;
    
    int64_t x_36382;
    int64_t x_36383;
    int64_t x_36384;
    int64_t x_36385;
    int64_t x_36386;
    int64_t x_36387;
    int64_t x_36388;
    int64_t x_36389;
    int64_t x_46213;
    int64_t x_46214;
    int64_t x_46215;
    int64_t x_46216;
    int64_t x_46217;
    int64_t x_46218;
    int64_t x_46219;
    int64_t x_46220;
    bool ltid_in_bounds_46225;
    
    ltid_in_bounds_46225 = slt64(sext_i32_i64(local_tid_46203),
                                 iota32_arg_30510);
    
    int32_t skip_threads_46226;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_46225) {
            x_36386 = ((volatile __local
                        int64_t *) mem_44688)[sext_i32_i64(local_tid_46203)];
            x_36387 = ((volatile __local
                        int64_t *) mem_44690)[sext_i32_i64(local_tid_46203)];
            x_36388 = ((volatile __local
                        int64_t *) mem_44692)[sext_i32_i64(local_tid_46203)];
            x_36389 = ((volatile __local
                        int64_t *) mem_44694)[sext_i32_i64(local_tid_46203)];
            if ((local_tid_46203 - squot32(local_tid_46203, 32) * 32) == 0) {
                x_36382 = x_36386;
                x_36383 = x_36387;
                x_36384 = x_36388;
                x_36385 = x_36389;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_46226 = 1;
        while (slt32(skip_threads_46226, 32)) {
            if (sle32(skip_threads_46226, local_tid_46203 -
                      squot32(local_tid_46203, 32) * 32) &&
                ltid_in_bounds_46225) {
                // read operands
                {
                    x_36382 = ((volatile __local
                                int64_t *) mem_44688)[sext_i32_i64(local_tid_46203) -
                                                      sext_i32_i64(skip_threads_46226)];
                    x_36383 = ((volatile __local
                                int64_t *) mem_44690)[sext_i32_i64(local_tid_46203) -
                                                      sext_i32_i64(skip_threads_46226)];
                    x_36384 = ((volatile __local
                                int64_t *) mem_44692)[sext_i32_i64(local_tid_46203) -
                                                      sext_i32_i64(skip_threads_46226)];
                    x_36385 = ((volatile __local
                                int64_t *) mem_44694)[sext_i32_i64(local_tid_46203) -
                                                      sext_i32_i64(skip_threads_46226)];
                }
                // perform operation
                {
                    bool inactive_46227 =
                         slt64(srem64(sext_i32_i64(local_tid_46203),
                                      iota32_arg_30510),
                               sext_i32_i64(local_tid_46203) -
                               sext_i32_i64(local_tid_46203 -
                               skip_threads_46226));
                    
                    if (inactive_46227) {
                        x_36382 = x_36386;
                        x_36383 = x_36387;
                        x_36384 = x_36388;
                        x_36385 = x_36389;
                    }
                    if (!inactive_46227) {
                        int64_t defunc_1_op_res_36390 = add64(x_36382, x_36386);
                        int64_t defunc_1_op_res_36391 = add64(x_36383, x_36387);
                        int64_t defunc_1_op_res_36392 = add64(x_36384, x_36388);
                        int64_t defunc_1_op_res_36393 = add64(x_36385, x_36389);
                        
                        x_36382 = defunc_1_op_res_36390;
                        x_36383 = defunc_1_op_res_36391;
                        x_36384 = defunc_1_op_res_36392;
                        x_36385 = defunc_1_op_res_36393;
                    }
                }
            }
            if (sle32(wave_sizze_46205, skip_threads_46226)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_46226, local_tid_46203 -
                      squot32(local_tid_46203, 32) * 32) &&
                ltid_in_bounds_46225) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_44688)[sext_i32_i64(local_tid_46203)] =
                        x_36382;
                    x_36386 = x_36382;
                    ((volatile __local
                      int64_t *) mem_44690)[sext_i32_i64(local_tid_46203)] =
                        x_36383;
                    x_36387 = x_36383;
                    ((volatile __local
                      int64_t *) mem_44692)[sext_i32_i64(local_tid_46203)] =
                        x_36384;
                    x_36388 = x_36384;
                    ((volatile __local
                      int64_t *) mem_44694)[sext_i32_i64(local_tid_46203)] =
                        x_36385;
                    x_36389 = x_36385;
                }
            }
            if (sle32(wave_sizze_46205, skip_threads_46226)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_46226 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_46203 - squot32(local_tid_46203, 32) * 32) == 31 &&
            ltid_in_bounds_46225) {
            ((volatile __local
              int64_t *) mem_44688)[sext_i32_i64(squot32(local_tid_46203,
                                                         32))] = x_36382;
            ((volatile __local
              int64_t *) mem_44690)[sext_i32_i64(squot32(local_tid_46203,
                                                         32))] = x_36383;
            ((volatile __local
              int64_t *) mem_44692)[sext_i32_i64(squot32(local_tid_46203,
                                                         32))] = x_36384;
            ((volatile __local
              int64_t *) mem_44694)[sext_i32_i64(squot32(local_tid_46203,
                                                         32))] = x_36385;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_46228;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_46203, 32) == 0 && ltid_in_bounds_46225) {
                x_46217 = ((volatile __local
                            int64_t *) mem_44688)[sext_i32_i64(local_tid_46203)];
                x_46218 = ((volatile __local
                            int64_t *) mem_44690)[sext_i32_i64(local_tid_46203)];
                x_46219 = ((volatile __local
                            int64_t *) mem_44692)[sext_i32_i64(local_tid_46203)];
                x_46220 = ((volatile __local
                            int64_t *) mem_44694)[sext_i32_i64(local_tid_46203)];
                if ((local_tid_46203 - squot32(local_tid_46203, 32) * 32) ==
                    0) {
                    x_46213 = x_46217;
                    x_46214 = x_46218;
                    x_46215 = x_46219;
                    x_46216 = x_46220;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_46228 = 1;
            while (slt32(skip_threads_46228, 32)) {
                if (sle32(skip_threads_46228, local_tid_46203 -
                          squot32(local_tid_46203, 32) * 32) &&
                    (squot32(local_tid_46203, 32) == 0 &&
                     ltid_in_bounds_46225)) {
                    // read operands
                    {
                        x_46213 = ((volatile __local
                                    int64_t *) mem_44688)[sext_i32_i64(local_tid_46203) -
                                                          sext_i32_i64(skip_threads_46228)];
                        x_46214 = ((volatile __local
                                    int64_t *) mem_44690)[sext_i32_i64(local_tid_46203) -
                                                          sext_i32_i64(skip_threads_46228)];
                        x_46215 = ((volatile __local
                                    int64_t *) mem_44692)[sext_i32_i64(local_tid_46203) -
                                                          sext_i32_i64(skip_threads_46228)];
                        x_46216 = ((volatile __local
                                    int64_t *) mem_44694)[sext_i32_i64(local_tid_46203) -
                                                          sext_i32_i64(skip_threads_46228)];
                    }
                    // perform operation
                    {
                        bool inactive_46229 =
                             slt64(srem64(sext_i32_i64(local_tid_46203 * 32 +
                                          32 - 1), iota32_arg_30510),
                                   sext_i32_i64(local_tid_46203 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_46203 -
                                                 skip_threads_46228) * 32 + 32 -
                                   1));
                        
                        if (inactive_46229) {
                            x_46213 = x_46217;
                            x_46214 = x_46218;
                            x_46215 = x_46219;
                            x_46216 = x_46220;
                        }
                        if (!inactive_46229) {
                            int64_t defunc_1_op_res_46221 = add64(x_46213,
                                                                  x_46217);
                            int64_t defunc_1_op_res_46222 = add64(x_46214,
                                                                  x_46218);
                            int64_t defunc_1_op_res_46223 = add64(x_46215,
                                                                  x_46219);
                            int64_t defunc_1_op_res_46224 = add64(x_46216,
                                                                  x_46220);
                            
                            x_46213 = defunc_1_op_res_46221;
                            x_46214 = defunc_1_op_res_46222;
                            x_46215 = defunc_1_op_res_46223;
                            x_46216 = defunc_1_op_res_46224;
                        }
                    }
                }
                if (sle32(wave_sizze_46205, skip_threads_46228)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_46228, local_tid_46203 -
                          squot32(local_tid_46203, 32) * 32) &&
                    (squot32(local_tid_46203, 32) == 0 &&
                     ltid_in_bounds_46225)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_44688)[sext_i32_i64(local_tid_46203)] =
                            x_46213;
                        x_46217 = x_46213;
                        ((volatile __local
                          int64_t *) mem_44690)[sext_i32_i64(local_tid_46203)] =
                            x_46214;
                        x_46218 = x_46214;
                        ((volatile __local
                          int64_t *) mem_44692)[sext_i32_i64(local_tid_46203)] =
                            x_46215;
                        x_46219 = x_46215;
                        ((volatile __local
                          int64_t *) mem_44694)[sext_i32_i64(local_tid_46203)] =
                            x_46216;
                        x_46220 = x_46216;
                    }
                }
                if (sle32(wave_sizze_46205, skip_threads_46228)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_46228 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_46203, 32) == 0 || !ltid_in_bounds_46225)) {
            // read operands
            {
                x_36386 = x_36382;
                x_36387 = x_36383;
                x_36388 = x_36384;
                x_36389 = x_36385;
                x_36382 = ((__local
                            int64_t *) mem_44688)[sext_i32_i64(squot32(local_tid_46203,
                                                                       32)) -
                                                  1];
                x_36383 = ((__local
                            int64_t *) mem_44690)[sext_i32_i64(squot32(local_tid_46203,
                                                                       32)) -
                                                  1];
                x_36384 = ((__local
                            int64_t *) mem_44692)[sext_i32_i64(squot32(local_tid_46203,
                                                                       32)) -
                                                  1];
                x_36385 = ((__local
                            int64_t *) mem_44694)[sext_i32_i64(squot32(local_tid_46203,
                                                                       32)) -
                                                  1];
            }
            // perform operation
            {
                bool inactive_46230 =
                     slt64(srem64(sext_i32_i64(local_tid_46203),
                                  iota32_arg_30510),
                           sext_i32_i64(local_tid_46203) -
                           sext_i32_i64(squot32(local_tid_46203, 32) * 32 - 1));
                
                if (inactive_46230) {
                    x_36382 = x_36386;
                    x_36383 = x_36387;
                    x_36384 = x_36388;
                    x_36385 = x_36389;
                }
                if (!inactive_46230) {
                    int64_t defunc_1_op_res_36390 = add64(x_36382, x_36386);
                    int64_t defunc_1_op_res_36391 = add64(x_36383, x_36387);
                    int64_t defunc_1_op_res_36392 = add64(x_36384, x_36388);
                    int64_t defunc_1_op_res_36393 = add64(x_36385, x_36389);
                    
                    x_36382 = defunc_1_op_res_36390;
                    x_36383 = defunc_1_op_res_36391;
                    x_36384 = defunc_1_op_res_36392;
                    x_36385 = defunc_1_op_res_36393;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_44688)[sext_i32_i64(local_tid_46203)] =
                    x_36382;
                ((__local int64_t *) mem_44690)[sext_i32_i64(local_tid_46203)] =
                    x_36383;
                ((__local int64_t *) mem_44692)[sext_i32_i64(local_tid_46203)] =
                    x_36384;
                ((__local int64_t *) mem_44694)[sext_i32_i64(local_tid_46203)] =
                    x_36385;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_46203, 32) == 0) {
            ((__local int64_t *) mem_44688)[sext_i32_i64(local_tid_46203)] =
                x_36386;
            ((__local int64_t *) mem_44690)[sext_i32_i64(local_tid_46203)] =
                x_36387;
            ((__local int64_t *) mem_44692)[sext_i32_i64(local_tid_46203)] =
                x_36388;
            ((__local int64_t *) mem_44694)[sext_i32_i64(local_tid_46203)] =
                x_36389;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_36427 = ((__local int64_t *) mem_44688)[i_30543];
    int64_t last_res_36428 = ((__local int64_t *) mem_44690)[i_30543];
    int64_t last_res_36429 = ((__local int64_t *) mem_44692)[i_30543];
    __local char *mem_44698;
    
    mem_44698 = (__local char *) mem_44698_backing_5;
    ((__local float *) mem_44698)[sext_i32_i64(local_tid_46203)] = ((__global
                                                                     float *) mem_44684)[gtid_35448 +
                                                                                         sext_i32_i64(local_tid_46203) *
                                                                                         m_30124];
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_35453 = sext_i32_i64(ltid_pre_46207);
    int32_t phys_tid_35454 = local_tid_46203;
    int32_t x_36432 = ((__local int32_t *) mem_44696)[write_i_35453];
    float write_value_36437 = ((__global float *) mem_param_44679)[gtid_35448 *
                                                                   iota32_arg_30510 +
                                                                   write_i_35453];
    bool match_lit_36438 = 0 == x_36432;
    int64_t defunc_1_f_res_36439;
    
    if (match_lit_36438) {
        int64_t x_36433 = ((__local int64_t *) mem_44688)[write_i_35453];
        int64_t case_res_36440 = sub64(x_36433, 1);
        
        defunc_1_f_res_36439 = case_res_36440;
    } else {
        int64_t x_36434 = ((__local int64_t *) mem_44690)[write_i_35453];
        int64_t x_36435 = ((__local int64_t *) mem_44692)[write_i_35453];
        int64_t x_36436 = ((__local int64_t *) mem_44694)[write_i_35453];
        bool match_lit_36441 = 1 == x_36432;
        int64_t x_36442;
        
        if (match_lit_36441) {
            int64_t x_36443 = add64(last_res_36427, x_36434);
            int64_t case_res_36444 = sub64(x_36443, 1);
            
            x_36442 = case_res_36444;
        } else {
            bool match_lit_36445 = 2 == x_36432;
            int64_t x_36446;
            
            if (match_lit_36445) {
                int64_t x_36447 = add64(last_res_36427, last_res_36428);
                int64_t x_36448 = add64(x_36435, x_36447);
                int64_t case_res_36449 = sub64(x_36448, 1);
                
                x_36446 = case_res_36449;
            } else {
                int64_t x_36450 = add64(last_res_36427, last_res_36428);
                int64_t x_36451 = add64(last_res_36429, x_36450);
                int64_t x_36452 = add64(x_36436, x_36451);
                int64_t defunc_1_f_res_res_36453 = sub64(x_36452, 1);
                
                x_36446 = defunc_1_f_res_res_36453;
            }
            x_36442 = x_36446;
        }
        defunc_1_f_res_36439 = x_36442;
    }
    if (sle64(0, defunc_1_f_res_36439) && slt64(defunc_1_f_res_36439,
                                                iota32_arg_30510)) {
        ((__local float *) mem_44698)[defunc_1_f_res_36439] = write_value_36437;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global float *) mem_44702)[gtid_35448 * iota32_arg_30510 +
                                   sext_i32_i64(local_tid_46203)] = ((__local
                                                                      float *) mem_44698)[sext_i32_i64(local_tid_46203)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_41641(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43631_backing_aligned_0,
                                                    int64_t m_30124,
                                                    int32_t n_30128,
                                                    int64_t i32_res_30143,
                                                    int64_t Ty_41629,
                                                    int64_t Tx_41630,
                                                    int64_t gridDim_x_41631,
                                                    int64_t gridDim_y_41632,
                                                    int64_t group_sizze_41636,
                                                    int64_t count_shmem_41637,
                                                    __global
                                                    unsigned char *mem_43544,
                                                    __global
                                                    unsigned char *mem_43548,
                                                    __global
                                                    unsigned char *mem_43619,
                                                    __global
                                                    unsigned char *mem_43679)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43631_backing_0 = (__local volatile
                                                           char *) mem_43631_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45053;
    int32_t local_tid_45054;
    int64_t group_sizze_45057;
    int32_t wave_sizze_45056;
    int32_t group_tid_45055;
    
    global_tid_45053 = get_global_id(0);
    local_tid_45054 = get_local_id(0);
    group_sizze_45057 = get_local_size(0);
    wave_sizze_45056 = LOCKSTEP_WIDTH;
    group_tid_45055 = get_group_id(0);
    
    int32_t gid_flat_41641;
    
    gid_flat_41641 = group_tid_45055;
    
    int32_t ltid_pre_45058;
    
    ltid_pre_45058 = squot32(local_tid_45054, sext_i64_i32(Ty_41629) *
                             sext_i64_i32(Tx_41630));
    
    int32_t ltid_pre_45059;
    
    ltid_pre_45059 = squot32(local_tid_45054 - squot32(local_tid_45054,
                                                       sext_i64_i32(Ty_41629) *
                                                       sext_i64_i32(Tx_41630)) *
                             (sext_i64_i32(Ty_41629) * sext_i64_i32(Tx_41630)),
                             sext_i64_i32(Tx_41630));
    
    int32_t ltid_pre_45060;
    
    ltid_pre_45060 = local_tid_45054 - squot32(local_tid_45054,
                                               sext_i64_i32(Ty_41629) *
                                               sext_i64_i32(Tx_41630)) *
        (sext_i64_i32(Ty_41629) * sext_i64_i32(Tx_41630)) -
        squot32(local_tid_45054 - squot32(local_tid_45054,
                                          sext_i64_i32(Ty_41629) *
                                          sext_i64_i32(Tx_41630)) *
                (sext_i64_i32(Ty_41629) * sext_i64_i32(Tx_41630)),
                sext_i64_i32(Tx_41630)) * sext_i64_i32(Tx_41630);
    
    int32_t ltid_pre_45061;
    
    ltid_pre_45061 = squot32(local_tid_45054, sext_i64_i32(Tx_41630));
    
    int32_t ltid_pre_45062;
    
    ltid_pre_45062 = local_tid_45054 - squot32(local_tid_45054,
                                               sext_i64_i32(Tx_41630)) *
        sext_i64_i32(Tx_41630);
    
    int32_t ltid_pre_45063;
    
    ltid_pre_45063 = local_tid_45054;
    
    int64_t gid_zz_41640;
    
    gid_zz_41640 = squot64(sext_i32_i64(group_tid_45055), gridDim_y_41632 *
                           gridDim_x_41631);
    
    int64_t gid_y_41639;
    
    gid_y_41639 = squot64(sext_i32_i64(group_tid_45055) -
                          squot64(sext_i32_i64(group_tid_45055),
                                  gridDim_y_41632 * gridDim_x_41631) *
                          (gridDim_y_41632 * gridDim_x_41631), gridDim_x_41631);
    
    int64_t gid_x_41638;
    
    gid_x_41638 = sext_i32_i64(group_tid_45055) -
        squot64(sext_i32_i64(group_tid_45055), gridDim_y_41632 *
                gridDim_x_41631) * (gridDim_y_41632 * gridDim_x_41631) -
        squot64(sext_i32_i64(group_tid_45055) -
                squot64(sext_i32_i64(group_tid_45055), gridDim_y_41632 *
                        gridDim_x_41631) * (gridDim_y_41632 * gridDim_x_41631),
                gridDim_x_41631) * gridDim_x_41631;
    
    int64_t ii_41642;
    
    ii_41642 = 30 * gid_zz_41640;
    
    int64_t jj1_41643 = Ty_41629 * gid_y_41639;
    int64_t jj2_41644 = Tx_41630 * gid_x_41638;
    float mem_43629[30];
    int64_t ltid_y_41647 = sext_i32_i64(ltid_pre_45061);
    int64_t ltid_x_41645 = sext_i32_i64(ltid_pre_45062);
    int32_t ltid_flat_41646 = local_tid_45054;
    float mem_43623[30];
    
    for (int32_t i_43384 = 0; i_43384 < 30; i_43384++) {
        int64_t i_41655 = sext_i32_i64(i_43384);
        
        mem_43623[i_41655] = 0.0F;
    }
    for (int64_t i_45065 = 0; i_45065 < 30; i_45065++) {
        mem_43629[i_45065] = mem_43623[i_45065];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43631;
    
    mem_43631 = (__local char *) mem_43631_backing_0;
    
    float loop_mem_43661[30];
    float mem_param_43632[30];
    
    for (int32_t i_1 = 0; i_1 < 30; i_1++)
        mem_param_43632[i_1] = mem_43629[i_1];
    for (int32_t i_43386 = 0; i_43386 < n_30128; i_43386++) {
        int64_t i_41660 = sext_i32_i64(i_43386);
        
        for (int64_t i_41663 = 0; i_41663 < count_shmem_41637; i_41663++) {
            int64_t offs_41676 = group_sizze_41636 * i_41663;
            int64_t ltid_41666 = sext_i32_i64(ltid_pre_45063);
            int32_t ltid_flat_41665 = local_tid_45054;
            int64_t loc_ind_41677 = ltid_41666 + offs_41676;
            int64_t gtid_41678 = ii_41642 + loc_ind_41677;
            bool cond_41679 = slt64(gtid_41678, m_30124);
            float y_elem_41680;
            
            if (cond_41679) {
                float Y_elem_41682 = ((__global float *) mem_43619)[i_41660 *
                                                                    m_30124 +
                                                                    gtid_41678];
                
                y_elem_41680 = Y_elem_41682;
            } else {
                y_elem_41680 = 0.0F;
            }
            
            bool cond_41684 = slt64(loc_ind_41677, 30);
            int64_t y_loc_ind_41685;
            
            if (cond_41684) {
                y_loc_ind_41685 = loc_ind_41677;
            } else {
                y_loc_ind_41685 = -1;
            }
            if (sle64(0, y_loc_ind_41685) && slt64(y_loc_ind_41685, 30)) {
                ((__local float *) mem_43631)[y_loc_ind_41685] = y_elem_41680;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
        
        float mem_43660[30];
        int64_t ltid_y_41691 = sext_i32_i64(ltid_pre_45061);
        int64_t ltid_x_41689 = sext_i32_i64(ltid_pre_45062);
        int32_t ltid_flat_41690 = local_tid_45054;
        int64_t gtid_41718 = jj1_41643 + ltid_y_41691;
        int64_t gtid_41719 = jj2_41644 + ltid_x_41689;
        bool binop_x_41721 = slt64(gtid_41718, i32_res_30143);
        bool binop_y_41722 = slt64(gtid_41719, i32_res_30143);
        bool cond_41723 = binop_x_41721 && binop_y_41722;
        float mem_44761[30];
        
        if (cond_41723) {
            float x_41726 = ((__global float *) mem_43544)[i_41660 *
                                                           i32_res_30143 +
                                                           gtid_41718];
            float x_41728 = ((__global float *) mem_43548)[i_41660 *
                                                           i32_res_30143 +
                                                           gtid_41719];
            
            for (int32_t i_43385 = 0; i_43385 < 30; i_43385++) {
                int64_t i_41730 = sext_i32_i64(i_43385);
                int64_t gtid_41732 = ii_41642 + i_41730;
                bool cond_41733 = slt64(gtid_41732, m_30124);
                
                if (cond_41733) {
                    float inp_reg_var2zz_41735 = ((__local
                                                   float *) mem_43631)[i_41730];
                    float res_reg_var2zz_41736 = mem_param_43632[i_41730];
                    float x_41740 = x_41726 * x_41728;
                    bool isnan_res_41741;
                    
                    isnan_res_41741 = futrts_isnan32(inp_reg_var2zz_41735);
                    
                    float y_41742;
                    
                    if (isnan_res_41741) {
                        y_41742 = 0.0F;
                    } else {
                        y_41742 = 1.0F;
                    }
                    
                    float defunc_2_f_res_41743 = x_41740 * y_41742;
                    float defunc_1_op_res_41747 = res_reg_var2zz_41736 +
                          defunc_2_f_res_41743;
                    
                    mem_param_43632[i_41730] = defunc_1_op_res_41747;
                }
            }
            for (int64_t i_45071 = 0; i_45071 < 30; i_45071++) {
                mem_44761[i_45071] = mem_param_43632[i_45071];
            }
        } else {
            for (int64_t i_45072 = 0; i_45072 < 30; i_45072++) {
                mem_44761[i_45072] = mem_param_43632[i_45072];
            }
        }
        for (int64_t i_45073 = 0; i_45073 < 30; i_45073++) {
            mem_43660[i_45073] = mem_44761[i_45073];
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45066[30];
        
        for (int32_t i_2 = 0; i_2 < 30; i_2++)
            mem_param_tmp_45066[i_2] = mem_43660[i_2];
        for (int32_t i_3 = 0; i_3 < 30; i_3++)
            mem_param_43632[i_3] = mem_param_tmp_45066[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 30; i_4++)
        loop_mem_43661[i_4] = mem_param_43632[i_4];
    
    float mem_43675[30 * 1 * 1];
    int64_t ltid_zz_41756 = sext_i32_i64(ltid_pre_45058);
    int64_t ltid_y_41755 = sext_i32_i64(ltid_pre_45059);
    int64_t ltid_x_41753 = sext_i32_i64(ltid_pre_45060);
    int32_t ltid_flat_41754 = local_tid_45054;
    float mem_43669[30 * 1 * 1];
    
    for (int32_t i_43388 = 0; i_43388 < 30; i_43388++) {
        int64_t i_41765 = sext_i32_i64(i_43388);
        
        for (int64_t i_45075 = 0; i_45075 < 1; i_45075++) {
            mem_43669[i_41765 + i_45075] = loop_mem_43661[i_41765 + i_45075];
        }
    }
    for (int64_t i_45076 = 0; i_45076 < 30; i_45076++) {
        for (int64_t i_45077 = 0; i_45077 < 1; i_45077++) {
            for (int64_t i_45078 = 0; i_45078 < 1; i_45078++) {
                mem_43675[i_45076 + i_45077 + i_45078] = mem_43669[i_45076 +
                                                                   i_45077 +
                                                                   i_45078];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t reg_tile_i_45079 = squot64(sext_i32_i64(local_tid_45054), Ty_41629 *
                                       Tx_41630);
    int64_t reg_tile_i_45080 = squot64(sext_i32_i64(local_tid_45054) -
                                       squot64(sext_i32_i64(local_tid_45054),
                                               Ty_41629 * Tx_41630) *
                                       (Ty_41629 * Tx_41630), Tx_41630);
    int64_t reg_tile_i_45081 = sext_i32_i64(local_tid_45054) -
            squot64(sext_i32_i64(local_tid_45054), Ty_41629 * Tx_41630) *
            (Ty_41629 * Tx_41630) - squot64(sext_i32_i64(local_tid_45054) -
                                            squot64(sext_i32_i64(local_tid_45054),
                                                    Ty_41629 * Tx_41630) *
                                            (Ty_41629 * Tx_41630), Tx_41630) *
            Tx_41630;
    int64_t tile_dim_start_45082 = 30 * (gid_zz_41640 + reg_tile_i_45079);
    int64_t tile_dim_start_45083 = Ty_41629 * gid_y_41639 + reg_tile_i_45080;
    int64_t tile_dim_start_45084 = Tx_41630 * gid_x_41638 + reg_tile_i_45081;
    
    for (int64_t nest_i_45085 = 0; nest_i_45085 < 30; nest_i_45085++) {
        for (int64_t nest_i_45086 = 0; nest_i_45086 < 1; nest_i_45086++) {
            for (int64_t nest_i_45087 = 0; nest_i_45087 < 1; nest_i_45087++) {
                if ((slt64(tile_dim_start_45082 + nest_i_45085, m_30124) &&
                     slt64(tile_dim_start_45083 + nest_i_45086,
                           i32_res_30143)) && slt64(tile_dim_start_45084 +
                                                    nest_i_45087,
                                                    i32_res_30143)) {
                    ((__global float *) mem_43679)[(tile_dim_start_45082 +
                                                    nest_i_45085) *
                                                   (i32_res_30143 *
                                                    i32_res_30143) +
                                                   (tile_dim_start_45083 +
                                                    nest_i_45086) *
                                                   i32_res_30143 +
                                                   (tile_dim_start_45084 +
                                                    nest_i_45087)] =
                        mem_43675[nest_i_45085 + nest_i_45086 + nest_i_45087];
                }
            }
        }
    }
    
  error_4:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_41794(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43822_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43820_backing_aligned_1,
                                                    int64_t m_30124,
                                                    int64_t N_30125,
                                                    int64_t i32_res_30137,
                                                    int64_t i32_res_30143,
                                                    int64_t gridDim_x_41788,
                                                    int64_t full_tiles_41819,
                                                    int64_t kk_42026, __global
                                                    unsigned char *images_mem_43532,
                                                    __global
                                                    unsigned char *mem_43544,
                                                    __global
                                                    unsigned char *mem_43994)
{
    #define Ty_41775 (mainDetailedziTy_41772)
    #define Ry_41776 (mainDetailedziRy_41774)
    #define Tx_41777 (mainDetailedziTx_41771)
    #define Rx_41778 (mainDetailedziRx_41773)
    #define Tk_41779 (mainDetailedziTk_41770)
    #define tk_div_tx_41780 (sdiv_up64(mainDetailedziTk_41770, mainDetailedziTx_41771))
    #define tk_div_ty_41781 (sdiv_up64(mainDetailedziTk_41770, mainDetailedziTy_41772))
    #define TxRx_41782 (mainDetailedziTx_41771 * mainDetailedziRx_41773)
    #define TyRy_41783 (mainDetailedziTy_41772 * mainDetailedziRy_41774)
    #define a_loc_szz_41785 (mainDetailedziTk_41770 * (mainDetailedziTy_41772 * mainDetailedziRy_41774))
    #define b_loc_szz_41787 (mainDetailedziRx_41773 * (mainDetailedziTx_41771 * mainDetailedziTk_41770))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43822_backing_1 = (__local volatile
                                                           char *) mem_43822_backing_aligned_0;
    __local volatile char *restrict mem_43820_backing_0 = (__local volatile
                                                           char *) mem_43820_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45229;
    int32_t local_tid_45230;
    int64_t group_sizze_45233;
    int32_t wave_sizze_45232;
    int32_t group_tid_45231;
    
    global_tid_45229 = get_global_id(0);
    local_tid_45230 = get_local_id(0);
    group_sizze_45233 = get_local_size(0);
    wave_sizze_45232 = LOCKSTEP_WIDTH;
    group_tid_45231 = get_group_id(0);
    
    int32_t gid_flat_41794;
    
    gid_flat_41794 = group_tid_45231;
    
    int32_t ltid_pre_45234;
    
    ltid_pre_45234 = squot32(local_tid_45230, sext_i64_i32(Tx_41777));
    
    int32_t ltid_pre_45235;
    
    ltid_pre_45235 = local_tid_45230 - squot32(local_tid_45230,
                                               sext_i64_i32(Tx_41777)) *
        sext_i64_i32(Tx_41777);
    
    int64_t gid_y_41793;
    
    gid_y_41793 = squot64(sext_i32_i64(group_tid_45231), gridDim_x_41788);
    
    int64_t gid_x_41792;
    
    gid_x_41792 = sext_i32_i64(group_tid_45231) -
        squot64(sext_i32_i64(group_tid_45231), gridDim_x_41788) *
        gridDim_x_41788;
    
    int64_t iii_41795;
    
    iii_41795 = TyRy_41783 * gid_y_41793;
    
    int64_t jjj_41796 = TxRx_41782 * gid_x_41792;
    float mem_43818[Ry_41776 * Rx_41778];
    int64_t ltid_y_41799 = sext_i32_i64(ltid_pre_45234);
    int64_t ltid_x_41797 = sext_i32_i64(ltid_pre_45235);
    int32_t ltid_flat_41798 = local_tid_45230;
    float mem_43809[Ry_41776 * Rx_41778];
    
    for (int64_t i_41810 = 0; i_41810 < Ry_41776; i_41810++) {
        for (int64_t i_41813 = 0; i_41813 < Rx_41778; i_41813++) {
            mem_43809[i_41810 * Rx_41778 + i_41813] = 0.0F;
        }
    }
    for (int64_t i_45238 = 0; i_45238 < Ry_41776; i_45238++) {
        for (int64_t i_45239 = 0; i_45239 < Rx_41778; i_45239++) {
            mem_43818[i_45238 * Rx_41778 + i_45239] = mem_43809[i_45238 *
                                                                Rx_41778 +
                                                                i_45239];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43820;
    
    mem_43820 = (__local char *) mem_43820_backing_0;
    
    __local char *mem_43822;
    
    mem_43822 = (__local char *) mem_43822_backing_1;
    
    float mem_43893[Ry_41776];
    float mem_43897[Rx_41778];
    float loop_mem_43909[Ry_41776 * Rx_41778];
    float mem_param_43823[Ry_41776 * Rx_41778];
    
    for (int32_t i_2 = 0; i_2 < Ry_41776 * Rx_41778; i_2++)
        mem_param_43823[i_2] = mem_43818[i_2];
    for (int64_t i_41820 = 0; i_41820 < full_tiles_41819; i_41820++) {
        int64_t kk_41824 = Tk_41779 * i_41820;
        
        for (int64_t i_41825 = 0; i_41825 < Ry_41776; i_41825++) {
            int64_t binop_y_41848 = Ty_41775 * i_41825;
            
            for (int64_t i_41827 = 0; i_41827 < tk_div_tx_41780; i_41827++) {
                int64_t binop_y_41846 = Tx_41777 * i_41827;
                int64_t ltid_x_41829 = sext_i32_i64(ltid_pre_45234);
                int64_t ltid_y_41830 = sext_i32_i64(ltid_pre_45235);
                int32_t ltid_flat_41831 = local_tid_45230;
                int64_t k_41847 = ltid_y_41830 + binop_y_41846;
                int64_t i_41849 = ltid_x_41829 + binop_y_41848;
                int64_t gtid_41850 = iii_41795 + i_41849;
                int64_t A_col_idx_41851 = kk_41824 + k_41847;
                bool cond_41852 = slt64(gtid_41850, m_30124);
                float A_elem_41853;
                
                if (cond_41852) {
                    float A_elem_41855 = ((__global
                                           float *) images_mem_43532)[gtid_41850 *
                                                                      N_30125 +
                                                                      A_col_idx_41851];
                    
                    A_elem_41853 = A_elem_41855;
                } else {
                    A_elem_41853 = 0.0F;
                }
                
                bool cond_41857 = slt64(k_41847, Tk_41779);
                int64_t a_loc_ind_41858;
                
                if (cond_41857) {
                    int64_t binop_y_41859 = Tk_41779 * i_41849;
                    int64_t loc_fi_41860 = k_41847 + binop_y_41859;
                    
                    a_loc_ind_41858 = loc_fi_41860;
                } else {
                    a_loc_ind_41858 = -1;
                }
                if (sle64(0, a_loc_ind_41858) && slt64(a_loc_ind_41858,
                                                       a_loc_szz_41785)) {
                    ((__local float *) mem_43820)[a_loc_ind_41858] =
                        A_elem_41853;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_41865 = 0; i_41865 < tk_div_ty_41781; i_41865++) {
            int64_t binop_y_41886 = Ty_41775 * i_41865;
            
            for (int64_t i_41867 = 0; i_41867 < Rx_41778; i_41867++) {
                int64_t binop_y_41888 = Tx_41777 * i_41867;
                int64_t ltid_x_41869 = sext_i32_i64(ltid_pre_45234);
                int64_t ltid_y_41870 = sext_i32_i64(ltid_pre_45235);
                int32_t ltid_flat_41871 = local_tid_45230;
                int64_t k_41887 = ltid_x_41869 + binop_y_41886;
                int64_t j_41889 = ltid_y_41870 + binop_y_41888;
                int64_t gtid_41890 = jjj_41796 + j_41889;
                int64_t B_row_idx_41891 = kk_41824 + k_41887;
                bool cond_41892 = slt64(gtid_41890, i32_res_30143);
                float B_elem_41893;
                
                if (cond_41892) {
                    float B_elem_41895 = ((__global
                                           float *) mem_43544)[B_row_idx_41891 *
                                                               i32_res_30143 +
                                                               gtid_41890];
                    
                    B_elem_41893 = B_elem_41895;
                } else {
                    B_elem_41893 = 0.0F;
                }
                
                bool cond_41897 = slt64(k_41887, Tk_41779);
                int64_t b_loc_ind_41898;
                
                if (cond_41897) {
                    int64_t binop_y_41899 = TxRx_41782 * k_41887;
                    int64_t loc_fi_41900 = j_41889 + binop_y_41899;
                    
                    b_loc_ind_41898 = loc_fi_41900;
                } else {
                    b_loc_ind_41898 = -1;
                }
                if (sle64(0, b_loc_ind_41898) && slt64(b_loc_ind_41898,
                                                       b_loc_szz_41787)) {
                    ((__local float *) mem_43822)[b_loc_ind_41898] =
                        B_elem_41893;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_43908[Ry_41776 * Rx_41778];
        float mem_param_43880[Ry_41776 * Rx_41778];
        
        for (int32_t i_3 = 0; i_3 < Ry_41776 * Rx_41778; i_3++)
            mem_param_43880[i_3] = mem_param_43823[i_3];
        for (int64_t i_41905 = 0; i_41905 < Tk_41779; i_41905++) {
            int64_t binop_y_41944 = TxRx_41782 * i_41905;
            int64_t ltid_y_41909 = sext_i32_i64(ltid_pre_45234);
            int64_t ltid_x_41907 = sext_i32_i64(ltid_pre_45235);
            int32_t ltid_flat_41908 = local_tid_45230;
            float mem_43883[Ry_41776];
            float mem_43885[Rx_41778];
            int64_t binop_x_41935 = Ry_41776 * ltid_y_41909;
            
            for (int64_t i_41933 = 0; i_41933 < Ry_41776; i_41933++) {
                int64_t binop_x_41936 = i_41933 + binop_x_41935;
                int64_t binop_y_41937 = Tk_41779 * binop_x_41936;
                int64_t a_loc_ind_41938 = i_41905 + binop_y_41937;
                
                for (int64_t i_45251 = 0; i_45251 < 1; i_45251++) {
                    mem_43883[i_41933 + i_45251] = ((__local
                                                     float *) mem_43820)[a_loc_ind_41938 +
                                                                         i_45251];
                }
            }
            
            int64_t binop_y_41946 = Rx_41778 * ltid_x_41907;
            
            for (int64_t i_41942 = 0; i_41942 < Rx_41778; i_41942++) {
                int64_t binop_x_41945 = i_41942 + binop_y_41944;
                int64_t b_loc_ind_41947 = binop_x_41945 + binop_y_41946;
                
                for (int64_t i_45253 = 0; i_45253 < 1; i_45253++) {
                    mem_43885[i_41942 + i_45253] = ((__local
                                                     float *) mem_43822)[b_loc_ind_41947 +
                                                                         i_45253];
                }
            }
            for (int64_t i_45254 = 0; i_45254 < Ry_41776; i_45254++) {
                mem_43893[i_45254] = mem_43883[i_45254];
            }
            for (int64_t i_45255 = 0; i_45255 < Rx_41778; i_45255++) {
                mem_43897[i_45255] = mem_43885[i_45255];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_43907[Ry_41776 * Rx_41778];
            int64_t ltid_y_41954 = sext_i32_i64(ltid_pre_45234);
            int64_t ltid_x_41952 = sext_i32_i64(ltid_pre_45235);
            int32_t ltid_flat_41953 = local_tid_45230;
            int64_t binop_y_41997 = Ry_41776 * ltid_y_41954;
            int64_t binop_y_42001 = Rx_41778 * ltid_x_41952;
            
            for (int64_t i_41991 = 0; i_41991 < Ry_41776; i_41991++) {
                int64_t binop_x_41996 = iii_41795 + i_41991;
                int64_t cmpop_x_41998 = binop_x_41996 + binop_y_41997;
                bool binop_x_41999 = slt64(cmpop_x_41998, m_30124);
                
                for (int64_t i_41994 = 0; i_41994 < Rx_41778; i_41994++) {
                    int64_t binop_x_42000 = jjj_41796 + i_41994;
                    int64_t cmpop_x_42002 = binop_x_42000 + binop_y_42001;
                    bool binop_y_42003 = slt64(cmpop_x_42002, i32_res_30143);
                    bool cond_42004 = binop_x_41999 && binop_y_42003;
                    
                    if (cond_42004) {
                        float a_42006 = mem_43893[i_41991];
                        float c_42008 = mem_param_43880[i_41991 * Rx_41778 +
                                                        i_41994];
                        bool isnan_res_42011;
                        
                        isnan_res_42011 = futrts_isnan32(a_42006);
                        
                        float defunc_1_f_res_42012;
                        
                        if (isnan_res_42011) {
                            defunc_1_f_res_42012 = 0.0F;
                        } else {
                            float b_42007 = mem_43897[i_41994];
                            float defunc_1_f_res_f_res_42013 = a_42006 *
                                  b_42007;
                            
                            defunc_1_f_res_42012 = defunc_1_f_res_f_res_42013;
                        }
                        
                        float defunc_1_op_res_42017 = c_42008 +
                              defunc_1_f_res_42012;
                        
                        mem_param_43880[i_41991 * Rx_41778 + i_41994] =
                            defunc_1_op_res_42017;
                    }
                }
            }
            for (int64_t i_45258 = 0; i_45258 < Ry_41776; i_45258++) {
                for (int64_t i_45259 = 0; i_45259 < Rx_41778; i_45259++) {
                    mem_43907[i_45258 * Rx_41778 + i_45259] =
                        mem_param_43880[i_45258 * Rx_41778 + i_45259];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_45248[Ry_41776 * Rx_41778];
            
            for (int32_t i_4 = 0; i_4 < Ry_41776 * Rx_41778; i_4++)
                mem_param_tmp_45248[i_4] = mem_43907[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_41776 * Rx_41778; i_5++)
                mem_param_43880[i_5] = mem_param_tmp_45248[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_41776 * Rx_41778; i_6++)
            loop_mem_43908[i_6] = mem_param_43880[i_6];
        
        float mem_param_tmp_45240[Ry_41776 * Rx_41778];
        
        for (int32_t i_7 = 0; i_7 < Ry_41776 * Rx_41778; i_7++)
            mem_param_tmp_45240[i_7] = loop_mem_43908[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_41776 * Rx_41778; i_8++)
            mem_param_43823[i_8] = mem_param_tmp_45240[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_41776 * Rx_41778; i_9++)
        loop_mem_43909[i_9] = mem_param_43823[i_9];
    for (int64_t i_42027 = 0; i_42027 < Ry_41776; i_42027++) {
        int64_t binop_y_42052 = Ty_41775 * i_42027;
        
        for (int64_t i_42029 = 0; i_42029 < tk_div_tx_41780; i_42029++) {
            int64_t binop_y_42050 = Tx_41777 * i_42029;
            int64_t ltid_x_42031 = sext_i32_i64(ltid_pre_45234);
            int64_t ltid_y_42032 = sext_i32_i64(ltid_pre_45235);
            int32_t ltid_flat_42033 = local_tid_45230;
            int64_t k_42051 = ltid_y_42032 + binop_y_42050;
            int64_t i_42053 = ltid_x_42031 + binop_y_42052;
            int64_t gtid_42054 = iii_41795 + i_42053;
            int64_t A_col_idx_42055 = kk_42026 + k_42051;
            bool binop_x_42056 = slt64(gtid_42054, m_30124);
            bool binop_y_42057 = slt64(A_col_idx_42055, i32_res_30137);
            bool cond_42058 = binop_x_42056 && binop_y_42057;
            float A_elem_42059;
            
            if (cond_42058) {
                float A_elem_42061 = ((__global
                                       float *) images_mem_43532)[gtid_42054 *
                                                                  N_30125 +
                                                                  A_col_idx_42055];
                
                A_elem_42059 = A_elem_42061;
            } else {
                A_elem_42059 = 0.0F;
            }
            
            bool cond_42063 = slt64(k_42051, Tk_41779);
            int64_t a_loc_ind_42064;
            
            if (cond_42063) {
                int64_t binop_y_42065 = Tk_41779 * i_42053;
                int64_t loc_fi_42066 = k_42051 + binop_y_42065;
                
                a_loc_ind_42064 = loc_fi_42066;
            } else {
                a_loc_ind_42064 = -1;
            }
            if (sle64(0, a_loc_ind_42064) && slt64(a_loc_ind_42064,
                                                   a_loc_szz_41785)) {
                ((__local float *) mem_43820)[a_loc_ind_42064] = A_elem_42059;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_42071 = 0; i_42071 < tk_div_ty_41781; i_42071++) {
        int64_t binop_y_42094 = Ty_41775 * i_42071;
        
        for (int64_t i_42073 = 0; i_42073 < Rx_41778; i_42073++) {
            int64_t binop_y_42096 = Tx_41777 * i_42073;
            int64_t ltid_x_42075 = sext_i32_i64(ltid_pre_45234);
            int64_t ltid_y_42076 = sext_i32_i64(ltid_pre_45235);
            int32_t ltid_flat_42077 = local_tid_45230;
            int64_t k_42095 = ltid_x_42075 + binop_y_42094;
            int64_t j_42097 = ltid_y_42076 + binop_y_42096;
            int64_t gtid_42098 = jjj_41796 + j_42097;
            int64_t B_row_idx_42099 = kk_42026 + k_42095;
            bool binop_x_42100 = slt64(gtid_42098, i32_res_30143);
            bool binop_y_42101 = slt64(B_row_idx_42099, i32_res_30137);
            bool cond_42102 = binop_x_42100 && binop_y_42101;
            float B_elem_42103;
            
            if (cond_42102) {
                float B_elem_42105 = ((__global
                                       float *) mem_43544)[B_row_idx_42099 *
                                                           i32_res_30143 +
                                                           gtid_42098];
                
                B_elem_42103 = B_elem_42105;
            } else {
                B_elem_42103 = 0.0F;
            }
            
            bool cond_42107 = slt64(k_42095, Tk_41779);
            int64_t b_loc_ind_42108;
            
            if (cond_42107) {
                int64_t binop_y_42109 = TxRx_41782 * k_42095;
                int64_t loc_fi_42110 = j_42097 + binop_y_42109;
                
                b_loc_ind_42108 = loc_fi_42110;
            } else {
                b_loc_ind_42108 = -1;
            }
            if (sle64(0, b_loc_ind_42108) && slt64(b_loc_ind_42108,
                                                   b_loc_szz_41787)) {
                ((__local float *) mem_43822)[b_loc_ind_42108] = B_elem_42103;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_43975[Ry_41776];
    float mem_43979[Rx_41778];
    float mem_43989[Ry_41776 * Rx_41778];
    float loop_mem_43991[Ry_41776 * Rx_41778];
    float mem_param_43962[Ry_41776 * Rx_41778];
    
    for (int32_t i_10 = 0; i_10 < Ry_41776 * Rx_41778; i_10++)
        mem_param_43962[i_10] = loop_mem_43909[i_10];
    for (int64_t i_42115 = 0; i_42115 < Tk_41779; i_42115++) {
        int64_t cmpop_x_42117 = kk_42026 + i_42115;
        bool cond_42118 = slt64(cmpop_x_42117, i32_res_30137);
        float mem_44779[Ry_41776 * Rx_41778];
        
        if (cond_42118) {
            int64_t binop_y_42156 = TxRx_41782 * i_42115;
            int64_t bytes_43964 = 4 * Ry_41776;
            int64_t bytes_43966 = 4 * Rx_41778;
            int64_t ltid_y_42121 = sext_i32_i64(ltid_pre_45234);
            int64_t ltid_x_42119 = sext_i32_i64(ltid_pre_45235);
            int32_t ltid_flat_42120 = local_tid_45230;
            float mem_43965[Ry_41776];
            float mem_43967[Rx_41778];
            int64_t binop_x_42147 = Ry_41776 * ltid_y_42121;
            
            for (int64_t i_42145 = 0; i_42145 < Ry_41776; i_42145++) {
                int64_t binop_x_42148 = i_42145 + binop_x_42147;
                int64_t binop_y_42149 = Tk_41779 * binop_x_42148;
                int64_t a_loc_ind_42150 = i_42115 + binop_y_42149;
                
                for (int64_t i_45267 = 0; i_45267 < 1; i_45267++) {
                    mem_43965[i_42145 + i_45267] = ((__local
                                                     float *) mem_43820)[a_loc_ind_42150 +
                                                                         i_45267];
                }
            }
            
            int64_t binop_y_42158 = Rx_41778 * ltid_x_42119;
            
            for (int64_t i_42154 = 0; i_42154 < Rx_41778; i_42154++) {
                int64_t binop_x_42157 = i_42154 + binop_y_42156;
                int64_t b_loc_ind_42159 = binop_x_42157 + binop_y_42158;
                
                for (int64_t i_45269 = 0; i_45269 < 1; i_45269++) {
                    mem_43967[i_42154 + i_45269] = ((__local
                                                     float *) mem_43822)[b_loc_ind_42159 +
                                                                         i_45269];
                }
            }
            for (int64_t i_45270 = 0; i_45270 < Ry_41776; i_45270++) {
                mem_43975[i_45270] = mem_43965[i_45270];
            }
            for (int64_t i_45271 = 0; i_45271 < Rx_41778; i_45271++) {
                mem_43979[i_45271] = mem_43967[i_45271];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_42166 = sext_i32_i64(ltid_pre_45234);
            int64_t ltid_x_42164 = sext_i32_i64(ltid_pre_45235);
            int32_t ltid_flat_42165 = local_tid_45230;
            int64_t binop_y_42209 = Ry_41776 * ltid_y_42166;
            int64_t binop_y_42213 = Rx_41778 * ltid_x_42164;
            
            for (int64_t i_42203 = 0; i_42203 < Ry_41776; i_42203++) {
                int64_t binop_x_42208 = iii_41795 + i_42203;
                int64_t cmpop_x_42210 = binop_x_42208 + binop_y_42209;
                bool binop_x_42211 = slt64(cmpop_x_42210, m_30124);
                
                for (int64_t i_42206 = 0; i_42206 < Rx_41778; i_42206++) {
                    int64_t binop_x_42212 = jjj_41796 + i_42206;
                    int64_t cmpop_x_42214 = binop_x_42212 + binop_y_42213;
                    bool binop_y_42215 = slt64(cmpop_x_42214, i32_res_30143);
                    bool cond_42216 = binop_x_42211 && binop_y_42215;
                    
                    if (cond_42216) {
                        float a_42218 = mem_43975[i_42203];
                        float c_42220 = mem_param_43962[i_42203 * Rx_41778 +
                                                        i_42206];
                        bool isnan_res_42223;
                        
                        isnan_res_42223 = futrts_isnan32(a_42218);
                        
                        float defunc_1_f_res_42224;
                        
                        if (isnan_res_42223) {
                            defunc_1_f_res_42224 = 0.0F;
                        } else {
                            float b_42219 = mem_43979[i_42206];
                            float defunc_1_f_res_f_res_42225 = a_42218 *
                                  b_42219;
                            
                            defunc_1_f_res_42224 = defunc_1_f_res_f_res_42225;
                        }
                        
                        float defunc_1_op_res_42229 = c_42220 +
                              defunc_1_f_res_42224;
                        
                        mem_param_43962[i_42203 * Rx_41778 + i_42206] =
                            defunc_1_op_res_42229;
                    }
                }
            }
            for (int64_t i_45274 = 0; i_45274 < Ry_41776; i_45274++) {
                for (int64_t i_45275 = 0; i_45275 < Rx_41778; i_45275++) {
                    mem_43989[i_45274 * Rx_41778 + i_45275] =
                        mem_param_43962[i_45274 * Rx_41778 + i_45275];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_45276 = 0; i_45276 < Ry_41776; i_45276++) {
                for (int64_t i_45277 = 0; i_45277 < Rx_41778; i_45277++) {
                    mem_44779[i_45276 * Rx_41778 + i_45277] =
                        mem_43989[i_45276 * Rx_41778 + i_45277];
                }
            }
        } else {
            for (int64_t i_45278 = 0; i_45278 < Ry_41776; i_45278++) {
                for (int64_t i_45279 = 0; i_45279 < Rx_41778; i_45279++) {
                    mem_44779[i_45278 * Rx_41778 + i_45279] =
                        mem_param_43962[i_45278 * Rx_41778 + i_45279];
                }
            }
        }
        
        float mem_param_tmp_45264[Ry_41776 * Rx_41778];
        
        for (int32_t i_11 = 0; i_11 < Ry_41776 * Rx_41778; i_11++)
            mem_param_tmp_45264[i_11] = mem_44779[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_41776 * Rx_41778; i_12++)
            mem_param_43962[i_12] = mem_param_tmp_45264[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_41776 * Rx_41778; i_13++)
        loop_mem_43991[i_13] = mem_param_43962[i_13];
    
    int64_t reg_tile_i_45280 = squot64(sext_i32_i64(local_tid_45230), Tx_41777);
    int64_t reg_tile_i_45281 = sext_i32_i64(local_tid_45230) -
            squot64(sext_i32_i64(local_tid_45230), Tx_41777) * Tx_41777;
    int64_t tile_dim_start_45282 = Ry_41776 * (Ty_41775 * gid_y_41793 +
                                               reg_tile_i_45280);
    int64_t tile_dim_start_45283 = Rx_41778 * (Tx_41777 * gid_x_41792 +
                                               reg_tile_i_45281);
    
    for (int64_t nest_i_45284 = 0; nest_i_45284 < Ry_41776; nest_i_45284++) {
        for (int64_t nest_i_45285 = 0; nest_i_45285 < Rx_41778;
             nest_i_45285++) {
            if (slt64(tile_dim_start_45282 + nest_i_45284, m_30124) &&
                slt64(tile_dim_start_45283 + nest_i_45285, i32_res_30143)) {
                ((__global float *) mem_43994)[(tile_dim_start_45282 +
                                                nest_i_45284) * i32_res_30143 +
                                               (tile_dim_start_45283 +
                                                nest_i_45285)] =
                    loop_mem_43991[nest_i_45284 * Rx_41778 + nest_i_45285];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_41775
    #undef Ry_41776
    #undef Tx_41777
    #undef Rx_41778
    #undef Tk_41779
    #undef tk_div_tx_41780
    #undef tk_div_ty_41781
    #undef TxRx_41782
    #undef TyRy_41783
    #undef a_loc_szz_41785
    #undef b_loc_szz_41787
}
__kernel void mainDetailedzisegmap_intragroup_42243(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_44052_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_44043_backing_aligned_1,
                                                    int64_t m_30124,
                                                    int64_t i32_res_30143,
                                                    int64_t num_groups_y_42241,
                                                    int64_t num_whole_tiles_42259,
                                                    int64_t residual_input_42386,
                                                    unsigned char cond_42387,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_44004,
                                                    __global
                                                    unsigned char *mem_44033,
                                                    __global
                                                    unsigned char *mem_44060)
{
    #define tile_sizze_42238 (mainDetailedzitile_sizze_42237)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44052_backing_5 = (__local volatile
                                                           char *) mem_44052_backing_aligned_0;
    __local volatile char *restrict mem_44043_backing_0 = (__local volatile
                                                           char *) mem_44043_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45361;
    int32_t local_tid_45362;
    int64_t group_sizze_45365;
    int32_t wave_sizze_45364;
    int32_t group_tid_45363;
    
    global_tid_45361 = get_global_id(0);
    local_tid_45362 = get_local_id(0);
    group_sizze_45365 = get_local_size(0);
    wave_sizze_45364 = LOCKSTEP_WIDTH;
    group_tid_45363 = get_group_id(0);
    
    int32_t gid_flat_42243;
    
    gid_flat_42243 = group_tid_45363;
    
    int32_t ltid_pre_45366;
    
    ltid_pre_45366 = squot32(local_tid_45362, sext_i64_i32(tile_sizze_42238));
    
    int32_t ltid_pre_45367;
    
    ltid_pre_45367 = local_tid_45362 - squot32(local_tid_45362,
                                               sext_i64_i32(tile_sizze_42238)) *
        sext_i64_i32(tile_sizze_42238);
    
    int64_t gid_x_42235;
    
    gid_x_42235 = squot64(sext_i32_i64(group_tid_45363), num_groups_y_42241);
    
    int64_t gid_y_42236;
    
    gid_y_42236 = sext_i32_i64(group_tid_45363) -
        squot64(sext_i32_i64(group_tid_45363), num_groups_y_42241) *
        num_groups_y_42241;
    
    float mem_44038[1];
    int64_t ltid_x_42260 = sext_i32_i64(ltid_pre_45366);
    int64_t ltid_y_42261 = sext_i32_i64(ltid_pre_45367);
    int32_t ltid_flat_42262 = local_tid_45362;
    
    if (slt64(ltid_x_42260, tile_sizze_42238) && slt64(ltid_y_42261,
                                                       tile_sizze_42238)) {
        mem_44038[0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_42345 = gid_x_42235 * tile_sizze_42238;
    int64_t binop_x_42360 = gid_y_42236 * tile_sizze_42238;
    __local char *mem_44043;
    
    mem_44043 = (__local char *) mem_44043_backing_0;
    
    float accs_mem_44048[1];
    float mem_param_44039[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_44039[i_1] = mem_44038[i_1];
    for (int64_t tile_id_42271 = 0; tile_id_42271 < num_whole_tiles_42259;
         tile_id_42271++) {
        int64_t binop_x_42343 = tile_sizze_42238 * tile_id_42271;
        int64_t ltid_x_42272 = sext_i32_i64(ltid_pre_45366);
        int64_t ltid_y_42273 = sext_i32_i64(ltid_pre_45367);
        int32_t ltid_flat_42274 = local_tid_45362;
        int64_t j_42344 = ltid_y_42273 + binop_x_42343;
        int64_t gtid_42346 = ltid_x_42272 + binop_x_42345;
        bool binop_x_42351 = slt64(j_42344, i32_res_30143);
        bool binop_y_42352 = slt64(gtid_42346, m_30124);
        bool cond_42353 = binop_x_42351 && binop_y_42352;
        float pre_42354;
        
        if (cond_42353) {
            float x_42355 = ((__global
                              float *) defunc_3_map_res_mem_44004)[gtid_42346 *
                                                                   i32_res_30143 +
                                                                   j_42344];
            
            pre_42354 = x_42355;
        } else {
            pre_42354 = 0.0F;
        }
        ((__local float *) mem_44043)[ltid_x_42272 * tile_sizze_42238 +
                                      ltid_y_42273] = pre_42354;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_44047[1];
        int64_t ltid_x_42304 = sext_i32_i64(ltid_pre_45366);
        int64_t ltid_y_42305 = sext_i32_i64(ltid_pre_45367);
        int32_t ltid_flat_42306 = local_tid_45362;
        int64_t gtid_42359 = ltid_x_42304 + binop_x_42345;
        int64_t gtid_42361 = ltid_y_42305 + binop_x_42360;
        float acc_42364 = mem_param_44039[0];
        bool binop_x_42368 = slt64(gtid_42359, m_30124);
        bool binop_y_42369 = slt64(gtid_42361, i32_res_30143);
        bool cond_42370 = binop_x_42368 && binop_y_42369;
        float acc_42371;
        
        if (cond_42370) {
            float x_42372;
            float redout_43431 = acc_42364;
            
            for (int64_t i_43432 = 0; i_43432 < tile_sizze_42238; i_43432++) {
                float x_42376 = ((__local float *) mem_44043)[ltid_x_42304 *
                                                              tile_sizze_42238 +
                                                              i_43432];
                int64_t slice_43516 = binop_x_42343 + i_43432;
                float x_42377 = ((__global float *) mem_44033)[slice_43516 *
                                                               (i32_res_30143 *
                                                                m_30124) +
                                                               gtid_42359 *
                                                               i32_res_30143 +
                                                               gtid_42361];
                float defunc_1_f_res_42378 = x_42376 * x_42377;
                float defunc_1_op_res_42375 = defunc_1_f_res_42378 +
                      redout_43431;
                float redout_tmp_45370 = defunc_1_op_res_42375;
                
                redout_43431 = redout_tmp_45370;
            }
            x_42372 = redout_43431;
            acc_42371 = x_42372;
        } else {
            acc_42371 = acc_42364;
        }
        mem_44047[0] = acc_42371;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45368[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_45368[i_2] = mem_44047[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_44039[i_3] = mem_param_tmp_45368[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_44048[i_4] = mem_param_44039[i_4];
    
    __local char *mem_44052;
    
    mem_44052 = (__local char *) mem_44052_backing_5;
    
    float mem_44056[1];
    float mem_44793[1];
    
    if (cond_42387) {
        mem_44793[0] = accs_mem_44048[0];
    } else {
        int64_t binop_x_42460 = tile_sizze_42238 * num_whole_tiles_42259;
        int64_t ltid_x_42388 = sext_i32_i64(ltid_pre_45366);
        int64_t ltid_y_42389 = sext_i32_i64(ltid_pre_45367);
        int32_t ltid_flat_42390 = local_tid_45362;
        int64_t j_42461 = ltid_y_42389 + binop_x_42460;
        int64_t gtid_42463 = binop_x_42345 + ltid_x_42388;
        bool binop_x_42468 = slt64(j_42461, i32_res_30143);
        bool binop_y_42469 = slt64(gtid_42463, m_30124);
        bool cond_42470 = binop_x_42468 && binop_y_42469;
        float pre_42471;
        
        if (cond_42470) {
            float x_42472 = ((__global
                              float *) defunc_3_map_res_mem_44004)[gtid_42463 *
                                                                   i32_res_30143 +
                                                                   j_42461];
            
            pre_42471 = x_42472;
        } else {
            pre_42471 = 0.0F;
        }
        ((__local float *) mem_44052)[ltid_x_42388 * tile_sizze_42238 +
                                      ltid_y_42389] = pre_42471;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_x_42421 = sext_i32_i64(ltid_pre_45366);
        int64_t ltid_y_42422 = sext_i32_i64(ltid_pre_45367);
        int32_t ltid_flat_42423 = local_tid_45362;
        int64_t gtid_42477 = binop_x_42345 + ltid_x_42421;
        int64_t gtid_42479 = binop_x_42360 + ltid_y_42422;
        float acc_42482 = accs_mem_44048[0];
        bool binop_x_42486 = slt64(gtid_42477, m_30124);
        bool binop_y_42487 = slt64(gtid_42479, i32_res_30143);
        bool cond_42488 = binop_x_42486 && binop_y_42487;
        float acc_42489;
        
        if (cond_42488) {
            float x_42490;
            float redout_43433 = acc_42482;
            
            for (int64_t i_43434 = 0; i_43434 < residual_input_42386;
                 i_43434++) {
                float x_42494 = ((__local float *) mem_44052)[ltid_x_42421 *
                                                              tile_sizze_42238 +
                                                              i_43434];
                int64_t slice_43517 = binop_x_42460 + i_43434;
                float x_42495 = ((__global float *) mem_44033)[slice_43517 *
                                                               (i32_res_30143 *
                                                                m_30124) +
                                                               gtid_42477 *
                                                               i32_res_30143 +
                                                               gtid_42479];
                float defunc_1_f_res_42496 = x_42494 * x_42495;
                float defunc_1_op_res_42493 = defunc_1_f_res_42496 +
                      redout_43433;
                float redout_tmp_45371 = defunc_1_op_res_42493;
                
                redout_43433 = redout_tmp_45371;
            }
            x_42490 = redout_43433;
            acc_42489 = x_42490;
        } else {
            acc_42489 = acc_42482;
        }
        mem_44056[0] = acc_42489;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44793[0] = mem_44056[0];
    }
    
    int64_t thread_out_index_45372 = gid_x_42235 * tile_sizze_42238 +
            sext_i32_i64(ltid_pre_45366);
    int64_t thread_out_index_45373 = gid_y_42236 * tile_sizze_42238 +
            sext_i32_i64(ltid_pre_45367);
    
    if (slt64(thread_out_index_45372, m_30124) && slt64(thread_out_index_45373,
                                                        i32_res_30143)) {
        ((__global float *) mem_44060)[thread_out_index_45372 * i32_res_30143 +
                                       thread_out_index_45373] = mem_44793[0];
    }
    
  error_5:
    return;
    #undef tile_sizze_42238
}
__kernel void mainDetailedzisegmap_intragroup_42535(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_44112_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_44110_backing_aligned_1,
                                                    int64_t N_30123,
                                                    int64_t m_30124,
                                                    int64_t i32_res_30143,
                                                    int64_t gridDim_x_42529,
                                                    int64_t full_tiles_42560,
                                                    int64_t kk_42763, __global
                                                    unsigned char *defunc_4_map_res_mem_44070,
                                                    __global
                                                    unsigned char *mem_44094,
                                                    __global
                                                    unsigned char *mem_44284)
{
    #define Ty_42516 (mainDetailedziTy_42513)
    #define Ry_42517 (mainDetailedziRy_42515)
    #define Tx_42518 (mainDetailedziTx_42512)
    #define Rx_42519 (mainDetailedziRx_42514)
    #define Tk_42520 (mainDetailedziTk_42511)
    #define tk_div_tx_42521 (sdiv_up64(mainDetailedziTk_42511, mainDetailedziTx_42512))
    #define tk_div_ty_42522 (sdiv_up64(mainDetailedziTk_42511, mainDetailedziTy_42513))
    #define TxRx_42523 (mainDetailedziTx_42512 * mainDetailedziRx_42514)
    #define TyRy_42524 (mainDetailedziTy_42513 * mainDetailedziRy_42515)
    #define a_loc_szz_42526 (mainDetailedziTk_42511 * (mainDetailedziTy_42513 * mainDetailedziRy_42515))
    #define b_loc_szz_42528 (mainDetailedziRx_42514 * (mainDetailedziTx_42512 * mainDetailedziTk_42511))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44112_backing_1 = (__local volatile
                                                           char *) mem_44112_backing_aligned_0;
    __local volatile char *restrict mem_44110_backing_0 = (__local volatile
                                                           char *) mem_44110_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45449;
    int32_t local_tid_45450;
    int64_t group_sizze_45453;
    int32_t wave_sizze_45452;
    int32_t group_tid_45451;
    
    global_tid_45449 = get_global_id(0);
    local_tid_45450 = get_local_id(0);
    group_sizze_45453 = get_local_size(0);
    wave_sizze_45452 = LOCKSTEP_WIDTH;
    group_tid_45451 = get_group_id(0);
    
    int32_t gid_flat_42535;
    
    gid_flat_42535 = group_tid_45451;
    
    int32_t ltid_pre_45454;
    
    ltid_pre_45454 = squot32(local_tid_45450, sext_i64_i32(Tx_42518));
    
    int32_t ltid_pre_45455;
    
    ltid_pre_45455 = local_tid_45450 - squot32(local_tid_45450,
                                               sext_i64_i32(Tx_42518)) *
        sext_i64_i32(Tx_42518);
    
    int64_t gid_y_42534;
    
    gid_y_42534 = squot64(sext_i32_i64(group_tid_45451), gridDim_x_42529);
    
    int64_t gid_x_42533;
    
    gid_x_42533 = sext_i32_i64(group_tid_45451) -
        squot64(sext_i32_i64(group_tid_45451), gridDim_x_42529) *
        gridDim_x_42529;
    
    int64_t iii_42536;
    
    iii_42536 = TyRy_42524 * gid_y_42534;
    
    int64_t jjj_42537 = TxRx_42523 * gid_x_42533;
    float mem_44108[Ry_42517 * Rx_42519];
    int64_t ltid_y_42540 = sext_i32_i64(ltid_pre_45454);
    int64_t ltid_x_42538 = sext_i32_i64(ltid_pre_45455);
    int32_t ltid_flat_42539 = local_tid_45450;
    float mem_44099[Ry_42517 * Rx_42519];
    
    for (int64_t i_42551 = 0; i_42551 < Ry_42517; i_42551++) {
        for (int64_t i_42554 = 0; i_42554 < Rx_42519; i_42554++) {
            mem_44099[i_42551 * Rx_42519 + i_42554] = 0.0F;
        }
    }
    for (int64_t i_45458 = 0; i_45458 < Ry_42517; i_45458++) {
        for (int64_t i_45459 = 0; i_45459 < Rx_42519; i_45459++) {
            mem_44108[i_45458 * Rx_42519 + i_45459] = mem_44099[i_45458 *
                                                                Rx_42519 +
                                                                i_45459];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44110;
    
    mem_44110 = (__local char *) mem_44110_backing_0;
    
    __local char *mem_44112;
    
    mem_44112 = (__local char *) mem_44112_backing_1;
    
    float mem_44183[Ry_42517];
    float mem_44187[Rx_42519];
    float loop_mem_44199[Ry_42517 * Rx_42519];
    float mem_param_44113[Ry_42517 * Rx_42519];
    
    for (int32_t i_2 = 0; i_2 < Ry_42517 * Rx_42519; i_2++)
        mem_param_44113[i_2] = mem_44108[i_2];
    for (int64_t i_42561 = 0; i_42561 < full_tiles_42560; i_42561++) {
        int64_t kk_42565 = Tk_42520 * i_42561;
        
        for (int64_t i_42566 = 0; i_42566 < Ry_42517; i_42566++) {
            int64_t binop_y_42589 = Ty_42516 * i_42566;
            
            for (int64_t i_42568 = 0; i_42568 < tk_div_tx_42521; i_42568++) {
                int64_t binop_y_42587 = Tx_42518 * i_42568;
                int64_t ltid_x_42570 = sext_i32_i64(ltid_pre_45454);
                int64_t ltid_y_42571 = sext_i32_i64(ltid_pre_45455);
                int32_t ltid_flat_42572 = local_tid_45450;
                int64_t k_42588 = ltid_y_42571 + binop_y_42587;
                int64_t i_42590 = ltid_x_42570 + binop_y_42589;
                int64_t gtid_42591 = iii_42536 + i_42590;
                int64_t A_col_idx_42592 = kk_42565 + k_42588;
                bool cond_42593 = slt64(gtid_42591, m_30124);
                float A_elem_42594;
                
                if (cond_42593) {
                    float A_elem_42596 = ((__global
                                           float *) defunc_4_map_res_mem_44070)[gtid_42591 *
                                                                                i32_res_30143 +
                                                                                A_col_idx_42592];
                    
                    A_elem_42594 = A_elem_42596;
                } else {
                    A_elem_42594 = 0.0F;
                }
                
                bool cond_42598 = slt64(k_42588, Tk_42520);
                int64_t a_loc_ind_42599;
                
                if (cond_42598) {
                    int64_t binop_y_42600 = Tk_42520 * i_42590;
                    int64_t loc_fi_42601 = k_42588 + binop_y_42600;
                    
                    a_loc_ind_42599 = loc_fi_42601;
                } else {
                    a_loc_ind_42599 = -1;
                }
                if (sle64(0, a_loc_ind_42599) && slt64(a_loc_ind_42599,
                                                       a_loc_szz_42526)) {
                    ((__local float *) mem_44110)[a_loc_ind_42599] =
                        A_elem_42594;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_42606 = 0; i_42606 < tk_div_ty_42522; i_42606++) {
            int64_t binop_y_42627 = Ty_42516 * i_42606;
            
            for (int64_t i_42608 = 0; i_42608 < Rx_42519; i_42608++) {
                int64_t binop_y_42629 = Tx_42518 * i_42608;
                int64_t ltid_x_42610 = sext_i32_i64(ltid_pre_45454);
                int64_t ltid_y_42611 = sext_i32_i64(ltid_pre_45455);
                int32_t ltid_flat_42612 = local_tid_45450;
                int64_t k_42628 = ltid_x_42610 + binop_y_42627;
                int64_t j_42630 = ltid_y_42611 + binop_y_42629;
                int64_t gtid_42631 = jjj_42537 + j_42630;
                int64_t B_row_idx_42632 = kk_42565 + k_42628;
                bool cond_42633 = slt64(gtid_42631, N_30123);
                float B_elem_42634;
                
                if (cond_42633) {
                    float B_elem_42636 = ((__global
                                           float *) mem_44094)[B_row_idx_42632 *
                                                               N_30123 +
                                                               gtid_42631];
                    
                    B_elem_42634 = B_elem_42636;
                } else {
                    B_elem_42634 = 0.0F;
                }
                
                bool cond_42638 = slt64(k_42628, Tk_42520);
                int64_t b_loc_ind_42639;
                
                if (cond_42638) {
                    int64_t binop_y_42640 = TxRx_42523 * k_42628;
                    int64_t loc_fi_42641 = j_42630 + binop_y_42640;
                    
                    b_loc_ind_42639 = loc_fi_42641;
                } else {
                    b_loc_ind_42639 = -1;
                }
                if (sle64(0, b_loc_ind_42639) && slt64(b_loc_ind_42639,
                                                       b_loc_szz_42528)) {
                    ((__local float *) mem_44112)[b_loc_ind_42639] =
                        B_elem_42634;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_44198[Ry_42517 * Rx_42519];
        float mem_param_44170[Ry_42517 * Rx_42519];
        
        for (int32_t i_3 = 0; i_3 < Ry_42517 * Rx_42519; i_3++)
            mem_param_44170[i_3] = mem_param_44113[i_3];
        for (int64_t i_42646 = 0; i_42646 < Tk_42520; i_42646++) {
            int64_t binop_y_42685 = TxRx_42523 * i_42646;
            int64_t ltid_y_42650 = sext_i32_i64(ltid_pre_45454);
            int64_t ltid_x_42648 = sext_i32_i64(ltid_pre_45455);
            int32_t ltid_flat_42649 = local_tid_45450;
            float mem_44173[Ry_42517];
            float mem_44175[Rx_42519];
            int64_t binop_x_42676 = Ry_42517 * ltid_y_42650;
            
            for (int64_t i_42674 = 0; i_42674 < Ry_42517; i_42674++) {
                int64_t binop_x_42677 = i_42674 + binop_x_42676;
                int64_t binop_y_42678 = Tk_42520 * binop_x_42677;
                int64_t a_loc_ind_42679 = i_42646 + binop_y_42678;
                
                for (int64_t i_45471 = 0; i_45471 < 1; i_45471++) {
                    mem_44173[i_42674 + i_45471] = ((__local
                                                     float *) mem_44110)[a_loc_ind_42679 +
                                                                         i_45471];
                }
            }
            
            int64_t binop_y_42687 = Rx_42519 * ltid_x_42648;
            
            for (int64_t i_42683 = 0; i_42683 < Rx_42519; i_42683++) {
                int64_t binop_x_42686 = i_42683 + binop_y_42685;
                int64_t b_loc_ind_42688 = binop_x_42686 + binop_y_42687;
                
                for (int64_t i_45473 = 0; i_45473 < 1; i_45473++) {
                    mem_44175[i_42683 + i_45473] = ((__local
                                                     float *) mem_44112)[b_loc_ind_42688 +
                                                                         i_45473];
                }
            }
            for (int64_t i_45474 = 0; i_45474 < Ry_42517; i_45474++) {
                mem_44183[i_45474] = mem_44173[i_45474];
            }
            for (int64_t i_45475 = 0; i_45475 < Rx_42519; i_45475++) {
                mem_44187[i_45475] = mem_44175[i_45475];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_44197[Ry_42517 * Rx_42519];
            int64_t ltid_y_42695 = sext_i32_i64(ltid_pre_45454);
            int64_t ltid_x_42693 = sext_i32_i64(ltid_pre_45455);
            int32_t ltid_flat_42694 = local_tid_45450;
            int64_t binop_y_42736 = Ry_42517 * ltid_y_42695;
            int64_t binop_y_42740 = Rx_42519 * ltid_x_42693;
            
            for (int64_t i_42730 = 0; i_42730 < Ry_42517; i_42730++) {
                int64_t binop_x_42735 = iii_42536 + i_42730;
                int64_t cmpop_x_42737 = binop_x_42735 + binop_y_42736;
                bool binop_x_42738 = slt64(cmpop_x_42737, m_30124);
                
                for (int64_t i_42733 = 0; i_42733 < Rx_42519; i_42733++) {
                    int64_t binop_x_42739 = jjj_42537 + i_42733;
                    int64_t cmpop_x_42741 = binop_x_42739 + binop_y_42740;
                    bool binop_y_42742 = slt64(cmpop_x_42741, N_30123);
                    bool cond_42743 = binop_x_42738 && binop_y_42742;
                    
                    if (cond_42743) {
                        float a_42745 = mem_44183[i_42730];
                        float b_42746 = mem_44187[i_42733];
                        float c_42747 = mem_param_44170[i_42730 * Rx_42519 +
                                                        i_42733];
                        float defunc_1_f_res_42750 = a_42745 * b_42746;
                        float defunc_1_op_res_42754 = c_42747 +
                              defunc_1_f_res_42750;
                        
                        mem_param_44170[i_42730 * Rx_42519 + i_42733] =
                            defunc_1_op_res_42754;
                    }
                }
            }
            for (int64_t i_45478 = 0; i_45478 < Ry_42517; i_45478++) {
                for (int64_t i_45479 = 0; i_45479 < Rx_42519; i_45479++) {
                    mem_44197[i_45478 * Rx_42519 + i_45479] =
                        mem_param_44170[i_45478 * Rx_42519 + i_45479];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_45468[Ry_42517 * Rx_42519];
            
            for (int32_t i_4 = 0; i_4 < Ry_42517 * Rx_42519; i_4++)
                mem_param_tmp_45468[i_4] = mem_44197[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_42517 * Rx_42519; i_5++)
                mem_param_44170[i_5] = mem_param_tmp_45468[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_42517 * Rx_42519; i_6++)
            loop_mem_44198[i_6] = mem_param_44170[i_6];
        
        float mem_param_tmp_45460[Ry_42517 * Rx_42519];
        
        for (int32_t i_7 = 0; i_7 < Ry_42517 * Rx_42519; i_7++)
            mem_param_tmp_45460[i_7] = loop_mem_44198[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_42517 * Rx_42519; i_8++)
            mem_param_44113[i_8] = mem_param_tmp_45460[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_42517 * Rx_42519; i_9++)
        loop_mem_44199[i_9] = mem_param_44113[i_9];
    for (int64_t i_42764 = 0; i_42764 < Ry_42517; i_42764++) {
        int64_t binop_y_42789 = Ty_42516 * i_42764;
        
        for (int64_t i_42766 = 0; i_42766 < tk_div_tx_42521; i_42766++) {
            int64_t binop_y_42787 = Tx_42518 * i_42766;
            int64_t ltid_x_42768 = sext_i32_i64(ltid_pre_45454);
            int64_t ltid_y_42769 = sext_i32_i64(ltid_pre_45455);
            int32_t ltid_flat_42770 = local_tid_45450;
            int64_t k_42788 = ltid_y_42769 + binop_y_42787;
            int64_t i_42790 = ltid_x_42768 + binop_y_42789;
            int64_t gtid_42791 = iii_42536 + i_42790;
            int64_t A_col_idx_42792 = kk_42763 + k_42788;
            bool binop_x_42793 = slt64(gtid_42791, m_30124);
            bool binop_y_42794 = slt64(A_col_idx_42792, i32_res_30143);
            bool cond_42795 = binop_x_42793 && binop_y_42794;
            float A_elem_42796;
            
            if (cond_42795) {
                float A_elem_42798 = ((__global
                                       float *) defunc_4_map_res_mem_44070)[gtid_42791 *
                                                                            i32_res_30143 +
                                                                            A_col_idx_42792];
                
                A_elem_42796 = A_elem_42798;
            } else {
                A_elem_42796 = 0.0F;
            }
            
            bool cond_42800 = slt64(k_42788, Tk_42520);
            int64_t a_loc_ind_42801;
            
            if (cond_42800) {
                int64_t binop_y_42802 = Tk_42520 * i_42790;
                int64_t loc_fi_42803 = k_42788 + binop_y_42802;
                
                a_loc_ind_42801 = loc_fi_42803;
            } else {
                a_loc_ind_42801 = -1;
            }
            if (sle64(0, a_loc_ind_42801) && slt64(a_loc_ind_42801,
                                                   a_loc_szz_42526)) {
                ((__local float *) mem_44110)[a_loc_ind_42801] = A_elem_42796;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_42808 = 0; i_42808 < tk_div_ty_42522; i_42808++) {
        int64_t binop_y_42831 = Ty_42516 * i_42808;
        
        for (int64_t i_42810 = 0; i_42810 < Rx_42519; i_42810++) {
            int64_t binop_y_42833 = Tx_42518 * i_42810;
            int64_t ltid_x_42812 = sext_i32_i64(ltid_pre_45454);
            int64_t ltid_y_42813 = sext_i32_i64(ltid_pre_45455);
            int32_t ltid_flat_42814 = local_tid_45450;
            int64_t k_42832 = ltid_x_42812 + binop_y_42831;
            int64_t j_42834 = ltid_y_42813 + binop_y_42833;
            int64_t gtid_42835 = jjj_42537 + j_42834;
            int64_t B_row_idx_42836 = kk_42763 + k_42832;
            bool binop_x_42837 = slt64(gtid_42835, N_30123);
            bool binop_y_42838 = slt64(B_row_idx_42836, i32_res_30143);
            bool cond_42839 = binop_x_42837 && binop_y_42838;
            float B_elem_42840;
            
            if (cond_42839) {
                float B_elem_42842 = ((__global
                                       float *) mem_44094)[B_row_idx_42836 *
                                                           N_30123 +
                                                           gtid_42835];
                
                B_elem_42840 = B_elem_42842;
            } else {
                B_elem_42840 = 0.0F;
            }
            
            bool cond_42844 = slt64(k_42832, Tk_42520);
            int64_t b_loc_ind_42845;
            
            if (cond_42844) {
                int64_t binop_y_42846 = TxRx_42523 * k_42832;
                int64_t loc_fi_42847 = j_42834 + binop_y_42846;
                
                b_loc_ind_42845 = loc_fi_42847;
            } else {
                b_loc_ind_42845 = -1;
            }
            if (sle64(0, b_loc_ind_42845) && slt64(b_loc_ind_42845,
                                                   b_loc_szz_42528)) {
                ((__local float *) mem_44112)[b_loc_ind_42845] = B_elem_42840;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_44265[Ry_42517];
    float mem_44269[Rx_42519];
    float mem_44279[Ry_42517 * Rx_42519];
    float loop_mem_44281[Ry_42517 * Rx_42519];
    float mem_param_44252[Ry_42517 * Rx_42519];
    
    for (int32_t i_10 = 0; i_10 < Ry_42517 * Rx_42519; i_10++)
        mem_param_44252[i_10] = loop_mem_44199[i_10];
    for (int64_t i_42852 = 0; i_42852 < Tk_42520; i_42852++) {
        int64_t cmpop_x_42854 = kk_42763 + i_42852;
        bool cond_42855 = slt64(cmpop_x_42854, i32_res_30143);
        float mem_44809[Ry_42517 * Rx_42519];
        
        if (cond_42855) {
            int64_t binop_y_42893 = TxRx_42523 * i_42852;
            int64_t bytes_44254 = 4 * Ry_42517;
            int64_t bytes_44256 = 4 * Rx_42519;
            int64_t ltid_y_42858 = sext_i32_i64(ltid_pre_45454);
            int64_t ltid_x_42856 = sext_i32_i64(ltid_pre_45455);
            int32_t ltid_flat_42857 = local_tid_45450;
            float mem_44255[Ry_42517];
            float mem_44257[Rx_42519];
            int64_t binop_x_42884 = Ry_42517 * ltid_y_42858;
            
            for (int64_t i_42882 = 0; i_42882 < Ry_42517; i_42882++) {
                int64_t binop_x_42885 = i_42882 + binop_x_42884;
                int64_t binop_y_42886 = Tk_42520 * binop_x_42885;
                int64_t a_loc_ind_42887 = i_42852 + binop_y_42886;
                
                for (int64_t i_45487 = 0; i_45487 < 1; i_45487++) {
                    mem_44255[i_42882 + i_45487] = ((__local
                                                     float *) mem_44110)[a_loc_ind_42887 +
                                                                         i_45487];
                }
            }
            
            int64_t binop_y_42895 = Rx_42519 * ltid_x_42856;
            
            for (int64_t i_42891 = 0; i_42891 < Rx_42519; i_42891++) {
                int64_t binop_x_42894 = i_42891 + binop_y_42893;
                int64_t b_loc_ind_42896 = binop_x_42894 + binop_y_42895;
                
                for (int64_t i_45489 = 0; i_45489 < 1; i_45489++) {
                    mem_44257[i_42891 + i_45489] = ((__local
                                                     float *) mem_44112)[b_loc_ind_42896 +
                                                                         i_45489];
                }
            }
            for (int64_t i_45490 = 0; i_45490 < Ry_42517; i_45490++) {
                mem_44265[i_45490] = mem_44255[i_45490];
            }
            for (int64_t i_45491 = 0; i_45491 < Rx_42519; i_45491++) {
                mem_44269[i_45491] = mem_44257[i_45491];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_42903 = sext_i32_i64(ltid_pre_45454);
            int64_t ltid_x_42901 = sext_i32_i64(ltid_pre_45455);
            int32_t ltid_flat_42902 = local_tid_45450;
            int64_t binop_y_42944 = Ry_42517 * ltid_y_42903;
            int64_t binop_y_42948 = Rx_42519 * ltid_x_42901;
            
            for (int64_t i_42938 = 0; i_42938 < Ry_42517; i_42938++) {
                int64_t binop_x_42943 = iii_42536 + i_42938;
                int64_t cmpop_x_42945 = binop_x_42943 + binop_y_42944;
                bool binop_x_42946 = slt64(cmpop_x_42945, m_30124);
                
                for (int64_t i_42941 = 0; i_42941 < Rx_42519; i_42941++) {
                    int64_t binop_x_42947 = jjj_42537 + i_42941;
                    int64_t cmpop_x_42949 = binop_x_42947 + binop_y_42948;
                    bool binop_y_42950 = slt64(cmpop_x_42949, N_30123);
                    bool cond_42951 = binop_x_42946 && binop_y_42950;
                    
                    if (cond_42951) {
                        float a_42953 = mem_44265[i_42938];
                        float b_42954 = mem_44269[i_42941];
                        float c_42955 = mem_param_44252[i_42938 * Rx_42519 +
                                                        i_42941];
                        float defunc_1_f_res_42958 = a_42953 * b_42954;
                        float defunc_1_op_res_42962 = c_42955 +
                              defunc_1_f_res_42958;
                        
                        mem_param_44252[i_42938 * Rx_42519 + i_42941] =
                            defunc_1_op_res_42962;
                    }
                }
            }
            for (int64_t i_45494 = 0; i_45494 < Ry_42517; i_45494++) {
                for (int64_t i_45495 = 0; i_45495 < Rx_42519; i_45495++) {
                    mem_44279[i_45494 * Rx_42519 + i_45495] =
                        mem_param_44252[i_45494 * Rx_42519 + i_45495];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_45496 = 0; i_45496 < Ry_42517; i_45496++) {
                for (int64_t i_45497 = 0; i_45497 < Rx_42519; i_45497++) {
                    mem_44809[i_45496 * Rx_42519 + i_45497] =
                        mem_44279[i_45496 * Rx_42519 + i_45497];
                }
            }
        } else {
            for (int64_t i_45498 = 0; i_45498 < Ry_42517; i_45498++) {
                for (int64_t i_45499 = 0; i_45499 < Rx_42519; i_45499++) {
                    mem_44809[i_45498 * Rx_42519 + i_45499] =
                        mem_param_44252[i_45498 * Rx_42519 + i_45499];
                }
            }
        }
        
        float mem_param_tmp_45484[Ry_42517 * Rx_42519];
        
        for (int32_t i_11 = 0; i_11 < Ry_42517 * Rx_42519; i_11++)
            mem_param_tmp_45484[i_11] = mem_44809[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_42517 * Rx_42519; i_12++)
            mem_param_44252[i_12] = mem_param_tmp_45484[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_42517 * Rx_42519; i_13++)
        loop_mem_44281[i_13] = mem_param_44252[i_13];
    
    int64_t reg_tile_i_45500 = squot64(sext_i32_i64(local_tid_45450), Tx_42518);
    int64_t reg_tile_i_45501 = sext_i32_i64(local_tid_45450) -
            squot64(sext_i32_i64(local_tid_45450), Tx_42518) * Tx_42518;
    int64_t tile_dim_start_45502 = Ry_42517 * (Ty_42516 * gid_y_42534 +
                                               reg_tile_i_45500);
    int64_t tile_dim_start_45503 = Rx_42519 * (Tx_42518 * gid_x_42533 +
                                               reg_tile_i_45501);
    
    for (int64_t nest_i_45504 = 0; nest_i_45504 < Ry_42517; nest_i_45504++) {
        for (int64_t nest_i_45505 = 0; nest_i_45505 < Rx_42519;
             nest_i_45505++) {
            if (slt64(tile_dim_start_45502 + nest_i_45504, m_30124) &&
                slt64(tile_dim_start_45503 + nest_i_45505, N_30123)) {
                ((__global float *) mem_44284)[(tile_dim_start_45502 +
                                                nest_i_45504) * N_30123 +
                                               (tile_dim_start_45503 +
                                                nest_i_45505)] =
                    loop_mem_44281[nest_i_45504 * Rx_42519 + nest_i_45505];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_42516
    #undef Ry_42517
    #undef Tx_42518
    #undef Rx_42519
    #undef Tk_42520
    #undef tk_div_tx_42521
    #undef tk_div_ty_42522
    #undef TxRx_42523
    #undef TyRy_42524
    #undef a_loc_szz_42526
    #undef b_loc_szz_42528
}
__kernel void mainDetailedzisegmap_intragroup_42969(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_44354_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_44347_backing_aligned_1,
                                                    int64_t m_30124,
                                                    int32_t n_30128,
                                                    float hfrac_30130,
                                                    int64_t i32_res_30137,
                                                    int32_t k2p2_30139,
                                                    int64_t num_whole_tiles_42977,
                                                    int64_t residual_input_43098,
                                                    unsigned char cond_43099,
                                                    __global
                                                    unsigned char *mem_44336,
                                                    __global
                                                    unsigned char *mem_44339,
                                                    __global
                                                    unsigned char *mem_44367,
                                                    __global
                                                    unsigned char *mem_44369,
                                                    __global
                                                    unsigned char *mem_44371)
{
    #define segmap_group_sizze_34158 (mainDetailedzisegmap_group_sizze_34127)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44354_backing_5 = (__local volatile
                                                           char *) mem_44354_backing_aligned_0;
    __local volatile char *restrict mem_44347_backing_0 = (__local volatile
                                                           char *) mem_44347_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45673;
    int32_t local_tid_45674;
    int64_t group_sizze_45677;
    int32_t wave_sizze_45676;
    int32_t group_tid_45675;
    
    global_tid_45673 = get_global_id(0);
    local_tid_45674 = get_local_id(0);
    group_sizze_45677 = get_local_size(0);
    wave_sizze_45676 = LOCKSTEP_WIDTH;
    group_tid_45675 = get_group_id(0);
    
    int32_t gid_flat_42969;
    
    gid_flat_42969 = group_tid_45675;
    
    int32_t ltid_pre_45678;
    
    ltid_pre_45678 = local_tid_45674;
    
    int64_t gid_42968;
    
    gid_42968 = sext_i32_i64(group_tid_45675);
    
    float mem_44343[1];
    int64_t ltid_42978 = sext_i32_i64(ltid_pre_45678);
    int32_t ltid_flat_42979 = local_tid_45674;
    
    mem_44343[0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_43064 = segmap_group_sizze_34158 * gid_42968;
    __local char *mem_44347;
    
    mem_44347 = (__local char *) mem_44347_backing_0;
    
    float accs_mem_44351[1];
    float mem_param_44344[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_44344[i_1] = mem_44343[i_1];
    for (int64_t tile_id_42985 = 0; tile_id_42985 < num_whole_tiles_42977;
         tile_id_42985++) {
        int64_t binop_x_43046 = segmap_group_sizze_34158 * tile_id_42985;
        int64_t ltid_42986 = sext_i32_i64(ltid_pre_45678);
        int32_t ltid_flat_42987 = local_tid_45674;
        int64_t j_43047 = ltid_42986 + binop_x_43046;
        bool cond_43059 = slt64(j_43047, i32_res_30137);
        int32_t pre_43060;
        
        if (cond_43059) {
            int32_t index_primexp_43397 = sext_i64_i32(j_43047);
            
            pre_43060 = index_primexp_43397;
        } else {
            pre_43060 = 0;
        }
        ((__local int32_t *) mem_44347)[ltid_42986] = pre_43060;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_44350[1];
        int64_t ltid_43013 = sext_i32_i64(ltid_pre_45678);
        int32_t ltid_flat_43014 = local_tid_45674;
        int64_t gtid_43065 = ltid_43013 + binop_x_43064;
        int32_t defunc_0_f_res_43067;
        int32_t redout_43441 = 0;
        
        for (int32_t i_43519 = 0; i_43519 < n_30128; i_43519++) {
            int64_t i_43442 = sext_i32_i64(i_43519);
            float x_43071 = ((__global float *) mem_44336)[i_43442 * m_30124 +
                                                           gtid_43065];
            bool isnan_res_43072;
            
            isnan_res_43072 = futrts_isnan32(x_43071);
            
            bool cond_43073 = !isnan_res_43072;
            int32_t defunc_0_f_res_43074 = btoi_bool_i32(cond_43073);
            int32_t defunc_1_op_res_43070 = add32(defunc_0_f_res_43074,
                                                  redout_43441);
            int32_t redout_tmp_45681 = defunc_1_op_res_43070;
            
            redout_43441 = redout_tmp_45681;
        }
        defunc_0_f_res_43067 = redout_43441;
        
        float acc_43075 = mem_param_44344[0];
        bool cond_43076 = slt64(gtid_43065, m_30124);
        float acc_43077;
        
        if (cond_43076) {
            float x_43078;
            float redout_43443 = acc_43075;
            
            for (int64_t i_43444 = 0; i_43444 < segmap_group_sizze_34158;
                 i_43444++) {
                int32_t x_43082 = ((__local int32_t *) mem_44347)[i_43444];
                bool cond_43083 = slt32(x_43082, defunc_0_f_res_43067);
                float defunc_0_f_res_43084;
                
                if (cond_43083) {
                    int64_t i_43085 = sext_i32_i64(x_43082);
                    float defunc_0_f_res_t_res_43086 = ((__global
                                                         float *) mem_44339)[i_43085 *
                                                                             m_30124 +
                                                                             gtid_43065];
                    
                    defunc_0_f_res_43084 = defunc_0_f_res_t_res_43086;
                } else {
                    defunc_0_f_res_43084 = 0.0F;
                }
                
                float defunc_0_f_res_43087 = defunc_0_f_res_43084 *
                      defunc_0_f_res_43084;
                float defunc_1_op_res_43081 = defunc_0_f_res_43087 +
                      redout_43443;
                float redout_tmp_45682 = defunc_1_op_res_43081;
                
                redout_43443 = redout_tmp_45682;
            }
            x_43078 = redout_43443;
            acc_43077 = x_43078;
        } else {
            acc_43077 = acc_43075;
        }
        mem_44350[0] = acc_43077;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45679[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_45679[i_2] = mem_44350[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_44344[i_3] = mem_param_tmp_45679[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_44351[i_4] = mem_param_44344[i_4];
    
    __local char *mem_44354;
    
    mem_44354 = (__local char *) mem_44354_backing_5;
    
    float mem_44357[1];
    float mem_44822[1];
    
    if (cond_43099) {
        mem_44822[0] = accs_mem_44351[0];
    } else {
        int64_t binop_x_43109 = segmap_group_sizze_34158 *
                num_whole_tiles_42977;
        int64_t ltid_43100 = sext_i32_i64(ltid_pre_45678);
        int32_t ltid_flat_43101 = local_tid_45674;
        int64_t j_43110 = ltid_43100 + binop_x_43109;
        bool cond_43122 = slt64(j_43110, i32_res_30137);
        int32_t pre_43123;
        
        if (cond_43122) {
            int32_t index_primexp_43398 = sext_i64_i32(j_43110);
            
            pre_43123 = index_primexp_43398;
        } else {
            pre_43123 = 0;
        }
        ((__local int32_t *) mem_44354)[ltid_43100] = pre_43123;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_43128 = sext_i32_i64(ltid_pre_45678);
        int32_t ltid_flat_43129 = local_tid_45674;
        int64_t gtid_43136 = binop_x_43064 + ltid_43128;
        int32_t defunc_0_f_res_43138;
        int32_t redout_43445 = 0;
        
        for (int32_t i_43520 = 0; i_43520 < n_30128; i_43520++) {
            int64_t i_43446 = sext_i32_i64(i_43520);
            float x_43142 = ((__global float *) mem_44336)[i_43446 * m_30124 +
                                                           gtid_43136];
            bool isnan_res_43143;
            
            isnan_res_43143 = futrts_isnan32(x_43142);
            
            bool cond_43144 = !isnan_res_43143;
            int32_t defunc_0_f_res_43145 = btoi_bool_i32(cond_43144);
            int32_t defunc_1_op_res_43141 = add32(defunc_0_f_res_43145,
                                                  redout_43445);
            int32_t redout_tmp_45683 = defunc_1_op_res_43141;
            
            redout_43445 = redout_tmp_45683;
        }
        defunc_0_f_res_43138 = redout_43445;
        
        float acc_43146 = accs_mem_44351[0];
        bool cond_43147 = slt64(gtid_43136, m_30124);
        float acc_43148;
        
        if (cond_43147) {
            float x_43149;
            float redout_43447 = acc_43146;
            
            for (int64_t i_43448 = 0; i_43448 < residual_input_43098;
                 i_43448++) {
                int32_t x_43153 = ((__local int32_t *) mem_44354)[i_43448];
                bool cond_43154 = slt32(x_43153, defunc_0_f_res_43138);
                float defunc_0_f_res_43155;
                
                if (cond_43154) {
                    int64_t i_43156 = sext_i32_i64(x_43153);
                    float defunc_0_f_res_t_res_43157 = ((__global
                                                         float *) mem_44339)[i_43156 *
                                                                             m_30124 +
                                                                             gtid_43136];
                    
                    defunc_0_f_res_43155 = defunc_0_f_res_t_res_43157;
                } else {
                    defunc_0_f_res_43155 = 0.0F;
                }
                
                float defunc_0_f_res_43158 = defunc_0_f_res_43155 *
                      defunc_0_f_res_43155;
                float defunc_1_op_res_43152 = defunc_0_f_res_43158 +
                      redout_43447;
                float redout_tmp_45684 = defunc_1_op_res_43152;
                
                redout_43447 = redout_tmp_45684;
            }
            x_43149 = redout_43447;
            acc_43148 = x_43149;
        } else {
            acc_43148 = acc_43146;
        }
        mem_44357[0] = acc_43148;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44822[0] = mem_44357[0];
    }
    
    int32_t mem_44361[1];
    int32_t mem_44363[1];
    float mem_44365[1];
    int64_t ltid_43161 = sext_i32_i64(ltid_pre_45678);
    int32_t ltid_flat_43162 = local_tid_45674;
    int64_t gtid_43172 = binop_x_43064 + ltid_43161;
    bool cond_43174 = slt64(gtid_43172, m_30124);
    int32_t postlude_43175;
    int32_t postlude_43176;
    float postlude_43177;
    
    if (cond_43174) {
        float defunc_0_f_res_43173 = mem_44822[0];
        int32_t defunc_0_f_res_43179;
        int32_t redout_43449 = 0;
        
        for (int32_t i_43521 = 0; i_43521 < n_30128; i_43521++) {
            int64_t i_43450 = sext_i32_i64(i_43521);
            float x_43183 = ((__global float *) mem_44336)[i_43450 * m_30124 +
                                                           gtid_43172];
            bool isnan_res_43184;
            
            isnan_res_43184 = futrts_isnan32(x_43183);
            
            bool cond_43185 = !isnan_res_43184;
            int32_t defunc_0_f_res_43186 = btoi_bool_i32(cond_43185);
            int32_t defunc_1_op_res_43182 = add32(defunc_0_f_res_43186,
                                                  redout_43449);
            int32_t redout_tmp_45685 = defunc_1_op_res_43182;
            
            redout_43449 = redout_tmp_45685;
        }
        defunc_0_f_res_43179 = redout_43449;
        
        int32_t r32_arg_43187 = sub32(defunc_0_f_res_43179, k2p2_30139);
        float i32_res_43188 = sitofp_i32_f32(r32_arg_43187);
        float sqrt_arg_43189 = defunc_0_f_res_43173 / i32_res_43188;
        float sqrt_res_43190;
        
        sqrt_res_43190 = futrts_sqrt32(sqrt_arg_43189);
        
        float i32_res_43191 = sitofp_i32_f32(defunc_0_f_res_43179);
        float t32_arg_43192 = hfrac_30130 * i32_res_43191;
        int32_t f32_res_43193 = fptosi_f32_i32(t32_arg_43192);
        
        postlude_43175 = f32_res_43193;
        postlude_43176 = defunc_0_f_res_43179;
        postlude_43177 = sqrt_res_43190;
    } else {
        postlude_43175 = 0;
        postlude_43176 = 0;
        postlude_43177 = 0.0F;
    }
    mem_44361[0] = postlude_43175;
    mem_44363[0] = postlude_43176;
    mem_44365[0] = postlude_43177;
    barrier(CLK_LOCAL_MEM_FENCE);
    if (slt64(sext_i32_i64(local_tid_45674) + segmap_group_sizze_34158 *
              sext_i32_i64(group_tid_45675), m_30124)) {
        ((__global int32_t *) mem_44367)[sext_i32_i64(local_tid_45674) +
                                         segmap_group_sizze_34158 *
                                         sext_i32_i64(group_tid_45675)] =
            mem_44361[0];
    }
    if (slt64(sext_i32_i64(local_tid_45674) + segmap_group_sizze_34158 *
              sext_i32_i64(group_tid_45675), m_30124)) {
        ((__global int32_t *) mem_44369)[sext_i32_i64(local_tid_45674) +
                                         segmap_group_sizze_34158 *
                                         sext_i32_i64(group_tid_45675)] =
            mem_44363[0];
    }
    if (slt64(sext_i32_i64(local_tid_45674) + segmap_group_sizze_34158 *
              sext_i32_i64(group_tid_45675), m_30124)) {
        ((__global float *) mem_44371)[sext_i32_i64(local_tid_45674) +
                                       segmap_group_sizze_34158 *
                                       sext_i32_i64(group_tid_45675)] =
            mem_44365[0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_34158
}
__kernel void mainDetailedzisegmap_intragroup_43201(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_44420_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_44413_backing_aligned_1,
                                                    int64_t N_30123,
                                                    int64_t m_30124,
                                                    int64_t i32_res_30485,
                                                    int64_t num_whole_tiles_43221,
                                                    int64_t residual_input_43320,
                                                    unsigned char cond_43321,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_44332,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_44395,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_44396,
                                                    __global
                                                    unsigned char *mem_44426)
{
    #define segmap_group_sizze_34395 (mainDetailedzisegmap_group_sizze_34376)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44420_backing_5 = (__local volatile
                                                           char *) mem_44420_backing_aligned_0;
    __local volatile char *restrict mem_44413_backing_0 = (__local volatile
                                                           char *) mem_44413_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45859;
    int32_t local_tid_45860;
    int64_t group_sizze_45863;
    int32_t wave_sizze_45862;
    int32_t group_tid_45861;
    
    global_tid_45859 = get_global_id(0);
    local_tid_45860 = get_local_id(0);
    group_sizze_45863 = get_local_size(0);
    wave_sizze_45862 = LOCKSTEP_WIDTH;
    group_tid_45861 = get_group_id(0);
    
    int32_t gid_flat_43201;
    
    gid_flat_43201 = group_tid_45861;
    
    int32_t ltid_pre_45864;
    
    ltid_pre_45864 = local_tid_45860;
    
    int64_t gid_43200;
    
    gid_43200 = sext_i32_i64(group_tid_45861);
    
    int64_t binop_x_43210;
    
    binop_x_43210 = segmap_group_sizze_34395 * gid_43200;
    
    int32_t mem_44404[1];
    int32_t mem_44406[1];
    int64_t ltid_43202 = sext_i32_i64(ltid_pre_45864);
    int32_t ltid_flat_43203 = local_tid_45860;
    int64_t gtid_43211 = ltid_43202 + binop_x_43210;
    bool cond_43212 = slt64(gtid_43211, m_30124);
    int32_t pre_43213;
    int32_t pre_43214;
    
    if (cond_43212) {
        int32_t x_43215 = ((__global
                            int32_t *) defunc_3_map_res_mem_44396)[gtid_43211];
        int32_t x_43216 = ((__global
                            int32_t *) defunc_3_map_res_mem_44395)[gtid_43211];
        
        pre_43213 = x_43215;
        pre_43214 = x_43216;
    } else {
        pre_43213 = 0;
        pre_43214 = 0;
    }
    mem_44404[0] = pre_43213;
    mem_44406[0] = pre_43214;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_44409[1];
    int64_t ltid_43222 = sext_i32_i64(ltid_pre_45864);
    int32_t ltid_flat_43223 = local_tid_45860;
    
    mem_44409[0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44413;
    
    mem_44413 = (__local char *) mem_44413_backing_0;
    
    float accs_mem_44417[1];
    float mem_param_44410[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_44410[i_1] = mem_44409[i_1];
    for (int64_t tile_id_43229 = 0; tile_id_43229 < num_whole_tiles_43221;
         tile_id_43229++) {
        int64_t binop_x_43278 = segmap_group_sizze_34395 * tile_id_43229;
        int64_t ltid_43230 = sext_i32_i64(ltid_pre_45864);
        int32_t ltid_flat_43231 = local_tid_45860;
        int64_t j_43279 = ltid_43230 + binop_x_43278;
        bool cond_43284 = slt64(j_43279, i32_res_30485);
        int32_t pre_43285;
        
        if (cond_43284) {
            int32_t index_primexp_43399 = sext_i64_i32(j_43279);
            int32_t tile_elem_43286 = index_primexp_43399;
            
            pre_43285 = tile_elem_43286;
        } else {
            pre_43285 = 0;
        }
        ((__local int32_t *) mem_44413)[ltid_43230] = pre_43285;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_44416[1];
        int64_t ltid_43250 = sext_i32_i64(ltid_pre_45864);
        int32_t ltid_flat_43251 = local_tid_45860;
        int64_t gtid_43290 = binop_x_43210 + ltid_43250;
        float acc_43293 = mem_param_44410[0];
        bool cond_43294 = slt64(gtid_43290, m_30124);
        float acc_43295;
        
        if (cond_43294) {
            int32_t x_43291 = mem_44404[0];
            int32_t x_43292 = mem_44406[0];
            float x_43296;
            float redout_43451 = acc_43293;
            
            for (int64_t i_43452 = 0; i_43452 < segmap_group_sizze_34395;
                 i_43452++) {
                int32_t x_43300 = ((__local int32_t *) mem_44413)[i_43452];
                bool cond_43301 = slt32(x_43300, x_43292);
                float defunc_0_f_res_43302;
                
                if (cond_43301) {
                    int32_t x_43303 = add32(x_43291, x_43300);
                    int32_t x_43304 = sub32(x_43303, x_43292);
                    int32_t i_43305 = add32(1, x_43304);
                    int64_t i_43306 = sext_i32_i64(i_43305);
                    float defunc_0_f_res_t_res_43307 = ((__global
                                                         float *) defunc_4_map_res_mem_44332)[gtid_43290 *
                                                                                              N_30123 +
                                                                                              i_43306];
                    
                    defunc_0_f_res_43302 = defunc_0_f_res_t_res_43307;
                } else {
                    defunc_0_f_res_43302 = 0.0F;
                }
                
                float defunc_1_op_res_43299 = defunc_0_f_res_43302 +
                      redout_43451;
                float redout_tmp_45867 = defunc_1_op_res_43299;
                
                redout_43451 = redout_tmp_45867;
            }
            x_43296 = redout_43451;
            acc_43295 = x_43296;
        } else {
            acc_43295 = acc_43293;
        }
        mem_44416[0] = acc_43295;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45865[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_45865[i_2] = mem_44416[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_44410[i_3] = mem_param_tmp_45865[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_44417[i_4] = mem_param_44410[i_4];
    
    __local char *mem_44420;
    
    mem_44420 = (__local char *) mem_44420_backing_5;
    
    float mem_44423[1];
    float mem_44831[1];
    
    if (cond_43321) {
        mem_44831[0] = accs_mem_44417[0];
    } else {
        int64_t binop_x_43331 = segmap_group_sizze_34395 *
                num_whole_tiles_43221;
        int64_t ltid_43322 = sext_i32_i64(ltid_pre_45864);
        int32_t ltid_flat_43323 = local_tid_45860;
        int64_t j_43332 = ltid_43322 + binop_x_43331;
        bool cond_43337 = slt64(j_43332, i32_res_30485);
        int32_t pre_43338;
        
        if (cond_43337) {
            int32_t index_primexp_43400 = sext_i64_i32(j_43332);
            int32_t tile_elem_43339 = index_primexp_43400;
            
            pre_43338 = tile_elem_43339;
        } else {
            pre_43338 = 0;
        }
        ((__local int32_t *) mem_44420)[ltid_43322] = pre_43338;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_43343 = sext_i32_i64(ltid_pre_45864);
        int32_t ltid_flat_43344 = local_tid_45860;
        int64_t gtid_43351 = binop_x_43210 + ltid_43343;
        float acc_43354 = accs_mem_44417[0];
        bool cond_43355 = slt64(gtid_43351, m_30124);
        float acc_43356;
        
        if (cond_43355) {
            int32_t x_43352 = mem_44404[0];
            int32_t x_43353 = mem_44406[0];
            float x_43357;
            float redout_43453 = acc_43354;
            
            for (int64_t i_43454 = 0; i_43454 < residual_input_43320;
                 i_43454++) {
                int32_t x_43361 = ((__local int32_t *) mem_44420)[i_43454];
                bool cond_43362 = slt32(x_43361, x_43353);
                float defunc_0_f_res_43363;
                
                if (cond_43362) {
                    int32_t x_43364 = add32(x_43352, x_43361);
                    int32_t x_43365 = sub32(x_43364, x_43353);
                    int32_t i_43366 = add32(1, x_43365);
                    int64_t i_43367 = sext_i32_i64(i_43366);
                    float defunc_0_f_res_t_res_43368 = ((__global
                                                         float *) defunc_4_map_res_mem_44332)[gtid_43351 *
                                                                                              N_30123 +
                                                                                              i_43367];
                    
                    defunc_0_f_res_43363 = defunc_0_f_res_t_res_43368;
                } else {
                    defunc_0_f_res_43363 = 0.0F;
                }
                
                float defunc_1_op_res_43360 = defunc_0_f_res_43363 +
                      redout_43453;
                float redout_tmp_45868 = defunc_1_op_res_43360;
                
                redout_43453 = redout_tmp_45868;
            }
            x_43357 = redout_43453;
            acc_43356 = x_43357;
        } else {
            acc_43356 = acc_43354;
        }
        mem_44423[0] = acc_43356;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44831[0] = mem_44423[0];
    }
    if (slt64(sext_i32_i64(local_tid_45860) + segmap_group_sizze_34395 *
              sext_i32_i64(group_tid_45861), m_30124)) {
        ((__global float *) mem_44426)[sext_i32_i64(local_tid_45860) +
                                       segmap_group_sizze_34395 *
                                       sext_i32_i64(group_tid_45861)] =
            mem_44831[0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_34395
}
__kernel void mainDetailedzisegred_large_32244(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_45125_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45123_backing_aligned_1,
                                               int64_t N_30123, int64_t N_30125,
                                               int64_t i32_res_30137,
                                               int64_t i32_res_30143,
                                               int64_t num_groups_32383,
                                               __global
                                               unsigned char *images_mem_43532,
                                               __global
                                               unsigned char *binop_p_mem_43541,
                                               __global
                                               unsigned char *mem_43682,
                                               __global
                                               unsigned char *mem_43687,
                                               int64_t groups_per_segment_45109,
                                               int64_t elements_per_thread_45110,
                                               int64_t virt_num_groups_45111,
                                               int64_t threads_per_segment_45113,
                                               __global
                                               unsigned char *group_res_arr_mem_45114,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_45116)
{
    #define segred_group_sizze_32382 (mainDetailedzisegred_group_sizze_32238)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45125_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45125_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45123_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45123_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45118;
    int32_t local_tid_45119;
    int64_t group_sizze_45122;
    int32_t wave_sizze_45121;
    int32_t group_tid_45120;
    
    global_tid_45118 = get_global_id(0);
    local_tid_45119 = get_local_id(0);
    group_sizze_45122 = get_local_size(0);
    wave_sizze_45121 = LOCKSTEP_WIDTH;
    group_tid_45120 = get_group_id(0);
    
    int32_t phys_tid_32244;
    
    phys_tid_32244 = global_tid_45118;
    
    __local char *red_arr_mem_45123;
    
    red_arr_mem_45123 = (__local char *) red_arr_mem_45123_backing_0;
    
    __local char *sync_arr_mem_45125;
    
    sync_arr_mem_45125 = (__local char *) sync_arr_mem_45125_backing_1;
    
    int32_t phys_group_id_45127;
    
    phys_group_id_45127 = get_group_id(0);
    for (int32_t i_45128 = 0; i_45128 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45111) - phys_group_id_45127,
                   sext_i64_i32(num_groups_32383)); i_45128++) {
        int32_t virt_group_id_45129 = phys_group_id_45127 + i_45128 *
                sext_i64_i32(num_groups_32383);
        int32_t flat_segment_id_45130 = squot32(virt_group_id_45129,
                                                sext_i64_i32(groups_per_segment_45109));
        int64_t global_tid_45131 = srem64(sext_i32_i64(virt_group_id_45129) *
                                          segred_group_sizze_32382 +
                                          sext_i32_i64(local_tid_45119),
                                          segred_group_sizze_32382 *
                                          groups_per_segment_45109);
        int64_t gtid_32231 = squot64(sext_i32_i64(flat_segment_id_45130),
                                     i32_res_30143 * i32_res_30143);
        int64_t gtid_32232 = squot64(sext_i32_i64(flat_segment_id_45130) -
                                     squot64(sext_i32_i64(flat_segment_id_45130),
                                             i32_res_30143 * i32_res_30143) *
                                     (i32_res_30143 * i32_res_30143),
                                     i32_res_30143);
        int64_t gtid_32233 = sext_i32_i64(flat_segment_id_45130) -
                squot64(sext_i32_i64(flat_segment_id_45130), i32_res_30143 *
                        i32_res_30143) * (i32_res_30143 * i32_res_30143) -
                squot64(sext_i32_i64(flat_segment_id_45130) -
                        squot64(sext_i32_i64(flat_segment_id_45130),
                                i32_res_30143 * i32_res_30143) *
                        (i32_res_30143 * i32_res_30143), i32_res_30143) *
                i32_res_30143;
        int64_t gtid_32243;
        float x_acc_45132;
        int64_t chunk_sizze_45133;
        
        chunk_sizze_45133 = smin64(elements_per_thread_45110,
                                   sdiv_up64(i32_res_30137 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45131)),
                                             threads_per_segment_45113));
        
        float x_32386;
        float x_32387;
        
        // neutral-initialise the accumulators
        {
            x_acc_45132 = 0.0F;
        }
        for (int64_t i_45137 = 0; i_45137 < chunk_sizze_45133; i_45137++) {
            gtid_32243 = sext_i32_i64(sext_i64_i32(global_tid_45131)) +
                threads_per_segment_45113 * i_45137;
            // apply map function
            {
                float x_32392 = ((__global
                                  float *) images_mem_43532)[gtid_32231 *
                                                             N_30125 +
                                                             gtid_32243];
                float x_32393 = ((__global
                                  float *) binop_p_mem_43541)[gtid_32232 *
                                                              N_30123 +
                                                              gtid_32243];
                float x_32394 = ((__global float *) mem_43682)[gtid_32233 *
                                                               N_30123 +
                                                               gtid_32243];
                float x_32395 = x_32393 * x_32394;
                bool isnan_res_32396;
                
                isnan_res_32396 = futrts_isnan32(x_32392);
                
                float y_32397;
                
                if (isnan_res_32396) {
                    y_32397 = 0.0F;
                } else {
                    y_32397 = 1.0F;
                }
                
                float defunc_2_f_res_32398 = x_32395 * y_32397;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_32386 = x_acc_45132;
                }
                // load new values
                {
                    x_32387 = defunc_2_f_res_32398;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_32388 = x_32386 + x_32387;
                    
                    // store in accumulator
                    {
                        x_acc_45132 = defunc_1_op_res_32388;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_32386 = x_acc_45132;
            ((__local
              float *) red_arr_mem_45123)[sext_i32_i64(local_tid_45119)] =
                x_32386;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45138;
        int32_t skip_waves_45139;
        
        skip_waves_45139 = 1;
        
        float x_45134;
        float x_45135;
        
        offset_45138 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45119,
                      sext_i64_i32(segred_group_sizze_32382))) {
                x_45134 = ((__local
                            float *) red_arr_mem_45123)[sext_i32_i64(local_tid_45119 +
                                                        offset_45138)];
            }
        }
        offset_45138 = 1;
        while (slt32(offset_45138, wave_sizze_45121)) {
            if (slt32(local_tid_45119 + offset_45138,
                      sext_i64_i32(segred_group_sizze_32382)) &&
                ((local_tid_45119 - squot32(local_tid_45119, wave_sizze_45121) *
                  wave_sizze_45121) & (2 * offset_45138 - 1)) == 0) {
                // read array element
                {
                    x_45135 = ((volatile __local
                                float *) red_arr_mem_45123)[sext_i32_i64(local_tid_45119 +
                                                            offset_45138)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45136 = x_45134 + x_45135;
                    
                    x_45134 = defunc_1_op_res_45136;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45123)[sext_i32_i64(local_tid_45119)] =
                        x_45134;
                }
            }
            offset_45138 *= 2;
        }
        while (slt32(skip_waves_45139,
                     squot32(sext_i64_i32(segred_group_sizze_32382) +
                             wave_sizze_45121 - 1, wave_sizze_45121))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45138 = skip_waves_45139 * wave_sizze_45121;
            if (slt32(local_tid_45119 + offset_45138,
                      sext_i64_i32(segred_group_sizze_32382)) &&
                ((local_tid_45119 - squot32(local_tid_45119, wave_sizze_45121) *
                  wave_sizze_45121) == 0 && (squot32(local_tid_45119,
                                                     wave_sizze_45121) & (2 *
                                                                          skip_waves_45139 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45135 = ((__local
                                float *) red_arr_mem_45123)[sext_i32_i64(local_tid_45119 +
                                                            offset_45138)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45136 = x_45134 + x_45135;
                    
                    x_45134 = defunc_1_op_res_45136;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45123)[sext_i32_i64(local_tid_45119)] =
                        x_45134;
                }
            }
            skip_waves_45139 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45119) == 0) {
                x_acc_45132 = x_45134;
            }
        }
        if (groups_per_segment_45109 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45119 == 0) {
                    ((__global float *) mem_43687)[gtid_32231 * (i32_res_30143 *
                                                                 i32_res_30143) +
                                                   gtid_32232 * i32_res_30143 +
                                                   gtid_32233] = x_acc_45132;
                }
            }
        } else {
            int32_t old_counter_45140;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45119 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45114)[sext_i32_i64(virt_group_id_45129) *
                                                        segred_group_sizze_32382] =
                        x_acc_45132;
                    mem_fence_global();
                    old_counter_45140 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45116)[sext_i32_i64(srem32(flat_segment_id_45130,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45125)[0] =
                        old_counter_45140 == groups_per_segment_45109 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45141;
            
            is_last_group_45141 = ((__local bool *) sync_arr_mem_45125)[0];
            if (is_last_group_45141) {
                if (local_tid_45119 == 0) {
                    old_counter_45140 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45116)[sext_i32_i64(srem32(flat_segment_id_45130,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_45109));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45142 =
                            sdiv_up64(groups_per_segment_45109,
                                      segred_group_sizze_32382);
                    
                    x_32386 = 0.0F;
                    for (int64_t i_45143 = 0; i_45143 < read_per_thread_45142;
                         i_45143++) {
                        int64_t group_res_id_45144 =
                                sext_i32_i64(local_tid_45119) *
                                read_per_thread_45142 + i_45143;
                        int64_t index_of_group_res_45145 =
                                sext_i32_i64(flat_segment_id_45130) *
                                groups_per_segment_45109 + group_res_id_45144;
                        
                        if (slt64(group_res_id_45144,
                                  groups_per_segment_45109)) {
                            x_32387 = ((__global
                                        float *) group_res_arr_mem_45114)[index_of_group_res_45145 *
                                                                          segred_group_sizze_32382];
                            
                            float defunc_1_op_res_32388;
                            
                            defunc_1_op_res_32388 = x_32386 + x_32387;
                            x_32386 = defunc_1_op_res_32388;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45123)[sext_i32_i64(local_tid_45119)] =
                    x_32386;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45146;
                    int32_t skip_waves_45147;
                    
                    skip_waves_45147 = 1;
                    
                    float x_45134;
                    float x_45135;
                    
                    offset_45146 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45119,
                                  sext_i64_i32(segred_group_sizze_32382))) {
                            x_45134 = ((__local
                                        float *) red_arr_mem_45123)[sext_i32_i64(local_tid_45119 +
                                                                    offset_45146)];
                        }
                    }
                    offset_45146 = 1;
                    while (slt32(offset_45146, wave_sizze_45121)) {
                        if (slt32(local_tid_45119 + offset_45146,
                                  sext_i64_i32(segred_group_sizze_32382)) &&
                            ((local_tid_45119 - squot32(local_tid_45119,
                                                        wave_sizze_45121) *
                              wave_sizze_45121) & (2 * offset_45146 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45135 = ((volatile __local
                                            float *) red_arr_mem_45123)[sext_i32_i64(local_tid_45119 +
                                                                        offset_45146)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45136 = x_45134 + x_45135;
                                
                                x_45134 = defunc_1_op_res_45136;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45123)[sext_i32_i64(local_tid_45119)] =
                                    x_45134;
                            }
                        }
                        offset_45146 *= 2;
                    }
                    while (slt32(skip_waves_45147,
                                 squot32(sext_i64_i32(segred_group_sizze_32382) +
                                         wave_sizze_45121 - 1,
                                         wave_sizze_45121))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45146 = skip_waves_45147 * wave_sizze_45121;
                        if (slt32(local_tid_45119 + offset_45146,
                                  sext_i64_i32(segred_group_sizze_32382)) &&
                            ((local_tid_45119 - squot32(local_tid_45119,
                                                        wave_sizze_45121) *
                              wave_sizze_45121) == 0 &&
                             (squot32(local_tid_45119, wave_sizze_45121) & (2 *
                                                                            skip_waves_45147 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45135 = ((__local
                                            float *) red_arr_mem_45123)[sext_i32_i64(local_tid_45119 +
                                                                        offset_45146)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45136 = x_45134 + x_45135;
                                
                                x_45134 = defunc_1_op_res_45136;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45123)[sext_i32_i64(local_tid_45119)] =
                                    x_45134;
                            }
                        }
                        skip_waves_45147 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45119 == 0) {
                            ((__global float *) mem_43687)[gtid_32231 *
                                                           (i32_res_30143 *
                                                            i32_res_30143) +
                                                           gtid_32232 *
                                                           i32_res_30143 +
                                                           gtid_32233] =
                                x_45134;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32382
}
__kernel void mainDetailedzisegred_large_33417(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_45323_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45321_backing_aligned_1,
                                               int64_t N_30123, int64_t N_30125,
                                               int64_t i32_res_30137,
                                               int64_t i32_res_30143,
                                               int64_t num_groups_33470,
                                               __global
                                               unsigned char *images_mem_43532,
                                               __global
                                               unsigned char *binop_p_mem_43541,
                                               __global
                                               unsigned char *mem_43998,
                                               int64_t groups_per_segment_45307,
                                               int64_t elements_per_thread_45308,
                                               int64_t virt_num_groups_45309,
                                               int64_t threads_per_segment_45311,
                                               __global
                                               unsigned char *group_res_arr_mem_45312,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_45314)
{
    #define segred_group_sizze_33469 (mainDetailedzisegred_group_sizze_33411)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45323_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45323_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45321_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45321_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45316;
    int32_t local_tid_45317;
    int64_t group_sizze_45320;
    int32_t wave_sizze_45319;
    int32_t group_tid_45318;
    
    global_tid_45316 = get_global_id(0);
    local_tid_45317 = get_local_id(0);
    group_sizze_45320 = get_local_size(0);
    wave_sizze_45319 = LOCKSTEP_WIDTH;
    group_tid_45318 = get_group_id(0);
    
    int32_t phys_tid_33417;
    
    phys_tid_33417 = global_tid_45316;
    
    __local char *red_arr_mem_45321;
    
    red_arr_mem_45321 = (__local char *) red_arr_mem_45321_backing_0;
    
    __local char *sync_arr_mem_45323;
    
    sync_arr_mem_45323 = (__local char *) sync_arr_mem_45323_backing_1;
    
    int32_t phys_group_id_45325;
    
    phys_group_id_45325 = get_group_id(0);
    for (int32_t i_45326 = 0; i_45326 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45309) - phys_group_id_45325,
                   sext_i64_i32(num_groups_33470)); i_45326++) {
        int32_t virt_group_id_45327 = phys_group_id_45325 + i_45326 *
                sext_i64_i32(num_groups_33470);
        int32_t flat_segment_id_45328 = squot32(virt_group_id_45327,
                                                sext_i64_i32(groups_per_segment_45307));
        int64_t global_tid_45329 = srem64(sext_i32_i64(virt_group_id_45327) *
                                          segred_group_sizze_33469 +
                                          sext_i32_i64(local_tid_45317),
                                          segred_group_sizze_33469 *
                                          groups_per_segment_45307);
        int64_t gtid_33406 = squot64(sext_i32_i64(flat_segment_id_45328),
                                     i32_res_30143);
        int64_t gtid_33407 = sext_i32_i64(flat_segment_id_45328) -
                squot64(sext_i32_i64(flat_segment_id_45328), i32_res_30143) *
                i32_res_30143;
        int64_t gtid_33416;
        float x_acc_45330;
        int64_t chunk_sizze_45331;
        
        chunk_sizze_45331 = smin64(elements_per_thread_45308,
                                   sdiv_up64(i32_res_30137 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45329)),
                                             threads_per_segment_45311));
        
        float x_33473;
        float x_33474;
        
        // neutral-initialise the accumulators
        {
            x_acc_45330 = 0.0F;
        }
        for (int64_t i_45335 = 0; i_45335 < chunk_sizze_45331; i_45335++) {
            gtid_33416 = sext_i32_i64(sext_i64_i32(global_tid_45329)) +
                threads_per_segment_45311 * i_45335;
            // apply map function
            {
                float x_33479 = ((__global
                                  float *) images_mem_43532)[gtid_33406 *
                                                             N_30125 +
                                                             gtid_33416];
                bool isnan_res_33480;
                
                isnan_res_33480 = futrts_isnan32(x_33479);
                
                float defunc_1_f_res_33481;
                
                if (isnan_res_33480) {
                    defunc_1_f_res_33481 = 0.0F;
                } else {
                    float x_33478 = ((__global
                                      float *) binop_p_mem_43541)[gtid_33407 *
                                                                  N_30123 +
                                                                  gtid_33416];
                    float defunc_1_f_res_f_res_33482 = x_33478 * x_33479;
                    
                    defunc_1_f_res_33481 = defunc_1_f_res_f_res_33482;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_33473 = x_acc_45330;
                }
                // load new values
                {
                    x_33474 = defunc_1_f_res_33481;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_33475 = x_33473 + x_33474;
                    
                    // store in accumulator
                    {
                        x_acc_45330 = defunc_1_op_res_33475;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_33473 = x_acc_45330;
            ((__local
              float *) red_arr_mem_45321)[sext_i32_i64(local_tid_45317)] =
                x_33473;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45336;
        int32_t skip_waves_45337;
        
        skip_waves_45337 = 1;
        
        float x_45332;
        float x_45333;
        
        offset_45336 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45317,
                      sext_i64_i32(segred_group_sizze_33469))) {
                x_45332 = ((__local
                            float *) red_arr_mem_45321)[sext_i32_i64(local_tid_45317 +
                                                        offset_45336)];
            }
        }
        offset_45336 = 1;
        while (slt32(offset_45336, wave_sizze_45319)) {
            if (slt32(local_tid_45317 + offset_45336,
                      sext_i64_i32(segred_group_sizze_33469)) &&
                ((local_tid_45317 - squot32(local_tid_45317, wave_sizze_45319) *
                  wave_sizze_45319) & (2 * offset_45336 - 1)) == 0) {
                // read array element
                {
                    x_45333 = ((volatile __local
                                float *) red_arr_mem_45321)[sext_i32_i64(local_tid_45317 +
                                                            offset_45336)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45334 = x_45332 + x_45333;
                    
                    x_45332 = defunc_1_op_res_45334;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45321)[sext_i32_i64(local_tid_45317)] =
                        x_45332;
                }
            }
            offset_45336 *= 2;
        }
        while (slt32(skip_waves_45337,
                     squot32(sext_i64_i32(segred_group_sizze_33469) +
                             wave_sizze_45319 - 1, wave_sizze_45319))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45336 = skip_waves_45337 * wave_sizze_45319;
            if (slt32(local_tid_45317 + offset_45336,
                      sext_i64_i32(segred_group_sizze_33469)) &&
                ((local_tid_45317 - squot32(local_tid_45317, wave_sizze_45319) *
                  wave_sizze_45319) == 0 && (squot32(local_tid_45317,
                                                     wave_sizze_45319) & (2 *
                                                                          skip_waves_45337 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45333 = ((__local
                                float *) red_arr_mem_45321)[sext_i32_i64(local_tid_45317 +
                                                            offset_45336)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45334 = x_45332 + x_45333;
                    
                    x_45332 = defunc_1_op_res_45334;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45321)[sext_i32_i64(local_tid_45317)] =
                        x_45332;
                }
            }
            skip_waves_45337 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45317) == 0) {
                x_acc_45330 = x_45332;
            }
        }
        if (groups_per_segment_45307 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45317 == 0) {
                    ((__global float *) mem_43998)[gtid_33406 * i32_res_30143 +
                                                   gtid_33407] = x_acc_45330;
                }
            }
        } else {
            int32_t old_counter_45338;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45317 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45312)[sext_i32_i64(virt_group_id_45327) *
                                                        segred_group_sizze_33469] =
                        x_acc_45330;
                    mem_fence_global();
                    old_counter_45338 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45314)[sext_i32_i64(srem32(flat_segment_id_45328,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45323)[0] =
                        old_counter_45338 == groups_per_segment_45307 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45339;
            
            is_last_group_45339 = ((__local bool *) sync_arr_mem_45323)[0];
            if (is_last_group_45339) {
                if (local_tid_45317 == 0) {
                    old_counter_45338 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45314)[sext_i32_i64(srem32(flat_segment_id_45328,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_45307));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45340 =
                            sdiv_up64(groups_per_segment_45307,
                                      segred_group_sizze_33469);
                    
                    x_33473 = 0.0F;
                    for (int64_t i_45341 = 0; i_45341 < read_per_thread_45340;
                         i_45341++) {
                        int64_t group_res_id_45342 =
                                sext_i32_i64(local_tid_45317) *
                                read_per_thread_45340 + i_45341;
                        int64_t index_of_group_res_45343 =
                                sext_i32_i64(flat_segment_id_45328) *
                                groups_per_segment_45307 + group_res_id_45342;
                        
                        if (slt64(group_res_id_45342,
                                  groups_per_segment_45307)) {
                            x_33474 = ((__global
                                        float *) group_res_arr_mem_45312)[index_of_group_res_45343 *
                                                                          segred_group_sizze_33469];
                            
                            float defunc_1_op_res_33475;
                            
                            defunc_1_op_res_33475 = x_33473 + x_33474;
                            x_33473 = defunc_1_op_res_33475;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45321)[sext_i32_i64(local_tid_45317)] =
                    x_33473;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45344;
                    int32_t skip_waves_45345;
                    
                    skip_waves_45345 = 1;
                    
                    float x_45332;
                    float x_45333;
                    
                    offset_45344 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45317,
                                  sext_i64_i32(segred_group_sizze_33469))) {
                            x_45332 = ((__local
                                        float *) red_arr_mem_45321)[sext_i32_i64(local_tid_45317 +
                                                                    offset_45344)];
                        }
                    }
                    offset_45344 = 1;
                    while (slt32(offset_45344, wave_sizze_45319)) {
                        if (slt32(local_tid_45317 + offset_45344,
                                  sext_i64_i32(segred_group_sizze_33469)) &&
                            ((local_tid_45317 - squot32(local_tid_45317,
                                                        wave_sizze_45319) *
                              wave_sizze_45319) & (2 * offset_45344 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45333 = ((volatile __local
                                            float *) red_arr_mem_45321)[sext_i32_i64(local_tid_45317 +
                                                                        offset_45344)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45334 = x_45332 + x_45333;
                                
                                x_45332 = defunc_1_op_res_45334;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45321)[sext_i32_i64(local_tid_45317)] =
                                    x_45332;
                            }
                        }
                        offset_45344 *= 2;
                    }
                    while (slt32(skip_waves_45345,
                                 squot32(sext_i64_i32(segred_group_sizze_33469) +
                                         wave_sizze_45319 - 1,
                                         wave_sizze_45319))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45344 = skip_waves_45345 * wave_sizze_45319;
                        if (slt32(local_tid_45317 + offset_45344,
                                  sext_i64_i32(segred_group_sizze_33469)) &&
                            ((local_tid_45317 - squot32(local_tid_45317,
                                                        wave_sizze_45319) *
                              wave_sizze_45319) == 0 &&
                             (squot32(local_tid_45317, wave_sizze_45319) & (2 *
                                                                            skip_waves_45345 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45333 = ((__local
                                            float *) red_arr_mem_45321)[sext_i32_i64(local_tid_45317 +
                                                                        offset_45344)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45334 = x_45332 + x_45333;
                                
                                x_45332 = defunc_1_op_res_45334;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45321)[sext_i32_i64(local_tid_45317)] =
                                    x_45332;
                            }
                        }
                        skip_waves_45345 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45317 == 0) {
                            ((__global float *) mem_43998)[gtid_33406 *
                                                           i32_res_30143 +
                                                           gtid_33407] =
                                x_45332;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33469
}
__kernel void mainDetailedzisegred_large_33554(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_45411_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45409_backing_aligned_1,
                                               int64_t i32_res_30143,
                                               int64_t num_groups_33603,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43783,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_44004,
                                               __global
                                               unsigned char *mem_44064,
                                               int64_t groups_per_segment_45395,
                                               int64_t elements_per_thread_45396,
                                               int64_t virt_num_groups_45397,
                                               int64_t threads_per_segment_45399,
                                               __global
                                               unsigned char *group_res_arr_mem_45400,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_45402)
{
    #define segred_group_sizze_33602 (mainDetailedzisegred_group_sizze_33548)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45411_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45411_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45409_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45409_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45404;
    int32_t local_tid_45405;
    int64_t group_sizze_45408;
    int32_t wave_sizze_45407;
    int32_t group_tid_45406;
    
    global_tid_45404 = get_global_id(0);
    local_tid_45405 = get_local_id(0);
    group_sizze_45408 = get_local_size(0);
    wave_sizze_45407 = LOCKSTEP_WIDTH;
    group_tid_45406 = get_group_id(0);
    
    int32_t phys_tid_33554;
    
    phys_tid_33554 = global_tid_45404;
    
    __local char *red_arr_mem_45409;
    
    red_arr_mem_45409 = (__local char *) red_arr_mem_45409_backing_0;
    
    __local char *sync_arr_mem_45411;
    
    sync_arr_mem_45411 = (__local char *) sync_arr_mem_45411_backing_1;
    
    int32_t phys_group_id_45413;
    
    phys_group_id_45413 = get_group_id(0);
    for (int32_t i_45414 = 0; i_45414 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45397) - phys_group_id_45413,
                   sext_i64_i32(num_groups_33603)); i_45414++) {
        int32_t virt_group_id_45415 = phys_group_id_45413 + i_45414 *
                sext_i64_i32(num_groups_33603);
        int32_t flat_segment_id_45416 = squot32(virt_group_id_45415,
                                                sext_i64_i32(groups_per_segment_45395));
        int64_t global_tid_45417 = srem64(sext_i32_i64(virt_group_id_45415) *
                                          segred_group_sizze_33602 +
                                          sext_i32_i64(local_tid_45405),
                                          segred_group_sizze_33602 *
                                          groups_per_segment_45395);
        int64_t gtid_33543 = squot64(sext_i32_i64(flat_segment_id_45416),
                                     i32_res_30143);
        int64_t gtid_33544 = sext_i32_i64(flat_segment_id_45416) -
                squot64(sext_i32_i64(flat_segment_id_45416), i32_res_30143) *
                i32_res_30143;
        int64_t gtid_33553;
        float x_acc_45418;
        int64_t chunk_sizze_45419;
        
        chunk_sizze_45419 = smin64(elements_per_thread_45396,
                                   sdiv_up64(i32_res_30143 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45417)),
                                             threads_per_segment_45399));
        
        float x_33606;
        float x_33607;
        
        // neutral-initialise the accumulators
        {
            x_acc_45418 = 0.0F;
        }
        for (int64_t i_45423 = 0; i_45423 < chunk_sizze_45419; i_45423++) {
            gtid_33553 = sext_i32_i64(sext_i64_i32(global_tid_45417)) +
                threads_per_segment_45399 * i_45423;
            // apply map function
            {
                float x_33612 = ((__global
                                  float *) defunc_3_map_res_mem_44004)[gtid_33543 *
                                                                       i32_res_30143 +
                                                                       gtid_33553];
                float x_33613 = ((__global
                                  float *) defunc_3_map_res_mem_43783)[gtid_33543 *
                                                                       (i32_res_30143 *
                                                                        i32_res_30143) +
                                                                       gtid_33544 *
                                                                       i32_res_30143 +
                                                                       gtid_33553];
                float defunc_1_f_res_33614 = x_33612 * x_33613;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_33606 = x_acc_45418;
                }
                // load new values
                {
                    x_33607 = defunc_1_f_res_33614;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_33608 = x_33606 + x_33607;
                    
                    // store in accumulator
                    {
                        x_acc_45418 = defunc_1_op_res_33608;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_33606 = x_acc_45418;
            ((__local
              float *) red_arr_mem_45409)[sext_i32_i64(local_tid_45405)] =
                x_33606;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45424;
        int32_t skip_waves_45425;
        
        skip_waves_45425 = 1;
        
        float x_45420;
        float x_45421;
        
        offset_45424 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45405,
                      sext_i64_i32(segred_group_sizze_33602))) {
                x_45420 = ((__local
                            float *) red_arr_mem_45409)[sext_i32_i64(local_tid_45405 +
                                                        offset_45424)];
            }
        }
        offset_45424 = 1;
        while (slt32(offset_45424, wave_sizze_45407)) {
            if (slt32(local_tid_45405 + offset_45424,
                      sext_i64_i32(segred_group_sizze_33602)) &&
                ((local_tid_45405 - squot32(local_tid_45405, wave_sizze_45407) *
                  wave_sizze_45407) & (2 * offset_45424 - 1)) == 0) {
                // read array element
                {
                    x_45421 = ((volatile __local
                                float *) red_arr_mem_45409)[sext_i32_i64(local_tid_45405 +
                                                            offset_45424)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45422 = x_45420 + x_45421;
                    
                    x_45420 = defunc_1_op_res_45422;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45409)[sext_i32_i64(local_tid_45405)] =
                        x_45420;
                }
            }
            offset_45424 *= 2;
        }
        while (slt32(skip_waves_45425,
                     squot32(sext_i64_i32(segred_group_sizze_33602) +
                             wave_sizze_45407 - 1, wave_sizze_45407))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45424 = skip_waves_45425 * wave_sizze_45407;
            if (slt32(local_tid_45405 + offset_45424,
                      sext_i64_i32(segred_group_sizze_33602)) &&
                ((local_tid_45405 - squot32(local_tid_45405, wave_sizze_45407) *
                  wave_sizze_45407) == 0 && (squot32(local_tid_45405,
                                                     wave_sizze_45407) & (2 *
                                                                          skip_waves_45425 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45421 = ((__local
                                float *) red_arr_mem_45409)[sext_i32_i64(local_tid_45405 +
                                                            offset_45424)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45422 = x_45420 + x_45421;
                    
                    x_45420 = defunc_1_op_res_45422;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45409)[sext_i32_i64(local_tid_45405)] =
                        x_45420;
                }
            }
            skip_waves_45425 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45405) == 0) {
                x_acc_45418 = x_45420;
            }
        }
        if (groups_per_segment_45395 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45405 == 0) {
                    ((__global float *) mem_44064)[gtid_33543 * i32_res_30143 +
                                                   gtid_33544] = x_acc_45418;
                }
            }
        } else {
            int32_t old_counter_45426;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45405 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45400)[sext_i32_i64(virt_group_id_45415) *
                                                        segred_group_sizze_33602] =
                        x_acc_45418;
                    mem_fence_global();
                    old_counter_45426 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45402)[sext_i32_i64(srem32(flat_segment_id_45416,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45411)[0] =
                        old_counter_45426 == groups_per_segment_45395 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45427;
            
            is_last_group_45427 = ((__local bool *) sync_arr_mem_45411)[0];
            if (is_last_group_45427) {
                if (local_tid_45405 == 0) {
                    old_counter_45426 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45402)[sext_i32_i64(srem32(flat_segment_id_45416,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_45395));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45428 =
                            sdiv_up64(groups_per_segment_45395,
                                      segred_group_sizze_33602);
                    
                    x_33606 = 0.0F;
                    for (int64_t i_45429 = 0; i_45429 < read_per_thread_45428;
                         i_45429++) {
                        int64_t group_res_id_45430 =
                                sext_i32_i64(local_tid_45405) *
                                read_per_thread_45428 + i_45429;
                        int64_t index_of_group_res_45431 =
                                sext_i32_i64(flat_segment_id_45416) *
                                groups_per_segment_45395 + group_res_id_45430;
                        
                        if (slt64(group_res_id_45430,
                                  groups_per_segment_45395)) {
                            x_33607 = ((__global
                                        float *) group_res_arr_mem_45400)[index_of_group_res_45431 *
                                                                          segred_group_sizze_33602];
                            
                            float defunc_1_op_res_33608;
                            
                            defunc_1_op_res_33608 = x_33606 + x_33607;
                            x_33606 = defunc_1_op_res_33608;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45409)[sext_i32_i64(local_tid_45405)] =
                    x_33606;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45432;
                    int32_t skip_waves_45433;
                    
                    skip_waves_45433 = 1;
                    
                    float x_45420;
                    float x_45421;
                    
                    offset_45432 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45405,
                                  sext_i64_i32(segred_group_sizze_33602))) {
                            x_45420 = ((__local
                                        float *) red_arr_mem_45409)[sext_i32_i64(local_tid_45405 +
                                                                    offset_45432)];
                        }
                    }
                    offset_45432 = 1;
                    while (slt32(offset_45432, wave_sizze_45407)) {
                        if (slt32(local_tid_45405 + offset_45432,
                                  sext_i64_i32(segred_group_sizze_33602)) &&
                            ((local_tid_45405 - squot32(local_tid_45405,
                                                        wave_sizze_45407) *
                              wave_sizze_45407) & (2 * offset_45432 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45421 = ((volatile __local
                                            float *) red_arr_mem_45409)[sext_i32_i64(local_tid_45405 +
                                                                        offset_45432)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45422 = x_45420 + x_45421;
                                
                                x_45420 = defunc_1_op_res_45422;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45409)[sext_i32_i64(local_tid_45405)] =
                                    x_45420;
                            }
                        }
                        offset_45432 *= 2;
                    }
                    while (slt32(skip_waves_45433,
                                 squot32(sext_i64_i32(segred_group_sizze_33602) +
                                         wave_sizze_45407 - 1,
                                         wave_sizze_45407))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45432 = skip_waves_45433 * wave_sizze_45407;
                        if (slt32(local_tid_45405 + offset_45432,
                                  sext_i64_i32(segred_group_sizze_33602)) &&
                            ((local_tid_45405 - squot32(local_tid_45405,
                                                        wave_sizze_45407) *
                              wave_sizze_45407) == 0 &&
                             (squot32(local_tid_45405, wave_sizze_45407) & (2 *
                                                                            skip_waves_45433 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45421 = ((__local
                                            float *) red_arr_mem_45409)[sext_i32_i64(local_tid_45405 +
                                                                        offset_45432)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45422 = x_45420 + x_45421;
                                
                                x_45420 = defunc_1_op_res_45422;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45409)[sext_i32_i64(local_tid_45405)] =
                                    x_45420;
                            }
                        }
                        skip_waves_45433 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45405 == 0) {
                            ((__global float *) mem_44064)[gtid_33543 *
                                                           i32_res_30143 +
                                                           gtid_33544] =
                                x_45420;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33602
}
__kernel void mainDetailedzisegred_large_33684(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_45543_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45541_backing_aligned_1,
                                               int64_t N_30123,
                                               int64_t i32_res_30143,
                                               int64_t num_groups_33731,
                                               __global
                                               unsigned char *mem_43548,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_44070,
                                               __global
                                               unsigned char *mem_44288,
                                               int64_t groups_per_segment_45527,
                                               int64_t elements_per_thread_45528,
                                               int64_t virt_num_groups_45529,
                                               int64_t threads_per_segment_45531,
                                               __global
                                               unsigned char *group_res_arr_mem_45532,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_45534)
{
    #define segred_group_sizze_33730 (mainDetailedzisegred_group_sizze_33678)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45543_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45543_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45541_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45541_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45536;
    int32_t local_tid_45537;
    int64_t group_sizze_45540;
    int32_t wave_sizze_45539;
    int32_t group_tid_45538;
    
    global_tid_45536 = get_global_id(0);
    local_tid_45537 = get_local_id(0);
    group_sizze_45540 = get_local_size(0);
    wave_sizze_45539 = LOCKSTEP_WIDTH;
    group_tid_45538 = get_group_id(0);
    
    int32_t phys_tid_33684;
    
    phys_tid_33684 = global_tid_45536;
    
    __local char *red_arr_mem_45541;
    
    red_arr_mem_45541 = (__local char *) red_arr_mem_45541_backing_0;
    
    __local char *sync_arr_mem_45543;
    
    sync_arr_mem_45543 = (__local char *) sync_arr_mem_45543_backing_1;
    
    int32_t phys_group_id_45545;
    
    phys_group_id_45545 = get_group_id(0);
    for (int32_t i_45546 = 0; i_45546 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45529) - phys_group_id_45545,
                   sext_i64_i32(num_groups_33731)); i_45546++) {
        int32_t virt_group_id_45547 = phys_group_id_45545 + i_45546 *
                sext_i64_i32(num_groups_33731);
        int32_t flat_segment_id_45548 = squot32(virt_group_id_45547,
                                                sext_i64_i32(groups_per_segment_45527));
        int64_t global_tid_45549 = srem64(sext_i32_i64(virt_group_id_45547) *
                                          segred_group_sizze_33730 +
                                          sext_i32_i64(local_tid_45537),
                                          segred_group_sizze_33730 *
                                          groups_per_segment_45527);
        int64_t gtid_33673 = squot64(sext_i32_i64(flat_segment_id_45548),
                                     N_30123);
        int64_t gtid_33674 = sext_i32_i64(flat_segment_id_45548) -
                squot64(sext_i32_i64(flat_segment_id_45548), N_30123) * N_30123;
        int64_t gtid_33683;
        float x_acc_45550;
        int64_t chunk_sizze_45551;
        
        chunk_sizze_45551 = smin64(elements_per_thread_45528,
                                   sdiv_up64(i32_res_30143 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45549)),
                                             threads_per_segment_45531));
        
        float x_33734;
        float x_33735;
        
        // neutral-initialise the accumulators
        {
            x_acc_45550 = 0.0F;
        }
        for (int64_t i_45555 = 0; i_45555 < chunk_sizze_45551; i_45555++) {
            gtid_33683 = sext_i32_i64(sext_i64_i32(global_tid_45549)) +
                threads_per_segment_45531 * i_45555;
            // apply map function
            {
                float x_33739 = ((__global
                                  float *) defunc_4_map_res_mem_44070)[gtid_33673 *
                                                                       i32_res_30143 +
                                                                       gtid_33683];
                float x_33740 = ((__global float *) mem_43548)[gtid_33674 *
                                                               i32_res_30143 +
                                                               gtid_33683];
                float defunc_1_f_res_33741 = x_33739 * x_33740;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_33734 = x_acc_45550;
                }
                // load new values
                {
                    x_33735 = defunc_1_f_res_33741;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_33736 = x_33734 + x_33735;
                    
                    // store in accumulator
                    {
                        x_acc_45550 = defunc_1_op_res_33736;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_33734 = x_acc_45550;
            ((__local
              float *) red_arr_mem_45541)[sext_i32_i64(local_tid_45537)] =
                x_33734;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45556;
        int32_t skip_waves_45557;
        
        skip_waves_45557 = 1;
        
        float x_45552;
        float x_45553;
        
        offset_45556 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45537,
                      sext_i64_i32(segred_group_sizze_33730))) {
                x_45552 = ((__local
                            float *) red_arr_mem_45541)[sext_i32_i64(local_tid_45537 +
                                                        offset_45556)];
            }
        }
        offset_45556 = 1;
        while (slt32(offset_45556, wave_sizze_45539)) {
            if (slt32(local_tid_45537 + offset_45556,
                      sext_i64_i32(segred_group_sizze_33730)) &&
                ((local_tid_45537 - squot32(local_tid_45537, wave_sizze_45539) *
                  wave_sizze_45539) & (2 * offset_45556 - 1)) == 0) {
                // read array element
                {
                    x_45553 = ((volatile __local
                                float *) red_arr_mem_45541)[sext_i32_i64(local_tid_45537 +
                                                            offset_45556)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45554 = x_45552 + x_45553;
                    
                    x_45552 = defunc_1_op_res_45554;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45541)[sext_i32_i64(local_tid_45537)] =
                        x_45552;
                }
            }
            offset_45556 *= 2;
        }
        while (slt32(skip_waves_45557,
                     squot32(sext_i64_i32(segred_group_sizze_33730) +
                             wave_sizze_45539 - 1, wave_sizze_45539))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45556 = skip_waves_45557 * wave_sizze_45539;
            if (slt32(local_tid_45537 + offset_45556,
                      sext_i64_i32(segred_group_sizze_33730)) &&
                ((local_tid_45537 - squot32(local_tid_45537, wave_sizze_45539) *
                  wave_sizze_45539) == 0 && (squot32(local_tid_45537,
                                                     wave_sizze_45539) & (2 *
                                                                          skip_waves_45557 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45553 = ((__local
                                float *) red_arr_mem_45541)[sext_i32_i64(local_tid_45537 +
                                                            offset_45556)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45554 = x_45552 + x_45553;
                    
                    x_45552 = defunc_1_op_res_45554;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45541)[sext_i32_i64(local_tid_45537)] =
                        x_45552;
                }
            }
            skip_waves_45557 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45537) == 0) {
                x_acc_45550 = x_45552;
            }
        }
        if (groups_per_segment_45527 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45537 == 0) {
                    ((__global float *) mem_44288)[gtid_33673 * N_30123 +
                                                   gtid_33674] = x_acc_45550;
                }
            }
        } else {
            int32_t old_counter_45558;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45537 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45532)[sext_i32_i64(virt_group_id_45547) *
                                                        segred_group_sizze_33730] =
                        x_acc_45550;
                    mem_fence_global();
                    old_counter_45558 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45534)[sext_i32_i64(srem32(flat_segment_id_45548,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45543)[0] =
                        old_counter_45558 == groups_per_segment_45527 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45559;
            
            is_last_group_45559 = ((__local bool *) sync_arr_mem_45543)[0];
            if (is_last_group_45559) {
                if (local_tid_45537 == 0) {
                    old_counter_45558 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45534)[sext_i32_i64(srem32(flat_segment_id_45548,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_45527));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45560 =
                            sdiv_up64(groups_per_segment_45527,
                                      segred_group_sizze_33730);
                    
                    x_33734 = 0.0F;
                    for (int64_t i_45561 = 0; i_45561 < read_per_thread_45560;
                         i_45561++) {
                        int64_t group_res_id_45562 =
                                sext_i32_i64(local_tid_45537) *
                                read_per_thread_45560 + i_45561;
                        int64_t index_of_group_res_45563 =
                                sext_i32_i64(flat_segment_id_45548) *
                                groups_per_segment_45527 + group_res_id_45562;
                        
                        if (slt64(group_res_id_45562,
                                  groups_per_segment_45527)) {
                            x_33735 = ((__global
                                        float *) group_res_arr_mem_45532)[index_of_group_res_45563 *
                                                                          segred_group_sizze_33730];
                            
                            float defunc_1_op_res_33736;
                            
                            defunc_1_op_res_33736 = x_33734 + x_33735;
                            x_33734 = defunc_1_op_res_33736;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45541)[sext_i32_i64(local_tid_45537)] =
                    x_33734;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45564;
                    int32_t skip_waves_45565;
                    
                    skip_waves_45565 = 1;
                    
                    float x_45552;
                    float x_45553;
                    
                    offset_45564 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45537,
                                  sext_i64_i32(segred_group_sizze_33730))) {
                            x_45552 = ((__local
                                        float *) red_arr_mem_45541)[sext_i32_i64(local_tid_45537 +
                                                                    offset_45564)];
                        }
                    }
                    offset_45564 = 1;
                    while (slt32(offset_45564, wave_sizze_45539)) {
                        if (slt32(local_tid_45537 + offset_45564,
                                  sext_i64_i32(segred_group_sizze_33730)) &&
                            ((local_tid_45537 - squot32(local_tid_45537,
                                                        wave_sizze_45539) *
                              wave_sizze_45539) & (2 * offset_45564 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45553 = ((volatile __local
                                            float *) red_arr_mem_45541)[sext_i32_i64(local_tid_45537 +
                                                                        offset_45564)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45554 = x_45552 + x_45553;
                                
                                x_45552 = defunc_1_op_res_45554;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45541)[sext_i32_i64(local_tid_45537)] =
                                    x_45552;
                            }
                        }
                        offset_45564 *= 2;
                    }
                    while (slt32(skip_waves_45565,
                                 squot32(sext_i64_i32(segred_group_sizze_33730) +
                                         wave_sizze_45539 - 1,
                                         wave_sizze_45539))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45564 = skip_waves_45565 * wave_sizze_45539;
                        if (slt32(local_tid_45537 + offset_45564,
                                  sext_i64_i32(segred_group_sizze_33730)) &&
                            ((local_tid_45537 - squot32(local_tid_45537,
                                                        wave_sizze_45539) *
                              wave_sizze_45539) == 0 &&
                             (squot32(local_tid_45537, wave_sizze_45539) & (2 *
                                                                            skip_waves_45565 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45553 = ((__local
                                            float *) red_arr_mem_45541)[sext_i32_i64(local_tid_45537 +
                                                                        offset_45564)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45554 = x_45552 + x_45553;
                                
                                x_45552 = defunc_1_op_res_45554;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45541)[sext_i32_i64(local_tid_45537)] =
                                    x_45552;
                            }
                        }
                        skip_waves_45565 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45537 == 0) {
                            ((__global float *) mem_44288)[gtid_33673 *
                                                           N_30123 +
                                                           gtid_33674] =
                                x_45552;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33730
}
__kernel void mainDetailedzisegred_large_34250(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_45797_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45795_backing_aligned_1,
                                               int64_t N_30123,
                                               int64_t i32_res_30137,
                                               int64_t num_groups_34297,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_44332,
                                               __global
                                               unsigned char *mem_44383,
                                               __global
                                               unsigned char *mem_44386,
                                               int64_t groups_per_segment_45781,
                                               int64_t elements_per_thread_45782,
                                               int64_t virt_num_groups_45783,
                                               int64_t threads_per_segment_45785,
                                               __global
                                               unsigned char *group_res_arr_mem_45786,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_45788)
{
    #define segred_group_sizze_34296 (mainDetailedzisegred_group_sizze_34244)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45797_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45797_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45795_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45795_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45790;
    int32_t local_tid_45791;
    int64_t group_sizze_45794;
    int32_t wave_sizze_45793;
    int32_t group_tid_45792;
    
    global_tid_45790 = get_global_id(0);
    local_tid_45791 = get_local_id(0);
    group_sizze_45794 = get_local_size(0);
    wave_sizze_45793 = LOCKSTEP_WIDTH;
    group_tid_45792 = get_group_id(0);
    
    int32_t phys_tid_34250;
    
    phys_tid_34250 = global_tid_45790;
    
    __local char *red_arr_mem_45795;
    
    red_arr_mem_45795 = (__local char *) red_arr_mem_45795_backing_0;
    
    __local char *sync_arr_mem_45797;
    
    sync_arr_mem_45797 = (__local char *) sync_arr_mem_45797_backing_1;
    
    int32_t phys_group_id_45799;
    
    phys_group_id_45799 = get_group_id(0);
    for (int32_t i_45800 = 0; i_45800 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45783) - phys_group_id_45799,
                   sext_i64_i32(num_groups_34297)); i_45800++) {
        int32_t virt_group_id_45801 = phys_group_id_45799 + i_45800 *
                sext_i64_i32(num_groups_34297);
        int32_t flat_segment_id_45802 = squot32(virt_group_id_45801,
                                                sext_i64_i32(groups_per_segment_45781));
        int64_t global_tid_45803 = srem64(sext_i32_i64(virt_group_id_45801) *
                                          segred_group_sizze_34296 +
                                          sext_i32_i64(local_tid_45791),
                                          segred_group_sizze_34296 *
                                          groups_per_segment_45781);
        int64_t gtid_34241 = sext_i32_i64(flat_segment_id_45802);
        int64_t gtid_34249;
        float x_acc_45804;
        int64_t chunk_sizze_45805;
        
        chunk_sizze_45805 = smin64(elements_per_thread_45782,
                                   sdiv_up64(i32_res_30137 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45803)),
                                             threads_per_segment_45785));
        
        float x_34300;
        float x_34301;
        
        // neutral-initialise the accumulators
        {
            x_acc_45804 = 0.0F;
        }
        for (int64_t i_45809 = 0; i_45809 < chunk_sizze_45805; i_45809++) {
            gtid_34249 = sext_i32_i64(sext_i64_i32(global_tid_45803)) +
                threads_per_segment_45785 * i_45809;
            // apply map function
            {
                int32_t defunc_0_f_res_34304 = ((__global
                                                 int32_t *) mem_44383)[gtid_34241];
                int32_t index_primexp_41523 = sext_i64_i32(gtid_34249);
                bool cond_34306 = slt32(index_primexp_41523,
                                        defunc_0_f_res_34304);
                float defunc_0_f_res_34307;
                
                if (cond_34306) {
                    int64_t i_34308 = sext_i32_i64(index_primexp_41523);
                    float defunc_0_f_res_t_res_34309 = ((__global
                                                         float *) defunc_4_map_res_mem_44332)[gtid_34241 *
                                                                                              N_30123 +
                                                                                              i_34308];
                    
                    defunc_0_f_res_34307 = defunc_0_f_res_t_res_34309;
                } else {
                    defunc_0_f_res_34307 = 0.0F;
                }
                
                float defunc_0_f_res_34310 = defunc_0_f_res_34307 *
                      defunc_0_f_res_34307;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_34300 = x_acc_45804;
                }
                // load new values
                {
                    x_34301 = defunc_0_f_res_34310;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_34302 = x_34300 + x_34301;
                    
                    // store in accumulator
                    {
                        x_acc_45804 = defunc_1_op_res_34302;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_34300 = x_acc_45804;
            ((__local
              float *) red_arr_mem_45795)[sext_i32_i64(local_tid_45791)] =
                x_34300;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45810;
        int32_t skip_waves_45811;
        
        skip_waves_45811 = 1;
        
        float x_45806;
        float x_45807;
        
        offset_45810 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45791,
                      sext_i64_i32(segred_group_sizze_34296))) {
                x_45806 = ((__local
                            float *) red_arr_mem_45795)[sext_i32_i64(local_tid_45791 +
                                                        offset_45810)];
            }
        }
        offset_45810 = 1;
        while (slt32(offset_45810, wave_sizze_45793)) {
            if (slt32(local_tid_45791 + offset_45810,
                      sext_i64_i32(segred_group_sizze_34296)) &&
                ((local_tid_45791 - squot32(local_tid_45791, wave_sizze_45793) *
                  wave_sizze_45793) & (2 * offset_45810 - 1)) == 0) {
                // read array element
                {
                    x_45807 = ((volatile __local
                                float *) red_arr_mem_45795)[sext_i32_i64(local_tid_45791 +
                                                            offset_45810)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45808 = x_45806 + x_45807;
                    
                    x_45806 = defunc_1_op_res_45808;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45795)[sext_i32_i64(local_tid_45791)] =
                        x_45806;
                }
            }
            offset_45810 *= 2;
        }
        while (slt32(skip_waves_45811,
                     squot32(sext_i64_i32(segred_group_sizze_34296) +
                             wave_sizze_45793 - 1, wave_sizze_45793))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45810 = skip_waves_45811 * wave_sizze_45793;
            if (slt32(local_tid_45791 + offset_45810,
                      sext_i64_i32(segred_group_sizze_34296)) &&
                ((local_tid_45791 - squot32(local_tid_45791, wave_sizze_45793) *
                  wave_sizze_45793) == 0 && (squot32(local_tid_45791,
                                                     wave_sizze_45793) & (2 *
                                                                          skip_waves_45811 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45807 = ((__local
                                float *) red_arr_mem_45795)[sext_i32_i64(local_tid_45791 +
                                                            offset_45810)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45808 = x_45806 + x_45807;
                    
                    x_45806 = defunc_1_op_res_45808;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45795)[sext_i32_i64(local_tid_45791)] =
                        x_45806;
                }
            }
            skip_waves_45811 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45791) == 0) {
                x_acc_45804 = x_45806;
            }
        }
        if (groups_per_segment_45781 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45791 == 0) {
                    ((__global float *) mem_44386)[gtid_34241] = x_acc_45804;
                }
            }
        } else {
            int32_t old_counter_45812;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45791 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45786)[sext_i32_i64(virt_group_id_45801) *
                                                        segred_group_sizze_34296] =
                        x_acc_45804;
                    mem_fence_global();
                    old_counter_45812 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45788)[sext_i32_i64(srem32(flat_segment_id_45802,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45797)[0] =
                        old_counter_45812 == groups_per_segment_45781 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45813;
            
            is_last_group_45813 = ((__local bool *) sync_arr_mem_45797)[0];
            if (is_last_group_45813) {
                if (local_tid_45791 == 0) {
                    old_counter_45812 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45788)[sext_i32_i64(srem32(flat_segment_id_45802,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_45781));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45814 =
                            sdiv_up64(groups_per_segment_45781,
                                      segred_group_sizze_34296);
                    
                    x_34300 = 0.0F;
                    for (int64_t i_45815 = 0; i_45815 < read_per_thread_45814;
                         i_45815++) {
                        int64_t group_res_id_45816 =
                                sext_i32_i64(local_tid_45791) *
                                read_per_thread_45814 + i_45815;
                        int64_t index_of_group_res_45817 =
                                sext_i32_i64(flat_segment_id_45802) *
                                groups_per_segment_45781 + group_res_id_45816;
                        
                        if (slt64(group_res_id_45816,
                                  groups_per_segment_45781)) {
                            x_34301 = ((__global
                                        float *) group_res_arr_mem_45786)[index_of_group_res_45817 *
                                                                          segred_group_sizze_34296];
                            
                            float defunc_1_op_res_34302;
                            
                            defunc_1_op_res_34302 = x_34300 + x_34301;
                            x_34300 = defunc_1_op_res_34302;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45795)[sext_i32_i64(local_tid_45791)] =
                    x_34300;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45818;
                    int32_t skip_waves_45819;
                    
                    skip_waves_45819 = 1;
                    
                    float x_45806;
                    float x_45807;
                    
                    offset_45818 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45791,
                                  sext_i64_i32(segred_group_sizze_34296))) {
                            x_45806 = ((__local
                                        float *) red_arr_mem_45795)[sext_i32_i64(local_tid_45791 +
                                                                    offset_45818)];
                        }
                    }
                    offset_45818 = 1;
                    while (slt32(offset_45818, wave_sizze_45793)) {
                        if (slt32(local_tid_45791 + offset_45818,
                                  sext_i64_i32(segred_group_sizze_34296)) &&
                            ((local_tid_45791 - squot32(local_tid_45791,
                                                        wave_sizze_45793) *
                              wave_sizze_45793) & (2 * offset_45818 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45807 = ((volatile __local
                                            float *) red_arr_mem_45795)[sext_i32_i64(local_tid_45791 +
                                                                        offset_45818)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45808 = x_45806 + x_45807;
                                
                                x_45806 = defunc_1_op_res_45808;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45795)[sext_i32_i64(local_tid_45791)] =
                                    x_45806;
                            }
                        }
                        offset_45818 *= 2;
                    }
                    while (slt32(skip_waves_45819,
                                 squot32(sext_i64_i32(segred_group_sizze_34296) +
                                         wave_sizze_45793 - 1,
                                         wave_sizze_45793))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45818 = skip_waves_45819 * wave_sizze_45793;
                        if (slt32(local_tid_45791 + offset_45818,
                                  sext_i64_i32(segred_group_sizze_34296)) &&
                            ((local_tid_45791 - squot32(local_tid_45791,
                                                        wave_sizze_45793) *
                              wave_sizze_45793) == 0 &&
                             (squot32(local_tid_45791, wave_sizze_45793) & (2 *
                                                                            skip_waves_45819 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45807 = ((__local
                                            float *) red_arr_mem_45795)[sext_i32_i64(local_tid_45791 +
                                                                        offset_45818)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45808 = x_45806 + x_45807;
                                
                                x_45806 = defunc_1_op_res_45808;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45795)[sext_i32_i64(local_tid_45791)] =
                                    x_45806;
                            }
                        }
                        skip_waves_45819 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45791 == 0) {
                            ((__global float *) mem_44386)[gtid_34241] =
                                x_45806;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34296
}
__kernel void mainDetailedzisegred_large_34271(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_45737_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45735_backing_aligned_1,
                                               int64_t N_30125,
                                               int64_t i32_res_30137,
                                               int64_t num_groups_34283,
                                               __global
                                               unsigned char *images_mem_43532,
                                               __global
                                               unsigned char *mem_44383,
                                               int64_t groups_per_segment_45721,
                                               int64_t elements_per_thread_45722,
                                               int64_t virt_num_groups_45723,
                                               int64_t threads_per_segment_45725,
                                               __global
                                               unsigned char *group_res_arr_mem_45726,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_45728)
{
    #define segred_group_sizze_34282 (mainDetailedzisegred_group_sizze_34265)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45737_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45737_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45735_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45735_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45730;
    int32_t local_tid_45731;
    int64_t group_sizze_45734;
    int32_t wave_sizze_45733;
    int32_t group_tid_45732;
    
    global_tid_45730 = get_global_id(0);
    local_tid_45731 = get_local_id(0);
    group_sizze_45734 = get_local_size(0);
    wave_sizze_45733 = LOCKSTEP_WIDTH;
    group_tid_45732 = get_group_id(0);
    
    int32_t phys_tid_34271;
    
    phys_tid_34271 = global_tid_45730;
    
    __local char *red_arr_mem_45735;
    
    red_arr_mem_45735 = (__local char *) red_arr_mem_45735_backing_0;
    
    __local char *sync_arr_mem_45737;
    
    sync_arr_mem_45737 = (__local char *) sync_arr_mem_45737_backing_1;
    
    int32_t phys_group_id_45739;
    
    phys_group_id_45739 = get_group_id(0);
    for (int32_t i_45740 = 0; i_45740 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45723) - phys_group_id_45739,
                   sext_i64_i32(num_groups_34283)); i_45740++) {
        int32_t virt_group_id_45741 = phys_group_id_45739 + i_45740 *
                sext_i64_i32(num_groups_34283);
        int32_t flat_segment_id_45742 = squot32(virt_group_id_45741,
                                                sext_i64_i32(groups_per_segment_45721));
        int64_t global_tid_45743 = srem64(sext_i32_i64(virt_group_id_45741) *
                                          segred_group_sizze_34282 +
                                          sext_i32_i64(local_tid_45731),
                                          segred_group_sizze_34282 *
                                          groups_per_segment_45721);
        int64_t gtid_34262 = sext_i32_i64(flat_segment_id_45742);
        int64_t gtid_34270;
        int32_t x_acc_45744;
        int64_t chunk_sizze_45745;
        
        chunk_sizze_45745 = smin64(elements_per_thread_45722,
                                   sdiv_up64(i32_res_30137 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45743)),
                                             threads_per_segment_45725));
        
        int32_t x_34286;
        int32_t x_34287;
        
        // neutral-initialise the accumulators
        {
            x_acc_45744 = 0;
        }
        for (int64_t i_45749 = 0; i_45749 < chunk_sizze_45745; i_45749++) {
            gtid_34270 = sext_i32_i64(sext_i64_i32(global_tid_45743)) +
                threads_per_segment_45725 * i_45749;
            // apply map function
            {
                float x_34290 = ((__global
                                  float *) images_mem_43532)[gtid_34262 *
                                                             N_30125 +
                                                             gtid_34270];
                bool isnan_res_34291;
                
                isnan_res_34291 = futrts_isnan32(x_34290);
                
                bool cond_34292 = !isnan_res_34291;
                int32_t defunc_0_f_res_34293 = btoi_bool_i32(cond_34292);
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_34286 = x_acc_45744;
                }
                // load new values
                {
                    x_34287 = defunc_0_f_res_34293;
                }
                // apply reduction operator
                {
                    int32_t defunc_1_op_res_34288 = add32(x_34286, x_34287);
                    
                    // store in accumulator
                    {
                        x_acc_45744 = defunc_1_op_res_34288;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_34286 = x_acc_45744;
            ((__local
              int32_t *) red_arr_mem_45735)[sext_i32_i64(local_tid_45731)] =
                x_34286;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45750;
        int32_t skip_waves_45751;
        
        skip_waves_45751 = 1;
        
        int32_t x_45746;
        int32_t x_45747;
        
        offset_45750 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45731,
                      sext_i64_i32(segred_group_sizze_34282))) {
                x_45746 = ((__local
                            int32_t *) red_arr_mem_45735)[sext_i32_i64(local_tid_45731 +
                                                          offset_45750)];
            }
        }
        offset_45750 = 1;
        while (slt32(offset_45750, wave_sizze_45733)) {
            if (slt32(local_tid_45731 + offset_45750,
                      sext_i64_i32(segred_group_sizze_34282)) &&
                ((local_tid_45731 - squot32(local_tid_45731, wave_sizze_45733) *
                  wave_sizze_45733) & (2 * offset_45750 - 1)) == 0) {
                // read array element
                {
                    x_45747 = ((volatile __local
                                int32_t *) red_arr_mem_45735)[sext_i32_i64(local_tid_45731 +
                                                              offset_45750)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_45748 = add32(x_45746, x_45747);
                    
                    x_45746 = defunc_1_op_res_45748;
                }
                // write result of operation
                {
                    ((volatile __local
                      int32_t *) red_arr_mem_45735)[sext_i32_i64(local_tid_45731)] =
                        x_45746;
                }
            }
            offset_45750 *= 2;
        }
        while (slt32(skip_waves_45751,
                     squot32(sext_i64_i32(segred_group_sizze_34282) +
                             wave_sizze_45733 - 1, wave_sizze_45733))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45750 = skip_waves_45751 * wave_sizze_45733;
            if (slt32(local_tid_45731 + offset_45750,
                      sext_i64_i32(segred_group_sizze_34282)) &&
                ((local_tid_45731 - squot32(local_tid_45731, wave_sizze_45733) *
                  wave_sizze_45733) == 0 && (squot32(local_tid_45731,
                                                     wave_sizze_45733) & (2 *
                                                                          skip_waves_45751 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45747 = ((__local
                                int32_t *) red_arr_mem_45735)[sext_i32_i64(local_tid_45731 +
                                                              offset_45750)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_45748 = add32(x_45746, x_45747);
                    
                    x_45746 = defunc_1_op_res_45748;
                }
                // write result of operation
                {
                    ((__local
                      int32_t *) red_arr_mem_45735)[sext_i32_i64(local_tid_45731)] =
                        x_45746;
                }
            }
            skip_waves_45751 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45731) == 0) {
                x_acc_45744 = x_45746;
            }
        }
        if (groups_per_segment_45721 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45731 == 0) {
                    ((__global int32_t *) mem_44383)[gtid_34262] = x_acc_45744;
                }
            }
        } else {
            int32_t old_counter_45752;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45731 == 0) {
                    ((__global
                      int32_t *) group_res_arr_mem_45726)[sext_i32_i64(virt_group_id_45741) *
                                                          segred_group_sizze_34282] =
                        x_acc_45744;
                    mem_fence_global();
                    old_counter_45752 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45728)[sext_i32_i64(srem32(flat_segment_id_45742,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45737)[0] =
                        old_counter_45752 == groups_per_segment_45721 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45753;
            
            is_last_group_45753 = ((__local bool *) sync_arr_mem_45737)[0];
            if (is_last_group_45753) {
                if (local_tid_45731 == 0) {
                    old_counter_45752 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45728)[sext_i32_i64(srem32(flat_segment_id_45742,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_45721));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45754 =
                            sdiv_up64(groups_per_segment_45721,
                                      segred_group_sizze_34282);
                    
                    x_34286 = 0;
                    for (int64_t i_45755 = 0; i_45755 < read_per_thread_45754;
                         i_45755++) {
                        int64_t group_res_id_45756 =
                                sext_i32_i64(local_tid_45731) *
                                read_per_thread_45754 + i_45755;
                        int64_t index_of_group_res_45757 =
                                sext_i32_i64(flat_segment_id_45742) *
                                groups_per_segment_45721 + group_res_id_45756;
                        
                        if (slt64(group_res_id_45756,
                                  groups_per_segment_45721)) {
                            x_34287 = ((__global
                                        int32_t *) group_res_arr_mem_45726)[index_of_group_res_45757 *
                                                                            segred_group_sizze_34282];
                            
                            int32_t defunc_1_op_res_34288;
                            
                            defunc_1_op_res_34288 = add32(x_34286, x_34287);
                            x_34286 = defunc_1_op_res_34288;
                        }
                    }
                }
                ((__local
                  int32_t *) red_arr_mem_45735)[sext_i32_i64(local_tid_45731)] =
                    x_34286;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45758;
                    int32_t skip_waves_45759;
                    
                    skip_waves_45759 = 1;
                    
                    int32_t x_45746;
                    int32_t x_45747;
                    
                    offset_45758 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45731,
                                  sext_i64_i32(segred_group_sizze_34282))) {
                            x_45746 = ((__local
                                        int32_t *) red_arr_mem_45735)[sext_i32_i64(local_tid_45731 +
                                                                      offset_45758)];
                        }
                    }
                    offset_45758 = 1;
                    while (slt32(offset_45758, wave_sizze_45733)) {
                        if (slt32(local_tid_45731 + offset_45758,
                                  sext_i64_i32(segred_group_sizze_34282)) &&
                            ((local_tid_45731 - squot32(local_tid_45731,
                                                        wave_sizze_45733) *
                              wave_sizze_45733) & (2 * offset_45758 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45747 = ((volatile __local
                                            int32_t *) red_arr_mem_45735)[sext_i32_i64(local_tid_45731 +
                                                                          offset_45758)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_45748 = add32(x_45746,
                                                                      x_45747);
                                
                                x_45746 = defunc_1_op_res_45748;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_45735)[sext_i32_i64(local_tid_45731)] =
                                    x_45746;
                            }
                        }
                        offset_45758 *= 2;
                    }
                    while (slt32(skip_waves_45759,
                                 squot32(sext_i64_i32(segred_group_sizze_34282) +
                                         wave_sizze_45733 - 1,
                                         wave_sizze_45733))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45758 = skip_waves_45759 * wave_sizze_45733;
                        if (slt32(local_tid_45731 + offset_45758,
                                  sext_i64_i32(segred_group_sizze_34282)) &&
                            ((local_tid_45731 - squot32(local_tid_45731,
                                                        wave_sizze_45733) *
                              wave_sizze_45733) == 0 &&
                             (squot32(local_tid_45731, wave_sizze_45733) & (2 *
                                                                            skip_waves_45759 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45747 = ((__local
                                            int32_t *) red_arr_mem_45735)[sext_i32_i64(local_tid_45731 +
                                                                          offset_45758)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_45748 = add32(x_45746,
                                                                      x_45747);
                                
                                x_45746 = defunc_1_op_res_45748;
                            }
                            // write result of operation
                            {
                                ((__local
                                  int32_t *) red_arr_mem_45735)[sext_i32_i64(local_tid_45731)] =
                                    x_45746;
                            }
                        }
                        skip_waves_45759 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45731 == 0) {
                            ((__global int32_t *) mem_44383)[gtid_34262] =
                                x_45746;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34282
}
__kernel void mainDetailedzisegred_large_34422(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_45906_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45904_backing_aligned_1,
                                               int64_t N_30123,
                                               int64_t i32_res_30485,
                                               int64_t num_groups_34440,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_44332,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_44395,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_44396,
                                               __global
                                               unsigned char *mem_44429,
                                               int64_t groups_per_segment_45890,
                                               int64_t elements_per_thread_45891,
                                               int64_t virt_num_groups_45892,
                                               int64_t threads_per_segment_45894,
                                               __global
                                               unsigned char *group_res_arr_mem_45895,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_45897)
{
    #define segred_group_sizze_34439 (mainDetailedzisegred_group_sizze_34416)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45906_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45906_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45904_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45904_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45899;
    int32_t local_tid_45900;
    int64_t group_sizze_45903;
    int32_t wave_sizze_45902;
    int32_t group_tid_45901;
    
    global_tid_45899 = get_global_id(0);
    local_tid_45900 = get_local_id(0);
    group_sizze_45903 = get_local_size(0);
    wave_sizze_45902 = LOCKSTEP_WIDTH;
    group_tid_45901 = get_group_id(0);
    
    int32_t phys_tid_34422;
    
    phys_tid_34422 = global_tid_45899;
    
    __local char *red_arr_mem_45904;
    
    red_arr_mem_45904 = (__local char *) red_arr_mem_45904_backing_0;
    
    __local char *sync_arr_mem_45906;
    
    sync_arr_mem_45906 = (__local char *) sync_arr_mem_45906_backing_1;
    
    int32_t phys_group_id_45908;
    
    phys_group_id_45908 = get_group_id(0);
    for (int32_t i_45909 = 0; i_45909 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45892) - phys_group_id_45908,
                   sext_i64_i32(num_groups_34440)); i_45909++) {
        int32_t virt_group_id_45910 = phys_group_id_45908 + i_45909 *
                sext_i64_i32(num_groups_34440);
        int32_t flat_segment_id_45911 = squot32(virt_group_id_45910,
                                                sext_i64_i32(groups_per_segment_45890));
        int64_t global_tid_45912 = srem64(sext_i32_i64(virt_group_id_45910) *
                                          segred_group_sizze_34439 +
                                          sext_i32_i64(local_tid_45900),
                                          segred_group_sizze_34439 *
                                          groups_per_segment_45890);
        int64_t gtid_34413 = sext_i32_i64(flat_segment_id_45911);
        int64_t gtid_34421;
        float x_acc_45913;
        int64_t chunk_sizze_45914;
        
        chunk_sizze_45914 = smin64(elements_per_thread_45891,
                                   sdiv_up64(i32_res_30485 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45912)),
                                             threads_per_segment_45894));
        
        float x_34443;
        float x_34444;
        
        // neutral-initialise the accumulators
        {
            x_acc_45913 = 0.0F;
        }
        for (int64_t i_45918 = 0; i_45918 < chunk_sizze_45914; i_45918++) {
            gtid_34421 = sext_i32_i64(sext_i64_i32(global_tid_45912)) +
                threads_per_segment_45894 * i_45918;
            // apply map function
            {
                int32_t x_34448 = ((__global
                                    int32_t *) defunc_3_map_res_mem_44395)[gtid_34413];
                int32_t index_primexp_41528 = sext_i64_i32(gtid_34421);
                bool cond_34450 = slt32(index_primexp_41528, x_34448);
                float defunc_0_f_res_34451;
                
                if (cond_34450) {
                    int32_t x_34447 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44396)[gtid_34413];
                    int32_t x_34452 = add32(x_34447, index_primexp_41528);
                    int32_t x_34453 = sub32(x_34452, x_34448);
                    int32_t i_34454 = add32(1, x_34453);
                    int64_t i_34455 = sext_i32_i64(i_34454);
                    float defunc_0_f_res_t_res_34456 = ((__global
                                                         float *) defunc_4_map_res_mem_44332)[gtid_34413 *
                                                                                              N_30123 +
                                                                                              i_34455];
                    
                    defunc_0_f_res_34451 = defunc_0_f_res_t_res_34456;
                } else {
                    defunc_0_f_res_34451 = 0.0F;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_34443 = x_acc_45913;
                }
                // load new values
                {
                    x_34444 = defunc_0_f_res_34451;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_34445 = x_34443 + x_34444;
                    
                    // store in accumulator
                    {
                        x_acc_45913 = defunc_1_op_res_34445;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_34443 = x_acc_45913;
            ((__local
              float *) red_arr_mem_45904)[sext_i32_i64(local_tid_45900)] =
                x_34443;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45919;
        int32_t skip_waves_45920;
        
        skip_waves_45920 = 1;
        
        float x_45915;
        float x_45916;
        
        offset_45919 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45900,
                      sext_i64_i32(segred_group_sizze_34439))) {
                x_45915 = ((__local
                            float *) red_arr_mem_45904)[sext_i32_i64(local_tid_45900 +
                                                        offset_45919)];
            }
        }
        offset_45919 = 1;
        while (slt32(offset_45919, wave_sizze_45902)) {
            if (slt32(local_tid_45900 + offset_45919,
                      sext_i64_i32(segred_group_sizze_34439)) &&
                ((local_tid_45900 - squot32(local_tid_45900, wave_sizze_45902) *
                  wave_sizze_45902) & (2 * offset_45919 - 1)) == 0) {
                // read array element
                {
                    x_45916 = ((volatile __local
                                float *) red_arr_mem_45904)[sext_i32_i64(local_tid_45900 +
                                                            offset_45919)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45917 = x_45915 + x_45916;
                    
                    x_45915 = defunc_1_op_res_45917;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45904)[sext_i32_i64(local_tid_45900)] =
                        x_45915;
                }
            }
            offset_45919 *= 2;
        }
        while (slt32(skip_waves_45920,
                     squot32(sext_i64_i32(segred_group_sizze_34439) +
                             wave_sizze_45902 - 1, wave_sizze_45902))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45919 = skip_waves_45920 * wave_sizze_45902;
            if (slt32(local_tid_45900 + offset_45919,
                      sext_i64_i32(segred_group_sizze_34439)) &&
                ((local_tid_45900 - squot32(local_tid_45900, wave_sizze_45902) *
                  wave_sizze_45902) == 0 && (squot32(local_tid_45900,
                                                     wave_sizze_45902) & (2 *
                                                                          skip_waves_45920 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45916 = ((__local
                                float *) red_arr_mem_45904)[sext_i32_i64(local_tid_45900 +
                                                            offset_45919)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45917 = x_45915 + x_45916;
                    
                    x_45915 = defunc_1_op_res_45917;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45904)[sext_i32_i64(local_tid_45900)] =
                        x_45915;
                }
            }
            skip_waves_45920 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45900) == 0) {
                x_acc_45913 = x_45915;
            }
        }
        if (groups_per_segment_45890 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45900 == 0) {
                    ((__global float *) mem_44429)[gtid_34413] = x_acc_45913;
                }
            }
        } else {
            int32_t old_counter_45921;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45900 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45895)[sext_i32_i64(virt_group_id_45910) *
                                                        segred_group_sizze_34439] =
                        x_acc_45913;
                    mem_fence_global();
                    old_counter_45921 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45897)[sext_i32_i64(srem32(flat_segment_id_45911,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45906)[0] =
                        old_counter_45921 == groups_per_segment_45890 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45922;
            
            is_last_group_45922 = ((__local bool *) sync_arr_mem_45906)[0];
            if (is_last_group_45922) {
                if (local_tid_45900 == 0) {
                    old_counter_45921 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45897)[sext_i32_i64(srem32(flat_segment_id_45911,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_45890));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45923 =
                            sdiv_up64(groups_per_segment_45890,
                                      segred_group_sizze_34439);
                    
                    x_34443 = 0.0F;
                    for (int64_t i_45924 = 0; i_45924 < read_per_thread_45923;
                         i_45924++) {
                        int64_t group_res_id_45925 =
                                sext_i32_i64(local_tid_45900) *
                                read_per_thread_45923 + i_45924;
                        int64_t index_of_group_res_45926 =
                                sext_i32_i64(flat_segment_id_45911) *
                                groups_per_segment_45890 + group_res_id_45925;
                        
                        if (slt64(group_res_id_45925,
                                  groups_per_segment_45890)) {
                            x_34444 = ((__global
                                        float *) group_res_arr_mem_45895)[index_of_group_res_45926 *
                                                                          segred_group_sizze_34439];
                            
                            float defunc_1_op_res_34445;
                            
                            defunc_1_op_res_34445 = x_34443 + x_34444;
                            x_34443 = defunc_1_op_res_34445;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45904)[sext_i32_i64(local_tid_45900)] =
                    x_34443;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45927;
                    int32_t skip_waves_45928;
                    
                    skip_waves_45928 = 1;
                    
                    float x_45915;
                    float x_45916;
                    
                    offset_45927 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45900,
                                  sext_i64_i32(segred_group_sizze_34439))) {
                            x_45915 = ((__local
                                        float *) red_arr_mem_45904)[sext_i32_i64(local_tid_45900 +
                                                                    offset_45927)];
                        }
                    }
                    offset_45927 = 1;
                    while (slt32(offset_45927, wave_sizze_45902)) {
                        if (slt32(local_tid_45900 + offset_45927,
                                  sext_i64_i32(segred_group_sizze_34439)) &&
                            ((local_tid_45900 - squot32(local_tid_45900,
                                                        wave_sizze_45902) *
                              wave_sizze_45902) & (2 * offset_45927 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45916 = ((volatile __local
                                            float *) red_arr_mem_45904)[sext_i32_i64(local_tid_45900 +
                                                                        offset_45927)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45917 = x_45915 + x_45916;
                                
                                x_45915 = defunc_1_op_res_45917;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45904)[sext_i32_i64(local_tid_45900)] =
                                    x_45915;
                            }
                        }
                        offset_45927 *= 2;
                    }
                    while (slt32(skip_waves_45928,
                                 squot32(sext_i64_i32(segred_group_sizze_34439) +
                                         wave_sizze_45902 - 1,
                                         wave_sizze_45902))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45927 = skip_waves_45928 * wave_sizze_45902;
                        if (slt32(local_tid_45900 + offset_45927,
                                  sext_i64_i32(segred_group_sizze_34439)) &&
                            ((local_tid_45900 - squot32(local_tid_45900,
                                                        wave_sizze_45902) *
                              wave_sizze_45902) == 0 &&
                             (squot32(local_tid_45900, wave_sizze_45902) & (2 *
                                                                            skip_waves_45928 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45916 = ((__local
                                            float *) red_arr_mem_45904)[sext_i32_i64(local_tid_45900 +
                                                                        offset_45927)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45917 = x_45915 + x_45916;
                                
                                x_45915 = defunc_1_op_res_45917;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45904)[sext_i32_i64(local_tid_45900)] =
                                    x_45915;
                            }
                        }
                        skip_waves_45928 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45900 == 0) {
                            ((__global float *) mem_44429)[gtid_34413] =
                                x_45915;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34439
}
__kernel void mainDetailedzisegred_large_36080(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_46147_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_46145_backing_aligned_1,
                                               __local volatile
                                               int64_t *red_arr_mem_46143_backing_aligned_2,
                                               __local volatile
                                               int64_t *red_arr_mem_46141_backing_aligned_3,
                                               int64_t iota32_arg_30510,
                                               int64_t num_groups_36251,
                                               __global
                                               unsigned char *mem_44435,
                                               __global
                                               unsigned char *mem_44643,
                                               __global
                                               unsigned char *mem_44645,
                                               __global
                                               unsigned char *mem_44649,
                                               __global
                                               unsigned char *mem_44652,
                                               __global
                                               unsigned char *mem_44654,
                                               __global
                                               unsigned char *mem_44656,
                                               __global
                                               unsigned char *mem_44659,
                                               int64_t groups_per_segment_46123,
                                               int64_t elements_per_thread_46124,
                                               int64_t virt_num_groups_46125,
                                               __global
                                               unsigned char *group_res_arr_mem_46128,
                                               __global
                                               unsigned char *group_res_arr_mem_46130,
                                               __global
                                               unsigned char *group_res_arr_mem_46132,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_46134)
{
    #define segred_group_sizze_36250 (mainDetailedzisegred_group_sizze_36074)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_46147_backing_3 =
                          (__local volatile
                           char *) sync_arr_mem_46147_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46145_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_46145_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_46143_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_46143_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_46141_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46141_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46136;
    int32_t local_tid_46137;
    int64_t group_sizze_46140;
    int32_t wave_sizze_46139;
    int32_t group_tid_46138;
    
    global_tid_46136 = get_global_id(0);
    local_tid_46137 = get_local_id(0);
    group_sizze_46140 = get_local_size(0);
    wave_sizze_46139 = LOCKSTEP_WIDTH;
    group_tid_46138 = get_group_id(0);
    
    int32_t phys_tid_36080;
    
    phys_tid_36080 = global_tid_46136;
    
    __local char *red_arr_mem_46141;
    
    red_arr_mem_46141 = (__local char *) red_arr_mem_46141_backing_0;
    
    __local char *red_arr_mem_46143;
    
    red_arr_mem_46143 = (__local char *) red_arr_mem_46143_backing_1;
    
    __local char *red_arr_mem_46145;
    
    red_arr_mem_46145 = (__local char *) red_arr_mem_46145_backing_2;
    
    __local char *sync_arr_mem_46147;
    
    sync_arr_mem_46147 = (__local char *) sync_arr_mem_46147_backing_3;
    
    int32_t phys_group_id_46149;
    
    phys_group_id_46149 = get_group_id(0);
    for (int32_t i_46150 = 0; i_46150 <
         sdiv_up32(sext_i64_i32(virt_num_groups_46125) - phys_group_id_46149,
                   sext_i64_i32(num_groups_36251)); i_46150++) {
        int32_t virt_group_id_46151 = phys_group_id_46149 + i_46150 *
                sext_i64_i32(num_groups_36251);
        int32_t flat_segment_id_46152 = squot32(virt_group_id_46151,
                                                sext_i64_i32(groups_per_segment_46123));
        int64_t global_tid_46153 = srem64(sext_i32_i64(virt_group_id_46151) *
                                          segred_group_sizze_36250 +
                                          sext_i32_i64(local_tid_46137),
                                          segred_group_sizze_36250 *
                                          groups_per_segment_46123);
        int64_t gtid_36071 = sext_i32_i64(flat_segment_id_46152);
        int64_t gtid_36079;
        bool x_acc_46154;
        int32_t x_acc_46155;
        float x_acc_46156;
        int64_t chunk_sizze_46157;
        int64_t starting_point_46158;
        
        starting_point_46158 = sext_i32_i64(sext_i64_i32(global_tid_46153)) *
            elements_per_thread_46124;
        
        int64_t remaining_elements_46159;
        
        remaining_elements_46159 = iota32_arg_30510 - starting_point_46158;
        if (sle64(remaining_elements_46159, 0) || sle64(iota32_arg_30510,
                                                        starting_point_46158)) {
            chunk_sizze_46157 = 0;
        } else {
            if (slt64(iota32_arg_30510,
                      (sext_i32_i64(sext_i64_i32(global_tid_46153)) + 1) *
                      elements_per_thread_46124)) {
                chunk_sizze_46157 = iota32_arg_30510 -
                    sext_i32_i64(sext_i64_i32(global_tid_46153)) *
                    elements_per_thread_46124;
            } else {
                chunk_sizze_46157 = elements_per_thread_46124;
            }
        }
        
        bool x_36257;
        int32_t x_36258;
        float x_36259;
        bool x_36260;
        int32_t x_36261;
        float x_36262;
        
        // neutral-initialise the accumulators
        {
            x_acc_46154 = 0;
            x_acc_46155 = -1;
            x_acc_46156 = 0.0F;
        }
        for (int64_t i_46174 = 0; i_46174 < elements_per_thread_46124;
             i_46174++) {
            gtid_36079 = sext_i32_i64(local_tid_46137) +
                (sext_i32_i64(squot32(sext_i64_i32(global_tid_46153),
                                      sext_i64_i32(segred_group_sizze_36250))) *
                 elements_per_thread_46124 + i_46174) *
                segred_group_sizze_36250;
            if (slt64(gtid_36079, iota32_arg_30510)) {
                // apply map function
                {
                    int32_t y_36271 = ((__global
                                        int32_t *) mem_44645)[gtid_36071];
                    float y_36272 = ((__global float *) mem_44643)[gtid_36071];
                    float x_36276 = ((__global float *) mem_44649)[gtid_36071 *
                                                                   iota32_arg_30510 +
                                                                   gtid_36079];
                    float x_36277 = ((__global float *) mem_44435)[gtid_36079];
                    int32_t index_primexp_41548 = sext_i64_i32(gtid_36079);
                    float defunc_0_f_res_36280 = x_36276 / y_36272;
                    bool cond_36281 = slt32(index_primexp_41548, y_36271);
                    bool isnan_res_36282;
                    
                    isnan_res_36282 = futrts_isnan32(defunc_0_f_res_36280);
                    
                    bool cond_t_res_36283 = !isnan_res_36282;
                    bool x_36284 = cond_36281 && cond_t_res_36283;
                    float abs_res_36285 = (float) fabs(defunc_0_f_res_36280);
                    bool defunc_2_f_res_t_res_36286 = x_36277 < abs_res_36285;
                    bool x_36287 = x_36284 && defunc_2_f_res_t_res_36286;
                    float defunc_1_f_res_36288;
                    
                    if (cond_36281) {
                        defunc_1_f_res_36288 = defunc_0_f_res_36280;
                    } else {
                        defunc_1_f_res_36288 = 0.0F;
                    }
                    // save map-out results
                    {
                        ((__global float *) mem_44659)[gtid_36071 *
                                                       iota32_arg_30510 +
                                                       gtid_36079] =
                            defunc_0_f_res_36280;
                    }
                    // load accumulator
                    {
                        x_36257 = x_acc_46154;
                        x_36258 = x_acc_46155;
                        x_36259 = x_acc_46156;
                    }
                    // load new values
                    {
                        x_36260 = x_36287;
                        x_36261 = index_primexp_41548;
                        x_36262 = defunc_1_f_res_36288;
                    }
                    // apply reduction operator
                    {
                        bool defunc_1_op_res_36263;
                        int32_t defunc_1_op_res_36264;
                        
                        if (x_36257) {
                            defunc_1_op_res_36263 = x_36257;
                            defunc_1_op_res_36264 = x_36258;
                        } else {
                            bool x_36265 = x_36260 && x_36260;
                            bool x_36266 = !x_36260;
                            bool y_36267 = x_36257 && x_36266;
                            bool defunc_1_op_res_f_res_36268 = x_36265 ||
                                 y_36267;
                            int32_t defunc_1_op_res_f_res_36269;
                            
                            if (x_36260) {
                                defunc_1_op_res_f_res_36269 = x_36261;
                            } else {
                                defunc_1_op_res_f_res_36269 = x_36258;
                            }
                            defunc_1_op_res_36263 = defunc_1_op_res_f_res_36268;
                            defunc_1_op_res_36264 = defunc_1_op_res_f_res_36269;
                        }
                        
                        float defunc_1_op_res_36270 = x_36259 + x_36262;
                        
                        // store in accumulator
                        {
                            x_acc_46154 = defunc_1_op_res_36263;
                            x_acc_46155 = defunc_1_op_res_36264;
                            x_acc_46156 = defunc_1_op_res_36270;
                        }
                    }
                }
            }
            // to reduce current chunk, first store our result in memory
            {
                x_36257 = x_acc_46154;
                x_36258 = x_acc_46155;
                x_36259 = x_acc_46156;
                ((__local
                  bool *) red_arr_mem_46141)[sext_i32_i64(local_tid_46137)] =
                    x_36257;
                ((__local
                  int32_t *) red_arr_mem_46143)[sext_i32_i64(local_tid_46137)] =
                    x_36258;
                ((__local
                  float *) red_arr_mem_46145)[sext_i32_i64(local_tid_46137)] =
                    x_36259;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t offset_46175;
            int32_t skip_waves_46176;
            
            skip_waves_46176 = 1;
            
            bool x_46160;
            int32_t x_46161;
            float x_46162;
            bool x_46163;
            int32_t x_46164;
            float x_46165;
            
            offset_46175 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_46137,
                          sext_i64_i32(segred_group_sizze_36250))) {
                    x_46160 = ((__local
                                bool *) red_arr_mem_46141)[sext_i32_i64(local_tid_46137 +
                                                           offset_46175)];
                    x_46161 = ((__local
                                int32_t *) red_arr_mem_46143)[sext_i32_i64(local_tid_46137 +
                                                              offset_46175)];
                    x_46162 = ((__local
                                float *) red_arr_mem_46145)[sext_i32_i64(local_tid_46137 +
                                                            offset_46175)];
                }
            }
            offset_46175 = 1;
            while (slt32(offset_46175, wave_sizze_46139)) {
                if (slt32(local_tid_46137 + offset_46175,
                          sext_i64_i32(segred_group_sizze_36250)) &&
                    ((local_tid_46137 - squot32(local_tid_46137,
                                                wave_sizze_46139) *
                      wave_sizze_46139) & (2 * offset_46175 - 1)) == 0) {
                    // read array element
                    {
                        x_46163 = ((volatile __local
                                    bool *) red_arr_mem_46141)[sext_i32_i64(local_tid_46137 +
                                                               offset_46175)];
                        x_46164 = ((volatile __local
                                    int32_t *) red_arr_mem_46143)[sext_i32_i64(local_tid_46137 +
                                                                  offset_46175)];
                        x_46165 = ((volatile __local
                                    float *) red_arr_mem_46145)[sext_i32_i64(local_tid_46137 +
                                                                offset_46175)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_46166;
                        int32_t defunc_1_op_res_46167;
                        
                        if (x_46160) {
                            defunc_1_op_res_46166 = x_46160;
                            defunc_1_op_res_46167 = x_46161;
                        } else {
                            bool x_46168 = x_46163 && x_46163;
                            bool x_46169 = !x_46163;
                            bool y_46170 = x_46160 && x_46169;
                            bool defunc_1_op_res_f_res_46171 = x_46168 ||
                                 y_46170;
                            int32_t defunc_1_op_res_f_res_46172;
                            
                            if (x_46163) {
                                defunc_1_op_res_f_res_46172 = x_46164;
                            } else {
                                defunc_1_op_res_f_res_46172 = x_46161;
                            }
                            defunc_1_op_res_46166 = defunc_1_op_res_f_res_46171;
                            defunc_1_op_res_46167 = defunc_1_op_res_f_res_46172;
                        }
                        
                        float defunc_1_op_res_46173 = x_46162 + x_46165;
                        
                        x_46160 = defunc_1_op_res_46166;
                        x_46161 = defunc_1_op_res_46167;
                        x_46162 = defunc_1_op_res_46173;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          bool *) red_arr_mem_46141)[sext_i32_i64(local_tid_46137)] =
                            x_46160;
                        ((volatile __local
                          int32_t *) red_arr_mem_46143)[sext_i32_i64(local_tid_46137)] =
                            x_46161;
                        ((volatile __local
                          float *) red_arr_mem_46145)[sext_i32_i64(local_tid_46137)] =
                            x_46162;
                    }
                }
                offset_46175 *= 2;
            }
            while (slt32(skip_waves_46176,
                         squot32(sext_i64_i32(segred_group_sizze_36250) +
                                 wave_sizze_46139 - 1, wave_sizze_46139))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_46175 = skip_waves_46176 * wave_sizze_46139;
                if (slt32(local_tid_46137 + offset_46175,
                          sext_i64_i32(segred_group_sizze_36250)) &&
                    ((local_tid_46137 - squot32(local_tid_46137,
                                                wave_sizze_46139) *
                      wave_sizze_46139) == 0 && (squot32(local_tid_46137,
                                                         wave_sizze_46139) &
                                                 (2 * skip_waves_46176 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_46163 = ((__local
                                    bool *) red_arr_mem_46141)[sext_i32_i64(local_tid_46137 +
                                                               offset_46175)];
                        x_46164 = ((__local
                                    int32_t *) red_arr_mem_46143)[sext_i32_i64(local_tid_46137 +
                                                                  offset_46175)];
                        x_46165 = ((__local
                                    float *) red_arr_mem_46145)[sext_i32_i64(local_tid_46137 +
                                                                offset_46175)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_46166;
                        int32_t defunc_1_op_res_46167;
                        
                        if (x_46160) {
                            defunc_1_op_res_46166 = x_46160;
                            defunc_1_op_res_46167 = x_46161;
                        } else {
                            bool x_46168 = x_46163 && x_46163;
                            bool x_46169 = !x_46163;
                            bool y_46170 = x_46160 && x_46169;
                            bool defunc_1_op_res_f_res_46171 = x_46168 ||
                                 y_46170;
                            int32_t defunc_1_op_res_f_res_46172;
                            
                            if (x_46163) {
                                defunc_1_op_res_f_res_46172 = x_46164;
                            } else {
                                defunc_1_op_res_f_res_46172 = x_46161;
                            }
                            defunc_1_op_res_46166 = defunc_1_op_res_f_res_46171;
                            defunc_1_op_res_46167 = defunc_1_op_res_f_res_46172;
                        }
                        
                        float defunc_1_op_res_46173 = x_46162 + x_46165;
                        
                        x_46160 = defunc_1_op_res_46166;
                        x_46161 = defunc_1_op_res_46167;
                        x_46162 = defunc_1_op_res_46173;
                    }
                    // write result of operation
                    {
                        ((__local
                          bool *) red_arr_mem_46141)[sext_i32_i64(local_tid_46137)] =
                            x_46160;
                        ((__local
                          int32_t *) red_arr_mem_46143)[sext_i32_i64(local_tid_46137)] =
                            x_46161;
                        ((__local
                          float *) red_arr_mem_46145)[sext_i32_i64(local_tid_46137)] =
                            x_46162;
                    }
                }
                skip_waves_46176 *= 2;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread saves the result in accumulator
            {
                if (sext_i32_i64(local_tid_46137) == 0) {
                    x_acc_46154 = x_46160;
                    x_acc_46155 = x_46161;
                    x_acc_46156 = x_46162;
                }
            }
            // first thread keeps accumulator; others reset to neutral element
            {
                if (!(sext_i32_i64(local_tid_46137) == 0)) {
                    x_acc_46154 = 0;
                    x_acc_46155 = -1;
                    x_acc_46156 = 0.0F;
                }
            }
        }
        x_36257 = x_acc_46154;
        x_36258 = x_acc_46155;
        x_36259 = x_acc_46156;
        if (groups_per_segment_46123 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_46137 == 0) {
                    ((__global bool *) mem_44652)[gtid_36071] = x_acc_46154;
                    ((__global int32_t *) mem_44654)[gtid_36071] = x_acc_46155;
                    ((__global float *) mem_44656)[gtid_36071] = x_acc_46156;
                }
            }
        } else {
            int32_t old_counter_46177;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_46137 == 0) {
                    ((__global
                      bool *) group_res_arr_mem_46128)[sext_i32_i64(virt_group_id_46151) *
                                                       segred_group_sizze_36250] =
                        x_acc_46154;
                    ((__global
                      int32_t *) group_res_arr_mem_46130)[sext_i32_i64(virt_group_id_46151) *
                                                          segred_group_sizze_36250] =
                        x_acc_46155;
                    ((__global
                      float *) group_res_arr_mem_46132)[sext_i32_i64(virt_group_id_46151) *
                                                        segred_group_sizze_36250] =
                        x_acc_46156;
                    mem_fence_global();
                    old_counter_46177 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_46134)[sext_i32_i64(srem32(flat_segment_id_46152,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_46147)[0] =
                        old_counter_46177 == groups_per_segment_46123 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_46178;
            
            is_last_group_46178 = ((__local bool *) sync_arr_mem_46147)[0];
            if (is_last_group_46178) {
                if (local_tid_46137 == 0) {
                    old_counter_46177 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_46134)[sext_i32_i64(srem32(flat_segment_id_46152,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_46123));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_46179 =
                            sdiv_up64(groups_per_segment_46123,
                                      segred_group_sizze_36250);
                    
                    x_36257 = 0;
                    x_36258 = -1;
                    x_36259 = 0.0F;
                    for (int64_t i_46180 = 0; i_46180 < read_per_thread_46179;
                         i_46180++) {
                        int64_t group_res_id_46181 =
                                sext_i32_i64(local_tid_46137) *
                                read_per_thread_46179 + i_46180;
                        int64_t index_of_group_res_46182 =
                                sext_i32_i64(flat_segment_id_46152) *
                                groups_per_segment_46123 + group_res_id_46181;
                        
                        if (slt64(group_res_id_46181,
                                  groups_per_segment_46123)) {
                            x_36260 = ((__global
                                        bool *) group_res_arr_mem_46128)[index_of_group_res_46182 *
                                                                         segred_group_sizze_36250];
                            x_36261 = ((__global
                                        int32_t *) group_res_arr_mem_46130)[index_of_group_res_46182 *
                                                                            segred_group_sizze_36250];
                            x_36262 = ((__global
                                        float *) group_res_arr_mem_46132)[index_of_group_res_46182 *
                                                                          segred_group_sizze_36250];
                            
                            bool defunc_1_op_res_36263;
                            int32_t defunc_1_op_res_36264;
                            
                            if (x_36257) {
                                defunc_1_op_res_36263 = x_36257;
                                defunc_1_op_res_36264 = x_36258;
                            } else {
                                bool x_36265 = x_36260 && x_36260;
                                bool x_36266 = !x_36260;
                                bool y_36267 = x_36257 && x_36266;
                                bool defunc_1_op_res_f_res_36268 = x_36265 ||
                                     y_36267;
                                int32_t defunc_1_op_res_f_res_36269;
                                
                                if (x_36260) {
                                    defunc_1_op_res_f_res_36269 = x_36261;
                                } else {
                                    defunc_1_op_res_f_res_36269 = x_36258;
                                }
                                defunc_1_op_res_36263 =
                                    defunc_1_op_res_f_res_36268;
                                defunc_1_op_res_36264 =
                                    defunc_1_op_res_f_res_36269;
                            }
                            
                            float defunc_1_op_res_36270 = x_36259 + x_36262;
                            
                            x_36257 = defunc_1_op_res_36263;
                            x_36258 = defunc_1_op_res_36264;
                            x_36259 = defunc_1_op_res_36270;
                        }
                    }
                }
                ((__local
                  bool *) red_arr_mem_46141)[sext_i32_i64(local_tid_46137)] =
                    x_36257;
                ((__local
                  int32_t *) red_arr_mem_46143)[sext_i32_i64(local_tid_46137)] =
                    x_36258;
                ((__local
                  float *) red_arr_mem_46145)[sext_i32_i64(local_tid_46137)] =
                    x_36259;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_46183;
                    int32_t skip_waves_46184;
                    
                    skip_waves_46184 = 1;
                    
                    bool x_46160;
                    int32_t x_46161;
                    float x_46162;
                    bool x_46163;
                    int32_t x_46164;
                    float x_46165;
                    
                    offset_46183 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_46137,
                                  sext_i64_i32(segred_group_sizze_36250))) {
                            x_46160 = ((__local
                                        bool *) red_arr_mem_46141)[sext_i32_i64(local_tid_46137 +
                                                                   offset_46183)];
                            x_46161 = ((__local
                                        int32_t *) red_arr_mem_46143)[sext_i32_i64(local_tid_46137 +
                                                                      offset_46183)];
                            x_46162 = ((__local
                                        float *) red_arr_mem_46145)[sext_i32_i64(local_tid_46137 +
                                                                    offset_46183)];
                        }
                    }
                    offset_46183 = 1;
                    while (slt32(offset_46183, wave_sizze_46139)) {
                        if (slt32(local_tid_46137 + offset_46183,
                                  sext_i64_i32(segred_group_sizze_36250)) &&
                            ((local_tid_46137 - squot32(local_tid_46137,
                                                        wave_sizze_46139) *
                              wave_sizze_46139) & (2 * offset_46183 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_46163 = ((volatile __local
                                            bool *) red_arr_mem_46141)[sext_i32_i64(local_tid_46137 +
                                                                       offset_46183)];
                                x_46164 = ((volatile __local
                                            int32_t *) red_arr_mem_46143)[sext_i32_i64(local_tid_46137 +
                                                                          offset_46183)];
                                x_46165 = ((volatile __local
                                            float *) red_arr_mem_46145)[sext_i32_i64(local_tid_46137 +
                                                                        offset_46183)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_46166;
                                int32_t defunc_1_op_res_46167;
                                
                                if (x_46160) {
                                    defunc_1_op_res_46166 = x_46160;
                                    defunc_1_op_res_46167 = x_46161;
                                } else {
                                    bool x_46168 = x_46163 && x_46163;
                                    bool x_46169 = !x_46163;
                                    bool y_46170 = x_46160 && x_46169;
                                    bool defunc_1_op_res_f_res_46171 =
                                         x_46168 || y_46170;
                                    int32_t defunc_1_op_res_f_res_46172;
                                    
                                    if (x_46163) {
                                        defunc_1_op_res_f_res_46172 = x_46164;
                                    } else {
                                        defunc_1_op_res_f_res_46172 = x_46161;
                                    }
                                    defunc_1_op_res_46166 =
                                        defunc_1_op_res_f_res_46171;
                                    defunc_1_op_res_46167 =
                                        defunc_1_op_res_f_res_46172;
                                }
                                
                                float defunc_1_op_res_46173 = x_46162 + x_46165;
                                
                                x_46160 = defunc_1_op_res_46166;
                                x_46161 = defunc_1_op_res_46167;
                                x_46162 = defunc_1_op_res_46173;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_46141)[sext_i32_i64(local_tid_46137)] =
                                    x_46160;
                                ((volatile __local
                                  int32_t *) red_arr_mem_46143)[sext_i32_i64(local_tid_46137)] =
                                    x_46161;
                                ((volatile __local
                                  float *) red_arr_mem_46145)[sext_i32_i64(local_tid_46137)] =
                                    x_46162;
                            }
                        }
                        offset_46183 *= 2;
                    }
                    while (slt32(skip_waves_46184,
                                 squot32(sext_i64_i32(segred_group_sizze_36250) +
                                         wave_sizze_46139 - 1,
                                         wave_sizze_46139))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_46183 = skip_waves_46184 * wave_sizze_46139;
                        if (slt32(local_tid_46137 + offset_46183,
                                  sext_i64_i32(segred_group_sizze_36250)) &&
                            ((local_tid_46137 - squot32(local_tid_46137,
                                                        wave_sizze_46139) *
                              wave_sizze_46139) == 0 &&
                             (squot32(local_tid_46137, wave_sizze_46139) & (2 *
                                                                            skip_waves_46184 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_46163 = ((__local
                                            bool *) red_arr_mem_46141)[sext_i32_i64(local_tid_46137 +
                                                                       offset_46183)];
                                x_46164 = ((__local
                                            int32_t *) red_arr_mem_46143)[sext_i32_i64(local_tid_46137 +
                                                                          offset_46183)];
                                x_46165 = ((__local
                                            float *) red_arr_mem_46145)[sext_i32_i64(local_tid_46137 +
                                                                        offset_46183)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_46166;
                                int32_t defunc_1_op_res_46167;
                                
                                if (x_46160) {
                                    defunc_1_op_res_46166 = x_46160;
                                    defunc_1_op_res_46167 = x_46161;
                                } else {
                                    bool x_46168 = x_46163 && x_46163;
                                    bool x_46169 = !x_46163;
                                    bool y_46170 = x_46160 && x_46169;
                                    bool defunc_1_op_res_f_res_46171 =
                                         x_46168 || y_46170;
                                    int32_t defunc_1_op_res_f_res_46172;
                                    
                                    if (x_46163) {
                                        defunc_1_op_res_f_res_46172 = x_46164;
                                    } else {
                                        defunc_1_op_res_f_res_46172 = x_46161;
                                    }
                                    defunc_1_op_res_46166 =
                                        defunc_1_op_res_f_res_46171;
                                    defunc_1_op_res_46167 =
                                        defunc_1_op_res_f_res_46172;
                                }
                                
                                float defunc_1_op_res_46173 = x_46162 + x_46165;
                                
                                x_46160 = defunc_1_op_res_46166;
                                x_46161 = defunc_1_op_res_46167;
                                x_46162 = defunc_1_op_res_46173;
                            }
                            // write result of operation
                            {
                                ((__local
                                  bool *) red_arr_mem_46141)[sext_i32_i64(local_tid_46137)] =
                                    x_46160;
                                ((__local
                                  int32_t *) red_arr_mem_46143)[sext_i32_i64(local_tid_46137)] =
                                    x_46161;
                                ((__local
                                  float *) red_arr_mem_46145)[sext_i32_i64(local_tid_46137)] =
                                    x_46162;
                            }
                        }
                        skip_waves_46184 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_46137 == 0) {
                            ((__global bool *) mem_44652)[gtid_36071] = x_46160;
                            ((__global int32_t *) mem_44654)[gtid_36071] =
                                x_46161;
                            ((__global float *) mem_44656)[gtid_36071] =
                                x_46162;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36250
}
__kernel void mainDetailedzisegred_nonseg_34340(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_45840_backing_aligned_0,
                                                __local volatile
                                                int64_t *sync_arr_mem_45838_backing_aligned_1,
                                                int64_t m_30124,
                                                int64_t num_groups_34335,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_44395,
                                                __global
                                                unsigned char *mem_44400,
                                                __global
                                                unsigned char *mainDetailedzicounter_mem_45828,
                                                __global
                                                unsigned char *group_res_arr_mem_45830,
                                                int64_t num_threads_45832)
{
    #define segred_group_sizze_34333 (mainDetailedzisegred_group_sizze_34332)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45840_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45840_backing_aligned_0;
    __local volatile char *restrict sync_arr_mem_45838_backing_0 =
                          (__local volatile
                           char *) sync_arr_mem_45838_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45833;
    int32_t local_tid_45834;
    int64_t group_sizze_45837;
    int32_t wave_sizze_45836;
    int32_t group_tid_45835;
    
    global_tid_45833 = get_global_id(0);
    local_tid_45834 = get_local_id(0);
    group_sizze_45837 = get_local_size(0);
    wave_sizze_45836 = LOCKSTEP_WIDTH;
    group_tid_45835 = get_group_id(0);
    
    int32_t phys_tid_34340;
    
    phys_tid_34340 = global_tid_45833;
    
    __local char *sync_arr_mem_45838;
    
    sync_arr_mem_45838 = (__local char *) sync_arr_mem_45838_backing_0;
    
    __local char *red_arr_mem_45840;
    
    red_arr_mem_45840 = (__local char *) red_arr_mem_45840_backing_1;
    
    int64_t dummy_34338;
    
    dummy_34338 = 0;
    
    int64_t gtid_34339;
    
    gtid_34339 = 0;
    
    int32_t x_acc_45842;
    int64_t chunk_sizze_45843;
    
    chunk_sizze_45843 = smin64(sdiv_up64(m_30124,
                                         sext_i32_i64(sext_i64_i32(segred_group_sizze_34333 *
                                         num_groups_34335))),
                               sdiv_up64(m_30124 - sext_i32_i64(phys_tid_34340),
                                         num_threads_45832));
    
    int32_t x_30481;
    int32_t x_30482;
    
    // neutral-initialise the accumulators
    {
        x_acc_45842 = 0;
    }
    for (int64_t i_45847 = 0; i_45847 < chunk_sizze_45843; i_45847++) {
        gtid_34339 = sext_i32_i64(phys_tid_34340) + num_threads_45832 * i_45847;
        // apply map function
        {
            int32_t x_30484 = ((__global
                                int32_t *) defunc_3_map_res_mem_44395)[gtid_34339];
            
            // save map-out results
            { }
            // load accumulator
            {
                x_30481 = x_acc_45842;
            }
            // load new values
            {
                x_30482 = x_30484;
            }
            // apply reduction operator
            {
                int32_t defunc_1_op_res_30483 = smax32(x_30481, x_30482);
                
                // store in accumulator
                {
                    x_acc_45842 = defunc_1_op_res_30483;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_30481 = x_acc_45842;
        ((__local int32_t *) red_arr_mem_45840)[sext_i32_i64(local_tid_45834)] =
            x_30481;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45848;
    int32_t skip_waves_45849;
    
    skip_waves_45849 = 1;
    
    int32_t x_45844;
    int32_t x_45845;
    
    offset_45848 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45834, sext_i64_i32(segred_group_sizze_34333))) {
            x_45844 = ((__local
                        int32_t *) red_arr_mem_45840)[sext_i32_i64(local_tid_45834 +
                                                      offset_45848)];
        }
    }
    offset_45848 = 1;
    while (slt32(offset_45848, wave_sizze_45836)) {
        if (slt32(local_tid_45834 + offset_45848,
                  sext_i64_i32(segred_group_sizze_34333)) && ((local_tid_45834 -
                                                               squot32(local_tid_45834,
                                                                       wave_sizze_45836) *
                                                               wave_sizze_45836) &
                                                              (2 *
                                                               offset_45848 -
                                                               1)) == 0) {
            // read array element
            {
                x_45845 = ((volatile __local
                            int32_t *) red_arr_mem_45840)[sext_i32_i64(local_tid_45834 +
                                                          offset_45848)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_45846 = smax32(x_45844, x_45845);
                
                x_45844 = defunc_1_op_res_45846;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_45840)[sext_i32_i64(local_tid_45834)] =
                    x_45844;
            }
        }
        offset_45848 *= 2;
    }
    while (slt32(skip_waves_45849,
                 squot32(sext_i64_i32(segred_group_sizze_34333) +
                         wave_sizze_45836 - 1, wave_sizze_45836))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45848 = skip_waves_45849 * wave_sizze_45836;
        if (slt32(local_tid_45834 + offset_45848,
                  sext_i64_i32(segred_group_sizze_34333)) && ((local_tid_45834 -
                                                               squot32(local_tid_45834,
                                                                       wave_sizze_45836) *
                                                               wave_sizze_45836) ==
                                                              0 &&
                                                              (squot32(local_tid_45834,
                                                                       wave_sizze_45836) &
                                                               (2 *
                                                                skip_waves_45849 -
                                                                1)) == 0)) {
            // read array element
            {
                x_45845 = ((__local
                            int32_t *) red_arr_mem_45840)[sext_i32_i64(local_tid_45834 +
                                                          offset_45848)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_45846 = smax32(x_45844, x_45845);
                
                x_45844 = defunc_1_op_res_45846;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_45840)[sext_i32_i64(local_tid_45834)] =
                    x_45844;
            }
        }
        skip_waves_45849 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_45834) == 0) {
            x_acc_45842 = x_45844;
        }
    }
    
    int32_t old_counter_45850;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_45834 == 0) {
            ((__global
              int32_t *) group_res_arr_mem_45830)[sext_i32_i64(group_tid_45835) *
                                                  segred_group_sizze_34333] =
                x_acc_45842;
            mem_fence_global();
            old_counter_45850 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainDetailedzicounter_mem_45828)[0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_45838)[0] = old_counter_45850 ==
                num_groups_34335 - 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_45851;
    
    is_last_group_45851 = ((__local bool *) sync_arr_mem_45838)[0];
    if (is_last_group_45851) {
        if (local_tid_45834 == 0) {
            old_counter_45850 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainDetailedzicounter_mem_45828)[0],
                                                      (int) (0 -
                                                             num_groups_34335));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_45852 = sdiv_up64(num_groups_34335,
                                                      segred_group_sizze_34333);
            
            x_30481 = 0;
            for (int64_t i_45853 = 0; i_45853 < read_per_thread_45852;
                 i_45853++) {
                int64_t group_res_id_45854 = sext_i32_i64(local_tid_45834) *
                        read_per_thread_45852 + i_45853;
                int64_t index_of_group_res_45855 = group_res_id_45854;
                
                if (slt64(group_res_id_45854, num_groups_34335)) {
                    x_30482 = ((__global
                                int32_t *) group_res_arr_mem_45830)[index_of_group_res_45855 *
                                                                    segred_group_sizze_34333];
                    
                    int32_t defunc_1_op_res_30483;
                    
                    defunc_1_op_res_30483 = smax32(x_30481, x_30482);
                    x_30481 = defunc_1_op_res_30483;
                }
            }
        }
        ((__local int32_t *) red_arr_mem_45840)[sext_i32_i64(local_tid_45834)] =
            x_30481;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_45856;
            int32_t skip_waves_45857;
            
            skip_waves_45857 = 1;
            
            int32_t x_45844;
            int32_t x_45845;
            
            offset_45856 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_45834,
                          sext_i64_i32(segred_group_sizze_34333))) {
                    x_45844 = ((__local
                                int32_t *) red_arr_mem_45840)[sext_i32_i64(local_tid_45834 +
                                                              offset_45856)];
                }
            }
            offset_45856 = 1;
            while (slt32(offset_45856, wave_sizze_45836)) {
                if (slt32(local_tid_45834 + offset_45856,
                          sext_i64_i32(segred_group_sizze_34333)) &&
                    ((local_tid_45834 - squot32(local_tid_45834,
                                                wave_sizze_45836) *
                      wave_sizze_45836) & (2 * offset_45856 - 1)) == 0) {
                    // read array element
                    {
                        x_45845 = ((volatile __local
                                    int32_t *) red_arr_mem_45840)[sext_i32_i64(local_tid_45834 +
                                                                  offset_45856)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_45846 = smax32(x_45844,
                                                               x_45845);
                        
                        x_45844 = defunc_1_op_res_45846;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          int32_t *) red_arr_mem_45840)[sext_i32_i64(local_tid_45834)] =
                            x_45844;
                    }
                }
                offset_45856 *= 2;
            }
            while (slt32(skip_waves_45857,
                         squot32(sext_i64_i32(segred_group_sizze_34333) +
                                 wave_sizze_45836 - 1, wave_sizze_45836))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_45856 = skip_waves_45857 * wave_sizze_45836;
                if (slt32(local_tid_45834 + offset_45856,
                          sext_i64_i32(segred_group_sizze_34333)) &&
                    ((local_tid_45834 - squot32(local_tid_45834,
                                                wave_sizze_45836) *
                      wave_sizze_45836) == 0 && (squot32(local_tid_45834,
                                                         wave_sizze_45836) &
                                                 (2 * skip_waves_45857 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_45845 = ((__local
                                    int32_t *) red_arr_mem_45840)[sext_i32_i64(local_tid_45834 +
                                                                  offset_45856)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_45846 = smax32(x_45844,
                                                               x_45845);
                        
                        x_45844 = defunc_1_op_res_45846;
                    }
                    // write result of operation
                    {
                        ((__local
                          int32_t *) red_arr_mem_45840)[sext_i32_i64(local_tid_45834)] =
                            x_45844;
                    }
                }
                skip_waves_45857 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_45834 == 0) {
                    ((__global int32_t *) mem_44400)[0] = x_45844;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34333
}
__kernel void mainDetailedzisegred_small_32244(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_45095_backing_aligned_0,
                                               int64_t N_30123, int64_t m_30124,
                                               int64_t N_30125,
                                               int64_t i32_res_30137,
                                               int64_t i32_res_30143,
                                               int64_t num_groups_32383,
                                               __global
                                               unsigned char *images_mem_43532,
                                               __global
                                               unsigned char *binop_p_mem_43541,
                                               __global
                                               unsigned char *mem_43682,
                                               __global
                                               unsigned char *mem_43687,
                                               int64_t segment_sizze_nonzzero_45088)
{
    #define segred_group_sizze_32382 (mainDetailedzisegred_group_sizze_32238)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45095_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45095_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45090;
    int32_t local_tid_45091;
    int64_t group_sizze_45094;
    int32_t wave_sizze_45093;
    int32_t group_tid_45092;
    
    global_tid_45090 = get_global_id(0);
    local_tid_45091 = get_local_id(0);
    group_sizze_45094 = get_local_size(0);
    wave_sizze_45093 = LOCKSTEP_WIDTH;
    group_tid_45092 = get_group_id(0);
    
    int32_t phys_tid_32244;
    
    phys_tid_32244 = global_tid_45090;
    
    __local char *red_arr_mem_45095;
    
    red_arr_mem_45095 = (__local char *) red_arr_mem_45095_backing_0;
    
    int32_t phys_group_id_45097;
    
    phys_group_id_45097 = get_group_id(0);
    for (int32_t i_45098 = 0; i_45098 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30124 * i32_res_30143 *
                                          i32_res_30143,
                                          squot64(segred_group_sizze_32382,
                                                  segment_sizze_nonzzero_45088))) -
                   phys_group_id_45097, sext_i64_i32(num_groups_32383));
         i_45098++) {
        int32_t virt_group_id_45099 = phys_group_id_45097 + i_45098 *
                sext_i64_i32(num_groups_32383);
        int64_t gtid_32231 = squot64(squot64(sext_i32_i64(local_tid_45091),
                                             segment_sizze_nonzzero_45088) +
                                     sext_i32_i64(virt_group_id_45099) *
                                     squot64(segred_group_sizze_32382,
                                             segment_sizze_nonzzero_45088),
                                     i32_res_30143 * i32_res_30143);
        int64_t gtid_32232 = squot64(squot64(sext_i32_i64(local_tid_45091),
                                             segment_sizze_nonzzero_45088) +
                                     sext_i32_i64(virt_group_id_45099) *
                                     squot64(segred_group_sizze_32382,
                                             segment_sizze_nonzzero_45088) -
                                     squot64(squot64(sext_i32_i64(local_tid_45091),
                                                     segment_sizze_nonzzero_45088) +
                                             sext_i32_i64(virt_group_id_45099) *
                                             squot64(segred_group_sizze_32382,
                                                     segment_sizze_nonzzero_45088),
                                             i32_res_30143 * i32_res_30143) *
                                     (i32_res_30143 * i32_res_30143),
                                     i32_res_30143);
        int64_t gtid_32233 = squot64(sext_i32_i64(local_tid_45091),
                                     segment_sizze_nonzzero_45088) +
                sext_i32_i64(virt_group_id_45099) *
                squot64(segred_group_sizze_32382,
                        segment_sizze_nonzzero_45088) -
                squot64(squot64(sext_i32_i64(local_tid_45091),
                                segment_sizze_nonzzero_45088) +
                        sext_i32_i64(virt_group_id_45099) *
                        squot64(segred_group_sizze_32382,
                                segment_sizze_nonzzero_45088), i32_res_30143 *
                        i32_res_30143) * (i32_res_30143 * i32_res_30143) -
                squot64(squot64(sext_i32_i64(local_tid_45091),
                                segment_sizze_nonzzero_45088) +
                        sext_i32_i64(virt_group_id_45099) *
                        squot64(segred_group_sizze_32382,
                                segment_sizze_nonzzero_45088) -
                        squot64(squot64(sext_i32_i64(local_tid_45091),
                                        segment_sizze_nonzzero_45088) +
                                sext_i32_i64(virt_group_id_45099) *
                                squot64(segred_group_sizze_32382,
                                        segment_sizze_nonzzero_45088),
                                i32_res_30143 * i32_res_30143) *
                        (i32_res_30143 * i32_res_30143), i32_res_30143) *
                i32_res_30143;
        int64_t gtid_32243 = srem64(sext_i32_i64(local_tid_45091),
                                    i32_res_30137);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_30137) && (((slt64(gtid_32231, m_30124) &&
                                              slt64(gtid_32232,
                                                    i32_res_30143)) &&
                                             slt64(gtid_32233,
                                                   i32_res_30143)) &&
                                            slt64(sext_i32_i64(local_tid_45091),
                                                  i32_res_30137 *
                                                  squot64(segred_group_sizze_32382,
                                                          segment_sizze_nonzzero_45088)))) {
                float x_32392 = ((__global
                                  float *) images_mem_43532)[gtid_32231 *
                                                             N_30125 +
                                                             gtid_32243];
                float x_32393 = ((__global
                                  float *) binop_p_mem_43541)[gtid_32232 *
                                                              N_30123 +
                                                              gtid_32243];
                float x_32394 = ((__global float *) mem_43682)[gtid_32233 *
                                                               N_30123 +
                                                               gtid_32243];
                float x_32395 = x_32393 * x_32394;
                bool isnan_res_32396;
                
                isnan_res_32396 = futrts_isnan32(x_32392);
                
                float y_32397;
                
                if (isnan_res_32396) {
                    y_32397 = 0.0F;
                } else {
                    y_32397 = 1.0F;
                }
                
                float defunc_2_f_res_32398 = x_32395 * y_32397;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45095)[sext_i32_i64(local_tid_45091)] =
                        defunc_2_f_res_32398;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45095)[sext_i32_i64(local_tid_45091)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_30137)) {
            // perform segmented scan to imitate reduction
            {
                float x_32386;
                float x_32387;
                float x_45100;
                float x_45101;
                bool ltid_in_bounds_45103;
                
                ltid_in_bounds_45103 = slt64(sext_i32_i64(local_tid_45091),
                                             i32_res_30137 *
                                             squot64(segred_group_sizze_32382,
                                                     segment_sizze_nonzzero_45088));
                
                int32_t skip_threads_45104;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45103) {
                        x_32387 = ((volatile __local
                                    float *) red_arr_mem_45095)[sext_i32_i64(local_tid_45091)];
                        if ((local_tid_45091 - squot32(local_tid_45091, 32) *
                             32) == 0) {
                            x_32386 = x_32387;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45104 = 1;
                    while (slt32(skip_threads_45104, 32)) {
                        if (sle32(skip_threads_45104, local_tid_45091 -
                                  squot32(local_tid_45091, 32) * 32) &&
                            ltid_in_bounds_45103) {
                            // read operands
                            {
                                x_32386 = ((volatile __local
                                            float *) red_arr_mem_45095)[sext_i32_i64(local_tid_45091) -
                                                                        sext_i32_i64(skip_threads_45104)];
                            }
                            // perform operation
                            {
                                bool inactive_45105 =
                                     slt64(srem64(sext_i32_i64(local_tid_45091),
                                                  i32_res_30137),
                                           sext_i32_i64(local_tid_45091) -
                                           sext_i32_i64(local_tid_45091 -
                                           skip_threads_45104));
                                
                                if (inactive_45105) {
                                    x_32386 = x_32387;
                                }
                                if (!inactive_45105) {
                                    float defunc_1_op_res_32388 = x_32386 +
                                          x_32387;
                                    
                                    x_32386 = defunc_1_op_res_32388;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45093, skip_threads_45104)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45104, local_tid_45091 -
                                  squot32(local_tid_45091, 32) * 32) &&
                            ltid_in_bounds_45103) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45095)[sext_i32_i64(local_tid_45091)] =
                                    x_32386;
                                x_32387 = x_32386;
                            }
                        }
                        if (sle32(wave_sizze_45093, skip_threads_45104)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45104 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45091 - squot32(local_tid_45091, 32) * 32) ==
                        31 && ltid_in_bounds_45103) {
                        ((volatile __local
                          float *) red_arr_mem_45095)[sext_i32_i64(squot32(local_tid_45091,
                                                                           32))] =
                            x_32386;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45106;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45091, 32) == 0 &&
                            ltid_in_bounds_45103) {
                            x_45101 = ((volatile __local
                                        float *) red_arr_mem_45095)[sext_i32_i64(local_tid_45091)];
                            if ((local_tid_45091 - squot32(local_tid_45091,
                                                           32) * 32) == 0) {
                                x_45100 = x_45101;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45106 = 1;
                        while (slt32(skip_threads_45106, 32)) {
                            if (sle32(skip_threads_45106, local_tid_45091 -
                                      squot32(local_tid_45091, 32) * 32) &&
                                (squot32(local_tid_45091, 32) == 0 &&
                                 ltid_in_bounds_45103)) {
                                // read operands
                                {
                                    x_45100 = ((volatile __local
                                                float *) red_arr_mem_45095)[sext_i32_i64(local_tid_45091) -
                                                                            sext_i32_i64(skip_threads_45106)];
                                }
                                // perform operation
                                {
                                    bool inactive_45107 =
                                         slt64(srem64(sext_i32_i64(local_tid_45091 *
                                                      32 + 32 - 1),
                                                      i32_res_30137),
                                               sext_i32_i64(local_tid_45091 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45091 -
                                                             skip_threads_45106) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45107) {
                                        x_45100 = x_45101;
                                    }
                                    if (!inactive_45107) {
                                        float defunc_1_op_res_45102 = x_45100 +
                                              x_45101;
                                        
                                        x_45100 = defunc_1_op_res_45102;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45093, skip_threads_45106)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45106, local_tid_45091 -
                                      squot32(local_tid_45091, 32) * 32) &&
                                (squot32(local_tid_45091, 32) == 0 &&
                                 ltid_in_bounds_45103)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45095)[sext_i32_i64(local_tid_45091)] =
                                        x_45100;
                                    x_45101 = x_45100;
                                }
                            }
                            if (sle32(wave_sizze_45093, skip_threads_45106)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45106 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45091, 32) == 0 ||
                          !ltid_in_bounds_45103)) {
                        // read operands
                        {
                            x_32387 = x_32386;
                            x_32386 = ((__local
                                        float *) red_arr_mem_45095)[sext_i32_i64(squot32(local_tid_45091,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45108 =
                                 slt64(srem64(sext_i32_i64(local_tid_45091),
                                              i32_res_30137),
                                       sext_i32_i64(local_tid_45091) -
                                       sext_i32_i64(squot32(local_tid_45091,
                                                            32) * 32 - 1));
                            
                            if (inactive_45108) {
                                x_32386 = x_32387;
                            }
                            if (!inactive_45108) {
                                float defunc_1_op_res_32388 = x_32386 + x_32387;
                                
                                x_32386 = defunc_1_op_res_32388;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45095)[sext_i32_i64(local_tid_45091)] =
                                x_32386;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45091, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45095)[sext_i32_i64(local_tid_45091)] =
                            x_32387;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45099) *
                      squot64(segred_group_sizze_32382,
                              segment_sizze_nonzzero_45088) +
                      sext_i32_i64(local_tid_45091), m_30124 * i32_res_30143 *
                      i32_res_30143) && slt64(sext_i32_i64(local_tid_45091),
                                              squot64(segred_group_sizze_32382,
                                                      segment_sizze_nonzzero_45088))) {
                ((__global
                  float *) mem_43687)[squot64(sext_i32_i64(virt_group_id_45099) *
                                              squot64(segred_group_sizze_32382,
                                                      segment_sizze_nonzzero_45088) +
                                              sext_i32_i64(local_tid_45091),
                                              i32_res_30143 * i32_res_30143) *
                                      (i32_res_30143 * i32_res_30143) +
                                      squot64(sext_i32_i64(virt_group_id_45099) *
                                              squot64(segred_group_sizze_32382,
                                                      segment_sizze_nonzzero_45088) +
                                              sext_i32_i64(local_tid_45091) -
                                              squot64(sext_i32_i64(virt_group_id_45099) *
                                                      squot64(segred_group_sizze_32382,
                                                              segment_sizze_nonzzero_45088) +
                                                      sext_i32_i64(local_tid_45091),
                                                      i32_res_30143 *
                                                      i32_res_30143) *
                                              (i32_res_30143 * i32_res_30143),
                                              i32_res_30143) * i32_res_30143 +
                                      (sext_i32_i64(virt_group_id_45099) *
                                       squot64(segred_group_sizze_32382,
                                               segment_sizze_nonzzero_45088) +
                                       sext_i32_i64(local_tid_45091) -
                                       squot64(sext_i32_i64(virt_group_id_45099) *
                                               squot64(segred_group_sizze_32382,
                                                       segment_sizze_nonzzero_45088) +
                                               sext_i32_i64(local_tid_45091),
                                               i32_res_30143 * i32_res_30143) *
                                       (i32_res_30143 * i32_res_30143) -
                                       squot64(sext_i32_i64(virt_group_id_45099) *
                                               squot64(segred_group_sizze_32382,
                                                       segment_sizze_nonzzero_45088) +
                                               sext_i32_i64(local_tid_45091) -
                                               squot64(sext_i32_i64(virt_group_id_45099) *
                                                       squot64(segred_group_sizze_32382,
                                                               segment_sizze_nonzzero_45088) +
                                                       sext_i32_i64(local_tid_45091),
                                                       i32_res_30143 *
                                                       i32_res_30143) *
                                               (i32_res_30143 * i32_res_30143),
                                               i32_res_30143) *
                                       i32_res_30143)] = ((__local
                                                           float *) red_arr_mem_45095)[(sext_i32_i64(local_tid_45091) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_45088 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32382
}
__kernel void mainDetailedzisegred_small_33417(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_45293_backing_aligned_0,
                                               int64_t N_30123, int64_t m_30124,
                                               int64_t N_30125,
                                               int64_t i32_res_30137,
                                               int64_t i32_res_30143,
                                               int64_t num_groups_33470,
                                               __global
                                               unsigned char *images_mem_43532,
                                               __global
                                               unsigned char *binop_p_mem_43541,
                                               __global
                                               unsigned char *mem_43998,
                                               int64_t segment_sizze_nonzzero_45286)
{
    #define segred_group_sizze_33469 (mainDetailedzisegred_group_sizze_33411)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45293_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45293_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45288;
    int32_t local_tid_45289;
    int64_t group_sizze_45292;
    int32_t wave_sizze_45291;
    int32_t group_tid_45290;
    
    global_tid_45288 = get_global_id(0);
    local_tid_45289 = get_local_id(0);
    group_sizze_45292 = get_local_size(0);
    wave_sizze_45291 = LOCKSTEP_WIDTH;
    group_tid_45290 = get_group_id(0);
    
    int32_t phys_tid_33417;
    
    phys_tid_33417 = global_tid_45288;
    
    __local char *red_arr_mem_45293;
    
    red_arr_mem_45293 = (__local char *) red_arr_mem_45293_backing_0;
    
    int32_t phys_group_id_45295;
    
    phys_group_id_45295 = get_group_id(0);
    for (int32_t i_45296 = 0; i_45296 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30124 * i32_res_30143,
                                          squot64(segred_group_sizze_33469,
                                                  segment_sizze_nonzzero_45286))) -
                   phys_group_id_45295, sext_i64_i32(num_groups_33470));
         i_45296++) {
        int32_t virt_group_id_45297 = phys_group_id_45295 + i_45296 *
                sext_i64_i32(num_groups_33470);
        int64_t gtid_33406 = squot64(squot64(sext_i32_i64(local_tid_45289),
                                             segment_sizze_nonzzero_45286) +
                                     sext_i32_i64(virt_group_id_45297) *
                                     squot64(segred_group_sizze_33469,
                                             segment_sizze_nonzzero_45286),
                                     i32_res_30143);
        int64_t gtid_33407 = squot64(sext_i32_i64(local_tid_45289),
                                     segment_sizze_nonzzero_45286) +
                sext_i32_i64(virt_group_id_45297) *
                squot64(segred_group_sizze_33469,
                        segment_sizze_nonzzero_45286) -
                squot64(squot64(sext_i32_i64(local_tid_45289),
                                segment_sizze_nonzzero_45286) +
                        sext_i32_i64(virt_group_id_45297) *
                        squot64(segred_group_sizze_33469,
                                segment_sizze_nonzzero_45286), i32_res_30143) *
                i32_res_30143;
        int64_t gtid_33416 = srem64(sext_i32_i64(local_tid_45289),
                                    i32_res_30137);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_30137) && ((slt64(gtid_33406, m_30124) &&
                                             slt64(gtid_33407,
                                                   i32_res_30143)) &&
                                            slt64(sext_i32_i64(local_tid_45289),
                                                  i32_res_30137 *
                                                  squot64(segred_group_sizze_33469,
                                                          segment_sizze_nonzzero_45286)))) {
                float x_33479 = ((__global
                                  float *) images_mem_43532)[gtid_33406 *
                                                             N_30125 +
                                                             gtid_33416];
                bool isnan_res_33480;
                
                isnan_res_33480 = futrts_isnan32(x_33479);
                
                float defunc_1_f_res_33481;
                
                if (isnan_res_33480) {
                    defunc_1_f_res_33481 = 0.0F;
                } else {
                    float x_33478 = ((__global
                                      float *) binop_p_mem_43541)[gtid_33407 *
                                                                  N_30123 +
                                                                  gtid_33416];
                    float defunc_1_f_res_f_res_33482 = x_33478 * x_33479;
                    
                    defunc_1_f_res_33481 = defunc_1_f_res_f_res_33482;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45293)[sext_i32_i64(local_tid_45289)] =
                        defunc_1_f_res_33481;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45293)[sext_i32_i64(local_tid_45289)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_30137)) {
            // perform segmented scan to imitate reduction
            {
                float x_33473;
                float x_33474;
                float x_45298;
                float x_45299;
                bool ltid_in_bounds_45301;
                
                ltid_in_bounds_45301 = slt64(sext_i32_i64(local_tid_45289),
                                             i32_res_30137 *
                                             squot64(segred_group_sizze_33469,
                                                     segment_sizze_nonzzero_45286));
                
                int32_t skip_threads_45302;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45301) {
                        x_33474 = ((volatile __local
                                    float *) red_arr_mem_45293)[sext_i32_i64(local_tid_45289)];
                        if ((local_tid_45289 - squot32(local_tid_45289, 32) *
                             32) == 0) {
                            x_33473 = x_33474;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45302 = 1;
                    while (slt32(skip_threads_45302, 32)) {
                        if (sle32(skip_threads_45302, local_tid_45289 -
                                  squot32(local_tid_45289, 32) * 32) &&
                            ltid_in_bounds_45301) {
                            // read operands
                            {
                                x_33473 = ((volatile __local
                                            float *) red_arr_mem_45293)[sext_i32_i64(local_tid_45289) -
                                                                        sext_i32_i64(skip_threads_45302)];
                            }
                            // perform operation
                            {
                                bool inactive_45303 =
                                     slt64(srem64(sext_i32_i64(local_tid_45289),
                                                  i32_res_30137),
                                           sext_i32_i64(local_tid_45289) -
                                           sext_i32_i64(local_tid_45289 -
                                           skip_threads_45302));
                                
                                if (inactive_45303) {
                                    x_33473 = x_33474;
                                }
                                if (!inactive_45303) {
                                    float defunc_1_op_res_33475 = x_33473 +
                                          x_33474;
                                    
                                    x_33473 = defunc_1_op_res_33475;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45291, skip_threads_45302)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45302, local_tid_45289 -
                                  squot32(local_tid_45289, 32) * 32) &&
                            ltid_in_bounds_45301) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45293)[sext_i32_i64(local_tid_45289)] =
                                    x_33473;
                                x_33474 = x_33473;
                            }
                        }
                        if (sle32(wave_sizze_45291, skip_threads_45302)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45302 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45289 - squot32(local_tid_45289, 32) * 32) ==
                        31 && ltid_in_bounds_45301) {
                        ((volatile __local
                          float *) red_arr_mem_45293)[sext_i32_i64(squot32(local_tid_45289,
                                                                           32))] =
                            x_33473;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45304;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45289, 32) == 0 &&
                            ltid_in_bounds_45301) {
                            x_45299 = ((volatile __local
                                        float *) red_arr_mem_45293)[sext_i32_i64(local_tid_45289)];
                            if ((local_tid_45289 - squot32(local_tid_45289,
                                                           32) * 32) == 0) {
                                x_45298 = x_45299;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45304 = 1;
                        while (slt32(skip_threads_45304, 32)) {
                            if (sle32(skip_threads_45304, local_tid_45289 -
                                      squot32(local_tid_45289, 32) * 32) &&
                                (squot32(local_tid_45289, 32) == 0 &&
                                 ltid_in_bounds_45301)) {
                                // read operands
                                {
                                    x_45298 = ((volatile __local
                                                float *) red_arr_mem_45293)[sext_i32_i64(local_tid_45289) -
                                                                            sext_i32_i64(skip_threads_45304)];
                                }
                                // perform operation
                                {
                                    bool inactive_45305 =
                                         slt64(srem64(sext_i32_i64(local_tid_45289 *
                                                      32 + 32 - 1),
                                                      i32_res_30137),
                                               sext_i32_i64(local_tid_45289 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45289 -
                                                             skip_threads_45304) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45305) {
                                        x_45298 = x_45299;
                                    }
                                    if (!inactive_45305) {
                                        float defunc_1_op_res_45300 = x_45298 +
                                              x_45299;
                                        
                                        x_45298 = defunc_1_op_res_45300;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45291, skip_threads_45304)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45304, local_tid_45289 -
                                      squot32(local_tid_45289, 32) * 32) &&
                                (squot32(local_tid_45289, 32) == 0 &&
                                 ltid_in_bounds_45301)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45293)[sext_i32_i64(local_tid_45289)] =
                                        x_45298;
                                    x_45299 = x_45298;
                                }
                            }
                            if (sle32(wave_sizze_45291, skip_threads_45304)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45304 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45289, 32) == 0 ||
                          !ltid_in_bounds_45301)) {
                        // read operands
                        {
                            x_33474 = x_33473;
                            x_33473 = ((__local
                                        float *) red_arr_mem_45293)[sext_i32_i64(squot32(local_tid_45289,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45306 =
                                 slt64(srem64(sext_i32_i64(local_tid_45289),
                                              i32_res_30137),
                                       sext_i32_i64(local_tid_45289) -
                                       sext_i32_i64(squot32(local_tid_45289,
                                                            32) * 32 - 1));
                            
                            if (inactive_45306) {
                                x_33473 = x_33474;
                            }
                            if (!inactive_45306) {
                                float defunc_1_op_res_33475 = x_33473 + x_33474;
                                
                                x_33473 = defunc_1_op_res_33475;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45293)[sext_i32_i64(local_tid_45289)] =
                                x_33473;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45289, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45293)[sext_i32_i64(local_tid_45289)] =
                            x_33474;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45297) *
                      squot64(segred_group_sizze_33469,
                              segment_sizze_nonzzero_45286) +
                      sext_i32_i64(local_tid_45289), m_30124 * i32_res_30143) &&
                slt64(sext_i32_i64(local_tid_45289),
                      squot64(segred_group_sizze_33469,
                              segment_sizze_nonzzero_45286))) {
                ((__global
                  float *) mem_43998)[squot64(sext_i32_i64(virt_group_id_45297) *
                                              squot64(segred_group_sizze_33469,
                                                      segment_sizze_nonzzero_45286) +
                                              sext_i32_i64(local_tid_45289),
                                              i32_res_30143) * i32_res_30143 +
                                      (sext_i32_i64(virt_group_id_45297) *
                                       squot64(segred_group_sizze_33469,
                                               segment_sizze_nonzzero_45286) +
                                       sext_i32_i64(local_tid_45289) -
                                       squot64(sext_i32_i64(virt_group_id_45297) *
                                               squot64(segred_group_sizze_33469,
                                                       segment_sizze_nonzzero_45286) +
                                               sext_i32_i64(local_tid_45289),
                                               i32_res_30143) *
                                       i32_res_30143)] = ((__local
                                                           float *) red_arr_mem_45293)[(sext_i32_i64(local_tid_45289) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_45286 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33469
}
__kernel void mainDetailedzisegred_small_33554(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_45381_backing_aligned_0,
                                               int64_t m_30124,
                                               int64_t i32_res_30143,
                                               int64_t num_groups_33603,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43783,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_44004,
                                               __global
                                               unsigned char *mem_44064,
                                               int64_t segment_sizze_nonzzero_45374)
{
    #define segred_group_sizze_33602 (mainDetailedzisegred_group_sizze_33548)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45381_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45381_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45376;
    int32_t local_tid_45377;
    int64_t group_sizze_45380;
    int32_t wave_sizze_45379;
    int32_t group_tid_45378;
    
    global_tid_45376 = get_global_id(0);
    local_tid_45377 = get_local_id(0);
    group_sizze_45380 = get_local_size(0);
    wave_sizze_45379 = LOCKSTEP_WIDTH;
    group_tid_45378 = get_group_id(0);
    
    int32_t phys_tid_33554;
    
    phys_tid_33554 = global_tid_45376;
    
    __local char *red_arr_mem_45381;
    
    red_arr_mem_45381 = (__local char *) red_arr_mem_45381_backing_0;
    
    int32_t phys_group_id_45383;
    
    phys_group_id_45383 = get_group_id(0);
    for (int32_t i_45384 = 0; i_45384 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30124 * i32_res_30143,
                                          squot64(segred_group_sizze_33602,
                                                  segment_sizze_nonzzero_45374))) -
                   phys_group_id_45383, sext_i64_i32(num_groups_33603));
         i_45384++) {
        int32_t virt_group_id_45385 = phys_group_id_45383 + i_45384 *
                sext_i64_i32(num_groups_33603);
        int64_t gtid_33543 = squot64(squot64(sext_i32_i64(local_tid_45377),
                                             segment_sizze_nonzzero_45374) +
                                     sext_i32_i64(virt_group_id_45385) *
                                     squot64(segred_group_sizze_33602,
                                             segment_sizze_nonzzero_45374),
                                     i32_res_30143);
        int64_t gtid_33544 = squot64(sext_i32_i64(local_tid_45377),
                                     segment_sizze_nonzzero_45374) +
                sext_i32_i64(virt_group_id_45385) *
                squot64(segred_group_sizze_33602,
                        segment_sizze_nonzzero_45374) -
                squot64(squot64(sext_i32_i64(local_tid_45377),
                                segment_sizze_nonzzero_45374) +
                        sext_i32_i64(virt_group_id_45385) *
                        squot64(segred_group_sizze_33602,
                                segment_sizze_nonzzero_45374), i32_res_30143) *
                i32_res_30143;
        int64_t gtid_33553 = srem64(sext_i32_i64(local_tid_45377),
                                    i32_res_30143);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_30143) && ((slt64(gtid_33543, m_30124) &&
                                             slt64(gtid_33544,
                                                   i32_res_30143)) &&
                                            slt64(sext_i32_i64(local_tid_45377),
                                                  i32_res_30143 *
                                                  squot64(segred_group_sizze_33602,
                                                          segment_sizze_nonzzero_45374)))) {
                float x_33612 = ((__global
                                  float *) defunc_3_map_res_mem_44004)[gtid_33543 *
                                                                       i32_res_30143 +
                                                                       gtid_33553];
                float x_33613 = ((__global
                                  float *) defunc_3_map_res_mem_43783)[gtid_33543 *
                                                                       (i32_res_30143 *
                                                                        i32_res_30143) +
                                                                       gtid_33544 *
                                                                       i32_res_30143 +
                                                                       gtid_33553];
                float defunc_1_f_res_33614 = x_33612 * x_33613;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45381)[sext_i32_i64(local_tid_45377)] =
                        defunc_1_f_res_33614;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45381)[sext_i32_i64(local_tid_45377)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_30143)) {
            // perform segmented scan to imitate reduction
            {
                float x_33606;
                float x_33607;
                float x_45386;
                float x_45387;
                bool ltid_in_bounds_45389;
                
                ltid_in_bounds_45389 = slt64(sext_i32_i64(local_tid_45377),
                                             i32_res_30143 *
                                             squot64(segred_group_sizze_33602,
                                                     segment_sizze_nonzzero_45374));
                
                int32_t skip_threads_45390;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45389) {
                        x_33607 = ((volatile __local
                                    float *) red_arr_mem_45381)[sext_i32_i64(local_tid_45377)];
                        if ((local_tid_45377 - squot32(local_tid_45377, 32) *
                             32) == 0) {
                            x_33606 = x_33607;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45390 = 1;
                    while (slt32(skip_threads_45390, 32)) {
                        if (sle32(skip_threads_45390, local_tid_45377 -
                                  squot32(local_tid_45377, 32) * 32) &&
                            ltid_in_bounds_45389) {
                            // read operands
                            {
                                x_33606 = ((volatile __local
                                            float *) red_arr_mem_45381)[sext_i32_i64(local_tid_45377) -
                                                                        sext_i32_i64(skip_threads_45390)];
                            }
                            // perform operation
                            {
                                bool inactive_45391 =
                                     slt64(srem64(sext_i32_i64(local_tid_45377),
                                                  i32_res_30143),
                                           sext_i32_i64(local_tid_45377) -
                                           sext_i32_i64(local_tid_45377 -
                                           skip_threads_45390));
                                
                                if (inactive_45391) {
                                    x_33606 = x_33607;
                                }
                                if (!inactive_45391) {
                                    float defunc_1_op_res_33608 = x_33606 +
                                          x_33607;
                                    
                                    x_33606 = defunc_1_op_res_33608;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45379, skip_threads_45390)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45390, local_tid_45377 -
                                  squot32(local_tid_45377, 32) * 32) &&
                            ltid_in_bounds_45389) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45381)[sext_i32_i64(local_tid_45377)] =
                                    x_33606;
                                x_33607 = x_33606;
                            }
                        }
                        if (sle32(wave_sizze_45379, skip_threads_45390)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45390 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45377 - squot32(local_tid_45377, 32) * 32) ==
                        31 && ltid_in_bounds_45389) {
                        ((volatile __local
                          float *) red_arr_mem_45381)[sext_i32_i64(squot32(local_tid_45377,
                                                                           32))] =
                            x_33606;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45392;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45377, 32) == 0 &&
                            ltid_in_bounds_45389) {
                            x_45387 = ((volatile __local
                                        float *) red_arr_mem_45381)[sext_i32_i64(local_tid_45377)];
                            if ((local_tid_45377 - squot32(local_tid_45377,
                                                           32) * 32) == 0) {
                                x_45386 = x_45387;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45392 = 1;
                        while (slt32(skip_threads_45392, 32)) {
                            if (sle32(skip_threads_45392, local_tid_45377 -
                                      squot32(local_tid_45377, 32) * 32) &&
                                (squot32(local_tid_45377, 32) == 0 &&
                                 ltid_in_bounds_45389)) {
                                // read operands
                                {
                                    x_45386 = ((volatile __local
                                                float *) red_arr_mem_45381)[sext_i32_i64(local_tid_45377) -
                                                                            sext_i32_i64(skip_threads_45392)];
                                }
                                // perform operation
                                {
                                    bool inactive_45393 =
                                         slt64(srem64(sext_i32_i64(local_tid_45377 *
                                                      32 + 32 - 1),
                                                      i32_res_30143),
                                               sext_i32_i64(local_tid_45377 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45377 -
                                                             skip_threads_45392) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45393) {
                                        x_45386 = x_45387;
                                    }
                                    if (!inactive_45393) {
                                        float defunc_1_op_res_45388 = x_45386 +
                                              x_45387;
                                        
                                        x_45386 = defunc_1_op_res_45388;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45379, skip_threads_45392)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45392, local_tid_45377 -
                                      squot32(local_tid_45377, 32) * 32) &&
                                (squot32(local_tid_45377, 32) == 0 &&
                                 ltid_in_bounds_45389)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45381)[sext_i32_i64(local_tid_45377)] =
                                        x_45386;
                                    x_45387 = x_45386;
                                }
                            }
                            if (sle32(wave_sizze_45379, skip_threads_45392)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45392 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45377, 32) == 0 ||
                          !ltid_in_bounds_45389)) {
                        // read operands
                        {
                            x_33607 = x_33606;
                            x_33606 = ((__local
                                        float *) red_arr_mem_45381)[sext_i32_i64(squot32(local_tid_45377,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45394 =
                                 slt64(srem64(sext_i32_i64(local_tid_45377),
                                              i32_res_30143),
                                       sext_i32_i64(local_tid_45377) -
                                       sext_i32_i64(squot32(local_tid_45377,
                                                            32) * 32 - 1));
                            
                            if (inactive_45394) {
                                x_33606 = x_33607;
                            }
                            if (!inactive_45394) {
                                float defunc_1_op_res_33608 = x_33606 + x_33607;
                                
                                x_33606 = defunc_1_op_res_33608;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45381)[sext_i32_i64(local_tid_45377)] =
                                x_33606;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45377, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45381)[sext_i32_i64(local_tid_45377)] =
                            x_33607;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45385) *
                      squot64(segred_group_sizze_33602,
                              segment_sizze_nonzzero_45374) +
                      sext_i32_i64(local_tid_45377), m_30124 * i32_res_30143) &&
                slt64(sext_i32_i64(local_tid_45377),
                      squot64(segred_group_sizze_33602,
                              segment_sizze_nonzzero_45374))) {
                ((__global
                  float *) mem_44064)[squot64(sext_i32_i64(virt_group_id_45385) *
                                              squot64(segred_group_sizze_33602,
                                                      segment_sizze_nonzzero_45374) +
                                              sext_i32_i64(local_tid_45377),
                                              i32_res_30143) * i32_res_30143 +
                                      (sext_i32_i64(virt_group_id_45385) *
                                       squot64(segred_group_sizze_33602,
                                               segment_sizze_nonzzero_45374) +
                                       sext_i32_i64(local_tid_45377) -
                                       squot64(sext_i32_i64(virt_group_id_45385) *
                                               squot64(segred_group_sizze_33602,
                                                       segment_sizze_nonzzero_45374) +
                                               sext_i32_i64(local_tid_45377),
                                               i32_res_30143) *
                                       i32_res_30143)] = ((__local
                                                           float *) red_arr_mem_45381)[(sext_i32_i64(local_tid_45377) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_45374 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33602
}
__kernel void mainDetailedzisegred_small_33684(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_45513_backing_aligned_0,
                                               int64_t N_30123, int64_t m_30124,
                                               int64_t i32_res_30143,
                                               int64_t num_groups_33731,
                                               __global
                                               unsigned char *mem_43548,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_44070,
                                               __global
                                               unsigned char *mem_44288,
                                               int64_t segment_sizze_nonzzero_45506)
{
    #define segred_group_sizze_33730 (mainDetailedzisegred_group_sizze_33678)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45513_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45513_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45508;
    int32_t local_tid_45509;
    int64_t group_sizze_45512;
    int32_t wave_sizze_45511;
    int32_t group_tid_45510;
    
    global_tid_45508 = get_global_id(0);
    local_tid_45509 = get_local_id(0);
    group_sizze_45512 = get_local_size(0);
    wave_sizze_45511 = LOCKSTEP_WIDTH;
    group_tid_45510 = get_group_id(0);
    
    int32_t phys_tid_33684;
    
    phys_tid_33684 = global_tid_45508;
    
    __local char *red_arr_mem_45513;
    
    red_arr_mem_45513 = (__local char *) red_arr_mem_45513_backing_0;
    
    int32_t phys_group_id_45515;
    
    phys_group_id_45515 = get_group_id(0);
    for (int32_t i_45516 = 0; i_45516 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30124 * N_30123,
                                          squot64(segred_group_sizze_33730,
                                                  segment_sizze_nonzzero_45506))) -
                   phys_group_id_45515, sext_i64_i32(num_groups_33731));
         i_45516++) {
        int32_t virt_group_id_45517 = phys_group_id_45515 + i_45516 *
                sext_i64_i32(num_groups_33731);
        int64_t gtid_33673 = squot64(squot64(sext_i32_i64(local_tid_45509),
                                             segment_sizze_nonzzero_45506) +
                                     sext_i32_i64(virt_group_id_45517) *
                                     squot64(segred_group_sizze_33730,
                                             segment_sizze_nonzzero_45506),
                                     N_30123);
        int64_t gtid_33674 = squot64(sext_i32_i64(local_tid_45509),
                                     segment_sizze_nonzzero_45506) +
                sext_i32_i64(virt_group_id_45517) *
                squot64(segred_group_sizze_33730,
                        segment_sizze_nonzzero_45506) -
                squot64(squot64(sext_i32_i64(local_tid_45509),
                                segment_sizze_nonzzero_45506) +
                        sext_i32_i64(virt_group_id_45517) *
                        squot64(segred_group_sizze_33730,
                                segment_sizze_nonzzero_45506), N_30123) *
                N_30123;
        int64_t gtid_33683 = srem64(sext_i32_i64(local_tid_45509),
                                    i32_res_30143);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_30143) && ((slt64(gtid_33673, m_30124) &&
                                             slt64(gtid_33674, N_30123)) &&
                                            slt64(sext_i32_i64(local_tid_45509),
                                                  i32_res_30143 *
                                                  squot64(segred_group_sizze_33730,
                                                          segment_sizze_nonzzero_45506)))) {
                float x_33739 = ((__global
                                  float *) defunc_4_map_res_mem_44070)[gtid_33673 *
                                                                       i32_res_30143 +
                                                                       gtid_33683];
                float x_33740 = ((__global float *) mem_43548)[gtid_33674 *
                                                               i32_res_30143 +
                                                               gtid_33683];
                float defunc_1_f_res_33741 = x_33739 * x_33740;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45513)[sext_i32_i64(local_tid_45509)] =
                        defunc_1_f_res_33741;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45513)[sext_i32_i64(local_tid_45509)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_30143)) {
            // perform segmented scan to imitate reduction
            {
                float x_33734;
                float x_33735;
                float x_45518;
                float x_45519;
                bool ltid_in_bounds_45521;
                
                ltid_in_bounds_45521 = slt64(sext_i32_i64(local_tid_45509),
                                             i32_res_30143 *
                                             squot64(segred_group_sizze_33730,
                                                     segment_sizze_nonzzero_45506));
                
                int32_t skip_threads_45522;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45521) {
                        x_33735 = ((volatile __local
                                    float *) red_arr_mem_45513)[sext_i32_i64(local_tid_45509)];
                        if ((local_tid_45509 - squot32(local_tid_45509, 32) *
                             32) == 0) {
                            x_33734 = x_33735;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45522 = 1;
                    while (slt32(skip_threads_45522, 32)) {
                        if (sle32(skip_threads_45522, local_tid_45509 -
                                  squot32(local_tid_45509, 32) * 32) &&
                            ltid_in_bounds_45521) {
                            // read operands
                            {
                                x_33734 = ((volatile __local
                                            float *) red_arr_mem_45513)[sext_i32_i64(local_tid_45509) -
                                                                        sext_i32_i64(skip_threads_45522)];
                            }
                            // perform operation
                            {
                                bool inactive_45523 =
                                     slt64(srem64(sext_i32_i64(local_tid_45509),
                                                  i32_res_30143),
                                           sext_i32_i64(local_tid_45509) -
                                           sext_i32_i64(local_tid_45509 -
                                           skip_threads_45522));
                                
                                if (inactive_45523) {
                                    x_33734 = x_33735;
                                }
                                if (!inactive_45523) {
                                    float defunc_1_op_res_33736 = x_33734 +
                                          x_33735;
                                    
                                    x_33734 = defunc_1_op_res_33736;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45511, skip_threads_45522)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45522, local_tid_45509 -
                                  squot32(local_tid_45509, 32) * 32) &&
                            ltid_in_bounds_45521) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45513)[sext_i32_i64(local_tid_45509)] =
                                    x_33734;
                                x_33735 = x_33734;
                            }
                        }
                        if (sle32(wave_sizze_45511, skip_threads_45522)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45522 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45509 - squot32(local_tid_45509, 32) * 32) ==
                        31 && ltid_in_bounds_45521) {
                        ((volatile __local
                          float *) red_arr_mem_45513)[sext_i32_i64(squot32(local_tid_45509,
                                                                           32))] =
                            x_33734;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45524;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45509, 32) == 0 &&
                            ltid_in_bounds_45521) {
                            x_45519 = ((volatile __local
                                        float *) red_arr_mem_45513)[sext_i32_i64(local_tid_45509)];
                            if ((local_tid_45509 - squot32(local_tid_45509,
                                                           32) * 32) == 0) {
                                x_45518 = x_45519;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45524 = 1;
                        while (slt32(skip_threads_45524, 32)) {
                            if (sle32(skip_threads_45524, local_tid_45509 -
                                      squot32(local_tid_45509, 32) * 32) &&
                                (squot32(local_tid_45509, 32) == 0 &&
                                 ltid_in_bounds_45521)) {
                                // read operands
                                {
                                    x_45518 = ((volatile __local
                                                float *) red_arr_mem_45513)[sext_i32_i64(local_tid_45509) -
                                                                            sext_i32_i64(skip_threads_45524)];
                                }
                                // perform operation
                                {
                                    bool inactive_45525 =
                                         slt64(srem64(sext_i32_i64(local_tid_45509 *
                                                      32 + 32 - 1),
                                                      i32_res_30143),
                                               sext_i32_i64(local_tid_45509 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45509 -
                                                             skip_threads_45524) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45525) {
                                        x_45518 = x_45519;
                                    }
                                    if (!inactive_45525) {
                                        float defunc_1_op_res_45520 = x_45518 +
                                              x_45519;
                                        
                                        x_45518 = defunc_1_op_res_45520;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45511, skip_threads_45524)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45524, local_tid_45509 -
                                      squot32(local_tid_45509, 32) * 32) &&
                                (squot32(local_tid_45509, 32) == 0 &&
                                 ltid_in_bounds_45521)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45513)[sext_i32_i64(local_tid_45509)] =
                                        x_45518;
                                    x_45519 = x_45518;
                                }
                            }
                            if (sle32(wave_sizze_45511, skip_threads_45524)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45524 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45509, 32) == 0 ||
                          !ltid_in_bounds_45521)) {
                        // read operands
                        {
                            x_33735 = x_33734;
                            x_33734 = ((__local
                                        float *) red_arr_mem_45513)[sext_i32_i64(squot32(local_tid_45509,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45526 =
                                 slt64(srem64(sext_i32_i64(local_tid_45509),
                                              i32_res_30143),
                                       sext_i32_i64(local_tid_45509) -
                                       sext_i32_i64(squot32(local_tid_45509,
                                                            32) * 32 - 1));
                            
                            if (inactive_45526) {
                                x_33734 = x_33735;
                            }
                            if (!inactive_45526) {
                                float defunc_1_op_res_33736 = x_33734 + x_33735;
                                
                                x_33734 = defunc_1_op_res_33736;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45513)[sext_i32_i64(local_tid_45509)] =
                                x_33734;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45509, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45513)[sext_i32_i64(local_tid_45509)] =
                            x_33735;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45517) *
                      squot64(segred_group_sizze_33730,
                              segment_sizze_nonzzero_45506) +
                      sext_i32_i64(local_tid_45509), m_30124 * N_30123) &&
                slt64(sext_i32_i64(local_tid_45509),
                      squot64(segred_group_sizze_33730,
                              segment_sizze_nonzzero_45506))) {
                ((__global
                  float *) mem_44288)[squot64(sext_i32_i64(virt_group_id_45517) *
                                              squot64(segred_group_sizze_33730,
                                                      segment_sizze_nonzzero_45506) +
                                              sext_i32_i64(local_tid_45509),
                                              N_30123) * N_30123 +
                                      (sext_i32_i64(virt_group_id_45517) *
                                       squot64(segred_group_sizze_33730,
                                               segment_sizze_nonzzero_45506) +
                                       sext_i32_i64(local_tid_45509) -
                                       squot64(sext_i32_i64(virt_group_id_45517) *
                                               squot64(segred_group_sizze_33730,
                                                       segment_sizze_nonzzero_45506) +
                                               sext_i32_i64(local_tid_45509),
                                               N_30123) * N_30123)] = ((__local
                                                                        float *) red_arr_mem_45513)[(sext_i32_i64(local_tid_45509) +
                                                                                                     1) *
                                                                                                    segment_sizze_nonzzero_45506 -
                                                                                                    1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33730
}
__kernel void mainDetailedzisegred_small_34250(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_45767_backing_aligned_0,
                                               int64_t N_30123, int64_t m_30124,
                                               int64_t i32_res_30137,
                                               int64_t num_groups_34297,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_44332,
                                               __global
                                               unsigned char *mem_44383,
                                               __global
                                               unsigned char *mem_44386,
                                               int64_t segment_sizze_nonzzero_45760)
{
    #define segred_group_sizze_34296 (mainDetailedzisegred_group_sizze_34244)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45767_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45767_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45762;
    int32_t local_tid_45763;
    int64_t group_sizze_45766;
    int32_t wave_sizze_45765;
    int32_t group_tid_45764;
    
    global_tid_45762 = get_global_id(0);
    local_tid_45763 = get_local_id(0);
    group_sizze_45766 = get_local_size(0);
    wave_sizze_45765 = LOCKSTEP_WIDTH;
    group_tid_45764 = get_group_id(0);
    
    int32_t phys_tid_34250;
    
    phys_tid_34250 = global_tid_45762;
    
    __local char *red_arr_mem_45767;
    
    red_arr_mem_45767 = (__local char *) red_arr_mem_45767_backing_0;
    
    int32_t phys_group_id_45769;
    
    phys_group_id_45769 = get_group_id(0);
    for (int32_t i_45770 = 0; i_45770 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30124,
                                          squot64(segred_group_sizze_34296,
                                                  segment_sizze_nonzzero_45760))) -
                   phys_group_id_45769, sext_i64_i32(num_groups_34297));
         i_45770++) {
        int32_t virt_group_id_45771 = phys_group_id_45769 + i_45770 *
                sext_i64_i32(num_groups_34297);
        int64_t gtid_34241 = squot64(sext_i32_i64(local_tid_45763),
                                     segment_sizze_nonzzero_45760) +
                sext_i32_i64(virt_group_id_45771) *
                squot64(segred_group_sizze_34296, segment_sizze_nonzzero_45760);
        int64_t gtid_34249 = srem64(sext_i32_i64(local_tid_45763),
                                    i32_res_30137);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_30137) && (slt64(gtid_34241, m_30124) &&
                                            slt64(sext_i32_i64(local_tid_45763),
                                                  i32_res_30137 *
                                                  squot64(segred_group_sizze_34296,
                                                          segment_sizze_nonzzero_45760)))) {
                int32_t defunc_0_f_res_34304 = ((__global
                                                 int32_t *) mem_44383)[gtid_34241];
                int32_t index_primexp_41523 = sext_i64_i32(gtid_34249);
                bool cond_34306 = slt32(index_primexp_41523,
                                        defunc_0_f_res_34304);
                float defunc_0_f_res_34307;
                
                if (cond_34306) {
                    int64_t i_34308 = sext_i32_i64(index_primexp_41523);
                    float defunc_0_f_res_t_res_34309 = ((__global
                                                         float *) defunc_4_map_res_mem_44332)[gtid_34241 *
                                                                                              N_30123 +
                                                                                              i_34308];
                    
                    defunc_0_f_res_34307 = defunc_0_f_res_t_res_34309;
                } else {
                    defunc_0_f_res_34307 = 0.0F;
                }
                
                float defunc_0_f_res_34310 = defunc_0_f_res_34307 *
                      defunc_0_f_res_34307;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45767)[sext_i32_i64(local_tid_45763)] =
                        defunc_0_f_res_34310;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45767)[sext_i32_i64(local_tid_45763)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_30137)) {
            // perform segmented scan to imitate reduction
            {
                float x_34300;
                float x_34301;
                float x_45772;
                float x_45773;
                bool ltid_in_bounds_45775;
                
                ltid_in_bounds_45775 = slt64(sext_i32_i64(local_tid_45763),
                                             i32_res_30137 *
                                             squot64(segred_group_sizze_34296,
                                                     segment_sizze_nonzzero_45760));
                
                int32_t skip_threads_45776;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45775) {
                        x_34301 = ((volatile __local
                                    float *) red_arr_mem_45767)[sext_i32_i64(local_tid_45763)];
                        if ((local_tid_45763 - squot32(local_tid_45763, 32) *
                             32) == 0) {
                            x_34300 = x_34301;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45776 = 1;
                    while (slt32(skip_threads_45776, 32)) {
                        if (sle32(skip_threads_45776, local_tid_45763 -
                                  squot32(local_tid_45763, 32) * 32) &&
                            ltid_in_bounds_45775) {
                            // read operands
                            {
                                x_34300 = ((volatile __local
                                            float *) red_arr_mem_45767)[sext_i32_i64(local_tid_45763) -
                                                                        sext_i32_i64(skip_threads_45776)];
                            }
                            // perform operation
                            {
                                bool inactive_45777 =
                                     slt64(srem64(sext_i32_i64(local_tid_45763),
                                                  i32_res_30137),
                                           sext_i32_i64(local_tid_45763) -
                                           sext_i32_i64(local_tid_45763 -
                                           skip_threads_45776));
                                
                                if (inactive_45777) {
                                    x_34300 = x_34301;
                                }
                                if (!inactive_45777) {
                                    float defunc_1_op_res_34302 = x_34300 +
                                          x_34301;
                                    
                                    x_34300 = defunc_1_op_res_34302;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45765, skip_threads_45776)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45776, local_tid_45763 -
                                  squot32(local_tid_45763, 32) * 32) &&
                            ltid_in_bounds_45775) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45767)[sext_i32_i64(local_tid_45763)] =
                                    x_34300;
                                x_34301 = x_34300;
                            }
                        }
                        if (sle32(wave_sizze_45765, skip_threads_45776)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45776 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45763 - squot32(local_tid_45763, 32) * 32) ==
                        31 && ltid_in_bounds_45775) {
                        ((volatile __local
                          float *) red_arr_mem_45767)[sext_i32_i64(squot32(local_tid_45763,
                                                                           32))] =
                            x_34300;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45778;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45763, 32) == 0 &&
                            ltid_in_bounds_45775) {
                            x_45773 = ((volatile __local
                                        float *) red_arr_mem_45767)[sext_i32_i64(local_tid_45763)];
                            if ((local_tid_45763 - squot32(local_tid_45763,
                                                           32) * 32) == 0) {
                                x_45772 = x_45773;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45778 = 1;
                        while (slt32(skip_threads_45778, 32)) {
                            if (sle32(skip_threads_45778, local_tid_45763 -
                                      squot32(local_tid_45763, 32) * 32) &&
                                (squot32(local_tid_45763, 32) == 0 &&
                                 ltid_in_bounds_45775)) {
                                // read operands
                                {
                                    x_45772 = ((volatile __local
                                                float *) red_arr_mem_45767)[sext_i32_i64(local_tid_45763) -
                                                                            sext_i32_i64(skip_threads_45778)];
                                }
                                // perform operation
                                {
                                    bool inactive_45779 =
                                         slt64(srem64(sext_i32_i64(local_tid_45763 *
                                                      32 + 32 - 1),
                                                      i32_res_30137),
                                               sext_i32_i64(local_tid_45763 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45763 -
                                                             skip_threads_45778) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45779) {
                                        x_45772 = x_45773;
                                    }
                                    if (!inactive_45779) {
                                        float defunc_1_op_res_45774 = x_45772 +
                                              x_45773;
                                        
                                        x_45772 = defunc_1_op_res_45774;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45765, skip_threads_45778)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45778, local_tid_45763 -
                                      squot32(local_tid_45763, 32) * 32) &&
                                (squot32(local_tid_45763, 32) == 0 &&
                                 ltid_in_bounds_45775)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45767)[sext_i32_i64(local_tid_45763)] =
                                        x_45772;
                                    x_45773 = x_45772;
                                }
                            }
                            if (sle32(wave_sizze_45765, skip_threads_45778)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45778 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45763, 32) == 0 ||
                          !ltid_in_bounds_45775)) {
                        // read operands
                        {
                            x_34301 = x_34300;
                            x_34300 = ((__local
                                        float *) red_arr_mem_45767)[sext_i32_i64(squot32(local_tid_45763,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45780 =
                                 slt64(srem64(sext_i32_i64(local_tid_45763),
                                              i32_res_30137),
                                       sext_i32_i64(local_tid_45763) -
                                       sext_i32_i64(squot32(local_tid_45763,
                                                            32) * 32 - 1));
                            
                            if (inactive_45780) {
                                x_34300 = x_34301;
                            }
                            if (!inactive_45780) {
                                float defunc_1_op_res_34302 = x_34300 + x_34301;
                                
                                x_34300 = defunc_1_op_res_34302;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45767)[sext_i32_i64(local_tid_45763)] =
                                x_34300;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45763, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45767)[sext_i32_i64(local_tid_45763)] =
                            x_34301;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45771) *
                      squot64(segred_group_sizze_34296,
                              segment_sizze_nonzzero_45760) +
                      sext_i32_i64(local_tid_45763), m_30124) &&
                slt64(sext_i32_i64(local_tid_45763),
                      squot64(segred_group_sizze_34296,
                              segment_sizze_nonzzero_45760))) {
                ((__global
                  float *) mem_44386)[sext_i32_i64(virt_group_id_45771) *
                                      squot64(segred_group_sizze_34296,
                                              segment_sizze_nonzzero_45760) +
                                      sext_i32_i64(local_tid_45763)] = ((__local
                                                                         float *) red_arr_mem_45767)[(sext_i32_i64(local_tid_45763) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45760 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34296
}
__kernel void mainDetailedzisegred_small_34271(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_45707_backing_aligned_0,
                                               int64_t m_30124, int64_t N_30125,
                                               int64_t i32_res_30137,
                                               int64_t num_groups_34283,
                                               __global
                                               unsigned char *images_mem_43532,
                                               __global
                                               unsigned char *mem_44383,
                                               int64_t segment_sizze_nonzzero_45700)
{
    #define segred_group_sizze_34282 (mainDetailedzisegred_group_sizze_34265)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45707_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45707_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45702;
    int32_t local_tid_45703;
    int64_t group_sizze_45706;
    int32_t wave_sizze_45705;
    int32_t group_tid_45704;
    
    global_tid_45702 = get_global_id(0);
    local_tid_45703 = get_local_id(0);
    group_sizze_45706 = get_local_size(0);
    wave_sizze_45705 = LOCKSTEP_WIDTH;
    group_tid_45704 = get_group_id(0);
    
    int32_t phys_tid_34271;
    
    phys_tid_34271 = global_tid_45702;
    
    __local char *red_arr_mem_45707;
    
    red_arr_mem_45707 = (__local char *) red_arr_mem_45707_backing_0;
    
    int32_t phys_group_id_45709;
    
    phys_group_id_45709 = get_group_id(0);
    for (int32_t i_45710 = 0; i_45710 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30124,
                                          squot64(segred_group_sizze_34282,
                                                  segment_sizze_nonzzero_45700))) -
                   phys_group_id_45709, sext_i64_i32(num_groups_34283));
         i_45710++) {
        int32_t virt_group_id_45711 = phys_group_id_45709 + i_45710 *
                sext_i64_i32(num_groups_34283);
        int64_t gtid_34262 = squot64(sext_i32_i64(local_tid_45703),
                                     segment_sizze_nonzzero_45700) +
                sext_i32_i64(virt_group_id_45711) *
                squot64(segred_group_sizze_34282, segment_sizze_nonzzero_45700);
        int64_t gtid_34270 = srem64(sext_i32_i64(local_tid_45703),
                                    i32_res_30137);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_30137) && (slt64(gtid_34262, m_30124) &&
                                            slt64(sext_i32_i64(local_tid_45703),
                                                  i32_res_30137 *
                                                  squot64(segred_group_sizze_34282,
                                                          segment_sizze_nonzzero_45700)))) {
                float x_34290 = ((__global
                                  float *) images_mem_43532)[gtid_34262 *
                                                             N_30125 +
                                                             gtid_34270];
                bool isnan_res_34291;
                
                isnan_res_34291 = futrts_isnan32(x_34290);
                
                bool cond_34292 = !isnan_res_34291;
                int32_t defunc_0_f_res_34293 = btoi_bool_i32(cond_34292);
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      int32_t *) red_arr_mem_45707)[sext_i32_i64(local_tid_45703)] =
                        defunc_0_f_res_34293;
                }
            } else {
                ((__local
                  int32_t *) red_arr_mem_45707)[sext_i32_i64(local_tid_45703)] =
                    0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_30137)) {
            // perform segmented scan to imitate reduction
            {
                int32_t x_34286;
                int32_t x_34287;
                int32_t x_45712;
                int32_t x_45713;
                bool ltid_in_bounds_45715;
                
                ltid_in_bounds_45715 = slt64(sext_i32_i64(local_tid_45703),
                                             i32_res_30137 *
                                             squot64(segred_group_sizze_34282,
                                                     segment_sizze_nonzzero_45700));
                
                int32_t skip_threads_45716;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45715) {
                        x_34287 = ((volatile __local
                                    int32_t *) red_arr_mem_45707)[sext_i32_i64(local_tid_45703)];
                        if ((local_tid_45703 - squot32(local_tid_45703, 32) *
                             32) == 0) {
                            x_34286 = x_34287;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45716 = 1;
                    while (slt32(skip_threads_45716, 32)) {
                        if (sle32(skip_threads_45716, local_tid_45703 -
                                  squot32(local_tid_45703, 32) * 32) &&
                            ltid_in_bounds_45715) {
                            // read operands
                            {
                                x_34286 = ((volatile __local
                                            int32_t *) red_arr_mem_45707)[sext_i32_i64(local_tid_45703) -
                                                                          sext_i32_i64(skip_threads_45716)];
                            }
                            // perform operation
                            {
                                bool inactive_45717 =
                                     slt64(srem64(sext_i32_i64(local_tid_45703),
                                                  i32_res_30137),
                                           sext_i32_i64(local_tid_45703) -
                                           sext_i32_i64(local_tid_45703 -
                                           skip_threads_45716));
                                
                                if (inactive_45717) {
                                    x_34286 = x_34287;
                                }
                                if (!inactive_45717) {
                                    int32_t defunc_1_op_res_34288 =
                                            add32(x_34286, x_34287);
                                    
                                    x_34286 = defunc_1_op_res_34288;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45705, skip_threads_45716)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45716, local_tid_45703 -
                                  squot32(local_tid_45703, 32) * 32) &&
                            ltid_in_bounds_45715) {
                            // write result
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_45707)[sext_i32_i64(local_tid_45703)] =
                                    x_34286;
                                x_34287 = x_34286;
                            }
                        }
                        if (sle32(wave_sizze_45705, skip_threads_45716)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45716 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45703 - squot32(local_tid_45703, 32) * 32) ==
                        31 && ltid_in_bounds_45715) {
                        ((volatile __local
                          int32_t *) red_arr_mem_45707)[sext_i32_i64(squot32(local_tid_45703,
                                                                             32))] =
                            x_34286;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45718;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45703, 32) == 0 &&
                            ltid_in_bounds_45715) {
                            x_45713 = ((volatile __local
                                        int32_t *) red_arr_mem_45707)[sext_i32_i64(local_tid_45703)];
                            if ((local_tid_45703 - squot32(local_tid_45703,
                                                           32) * 32) == 0) {
                                x_45712 = x_45713;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45718 = 1;
                        while (slt32(skip_threads_45718, 32)) {
                            if (sle32(skip_threads_45718, local_tid_45703 -
                                      squot32(local_tid_45703, 32) * 32) &&
                                (squot32(local_tid_45703, 32) == 0 &&
                                 ltid_in_bounds_45715)) {
                                // read operands
                                {
                                    x_45712 = ((volatile __local
                                                int32_t *) red_arr_mem_45707)[sext_i32_i64(local_tid_45703) -
                                                                              sext_i32_i64(skip_threads_45718)];
                                }
                                // perform operation
                                {
                                    bool inactive_45719 =
                                         slt64(srem64(sext_i32_i64(local_tid_45703 *
                                                      32 + 32 - 1),
                                                      i32_res_30137),
                                               sext_i32_i64(local_tid_45703 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45703 -
                                                             skip_threads_45718) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45719) {
                                        x_45712 = x_45713;
                                    }
                                    if (!inactive_45719) {
                                        int32_t defunc_1_op_res_45714 =
                                                add32(x_45712, x_45713);
                                        
                                        x_45712 = defunc_1_op_res_45714;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45705, skip_threads_45718)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45718, local_tid_45703 -
                                      squot32(local_tid_45703, 32) * 32) &&
                                (squot32(local_tid_45703, 32) == 0 &&
                                 ltid_in_bounds_45715)) {
                                // write result
                                {
                                    ((volatile __local
                                      int32_t *) red_arr_mem_45707)[sext_i32_i64(local_tid_45703)] =
                                        x_45712;
                                    x_45713 = x_45712;
                                }
                            }
                            if (sle32(wave_sizze_45705, skip_threads_45718)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45718 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45703, 32) == 0 ||
                          !ltid_in_bounds_45715)) {
                        // read operands
                        {
                            x_34287 = x_34286;
                            x_34286 = ((__local
                                        int32_t *) red_arr_mem_45707)[sext_i32_i64(squot32(local_tid_45703,
                                                                                           32)) -
                                                                      1];
                        }
                        // perform operation
                        {
                            bool inactive_45720 =
                                 slt64(srem64(sext_i32_i64(local_tid_45703),
                                              i32_res_30137),
                                       sext_i32_i64(local_tid_45703) -
                                       sext_i32_i64(squot32(local_tid_45703,
                                                            32) * 32 - 1));
                            
                            if (inactive_45720) {
                                x_34286 = x_34287;
                            }
                            if (!inactive_45720) {
                                int32_t defunc_1_op_res_34288 = add32(x_34286,
                                                                      x_34287);
                                
                                x_34286 = defunc_1_op_res_34288;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              int32_t *) red_arr_mem_45707)[sext_i32_i64(local_tid_45703)] =
                                x_34286;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45703, 32) == 0) {
                        ((__local
                          int32_t *) red_arr_mem_45707)[sext_i32_i64(local_tid_45703)] =
                            x_34287;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45711) *
                      squot64(segred_group_sizze_34282,
                              segment_sizze_nonzzero_45700) +
                      sext_i32_i64(local_tid_45703), m_30124) &&
                slt64(sext_i32_i64(local_tid_45703),
                      squot64(segred_group_sizze_34282,
                              segment_sizze_nonzzero_45700))) {
                ((__global
                  int32_t *) mem_44383)[sext_i32_i64(virt_group_id_45711) *
                                        squot64(segred_group_sizze_34282,
                                                segment_sizze_nonzzero_45700) +
                                        sext_i32_i64(local_tid_45703)] =
                    ((__local
                      int32_t *) red_arr_mem_45707)[(sext_i32_i64(local_tid_45703) +
                                                     1) *
                                                    segment_sizze_nonzzero_45700 -
                                                    1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34282
}
__kernel void mainDetailedzisegred_small_34422(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_45876_backing_aligned_0,
                                               int64_t N_30123, int64_t m_30124,
                                               int64_t i32_res_30485,
                                               int64_t num_groups_34440,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_44332,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_44395,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_44396,
                                               __global
                                               unsigned char *mem_44429,
                                               int64_t segment_sizze_nonzzero_45869)
{
    #define segred_group_sizze_34439 (mainDetailedzisegred_group_sizze_34416)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45876_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45876_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45871;
    int32_t local_tid_45872;
    int64_t group_sizze_45875;
    int32_t wave_sizze_45874;
    int32_t group_tid_45873;
    
    global_tid_45871 = get_global_id(0);
    local_tid_45872 = get_local_id(0);
    group_sizze_45875 = get_local_size(0);
    wave_sizze_45874 = LOCKSTEP_WIDTH;
    group_tid_45873 = get_group_id(0);
    
    int32_t phys_tid_34422;
    
    phys_tid_34422 = global_tid_45871;
    
    __local char *red_arr_mem_45876;
    
    red_arr_mem_45876 = (__local char *) red_arr_mem_45876_backing_0;
    
    int32_t phys_group_id_45878;
    
    phys_group_id_45878 = get_group_id(0);
    for (int32_t i_45879 = 0; i_45879 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30124,
                                          squot64(segred_group_sizze_34439,
                                                  segment_sizze_nonzzero_45869))) -
                   phys_group_id_45878, sext_i64_i32(num_groups_34440));
         i_45879++) {
        int32_t virt_group_id_45880 = phys_group_id_45878 + i_45879 *
                sext_i64_i32(num_groups_34440);
        int64_t gtid_34413 = squot64(sext_i32_i64(local_tid_45872),
                                     segment_sizze_nonzzero_45869) +
                sext_i32_i64(virt_group_id_45880) *
                squot64(segred_group_sizze_34439, segment_sizze_nonzzero_45869);
        int64_t gtid_34421 = srem64(sext_i32_i64(local_tid_45872),
                                    i32_res_30485);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_30485) && (slt64(gtid_34413, m_30124) &&
                                            slt64(sext_i32_i64(local_tid_45872),
                                                  i32_res_30485 *
                                                  squot64(segred_group_sizze_34439,
                                                          segment_sizze_nonzzero_45869)))) {
                int32_t x_34448 = ((__global
                                    int32_t *) defunc_3_map_res_mem_44395)[gtid_34413];
                int32_t index_primexp_41528 = sext_i64_i32(gtid_34421);
                bool cond_34450 = slt32(index_primexp_41528, x_34448);
                float defunc_0_f_res_34451;
                
                if (cond_34450) {
                    int32_t x_34447 = ((__global
                                        int32_t *) defunc_3_map_res_mem_44396)[gtid_34413];
                    int32_t x_34452 = add32(x_34447, index_primexp_41528);
                    int32_t x_34453 = sub32(x_34452, x_34448);
                    int32_t i_34454 = add32(1, x_34453);
                    int64_t i_34455 = sext_i32_i64(i_34454);
                    float defunc_0_f_res_t_res_34456 = ((__global
                                                         float *) defunc_4_map_res_mem_44332)[gtid_34413 *
                                                                                              N_30123 +
                                                                                              i_34455];
                    
                    defunc_0_f_res_34451 = defunc_0_f_res_t_res_34456;
                } else {
                    defunc_0_f_res_34451 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45876)[sext_i32_i64(local_tid_45872)] =
                        defunc_0_f_res_34451;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45876)[sext_i32_i64(local_tid_45872)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_30485)) {
            // perform segmented scan to imitate reduction
            {
                float x_34443;
                float x_34444;
                float x_45881;
                float x_45882;
                bool ltid_in_bounds_45884;
                
                ltid_in_bounds_45884 = slt64(sext_i32_i64(local_tid_45872),
                                             i32_res_30485 *
                                             squot64(segred_group_sizze_34439,
                                                     segment_sizze_nonzzero_45869));
                
                int32_t skip_threads_45885;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45884) {
                        x_34444 = ((volatile __local
                                    float *) red_arr_mem_45876)[sext_i32_i64(local_tid_45872)];
                        if ((local_tid_45872 - squot32(local_tid_45872, 32) *
                             32) == 0) {
                            x_34443 = x_34444;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45885 = 1;
                    while (slt32(skip_threads_45885, 32)) {
                        if (sle32(skip_threads_45885, local_tid_45872 -
                                  squot32(local_tid_45872, 32) * 32) &&
                            ltid_in_bounds_45884) {
                            // read operands
                            {
                                x_34443 = ((volatile __local
                                            float *) red_arr_mem_45876)[sext_i32_i64(local_tid_45872) -
                                                                        sext_i32_i64(skip_threads_45885)];
                            }
                            // perform operation
                            {
                                bool inactive_45886 =
                                     slt64(srem64(sext_i32_i64(local_tid_45872),
                                                  i32_res_30485),
                                           sext_i32_i64(local_tid_45872) -
                                           sext_i32_i64(local_tid_45872 -
                                           skip_threads_45885));
                                
                                if (inactive_45886) {
                                    x_34443 = x_34444;
                                }
                                if (!inactive_45886) {
                                    float defunc_1_op_res_34445 = x_34443 +
                                          x_34444;
                                    
                                    x_34443 = defunc_1_op_res_34445;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45874, skip_threads_45885)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45885, local_tid_45872 -
                                  squot32(local_tid_45872, 32) * 32) &&
                            ltid_in_bounds_45884) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45876)[sext_i32_i64(local_tid_45872)] =
                                    x_34443;
                                x_34444 = x_34443;
                            }
                        }
                        if (sle32(wave_sizze_45874, skip_threads_45885)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45885 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45872 - squot32(local_tid_45872, 32) * 32) ==
                        31 && ltid_in_bounds_45884) {
                        ((volatile __local
                          float *) red_arr_mem_45876)[sext_i32_i64(squot32(local_tid_45872,
                                                                           32))] =
                            x_34443;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45887;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45872, 32) == 0 &&
                            ltid_in_bounds_45884) {
                            x_45882 = ((volatile __local
                                        float *) red_arr_mem_45876)[sext_i32_i64(local_tid_45872)];
                            if ((local_tid_45872 - squot32(local_tid_45872,
                                                           32) * 32) == 0) {
                                x_45881 = x_45882;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45887 = 1;
                        while (slt32(skip_threads_45887, 32)) {
                            if (sle32(skip_threads_45887, local_tid_45872 -
                                      squot32(local_tid_45872, 32) * 32) &&
                                (squot32(local_tid_45872, 32) == 0 &&
                                 ltid_in_bounds_45884)) {
                                // read operands
                                {
                                    x_45881 = ((volatile __local
                                                float *) red_arr_mem_45876)[sext_i32_i64(local_tid_45872) -
                                                                            sext_i32_i64(skip_threads_45887)];
                                }
                                // perform operation
                                {
                                    bool inactive_45888 =
                                         slt64(srem64(sext_i32_i64(local_tid_45872 *
                                                      32 + 32 - 1),
                                                      i32_res_30485),
                                               sext_i32_i64(local_tid_45872 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45872 -
                                                             skip_threads_45887) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45888) {
                                        x_45881 = x_45882;
                                    }
                                    if (!inactive_45888) {
                                        float defunc_1_op_res_45883 = x_45881 +
                                              x_45882;
                                        
                                        x_45881 = defunc_1_op_res_45883;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45874, skip_threads_45887)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45887, local_tid_45872 -
                                      squot32(local_tid_45872, 32) * 32) &&
                                (squot32(local_tid_45872, 32) == 0 &&
                                 ltid_in_bounds_45884)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45876)[sext_i32_i64(local_tid_45872)] =
                                        x_45881;
                                    x_45882 = x_45881;
                                }
                            }
                            if (sle32(wave_sizze_45874, skip_threads_45887)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45887 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45872, 32) == 0 ||
                          !ltid_in_bounds_45884)) {
                        // read operands
                        {
                            x_34444 = x_34443;
                            x_34443 = ((__local
                                        float *) red_arr_mem_45876)[sext_i32_i64(squot32(local_tid_45872,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45889 =
                                 slt64(srem64(sext_i32_i64(local_tid_45872),
                                              i32_res_30485),
                                       sext_i32_i64(local_tid_45872) -
                                       sext_i32_i64(squot32(local_tid_45872,
                                                            32) * 32 - 1));
                            
                            if (inactive_45889) {
                                x_34443 = x_34444;
                            }
                            if (!inactive_45889) {
                                float defunc_1_op_res_34445 = x_34443 + x_34444;
                                
                                x_34443 = defunc_1_op_res_34445;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45876)[sext_i32_i64(local_tid_45872)] =
                                x_34443;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45872, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45876)[sext_i32_i64(local_tid_45872)] =
                            x_34444;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45880) *
                      squot64(segred_group_sizze_34439,
                              segment_sizze_nonzzero_45869) +
                      sext_i32_i64(local_tid_45872), m_30124) &&
                slt64(sext_i32_i64(local_tid_45872),
                      squot64(segred_group_sizze_34439,
                              segment_sizze_nonzzero_45869))) {
                ((__global
                  float *) mem_44429)[sext_i32_i64(virt_group_id_45880) *
                                      squot64(segred_group_sizze_34439,
                                              segment_sizze_nonzzero_45869) +
                                      sext_i32_i64(local_tid_45872)] = ((__local
                                                                         float *) red_arr_mem_45876)[(sext_i32_i64(local_tid_45872) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45869 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34439
}
__kernel void mainDetailedzisegred_small_36080(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_46098_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_46096_backing_aligned_1,
                                               __local volatile
                                               int64_t *red_arr_mem_46094_backing_aligned_2,
                                               int64_t m_30124,
                                               int64_t iota32_arg_30510,
                                               int64_t num_groups_36251,
                                               __global
                                               unsigned char *mem_44435,
                                               __global
                                               unsigned char *mem_44643,
                                               __global
                                               unsigned char *mem_44645,
                                               __global
                                               unsigned char *mem_44649,
                                               __global
                                               unsigned char *mem_44652,
                                               __global
                                               unsigned char *mem_44654,
                                               __global
                                               unsigned char *mem_44656,
                                               __global
                                               unsigned char *mem_44659,
                                               int64_t segment_sizze_nonzzero_46087)
{
    #define segred_group_sizze_36250 (mainDetailedzisegred_group_sizze_36074)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_46098_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_46098_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_46096_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_46096_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_46094_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_46094_backing_aligned_2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_46089;
    int32_t local_tid_46090;
    int64_t group_sizze_46093;
    int32_t wave_sizze_46092;
    int32_t group_tid_46091;
    
    global_tid_46089 = get_global_id(0);
    local_tid_46090 = get_local_id(0);
    group_sizze_46093 = get_local_size(0);
    wave_sizze_46092 = LOCKSTEP_WIDTH;
    group_tid_46091 = get_group_id(0);
    
    int32_t phys_tid_36080;
    
    phys_tid_36080 = global_tid_46089;
    
    __local char *red_arr_mem_46094;
    
    red_arr_mem_46094 = (__local char *) red_arr_mem_46094_backing_0;
    
    __local char *red_arr_mem_46096;
    
    red_arr_mem_46096 = (__local char *) red_arr_mem_46096_backing_1;
    
    __local char *red_arr_mem_46098;
    
    red_arr_mem_46098 = (__local char *) red_arr_mem_46098_backing_2;
    
    int32_t phys_group_id_46100;
    
    phys_group_id_46100 = get_group_id(0);
    for (int32_t i_46101 = 0; i_46101 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_30124,
                                          squot64(segred_group_sizze_36250,
                                                  segment_sizze_nonzzero_46087))) -
                   phys_group_id_46100, sext_i64_i32(num_groups_36251));
         i_46101++) {
        int32_t virt_group_id_46102 = phys_group_id_46100 + i_46101 *
                sext_i64_i32(num_groups_36251);
        int64_t gtid_36071 = squot64(sext_i32_i64(local_tid_46090),
                                     segment_sizze_nonzzero_46087) +
                sext_i32_i64(virt_group_id_46102) *
                squot64(segred_group_sizze_36250, segment_sizze_nonzzero_46087);
        int64_t gtid_36079 = srem64(sext_i32_i64(local_tid_46090),
                                    iota32_arg_30510);
        
        // apply map function if in bounds
        {
            if (slt64(0, iota32_arg_30510) && (slt64(gtid_36071, m_30124) &&
                                               slt64(sext_i32_i64(local_tid_46090),
                                                     iota32_arg_30510 *
                                                     squot64(segred_group_sizze_36250,
                                                             segment_sizze_nonzzero_46087)))) {
                int32_t y_36271 = ((__global int32_t *) mem_44645)[gtid_36071];
                float y_36272 = ((__global float *) mem_44643)[gtid_36071];
                float x_36276 = ((__global float *) mem_44649)[gtid_36071 *
                                                               iota32_arg_30510 +
                                                               gtid_36079];
                float x_36277 = ((__global float *) mem_44435)[gtid_36079];
                int32_t index_primexp_41548 = sext_i64_i32(gtid_36079);
                float defunc_0_f_res_36280 = x_36276 / y_36272;
                bool cond_36281 = slt32(index_primexp_41548, y_36271);
                bool isnan_res_36282;
                
                isnan_res_36282 = futrts_isnan32(defunc_0_f_res_36280);
                
                bool cond_t_res_36283 = !isnan_res_36282;
                bool x_36284 = cond_36281 && cond_t_res_36283;
                float abs_res_36285 = (float) fabs(defunc_0_f_res_36280);
                bool defunc_2_f_res_t_res_36286 = x_36277 < abs_res_36285;
                bool x_36287 = x_36284 && defunc_2_f_res_t_res_36286;
                float defunc_1_f_res_36288;
                
                if (cond_36281) {
                    defunc_1_f_res_36288 = defunc_0_f_res_36280;
                } else {
                    defunc_1_f_res_36288 = 0.0F;
                }
                // save map-out results
                {
                    ((__global float *) mem_44659)[gtid_36071 *
                                                   iota32_arg_30510 +
                                                   gtid_36079] =
                        defunc_0_f_res_36280;
                }
                // save results to be reduced
                {
                    ((__local
                      bool *) red_arr_mem_46094)[sext_i32_i64(local_tid_46090)] =
                        x_36287;
                    ((__local
                      int32_t *) red_arr_mem_46096)[sext_i32_i64(local_tid_46090)] =
                        index_primexp_41548;
                    ((__local
                      float *) red_arr_mem_46098)[sext_i32_i64(local_tid_46090)] =
                        defunc_1_f_res_36288;
                }
            } else {
                ((__local
                  bool *) red_arr_mem_46094)[sext_i32_i64(local_tid_46090)] = 0;
                ((__local
                  int32_t *) red_arr_mem_46096)[sext_i32_i64(local_tid_46090)] =
                    -1;
                ((__local
                  float *) red_arr_mem_46098)[sext_i32_i64(local_tid_46090)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, iota32_arg_30510)) {
            // perform segmented scan to imitate reduction
            {
                bool x_36257;
                int32_t x_36258;
                float x_36259;
                bool x_36260;
                int32_t x_36261;
                float x_36262;
                bool x_46103;
                int32_t x_46104;
                float x_46105;
                bool x_46106;
                int32_t x_46107;
                float x_46108;
                bool ltid_in_bounds_46117;
                
                ltid_in_bounds_46117 = slt64(sext_i32_i64(local_tid_46090),
                                             iota32_arg_30510 *
                                             squot64(segred_group_sizze_36250,
                                                     segment_sizze_nonzzero_46087));
                
                int32_t skip_threads_46118;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_46117) {
                        x_36260 = ((volatile __local
                                    bool *) red_arr_mem_46094)[sext_i32_i64(local_tid_46090)];
                        x_36261 = ((volatile __local
                                    int32_t *) red_arr_mem_46096)[sext_i32_i64(local_tid_46090)];
                        x_36262 = ((volatile __local
                                    float *) red_arr_mem_46098)[sext_i32_i64(local_tid_46090)];
                        if ((local_tid_46090 - squot32(local_tid_46090, 32) *
                             32) == 0) {
                            x_36257 = x_36260;
                            x_36258 = x_36261;
                            x_36259 = x_36262;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_46118 = 1;
                    while (slt32(skip_threads_46118, 32)) {
                        if (sle32(skip_threads_46118, local_tid_46090 -
                                  squot32(local_tid_46090, 32) * 32) &&
                            ltid_in_bounds_46117) {
                            // read operands
                            {
                                x_36257 = ((volatile __local
                                            bool *) red_arr_mem_46094)[sext_i32_i64(local_tid_46090) -
                                                                       sext_i32_i64(skip_threads_46118)];
                                x_36258 = ((volatile __local
                                            int32_t *) red_arr_mem_46096)[sext_i32_i64(local_tid_46090) -
                                                                          sext_i32_i64(skip_threads_46118)];
                                x_36259 = ((volatile __local
                                            float *) red_arr_mem_46098)[sext_i32_i64(local_tid_46090) -
                                                                        sext_i32_i64(skip_threads_46118)];
                            }
                            // perform operation
                            {
                                bool inactive_46119 =
                                     slt64(srem64(sext_i32_i64(local_tid_46090),
                                                  iota32_arg_30510),
                                           sext_i32_i64(local_tid_46090) -
                                           sext_i32_i64(local_tid_46090 -
                                           skip_threads_46118));
                                
                                if (inactive_46119) {
                                    x_36257 = x_36260;
                                    x_36258 = x_36261;
                                    x_36259 = x_36262;
                                }
                                if (!inactive_46119) {
                                    bool defunc_1_op_res_36263;
                                    int32_t defunc_1_op_res_36264;
                                    
                                    if (x_36257) {
                                        defunc_1_op_res_36263 = x_36257;
                                        defunc_1_op_res_36264 = x_36258;
                                    } else {
                                        bool x_36265 = x_36260 && x_36260;
                                        bool x_36266 = !x_36260;
                                        bool y_36267 = x_36257 && x_36266;
                                        bool defunc_1_op_res_f_res_36268 =
                                             x_36265 || y_36267;
                                        int32_t defunc_1_op_res_f_res_36269;
                                        
                                        if (x_36260) {
                                            defunc_1_op_res_f_res_36269 =
                                                x_36261;
                                        } else {
                                            defunc_1_op_res_f_res_36269 =
                                                x_36258;
                                        }
                                        defunc_1_op_res_36263 =
                                            defunc_1_op_res_f_res_36268;
                                        defunc_1_op_res_36264 =
                                            defunc_1_op_res_f_res_36269;
                                    }
                                    
                                    float defunc_1_op_res_36270 = x_36259 +
                                          x_36262;
                                    
                                    x_36257 = defunc_1_op_res_36263;
                                    x_36258 = defunc_1_op_res_36264;
                                    x_36259 = defunc_1_op_res_36270;
                                }
                            }
                        }
                        if (sle32(wave_sizze_46092, skip_threads_46118)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_46118, local_tid_46090 -
                                  squot32(local_tid_46090, 32) * 32) &&
                            ltid_in_bounds_46117) {
                            // write result
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_46094)[sext_i32_i64(local_tid_46090)] =
                                    x_36257;
                                x_36260 = x_36257;
                                ((volatile __local
                                  int32_t *) red_arr_mem_46096)[sext_i32_i64(local_tid_46090)] =
                                    x_36258;
                                x_36261 = x_36258;
                                ((volatile __local
                                  float *) red_arr_mem_46098)[sext_i32_i64(local_tid_46090)] =
                                    x_36259;
                                x_36262 = x_36259;
                            }
                        }
                        if (sle32(wave_sizze_46092, skip_threads_46118)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_46118 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_46090 - squot32(local_tid_46090, 32) * 32) ==
                        31 && ltid_in_bounds_46117) {
                        ((volatile __local
                          bool *) red_arr_mem_46094)[sext_i32_i64(squot32(local_tid_46090,
                                                                          32))] =
                            x_36257;
                        ((volatile __local
                          int32_t *) red_arr_mem_46096)[sext_i32_i64(squot32(local_tid_46090,
                                                                             32))] =
                            x_36258;
                        ((volatile __local
                          float *) red_arr_mem_46098)[sext_i32_i64(squot32(local_tid_46090,
                                                                           32))] =
                            x_36259;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_46120;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_46090, 32) == 0 &&
                            ltid_in_bounds_46117) {
                            x_46106 = ((volatile __local
                                        bool *) red_arr_mem_46094)[sext_i32_i64(local_tid_46090)];
                            x_46107 = ((volatile __local
                                        int32_t *) red_arr_mem_46096)[sext_i32_i64(local_tid_46090)];
                            x_46108 = ((volatile __local
                                        float *) red_arr_mem_46098)[sext_i32_i64(local_tid_46090)];
                            if ((local_tid_46090 - squot32(local_tid_46090,
                                                           32) * 32) == 0) {
                                x_46103 = x_46106;
                                x_46104 = x_46107;
                                x_46105 = x_46108;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_46120 = 1;
                        while (slt32(skip_threads_46120, 32)) {
                            if (sle32(skip_threads_46120, local_tid_46090 -
                                      squot32(local_tid_46090, 32) * 32) &&
                                (squot32(local_tid_46090, 32) == 0 &&
                                 ltid_in_bounds_46117)) {
                                // read operands
                                {
                                    x_46103 = ((volatile __local
                                                bool *) red_arr_mem_46094)[sext_i32_i64(local_tid_46090) -
                                                                           sext_i32_i64(skip_threads_46120)];
                                    x_46104 = ((volatile __local
                                                int32_t *) red_arr_mem_46096)[sext_i32_i64(local_tid_46090) -
                                                                              sext_i32_i64(skip_threads_46120)];
                                    x_46105 = ((volatile __local
                                                float *) red_arr_mem_46098)[sext_i32_i64(local_tid_46090) -
                                                                            sext_i32_i64(skip_threads_46120)];
                                }
                                // perform operation
                                {
                                    bool inactive_46121 =
                                         slt64(srem64(sext_i32_i64(local_tid_46090 *
                                                      32 + 32 - 1),
                                                      iota32_arg_30510),
                                               sext_i32_i64(local_tid_46090 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_46090 -
                                                             skip_threads_46120) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_46121) {
                                        x_46103 = x_46106;
                                        x_46104 = x_46107;
                                        x_46105 = x_46108;
                                    }
                                    if (!inactive_46121) {
                                        bool defunc_1_op_res_46109;
                                        int32_t defunc_1_op_res_46110;
                                        
                                        if (x_46103) {
                                            defunc_1_op_res_46109 = x_46103;
                                            defunc_1_op_res_46110 = x_46104;
                                        } else {
                                            bool x_46111 = x_46106 && x_46106;
                                            bool x_46112 = !x_46106;
                                            bool y_46113 = x_46103 && x_46112;
                                            bool defunc_1_op_res_f_res_46114 =
                                                 x_46111 || y_46113;
                                            int32_t defunc_1_op_res_f_res_46115;
                                            
                                            if (x_46106) {
                                                defunc_1_op_res_f_res_46115 =
                                                    x_46107;
                                            } else {
                                                defunc_1_op_res_f_res_46115 =
                                                    x_46104;
                                            }
                                            defunc_1_op_res_46109 =
                                                defunc_1_op_res_f_res_46114;
                                            defunc_1_op_res_46110 =
                                                defunc_1_op_res_f_res_46115;
                                        }
                                        
                                        float defunc_1_op_res_46116 = x_46105 +
                                              x_46108;
                                        
                                        x_46103 = defunc_1_op_res_46109;
                                        x_46104 = defunc_1_op_res_46110;
                                        x_46105 = defunc_1_op_res_46116;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_46092, skip_threads_46120)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_46120, local_tid_46090 -
                                      squot32(local_tid_46090, 32) * 32) &&
                                (squot32(local_tid_46090, 32) == 0 &&
                                 ltid_in_bounds_46117)) {
                                // write result
                                {
                                    ((volatile __local
                                      bool *) red_arr_mem_46094)[sext_i32_i64(local_tid_46090)] =
                                        x_46103;
                                    x_46106 = x_46103;
                                    ((volatile __local
                                      int32_t *) red_arr_mem_46096)[sext_i32_i64(local_tid_46090)] =
                                        x_46104;
                                    x_46107 = x_46104;
                                    ((volatile __local
                                      float *) red_arr_mem_46098)[sext_i32_i64(local_tid_46090)] =
                                        x_46105;
                                    x_46108 = x_46105;
                                }
                            }
                            if (sle32(wave_sizze_46092, skip_threads_46120)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_46120 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_46090, 32) == 0 ||
                          !ltid_in_bounds_46117)) {
                        // read operands
                        {
                            x_36260 = x_36257;
                            x_36261 = x_36258;
                            x_36262 = x_36259;
                            x_36257 = ((__local
                                        bool *) red_arr_mem_46094)[sext_i32_i64(squot32(local_tid_46090,
                                                                                        32)) -
                                                                   1];
                            x_36258 = ((__local
                                        int32_t *) red_arr_mem_46096)[sext_i32_i64(squot32(local_tid_46090,
                                                                                           32)) -
                                                                      1];
                            x_36259 = ((__local
                                        float *) red_arr_mem_46098)[sext_i32_i64(squot32(local_tid_46090,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_46122 =
                                 slt64(srem64(sext_i32_i64(local_tid_46090),
                                              iota32_arg_30510),
                                       sext_i32_i64(local_tid_46090) -
                                       sext_i32_i64(squot32(local_tid_46090,
                                                            32) * 32 - 1));
                            
                            if (inactive_46122) {
                                x_36257 = x_36260;
                                x_36258 = x_36261;
                                x_36259 = x_36262;
                            }
                            if (!inactive_46122) {
                                bool defunc_1_op_res_36263;
                                int32_t defunc_1_op_res_36264;
                                
                                if (x_36257) {
                                    defunc_1_op_res_36263 = x_36257;
                                    defunc_1_op_res_36264 = x_36258;
                                } else {
                                    bool x_36265 = x_36260 && x_36260;
                                    bool x_36266 = !x_36260;
                                    bool y_36267 = x_36257 && x_36266;
                                    bool defunc_1_op_res_f_res_36268 =
                                         x_36265 || y_36267;
                                    int32_t defunc_1_op_res_f_res_36269;
                                    
                                    if (x_36260) {
                                        defunc_1_op_res_f_res_36269 = x_36261;
                                    } else {
                                        defunc_1_op_res_f_res_36269 = x_36258;
                                    }
                                    defunc_1_op_res_36263 =
                                        defunc_1_op_res_f_res_36268;
                                    defunc_1_op_res_36264 =
                                        defunc_1_op_res_f_res_36269;
                                }
                                
                                float defunc_1_op_res_36270 = x_36259 + x_36262;
                                
                                x_36257 = defunc_1_op_res_36263;
                                x_36258 = defunc_1_op_res_36264;
                                x_36259 = defunc_1_op_res_36270;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              bool *) red_arr_mem_46094)[sext_i32_i64(local_tid_46090)] =
                                x_36257;
                            ((__local
                              int32_t *) red_arr_mem_46096)[sext_i32_i64(local_tid_46090)] =
                                x_36258;
                            ((__local
                              float *) red_arr_mem_46098)[sext_i32_i64(local_tid_46090)] =
                                x_36259;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_46090, 32) == 0) {
                        ((__local
                          bool *) red_arr_mem_46094)[sext_i32_i64(local_tid_46090)] =
                            x_36260;
                        ((__local
                          int32_t *) red_arr_mem_46096)[sext_i32_i64(local_tid_46090)] =
                            x_36261;
                        ((__local
                          float *) red_arr_mem_46098)[sext_i32_i64(local_tid_46090)] =
                            x_36262;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_46102) *
                      squot64(segred_group_sizze_36250,
                              segment_sizze_nonzzero_46087) +
                      sext_i32_i64(local_tid_46090), m_30124) &&
                slt64(sext_i32_i64(local_tid_46090),
                      squot64(segred_group_sizze_36250,
                              segment_sizze_nonzzero_46087))) {
                ((__global
                  bool *) mem_44652)[sext_i32_i64(virt_group_id_46102) *
                                     squot64(segred_group_sizze_36250,
                                             segment_sizze_nonzzero_46087) +
                                     sext_i32_i64(local_tid_46090)] = ((__local
                                                                        bool *) red_arr_mem_46094)[(sext_i32_i64(local_tid_46090) +
                                                                                                    1) *
                                                                                                   segment_sizze_nonzzero_46087 -
                                                                                                   1];
                ((__global
                  int32_t *) mem_44654)[sext_i32_i64(virt_group_id_46102) *
                                        squot64(segred_group_sizze_36250,
                                                segment_sizze_nonzzero_46087) +
                                        sext_i32_i64(local_tid_46090)] =
                    ((__local
                      int32_t *) red_arr_mem_46096)[(sext_i32_i64(local_tid_46090) +
                                                     1) *
                                                    segment_sizze_nonzzero_46087 -
                                                    1];
                ((__global
                  float *) mem_44656)[sext_i32_i64(virt_group_id_46102) *
                                      squot64(segred_group_sizze_36250,
                                              segment_sizze_nonzzero_46087) +
                                      sext_i32_i64(local_tid_46090)] = ((__local
                                                                         float *) red_arr_mem_46098)[(sext_i32_i64(local_tid_46090) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_46087 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36250
}
__kernel void remove_nanszisegmap_31631(__global int *global_failure,
                                        int64_t m_30109, int64_t n_30110,
                                        int64_t p_30111,
                                        int16_t nan_value_30112, __global
                                        unsigned char *images_mem_43531,
                                        __global unsigned char *mem_43536)
{
    #define segmap_group_sizze_31692 (remove_nanszisegmap_group_sizze_31635)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44987;
    int32_t local_tid_44988;
    int64_t group_sizze_44991;
    int32_t wave_sizze_44990;
    int32_t group_tid_44989;
    
    global_tid_44987 = get_global_id(0);
    local_tid_44988 = get_local_id(0);
    group_sizze_44991 = get_local_size(0);
    wave_sizze_44990 = LOCKSTEP_WIDTH;
    group_tid_44989 = get_group_id(0);
    
    int32_t phys_tid_31631;
    
    phys_tid_31631 = global_tid_44987;
    
    int64_t gtid_31628;
    
    gtid_31628 = squot64(sext_i32_i64(group_tid_44989) *
                         segmap_group_sizze_31692 +
                         sext_i32_i64(local_tid_44988), n_30110 * p_30111);
    
    int64_t gtid_31629;
    
    gtid_31629 = squot64(sext_i32_i64(group_tid_44989) *
                         segmap_group_sizze_31692 +
                         sext_i32_i64(local_tid_44988) -
                         squot64(sext_i32_i64(group_tid_44989) *
                                 segmap_group_sizze_31692 +
                                 sext_i32_i64(local_tid_44988), n_30110 *
                                 p_30111) * (n_30110 * p_30111), p_30111);
    
    int64_t gtid_31630;
    
    gtid_31630 = sext_i32_i64(group_tid_44989) * segmap_group_sizze_31692 +
        sext_i32_i64(local_tid_44988) - squot64(sext_i32_i64(group_tid_44989) *
                                                segmap_group_sizze_31692 +
                                                sext_i32_i64(local_tid_44988),
                                                n_30110 * p_30111) * (n_30110 *
                                                                      p_30111) -
        squot64(sext_i32_i64(group_tid_44989) * segmap_group_sizze_31692 +
                sext_i32_i64(local_tid_44988) -
                squot64(sext_i32_i64(group_tid_44989) *
                        segmap_group_sizze_31692 +
                        sext_i32_i64(local_tid_44988), n_30110 * p_30111) *
                (n_30110 * p_30111), p_30111) * p_30111;
    if ((slt64(gtid_31628, m_30109) && slt64(gtid_31629, n_30110)) &&
        slt64(gtid_31630, p_30111)) {
        int16_t x_31695 = ((__global int16_t *) images_mem_43531)[gtid_31628 *
                                                                  (p_30111 *
                                                                   n_30110) +
                                                                  gtid_31629 *
                                                                  p_30111 +
                                                                  gtid_31630];
        bool cond_31696 = x_31695 == nan_value_30112;
        float defunc_0_f_res_31697;
        
        if (cond_31696) {
            defunc_0_f_res_31697 = NAN;
        } else {
            float i16_res_31698 = sitofp_i16_f32(x_31695);
            
            defunc_0_f_res_31697 = i16_res_31698;
        }
        ((__global float *) mem_43536)[gtid_31628 * (p_30111 * n_30110) +
                                       gtid_31629 * p_30111 + gtid_31630] =
            defunc_0_f_res_31697;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31692
}
"""
# Start of values.py.

# Hacky parser/reader/writer for values written in Futhark syntax.
# Used for reading stdin when compiling standalone programs with the
# Python code generator.

import numpy as np
import string
import struct
import sys

class ReaderInput:
    def __init__(self, f):
        self.f = f
        self.lookahead_buffer = []

    def get_char(self):
        if len(self.lookahead_buffer) == 0:
            return self.f.read(1)
        else:
            c = self.lookahead_buffer[0]
            self.lookahead_buffer = self.lookahead_buffer[1:]
            return c

    def unget_char(self, c):
        self.lookahead_buffer = [c] + self.lookahead_buffer

    def get_chars(self, n):
        n1 = min(n, len(self.lookahead_buffer))
        s = b''.join(self.lookahead_buffer[:n1])
        self.lookahead_buffer = self.lookahead_buffer[n1:]
        n2 = n - n1
        if n2 > 0:
            s += self.f.read(n2)
        return s

    def peek_char(self):
        c = self.get_char()
        if c:
            self.unget_char(c)
        return c

def skip_spaces(f):
    c = f.get_char()
    while c != None:
        if c.isspace():
            c = f.get_char()
        elif c == b'-':
          # May be line comment.
          if f.peek_char() == b'-':
            # Yes, line comment. Skip to end of line.
            while (c != b'\n' and c != None):
              c = f.get_char()
          else:
            break
        else:
          break
    if c:
        f.unget_char(c)

def parse_specific_char(f, expected):
    got = f.get_char()
    if got != expected:
        f.unget_char(got)
        raise ValueError
    return True

def parse_specific_string(f, s):
    # This funky mess is intended, and is caused by the fact that if `type(b) ==
    # bytes` then `type(b[0]) == int`, but we need to match each element with a
    # `bytes`, so therefore we make each character an array element
    b = s.encode('utf8')
    bs = [b[i:i+1] for i in range(len(b))]
    read = []
    try:
        for c in bs:
            parse_specific_char(f, c)
            read.append(c)
        return True
    except ValueError:
        for c in read[::-1]:
            f.unget_char(c)
        raise

def optional(p, *args):
    try:
        return p(*args)
    except ValueError:
        return None

def optional_specific_string(f, s):
    c = f.peek_char()
    # This funky mess is intended, and is caused by the fact that if `type(b) ==
    # bytes` then `type(b[0]) == int`, but we need to match each element with a
    # `bytes`, so therefore we make each character an array element
    b = s.encode('utf8')
    bs = [b[i:i+1] for i in range(len(b))]
    if c == bs[0]:
        return parse_specific_string(f, s)
    else:
        return False

def sepBy(p, sep, *args):
    elems = []
    x = optional(p, *args)
    if x != None:
        elems += [x]
        while optional(sep, *args) != None:
            x = p(*args)
            elems += [x]
    return elems

# Assumes '0x' has already been read
def parse_hex_int(f):
    s = b''
    c = f.get_char()
    while c != None:
        if c in b'01234556789ABCDEFabcdef':
            s += c
            c = f.get_char()
        elif c == b'_':
            c = f.get_char() # skip _
        else:
            f.unget_char(c)
            break
    return str(int(s, 16)).encode('utf8') # ugh

def parse_int(f):
    s = b''
    c = f.get_char()
    if c == b'0' and f.peek_char() in b'xX':
        c = f.get_char() # skip X
        return parse_hex_int(f)
    else:
        while c != None:
            if c.isdigit():
                s += c
                c = f.get_char()
            elif c == b'_':
                c = f.get_char() # skip _
            else:
                f.unget_char(c)
                break
        if len(s) == 0:
            raise ValueError
        return s

def parse_int_signed(f):
    s = b''
    c = f.get_char()

    if c == b'-' and f.peek_char().isdigit():
      return c + parse_int(f)
    else:
      if c != b'+':
          f.unget_char(c)
      return parse_int(f)

def read_str_comma(f):
    skip_spaces(f)
    parse_specific_char(f, b',')
    return b','

def read_str_int(f, s):
    skip_spaces(f)
    x = int(parse_int_signed(f))
    optional_specific_string(f, s)
    return x

def read_str_uint(f, s):
    skip_spaces(f)
    x = int(parse_int(f))
    optional_specific_string(f, s)
    return x

def read_str_i8(f):
    return np.int8(read_str_int(f, 'i8'))
def read_str_i16(f):
    return np.int16(read_str_int(f, 'i16'))
def read_str_i32(f):
    return np.int32(read_str_int(f, 'i32'))
def read_str_i64(f):
    return np.int64(read_str_int(f, 'i64'))

def read_str_u8(f):
    return np.uint8(read_str_int(f, 'u8'))
def read_str_u16(f):
    return np.uint16(read_str_int(f, 'u16'))
def read_str_u32(f):
    return np.uint32(read_str_int(f, 'u32'))
def read_str_u64(f):
    return np.uint64(read_str_int(f, 'u64'))

def read_char(f):
    skip_spaces(f)
    parse_specific_char(f, b'\'')
    c = f.get_char()
    parse_specific_char(f, b'\'')
    return c

def read_str_hex_float(f, sign):
    int_part = parse_hex_int(f)
    parse_specific_char(f, b'.')
    frac_part = parse_hex_int(f)
    parse_specific_char(f, b'p')
    exponent = parse_int(f)

    int_val = int(int_part, 16)
    frac_val = float(int(frac_part, 16)) / (16 ** len(frac_part))
    exp_val = int(exponent)

    total_val = (int_val + frac_val) * (2.0 ** exp_val)
    if sign == b'-':
        total_val = -1 * total_val

    return float(total_val)


def read_str_decimal(f):
    skip_spaces(f)
    c = f.get_char()
    if (c == b'-'):
      sign = b'-'
    else:
      f.unget_char(c)
      sign = b''

    # Check for hexadecimal float
    c = f.get_char()
    if (c == '0' and (f.peek_char() in ['x', 'X'])):
        f.get_char()
        return read_str_hex_float(f, sign)
    else:
        f.unget_char(c)

    bef = optional(parse_int, f)
    if bef == None:
        bef = b'0'
        parse_specific_char(f, b'.')
        aft = parse_int(f)
    elif optional(parse_specific_char, f, b'.'):
        aft = parse_int(f)
    else:
        aft = b'0'
    if (optional(parse_specific_char, f, b'E') or
        optional(parse_specific_char, f, b'e')):
        expt = parse_int_signed(f)
    else:
        expt = b'0'
    return float(sign + bef + b'.' + aft + b'E' + expt)

def read_str_f32(f):
    skip_spaces(f)
    try:
        parse_specific_string(f, 'f32.nan')
        return np.float32(np.nan)
    except ValueError:
        try:
            parse_specific_string(f, 'f32.inf')
            return np.float32(np.inf)
        except ValueError:
            try:
               parse_specific_string(f, '-f32.inf')
               return np.float32(-np.inf)
            except ValueError:
               x = read_str_decimal(f)
               optional_specific_string(f, 'f32')
               return x

def read_str_f64(f):
    skip_spaces(f)
    try:
        parse_specific_string(f, 'f64.nan')
        return np.float64(np.nan)
    except ValueError:
        try:
            parse_specific_string(f, 'f64.inf')
            return np.float64(np.inf)
        except ValueError:
            try:
               parse_specific_string(f, '-f64.inf')
               return np.float64(-np.inf)
            except ValueError:
               x = read_str_decimal(f)
               optional_specific_string(f, 'f64')
               return x

def read_str_bool(f):
    skip_spaces(f)
    if f.peek_char() == b't':
        parse_specific_string(f, 'true')
        return True
    elif f.peek_char() == b'f':
        parse_specific_string(f, 'false')
        return False
    else:
        raise ValueError

def read_str_empty_array(f, type_name, rank):
    parse_specific_string(f, 'empty')
    parse_specific_char(f, b'(')
    dims = []
    for i in range(rank):
        parse_specific_string(f, '[')
        dims += [int(parse_int(f))]
        parse_specific_string(f, ']')
    if np.product(dims) != 0:
        raise ValueError
    parse_specific_string(f, type_name)
    parse_specific_char(f, b')')

    return tuple(dims)

def read_str_array_elems(f, elem_reader, type_name, rank):
    skip_spaces(f)
    try:
        parse_specific_char(f, b'[')
    except ValueError:
        return read_str_empty_array(f, type_name, rank)
    else:
        xs = sepBy(elem_reader, read_str_comma, f)
        skip_spaces(f)
        parse_specific_char(f, b']')
        return xs

def read_str_array_helper(f, elem_reader, type_name, rank):
    def nested_row_reader(_):
        return read_str_array_helper(f, elem_reader, type_name, rank-1)
    if rank == 1:
        row_reader = elem_reader
    else:
        row_reader = nested_row_reader
    return read_str_array_elems(f, row_reader, type_name, rank)

def expected_array_dims(l, rank):
  if rank > 1:
      n = len(l)
      if n == 0:
          elem = []
      else:
          elem = l[0]
      return [n] + expected_array_dims(elem, rank-1)
  else:
      return [len(l)]

def verify_array_dims(l, dims):
    if dims[0] != len(l):
        raise ValueError
    if len(dims) > 1:
        for x in l:
            verify_array_dims(x, dims[1:])

def read_str_array(f, elem_reader, type_name, rank, bt):
    elems = read_str_array_helper(f, elem_reader, type_name, rank)
    if type(elems) == tuple:
        # Empty array
        return np.empty(elems, dtype=bt)
    else:
        dims = expected_array_dims(elems, rank)
        verify_array_dims(elems, dims)
        return np.array(elems, dtype=bt)

################################################################################

READ_BINARY_VERSION = 2

# struct format specified at
# https://docs.python.org/2/library/struct.html#format-characters

def mk_bin_scalar_reader(t):
    def bin_reader(f):
        fmt = FUTHARK_PRIMTYPES[t]['bin_format']
        size = FUTHARK_PRIMTYPES[t]['size']
        return struct.unpack('<' + fmt, f.get_chars(size))[0]
    return bin_reader

read_bin_i8 = mk_bin_scalar_reader('i8')
read_bin_i16 = mk_bin_scalar_reader('i16')
read_bin_i32 = mk_bin_scalar_reader('i32')
read_bin_i64 = mk_bin_scalar_reader('i64')

read_bin_u8 = mk_bin_scalar_reader('u8')
read_bin_u16 = mk_bin_scalar_reader('u16')
read_bin_u32 = mk_bin_scalar_reader('u32')
read_bin_u64 = mk_bin_scalar_reader('u64')

read_bin_f32 = mk_bin_scalar_reader('f32')
read_bin_f64 = mk_bin_scalar_reader('f64')

read_bin_bool = mk_bin_scalar_reader('bool')

def read_is_binary(f):
    skip_spaces(f)
    c = f.get_char()
    if c == b'b':
        bin_version = read_bin_u8(f)
        if bin_version != READ_BINARY_VERSION:
            panic(1, "binary-input: File uses version %i, but I only understand version %i.\n",
                  bin_version, READ_BINARY_VERSION)
        return True
    else:
        f.unget_char(c)
        return False

FUTHARK_PRIMTYPES = {
    'i8':  {'binname' : b"  i8",
            'size' : 1,
            'bin_reader': read_bin_i8,
            'str_reader': read_str_i8,
            'bin_format': 'b',
            'numpy_type': np.int8 },

    'i16': {'binname' : b" i16",
            'size' : 2,
            'bin_reader': read_bin_i16,
            'str_reader': read_str_i16,
            'bin_format': 'h',
            'numpy_type': np.int16 },

    'i32': {'binname' : b" i32",
            'size' : 4,
            'bin_reader': read_bin_i32,
            'str_reader': read_str_i32,
            'bin_format': 'i',
            'numpy_type': np.int32 },

    'i64': {'binname' : b" i64",
            'size' : 8,
            'bin_reader': read_bin_i64,
            'str_reader': read_str_i64,
            'bin_format': 'q',
            'numpy_type': np.int64},

    'u8':  {'binname' : b"  u8",
            'size' : 1,
            'bin_reader': read_bin_u8,
            'str_reader': read_str_u8,
            'bin_format': 'B',
            'numpy_type': np.uint8 },

    'u16': {'binname' : b" u16",
            'size' : 2,
            'bin_reader': read_bin_u16,
            'str_reader': read_str_u16,
            'bin_format': 'H',
            'numpy_type': np.uint16 },

    'u32': {'binname' : b" u32",
            'size' : 4,
            'bin_reader': read_bin_u32,
            'str_reader': read_str_u32,
            'bin_format': 'I',
            'numpy_type': np.uint32 },

    'u64': {'binname' : b" u64",
            'size' : 8,
            'bin_reader': read_bin_u64,
            'str_reader': read_str_u64,
            'bin_format': 'Q',
            'numpy_type': np.uint64 },

    'f32': {'binname' : b" f32",
            'size' : 4,
            'bin_reader': read_bin_f32,
            'str_reader': read_str_f32,
            'bin_format': 'f',
            'numpy_type': np.float32 },

    'f64': {'binname' : b" f64",
            'size' : 8,
            'bin_reader': read_bin_f64,
            'str_reader': read_str_f64,
            'bin_format': 'd',
            'numpy_type': np.float64 },

    'bool': {'binname' : b"bool",
             'size' : 1,
             'bin_reader': read_bin_bool,
             'str_reader': read_str_bool,
             'bin_format': 'b',
             'numpy_type': np.bool }
}

def read_bin_read_type(f):
    read_binname = f.get_chars(4)

    for (k,v) in FUTHARK_PRIMTYPES.items():
        if v['binname'] == read_binname:
            return k
    panic(1, "binary-input: Did not recognize the type '%s'.\n", read_binname)

def numpy_type_to_type_name(t):
    for (k,v) in FUTHARK_PRIMTYPES.items():
        if v['numpy_type'] == t:
            return k
    raise Exception('Unknown Numpy type: {}'.format(t))

def read_bin_ensure_scalar(f, expected_type):
  dims = read_bin_i8(f)

  if dims != 0:
      panic(1, "binary-input: Expected scalar (0 dimensions), but got array with %i dimensions.\n", dims)

  bin_type = read_bin_read_type(f)
  if bin_type != expected_type:
      panic(1, "binary-input: Expected scalar of type %s but got scalar of type %s.\n",
            expected_type, bin_type)

# ------------------------------------------------------------------------------
# General interface for reading Primitive Futhark Values
# ------------------------------------------------------------------------------

def read_scalar(f, ty):
    if read_is_binary(f):
        read_bin_ensure_scalar(f, ty)
        return FUTHARK_PRIMTYPES[ty]['bin_reader'](f)
    return FUTHARK_PRIMTYPES[ty]['str_reader'](f)

def read_array(f, expected_type, rank):
    if not read_is_binary(f):
        str_reader = FUTHARK_PRIMTYPES[expected_type]['str_reader']
        return read_str_array(f, str_reader, expected_type, rank,
                              FUTHARK_PRIMTYPES[expected_type]['numpy_type'])

    bin_rank = read_bin_u8(f)

    if bin_rank != rank:
        panic(1, "binary-input: Expected %i dimensions, but got array with %i dimensions.\n",
              rank, bin_rank)

    bin_type_enum = read_bin_read_type(f)
    if expected_type != bin_type_enum:
        panic(1, "binary-input: Expected %iD-array with element type '%s' but got %iD-array with element type '%s'.\n",
              rank, expected_type, bin_rank, bin_type_enum)

    shape = []
    elem_count = 1
    for i in range(rank):
        bin_size = read_bin_u64(f)
        elem_count *= bin_size
        shape.append(bin_size)

    bin_fmt = FUTHARK_PRIMTYPES[bin_type_enum]['bin_format']

    # We first read the expected number of types into a bytestring,
    # then use np.fromstring.  This is because np.fromfile does not
    # work on things that are insufficiently file-like, like a network
    # stream.
    bytes = f.get_chars(elem_count * FUTHARK_PRIMTYPES[expected_type]['size'])
    arr = np.fromstring(bytes, dtype=FUTHARK_PRIMTYPES[bin_type_enum]['numpy_type'])
    arr.shape = shape

    return arr

if sys.version_info >= (3,0):
    input_reader = ReaderInput(sys.stdin.buffer)
else:
    input_reader = ReaderInput(sys.stdin)

import re

def read_value(type_desc, reader=input_reader):
    """Read a value of the given type.  The type is a string
representation of the Futhark type."""
    m = re.match(r'((?:\[\])*)([a-z0-9]+)$', type_desc)
    if m:
        dims = int(len(m.group(1))/2)
        basetype = m.group(2)
        assert basetype in FUTHARK_PRIMTYPES, "Unknown type: {}".format(type_desc)
        if dims > 0:
            return read_array(reader, basetype, dims)
        else:
            return read_scalar(reader, basetype)
        return (dims, basetype)

def end_of_input(entry, f=input_reader):
    skip_spaces(f)
    if f.get_char() != b'':
        panic(1, "Expected EOF on stdin after reading input for \"%s\".", entry)

def write_value_text(v, out=sys.stdout):
    if type(v) == np.uint8:
        out.write("%uu8" % v)
    elif type(v) == np.uint16:
        out.write("%uu16" % v)
    elif type(v) == np.uint32:
        out.write("%uu32" % v)
    elif type(v) == np.uint64:
        out.write("%uu64" % v)
    elif type(v) == np.int8:
        out.write("%di8" % v)
    elif type(v) == np.int16:
        out.write("%di16" % v)
    elif type(v) == np.int32:
        out.write("%di32" % v)
    elif type(v) == np.int64:
        out.write("%di64" % v)
    elif type(v) in [np.bool, np.bool_]:
        if v:
            out.write("true")
        else:
            out.write("false")
    elif type(v) == np.float32:
        if np.isnan(v):
            out.write('f32.nan')
        elif np.isinf(v):
            if v >= 0:
                out.write('f32.inf')
            else:
                out.write('-f32.inf')
        else:
            out.write("%.6ff32" % v)
    elif type(v) == np.float64:
        if np.isnan(v):
            out.write('f64.nan')
        elif np.isinf(v):
            if v >= 0:
                out.write('f64.inf')
            else:
                out.write('-f64.inf')
        else:
            out.write("%.6ff64" % v)
    elif type(v) == np.ndarray:
        if np.product(v.shape) == 0:
            tname = numpy_type_to_type_name(v.dtype)
            out.write('empty({}{})'.format(''.join(['[{}]'.format(d)
                                                    for d in v.shape]), tname))
        else:
            first = True
            out.write('[')
            for x in v:
                if not first: out.write(', ')
                first = False
                write_value(x, out=out)
            out.write(']')
    else:
        raise Exception("Cannot print value of type {}: {}".format(type(v), v))

type_strs = { np.dtype('int8'): b'  i8',
              np.dtype('int16'): b' i16',
              np.dtype('int32'): b' i32',
              np.dtype('int64'): b' i64',
              np.dtype('uint8'): b'  u8',
              np.dtype('uint16'): b' u16',
              np.dtype('uint32'): b' u32',
              np.dtype('uint64'): b' u64',
              np.dtype('float32'): b' f32',
              np.dtype('float64'): b' f64',
              np.dtype('bool'): b'bool'}

def construct_binary_value(v):
    t = v.dtype
    shape = v.shape

    elems = 1
    for d in shape:
        elems *= d

    num_bytes = 1 + 1 + 1 + 4 + len(shape) * 8 + elems * t.itemsize
    bytes = bytearray(num_bytes)
    bytes[0] = np.int8(ord('b'))
    bytes[1] = 2
    bytes[2] = np.int8(len(shape))
    bytes[3:7] = type_strs[t]

    for i in range(len(shape)):
        bytes[7+i*8:7+(i+1)*8] = np.int64(shape[i]).tostring()

    bytes[7+len(shape)*8:] = np.ascontiguousarray(v).tostring()

    return bytes

def write_value_binary(v, out=sys.stdout):
    if sys.version_info >= (3,0):
        out = out.buffer
    out.write(construct_binary_value(v))

def write_value(v, out=sys.stdout, binary=False):
    if binary:
        return write_value_binary(v, out=out)
    else:
        return write_value_text(v, out=out)

# End of values.py.
# Start of memory.py.

import ctypes as ct

def addressOffset(x, offset, bt):
  return ct.cast(ct.addressof(x.contents)+int(offset), ct.POINTER(bt))

def allocateMem(size):
  return ct.cast((ct.c_byte * max(0,size))(), ct.POINTER(ct.c_byte))

# Copy an array if its is not-None.  This is important for treating
# Numpy arrays as flat memory, but has some overhead.
def normaliseArray(x):
  if (x.base is x) or (x.base is None):
    return x
  else:
    return x.copy()

def unwrapArray(x):
  return normaliseArray(x).ctypes.data_as(ct.POINTER(ct.c_byte))

def createArray(x, shape):
  # HACK: np.ctypeslib.as_array may fail if the shape contains zeroes,
  # for some reason.
  if any(map(lambda x: x == 0, shape)):
      return np.ndarray(shape, dtype=x._type_)
  else:
      return np.ctypeslib.as_array(x, shape=shape)

def indexArray(x, offset, bt, nptype):
  return nptype(addressOffset(x, offset*ct.sizeof(bt), bt)[0])

def writeScalarArray(x, offset, v):
  ct.memmove(ct.addressof(x.contents)+int(offset)*ct.sizeof(v), ct.addressof(v), ct.sizeof(v))

# An opaque Futhark value.
class opaque(object):
  def __init__(self, desc, *payload):
    self.data = payload
    self.desc = desc

  def __repr__(self):
    return "<opaque Futhark value of type {}>".format(self.desc)

# End of memory.py.
# Start of panic.py.

def panic(exitcode, fmt, *args):
    sys.stderr.write('%s: ' % sys.argv[0])
    sys.stderr.write(fmt % args)
    sys.stderr.write('\n')
    sys.exit(exitcode)

# End of panic.py.
# Start of tuning.py

def read_tuning_file(kvs, f):
    for line in f.read().splitlines():
        size, value = line.split('=')
        kvs[size] = int(value)
    return kvs

# End of tuning.py.
# Start of scalar.py.

import numpy as np
import math
import struct

def intlit(t, x):
  if t == np.int8:
    return np.int8(x)
  elif t == np.int16:
    return np.int16(x)
  elif t == np.int32:
    return np.int32(x)
  else:
    return np.int64(x)

def signed(x):
  if type(x) == np.uint8:
    return np.int8(x)
  elif type(x) == np.uint16:
    return np.int16(x)
  elif type(x) == np.uint32:
    return np.int32(x)
  else:
    return np.int64(x)

def unsigned(x):
  if type(x) == np.int8:
    return np.uint8(x)
  elif type(x) == np.int16:
    return np.uint16(x)
  elif type(x) == np.int32:
    return np.uint32(x)
  else:
    return np.uint64(x)

def shlN(x,y):
  return x << y

def ashrN(x,y):
  return x >> y

# Python is so slow that we just make all the unsafe operations safe,
# always.

def sdivN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return x // y

def sdiv_upN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return (x+y-intlit(type(x), 1)) // y

def smodN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return x % y

def udivN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed(unsigned(x) // unsigned(y))

def udiv_upN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed((unsigned(x)+unsigned(y)-unsigned(intlit(type(x),1))) // unsigned(y))

def umodN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed(unsigned(x) % unsigned(y))

def squotN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return np.floor_divide(np.abs(x), np.abs(y)) * np.sign(x) * np.sign(y)

def sremN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return np.remainder(np.abs(x), np.abs(y)) * np.sign(x)

def sminN(x,y):
  return min(x,y)

def smaxN(x,y):
  return max(x,y)

def uminN(x,y):
  return signed(min(unsigned(x),unsigned(y)))

def umaxN(x,y):
  return signed(max(unsigned(x),unsigned(y)))

def fminN(x,y):
  return min(x,y)

def fmaxN(x,y):
  return max(x,y)

def powN(x,y):
  return x ** y

def fpowN(x,y):
  return x ** y

def sleN(x,y):
  return x <= y

def sltN(x,y):
  return x < y

def uleN(x,y):
  return unsigned(x) <= unsigned(y)

def ultN(x,y):
  return unsigned(x) < unsigned(y)

def lshr8(x,y):
  return np.int8(np.uint8(x) >> np.uint8(y))

def lshr16(x,y):
  return np.int16(np.uint16(x) >> np.uint16(y))

def lshr32(x,y):
  return np.int32(np.uint32(x) >> np.uint32(y))

def lshr64(x,y):
  return np.int64(np.uint64(x) >> np.uint64(y))

def sext_T_i8(x):
  return np.int8(x)

def sext_T_i16(x):
  return np.int16(x)

def sext_T_i32(x):
  return np.int32(x)

def sext_T_i64(x):
  return np.int64(x)

def itob_T_bool(x):
  return np.bool(x)

def btoi_bool_i8(x):
  return np.int8(x)

def btoi_bool_i16(x):
  return np.int8(x)

def btoi_bool_i32(x):
  return np.int8(x)

def btoi_bool_i64(x):
  return np.int8(x)

def zext_i8_i8(x):
  return np.int8(np.uint8(x))

def zext_i8_i16(x):
  return np.int16(np.uint8(x))

def zext_i8_i32(x):
  return np.int32(np.uint8(x))

def zext_i8_i64(x):
  return np.int64(np.uint8(x))

def zext_i16_i8(x):
  return np.int8(np.uint16(x))

def zext_i16_i16(x):
  return np.int16(np.uint16(x))

def zext_i16_i32(x):
  return np.int32(np.uint16(x))

def zext_i16_i64(x):
  return np.int64(np.uint16(x))

def zext_i32_i8(x):
  return np.int8(np.uint32(x))

def zext_i32_i16(x):
  return np.int16(np.uint32(x))

def zext_i32_i32(x):
  return np.int32(np.uint32(x))

def zext_i32_i64(x):
  return np.int64(np.uint32(x))

def zext_i64_i8(x):
  return np.int8(np.uint64(x))

def zext_i64_i16(x):
  return np.int16(np.uint64(x))

def zext_i64_i32(x):
  return np.int32(np.uint64(x))

def zext_i64_i64(x):
  return np.int64(np.uint64(x))

sdiv8 = sdiv16 = sdiv32 = sdiv64 = sdivN
sdiv_up8 = sdiv1_up6 = sdiv_up32 = sdiv_up64 = sdiv_upN
sdiv_safe8 = sdiv1_safe6 = sdiv_safe32 = sdiv_safe64 = sdivN
sdiv_up_safe8 = sdiv_up1_safe6 = sdiv_up_safe32 = sdiv_up_safe64 = sdiv_upN
smod8 = smod16 = smod32 = smod64 = smodN
smod_safe8 = smod_safe16 = smod_safe32 = smod_safe64 = smodN
udiv8 = udiv16 = udiv32 = udiv64 = udivN
udiv_up8 = udiv_up16 = udiv_up32 = udiv_up64 = udivN
udiv_safe8 = udiv_safe16 = udiv_safe32 = udiv_safe64 = udiv_upN
udiv_up_safe8 = udiv_up_safe16 = udiv_up_safe32 = udiv_up_safe64 = udiv_upN
umod8 = umod16 = umod32 = umod64 = umodN
umod_safe8 = umod_safe16 = umod_safe32 = umod_safe64 = umodN
squot8 = squot16 = squot32 = squot64 = squotN
squot_safe8 = squot_safe16 = squot_safe32 = squot_safe64 = squotN
srem8 = srem16 = srem32 = srem64 = sremN
srem_safe8 = srem_safe16 = srem_safe32 = srem_safe64 = sremN

shl8 = shl16 = shl32 = shl64 = shlN
ashr8 = ashr16 = ashr32 = ashr64 = ashrN
smax8 = smax16 = smax32 = smax64 = smaxN
smin8 = smin16 = smin32 = smin64 = sminN
umax8 = umax16 = umax32 = umax64 = umaxN
umin8 = umin16 = umin32 = umin64 = uminN
pow8 = pow16 = pow32 = pow64 = powN
fpow32 = fpow64 = fpowN
fmax32 = fmax64 = fmaxN
fmin32 = fmin64 = fminN
sle8 = sle16 = sle32 = sle64 = sleN
slt8 = slt16 = slt32 = slt64 = sltN
ule8 = ule16 = ule32 = ule64 = uleN
ult8 = ult16 = ult32 = ult64 = ultN
sext_i8_i8 = sext_i16_i8 = sext_i32_i8 = sext_i64_i8 = sext_T_i8
sext_i8_i16 = sext_i16_i16 = sext_i32_i16 = sext_i64_i16 = sext_T_i16
sext_i8_i32 = sext_i16_i32 = sext_i32_i32 = sext_i64_i32 = sext_T_i32
sext_i8_i64 = sext_i16_i64 = sext_i32_i64 = sext_i64_i64 = sext_T_i64
itob_i8_bool = itob_i16_bool = itob_i32_bool = itob_i64_bool = itob_T_bool

def clz_T(x):
  n = np.int32(0)
  bits = x.itemsize * 8
  for i in range(bits):
    if x < 0:
      break
    n += 1
    x <<= np.int8(1)
  return n

def ctz_T(x):
  n = np.int32(0)
  bits = x.itemsize * 8
  for i in range(bits):
    if (x & 1) == 1:
      break
    n += 1
    x >>= np.int8(1)
  return n

def popc_T(x):
  c = np.int32(0)
  while x != 0:
    x &= x - np.int8(1)
    c += np.int8(1)
  return c

futhark_popc8 = futhark_popc16 = futhark_popc32 = futhark_popc64 = popc_T
futhark_clzz8 = futhark_clzz16 = futhark_clzz32 = futhark_clzz64 = clz_T
futhark_ctzz8 = futhark_ctzz16 = futhark_ctzz32 = futhark_ctzz64 = ctz_T

def ssignum(x):
  return np.sign(x)

def usignum(x):
  if x < 0:
    return ssignum(-x)
  else:
    return ssignum(x)

def sitofp_T_f32(x):
  return np.float32(x)
sitofp_i8_f32 = sitofp_i16_f32 = sitofp_i32_f32 = sitofp_i64_f32 = sitofp_T_f32

def sitofp_T_f64(x):
  return np.float64(x)
sitofp_i8_f64 = sitofp_i16_f64 = sitofp_i32_f64 = sitofp_i64_f64 = sitofp_T_f64

def uitofp_T_f32(x):
  return np.float32(unsigned(x))
uitofp_i8_f32 = uitofp_i16_f32 = uitofp_i32_f32 = uitofp_i64_f32 = uitofp_T_f32

def uitofp_T_f64(x):
  return np.float64(unsigned(x))
uitofp_i8_f64 = uitofp_i16_f64 = uitofp_i32_f64 = uitofp_i64_f64 = uitofp_T_f64

def fptosi_T_i8(x):
  return np.int8(np.trunc(x))
fptosi_f32_i8 = fptosi_f64_i8 = fptosi_T_i8

def fptosi_T_i16(x):
  return np.int16(np.trunc(x))
fptosi_f32_i16 = fptosi_f64_i16 = fptosi_T_i16

def fptosi_T_i32(x):
  return np.int32(np.trunc(x))
fptosi_f32_i32 = fptosi_f64_i32 = fptosi_T_i32

def fptosi_T_i64(x):
  return np.int64(np.trunc(x))
fptosi_f32_i64 = fptosi_f64_i64 = fptosi_T_i64

def fptoui_T_i8(x):
  return np.uint8(np.trunc(x))
fptoui_f32_i8 = fptoui_f64_i8 = fptoui_T_i8

def fptoui_T_i16(x):
  return np.uint16(np.trunc(x))
fptoui_f32_i16 = fptoui_f64_i16 = fptoui_T_i16

def fptoui_T_i32(x):
  return np.uint32(np.trunc(x))
fptoui_f32_i32 = fptoui_f64_i32 = fptoui_T_i32

def fptoui_T_i64(x):
  return np.uint64(np.trunc(x))
fptoui_f32_i64 = fptoui_f64_i64 = fptoui_T_i64

def fpconv_f32_f64(x):
  return np.float64(x)

def fpconv_f64_f32(x):
  return np.float32(x)

def futhark_mul_hi8(a, b):
  a = np.uint64(np.uint8(a))
  b = np.uint64(np.uint8(b))
  return np.int8((a*b) >> np.uint64(8))

def futhark_mul_hi16(a, b):
  a = np.uint64(np.uint16(a))
  b = np.uint64(np.uint16(b))
  return np.int16((a*b) >> np.uint64(16))

def futhark_mul_hi32(a, b):
  a = np.uint64(np.uint32(a))
  b = np.uint64(np.uint32(b))
  return np.int32((a*b) >> np.uint64(32))

# This one is done with arbitrary-precision integers.
def futhark_mul_hi64(a, b):
  a = int(np.uint64(a))
  b = int(np.uint64(b))
  return np.int64(np.uint64(a*b >> 64))

def futhark_mad_hi8(a, b, c):
  return futhark_mul_hi8(a,b) + c

def futhark_mad_hi16(a, b, c):
  return futhark_mul_hi16(a,b) + c

def futhark_mad_hi32(a, b, c):
  return futhark_mul_hi32(a,b) + c

def futhark_mad_hi64(a, b, c):
  return futhark_mul_hi64(a,b) + c

def futhark_log64(x):
  return np.float64(np.log(x))

def futhark_log2_64(x):
  return np.float64(np.log2(x))

def futhark_log10_64(x):
  return np.float64(np.log10(x))

def futhark_sqrt64(x):
  return np.sqrt(x)

def futhark_exp64(x):
  return np.exp(x)

def futhark_cos64(x):
  return np.cos(x)

def futhark_sin64(x):
  return np.sin(x)

def futhark_tan64(x):
  return np.tan(x)

def futhark_acos64(x):
  return np.arccos(x)

def futhark_asin64(x):
  return np.arcsin(x)

def futhark_atan64(x):
  return np.arctan(x)

def futhark_cosh64(x):
  return np.cosh(x)

def futhark_sinh64(x):
  return np.sinh(x)

def futhark_tanh64(x):
  return np.tanh(x)

def futhark_acosh64(x):
  return np.arccosh(x)

def futhark_asinh64(x):
  return np.arcsinh(x)

def futhark_atanh64(x):
  return np.arctanh(x)

def futhark_atan2_64(x, y):
  return np.arctan2(x, y)

def futhark_gamma64(x):
  return np.float64(math.gamma(x))

def futhark_lgamma64(x):
  return np.float64(math.lgamma(x))

def futhark_round64(x):
  return np.round(x)

def futhark_ceil64(x):
  return np.ceil(x)

def futhark_floor64(x):
  return np.floor(x)

def futhark_isnan64(x):
  return np.isnan(x)

def futhark_isinf64(x):
  return np.isinf(x)

def futhark_to_bits64(x):
  s = struct.pack('>d', x)
  return np.int64(struct.unpack('>q', s)[0])

def futhark_from_bits64(x):
  s = struct.pack('>q', x)
  return np.float64(struct.unpack('>d', s)[0])

def futhark_log32(x):
  return np.float32(np.log(x))

def futhark_log2_32(x):
  return np.float32(np.log2(x))

def futhark_log10_32(x):
  return np.float32(np.log10(x))

def futhark_sqrt32(x):
  return np.float32(np.sqrt(x))

def futhark_exp32(x):
  return np.exp(x)

def futhark_cos32(x):
  return np.cos(x)

def futhark_sin32(x):
  return np.sin(x)

def futhark_tan32(x):
  return np.tan(x)

def futhark_acos32(x):
  return np.arccos(x)

def futhark_asin32(x):
  return np.arcsin(x)

def futhark_atan32(x):
  return np.arctan(x)

def futhark_cosh32(x):
  return np.cosh(x)

def futhark_sinh32(x):
  return np.sinh(x)

def futhark_tanh32(x):
  return np.tanh(x)

def futhark_acosh32(x):
  return np.arccosh(x)

def futhark_asinh32(x):
  return np.arcsinh(x)

def futhark_atanh32(x):
  return np.arctanh(x)

def futhark_atan2_32(x, y):
  return np.arctan2(x, y)

def futhark_gamma32(x):
  return np.float32(math.gamma(x))

def futhark_lgamma32(x):
  return np.float32(math.lgamma(x))

def futhark_round32(x):
  return np.round(x)

def futhark_ceil32(x):
  return np.ceil(x)

def futhark_floor32(x):
  return np.floor(x)

def futhark_isnan32(x):
  return np.isnan(x)

def futhark_isinf32(x):
  return np.isinf(x)

def futhark_to_bits32(x):
  s = struct.pack('>f', x)
  return np.int32(struct.unpack('>l', s)[0])

def futhark_from_bits32(x):
  s = struct.pack('>l', x)
  return np.float32(struct.unpack('>f', s)[0])

def futhark_lerp32(v0, v1, t):
  return v0 + (v1-v0)*t

def futhark_lerp64(v0, v1, t):
  return v0 + (v1-v0)*t

def futhark_mad32(a, b, c):
  return a * b + c

def futhark_mad64(a, b, c):
  return a * b + c

def futhark_fma32(a, b, c):
  return a * b + c

def futhark_fma64(a, b, c):
  return a * b + c

# End of scalar.py.
class bfastfinal:
  entry_points = {"main": (["i32", "i32", "i32", "f32", "f32", "f32", "[]i32",
                            "[][]f32"], ["[]i32", "[]f32", "[]f32"]),
                  "mainDetailed": (["i32", "i32", "i32", "f32", "f32", "f32",
                                    "[]i32", "[][]f32"], ["[]f32", "[]i32",
                                                          "[]i32", "[]f32",
                                                          "[][]f32", "[][]f32",
                                                          "[]f32", "[]i32",
                                                          "[]f32", "[]f32",
                                                          "[][]f32",
                                                          "[][]f32"]),
                  "remove_nans": (["i16", "[][][]i16"], ["[][][]f32"]),
                  "reshapeTransp": (["[][][]f32"], ["[][]f32"])}
  def __init__(self, command_queue=None, interactive=False,
               platform_pref=preferred_platform, device_pref=preferred_device,
               default_group_size=default_group_size,
               default_num_groups=default_num_groups,
               default_tile_size=default_tile_size,
               default_reg_tile_size=default_reg_tile_size,
               default_threshold=default_threshold, sizes=sizes):
    size_heuristics=[("NVIDIA CUDA", cl.device_type.GPU, "lockstep_width",
      lambda device: np.int32(32)), ("AMD Accelerated Parallel Processing",
                                     cl.device_type.GPU, "lockstep_width",
                                     lambda device: np.int32(32)), ("",
                                                                    cl.device_type.GPU,
                                                                    "lockstep_width",
                                                                    lambda device: np.int32(1)),
     ("", cl.device_type.GPU, "num_groups",
      lambda device: (np.int32(4) * device.get_info(getattr(cl.device_info,
                                                            "MAX_COMPUTE_UNITS")))),
     ("", cl.device_type.GPU, "group_size", lambda device: np.int32(256)), ("",
                                                                            cl.device_type.GPU,
                                                                            "tile_size",
                                                                            lambda device: np.int32(32)),
     ("", cl.device_type.GPU, "reg_tile_size", lambda device: np.int32(2)), ("",
                                                                             cl.device_type.GPU,
                                                                             "threshold",
                                                                             lambda device: np.int32(32768)),
     ("", cl.device_type.CPU, "lockstep_width", lambda device: np.int32(1)), ("",
                                                                              cl.device_type.CPU,
                                                                              "num_groups",
                                                                              lambda device: device.get_info(getattr(cl.device_info,
                                                                                                                     "MAX_COMPUTE_UNITS"))),
     ("", cl.device_type.CPU, "group_size", lambda device: np.int32(32)), ("",
                                                                           cl.device_type.CPU,
                                                                           "tile_size",
                                                                           lambda device: np.int32(4)),
     ("", cl.device_type.CPU, "reg_tile_size", lambda device: np.int32(1)), ("",
                                                                             cl.device_type.CPU,
                                                                             "threshold",
                                                                             lambda device: device.get_info(getattr(cl.device_info,
                                                                                                                    "MAX_COMPUTE_UNITS")))]
    self.global_failure_args_max = 2
    self.failure_msgs=["Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:58:16-19\n   #1  helpers.fut:78:15-53\n   #2  bfastfinal.fut:56:35-50\n   #3  bfastfinal.fut:184:5-58\n   #4  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:146:70-84\n   #1  bfastfinal.fut:146:29-149:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:124:50-167:9\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:147:45-59\n   #1  bfastfinal.fut:146:29-149:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:124:50-167:9\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:51-55\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:59-63\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:159:45-49\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:146:70-84\n   #1  bfastfinal.fut:146:29-149:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:124:50-167:9\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:147:45-59\n   #1  bfastfinal.fut:146:29-149:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:124:50-167:9\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:51-55\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:59-63\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:159:45-49\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:146:70-84\n   #1  bfastfinal.fut:146:29-149:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:124:50-167:9\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:147:45-59\n   #1  bfastfinal.fut:146:29-149:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:124:50-167:9\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:51-55\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:59-63\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:159:45-49\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  helpers.fut:58:16-19\n   #1  helpers.fut:78:15-53\n   #2  bfastfinal.fut:56:35-50\n   #3  bfastfinal.fut:177:3-56\n   #4  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:146:70-84\n   #1  bfastfinal.fut:146:29-149:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:124:50-167:9\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:147:45-59\n   #1  bfastfinal.fut:146:29-149:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:124:50-167:9\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:51-55\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:59-63\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:159:45-49\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:146:70-84\n   #1  bfastfinal.fut:146:29-149:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:124:50-167:9\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:147:45-59\n   #1  bfastfinal.fut:146:29-149:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:124:50-167:9\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:51-55\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:59-63\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:159:45-49\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:146:70-84\n   #1  bfastfinal.fut:146:29-149:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:124:50-167:9\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:147:45-59\n   #1  bfastfinal.fut:146:29-149:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:124:50-167:9\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:51-55\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:158:59-63\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:159:45-49\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:146:29-159:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n"]
    program = initialise_opencl_object(self,
                                       program_src=fut_opencl_src,
                                       command_queue=command_queue,
                                       interactive=interactive,
                                       platform_pref=platform_pref,
                                       device_pref=device_pref,
                                       default_group_size=default_group_size,
                                       default_num_groups=default_num_groups,
                                       default_tile_size=default_tile_size,
                                       default_threshold=default_threshold,
                                       size_heuristics=size_heuristics,
                                       required_types=["i16", "i32", "i64", "f32", "bool", "cert"],
                                       user_sizes=sizes,
                                       all_sizes={"builtin#replicate_f32.group_size_45554": {"class": "group_size",
                                                                                   "value": None},
                                        "builtin#replicate_i32.group_size_45563": {"class": "group_size",
                                                                                   "value": None},
                                        "main.Rx_41773": {"class": "reg_tile_size", "value": None},
                                        "main.Rx_42514": {"class": "reg_tile_size", "value": None},
                                        "main.Ry_41774": {"class": "reg_tile_size", "value": None},
                                        "main.Ry_42515": {"class": "reg_tile_size", "value": None},
                                        "main.Tk_41770": {"class": "tile_size", "value": None},
                                        "main.Tk_42511": {"class": "tile_size", "value": None},
                                        "main.Tx_41625": {"class": "tile_size", "value": None},
                                        "main.Tx_41771": {"class": "tile_size", "value": None},
                                        "main.Tx_42512": {"class": "tile_size", "value": None},
                                        "main.Ty_41626": {"class": "tile_size", "value": None},
                                        "main.Ty_41772": {"class": "tile_size", "value": None},
                                        "main.Ty_42513": {"class": "tile_size", "value": None},
                                        "main.group_size_45163": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_36749": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_36927": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37055": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37087": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37134": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37669": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37887": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37941": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38008": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38100": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38305": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38446": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38578": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38859": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38934": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39083": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39185": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39332": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39456": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39529": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40249": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40579": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40829": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40890": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_41016": {"class": "group_size", "value": None},
                                        "main.segmap_num_groups_37089": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_37136": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_38307": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_38448": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_38580": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_41018": {"class": "num_groups", "value": None},
                                        "main.segred_group_size_37194": {"class": "group_size", "value": None},
                                        "main.segred_group_size_38367": {"class": "group_size", "value": None},
                                        "main.segred_group_size_38504": {"class": "group_size", "value": None},
                                        "main.segred_group_size_38634": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39200": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39221": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39288": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39372": {"class": "group_size", "value": None},
                                        "main.segred_group_size_40921": {"class": "group_size", "value": None},
                                        "main.segred_num_groups_37196": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_38369": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_38506": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_38636": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39202": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39223": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39290": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39374": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_40923": {"class": "num_groups", "value": None},
                                        "main.segscan_group_size_38943": {"class": "group_size", "value": None},
                                        "main.segscan_group_size_40629": {"class": "group_size", "value": None},
                                        "main.segscan_group_size_40975": {"class": "group_size", "value": None},
                                        "main.segscan_num_groups_38945": {"class": "num_groups", "value": None},
                                        "main.segscan_num_groups_40631": {"class": "num_groups", "value": None},
                                        "main.segscan_num_groups_40977": {"class": "num_groups", "value": None},
                                        "main.suff_intra_par_10": {"class": "threshold ()", "value": 32},
                                        "main.suff_intra_par_14": {"class": "threshold (!main.suff_intra_par_10)",
                                                                   "value": 32},
                                        "main.suff_intra_par_25": {"class": "threshold ()", "value": 32},
                                        "main.suff_intra_par_30": {"class": "threshold (!main.suff_outer_par_29)",
                                                                   "value": 32},
                                        "main.suff_intra_par_35": {"class": "threshold (!main.suff_outer_par_34)",
                                                                   "value": 32},
                                        "main.suff_intra_par_37": {"class": "threshold (!main.suff_outer_par_34 !main.suff_intra_par_35)",
                                                                   "value": 32},
                                        "main.suff_outer_par_17": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_18": {"class": "threshold (!main.suff_outer_par_17)",
                                                                   "value": None},
                                        "main.suff_outer_par_19": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_20": {"class": "threshold (!main.suff_outer_par_19)",
                                                                   "value": None},
                                        "main.suff_outer_par_21": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_22": {"class": "threshold (!main.suff_outer_par_21)",
                                                                   "value": None},
                                        "main.suff_outer_par_29": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_32": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_34": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_6": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_7": {"class": "threshold (!main.suff_outer_par_6)",
                                                                  "value": None},
                                        "main.suff_outer_par_8": {"class": "threshold (!main.suff_outer_par_7 !main.suff_outer_par_6)",
                                                                  "value": None},
                                        "main.tile_size_42237": {"class": "tile_size", "value": None},
                                        "mainDetailed.Rx_41773": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Rx_42514": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Ry_41774": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Ry_42515": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Tk_41770": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tk_42511": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tx_41625": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tx_41771": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tx_42512": {"class": "tile_size", "value": None},
                                        "mainDetailed.Ty_41626": {"class": "tile_size", "value": None},
                                        "mainDetailed.Ty_41772": {"class": "tile_size", "value": None},
                                        "mainDetailed.Ty_42513": {"class": "tile_size", "value": None},
                                        "mainDetailed.group_size_45185": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31793": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31971": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32099": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32131": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32178": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32713": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32931": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32985": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33052": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33144": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33349": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33490": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33622": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33903": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33978": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_34127": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_34229": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_34376": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_34500": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_34575": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_35341": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_35393": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_35723": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_35973": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_36031": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_36048": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_36169": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_num_groups_32133": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_32180": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_33351": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_33492": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_33624": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_34577": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_36171": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_group_size_32238": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_33411": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_33548": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_33678": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_34244": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_34265": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_34332": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_34416": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_36074": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_num_groups_32240": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_33413": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_33550": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_33680": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_34246": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_34267": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_34334": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_34418": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_36076": {"class": "num_groups", "value": None},
                                        "mainDetailed.segscan_group_size_33987": {"class": "group_size",
                                                                                  "value": None},
                                        "mainDetailed.segscan_group_size_35773": {"class": "group_size",
                                                                                  "value": None},
                                        "mainDetailed.segscan_group_size_36128": {"class": "group_size",
                                                                                  "value": None},
                                        "mainDetailed.segscan_num_groups_33989": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainDetailed.segscan_num_groups_35775": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainDetailed.segscan_num_groups_36130": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainDetailed.suff_intra_par_10": {"class": "threshold ()", "value": 32},
                                        "mainDetailed.suff_intra_par_14": {"class": "threshold (!mainDetailed.suff_intra_par_10)",
                                                                           "value": 32},
                                        "mainDetailed.suff_intra_par_25": {"class": "threshold ()", "value": 32},
                                        "mainDetailed.suff_intra_par_30": {"class": "threshold (!mainDetailed.suff_outer_par_29)",
                                                                           "value": 32},
                                        "mainDetailed.suff_intra_par_35": {"class": "threshold (!mainDetailed.suff_outer_par_34)",
                                                                           "value": 32},
                                        "mainDetailed.suff_intra_par_38": {"class": "threshold (!mainDetailed.suff_outer_par_34 !mainDetailed.suff_intra_par_35)",
                                                                           "value": 32},
                                        "mainDetailed.suff_outer_par_17": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_18": {"class": "threshold (!mainDetailed.suff_outer_par_17)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_19": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_20": {"class": "threshold (!mainDetailed.suff_outer_par_19)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_21": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_22": {"class": "threshold (!mainDetailed.suff_outer_par_21)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_29": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_32": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_34": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_6": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_7": {"class": "threshold (!mainDetailed.suff_outer_par_6)",
                                                                          "value": None},
                                        "mainDetailed.suff_outer_par_8": {"class": "threshold (!mainDetailed.suff_outer_par_7 !mainDetailed.suff_outer_par_6)",
                                                                          "value": None},
                                        "mainDetailed.tile_size_42237": {"class": "tile_size", "value": None},
                                        "remove_nans.segmap_group_size_31635": {"class": "group_size", "value": None}})
    self.builtinzhreplicate_f32zireplicate_45551_var = program.builtinzhreplicate_f32zireplicate_45551
    self.builtinzhreplicate_i32zireplicate_45560_var = program.builtinzhreplicate_i32zireplicate_45560
    self.gpu_map_transpose_f32_var = program.gpu_map_transpose_f32
    self.gpu_map_transpose_f32_low_height_var = program.gpu_map_transpose_f32_low_height
    self.gpu_map_transpose_f32_low_width_var = program.gpu_map_transpose_f32_low_width
    self.gpu_map_transpose_f32_small_var = program.gpu_map_transpose_f32_small
    self.mainzicopy_45160_var = program.mainzicopy_45160
    self.mainziscan_stage1_38949_var = program.mainziscan_stage1_38949
    self.mainziscan_stage1_40635_var = program.mainziscan_stage1_40635
    self.mainziscan_stage1_40981_var = program.mainziscan_stage1_40981
    self.mainziscan_stage2_38949_var = program.mainziscan_stage2_38949
    self.mainziscan_stage2_40635_var = program.mainziscan_stage2_40635
    self.mainziscan_stage2_40981_var = program.mainziscan_stage2_40981
    self.mainziscan_stage3_38949_var = program.mainziscan_stage3_38949
    self.mainziscan_stage3_40635_var = program.mainziscan_stage3_40635
    self.mainziscan_stage3_40981_var = program.mainziscan_stage3_40981
    self.mainzisegmap_36746_var = program.mainzisegmap_36746
    self.mainzisegmap_36924_var = program.mainzisegmap_36924
    self.mainzisegmap_37052_var = program.mainzisegmap_37052
    self.mainzisegmap_37085_var = program.mainzisegmap_37085
    self.mainzisegmap_37131_var = program.mainzisegmap_37131
    self.mainzisegmap_37665_var = program.mainzisegmap_37665
    self.mainzisegmap_37884_var = program.mainzisegmap_37884
    self.mainzisegmap_37938_var = program.mainzisegmap_37938
    self.mainzisegmap_38006_var = program.mainzisegmap_38006
    self.mainzisegmap_38097_var = program.mainzisegmap_38097
    self.mainzisegmap_38303_var = program.mainzisegmap_38303
    self.mainzisegmap_38444_var = program.mainzisegmap_38444
    self.mainzisegmap_38576_var = program.mainzisegmap_38576
    self.mainzisegmap_38856_var = program.mainzisegmap_38856
    self.mainzisegmap_38932_var = program.mainzisegmap_38932
    self.mainzisegmap_39183_var = program.mainzisegmap_39183
    self.mainzisegmap_39454_var = program.mainzisegmap_39454
    self.mainzisegmap_39527_var = program.mainzisegmap_39527
    self.mainzisegmap_40247_var = program.mainzisegmap_40247
    self.mainzisegmap_40576_var = program.mainzisegmap_40576
    self.mainzisegmap_40826_var = program.mainzisegmap_40826
    self.mainzisegmap_40888_var = program.mainzisegmap_40888
    self.mainzisegmap_41014_var = program.mainzisegmap_41014
    self.mainzisegmap_intragroup_37421_var = program.mainzisegmap_intragroup_37421
    self.mainzisegmap_intragroup_37765_var = program.mainzisegmap_intragroup_37765
    self.mainzisegmap_intragroup_38739_var = program.mainzisegmap_intragroup_38739
    self.mainzisegmap_intragroup_39079_var = program.mainzisegmap_intragroup_39079
    self.mainzisegmap_intragroup_39525_var = program.mainzisegmap_intragroup_39525
    self.mainzisegmap_intragroup_40311_var = program.mainzisegmap_intragroup_40311
    self.mainzisegmap_intragroup_41641_var = program.mainzisegmap_intragroup_41641
    self.mainzisegmap_intragroup_41794_var = program.mainzisegmap_intragroup_41794
    self.mainzisegmap_intragroup_42243_var = program.mainzisegmap_intragroup_42243
    self.mainzisegmap_intragroup_42535_var = program.mainzisegmap_intragroup_42535
    self.mainzisegmap_intragroup_42969_var = program.mainzisegmap_intragroup_42969
    self.mainzisegmap_intragroup_43201_var = program.mainzisegmap_intragroup_43201
    self.mainzisegred_large_37200_var = program.mainzisegred_large_37200
    self.mainzisegred_large_38373_var = program.mainzisegred_large_38373
    self.mainzisegred_large_38510_var = program.mainzisegred_large_38510
    self.mainzisegred_large_38640_var = program.mainzisegred_large_38640
    self.mainzisegred_large_39206_var = program.mainzisegred_large_39206
    self.mainzisegred_large_39227_var = program.mainzisegred_large_39227
    self.mainzisegred_large_39378_var = program.mainzisegred_large_39378
    self.mainzisegred_large_40927_var = program.mainzisegred_large_40927
    self.mainzisegred_nonseg_39296_var = program.mainzisegred_nonseg_39296
    self.mainzisegred_small_37200_var = program.mainzisegred_small_37200
    self.mainzisegred_small_38373_var = program.mainzisegred_small_38373
    self.mainzisegred_small_38510_var = program.mainzisegred_small_38510
    self.mainzisegred_small_38640_var = program.mainzisegred_small_38640
    self.mainzisegred_small_39206_var = program.mainzisegred_small_39206
    self.mainzisegred_small_39227_var = program.mainzisegred_small_39227
    self.mainzisegred_small_39378_var = program.mainzisegred_small_39378
    self.mainzisegred_small_40927_var = program.mainzisegred_small_40927
    self.mainDetailedzicopy_45182_var = program.mainDetailedzicopy_45182
    self.mainDetailedziscan_stage1_33993_var = program.mainDetailedziscan_stage1_33993
    self.mainDetailedziscan_stage1_35779_var = program.mainDetailedziscan_stage1_35779
    self.mainDetailedziscan_stage1_36134_var = program.mainDetailedziscan_stage1_36134
    self.mainDetailedziscan_stage2_33993_var = program.mainDetailedziscan_stage2_33993
    self.mainDetailedziscan_stage2_35779_var = program.mainDetailedziscan_stage2_35779
    self.mainDetailedziscan_stage2_36134_var = program.mainDetailedziscan_stage2_36134
    self.mainDetailedziscan_stage3_33993_var = program.mainDetailedziscan_stage3_33993
    self.mainDetailedziscan_stage3_35779_var = program.mainDetailedziscan_stage3_35779
    self.mainDetailedziscan_stage3_36134_var = program.mainDetailedziscan_stage3_36134
    self.mainDetailedzisegmap_31790_var = program.mainDetailedzisegmap_31790
    self.mainDetailedzisegmap_31968_var = program.mainDetailedzisegmap_31968
    self.mainDetailedzisegmap_32096_var = program.mainDetailedzisegmap_32096
    self.mainDetailedzisegmap_32129_var = program.mainDetailedzisegmap_32129
    self.mainDetailedzisegmap_32175_var = program.mainDetailedzisegmap_32175
    self.mainDetailedzisegmap_32709_var = program.mainDetailedzisegmap_32709
    self.mainDetailedzisegmap_32928_var = program.mainDetailedzisegmap_32928
    self.mainDetailedzisegmap_32982_var = program.mainDetailedzisegmap_32982
    self.mainDetailedzisegmap_33050_var = program.mainDetailedzisegmap_33050
    self.mainDetailedzisegmap_33141_var = program.mainDetailedzisegmap_33141
    self.mainDetailedzisegmap_33347_var = program.mainDetailedzisegmap_33347
    self.mainDetailedzisegmap_33488_var = program.mainDetailedzisegmap_33488
    self.mainDetailedzisegmap_33620_var = program.mainDetailedzisegmap_33620
    self.mainDetailedzisegmap_33900_var = program.mainDetailedzisegmap_33900
    self.mainDetailedzisegmap_33976_var = program.mainDetailedzisegmap_33976
    self.mainDetailedzisegmap_34227_var = program.mainDetailedzisegmap_34227
    self.mainDetailedzisegmap_34498_var = program.mainDetailedzisegmap_34498
    self.mainDetailedzisegmap_34573_var = program.mainDetailedzisegmap_34573
    self.mainDetailedzisegmap_35338_var = program.mainDetailedzisegmap_35338
    self.mainDetailedzisegmap_35391_var = program.mainDetailedzisegmap_35391
    self.mainDetailedzisegmap_35720_var = program.mainDetailedzisegmap_35720
    self.mainDetailedzisegmap_35970_var = program.mainDetailedzisegmap_35970
    self.mainDetailedzisegmap_36029_var = program.mainDetailedzisegmap_36029
    self.mainDetailedzisegmap_36046_var = program.mainDetailedzisegmap_36046
    self.mainDetailedzisegmap_36167_var = program.mainDetailedzisegmap_36167
    self.mainDetailedzisegmap_intragroup_32465_var = program.mainDetailedzisegmap_intragroup_32465
    self.mainDetailedzisegmap_intragroup_32809_var = program.mainDetailedzisegmap_intragroup_32809
    self.mainDetailedzisegmap_intragroup_33783_var = program.mainDetailedzisegmap_intragroup_33783
    self.mainDetailedzisegmap_intragroup_34123_var = program.mainDetailedzisegmap_intragroup_34123
    self.mainDetailedzisegmap_intragroup_34571_var = program.mainDetailedzisegmap_intragroup_34571
    self.mainDetailedzisegmap_intragroup_35455_var = program.mainDetailedzisegmap_intragroup_35455
    self.mainDetailedzisegmap_intragroup_41641_var = program.mainDetailedzisegmap_intragroup_41641
    self.mainDetailedzisegmap_intragroup_41794_var = program.mainDetailedzisegmap_intragroup_41794
    self.mainDetailedzisegmap_intragroup_42243_var = program.mainDetailedzisegmap_intragroup_42243
    self.mainDetailedzisegmap_intragroup_42535_var = program.mainDetailedzisegmap_intragroup_42535
    self.mainDetailedzisegmap_intragroup_42969_var = program.mainDetailedzisegmap_intragroup_42969
    self.mainDetailedzisegmap_intragroup_43201_var = program.mainDetailedzisegmap_intragroup_43201
    self.mainDetailedzisegred_large_32244_var = program.mainDetailedzisegred_large_32244
    self.mainDetailedzisegred_large_33417_var = program.mainDetailedzisegred_large_33417
    self.mainDetailedzisegred_large_33554_var = program.mainDetailedzisegred_large_33554
    self.mainDetailedzisegred_large_33684_var = program.mainDetailedzisegred_large_33684
    self.mainDetailedzisegred_large_34250_var = program.mainDetailedzisegred_large_34250
    self.mainDetailedzisegred_large_34271_var = program.mainDetailedzisegred_large_34271
    self.mainDetailedzisegred_large_34422_var = program.mainDetailedzisegred_large_34422
    self.mainDetailedzisegred_large_36080_var = program.mainDetailedzisegred_large_36080
    self.mainDetailedzisegred_nonseg_34340_var = program.mainDetailedzisegred_nonseg_34340
    self.mainDetailedzisegred_small_32244_var = program.mainDetailedzisegred_small_32244
    self.mainDetailedzisegred_small_33417_var = program.mainDetailedzisegred_small_33417
    self.mainDetailedzisegred_small_33554_var = program.mainDetailedzisegred_small_33554
    self.mainDetailedzisegred_small_33684_var = program.mainDetailedzisegred_small_33684
    self.mainDetailedzisegred_small_34250_var = program.mainDetailedzisegred_small_34250
    self.mainDetailedzisegred_small_34271_var = program.mainDetailedzisegred_small_34271
    self.mainDetailedzisegred_small_34422_var = program.mainDetailedzisegred_small_34422
    self.mainDetailedzisegred_small_36080_var = program.mainDetailedzisegred_small_36080
    self.remove_nanszisegmap_31631_var = program.remove_nanszisegmap_31631
    self.constants = {}
    mainzicounter_mem_45094 = np.zeros(10240, dtype=np.int32)
    static_mem_46344 = opencl_alloc(self, 40960, "static_mem_46344")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46344,
                      normaliseArray(mainzicounter_mem_45094),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45094 = static_mem_46344
    mainzicounter_mem_45292 = np.zeros(10240, dtype=np.int32)
    static_mem_46347 = opencl_alloc(self, 40960, "static_mem_46347")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46347,
                      normaliseArray(mainzicounter_mem_45292),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45292 = static_mem_46347
    mainzicounter_mem_45380 = np.zeros(10240, dtype=np.int32)
    static_mem_46348 = opencl_alloc(self, 40960, "static_mem_46348")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46348,
                      normaliseArray(mainzicounter_mem_45380),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45380 = static_mem_46348
    mainzicounter_mem_45512 = np.zeros(10240, dtype=np.int32)
    static_mem_46349 = opencl_alloc(self, 40960, "static_mem_46349")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46349,
                      normaliseArray(mainzicounter_mem_45512),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45512 = static_mem_46349
    mainzicounter_mem_45706 = np.zeros(10240, dtype=np.int32)
    static_mem_46350 = opencl_alloc(self, 40960, "static_mem_46350")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46350,
                      normaliseArray(mainzicounter_mem_45706),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45706 = static_mem_46350
    mainzicounter_mem_45766 = np.zeros(10240, dtype=np.int32)
    static_mem_46351 = opencl_alloc(self, 40960, "static_mem_46351")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46351,
                      normaliseArray(mainzicounter_mem_45766),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45766 = static_mem_46351
    mainzicounter_mem_45806 = np.array([np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0)], dtype=np.int32)
    static_mem_46352 = opencl_alloc(self, 40, "static_mem_46352")
    if (40 != 0):
      cl.enqueue_copy(self.queue, static_mem_46352,
                      normaliseArray(mainzicounter_mem_45806),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45806 = static_mem_46352
    mainzicounter_mem_45875 = np.zeros(10240, dtype=np.int32)
    static_mem_46354 = opencl_alloc(self, 40960, "static_mem_46354")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46354,
                      normaliseArray(mainzicounter_mem_45875),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45875 = static_mem_46354
    mainzicounter_mem_46102 = np.zeros(10240, dtype=np.int32)
    static_mem_46356 = opencl_alloc(self, 40960, "static_mem_46356")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46356,
                      normaliseArray(mainzicounter_mem_46102),
                      is_blocking=synchronous)
    self.mainzicounter_mem_46102 = static_mem_46356
    mainDetailedzicounter_mem_45116 = np.zeros(10240, dtype=np.int32)
    static_mem_46359 = opencl_alloc(self, 40960, "static_mem_46359")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46359,
                      normaliseArray(mainDetailedzicounter_mem_45116),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45116 = static_mem_46359
    mainDetailedzicounter_mem_45314 = np.zeros(10240, dtype=np.int32)
    static_mem_46362 = opencl_alloc(self, 40960, "static_mem_46362")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46362,
                      normaliseArray(mainDetailedzicounter_mem_45314),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45314 = static_mem_46362
    mainDetailedzicounter_mem_45402 = np.zeros(10240, dtype=np.int32)
    static_mem_46363 = opencl_alloc(self, 40960, "static_mem_46363")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46363,
                      normaliseArray(mainDetailedzicounter_mem_45402),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45402 = static_mem_46363
    mainDetailedzicounter_mem_45534 = np.zeros(10240, dtype=np.int32)
    static_mem_46364 = opencl_alloc(self, 40960, "static_mem_46364")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46364,
                      normaliseArray(mainDetailedzicounter_mem_45534),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45534 = static_mem_46364
    mainDetailedzicounter_mem_45728 = np.zeros(10240, dtype=np.int32)
    static_mem_46365 = opencl_alloc(self, 40960, "static_mem_46365")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46365,
                      normaliseArray(mainDetailedzicounter_mem_45728),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45728 = static_mem_46365
    mainDetailedzicounter_mem_45788 = np.zeros(10240, dtype=np.int32)
    static_mem_46366 = opencl_alloc(self, 40960, "static_mem_46366")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46366,
                      normaliseArray(mainDetailedzicounter_mem_45788),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45788 = static_mem_46366
    mainDetailedzicounter_mem_45828 = np.array([np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0)],
                                               dtype=np.int32)
    static_mem_46367 = opencl_alloc(self, 40, "static_mem_46367")
    if (40 != 0):
      cl.enqueue_copy(self.queue, static_mem_46367,
                      normaliseArray(mainDetailedzicounter_mem_45828),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45828 = static_mem_46367
    mainDetailedzicounter_mem_45897 = np.zeros(10240, dtype=np.int32)
    static_mem_46369 = opencl_alloc(self, 40960, "static_mem_46369")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46369,
                      normaliseArray(mainDetailedzicounter_mem_45897),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45897 = static_mem_46369
    mainDetailedzicounter_mem_46134 = np.zeros(10240, dtype=np.int32)
    static_mem_46371 = opencl_alloc(self, 40960, "static_mem_46371")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_46371,
                      normaliseArray(mainDetailedzicounter_mem_46134),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_46134 = static_mem_46371
  def futhark_builtinzhgpu_map_transpose_f32(self, destmem_0, destoffset_1,
                                             srcmem_2, srcoffset_3,
                                             num_arrays_4, x_elems_5,
                                             y_elems_6):
    if ((num_arrays_4 == np.int32(0)) or ((x_elems_5 == np.int32(0)) or (y_elems_6 == np.int32(0)))):
      pass
    else:
      muly_8 = squot32(np.int32(16), x_elems_5)
      mulx_7 = squot32(np.int32(16), y_elems_6)
      if ((num_arrays_4 == np.int32(1)) and ((x_elems_5 == np.int32(1)) or (y_elems_6 == np.int32(1)))):
        if (sext_i32_i64(((x_elems_5 * y_elems_6) * np.int32(4))) != 0):
          cl.enqueue_copy(self.queue, destmem_0, srcmem_2,
                          dest_offset=np.long(sext_i32_i64(destoffset_1)),
                          src_offset=np.long(sext_i32_i64(srcoffset_3)),
                          byte_count=np.long(sext_i32_i64(((x_elems_5 * y_elems_6) * np.int32(4)))))
        if synchronous:
          sync(self)
      else:
        if (sle32(x_elems_5, np.int32(8)) and slt32(np.int32(16), y_elems_6)):
          if ((((1 * (np.long(sdiv_up32(x_elems_5,
                                        np.int32(16))) * np.long(np.int32(16)))) * (np.long(sdiv_up32(sdiv_up32(y_elems_6,
                                                                                                                muly_8),
                                                                                                      np.int32(16))) * np.long(np.int32(16)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
            self.gpu_map_transpose_f32_low_width_var.set_args(cl.LocalMemory(np.long(np.int64(1088))),
                                                              np.int32(destoffset_1),
                                                              np.int32(srcoffset_3),
                                                              np.int32(num_arrays_4),
                                                              np.int32(x_elems_5),
                                                              np.int32(y_elems_6),
                                                              np.int32(mulx_7),
                                                              np.int32(muly_8),
                                                              destmem_0,
                                                              srcmem_2)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.gpu_map_transpose_f32_low_width_var,
                                       ((np.long(sdiv_up32(x_elems_5,
                                                           np.int32(16))) * np.long(np.int32(16))),
                                        (np.long(sdiv_up32(sdiv_up32(y_elems_6,
                                                                     muly_8),
                                                           np.int32(16))) * np.long(np.int32(16))),
                                        (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                       (np.long(np.int32(16)),
                                        np.long(np.int32(16)),
                                        np.long(np.int32(1))))
            if synchronous:
              sync(self)
        else:
          if (sle32(y_elems_6, np.int32(8)) and slt32(np.int32(16), x_elems_5)):
            if ((((1 * (np.long(sdiv_up32(sdiv_up32(x_elems_5, mulx_7),
                                          np.int32(16))) * np.long(np.int32(16)))) * (np.long(sdiv_up32(y_elems_6,
                                                                                                        np.int32(16))) * np.long(np.int32(16)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
              self.gpu_map_transpose_f32_low_height_var.set_args(cl.LocalMemory(np.long(np.int64(1088))),
                                                                 np.int32(destoffset_1),
                                                                 np.int32(srcoffset_3),
                                                                 np.int32(num_arrays_4),
                                                                 np.int32(x_elems_5),
                                                                 np.int32(y_elems_6),
                                                                 np.int32(mulx_7),
                                                                 np.int32(muly_8),
                                                                 destmem_0,
                                                                 srcmem_2)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.gpu_map_transpose_f32_low_height_var,
                                         ((np.long(sdiv_up32(sdiv_up32(x_elems_5,
                                                                       mulx_7),
                                                             np.int32(16))) * np.long(np.int32(16))),
                                          (np.long(sdiv_up32(y_elems_6,
                                                             np.int32(16))) * np.long(np.int32(16))),
                                          (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                         (np.long(np.int32(16)),
                                          np.long(np.int32(16)),
                                          np.long(np.int32(1))))
              if synchronous:
                sync(self)
          else:
            if (sle32(x_elems_5, np.int32(8)) and sle32(y_elems_6,
                                                        np.int32(8))):
              if ((1 * (np.long(sdiv_up32(((num_arrays_4 * x_elems_5) * y_elems_6),
                                          np.int32(256))) * np.long(np.int32(256)))) != 0):
                self.gpu_map_transpose_f32_small_var.set_args(cl.LocalMemory(np.long(np.int64(1))),
                                                              np.int32(destoffset_1),
                                                              np.int32(srcoffset_3),
                                                              np.int32(num_arrays_4),
                                                              np.int32(x_elems_5),
                                                              np.int32(y_elems_6),
                                                              np.int32(mulx_7),
                                                              np.int32(muly_8),
                                                              destmem_0,
                                                              srcmem_2)
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.gpu_map_transpose_f32_small_var,
                                           ((np.long(sdiv_up32(((num_arrays_4 * x_elems_5) * y_elems_6),
                                                               np.int32(256))) * np.long(np.int32(256))),),
                                           (np.long(np.int32(256)),))
                if synchronous:
                  sync(self)
            else:
              if ((((1 * (np.long(sdiv_up32(x_elems_5,
                                            np.int32(32))) * np.long(np.int32(32)))) * (np.long(sdiv_up32(y_elems_6,
                                                                                                          np.int32(32))) * np.long(np.int32(8)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
                self.gpu_map_transpose_f32_var.set_args(cl.LocalMemory(np.long(np.int64(4224))),
                                                        np.int32(destoffset_1),
                                                        np.int32(srcoffset_3),
                                                        np.int32(num_arrays_4),
                                                        np.int32(x_elems_5),
                                                        np.int32(y_elems_6),
                                                        np.int32(mulx_7),
                                                        np.int32(muly_8),
                                                        destmem_0, srcmem_2)
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.gpu_map_transpose_f32_var,
                                           ((np.long(sdiv_up32(x_elems_5,
                                                               np.int32(32))) * np.long(np.int32(32))),
                                            (np.long(sdiv_up32(y_elems_6,
                                                               np.int32(32))) * np.long(np.int32(8))),
                                            (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                           (np.long(np.int32(32)),
                                            np.long(np.int32(8)),
                                            np.long(np.int32(1))))
                if synchronous:
                  sync(self)
    return ()
  def futhark_builtinzhreplicate_f32(self, mem_45547, num_elems_45548,
                                     val_45549):
    group_sizze_45554 = self.sizes["builtin#replicate_f32.group_size_45554"]
    num_groups_45555 = sdiv_up64(num_elems_45548, group_sizze_45554)
    if ((1 * (np.long(num_groups_45555) * np.long(group_sizze_45554))) != 0):
      self.builtinzhreplicate_f32zireplicate_45551_var.set_args(mem_45547,
                                                                np.int32(num_elems_45548),
                                                                np.float32(val_45549))
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.builtinzhreplicate_f32zireplicate_45551_var,
                                 ((np.long(num_groups_45555) * np.long(group_sizze_45554)),),
                                 (np.long(group_sizze_45554),))
      if synchronous:
        sync(self)
    return ()
  def futhark_builtinzhreplicate_i32(self, mem_45556, num_elems_45557,
                                     val_45558):
    group_sizze_45563 = self.sizes["builtin#replicate_i32.group_size_45563"]
    num_groups_45564 = sdiv_up64(num_elems_45557, group_sizze_45563)
    if ((1 * (np.long(num_groups_45564) * np.long(group_sizze_45563))) != 0):
      self.builtinzhreplicate_i32zireplicate_45560_var.set_args(mem_45556,
                                                                np.int32(num_elems_45557),
                                                                np.int32(val_45558))
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.builtinzhreplicate_i32zireplicate_45560_var,
                                 ((np.long(num_groups_45564) * np.long(group_sizze_45563)),),
                                 (np.long(group_sizze_45563),))
      if synchronous:
        sync(self)
    return ()
  def futhark_main(self, mappingindices_mem_43531, images_mem_43532, N_30870,
                   m_30871, N_30872, trend_30873, k_30874, n_30875, freq_30876,
                   hfrac_30877, lam_30878):
    dim_match_30881 = (N_30870 == N_30872)
    empty_or_match_cert_30882 = True
    assert dim_match_30881, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:179:1-185:32\n" % ("function arguments of wrong shape",))
    i32_res_30884 = sext_i32_i64(n_30875)
    x_30885 = (np.int32(2) * k_30874)
    k2p2_30886 = (np.int32(2) + x_30885)
    cond_30887 = slt32(np.int32(0), trend_30873)
    if cond_30887:
      k2p2zq_30888 = k2p2_30886
    else:
      k2p2zq_f_res_30889 = (k2p2_30886 - np.int32(1))
      k2p2zq_30888 = k2p2zq_f_res_30889
    i32_res_30890 = sext_i32_i64(k2p2zq_30888)
    binop_x_43535 = (N_30870 * i32_res_30890)
    bytes_43534 = (np.int64(4) * binop_x_43535)
    if cond_30887:
      bounds_invalid_upwards_30892 = slt64(i32_res_30890, np.int64(0))
      valid_30893 = not(bounds_invalid_upwards_30892)
      range_valid_c_30894 = True
      assert valid_30893, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:37:10-20\n   #3  bfastfinal.fut:34:17-66\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:32\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_30890,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_36819 = self.sizes["main.segmap_group_size_36749"]
      segmap_usable_groups_36820 = sdiv_up64(binop_x_43535,
                                             segmap_group_sizze_36819)
      mem_43536 = opencl_alloc(self, bytes_43534, "mem_43536")
      if ((1 * (np.long(segmap_usable_groups_36820) * np.long(segmap_group_sizze_36819))) != 0):
        self.mainzisegmap_36746_var.set_args(self.global_failure,
                                             np.int64(N_30870),
                                             np.float32(freq_30876),
                                             np.int64(i32_res_30890),
                                             mappingindices_mem_43531,
                                             mem_43536)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_36746_var,
                                   ((np.long(segmap_usable_groups_36820) * np.long(segmap_group_sizze_36819)),),
                                   (np.long(segmap_group_sizze_36819),))
        if synchronous:
          sync(self)
      binop_p_mem_43541 = mem_43536
    else:
      bounds_invalid_upwards_30918 = slt64(i32_res_30890, np.int64(0))
      valid_30919 = not(bounds_invalid_upwards_30918)
      range_valid_c_30920 = True
      assert valid_30919, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:49:10-22\n   #3  bfastfinal.fut:35:17-64\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:32\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_30890,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_36993 = self.sizes["main.segmap_group_size_36927"]
      segmap_usable_groups_36994 = sdiv_up64(binop_x_43535,
                                             segmap_group_sizze_36993)
      mem_43540 = opencl_alloc(self, bytes_43534, "mem_43540")
      if ((1 * (np.long(segmap_usable_groups_36994) * np.long(segmap_group_sizze_36993))) != 0):
        self.mainzisegmap_36924_var.set_args(self.global_failure,
                                             np.int64(N_30870),
                                             np.float32(freq_30876),
                                             np.int64(i32_res_30890),
                                             mappingindices_mem_43531,
                                             mem_43540)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_36924_var,
                                   ((np.long(segmap_usable_groups_36994) * np.long(segmap_group_sizze_36993)),),
                                   (np.long(segmap_group_sizze_36993),))
        if synchronous:
          sync(self)
      binop_p_mem_43541 = mem_43540
    x_30943 = (N_30870 * N_30870)
    y_30944 = (np.int64(2) * N_30870)
    x_30945 = (x_30943 + y_30944)
    x_30946 = (np.int64(1) + x_30945)
    y_30947 = (np.int64(1) + N_30870)
    zzero_30948 = (y_30947 == np.int64(0))
    nonzzero_30949 = not(zzero_30948)
    nonzzero_cert_30950 = True
    assert nonzzero_30949, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:41:32-60\n   #1  bfastfinal.fut:184:5-58\n   #2  bfastfinal.fut:179:1-185:32\n" % ("division by zero",))
    x_30951 = sdiv64(x_30946, y_30947)
    x_30952 = (x_30951 - N_30870)
    binop_p_30953 = (x_30952 - np.int64(1))
    defunc_0_f_res_30954 = sext_i64_i32(binop_p_30953)
    i32_res_30955 = sitofp_i32_f32(defunc_0_f_res_30954)
    segmap_group_sizze_37076 = self.sizes["main.segmap_group_size_37055"]
    segmap_usable_groups_37077 = sdiv_up64(binop_x_43535,
                                           segmap_group_sizze_37076)
    mem_43544 = opencl_alloc(self, bytes_43534, "mem_43544")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_43544, np.int64(0),
                                                binop_p_mem_43541, np.int64(0),
                                                np.int64(1), N_30870,
                                                i32_res_30890)
    mem_43548 = opencl_alloc(self, bytes_43534, "mem_43548")
    if ((1 * (np.long(segmap_usable_groups_37077) * np.long(segmap_group_sizze_37076))) != 0):
      self.mainzisegmap_37052_var.set_args(self.global_failure,
                                           np.int64(N_30870),
                                           np.int64(i32_res_30890),
                                           np.float32(i32_res_30955), mem_43544,
                                           mem_43548)
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37052_var,
                                 ((np.long(segmap_usable_groups_37077) * np.long(segmap_group_sizze_37076)),),
                                 (np.long(segmap_group_sizze_37076),))
      if synchronous:
        sync(self)
    eq_x_y_30963 = (np.int64(0) == i32_res_30890)
    p_and_eq_x_y_30964 = (cond_30887 and eq_x_y_30963)
    not_p_30965 = not(cond_30887)
    p_and_eq_x_y_30966 = (eq_x_y_30963 and not_p_30965)
    empty_slice_30967 = (p_and_eq_x_y_30964 or p_and_eq_x_y_30966)
    m_30968 = (i32_res_30890 - np.int64(1))
    zzero_leq_i_p_m_t_s_30969 = sle64(np.int64(0), m_30968)
    i_p_m_t_s_leq_w_30970 = slt64(m_30968, i32_res_30890)
    i_lte_j_30971 = sle64(np.int64(0), i32_res_30890)
    y_30972 = (zzero_leq_i_p_m_t_s_30969 and i_p_m_t_s_leq_w_30970)
    y_30973 = (i_lte_j_30971 and y_30972)
    ok_or_empty_30974 = (empty_slice_30967 or y_30973)
    empty_slice_30975 = (i32_res_30884 == np.int64(0))
    m_30976 = (i32_res_30884 - np.int64(1))
    zzero_leq_i_p_m_t_s_30977 = sle64(np.int64(0), m_30976)
    i_p_m_t_s_leq_w_30978 = slt64(m_30976, N_30870)
    i_lte_j_30979 = sle64(np.int64(0), i32_res_30884)
    y_30980 = (zzero_leq_i_p_m_t_s_30977 and i_p_m_t_s_leq_w_30978)
    y_30981 = (i_lte_j_30979 and y_30980)
    ok_or_empty_30982 = (empty_slice_30975 or y_30981)
    index_ok_30983 = (ok_or_empty_30974 and ok_or_empty_30982)
    index_certs_30984 = True
    assert index_ok_30983, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:44:15-23\n   #1  bfastfinal.fut:184:5-58\n   #2  bfastfinal.fut:179:1-185:32\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_30884,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               i32_res_30890,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_30870,
                                                                                                                                                                               "]."))
    empty_slice_30986 = (i32_res_30890 == np.int64(0))
    ok_or_empty_30987 = (y_30973 or empty_slice_30986)
    index_ok_30988 = (ok_or_empty_30982 and ok_or_empty_30987)
    index_certs_30989 = True
    assert index_ok_30988, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:45:15-24\n   #1  bfastfinal.fut:184:5-58\n   #2  bfastfinal.fut:179:1-185:32\n" % ("Index [:",
                                                                                                                                                                               i32_res_30884,
                                                                                                                                                                               ", ",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":] out of bounds for array of shape [",
                                                                                                                                                                               N_30870,
                                                                                                                                                                               "][",
                                                                                                                                                                               i32_res_30890,
                                                                                                                                                                               "]."))
    empty_slice_30991 = (m_30871 == np.int64(0))
    m_30992 = (m_30871 - np.int64(1))
    zzero_leq_i_p_m_t_s_30993 = sle64(np.int64(0), m_30992)
    i_p_m_t_s_leq_w_30994 = slt64(m_30992, m_30871)
    i_lte_j_30995 = sle64(np.int64(0), m_30871)
    y_30996 = (zzero_leq_i_p_m_t_s_30993 and i_p_m_t_s_leq_w_30994)
    y_30997 = (i_lte_j_30995 and y_30996)
    ok_or_empty_30998 = (empty_slice_30991 or y_30997)
    index_ok_30999 = (ok_or_empty_30982 and ok_or_empty_30998)
    index_certs_31000 = True
    assert index_ok_30999, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:46:15-28\n   #1  bfastfinal.fut:184:5-58\n   #2  bfastfinal.fut:179:1-185:32\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_30884,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               m_30871,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_30870,
                                                                                                                                                                               "]."))
    suff_outer_par_37083 = (self.sizes["main.suff_outer_par_6"] <= m_30871)
    segmap_group_sizze_37109 = self.sizes["main.segmap_group_size_37087"]
    max_num_groups_45004 = self.sizes["main.segmap_num_groups_37089"]
    num_groups_37110 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_30871,
                                                            segmap_group_sizze_37109),
                                                  sext_i32_i64(max_num_groups_45004))))
    nest_sizze_37285 = (m_30871 * i32_res_30890)
    segmap_group_sizze_37286 = self.sizes["main.segmap_group_size_37134"]
    max_num_groups_45005 = self.sizes["main.segmap_num_groups_37136"]
    num_groups_37287 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_37285,
                                                            segmap_group_sizze_37286),
                                                  sext_i32_i64(max_num_groups_45005))))
    suff_outer_par_37291 = (self.sizes["main.suff_outer_par_7"] <= nest_sizze_37285)
    y_37315 = (i32_res_30890 * i32_res_30890)
    comparatee_37316 = (m_30871 * y_37315)
    suff_outer_par_37317 = (self.sizes["main.suff_outer_par_8"] <= comparatee_37316)
    nest_sizze_37337 = (i32_res_30884 * comparatee_37316)
    segred_group_sizze_37338 = self.sizes["main.segred_group_size_37194"]
    max_num_groups_45006 = self.sizes["main.segred_num_groups_37196"]
    num_groups_37339 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_37337,
                                                            segred_group_sizze_37338),
                                                  sext_i32_i64(max_num_groups_45006))))
    Tx_41627 = self.sizes["main.Tx_41625"]
    Ty_41628 = self.sizes["main.Ty_41626"]
    Ty_41629 = smin64(i32_res_30890, Ty_41628)
    Tx_41630 = smin64(i32_res_30890, Tx_41627)
    gridDim_zz_41633 = sdiv_up64(m_30871, np.int64(30))
    group_sizze_41636 = (Ty_41629 * Tx_41630)
    binop_x_43550 = (m_30871 * N_30872)
    bytes_43549 = (np.int64(4) * binop_x_43550)
    bytes_43594 = (np.int64(4) * comparatee_37316)
    bytes_43553 = (np.int64(4) * y_37315)
    binop_x_43697 = (i32_res_30890 * nest_sizze_37285)
    bytes_43695 = (np.int64(4) * binop_x_43697)
    bytes_43599 = (np.int64(4) * i32_res_30890)
    binop_x_43628 = (np.int64(30) * group_sizze_41636)
    bytes_43626 = (np.int64(4) * binop_x_43628)
    binop_x_44758 = (np.int64(4) * Ty_41629)
    binop_x_44759 = (Tx_41630 * binop_x_44758)
    sizze_44760 = (np.int64(30) * binop_x_44759)
    num_threads_44926 = (segmap_group_sizze_37109 * num_groups_37110)
    total_sizze_44927 = (bytes_43553 * num_threads_44926)
    num_threads_44928 = (segmap_group_sizze_37286 * num_groups_37287)
    total_sizze_44929 = (bytes_43599 * num_threads_44928)
    local_memory_capacity_45128 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_45128)) and suff_outer_par_37083):
      mem_43551 = opencl_alloc(self, bytes_43549, "mem_43551")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43551, np.int64(0),
                                                  images_mem_43532, np.int64(0),
                                                  np.int64(1), N_30872, m_30871)
      mem_43597 = opencl_alloc(self, bytes_43594, "mem_43597")
      mem_43555 = opencl_alloc(self, total_sizze_44927, "mem_43555")
      if ((1 * (np.long(num_groups_37110) * np.long(segmap_group_sizze_37109))) != 0):
        self.mainzisegmap_37085_var.set_args(self.global_failure,
                                             np.int64(N_30870),
                                             np.int64(m_30871),
                                             np.int32(n_30875),
                                             np.int32(k2p2zq_30888),
                                             np.int64(i32_res_30890),
                                             np.int64(num_groups_37110),
                                             binop_p_mem_43541, mem_43548,
                                             mem_43551, mem_43555, mem_43597)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37085_var,
                                   ((np.long(num_groups_37110) * np.long(segmap_group_sizze_37109)),),
                                   (np.long(segmap_group_sizze_37109),))
        if synchronous:
          sync(self)
      mem_43551 = None
      mem_43555 = None
      mem_43698 = opencl_alloc(self, bytes_43695, "mem_43698")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43698, np.int64(0),
                                                  mem_43597, np.int64(0),
                                                  np.int64(1), m_30871,
                                                  (i32_res_30890 * i32_res_30890))
      mem_43597 = None
      defunc_3_map_res_mem_43700 = mem_43698
    else:
      local_memory_capacity_45127 = self.max_local_memory
      if (sle64(np.int64(0),
                sext_i32_i64(local_memory_capacity_45127)) and suff_outer_par_37291):
        mem_43616 = opencl_alloc(self, bytes_43695, "mem_43616")
        mem_43600 = opencl_alloc(self, total_sizze_44929, "mem_43600")
        if ((1 * (np.long(num_groups_37287) * np.long(segmap_group_sizze_37286))) != 0):
          self.mainzisegmap_37131_var.set_args(self.global_failure,
                                               np.int64(m_30871),
                                               np.int64(N_30872),
                                               np.int32(n_30875),
                                               np.int32(k2p2zq_30888),
                                               np.int64(i32_res_30890),
                                               np.int64(num_groups_37287),
                                               images_mem_43532, mem_43544,
                                               mem_43548, mem_43600, mem_43616)
          cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37131_var,
                                     ((np.long(num_groups_37287) * np.long(segmap_group_sizze_37286)),),
                                     (np.long(segmap_group_sizze_37286),))
          if synchronous:
            sync(self)
        mem_43600 = None
        mem_43692 = opencl_alloc(self, bytes_43695, "mem_43692")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43692, np.int64(0),
                                                    mem_43616, np.int64(0),
                                                    np.int64(1),
                                                    (m_30871 * i32_res_30890),
                                                    i32_res_30890)
        mem_43616 = None
        defunc_3_map_res_mem_43694 = mem_43692
      else:
        local_memory_capacity_45126 = self.max_local_memory
        if (sle64(np.int64(120),
                  sext_i32_i64(local_memory_capacity_45126)) and suff_outer_par_37317):
          mem_43619 = opencl_alloc(self, bytes_43549, "mem_43619")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_43619, np.int64(0),
                                                      images_mem_43532,
                                                      np.int64(0), np.int64(1),
                                                      N_30872, m_30871)
          gridDim_x_41631 = sdiv_up64(i32_res_30890, Tx_41630)
          gridDim_y_41632 = sdiv_up64(i32_res_30890, Ty_41629)
          binop_x_41634 = (gridDim_y_41632 * gridDim_zz_41633)
          grid_sizze_41635 = (gridDim_x_41631 * binop_x_41634)
          count_shmem_41637 = sdiv_up64(np.int64(30), group_sizze_41636)
          mem_43679 = opencl_alloc(self, bytes_43695, "mem_43679")
          if ((1 * (np.long(grid_sizze_41635) * np.long(group_sizze_41636))) != 0):
            self.mainzisegmap_intragroup_41641_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(np.int64(120))),
                                                            np.int64(m_30871),
                                                            np.int32(n_30875),
                                                            np.int64(i32_res_30890),
                                                            np.int64(Ty_41629),
                                                            np.int64(Tx_41630),
                                                            np.int64(gridDim_x_41631),
                                                            np.int64(gridDim_y_41632),
                                                            np.int64(group_sizze_41636),
                                                            np.int64(count_shmem_41637),
                                                            mem_43544,
                                                            mem_43548,
                                                            mem_43619,
                                                            mem_43679)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegmap_intragroup_41641_var,
                                       ((np.long(grid_sizze_41635) * np.long(group_sizze_41636)),),
                                       (np.long(group_sizze_41636),))
            if synchronous:
              sync(self)
          mem_43619 = None
          defunc_3_map_res_mem_43688 = mem_43679
        else:
          mem_43682 = opencl_alloc(self, bytes_43534, "mem_43682")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_43682, np.int64(0),
                                                      mem_43548, np.int64(0),
                                                      np.int64(1),
                                                      i32_res_30890, N_30870)
          mem_43687 = opencl_alloc(self, bytes_43695, "mem_43687")
          if slt64((i32_res_30884 * np.int64(2)), segred_group_sizze_37338):
            segment_sizze_nonzzero_45066 = smax64(np.int64(1), i32_res_30884)
            num_threads_45067 = (num_groups_37339 * segred_group_sizze_37338)
            if ((1 * (np.long(num_groups_37339) * np.long(segred_group_sizze_37338))) != 0):
              self.mainzisegred_small_37200_var.set_args(self.global_failure,
                                                         cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37338))),
                                                         np.int64(N_30870),
                                                         np.int64(m_30871),
                                                         np.int64(N_30872),
                                                         np.int64(i32_res_30884),
                                                         np.int64(i32_res_30890),
                                                         np.int64(num_groups_37339),
                                                         images_mem_43532,
                                                         binop_p_mem_43541,
                                                         mem_43682, mem_43687,
                                                         np.int64(segment_sizze_nonzzero_45066))
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainzisegred_small_37200_var,
                                         ((np.long(num_groups_37339) * np.long(segred_group_sizze_37338)),),
                                         (np.long(segred_group_sizze_37338),))
              if synchronous:
                sync(self)
          else:
            groups_per_segment_45087 = sdiv_up64(num_groups_37339,
                                                 smax64(np.int64(1),
                                                        ((m_30871 * i32_res_30890) * i32_res_30890)))
            elements_per_thread_45088 = sdiv_up64(i32_res_30884,
                                                  (segred_group_sizze_37338 * groups_per_segment_45087))
            virt_num_groups_45089 = (groups_per_segment_45087 * ((m_30871 * i32_res_30890) * i32_res_30890))
            num_threads_45090 = (num_groups_37339 * segred_group_sizze_37338)
            threads_per_segment_45091 = (groups_per_segment_45087 * segred_group_sizze_37338)
            group_res_arr_mem_45092 = opencl_alloc(self,
                                                   (np.int32(4) * (segred_group_sizze_37338 * virt_num_groups_45089)),
                                                   "group_res_arr_mem_45092")
            mainzicounter_mem_45094 = self.mainzicounter_mem_45094
            if ((1 * (np.long(num_groups_37339) * np.long(segred_group_sizze_37338))) != 0):
              self.mainzisegred_large_37200_var.set_args(self.global_failure,
                                                         cl.LocalMemory(np.long(np.int32(1))),
                                                         cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37338))),
                                                         np.int64(N_30870),
                                                         np.int64(N_30872),
                                                         np.int64(i32_res_30884),
                                                         np.int64(i32_res_30890),
                                                         np.int64(num_groups_37339),
                                                         images_mem_43532,
                                                         binop_p_mem_43541,
                                                         mem_43682, mem_43687,
                                                         np.int64(groups_per_segment_45087),
                                                         np.int64(elements_per_thread_45088),
                                                         np.int64(virt_num_groups_45089),
                                                         np.int64(threads_per_segment_45091),
                                                         group_res_arr_mem_45092,
                                                         mainzicounter_mem_45094)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainzisegred_large_37200_var,
                                         ((np.long(num_groups_37339) * np.long(segred_group_sizze_37338)),),
                                         (np.long(segred_group_sizze_37338),))
              if synchronous:
                sync(self)
          mem_43682 = None
          defunc_3_map_res_mem_43688 = mem_43687
        defunc_3_map_res_mem_43694 = defunc_3_map_res_mem_43688
      defunc_3_map_res_mem_43700 = defunc_3_map_res_mem_43694
    m_31021 = (np.int64(2) * i32_res_30890)
    nm_31022 = (i32_res_30890 * m_31021)
    bounds_invalid_upwards_31023 = slt64(nm_31022, np.int64(0))
    valid_31024 = not(bounds_invalid_upwards_31023)
    range_valid_c_31025 = True
    assert valid_31024, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:77:21-27\n   #2  bfastfinal.fut:56:35-50\n   #3  bfastfinal.fut:184:5-58\n   #4  bfastfinal.fut:179:1-185:32\n" % ("Range ",
                                                                                                                                                                                                                                        np.int64(0),
                                                                                                                                                                                                                                        "..",
                                                                                                                                                                                                                                        np.int64(1),
                                                                                                                                                                                                                                        "..<",
                                                                                                                                                                                                                                        nm_31022,
                                                                                                                                                                                                                                        " is invalid."))
    zzero_31027 = (m_31021 == np.int64(0))
    nonzzero_31028 = not(zzero_31027)
    nonzzero_cert_31029 = True
    assert nonzzero_31028, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:72:41-47\n   #1  helpers.fut:72:14-77:28\n   #2  bfastfinal.fut:56:35-50\n   #3  bfastfinal.fut:184:5-58\n   #4  bfastfinal.fut:179:1-185:32\n" % ("division by zero",))
    i64_res_31030 = sext_i64_i32(m_31021)
    loop_nonempty_31031 = slt32(np.int32(0), k2p2zq_30888)
    zzero_31032 = (i64_res_31030 == np.int32(0))
    nonzzero_31033 = not(zzero_31032)
    loop_not_taken_31034 = not(loop_nonempty_31031)
    protect_assert_disj_31035 = (nonzzero_31033 or loop_not_taken_31034)
    nonzzero_cert_31036 = True
    assert protect_assert_disj_31035, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:59:43-49\n   #1  helpers.fut:59:16-65:32\n   #2  helpers.fut:78:15-53\n   #3  bfastfinal.fut:56:35-50\n   #4  bfastfinal.fut:184:5-58\n   #5  bfastfinal.fut:179:1-185:32\n" % ("division by zero",))
    y_37418 = smin64(i32_res_30890, nm_31022)
    intra_avail_par_37419 = smin64(y_37315, y_37418)
    y_37420 = smax64(i32_res_30890, nm_31022)
    computed_group_sizze_37362 = smax64(y_37315, y_37420)
    max_group_sizze_37553 = self.max_group_size
    fits_37554 = sle64(computed_group_sizze_37362, max_group_sizze_37553)
    suff_intra_par_37552 = (self.sizes["main.suff_intra_par_10"] <= intra_avail_par_37419)
    intra_suff_and_fits_37555 = (suff_intra_par_37552 and fits_37554)
    nest_sizze_38136 = (m_30871 * nm_31022)
    segmap_group_sizze_38137 = self.sizes["main.segmap_group_size_38100"]
    fits_38164 = sle64(nm_31022, max_group_sizze_37553)
    suff_intra_par_38166 = (self.sizes["main.suff_intra_par_14"] <= nm_31022)
    intra_suff_and_fits_38167 = (fits_38164 and suff_intra_par_38166)
    segmap_group_sizze_38203 = self.sizes["main.segmap_group_size_38008"]
    segmap_group_sizze_38219 = self.sizes["main.segmap_group_size_37941"]
    segmap_group_sizze_38253 = self.sizes["main.segmap_group_size_37887"]
    segmap_group_sizze_38288 = self.sizes["main.segmap_group_size_37669"]
    segmap_usable_groups_38204 = sdiv_up_safe64(m_30871,
                                                segmap_group_sizze_38203)
    segmap_usable_groups_38220 = sdiv_up_safe64(nest_sizze_38136,
                                                segmap_group_sizze_38219)
    segmap_usable_groups_38254 = sdiv_up_safe64(nest_sizze_38136,
                                                segmap_group_sizze_38253)
    bytes_43703 = (np.int64(4) * nm_31022)
    bytes_43730 = (np.int64(4) * nest_sizze_38136)
    local_memory_capacity_45193 = self.max_local_memory
    if (sle64(((bytes_43703 + bytes_43703) + bytes_43553),
              sext_i32_i64(local_memory_capacity_45193)) and intra_suff_and_fits_37555):
      mem_43728 = opencl_alloc(self, bytes_43695, "mem_43728")
      if ((1 * (np.long(m_30871) * np.long(computed_group_sizze_37362))) != 0):
        self.mainzisegmap_intragroup_37421_var.set_args(self.global_failure,
                                                        self.failure_is_an_option,
                                                        self.global_failure_args,
                                                        cl.LocalMemory(np.long(bytes_43553)),
                                                        cl.LocalMemory(np.long(bytes_43703)),
                                                        cl.LocalMemory(np.long(bytes_43703)),
                                                        np.int32(k2p2zq_30888),
                                                        np.int64(i32_res_30890),
                                                        np.int64(m_31021),
                                                        np.int64(nm_31022),
                                                        np.int32(i64_res_31030),
                                                        np.int64(computed_group_sizze_37362),
                                                        defunc_3_map_res_mem_43700,
                                                        mem_43728)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_37421_var,
                                   ((np.long(m_30871) * np.long(computed_group_sizze_37362)),),
                                   (np.long(computed_group_sizze_37362),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      defunc_3_map_res_mem_43783 = mem_43728
    else:
      segmap_usable_groups_38138 = sdiv_up64(nest_sizze_38136,
                                             segmap_group_sizze_38137)
      mem_43732 = opencl_alloc(self, bytes_43730, "mem_43732")
      if ((1 * (np.long(segmap_usable_groups_38138) * np.long(segmap_group_sizze_38137))) != 0):
        self.mainzisegmap_38097_var.set_args(self.global_failure,
                                             np.int64(m_30871),
                                             np.int64(i32_res_30890),
                                             np.int64(m_31021),
                                             np.int64(nm_31022),
                                             defunc_3_map_res_mem_43700,
                                             mem_43732)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38097_var,
                                   ((np.long(segmap_usable_groups_38138) * np.long(segmap_group_sizze_38137)),),
                                   (np.long(segmap_group_sizze_38137),))
        if synchronous:
          sync(self)
      ctx_param_ext_43733 = m_30871
      ctx_param_ext_43734 = nm_31022
      ctx_param_ext_43735 = np.int64(0)
      ctx_param_ext_43736 = nm_31022
      ctx_param_ext_43737 = m_30871
      ctx_param_ext_43738 = np.int64(1)
      ctx_param_ext_43739 = nm_31022
      mem_param_43740 = mem_43732
      i_38152 = np.int32(0)
      one_46346 = np.int32(1)
      for counter_46345 in range(k2p2zq_30888):
        i_38154 = sext_i32_i64(i_38152)
        x_38155 = sle64(np.int64(0), i_38154)
        y_38156 = slt64(i_38154, nm_31022)
        bounds_check_38157 = (x_38155 and y_38156)
        index_certs_38158 = True
        assert bounds_check_38157, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:58:16-19\n   #1  helpers.fut:78:15-53\n   #2  bfastfinal.fut:56:35-50\n   #3  bfastfinal.fut:184:5-58\n   #4  bfastfinal.fut:179:1-185:32\n" % ("Index [",
                                                                                                                                                                                                                                         i_38154,
                                                                                                                                                                                                                                         "] out of bounds for array of shape [",
                                                                                                                                                                                                                                         nm_31022,
                                                                                                                                                                                                                                         "]."))
        local_memory_capacity_45153 = self.max_local_memory
        if intra_suff_and_fits_38167:
          gauss_jordan_res_ixfn_43762 = m_30871
        else:
          gauss_jordan_res_ixfn_43762 = ctx_param_ext_43737
        local_memory_capacity_45154 = self.max_local_memory
        if intra_suff_and_fits_38167:
          gauss_jordan_res_ixfn_43763 = nm_31022
        else:
          gauss_jordan_res_ixfn_43763 = ctx_param_ext_43739
        local_memory_capacity_45155 = self.max_local_memory
        if intra_suff_and_fits_38167:
          gauss_jordan_res_ixfn_43764 = m_30871
        else:
          gauss_jordan_res_ixfn_43764 = ctx_param_ext_43733
        local_memory_capacity_45156 = self.max_local_memory
        if intra_suff_and_fits_38167:
          gauss_jordan_res_ixfn_43765 = nm_31022
        else:
          gauss_jordan_res_ixfn_43765 = ctx_param_ext_43734
        local_memory_capacity_45157 = self.max_local_memory
        if intra_suff_and_fits_38167:
          gauss_jordan_res_ixfn_43766 = nm_31022
        else:
          gauss_jordan_res_ixfn_43766 = ctx_param_ext_43736
        local_memory_capacity_45158 = self.max_local_memory
        if intra_suff_and_fits_38167:
          gauss_jordan_res_ixfn_43767 = np.int64(1)
        else:
          gauss_jordan_res_ixfn_43767 = ctx_param_ext_43738
        local_memory_capacity_45159 = self.max_local_memory
        if intra_suff_and_fits_38167:
          gauss_jordan_res_ixfn_43768 = np.int64(0)
        else:
          gauss_jordan_res_ixfn_43768 = ctx_param_ext_43735
        local_memory_capacity_45187 = self.max_local_memory
        if ((sle64(np.int64(0),
                   sext_i32_i64(local_memory_capacity_45187)) and sle64(bytes_43703,
                                                                        sext_i32_i64(local_memory_capacity_45187))) and intra_suff_and_fits_38167):
          mem_43745 = opencl_alloc(self, bytes_43730, "mem_43745")
          group_sizze_45163 = self.sizes["main.group_size_45163"]
          num_groups_45164 = sdiv_up64((m_30871 * nm_31022), group_sizze_45163)
          if ((1 * (np.long(num_groups_45164) * np.long(group_sizze_45163))) != 0):
            self.mainzicopy_45160_var.set_args(np.int64(m_30871),
                                               np.int64(nm_31022),
                                               np.int64(ctx_param_ext_43735),
                                               np.int64(ctx_param_ext_43736),
                                               np.int64(ctx_param_ext_43738),
                                               mem_param_43740, mem_43745)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzicopy_45160_var,
                                       ((np.long(num_groups_45164) * np.long(group_sizze_45163)),),
                                       (np.long(group_sizze_45163),))
            if synchronous:
              sync(self)
          mem_43753 = opencl_alloc(self, bytes_43730, "mem_43753")
          if ((1 * (np.long(m_30871) * np.long(nm_31022))) != 0):
            self.mainzisegmap_intragroup_37765_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(bytes_43703)),
                                                            np.int64(m_30871),
                                                            np.int32(k2p2zq_30888),
                                                            np.int64(nm_31022),
                                                            np.int32(i64_res_31030),
                                                            np.int32(i_38152),
                                                            np.int64(i_38154),
                                                            np.int64(ctx_param_ext_43735),
                                                            np.int64(ctx_param_ext_43736),
                                                            np.int64(ctx_param_ext_43738),
                                                            mem_param_43740,
                                                            mem_43745,
                                                            mem_43753)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegmap_intragroup_37765_var,
                                       ((np.long(m_30871) * np.long(nm_31022)),),
                                       (np.long(nm_31022),))
            if synchronous:
              sync(self)
          mem_43745 = None
          gauss_jordan_res_mem_43769 = mem_43753
        else:
          mem_43756 = opencl_alloc(self, m_30871, "mem_43756")
          if ((1 * (np.long(segmap_usable_groups_38204) * np.long(segmap_group_sizze_38203))) != 0):
            self.mainzisegmap_38006_var.set_args(self.global_failure,
                                                 np.int64(m_30871),
                                                 np.int64(i_38154),
                                                 np.int64(ctx_param_ext_43735),
                                                 np.int64(ctx_param_ext_43736),
                                                 np.int64(ctx_param_ext_43738),
                                                 mem_param_43740, mem_43756)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38006_var,
                                       ((np.long(segmap_usable_groups_38204) * np.long(segmap_group_sizze_38203)),),
                                       (np.long(segmap_group_sizze_38203),))
            if synchronous:
              sync(self)
          mem_43760 = opencl_alloc(self, bytes_43730, "mem_43760")
          if ((1 * (np.long(segmap_usable_groups_38220) * np.long(segmap_group_sizze_38219))) != 0):
            self.mainzisegmap_37938_var.set_args(self.global_failure,
                                                 np.int64(m_30871),
                                                 np.int32(k2p2zq_30888),
                                                 np.int64(nm_31022),
                                                 np.int32(i64_res_31030),
                                                 np.int32(i_38152),
                                                 np.int64(i_38154),
                                                 np.int64(ctx_param_ext_43735),
                                                 np.int64(ctx_param_ext_43736),
                                                 np.int64(ctx_param_ext_43738),
                                                 mem_param_43740, mem_43756,
                                                 mem_43760)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37938_var,
                                       ((np.long(segmap_usable_groups_38220) * np.long(segmap_group_sizze_38219)),),
                                       (np.long(segmap_group_sizze_38219),))
            if synchronous:
              sync(self)
          mem_43756 = None
          if ((1 * (np.long(segmap_usable_groups_38254) * np.long(segmap_group_sizze_38253))) != 0):
            self.mainzisegmap_37884_var.set_args(self.global_failure,
                                                 np.int64(m_30871),
                                                 np.int64(nm_31022),
                                                 np.int64(ctx_param_ext_43735),
                                                 np.int64(ctx_param_ext_43736),
                                                 np.int64(ctx_param_ext_43738),
                                                 mem_param_43740, mem_43760)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37884_var,
                                       ((np.long(segmap_usable_groups_38254) * np.long(segmap_group_sizze_38253)),),
                                       (np.long(segmap_group_sizze_38253),))
            if synchronous:
              sync(self)
          mem_43760 = None
          gauss_jordan_res_mem_43769 = mem_param_43740
        ctx_param_ext_tmp_45144 = gauss_jordan_res_ixfn_43764
        ctx_param_ext_tmp_45145 = gauss_jordan_res_ixfn_43765
        ctx_param_ext_tmp_45146 = gauss_jordan_res_ixfn_43768
        ctx_param_ext_tmp_45147 = gauss_jordan_res_ixfn_43766
        ctx_param_ext_tmp_45148 = gauss_jordan_res_ixfn_43762
        ctx_param_ext_tmp_45149 = gauss_jordan_res_ixfn_43767
        ctx_param_ext_tmp_45150 = gauss_jordan_res_ixfn_43763
        mem_param_tmp_45151 = gauss_jordan_res_mem_43769
        ctx_param_ext_43733 = ctx_param_ext_tmp_45144
        ctx_param_ext_43734 = ctx_param_ext_tmp_45145
        ctx_param_ext_43735 = ctx_param_ext_tmp_45146
        ctx_param_ext_43736 = ctx_param_ext_tmp_45147
        ctx_param_ext_43737 = ctx_param_ext_tmp_45148
        ctx_param_ext_43738 = ctx_param_ext_tmp_45149
        ctx_param_ext_43739 = ctx_param_ext_tmp_45150
        mem_param_43740 = mem_param_tmp_45151
        i_38152 += one_46346
      gauss_jordan_res_r_ixfn_43770 = ctx_param_ext_43733
      gauss_jordan_res_r_ixfn_43771 = ctx_param_ext_43734
      gauss_jordan_res_r_ixfn_43772 = ctx_param_ext_43735
      gauss_jordan_res_r_ixfn_43773 = ctx_param_ext_43736
      gauss_jordan_res_r_ixfn_43774 = ctx_param_ext_43737
      gauss_jordan_res_r_ixfn_43775 = ctx_param_ext_43738
      gauss_jordan_res_r_ixfn_43776 = ctx_param_ext_43739
      gauss_jordan_res_r_mem_43777 = mem_param_43740
      mem_43732 = None
      segmap_usable_groups_38289 = sdiv_up64(comparatee_37316,
                                             segmap_group_sizze_38288)
      mem_43782 = opencl_alloc(self, bytes_43695, "mem_43782")
      if ((1 * (np.long(segmap_usable_groups_38289) * np.long(segmap_group_sizze_38288))) != 0):
        self.mainzisegmap_37665_var.set_args(self.global_failure,
                                             np.int64(m_30871),
                                             np.int64(i32_res_30890),
                                             np.int64(m_31021),
                                             np.int64(gauss_jordan_res_r_ixfn_43772),
                                             np.int64(gauss_jordan_res_r_ixfn_43773),
                                             np.int64(gauss_jordan_res_r_ixfn_43775),
                                             gauss_jordan_res_r_mem_43777,
                                             mem_43782)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37665_var,
                                   ((np.long(segmap_usable_groups_38289) * np.long(segmap_group_sizze_38288)),),
                                   (np.long(segmap_group_sizze_38288),))
        if synchronous:
          sync(self)
      gauss_jordan_res_r_mem_43777 = None
      defunc_3_map_res_mem_43783 = mem_43782
    defunc_3_map_res_mem_43700 = None
    suff_outer_par_38301 = (self.sizes["main.suff_outer_par_17"] <= m_30871)
    segmap_group_sizze_38323 = self.sizes["main.segmap_group_size_38305"]
    max_num_groups_45194 = self.sizes["main.segmap_num_groups_38307"]
    num_groups_38324 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_30871,
                                                            segmap_group_sizze_38323),
                                                  sext_i32_i64(max_num_groups_45194))))
    suff_outer_par_38408 = (self.sizes["main.suff_outer_par_18"] <= nest_sizze_37285)
    nest_sizze_38424 = (i32_res_30884 * nest_sizze_37285)
    segred_group_sizze_38425 = self.sizes["main.segred_group_size_38367"]
    max_num_groups_45195 = self.sizes["main.segred_num_groups_38369"]
    num_groups_38426 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_38424,
                                                            segred_group_sizze_38425),
                                                  sext_i32_i64(max_num_groups_45195))))
    Ty_41775 = self.sizes["main.Ty_41772"]
    Ry_41776 = self.sizes["main.Ry_41774"]
    Tx_41777 = self.sizes["main.Tx_41771"]
    Rx_41778 = self.sizes["main.Rx_41773"]
    Tk_41779 = self.sizes["main.Tk_41770"]
    TxRx_41782 = (Tx_41777 * Rx_41778)
    TyRy_41783 = (Ty_41775 * Ry_41776)
    a_loc_szz_41785 = (Tk_41779 * TyRy_41783)
    binop_x_41786 = (Tx_41777 * Tk_41779)
    b_loc_szz_41787 = (Rx_41778 * binop_x_41786)
    group_sizze_41791 = (Ty_41775 * Tx_41777)
    bytes_43802 = (np.int64(4) * nest_sizze_37285)
    binop_x_43816 = (Ry_41776 * group_sizze_41791)
    binop_x_43817 = (Rx_41778 * binop_x_43816)
    bytes_43814 = (np.int64(4) * binop_x_43817)
    binop_x_43808 = (Ry_41776 * Rx_41778)
    bytes_43807 = (np.int64(4) * binop_x_43808)
    bytes_43819 = (np.int64(4) * a_loc_szz_41785)
    bytes_43821 = (np.int64(4) * b_loc_szz_41787)
    bytes_43890 = (np.int64(4) * binop_x_43816)
    binop_x_43896 = (Rx_41778 * group_sizze_41791)
    bytes_43894 = (np.int64(4) * binop_x_43896)
    bytes_43882 = (np.int64(4) * Ry_41776)
    bytes_43884 = (np.int64(4) * Rx_41778)
    binop_x_44775 = (np.int64(4) * Ty_41775)
    binop_x_44776 = (Tx_41777 * binop_x_44775)
    binop_x_44777 = (Ry_41776 * binop_x_44776)
    sizze_44778 = (Rx_41778 * binop_x_44777)
    num_threads_44939 = (segmap_group_sizze_38323 * num_groups_38324)
    total_sizze_44940 = (bytes_43599 * num_threads_44939)
    local_memory_capacity_45325 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_45325)) and suff_outer_par_38301):
      mem_43786 = opencl_alloc(self, bytes_43549, "mem_43786")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43786, np.int64(0),
                                                  images_mem_43532, np.int64(0),
                                                  np.int64(1), N_30872, m_30871)
      mem_43804 = opencl_alloc(self, bytes_43802, "mem_43804")
      mem_43789 = opencl_alloc(self, total_sizze_44940, "mem_43789")
      if ((1 * (np.long(num_groups_38324) * np.long(segmap_group_sizze_38323))) != 0):
        self.mainzisegmap_38303_var.set_args(self.global_failure,
                                             np.int64(N_30870),
                                             np.int64(m_30871),
                                             np.int32(n_30875),
                                             np.int32(k2p2zq_30888),
                                             np.int64(i32_res_30890),
                                             np.int64(num_groups_38324),
                                             binop_p_mem_43541, mem_43786,
                                             mem_43789, mem_43804)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38303_var,
                                   ((np.long(num_groups_38324) * np.long(segmap_group_sizze_38323)),),
                                   (np.long(segmap_group_sizze_38323),))
        if synchronous:
          sync(self)
      mem_43786 = None
      mem_43789 = None
      mem_44002 = opencl_alloc(self, bytes_43802, "mem_44002")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44002, np.int64(0),
                                                  mem_43804, np.int64(0),
                                                  np.int64(1), m_30871,
                                                  i32_res_30890)
      mem_43804 = None
      defunc_3_map_res_mem_44004 = mem_44002
    else:
      local_memory_capacity_45324 = self.max_local_memory
      if (sle64((bytes_43819 + bytes_43821),
                sext_i32_i64(local_memory_capacity_45324)) and suff_outer_par_38408):
        tk_div_tx_41780 = sdiv_up64(Tk_41779, Tx_41777)
        tk_div_ty_41781 = sdiv_up64(Tk_41779, Ty_41775)
        gridDim_x_41788 = sdiv_up64(i32_res_30890, TxRx_41782)
        gridDim_y_41789 = sdiv_up64(m_30871, TyRy_41783)
        grid_sizze_41790 = (gridDim_x_41788 * gridDim_y_41789)
        full_tiles_41819 = squot64(i32_res_30884, Tk_41779)
        kk_42026 = (Tk_41779 * full_tiles_41819)
        mem_43994 = opencl_alloc(self, bytes_43802, "mem_43994")
        if ((1 * (np.long(grid_sizze_41790) * np.long(group_sizze_41791))) != 0):
          self.mainzisegmap_intragroup_41794_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_43821)),
                                                          cl.LocalMemory(np.long(bytes_43819)),
                                                          np.int64(m_30871),
                                                          np.int64(N_30872),
                                                          np.int64(i32_res_30884),
                                                          np.int64(i32_res_30890),
                                                          np.int64(gridDim_x_41788),
                                                          np.int64(full_tiles_41819),
                                                          np.int64(kk_42026),
                                                          images_mem_43532,
                                                          mem_43544, mem_43994)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_41794_var,
                                     ((np.long(grid_sizze_41790) * np.long(group_sizze_41791)),),
                                     (np.long(group_sizze_41791),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43999 = mem_43994
      else:
        mem_43998 = opencl_alloc(self, bytes_43802, "mem_43998")
        if slt64((i32_res_30884 * np.int64(2)), segred_group_sizze_38425):
          segment_sizze_nonzzero_45264 = smax64(np.int64(1), i32_res_30884)
          num_threads_45265 = (num_groups_38426 * segred_group_sizze_38425)
          if ((1 * (np.long(num_groups_38426) * np.long(segred_group_sizze_38425))) != 0):
            self.mainzisegred_small_38373_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38425))),
                                                       np.int64(N_30870),
                                                       np.int64(m_30871),
                                                       np.int64(N_30872),
                                                       np.int64(i32_res_30884),
                                                       np.int64(i32_res_30890),
                                                       np.int64(num_groups_38426),
                                                       images_mem_43532,
                                                       binop_p_mem_43541,
                                                       mem_43998,
                                                       np.int64(segment_sizze_nonzzero_45264))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_38373_var,
                                       ((np.long(num_groups_38426) * np.long(segred_group_sizze_38425)),),
                                       (np.long(segred_group_sizze_38425),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45285 = sdiv_up64(num_groups_38426,
                                               smax64(np.int64(1),
                                                      (m_30871 * i32_res_30890)))
          elements_per_thread_45286 = sdiv_up64(i32_res_30884,
                                                (segred_group_sizze_38425 * groups_per_segment_45285))
          virt_num_groups_45287 = (groups_per_segment_45285 * (m_30871 * i32_res_30890))
          num_threads_45288 = (num_groups_38426 * segred_group_sizze_38425)
          threads_per_segment_45289 = (groups_per_segment_45285 * segred_group_sizze_38425)
          group_res_arr_mem_45290 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_38425 * virt_num_groups_45287)),
                                                 "group_res_arr_mem_45290")
          mainzicounter_mem_45292 = self.mainzicounter_mem_45292
          if ((1 * (np.long(num_groups_38426) * np.long(segred_group_sizze_38425))) != 0):
            self.mainzisegred_large_38373_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38425))),
                                                       np.int64(N_30870),
                                                       np.int64(N_30872),
                                                       np.int64(i32_res_30884),
                                                       np.int64(i32_res_30890),
                                                       np.int64(num_groups_38426),
                                                       images_mem_43532,
                                                       binop_p_mem_43541,
                                                       mem_43998,
                                                       np.int64(groups_per_segment_45285),
                                                       np.int64(elements_per_thread_45286),
                                                       np.int64(virt_num_groups_45287),
                                                       np.int64(threads_per_segment_45289),
                                                       group_res_arr_mem_45290,
                                                       mainzicounter_mem_45292)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_38373_var,
                                       ((np.long(num_groups_38426) * np.long(segred_group_sizze_38425)),),
                                       (np.long(segred_group_sizze_38425),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43999 = mem_43998
      defunc_3_map_res_mem_44004 = defunc_3_map_res_mem_43999
    binop_p_mem_43541 = None
    mem_43544 = None
    suff_outer_par_38442 = (self.sizes["main.suff_outer_par_19"] <= m_30871)
    segmap_group_sizze_38463 = self.sizes["main.segmap_group_size_38446"]
    max_num_groups_45326 = self.sizes["main.segmap_num_groups_38448"]
    num_groups_38464 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_30871,
                                                            segmap_group_sizze_38463),
                                                  sext_i32_i64(max_num_groups_45326))))
    suff_outer_par_38543 = (self.sizes["main.suff_outer_par_20"] <= nest_sizze_37285)
    segred_group_sizze_38558 = self.sizes["main.segred_group_size_38504"]
    max_num_groups_45327 = self.sizes["main.segred_num_groups_38506"]
    num_groups_38559 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_43697,
                                                            segred_group_sizze_38558),
                                                  sext_i32_i64(max_num_groups_45327))))
    tile_sizze_42238 = self.sizes["main.tile_size_42237"]
    group_sizze_42239 = (tile_sizze_42238 * tile_sizze_42238)
    bytes_44036 = (np.int64(4) * group_sizze_42239)
    binop_x_44791 = (np.int64(4) * tile_sizze_42238)
    sizze_44792 = (tile_sizze_42238 * binop_x_44791)
    num_threads_44943 = (segmap_group_sizze_38463 * num_groups_38464)
    total_sizze_44944 = (bytes_43599 * num_threads_44943)
    local_memory_capacity_45413 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_45413)) and suff_outer_par_38442):
      mem_44008 = opencl_alloc(self, bytes_43594, "mem_44008")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44008, np.int64(0),
                                                  defunc_3_map_res_mem_43783,
                                                  np.int64(0), np.int64(1),
                                                  (i32_res_30890 * i32_res_30890),
                                                  m_30871)
      mem_44011 = opencl_alloc(self, bytes_43802, "mem_44011")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44011, np.int64(0),
                                                  defunc_3_map_res_mem_44004,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_30890, m_30871)
      mem_44029 = opencl_alloc(self, bytes_43802, "mem_44029")
      mem_44014 = opencl_alloc(self, total_sizze_44944, "mem_44014")
      if ((1 * (np.long(num_groups_38464) * np.long(segmap_group_sizze_38463))) != 0):
        self.mainzisegmap_38444_var.set_args(self.global_failure,
                                             np.int64(m_30871),
                                             np.int32(k2p2zq_30888),
                                             np.int64(i32_res_30890),
                                             np.int64(num_groups_38464),
                                             mem_44008, mem_44011, mem_44014,
                                             mem_44029)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38444_var,
                                   ((np.long(num_groups_38464) * np.long(segmap_group_sizze_38463)),),
                                   (np.long(segmap_group_sizze_38463),))
        if synchronous:
          sync(self)
      mem_44008 = None
      mem_44011 = None
      mem_44014 = None
      mem_44068 = opencl_alloc(self, bytes_43802, "mem_44068")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44068, np.int64(0),
                                                  mem_44029, np.int64(0),
                                                  np.int64(1), m_30871,
                                                  i32_res_30890)
      mem_44029 = None
      defunc_4_map_res_mem_44070 = mem_44068
    else:
      local_memory_capacity_45412 = self.max_local_memory
      if (sle64((bytes_44036 + bytes_44036),
                sext_i32_i64(local_memory_capacity_45412)) and suff_outer_par_38543):
        mem_44033 = opencl_alloc(self, bytes_43695, "mem_44033")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_44033, np.int64(0),
                                                    defunc_3_map_res_mem_43783,
                                                    np.int64(0), np.int64(1),
                                                    i32_res_30890,
                                                    (m_30871 * i32_res_30890))
        num_groups_x_42240 = sdiv_up64(m_30871, tile_sizze_42238)
        num_groups_y_42241 = sdiv_up64(i32_res_30890, tile_sizze_42238)
        num_groups_top_42242 = (num_groups_x_42240 * num_groups_y_42241)
        num_whole_tiles_42259 = squot64(i32_res_30890, tile_sizze_42238)
        residual_input_42386 = srem64(i32_res_30890, tile_sizze_42238)
        cond_42387 = (residual_input_42386 == np.int64(0))
        mem_44060 = opencl_alloc(self, bytes_43802, "mem_44060")
        if ((1 * (np.long(num_groups_top_42242) * np.long(group_sizze_42239))) != 0):
          self.mainzisegmap_intragroup_42243_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_44036)),
                                                          cl.LocalMemory(np.long(bytes_44036)),
                                                          np.int64(m_30871),
                                                          np.int64(i32_res_30890),
                                                          np.int64(num_groups_y_42241),
                                                          np.int64(num_whole_tiles_42259),
                                                          np.int64(residual_input_42386),
                                                          np.byte(cond_42387),
                                                          defunc_3_map_res_mem_44004,
                                                          mem_44033, mem_44060)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_42243_var,
                                     ((np.long(num_groups_top_42242) * np.long(group_sizze_42239)),),
                                     (np.long(group_sizze_42239),))
          if synchronous:
            sync(self)
        mem_44033 = None
        defunc_4_map_res_mem_44065 = mem_44060
      else:
        mem_44064 = opencl_alloc(self, bytes_43802, "mem_44064")
        if slt64((i32_res_30890 * np.int64(2)), segred_group_sizze_38558):
          segment_sizze_nonzzero_45352 = smax64(np.int64(1), i32_res_30890)
          num_threads_45353 = (num_groups_38559 * segred_group_sizze_38558)
          if ((1 * (np.long(num_groups_38559) * np.long(segred_group_sizze_38558))) != 0):
            self.mainzisegred_small_38510_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38558))),
                                                       np.int64(m_30871),
                                                       np.int64(i32_res_30890),
                                                       np.int64(num_groups_38559),
                                                       defunc_3_map_res_mem_43783,
                                                       defunc_3_map_res_mem_44004,
                                                       mem_44064,
                                                       np.int64(segment_sizze_nonzzero_45352))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_38510_var,
                                       ((np.long(num_groups_38559) * np.long(segred_group_sizze_38558)),),
                                       (np.long(segred_group_sizze_38558),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45373 = sdiv_up64(num_groups_38559,
                                               smax64(np.int64(1),
                                                      (m_30871 * i32_res_30890)))
          elements_per_thread_45374 = sdiv_up64(i32_res_30890,
                                                (segred_group_sizze_38558 * groups_per_segment_45373))
          virt_num_groups_45375 = (groups_per_segment_45373 * (m_30871 * i32_res_30890))
          num_threads_45376 = (num_groups_38559 * segred_group_sizze_38558)
          threads_per_segment_45377 = (groups_per_segment_45373 * segred_group_sizze_38558)
          group_res_arr_mem_45378 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_38558 * virt_num_groups_45375)),
                                                 "group_res_arr_mem_45378")
          mainzicounter_mem_45380 = self.mainzicounter_mem_45380
          if ((1 * (np.long(num_groups_38559) * np.long(segred_group_sizze_38558))) != 0):
            self.mainzisegred_large_38510_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38558))),
                                                       np.int64(i32_res_30890),
                                                       np.int64(num_groups_38559),
                                                       defunc_3_map_res_mem_43783,
                                                       defunc_3_map_res_mem_44004,
                                                       mem_44064,
                                                       np.int64(groups_per_segment_45373),
                                                       np.int64(elements_per_thread_45374),
                                                       np.int64(virt_num_groups_45375),
                                                       np.int64(threads_per_segment_45377),
                                                       group_res_arr_mem_45378,
                                                       mainzicounter_mem_45380)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_38510_var,
                                       ((np.long(num_groups_38559) * np.long(segred_group_sizze_38558)),),
                                       (np.long(segred_group_sizze_38558),))
            if synchronous:
              sync(self)
        defunc_4_map_res_mem_44065 = mem_44064
      defunc_4_map_res_mem_44070 = defunc_4_map_res_mem_44065
    defunc_3_map_res_mem_43783 = None
    defunc_3_map_res_mem_44004 = None
    suff_outer_par_38574 = (self.sizes["main.suff_outer_par_21"] <= m_30871)
    segmap_group_sizze_38594 = self.sizes["main.segmap_group_size_38578"]
    max_num_groups_45414 = self.sizes["main.segmap_num_groups_38580"]
    num_groups_38595 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_30871,
                                                            segmap_group_sizze_38594),
                                                  sext_i32_i64(max_num_groups_45414))))
    comparatee_38670 = (N_30870 * m_30871)
    suff_outer_par_38671 = (self.sizes["main.suff_outer_par_22"] <= comparatee_38670)
    nest_sizze_38685 = (i32_res_30890 * comparatee_38670)
    segred_group_sizze_38686 = self.sizes["main.segred_group_size_38634"]
    max_num_groups_45415 = self.sizes["main.segred_num_groups_38636"]
    num_groups_38687 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_38685,
                                                            segred_group_sizze_38686),
                                                  sext_i32_i64(max_num_groups_45415))))
    Ty_42516 = self.sizes["main.Ty_42513"]
    Ry_42517 = self.sizes["main.Ry_42515"]
    Tx_42518 = self.sizes["main.Tx_42512"]
    Rx_42519 = self.sizes["main.Rx_42514"]
    Tk_42520 = self.sizes["main.Tk_42511"]
    TxRx_42523 = (Tx_42518 * Rx_42519)
    TyRy_42524 = (Ty_42516 * Ry_42517)
    a_loc_szz_42526 = (Tk_42520 * TyRy_42524)
    binop_x_42527 = (Tx_42518 * Tk_42520)
    b_loc_szz_42528 = (Rx_42519 * binop_x_42527)
    group_sizze_42532 = (Ty_42516 * Tx_42518)
    bytes_44089 = (np.int64(4) * comparatee_38670)
    bytes_44075 = (np.int64(4) * N_30870)
    binop_x_44106 = (Ry_42517 * group_sizze_42532)
    binop_x_44107 = (Rx_42519 * binop_x_44106)
    bytes_44104 = (np.int64(4) * binop_x_44107)
    binop_x_44098 = (Ry_42517 * Rx_42519)
    bytes_44097 = (np.int64(4) * binop_x_44098)
    bytes_44109 = (np.int64(4) * a_loc_szz_42526)
    bytes_44111 = (np.int64(4) * b_loc_szz_42528)
    bytes_44180 = (np.int64(4) * binop_x_44106)
    binop_x_44186 = (Rx_42519 * group_sizze_42532)
    bytes_44184 = (np.int64(4) * binop_x_44186)
    bytes_44172 = (np.int64(4) * Ry_42517)
    bytes_44174 = (np.int64(4) * Rx_42519)
    binop_x_44805 = (np.int64(4) * Ty_42516)
    binop_x_44806 = (Tx_42518 * binop_x_44805)
    binop_x_44807 = (Ry_42517 * binop_x_44806)
    sizze_44808 = (Rx_42519 * binop_x_44807)
    num_threads_44947 = (segmap_group_sizze_38594 * num_groups_38595)
    total_sizze_44948 = (bytes_44075 * num_threads_44947)
    local_memory_capacity_45545 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_45545)) and suff_outer_par_38574):
      mem_44073 = opencl_alloc(self, bytes_43802, "mem_44073")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44073, np.int64(0),
                                                  defunc_4_map_res_mem_44070,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_30890, m_30871)
      mem_44091 = opencl_alloc(self, bytes_44089, "mem_44091")
      mem_44076 = opencl_alloc(self, total_sizze_44948, "mem_44076")
      if ((1 * (np.long(num_groups_38595) * np.long(segmap_group_sizze_38594))) != 0):
        self.mainzisegmap_38576_var.set_args(self.global_failure,
                                             np.int64(N_30870),
                                             np.int64(m_30871),
                                             np.int32(k2p2zq_30888),
                                             np.int64(i32_res_30890),
                                             np.int64(num_groups_38595),
                                             mem_43548, mem_44073, mem_44076,
                                             mem_44091)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38576_var,
                                   ((np.long(num_groups_38595) * np.long(segmap_group_sizze_38594)),),
                                   (np.long(segmap_group_sizze_38594),))
        if synchronous:
          sync(self)
      mem_44073 = None
      mem_44076 = None
      mem_44292 = opencl_alloc(self, bytes_44089, "mem_44292")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44292, np.int64(0),
                                                  mem_44091, np.int64(0),
                                                  np.int64(1), m_30871, N_30870)
      mem_44091 = None
      defunc_3_map_res_mem_44294 = mem_44292
    else:
      local_memory_capacity_45544 = self.max_local_memory
      if (sle64((bytes_44109 + bytes_44111),
                sext_i32_i64(local_memory_capacity_45544)) and suff_outer_par_38671):
        mem_44094 = opencl_alloc(self, bytes_43534, "mem_44094")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_44094, np.int64(0),
                                                    mem_43548, np.int64(0),
                                                    np.int64(1), i32_res_30890,
                                                    N_30870)
        tk_div_tx_42521 = sdiv_up64(Tk_42520, Tx_42518)
        tk_div_ty_42522 = sdiv_up64(Tk_42520, Ty_42516)
        gridDim_x_42529 = sdiv_up64(N_30870, TxRx_42523)
        gridDim_y_42530 = sdiv_up64(m_30871, TyRy_42524)
        grid_sizze_42531 = (gridDim_x_42529 * gridDim_y_42530)
        full_tiles_42560 = squot64(i32_res_30890, Tk_42520)
        kk_42763 = (Tk_42520 * full_tiles_42560)
        mem_44284 = opencl_alloc(self, bytes_44089, "mem_44284")
        if ((1 * (np.long(grid_sizze_42531) * np.long(group_sizze_42532))) != 0):
          self.mainzisegmap_intragroup_42535_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_44111)),
                                                          cl.LocalMemory(np.long(bytes_44109)),
                                                          np.int64(N_30870),
                                                          np.int64(m_30871),
                                                          np.int64(i32_res_30890),
                                                          np.int64(gridDim_x_42529),
                                                          np.int64(full_tiles_42560),
                                                          np.int64(kk_42763),
                                                          defunc_4_map_res_mem_44070,
                                                          mem_44094, mem_44284)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_42535_var,
                                     ((np.long(grid_sizze_42531) * np.long(group_sizze_42532)),),
                                     (np.long(group_sizze_42532),))
          if synchronous:
            sync(self)
        mem_44094 = None
        defunc_3_map_res_mem_44289 = mem_44284
      else:
        mem_44288 = opencl_alloc(self, bytes_44089, "mem_44288")
        if slt64((i32_res_30890 * np.int64(2)), segred_group_sizze_38686):
          segment_sizze_nonzzero_45484 = smax64(np.int64(1), i32_res_30890)
          num_threads_45485 = (num_groups_38687 * segred_group_sizze_38686)
          if ((1 * (np.long(num_groups_38687) * np.long(segred_group_sizze_38686))) != 0):
            self.mainzisegred_small_38640_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38686))),
                                                       np.int64(N_30870),
                                                       np.int64(m_30871),
                                                       np.int64(i32_res_30890),
                                                       np.int64(num_groups_38687),
                                                       mem_43548,
                                                       defunc_4_map_res_mem_44070,
                                                       mem_44288,
                                                       np.int64(segment_sizze_nonzzero_45484))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_38640_var,
                                       ((np.long(num_groups_38687) * np.long(segred_group_sizze_38686)),),
                                       (np.long(segred_group_sizze_38686),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45505 = sdiv_up64(num_groups_38687,
                                               smax64(np.int64(1),
                                                      (m_30871 * N_30870)))
          elements_per_thread_45506 = sdiv_up64(i32_res_30890,
                                                (segred_group_sizze_38686 * groups_per_segment_45505))
          virt_num_groups_45507 = (groups_per_segment_45505 * (m_30871 * N_30870))
          num_threads_45508 = (num_groups_38687 * segred_group_sizze_38686)
          threads_per_segment_45509 = (groups_per_segment_45505 * segred_group_sizze_38686)
          group_res_arr_mem_45510 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_38686 * virt_num_groups_45507)),
                                                 "group_res_arr_mem_45510")
          mainzicounter_mem_45512 = self.mainzicounter_mem_45512
          if ((1 * (np.long(num_groups_38687) * np.long(segred_group_sizze_38686))) != 0):
            self.mainzisegred_large_38640_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38686))),
                                                       np.int64(N_30870),
                                                       np.int64(i32_res_30890),
                                                       np.int64(num_groups_38687),
                                                       mem_43548,
                                                       defunc_4_map_res_mem_44070,
                                                       mem_44288,
                                                       np.int64(groups_per_segment_45505),
                                                       np.int64(elements_per_thread_45506),
                                                       np.int64(virt_num_groups_45507),
                                                       np.int64(threads_per_segment_45509),
                                                       group_res_arr_mem_45510,
                                                       mainzicounter_mem_45512)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_38640_var,
                                       ((np.long(num_groups_38687) * np.long(segred_group_sizze_38686)),),
                                       (np.long(segred_group_sizze_38686),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_44289 = mem_44288
      defunc_3_map_res_mem_44294 = defunc_3_map_res_mem_44289
    mem_43548 = None
    defunc_4_map_res_mem_44070 = None
    i_31137 = (N_30870 - np.int64(1))
    x_31138 = sle64(np.int64(0), i_31137)
    y_31139 = slt64(i_31137, N_30870)
    bounds_check_31140 = (x_31138 and y_31139)
    index_certs_31141 = True
    assert bounds_check_31140, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:18:29-34\n   #1  helpers.fut:20:13-20\n   #2  bfastfinal.fut:83:30-91\n   #3  /prelude/soacs.fut:56:19-23\n   #4  /prelude/soacs.fut:56:3-37\n   #5  bfastfinal.fut:77:5-86:25\n   #6  bfastfinal.fut:184:5-58\n   #7  bfastfinal.fut:179:1-185:32\n" % ("Index [",
                                                                                                                                                                                                                                                                                                                                                     i_31137,
                                                                                                                                                                                                                                                                                                                                                     "] out of bounds for array of shape [",
                                                                                                                                                                                                                                                                                                                                                     N_30870,
                                                                                                                                                                                                                                                                                                                                                     "]."))
    fits_38816 = sle64(N_30870, max_group_sizze_37553)
    suff_intra_par_38814 = (self.sizes["main.suff_intra_par_25"] <= N_30870)
    intra_suff_and_fits_38817 = (suff_intra_par_38814 and fits_38816)
    segscan_group_sizze_38966 = self.sizes["main.segscan_group_size_38943"]
    max_num_groups_45546 = self.sizes["main.segscan_num_groups_38945"]
    num_groups_38967 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(comparatee_38670,
                                                            segscan_group_sizze_38966),
                                                  sext_i32_i64(max_num_groups_45546))))
    segmap_group_sizze_38986 = self.sizes["main.segmap_group_size_38934"]
    mem_44297 = opencl_alloc(self, bytes_44089, "mem_44297")
    self.futhark_builtinzhreplicate_f32(mem_44297, (m_30871 * N_30870), np.nan)
    mem_44300 = opencl_alloc(self, bytes_44089, "mem_44300")
    self.futhark_builtinzhreplicate_i32(mem_44300, (m_30871 * N_30870),
                                        np.int32(0))
    segmap_group_sizze_39022 = self.sizes["main.segmap_group_size_38859"]
    bytes_44312 = (np.int64(4) * m_30871)
    bytes_44303 = (np.int64(8) * N_30870)
    bytes_44321 = (np.int64(8) * comparatee_38670)
    local_memory_capacity_45648 = self.max_local_memory
    if (sle64((((bytes_44303 + bytes_44075) + bytes_44075) + bytes_44075),
              sext_i32_i64(local_memory_capacity_45648)) and intra_suff_and_fits_38817):
      mem_44313 = opencl_alloc(self, bytes_44312, "mem_44313")
      mem_44316 = opencl_alloc(self, bytes_44089, "mem_44316")
      mem_44319 = opencl_alloc(self, bytes_44089, "mem_44319")
      if ((1 * (np.long(m_30871) * np.long(N_30870))) != 0):
        self.mainzisegmap_intragroup_38739_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_44075)),
                                                        cl.LocalMemory(np.long(bytes_44075)),
                                                        cl.LocalMemory(np.long(bytes_44075)),
                                                        cl.LocalMemory(np.long(bytes_44303)),
                                                        np.int64(N_30870),
                                                        np.int64(N_30872),
                                                        np.int64(i_31137),
                                                        images_mem_43532,
                                                        defunc_3_map_res_mem_44294,
                                                        mem_44313, mem_44316,
                                                        mem_44319)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_38739_var,
                                   ((np.long(m_30871) * np.long(N_30870)),),
                                   (np.long(N_30870),))
        if synchronous:
          sync(self)
      defunc_4_map_res_mem_44331 = mem_44313
      defunc_4_map_res_mem_44332 = mem_44316
      defunc_4_map_res_mem_44333 = mem_44319
    else:
      mem_44323 = opencl_alloc(self, bytes_44321, "mem_44323")
      mem_44326 = opencl_alloc(self, bytes_44089, "mem_44326")
      if slt64(np.int64(0), (m_30871 * N_30870)):
        stage1_max_num_groups_45582 = self.max_group_size
        stage1_num_groups_45583 = smin64(stage1_max_num_groups_45582,
                                         num_groups_38967)
        num_threads_45584 = sext_i64_i32((stage1_num_groups_45583 * segscan_group_sizze_38966))
        if ((1 * (np.long(stage1_num_groups_45583) * np.long(segscan_group_sizze_38966))) != 0):
          self.mainziscan_stage1_38949_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(8) * segscan_group_sizze_38966)))),
                                                    np.int64(N_30870),
                                                    np.int64(m_30871),
                                                    np.int64(N_30872),
                                                    images_mem_43532,
                                                    defunc_3_map_res_mem_44294,
                                                    mem_44323, mem_44326,
                                                    np.int32(num_threads_45584))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage1_38949_var,
                                     ((np.long(stage1_num_groups_45583) * np.long(segscan_group_sizze_38966)),),
                                     (np.long(segscan_group_sizze_38966),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_45583))) != 0):
          self.mainziscan_stage2_38949_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(8) * stage1_num_groups_45583)))),
                                                    np.int64(N_30870),
                                                    np.int64(m_30871),
                                                    mem_44323,
                                                    np.int64(stage1_num_groups_45583),
                                                    np.int32(num_threads_45584))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage2_38949_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_45583)),),
                                     (np.long(stage1_num_groups_45583),))
          if synchronous:
            sync(self)
        required_groups_45626 = sext_i64_i32(sdiv_up64((m_30871 * N_30870),
                                                       segscan_group_sizze_38966))
        if ((1 * (np.long(num_groups_38967) * np.long(segscan_group_sizze_38966))) != 0):
          self.mainziscan_stage3_38949_var.set_args(self.global_failure,
                                                    np.int64(N_30870),
                                                    np.int64(m_30871),
                                                    np.int64(num_groups_38967),
                                                    mem_44323,
                                                    np.int32(num_threads_45584),
                                                    np.int32(required_groups_45626))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage3_38949_var,
                                     ((np.long(num_groups_38967) * np.long(segscan_group_sizze_38966)),),
                                     (np.long(segscan_group_sizze_38966),))
          if synchronous:
            sync(self)
      segmap_usable_groups_38987 = sdiv_up64(m_30871, segmap_group_sizze_38986)
      mem_44329 = opencl_alloc(self, bytes_44312, "mem_44329")
      if ((1 * (np.long(segmap_usable_groups_38987) * np.long(segmap_group_sizze_38986))) != 0):
        self.mainzisegmap_38932_var.set_args(self.global_failure,
                                             np.int64(N_30870),
                                             np.int64(m_30871),
                                             np.int64(i_31137), mem_44323,
                                             mem_44329)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38932_var,
                                   ((np.long(segmap_usable_groups_38987) * np.long(segmap_group_sizze_38986)),),
                                   (np.long(segmap_group_sizze_38986),))
        if synchronous:
          sync(self)
      segmap_usable_groups_39023 = sdiv_up64(comparatee_38670,
                                             segmap_group_sizze_39022)
      if ((1 * (np.long(segmap_usable_groups_39023) * np.long(segmap_group_sizze_39022))) != 0):
        self.mainzisegmap_38856_var.set_args(self.global_failure,
                                             np.int64(N_30870),
                                             np.int64(m_30871), mem_44297,
                                             mem_44300, mem_44323, mem_44326)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38856_var,
                                   ((np.long(segmap_usable_groups_39023) * np.long(segmap_group_sizze_39022)),),
                                   (np.long(segmap_group_sizze_39022),))
        if synchronous:
          sync(self)
      mem_44323 = None
      mem_44326 = None
      defunc_4_map_res_mem_44331 = mem_44329
      defunc_4_map_res_mem_44332 = mem_44297
      defunc_4_map_res_mem_44333 = mem_44300
    defunc_3_map_res_mem_44294 = None
    mem_44297 = None
    mem_44300 = None
    suff_outer_par_39071 = (self.sizes["main.suff_outer_par_29"] <= m_30871)
    fits_39149 = sle64(i32_res_30884, max_group_sizze_37553)
    suff_intra_par_39147 = (self.sizes["main.suff_intra_par_30"] <= i32_res_30884)
    intra_suff_and_fits_39150 = (suff_intra_par_39147 and fits_39149)
    segmap_group_sizze_39114 = self.sizes["main.segmap_group_size_39083"]
    nest_sizze_39237 = (m_30871 * i32_res_30884)
    segred_group_sizze_39238 = self.sizes["main.segred_group_size_39221"]
    max_num_groups_45649 = self.sizes["main.segred_num_groups_39223"]
    num_groups_39239 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_39237,
                                                            segred_group_sizze_39238),
                                                  sext_i32_i64(max_num_groups_45649))))
    segred_group_sizze_39252 = self.sizes["main.segred_group_size_39200"]
    max_num_groups_45650 = self.sizes["main.segred_num_groups_39202"]
    num_groups_39253 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_39237,
                                                            segred_group_sizze_39252),
                                                  sext_i32_i64(max_num_groups_45650))))
    segmap_group_sizze_39268 = self.sizes["main.segmap_group_size_39185"]
    bytes_44342 = (np.int64(4) * segmap_group_sizze_39114)
    local_memory_capacity_45804 = self.max_local_memory
    if (sle64((bytes_44342 + bytes_44342),
              sext_i32_i64(local_memory_capacity_45804)) and suff_outer_par_39071):
      segmap_usable_groups_39115 = sdiv_up64(m_30871, segmap_group_sizze_39114)
      mem_44336 = opencl_alloc(self, bytes_43549, "mem_44336")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44336, np.int64(0),
                                                  images_mem_43532, np.int64(0),
                                                  np.int64(1), N_30872, m_30871)
      mem_44339 = opencl_alloc(self, bytes_44089, "mem_44339")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44339, np.int64(0),
                                                  defunc_4_map_res_mem_44332,
                                                  np.int64(0), np.int64(1),
                                                  N_30870, m_30871)
      num_whole_tiles_42977 = squot64(i32_res_30884, segmap_group_sizze_39114)
      residual_input_43098 = srem64(i32_res_30884, segmap_group_sizze_39114)
      cond_43099 = (residual_input_43098 == np.int64(0))
      mem_44367 = opencl_alloc(self, bytes_44312, "mem_44367")
      mem_44369 = opencl_alloc(self, bytes_44312, "mem_44369")
      mem_44371 = opencl_alloc(self, bytes_44312, "mem_44371")
      if ((1 * (np.long(segmap_usable_groups_39115) * np.long(segmap_group_sizze_39114))) != 0):
        self.mainzisegmap_intragroup_42969_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_44342)),
                                                        cl.LocalMemory(np.long(bytes_44342)),
                                                        np.int64(m_30871),
                                                        np.int32(n_30875),
                                                        np.float32(hfrac_30877),
                                                        np.int64(i32_res_30884),
                                                        np.int32(k2p2_30886),
                                                        np.int64(num_whole_tiles_42977),
                                                        np.int64(residual_input_43098),
                                                        np.byte(cond_43099),
                                                        mem_44336, mem_44339,
                                                        mem_44367, mem_44369,
                                                        mem_44371)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_42969_var,
                                   ((np.long(segmap_usable_groups_39115) * np.long(segmap_group_sizze_39114)),),
                                   (np.long(segmap_group_sizze_39114),))
        if synchronous:
          sync(self)
      mem_44336 = None
      mem_44339 = None
      defunc_3_map_res_mem_44395 = mem_44367
      defunc_3_map_res_mem_44396 = mem_44369
      defunc_3_map_res_mem_44397 = mem_44371
    else:
      local_memory_capacity_45803 = self.max_local_memory
      if (sle64(((np.int32(4) * i32_res_30884) + (np.int32(4) * i32_res_30884)),
                sext_i32_i64(local_memory_capacity_45803)) and intra_suff_and_fits_39150):
        mem_44376 = opencl_alloc(self, bytes_44312, "mem_44376")
        mem_44378 = opencl_alloc(self, bytes_44312, "mem_44378")
        mem_44380 = opencl_alloc(self, bytes_44312, "mem_44380")
        if ((1 * (np.long(m_30871) * np.long(i32_res_30884))) != 0):
          self.mainzisegmap_intragroup_39079_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long((np.int32(4) * i32_res_30884))),
                                                          cl.LocalMemory(np.long((np.int32(4) * i32_res_30884))),
                                                          np.int64(N_30870),
                                                          np.int64(N_30872),
                                                          np.float32(hfrac_30877),
                                                          np.int64(i32_res_30884),
                                                          np.int32(k2p2_30886),
                                                          images_mem_43532,
                                                          defunc_4_map_res_mem_44332,
                                                          mem_44376, mem_44378,
                                                          mem_44380)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_39079_var,
                                     ((np.long(m_30871) * np.long(i32_res_30884)),),
                                     (np.long(i32_res_30884),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_44392 = mem_44376
        defunc_3_map_res_mem_44393 = mem_44378
        defunc_3_map_res_mem_44394 = mem_44380
      else:
        mem_44383 = opencl_alloc(self, bytes_44312, "mem_44383")
        if slt64((i32_res_30884 * np.int64(2)), segred_group_sizze_39238):
          segment_sizze_nonzzero_45678 = smax64(np.int64(1), i32_res_30884)
          num_threads_45679 = (num_groups_39239 * segred_group_sizze_39238)
          if ((1 * (np.long(num_groups_39239) * np.long(segred_group_sizze_39238))) != 0):
            self.mainzisegred_small_39227_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39238))),
                                                       np.int64(m_30871),
                                                       np.int64(N_30872),
                                                       np.int64(i32_res_30884),
                                                       np.int64(num_groups_39239),
                                                       images_mem_43532,
                                                       mem_44383,
                                                       np.int64(segment_sizze_nonzzero_45678))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_39227_var,
                                       ((np.long(num_groups_39239) * np.long(segred_group_sizze_39238)),),
                                       (np.long(segred_group_sizze_39238),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45699 = sdiv_up64(num_groups_39239,
                                               smax64(np.int64(1), m_30871))
          elements_per_thread_45700 = sdiv_up64(i32_res_30884,
                                                (segred_group_sizze_39238 * groups_per_segment_45699))
          virt_num_groups_45701 = (groups_per_segment_45699 * m_30871)
          num_threads_45702 = (num_groups_39239 * segred_group_sizze_39238)
          threads_per_segment_45703 = (groups_per_segment_45699 * segred_group_sizze_39238)
          group_res_arr_mem_45704 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_39238 * virt_num_groups_45701)),
                                                 "group_res_arr_mem_45704")
          mainzicounter_mem_45706 = self.mainzicounter_mem_45706
          if ((1 * (np.long(num_groups_39239) * np.long(segred_group_sizze_39238))) != 0):
            self.mainzisegred_large_39227_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39238))),
                                                       np.int64(N_30872),
                                                       np.int64(i32_res_30884),
                                                       np.int64(num_groups_39239),
                                                       images_mem_43532,
                                                       mem_44383,
                                                       np.int64(groups_per_segment_45699),
                                                       np.int64(elements_per_thread_45700),
                                                       np.int64(virt_num_groups_45701),
                                                       np.int64(threads_per_segment_45703),
                                                       group_res_arr_mem_45704,
                                                       mainzicounter_mem_45706)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_39227_var,
                                       ((np.long(num_groups_39239) * np.long(segred_group_sizze_39238)),),
                                       (np.long(segred_group_sizze_39238),))
            if synchronous:
              sync(self)
        mem_44386 = opencl_alloc(self, bytes_44312, "mem_44386")
        if slt64((i32_res_30884 * np.int64(2)), segred_group_sizze_39252):
          segment_sizze_nonzzero_45738 = smax64(np.int64(1), i32_res_30884)
          num_threads_45739 = (num_groups_39253 * segred_group_sizze_39252)
          if ((1 * (np.long(num_groups_39253) * np.long(segred_group_sizze_39252))) != 0):
            self.mainzisegred_small_39206_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39252))),
                                                       np.int64(N_30870),
                                                       np.int64(m_30871),
                                                       np.int64(i32_res_30884),
                                                       np.int64(num_groups_39253),
                                                       defunc_4_map_res_mem_44332,
                                                       mem_44383, mem_44386,
                                                       np.int64(segment_sizze_nonzzero_45738))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_39206_var,
                                       ((np.long(num_groups_39253) * np.long(segred_group_sizze_39252)),),
                                       (np.long(segred_group_sizze_39252),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45759 = sdiv_up64(num_groups_39253,
                                               smax64(np.int64(1), m_30871))
          elements_per_thread_45760 = sdiv_up64(i32_res_30884,
                                                (segred_group_sizze_39252 * groups_per_segment_45759))
          virt_num_groups_45761 = (groups_per_segment_45759 * m_30871)
          num_threads_45762 = (num_groups_39253 * segred_group_sizze_39252)
          threads_per_segment_45763 = (groups_per_segment_45759 * segred_group_sizze_39252)
          group_res_arr_mem_45764 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_39252 * virt_num_groups_45761)),
                                                 "group_res_arr_mem_45764")
          mainzicounter_mem_45766 = self.mainzicounter_mem_45766
          if ((1 * (np.long(num_groups_39253) * np.long(segred_group_sizze_39252))) != 0):
            self.mainzisegred_large_39206_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39252))),
                                                       np.int64(N_30870),
                                                       np.int64(i32_res_30884),
                                                       np.int64(num_groups_39253),
                                                       defunc_4_map_res_mem_44332,
                                                       mem_44383, mem_44386,
                                                       np.int64(groups_per_segment_45759),
                                                       np.int64(elements_per_thread_45760),
                                                       np.int64(virt_num_groups_45761),
                                                       np.int64(threads_per_segment_45763),
                                                       group_res_arr_mem_45764,
                                                       mainzicounter_mem_45766)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_39206_var,
                                       ((np.long(num_groups_39253) * np.long(segred_group_sizze_39252)),),
                                       (np.long(segred_group_sizze_39252),))
            if synchronous:
              sync(self)
        segmap_usable_groups_39269 = sdiv_up64(m_30871,
                                               segmap_group_sizze_39268)
        mem_44389 = opencl_alloc(self, bytes_44312, "mem_44389")
        mem_44391 = opencl_alloc(self, bytes_44312, "mem_44391")
        if ((1 * (np.long(segmap_usable_groups_39269) * np.long(segmap_group_sizze_39268))) != 0):
          self.mainzisegmap_39183_var.set_args(self.global_failure,
                                               np.int64(m_30871),
                                               np.float32(hfrac_30877),
                                               np.int32(k2p2_30886), mem_44383,
                                               mem_44386, mem_44389, mem_44391)
          cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39183_var,
                                     ((np.long(segmap_usable_groups_39269) * np.long(segmap_group_sizze_39268)),),
                                     (np.long(segmap_group_sizze_39268),))
          if synchronous:
            sync(self)
        mem_44386 = None
        defunc_3_map_res_mem_44392 = mem_44389
        defunc_3_map_res_mem_44393 = mem_44383
        defunc_3_map_res_mem_44394 = mem_44391
      defunc_3_map_res_mem_44395 = defunc_3_map_res_mem_44392
      defunc_3_map_res_mem_44396 = defunc_3_map_res_mem_44393
      defunc_3_map_res_mem_44397 = defunc_3_map_res_mem_44394
    segred_group_sizze_39289 = self.sizes["main.segred_group_size_39288"]
    max_num_groups_45805 = self.sizes["main.segred_num_groups_39290"]
    num_groups_39291 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_30871,
                                                            segred_group_sizze_39289),
                                                  sext_i32_i64(max_num_groups_45805))))
    mem_44400 = opencl_alloc(self, np.int64(4), "mem_44400")
    mainzicounter_mem_45806 = self.mainzicounter_mem_45806
    group_res_arr_mem_45808 = opencl_alloc(self,
                                           (np.int32(4) * (segred_group_sizze_39289 * num_groups_39291)),
                                           "group_res_arr_mem_45808")
    num_threads_45810 = (num_groups_39291 * segred_group_sizze_39289)
    if ((1 * (np.long(num_groups_39291) * np.long(segred_group_sizze_39289))) != 0):
      self.mainzisegred_nonseg_39296_var.set_args(self.global_failure,
                                                  cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39289))),
                                                  cl.LocalMemory(np.long(np.int32(1))),
                                                  np.int64(m_30871),
                                                  np.int64(num_groups_39291),
                                                  defunc_3_map_res_mem_44395,
                                                  mem_44400,
                                                  mainzicounter_mem_45806,
                                                  group_res_arr_mem_45808,
                                                  np.int64(num_threads_45810))
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegred_nonseg_39296_var,
                                 ((np.long(num_groups_39291) * np.long(segred_group_sizze_39289)),),
                                 (np.long(segred_group_sizze_39289),))
      if synchronous:
        sync(self)
    read_res_46353 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_46353, mem_44400,
                    device_offset=(np.long(np.int64(0)) * 4),
                    is_blocking=synchronous)
    sync(self)
    defunc_2_reduce_comm_res_31227 = read_res_46353[0]
    mem_44400 = None
    i32_res_31232 = sext_i32_i64(defunc_2_reduce_comm_res_31227)
    bounds_invalid_upwards_31233 = slt64(i32_res_31232, np.int64(0))
    valid_31234 = not(bounds_invalid_upwards_31233)
    range_valid_c_31235 = True
    assert valid_31234, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:5:3-18\n   #2  bfastfinal.fut:111:34-46\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:106:17-113:24\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                                                                    i32_res_31232,
                                                                                                                                                                                                                                                                                                                    " is invalid."))
    suff_outer_par_39328 = (self.sizes["main.suff_outer_par_32"] <= m_30871)
    segmap_group_sizze_39351 = self.sizes["main.segmap_group_size_39332"]
    nest_sizze_39394 = (m_30871 * i32_res_31232)
    segred_group_sizze_39395 = self.sizes["main.segred_group_size_39372"]
    max_num_groups_45836 = self.sizes["main.segred_num_groups_39374"]
    num_groups_39396 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_39394,
                                                            segred_group_sizze_39395),
                                                  sext_i32_i64(max_num_groups_45836))))
    bytes_44403 = (np.int64(4) * segmap_group_sizze_39351)
    local_memory_capacity_45907 = self.max_local_memory
    if (sle64((bytes_44403 + bytes_44403),
              sext_i32_i64(local_memory_capacity_45907)) and suff_outer_par_39328):
      segmap_usable_groups_39352 = sdiv_up64(m_30871, segmap_group_sizze_39351)
      num_whole_tiles_43221 = squot64(i32_res_31232, segmap_group_sizze_39351)
      residual_input_43320 = srem64(i32_res_31232, segmap_group_sizze_39351)
      cond_43321 = (residual_input_43320 == np.int64(0))
      mem_44426 = opencl_alloc(self, bytes_44312, "mem_44426")
      if ((1 * (np.long(segmap_usable_groups_39352) * np.long(segmap_group_sizze_39351))) != 0):
        self.mainzisegmap_intragroup_43201_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_44403)),
                                                        cl.LocalMemory(np.long(bytes_44403)),
                                                        np.int64(N_30870),
                                                        np.int64(m_30871),
                                                        np.int64(i32_res_31232),
                                                        np.int64(num_whole_tiles_43221),
                                                        np.int64(residual_input_43320),
                                                        np.byte(cond_43321),
                                                        defunc_4_map_res_mem_44332,
                                                        defunc_3_map_res_mem_44395,
                                                        defunc_3_map_res_mem_44396,
                                                        mem_44426)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_43201_var,
                                   ((np.long(segmap_usable_groups_39352) * np.long(segmap_group_sizze_39351)),),
                                   (np.long(segmap_group_sizze_39351),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_44430 = mem_44426
    else:
      mem_44429 = opencl_alloc(self, bytes_44312, "mem_44429")
      if slt64((i32_res_31232 * np.int64(2)), segred_group_sizze_39395):
        segment_sizze_nonzzero_45847 = smax64(np.int64(1), i32_res_31232)
        num_threads_45848 = (num_groups_39396 * segred_group_sizze_39395)
        if ((1 * (np.long(num_groups_39396) * np.long(segred_group_sizze_39395))) != 0):
          self.mainzisegred_small_39378_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39395))),
                                                     np.int64(N_30870),
                                                     np.int64(m_30871),
                                                     np.int64(i32_res_31232),
                                                     np.int64(num_groups_39396),
                                                     defunc_4_map_res_mem_44332,
                                                     defunc_3_map_res_mem_44395,
                                                     defunc_3_map_res_mem_44396,
                                                     mem_44429,
                                                     np.int64(segment_sizze_nonzzero_45847))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_small_39378_var,
                                     ((np.long(num_groups_39396) * np.long(segred_group_sizze_39395)),),
                                     (np.long(segred_group_sizze_39395),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_45868 = sdiv_up64(num_groups_39396,
                                             smax64(np.int64(1), m_30871))
        elements_per_thread_45869 = sdiv_up64(i32_res_31232,
                                              (segred_group_sizze_39395 * groups_per_segment_45868))
        virt_num_groups_45870 = (groups_per_segment_45868 * m_30871)
        num_threads_45871 = (num_groups_39396 * segred_group_sizze_39395)
        threads_per_segment_45872 = (groups_per_segment_45868 * segred_group_sizze_39395)
        group_res_arr_mem_45873 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_39395 * virt_num_groups_45870)),
                                               "group_res_arr_mem_45873")
        mainzicounter_mem_45875 = self.mainzicounter_mem_45875
        if ((1 * (np.long(num_groups_39396) * np.long(segred_group_sizze_39395))) != 0):
          self.mainzisegred_large_39378_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long(np.int32(1))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39395))),
                                                     np.int64(N_30870),
                                                     np.int64(i32_res_31232),
                                                     np.int64(num_groups_39396),
                                                     defunc_4_map_res_mem_44332,
                                                     defunc_3_map_res_mem_44395,
                                                     defunc_3_map_res_mem_44396,
                                                     mem_44429,
                                                     np.int64(groups_per_segment_45868),
                                                     np.int64(elements_per_thread_45869),
                                                     np.int64(virt_num_groups_45870),
                                                     np.int64(threads_per_segment_45872),
                                                     group_res_arr_mem_45873,
                                                     mainzicounter_mem_45875)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_large_39378_var,
                                     ((np.long(num_groups_39396) * np.long(segred_group_sizze_39395)),),
                                     (np.long(segred_group_sizze_39395),))
          if synchronous:
            sync(self)
      defunc_0_f_res_mem_44430 = mem_44429
    iota32_arg_31257 = (N_30870 - i32_res_30884)
    bounds_invalid_upwards_31258 = slt64(iota32_arg_31257, np.int64(0))
    valid_31259 = not(bounds_invalid_upwards_31258)
    range_valid_c_31260 = True
    assert valid_31259, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:119:22-35\n   #3  bfastfinal.fut:184:5-58\n   #4  bfastfinal.fut:179:1-185:32\n" % ("Range ",
                                                                                                                                                                                                                                      np.int64(0),
                                                                                                                                                                                                                                      "..",
                                                                                                                                                                                                                                      np.int64(1),
                                                                                                                                                                                                                                      "..<",
                                                                                                                                                                                                                                      iota32_arg_31257,
                                                                                                                                                                                                                                      " is invalid."))
    x_31262 = (np.int32(1) + n_30875)
    i_31263 = (n_30875 - np.int32(1))
    i_31264 = sext_i32_i64(i_31263)
    x_31265 = sle64(np.int64(0), i_31264)
    y_31266 = slt64(i_31264, N_30870)
    bounds_check_31267 = (x_31265 and y_31266)
    index_certs_31268 = True
    assert bounds_check_31267, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:117:64-84\n   #1  bfastfinal.fut:115:15-119:36\n   #2  bfastfinal.fut:184:5-58\n   #3  bfastfinal.fut:179:1-185:32\n" % ("Index [",
                                                                                                                                                                                                                 i_31264,
                                                                                                                                                                                                                 "] out of bounds for array of shape [",
                                                                                                                                                                                                                 N_30870,
                                                                                                                                                                                                                 "]."))
    read_res_46355 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_46355, mappingindices_mem_43531,
                    device_offset=(np.long(i_31264) * 4),
                    is_blocking=synchronous)
    sync(self)
    r32_arg_31269 = read_res_46355[0]
    i32_res_31270 = sitofp_i32_f32(r32_arg_31269)
    range_valid_c_31271 = True
    assert valid_31259, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:131:29-44\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:184:5-58\n   #6  bfastfinal.fut:179:1-185:32\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                                                                  iota32_arg_31257,
                                                                                                                                                                                                                                                                                                                  " is invalid."))
    segmap_group_sizze_39473 = self.sizes["main.segmap_group_size_39456"]
    segmap_usable_groups_39474 = sdiv_up64(iota32_arg_31257,
                                           segmap_group_sizze_39473)
    bytes_44432 = (np.int64(4) * iota32_arg_31257)
    mem_44433 = opencl_alloc(self, bytes_44432, "mem_44433")
    mem_44435 = opencl_alloc(self, bytes_44432, "mem_44435")
    if ((1 * (np.long(segmap_usable_groups_39474) * np.long(segmap_group_sizze_39473))) != 0):
      self.mainzisegmap_39454_var.set_args(self.global_failure,
                                           np.float32(lam_30878),
                                           np.int64(iota32_arg_31257),
                                           np.int32(x_31262),
                                           np.float32(i32_res_31270),
                                           mappingindices_mem_43531, mem_44433,
                                           mem_44435)
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39454_var,
                                 ((np.long(segmap_usable_groups_39474) * np.long(segmap_group_sizze_39473)),),
                                 (np.long(segmap_group_sizze_39473),))
      if synchronous:
        sync(self)
    mem_44433 = None
    cond_31287 = (iota32_arg_31257 == np.int64(0))
    if cond_31287:
      iters_31288 = np.int32(0)
    else:
      iters_31288 = np.int32(16)
    loop_nonempty_31289 = slt32(np.int32(0), iters_31288)
    i_31290 = (iota32_arg_31257 - np.int64(1))
    x_31291 = sle64(np.int64(0), i_31290)
    y_31292 = slt64(i_31290, iota32_arg_31257)
    bounds_check_31293 = (x_31291 and y_31292)
    loop_not_taken_31294 = not(loop_nonempty_31289)
    protect_assert_disj_31295 = (bounds_check_31293 or loop_not_taken_31294)
    index_certs_31296 = True
    assert protect_assert_disj_31295, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:18:29-34\n   #1  lib/github.com/diku-dk/sorts/radix_sort.fut:25:24-35\n   #2  lib/github.com/diku-dk/sorts/radix_sort.fut:53:31-62\n   #3  lib/github.com/diku-dk/sorts/radix_sort.fut:104:6-36\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:146:29-151:72\n   #6  /prelude/functional.fut:9:42-44\n   #7  bfastfinal.fut:124:50-167:9\n   #8  bfastfinal.fut:184:5-58\n   #9  bfastfinal.fut:179:1-185:32\n" % ("Index [",
i_31290,
out of bounds for array of shape [",
iota32_arg_31257,

    suff_outer_par_39491 = (self.sizes["main.suff_outer_par_34"] <= m_30871)
    fits_40005 = sle64(iota32_arg_31257, max_group_sizze_37553)
    suff_intra_par_40003 = (self.sizes["main.suff_intra_par_35"] <= iota32_arg_31257)
    intra_suff_and_fits_40006 = (suff_intra_par_40003 and fits_40005)
    segmap_group_sizze_39765 = self.sizes["main.segmap_group_size_39529"]
    segmap_group_sizze_41036 = self.sizes["main.segmap_group_size_41016"]
    max_num_groups_45913 = self.sizes["main.segmap_num_groups_41018"]
    num_groups_41037 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_30871,
                                                            segmap_group_sizze_41036),
                                                  sext_i32_i64(max_num_groups_45913))))
    nest_sizze_41058 = (m_30871 * iota32_arg_31257)
    segscan_group_sizze_41059 = self.sizes["main.segscan_group_size_40975"]
    max_num_groups_45914 = self.sizes["main.segscan_num_groups_40977"]
    num_groups_41060 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_41058,
                                                            segscan_group_sizze_41059),
                                                  sext_i32_i64(max_num_groups_45914))))
    segred_group_sizze_41097 = self.sizes["main.segred_group_size_40921"]
    max_num_groups_45915 = self.sizes["main.segred_num_groups_40923"]
    num_groups_41098 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_41058,
                                                            segred_group_sizze_41097),
                                                  sext_i32_i64(max_num_groups_45915))))
    segmap_group_sizze_41136 = self.sizes["main.segmap_group_size_40890"]
    segmap_group_sizze_41171 = self.sizes["main.segmap_group_size_40829"]
    suff_intra_par_41212 = (self.sizes["main.suff_intra_par_37"] <= iota32_arg_31257)
    intra_suff_and_fits_41213 = (fits_40005 and suff_intra_par_41212)
    segscan_group_sizze_41296 = self.sizes["main.segscan_group_size_40629"]
    max_num_groups_45916 = self.sizes["main.segscan_num_groups_40631"]
    num_groups_41297 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_41058,
                                                            segscan_group_sizze_41296),
                                                  sext_i32_i64(max_num_groups_45916))))
    segmap_group_sizze_41365 = self.sizes["main.segmap_group_size_40579"]
    segmap_group_sizze_41402 = self.sizes["main.segmap_group_size_40249"]
    segmap_usable_groups_41366 = sdiv_up_safe64(nest_sizze_41058,
                                                segmap_group_sizze_41365)
    bytes_44456 = (np.int64(8) * iota32_arg_31257)
    bytes_44599 = (np.int64(4) * nest_sizze_41058)
    bytes_44652 = (np.int64(8) * nest_sizze_41058)
    double_buffer_sizze_44848 = (np.int64(4) * iota32_arg_31257)
    double_buffer_sizze_44852 = (np.int64(4) * iota32_arg_31257)
    local_memory_capacity_46301 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_46301)) and suff_outer_par_39491):
      segmap_usable_groups_39766 = sdiv_up64(m_30871, segmap_group_sizze_39765)
      mem_44546 = opencl_alloc(self, bytes_44312, "mem_44546")
      mem_44548 = opencl_alloc(self, bytes_44312, "mem_44548")
      mem_44550 = opencl_alloc(self, bytes_44312, "mem_44550")
      num_threads_44964 = (segmap_group_sizze_39765 * segmap_usable_groups_39766)
      total_sizze_44965 = (bytes_44432 * num_threads_44964)
      mem_44438 = opencl_alloc(self, total_sizze_44965, "mem_44438")
      total_sizze_44966 = (bytes_44456 * num_threads_44964)
      mem_44457 = opencl_alloc(self, total_sizze_44966, "mem_44457")
      total_sizze_44967 = (bytes_44456 * num_threads_44964)
      mem_44459 = opencl_alloc(self, total_sizze_44967, "mem_44459")
      total_sizze_44968 = (bytes_44456 * num_threads_44964)
      mem_44461 = opencl_alloc(self, total_sizze_44968, "mem_44461")
      total_sizze_44969 = (bytes_44456 * num_threads_44964)
      mem_44463 = opencl_alloc(self, total_sizze_44969, "mem_44463")
      total_sizze_44970 = (bytes_44432 * num_threads_44964)
      mem_44465 = opencl_alloc(self, total_sizze_44970, "mem_44465")
      total_sizze_44971 = (bytes_44432 * num_threads_44964)
      mem_44527 = opencl_alloc(self, total_sizze_44971, "mem_44527")
      total_sizze_44972 = (double_buffer_sizze_44848 * num_threads_44964)
      double_buffer_mem_44846 = opencl_alloc(self, total_sizze_44972,
                                             "double_buffer_mem_44846")
      if ((1 * (np.long(segmap_usable_groups_39766) * np.long(segmap_group_sizze_39765))) != 0):
        self.mainzisegmap_39527_var.set_args(self.global_failure,
                                             self.failure_is_an_option,
                                             self.global_failure_args,
                                             np.int64(N_30870),
                                             np.int64(m_30871),
                                             np.int32(n_30875),
                                             np.int64(iota32_arg_31257),
                                             np.int32(iters_31288),
                                             np.int64(i_31290),
                                             np.int64(segmap_usable_groups_39766),
                                             defunc_4_map_res_mem_44331,
                                             defunc_4_map_res_mem_44332,
                                             defunc_4_map_res_mem_44333,
                                             defunc_3_map_res_mem_44395,
                                             defunc_3_map_res_mem_44396,
                                             defunc_3_map_res_mem_44397,
                                             defunc_0_f_res_mem_44430,
                                             mem_44435, mem_44438, mem_44457,
                                             mem_44459, mem_44461, mem_44463,
                                             mem_44465, mem_44527, mem_44546,
                                             mem_44548, mem_44550,
                                             double_buffer_mem_44846)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39527_var,
                                   ((np.long(segmap_usable_groups_39766) * np.long(segmap_group_sizze_39765)),),
                                   (np.long(segmap_group_sizze_39765),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      mem_44438 = None
      mem_44457 = None
      mem_44459 = None
      mem_44461 = None
      mem_44463 = None
      mem_44465 = None
      mem_44527 = None
      double_buffer_mem_44846 = None
      defunc_0_f_res_mem_44690 = mem_44546
      defunc_0_f_res_mem_44691 = mem_44548
      defunc_0_f_res_mem_44692 = mem_44550
    else:
      local_memory_capacity_46300 = self.max_local_memory
      if (sle64((((((((((((bytes_44432 + (np.int32(1) * iota32_arg_31257)) + (np.int32(4) * iota32_arg_31257)) + (np.int32(4) * iota32_arg_31257)) + bytes_44432) + bytes_44456) + bytes_44456) + bytes_44456) + bytes_44456) + bytes_44432) + double_buffer_sizze_44852) + bytes_44432),
                sext_i32_i64(local_memory_capacity_46300)) and intra_suff_and_fits_40006):
        mem_44588 = opencl_alloc(self, bytes_44312, "mem_44588")
        mem_44590 = opencl_alloc(self, bytes_44312, "mem_44590")
        mem_44592 = opencl_alloc(self, bytes_44312, "mem_44592")
        if ((1 * (np.long(m_30871) * np.long(iota32_arg_31257))) != 0):
          self.mainzisegmap_intragroup_39525_var.set_args(self.global_failure,
                                                          self.failure_is_an_option,
                                                          self.global_failure_args,
                                                          cl.LocalMemory(np.long(bytes_44432)),
                                                          cl.LocalMemory(np.long(double_buffer_sizze_44852)),
                                                          cl.LocalMemory(np.long(bytes_44432)),
                                                          cl.LocalMemory(np.long(bytes_44456)),
                                                          cl.LocalMemory(np.long(bytes_44456)),
                                                          cl.LocalMemory(np.long(bytes_44456)),
                                                          cl.LocalMemory(np.long(bytes_44456)),
                                                          cl.LocalMemory(np.long(bytes_44432)),
                                                          cl.LocalMemory(np.long((np.int32(4) * iota32_arg_31257))),
                                                          cl.LocalMemory(np.long((np.int32(4) * iota32_arg_31257))),
                                                          cl.LocalMemory(np.long((np.int32(1) * iota32_arg_31257))),
                                                          cl.LocalMemory(np.long(bytes_44432)),
                                                          np.int64(N_30870),
                                                          np.int32(n_30875),
                                                          np.int64(iota32_arg_31257),
                                                          np.int32(iters_31288),
                                                          np.int64(i_31290),
                                                          defunc_4_map_res_mem_44331,
                                                          defunc_4_map_res_mem_44332,
                                                          defunc_4_map_res_mem_44333,
                                                          defunc_3_map_res_mem_44395,
                                                          defunc_3_map_res_mem_44396,
                                                          defunc_3_map_res_mem_44397,
                                                          defunc_0_f_res_mem_44430,
                                                          mem_44435, mem_44588,
                                                          mem_44590, mem_44592)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_39525_var,
                                     ((np.long(m_30871) * np.long(iota32_arg_31257)),),
                                     (np.long(iota32_arg_31257),))
          if synchronous:
            sync(self)
        self.failure_is_an_option = np.int32(1)
        defunc_0_f_res_mem_44687 = mem_44588
        defunc_0_f_res_mem_44688 = mem_44590
        defunc_0_f_res_mem_44689 = mem_44592
      else:
        mem_44595 = opencl_alloc(self, bytes_44312, "mem_44595")
        mem_44597 = opencl_alloc(self, bytes_44312, "mem_44597")
        if ((1 * (np.long(num_groups_41037) * np.long(segmap_group_sizze_41036))) != 0):
          self.mainzisegmap_41014_var.set_args(self.global_failure,
                                               np.int64(m_30871),
                                               np.int64(num_groups_41037),
                                               defunc_4_map_res_mem_44331,
                                               defunc_3_map_res_mem_44396,
                                               defunc_3_map_res_mem_44397,
                                               mem_44595, mem_44597)
          cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_41014_var,
                                     ((np.long(num_groups_41037) * np.long(segmap_group_sizze_41036)),),
                                     (np.long(segmap_group_sizze_41036),))
          if synchronous:
            sync(self)
        mem_44601 = opencl_alloc(self, bytes_44599, "mem_44601")
        if slt64(np.int64(0), (m_30871 * iota32_arg_31257)):
          stage1_max_num_groups_45999 = self.max_group_size
          stage1_num_groups_46000 = smin64(stage1_max_num_groups_45999,
                                           num_groups_41060)
          num_threads_46001 = sext_i64_i32((stage1_num_groups_46000 * segscan_group_sizze_41059))
          if ((1 * (np.long(stage1_num_groups_46000) * np.long(segscan_group_sizze_41059))) != 0):
            self.mainziscan_stage1_40981_var.set_args(self.global_failure,
                                                      cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                    (np.int32(4) * segscan_group_sizze_41059)))),
                                                      np.int64(N_30870),
                                                      np.int64(m_30871),
                                                      np.int64(iota32_arg_31257),
                                                      defunc_4_map_res_mem_44332,
                                                      defunc_3_map_res_mem_44395,
                                                      defunc_3_map_res_mem_44396,
                                                      defunc_0_f_res_mem_44430,
                                                      mem_44597, mem_44601,
                                                      np.int32(num_threads_46001))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainziscan_stage1_40981_var,
                                       ((np.long(stage1_num_groups_46000) * np.long(segscan_group_sizze_41059)),),
                                       (np.long(segscan_group_sizze_41059),))
            if synchronous:
              sync(self)
          if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_46000))) != 0):
            self.mainziscan_stage2_40981_var.set_args(self.global_failure,
                                                      cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                    (np.int32(4) * stage1_num_groups_46000)))),
                                                      np.int64(m_30871),
                                                      np.int64(iota32_arg_31257),
                                                      mem_44601,
                                                      np.int64(stage1_num_groups_46000),
                                                      np.int32(num_threads_46001))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainziscan_stage2_40981_var,
                                       ((np.long(np.int64(1)) * np.long(stage1_num_groups_46000)),),
                                       (np.long(stage1_num_groups_46000),))
            if synchronous:
              sync(self)
          required_groups_46043 = sext_i64_i32(sdiv_up64((m_30871 * iota32_arg_31257),
                                                         segscan_group_sizze_41059))
          if ((1 * (np.long(num_groups_41060) * np.long(segscan_group_sizze_41059))) != 0):
            self.mainziscan_stage3_40981_var.set_args(self.global_failure,
                                                      np.int64(m_30871),
                                                      np.int64(iota32_arg_31257),
                                                      np.int64(num_groups_41060),
                                                      mem_44601,
                                                      np.int32(num_threads_46001),
                                                      np.int32(required_groups_46043))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainziscan_stage3_40981_var,
                                       ((np.long(num_groups_41060) * np.long(segscan_group_sizze_41059)),),
                                       (np.long(segscan_group_sizze_41059),))
            if synchronous:
              sync(self)
        mem_44604 = opencl_alloc(self, m_30871, "mem_44604")
        mem_44606 = opencl_alloc(self, bytes_44312, "mem_44606")
        mem_44608 = opencl_alloc(self, bytes_44312, "mem_44608")
        if slt64((iota32_arg_31257 * np.int64(2)), segred_group_sizze_41097):
          segment_sizze_nonzzero_46055 = smax64(np.int64(1), iota32_arg_31257)
          num_threads_46056 = (num_groups_41098 * segred_group_sizze_41097)
          if ((1 * (np.long(num_groups_41098) * np.long(segred_group_sizze_41097))) != 0):
            self.mainzisegred_small_40927_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_41097))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_41097))),
                                                       cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_41097))),
                                                       np.int64(m_30871),
                                                       np.int64(iota32_arg_31257),
                                                       np.int64(num_groups_41098),
                                                       mem_44435, mem_44595,
                                                       mem_44597, mem_44601,
                                                       mem_44604, mem_44606,
                                                       mem_44608,
                                                       np.int64(segment_sizze_nonzzero_46055))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_40927_var,
                                       ((np.long(num_groups_41098) * np.long(segred_group_sizze_41097)),),
                                       (np.long(segred_group_sizze_41097),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_46091 = sdiv_up64(num_groups_41098,
                                               smax64(np.int64(1), m_30871))
          elements_per_thread_46092 = sdiv_up64(iota32_arg_31257,
                                                (segred_group_sizze_41097 * groups_per_segment_46091))
          virt_num_groups_46093 = (groups_per_segment_46091 * m_30871)
          num_threads_46094 = (num_groups_41098 * segred_group_sizze_41097)
          threads_per_segment_46095 = (groups_per_segment_46091 * segred_group_sizze_41097)
          group_res_arr_mem_46096 = opencl_alloc(self,
                                                 (np.int32(1) * (segred_group_sizze_41097 * virt_num_groups_46093)),
                                                 "group_res_arr_mem_46096")
          group_res_arr_mem_46098 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_41097 * virt_num_groups_46093)),
                                                 "group_res_arr_mem_46098")
          group_res_arr_mem_46100 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_41097 * virt_num_groups_46093)),
                                                 "group_res_arr_mem_46100")
          mainzicounter_mem_46102 = self.mainzicounter_mem_46102
          if ((1 * (np.long(num_groups_41098) * np.long(segred_group_sizze_41097))) != 0):
            self.mainzisegred_large_40927_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_41097))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_41097))),
                                                       cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_41097))),
                                                       np.int64(iota32_arg_31257),
                                                       np.int64(num_groups_41098),
                                                       mem_44435, mem_44595,
                                                       mem_44597, mem_44601,
                                                       mem_44604, mem_44606,
                                                       mem_44608,
                                                       np.int64(groups_per_segment_46091),
                                                       np.int64(elements_per_thread_46092),
                                                       np.int64(virt_num_groups_46093),
                                                       group_res_arr_mem_46096,
                                                       group_res_arr_mem_46098,
                                                       group_res_arr_mem_46100,
                                                       mainzicounter_mem_46102)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_40927_var,
                                       ((np.long(num_groups_41098) * np.long(segred_group_sizze_41097)),),
                                       (np.long(segred_group_sizze_41097),))
            if synchronous:
              sync(self)
        mem_44595 = None
        mem_44601 = None
        segmap_usable_groups_41137 = sdiv_up64(m_30871,
                                               segmap_group_sizze_41136)
        mem_44611 = opencl_alloc(self, m_30871, "mem_44611")
        mem_44613 = opencl_alloc(self, bytes_44312, "mem_44613")
        mem_44615 = opencl_alloc(self, bytes_44312, "mem_44615")
        if ((1 * (np.long(segmap_usable_groups_41137) * np.long(segmap_group_sizze_41136))) != 0):
          self.mainzisegmap_40888_var.set_args(self.global_failure,
                                               np.int64(m_30871), mem_44597,
                                               mem_44604, mem_44606, mem_44608,
                                               mem_44611, mem_44613, mem_44615)
          cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40888_var,
                                     ((np.long(segmap_usable_groups_41137) * np.long(segmap_group_sizze_41136)),),
                                     (np.long(segmap_group_sizze_41136),))
          if synchronous:
            sync(self)
        mem_44604 = None
        mem_44606 = None
        mem_44608 = None
        segmap_usable_groups_41172 = sdiv_up64(nest_sizze_41058,
                                               segmap_group_sizze_41171)
        mem_44619 = opencl_alloc(self, bytes_44599, "mem_44619")
        if ((1 * (np.long(segmap_usable_groups_41172) * np.long(segmap_group_sizze_41171))) != 0):
          self.mainzisegmap_40826_var.set_args(self.global_failure,
                                               self.failure_is_an_option,
                                               self.global_failure_args,
                                               np.int64(N_30870),
                                               np.int64(m_30871),
                                               np.int64(iota32_arg_31257),
                                               defunc_4_map_res_mem_44332,
                                               defunc_3_map_res_mem_44396,
                                               mem_44597, mem_44619)
          cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40826_var,
                                     ((np.long(segmap_usable_groups_41172) * np.long(segmap_group_sizze_41171)),),
                                     (np.long(segmap_group_sizze_41171),))
          if synchronous:
            sync(self)
        self.failure_is_an_option = np.int32(1)
        mem_param_44627 = mem_44619
        i_41199 = np.int32(0)
        one_46358 = np.int32(1)
        for counter_46357 in range(iters_31288):
          defunc_2_radix_sort_step_arg_41201 = (np.int32(2) * i_41199)
          defunc_0_get_bit_arg_41202 = (np.int32(1) + defunc_2_radix_sort_step_arg_41201)
          cond_f_res_41203 = (defunc_0_get_bit_arg_41202 == np.int32(31))
          cond_f_res_41204 = (defunc_2_radix_sort_step_arg_41201 == np.int32(31))
          local_memory_capacity_46294 = self.max_local_memory
          if (sle64((((((bytes_44456 + bytes_44456) + bytes_44456) + bytes_44456) + bytes_44432) + bytes_44432),
                    sext_i32_i64(local_memory_capacity_46294)) and intra_suff_and_fits_41213):
            mem_44632 = opencl_alloc(self, bytes_44599, "mem_44632")
            self.futhark_builtinzhgpu_map_transpose_f32(mem_44632, np.int64(0),
                                                        mem_param_44627,
                                                        np.int64(0),
                                                        np.int64(1),
                                                        iota32_arg_31257,
                                                        m_30871)
            mem_44650 = opencl_alloc(self, bytes_44599, "mem_44650")
            if ((1 * (np.long(m_30871) * np.long(iota32_arg_31257))) != 0):
              self.mainzisegmap_intragroup_40311_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long(bytes_44432)),
                                                              cl.LocalMemory(np.long(bytes_44432)),
                                                              cl.LocalMemory(np.long(bytes_44456)),
                                                              cl.LocalMemory(np.long(bytes_44456)),
                                                              cl.LocalMemory(np.long(bytes_44456)),
                                                              cl.LocalMemory(np.long(bytes_44456)),
                                                              np.int64(m_30871),
                                                              np.int64(iota32_arg_31257),
                                                              np.int64(i_31290),
                                                              np.int32(defunc_2_radix_sort_step_arg_41201),
                                                              np.int32(defunc_0_get_bit_arg_41202),
                                                              np.byte(cond_f_res_41203),
                                                              np.byte(cond_f_res_41204),
                                                              mem_param_44627,
                                                              mem_44632,
                                                              mem_44650)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainzisegmap_intragroup_40311_var,
                                         ((np.long(m_30871) * np.long(iota32_arg_31257)),),
                                         (np.long(iota32_arg_31257),))
              if synchronous:
                sync(self)
            mem_44632 = None
            defunc_2_radix_sort_res_mem_44671 = mem_44650
          else:
            mem_44654 = opencl_alloc(self, bytes_44652, "mem_44654")
            mem_44657 = opencl_alloc(self, bytes_44652, "mem_44657")
            mem_44660 = opencl_alloc(self, bytes_44652, "mem_44660")
            mem_44663 = opencl_alloc(self, bytes_44652, "mem_44663")
            mem_44666 = opencl_alloc(self, bytes_44599, "mem_44666")
            if slt64(np.int64(0), (m_30871 * iota32_arg_31257)):
              stage1_max_num_groups_46194 = self.max_group_size
              stage1_num_groups_46195 = smin64(stage1_max_num_groups_46194,
                                               num_groups_41297)
              num_threads_46196 = sext_i64_i32((stage1_num_groups_46195 * segscan_group_sizze_41296))
              if ((1 * (np.long(stage1_num_groups_46195) * np.long(segscan_group_sizze_41296))) != 0):
                self.mainziscan_stage1_40635_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                        (np.int32(8) * segscan_group_sizze_41296)))),
                                                          cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                        (np.int32(8) * segscan_group_sizze_41296)))),
                                                          cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                        (np.int32(8) * segscan_group_sizze_41296)))),
                                                          cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                        (np.int32(8) * segscan_group_sizze_41296)))),
                                                          np.int64(m_30871),
                                                          np.int64(iota32_arg_31257),
                                                          np.int32(defunc_2_radix_sort_step_arg_41201),
                                                          np.int32(defunc_0_get_bit_arg_41202),
                                                          np.byte(cond_f_res_41203),
                                                          np.byte(cond_f_res_41204),
                                                          mem_param_44627,
                                                          mem_44654, mem_44657,
                                                          mem_44660, mem_44663,
                                                          mem_44666,
                                                          np.int32(num_threads_46196))
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.mainziscan_stage1_40635_var,
                                           ((np.long(stage1_num_groups_46195) * np.long(segscan_group_sizze_41296)),),
                                           (np.long(segscan_group_sizze_41296),))
                if synchronous:
                  sync(self)
              if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_46195))) != 0):
                self.mainziscan_stage2_40635_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                        (np.int32(8) * stage1_num_groups_46195)))),
                                                          cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                        (np.int32(8) * stage1_num_groups_46195)))),
                                                          cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                        (np.int32(8) * stage1_num_groups_46195)))),
                                                          cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                        (np.int32(8) * stage1_num_groups_46195)))),
                                                          np.int64(m_30871),
                                                          np.int64(iota32_arg_31257),
                                                          mem_44654, mem_44657,
                                                          mem_44660, mem_44663,
                                                          np.int64(stage1_num_groups_46195),
                                                          np.int32(num_threads_46196))
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.mainziscan_stage2_40635_var,
                                           ((np.long(np.int64(1)) * np.long(stage1_num_groups_46195)),),
                                           (np.long(stage1_num_groups_46195),))
                if synchronous:
                  sync(self)
              required_groups_46277 = sext_i64_i32(sdiv_up64((m_30871 * iota32_arg_31257),
                                                             segscan_group_sizze_41296))
              if ((1 * (np.long(num_groups_41297) * np.long(segscan_group_sizze_41296))) != 0):
                self.mainziscan_stage3_40635_var.set_args(self.global_failure,
                                                          np.int64(m_30871),
                                                          np.int64(iota32_arg_31257),
                                                          np.int64(num_groups_41297),
                                                          mem_44654, mem_44657,
                                                          mem_44660, mem_44663,
                                                          np.int32(num_threads_46196),
                                                          np.int32(required_groups_46277))
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.mainziscan_stage3_40635_var,
                                           ((np.long(num_groups_41297) * np.long(segscan_group_sizze_41296)),),
                                           (np.long(segscan_group_sizze_41296),))
                if synchronous:
                  sync(self)
            mem_44669 = opencl_alloc(self, bytes_44599, "mem_44669")
            if (((m_30871 * iota32_arg_31257) * np.int32(4)) != 0):
              cl.enqueue_copy(self.queue, mem_44669, mem_param_44627,
                              dest_offset=np.long(np.int64(0)),
                              src_offset=np.long(np.int64(0)),
                              byte_count=np.long(((m_30871 * iota32_arg_31257) * np.int32(4))))
            if synchronous:
              sync(self)
            if ((1 * (np.long(segmap_usable_groups_41366) * np.long(segmap_group_sizze_41365))) != 0):
              self.mainzisegmap_40576_var.set_args(self.global_failure,
                                                   np.int64(m_30871),
                                                   np.int64(iota32_arg_31257),
                                                   np.int64(i_31290),
                                                   mem_param_44627, mem_44654,
                                                   mem_44657, mem_44660,
                                                   mem_44663, mem_44666,
                                                   mem_44669)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainzisegmap_40576_var,
                                         ((np.long(segmap_usable_groups_41366) * np.long(segmap_group_sizze_41365)),),
                                         (np.long(segmap_group_sizze_41365),))
              if synchronous:
                sync(self)
            mem_44654 = None
            mem_44657 = None
            mem_44660 = None
            mem_44663 = None
            mem_44666 = None
            defunc_2_radix_sort_res_mem_44671 = mem_44669
          mem_param_tmp_46163 = defunc_2_radix_sort_res_mem_44671
          mem_param_44627 = mem_param_tmp_46163
          i_41199 += one_46358
        defunc_2_radix_sort_res_r_mem_44681 = mem_param_44627
        mem_44619 = None
        segmap_usable_groups_41403 = sdiv_up64(m_30871,
                                               segmap_group_sizze_41402)
        mem_44684 = opencl_alloc(self, bytes_44312, "mem_44684")
        mem_44686 = opencl_alloc(self, bytes_44312, "mem_44686")
        if ((1 * (np.long(segmap_usable_groups_41403) * np.long(segmap_group_sizze_41402))) != 0):
          self.mainzisegmap_40247_var.set_args(self.global_failure,
                                               self.failure_is_an_option,
                                               self.global_failure_args,
                                               np.int64(N_30870),
                                               np.int64(m_30871),
                                               np.int32(n_30875),
                                               np.int64(iota32_arg_31257),
                                               defunc_4_map_res_mem_44331,
                                               defunc_4_map_res_mem_44333,
                                               defunc_3_map_res_mem_44396,
                                               mem_44597, mem_44611, mem_44613,
                                               defunc_2_radix_sort_res_r_mem_44681,
                                               mem_44684, mem_44686)
          cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40247_var,
                                     ((np.long(segmap_usable_groups_41403) * np.long(segmap_group_sizze_41402)),),
                                     (np.long(segmap_group_sizze_41402),))
          if synchronous:
            sync(self)
        self.failure_is_an_option = np.int32(1)
        mem_44597 = None
        mem_44611 = None
        mem_44613 = None
        defunc_2_radix_sort_res_r_mem_44681 = None
        defunc_0_f_res_mem_44687 = mem_44684
        defunc_0_f_res_mem_44688 = mem_44615
        defunc_0_f_res_mem_44689 = mem_44686
      defunc_0_f_res_mem_44690 = defunc_0_f_res_mem_44687
      defunc_0_f_res_mem_44691 = defunc_0_f_res_mem_44688
      defunc_0_f_res_mem_44692 = defunc_0_f_res_mem_44689
    defunc_4_map_res_mem_44331 = None
    defunc_4_map_res_mem_44332 = None
    defunc_4_map_res_mem_44333 = None
    defunc_3_map_res_mem_44395 = None
    defunc_3_map_res_mem_44396 = None
    defunc_3_map_res_mem_44397 = None
    defunc_0_f_res_mem_44430 = None
    mem_44435 = None
    out_arrsizze_44984 = m_30871
    out_arrsizze_44986 = m_30871
    out_arrsizze_44988 = m_30871
    out_mem_44983 = defunc_0_f_res_mem_44690
    out_mem_44985 = defunc_0_f_res_mem_44691
    out_mem_44987 = defunc_0_f_res_mem_44692
    return (out_mem_44983, out_arrsizze_44984, out_mem_44985,
            out_arrsizze_44986, out_mem_44987, out_arrsizze_44988)
  def futhark_mainDetailed(self, mappingindices_mem_43531, images_mem_43532,
                           N_30123, m_30124, N_30125, trend_30126, k_30127,
                           n_30128, freq_30129, hfrac_30130, lam_30131):
    dim_match_30134 = (N_30123 == N_30125)
    empty_or_match_cert_30135 = True
    assert dim_match_30134, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:173:1-177:56\n" % ("function arguments of wrong shape",))
    i32_res_30137 = sext_i32_i64(n_30128)
    x_30138 = (np.int32(2) * k_30127)
    k2p2_30139 = (np.int32(2) + x_30138)
    cond_30140 = slt32(np.int32(0), trend_30126)
    if cond_30140:
      k2p2zq_30141 = k2p2_30139
    else:
      k2p2zq_f_res_30142 = (k2p2_30139 - np.int32(1))
      k2p2zq_30141 = k2p2zq_f_res_30142
    i32_res_30143 = sext_i32_i64(k2p2zq_30141)
    binop_x_43535 = (N_30123 * i32_res_30143)
    bytes_43534 = (np.int64(4) * binop_x_43535)
    if cond_30140:
      bounds_invalid_upwards_30145 = slt64(i32_res_30143, np.int64(0))
      valid_30146 = not(bounds_invalid_upwards_30145)
      range_valid_c_30147 = True
      assert valid_30146, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:37:10-20\n   #3  bfastfinal.fut:34:17-66\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_30143,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_31863 = self.sizes["mainDetailed.segmap_group_size_31793"]
      segmap_usable_groups_31864 = sdiv_up64(binop_x_43535,
                                             segmap_group_sizze_31863)
      mem_43536 = opencl_alloc(self, bytes_43534, "mem_43536")
      if ((1 * (np.long(segmap_usable_groups_31864) * np.long(segmap_group_sizze_31863))) != 0):
        self.mainDetailedzisegmap_31790_var.set_args(self.global_failure,
                                                     np.int64(N_30123),
                                                     np.float32(freq_30129),
                                                     np.int64(i32_res_30143),
                                                     mappingindices_mem_43531,
                                                     mem_43536)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31790_var,
                                   ((np.long(segmap_usable_groups_31864) * np.long(segmap_group_sizze_31863)),),
                                   (np.long(segmap_group_sizze_31863),))
        if synchronous:
          sync(self)
      binop_p_mem_43541 = mem_43536
    else:
      bounds_invalid_upwards_30171 = slt64(i32_res_30143, np.int64(0))
      valid_30172 = not(bounds_invalid_upwards_30171)
      range_valid_c_30173 = True
      assert valid_30172, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:49:10-22\n   #3  bfastfinal.fut:35:17-64\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_30143,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_32037 = self.sizes["mainDetailed.segmap_group_size_31971"]
      segmap_usable_groups_32038 = sdiv_up64(binop_x_43535,
                                             segmap_group_sizze_32037)
      mem_43540 = opencl_alloc(self, bytes_43534, "mem_43540")
      if ((1 * (np.long(segmap_usable_groups_32038) * np.long(segmap_group_sizze_32037))) != 0):
        self.mainDetailedzisegmap_31968_var.set_args(self.global_failure,
                                                     np.int64(N_30123),
                                                     np.float32(freq_30129),
                                                     np.int64(i32_res_30143),
                                                     mappingindices_mem_43531,
                                                     mem_43540)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31968_var,
                                   ((np.long(segmap_usable_groups_32038) * np.long(segmap_group_sizze_32037)),),
                                   (np.long(segmap_group_sizze_32037),))
        if synchronous:
          sync(self)
      binop_p_mem_43541 = mem_43540
    x_30196 = (N_30123 * N_30123)
    y_30197 = (np.int64(2) * N_30123)
    x_30198 = (x_30196 + y_30197)
    x_30199 = (np.int64(1) + x_30198)
    y_30200 = (np.int64(1) + N_30123)
    zzero_30201 = (y_30200 == np.int64(0))
    nonzzero_30202 = not(zzero_30201)
    nonzzero_cert_30203 = True
    assert nonzzero_30202, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:41:32-60\n   #1  bfastfinal.fut:177:3-56\n   #2  bfastfinal.fut:173:1-177:56\n" % ("division by zero",))
    x_30204 = sdiv64(x_30199, y_30200)
    x_30205 = (x_30204 - N_30123)
    binop_p_30206 = (x_30205 - np.int64(1))
    defunc_0_f_res_30207 = sext_i64_i32(binop_p_30206)
    i32_res_30208 = sitofp_i32_f32(defunc_0_f_res_30207)
    segmap_group_sizze_32120 = self.sizes["mainDetailed.segmap_group_size_32099"]
    segmap_usable_groups_32121 = sdiv_up64(binop_x_43535,
                                           segmap_group_sizze_32120)
    mem_43544 = opencl_alloc(self, bytes_43534, "mem_43544")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_43544, np.int64(0),
                                                binop_p_mem_43541, np.int64(0),
                                                np.int64(1), N_30123,
                                                i32_res_30143)
    mem_43548 = opencl_alloc(self, bytes_43534, "mem_43548")
    if ((1 * (np.long(segmap_usable_groups_32121) * np.long(segmap_group_sizze_32120))) != 0):
      self.mainDetailedzisegmap_32096_var.set_args(self.global_failure,
                                                   np.int64(N_30123),
                                                   np.int64(i32_res_30143),
                                                   np.float32(i32_res_30208),
                                                   mem_43544, mem_43548)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_32096_var,
                                 ((np.long(segmap_usable_groups_32121) * np.long(segmap_group_sizze_32120)),),
                                 (np.long(segmap_group_sizze_32120),))
      if synchronous:
        sync(self)
    eq_x_y_30216 = (np.int64(0) == i32_res_30143)
    p_and_eq_x_y_30217 = (cond_30140 and eq_x_y_30216)
    not_p_30218 = not(cond_30140)
    p_and_eq_x_y_30219 = (eq_x_y_30216 and not_p_30218)
    empty_slice_30220 = (p_and_eq_x_y_30217 or p_and_eq_x_y_30219)
    m_30221 = (i32_res_30143 - np.int64(1))
    zzero_leq_i_p_m_t_s_30222 = sle64(np.int64(0), m_30221)
    i_p_m_t_s_leq_w_30223 = slt64(m_30221, i32_res_30143)
    i_lte_j_30224 = sle64(np.int64(0), i32_res_30143)
    y_30225 = (zzero_leq_i_p_m_t_s_30222 and i_p_m_t_s_leq_w_30223)
    y_30226 = (i_lte_j_30224 and y_30225)
    ok_or_empty_30227 = (empty_slice_30220 or y_30226)
    empty_slice_30228 = (i32_res_30137 == np.int64(0))
    m_30229 = (i32_res_30137 - np.int64(1))
    zzero_leq_i_p_m_t_s_30230 = sle64(np.int64(0), m_30229)
    i_p_m_t_s_leq_w_30231 = slt64(m_30229, N_30123)
    i_lte_j_30232 = sle64(np.int64(0), i32_res_30137)
    y_30233 = (zzero_leq_i_p_m_t_s_30230 and i_p_m_t_s_leq_w_30231)
    y_30234 = (i_lte_j_30232 and y_30233)
    ok_or_empty_30235 = (empty_slice_30228 or y_30234)
    index_ok_30236 = (ok_or_empty_30227 and ok_or_empty_30235)
    index_certs_30237 = True
    assert index_ok_30236, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:44:15-23\n   #1  bfastfinal.fut:177:3-56\n   #2  bfastfinal.fut:173:1-177:56\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_30137,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               i32_res_30143,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_30123,
                                                                                                                                                                               "]."))
    empty_slice_30239 = (i32_res_30143 == np.int64(0))
    ok_or_empty_30240 = (y_30226 or empty_slice_30239)
    index_ok_30241 = (ok_or_empty_30235 and ok_or_empty_30240)
    index_certs_30242 = True
    assert index_ok_30241, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:45:15-24\n   #1  bfastfinal.fut:177:3-56\n   #2  bfastfinal.fut:173:1-177:56\n" % ("Index [:",
                                                                                                                                                                               i32_res_30137,
                                                                                                                                                                               ", ",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":] out of bounds for array of shape [",
                                                                                                                                                                               N_30123,
                                                                                                                                                                               "][",
                                                                                                                                                                               i32_res_30143,
                                                                                                                                                                               "]."))
    empty_slice_30244 = (m_30124 == np.int64(0))
    m_30245 = (m_30124 - np.int64(1))
    zzero_leq_i_p_m_t_s_30246 = sle64(np.int64(0), m_30245)
    i_p_m_t_s_leq_w_30247 = slt64(m_30245, m_30124)
    i_lte_j_30248 = sle64(np.int64(0), m_30124)
    y_30249 = (zzero_leq_i_p_m_t_s_30246 and i_p_m_t_s_leq_w_30247)
    y_30250 = (i_lte_j_30248 and y_30249)
    ok_or_empty_30251 = (empty_slice_30244 or y_30250)
    index_ok_30252 = (ok_or_empty_30235 and ok_or_empty_30251)
    index_certs_30253 = True
    assert index_ok_30252, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:46:15-28\n   #1  bfastfinal.fut:177:3-56\n   #2  bfastfinal.fut:173:1-177:56\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_30137,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               m_30124,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_30123,
                                                                                                                                                                               "]."))
    suff_outer_par_32127 = (self.sizes["mainDetailed.suff_outer_par_6"] <= m_30124)
    segmap_group_sizze_32153 = self.sizes["mainDetailed.segmap_group_size_32131"]
    max_num_groups_45026 = self.sizes["mainDetailed.segmap_num_groups_32133"]
    num_groups_32154 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_30124,
                                                            segmap_group_sizze_32153),
                                                  sext_i32_i64(max_num_groups_45026))))
    nest_sizze_32329 = (m_30124 * i32_res_30143)
    segmap_group_sizze_32330 = self.sizes["mainDetailed.segmap_group_size_32178"]
    max_num_groups_45027 = self.sizes["mainDetailed.segmap_num_groups_32180"]
    num_groups_32331 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_32329,
                                                            segmap_group_sizze_32330),
                                                  sext_i32_i64(max_num_groups_45027))))
    suff_outer_par_32335 = (self.sizes["mainDetailed.suff_outer_par_7"] <= nest_sizze_32329)
    y_32359 = (i32_res_30143 * i32_res_30143)
    comparatee_32360 = (m_30124 * y_32359)
    suff_outer_par_32361 = (self.sizes["mainDetailed.suff_outer_par_8"] <= comparatee_32360)
    nest_sizze_32381 = (i32_res_30137 * comparatee_32360)
    segred_group_sizze_32382 = self.sizes["mainDetailed.segred_group_size_32238"]
    max_num_groups_45028 = self.sizes["mainDetailed.segred_num_groups_32240"]
    num_groups_32383 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_32381,
                                                            segred_group_sizze_32382),
                                                  sext_i32_i64(max_num_groups_45028))))
    Tx_41627 = self.sizes["mainDetailed.Tx_41625"]
    Ty_41628 = self.sizes["mainDetailed.Ty_41626"]
    Ty_41629 = smin64(i32_res_30143, Ty_41628)
    Tx_41630 = smin64(i32_res_30143, Tx_41627)
    gridDim_zz_41633 = sdiv_up64(m_30124, np.int64(30))
    group_sizze_41636 = (Ty_41629 * Tx_41630)
    binop_x_43550 = (m_30124 * N_30125)
    bytes_43549 = (np.int64(4) * binop_x_43550)
    bytes_43594 = (np.int64(4) * comparatee_32360)
    bytes_43553 = (np.int64(4) * y_32359)
    binop_x_43697 = (i32_res_30143 * nest_sizze_32329)
    bytes_43695 = (np.int64(4) * binop_x_43697)
    bytes_43599 = (np.int64(4) * i32_res_30143)
    binop_x_43628 = (np.int64(30) * group_sizze_41636)
    bytes_43626 = (np.int64(4) * binop_x_43628)
    binop_x_44758 = (np.int64(4) * Ty_41629)
    binop_x_44759 = (Tx_41630 * binop_x_44758)
    sizze_44760 = (np.int64(30) * binop_x_44759)
    num_threads_44862 = (segmap_group_sizze_32153 * num_groups_32154)
    total_sizze_44863 = (bytes_43553 * num_threads_44862)
    num_threads_44864 = (segmap_group_sizze_32330 * num_groups_32331)
    total_sizze_44865 = (bytes_43599 * num_threads_44864)
    local_memory_capacity_45150 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_45150)) and suff_outer_par_32127):
      mem_43551 = opencl_alloc(self, bytes_43549, "mem_43551")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43551, np.int64(0),
                                                  images_mem_43532, np.int64(0),
                                                  np.int64(1), N_30125, m_30124)
      mem_43597 = opencl_alloc(self, bytes_43594, "mem_43597")
      mem_43555 = opencl_alloc(self, total_sizze_44863, "mem_43555")
      if ((1 * (np.long(num_groups_32154) * np.long(segmap_group_sizze_32153))) != 0):
        self.mainDetailedzisegmap_32129_var.set_args(self.global_failure,
                                                     np.int64(N_30123),
                                                     np.int64(m_30124),
                                                     np.int32(n_30128),
                                                     np.int32(k2p2zq_30141),
                                                     np.int64(i32_res_30143),
                                                     np.int64(num_groups_32154),
                                                     binop_p_mem_43541,
                                                     mem_43548, mem_43551,
                                                     mem_43555, mem_43597)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_32129_var,
                                   ((np.long(num_groups_32154) * np.long(segmap_group_sizze_32153)),),
                                   (np.long(segmap_group_sizze_32153),))
        if synchronous:
          sync(self)
      mem_43551 = None
      mem_43555 = None
      mem_43698 = opencl_alloc(self, bytes_43695, "mem_43698")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43698, np.int64(0),
                                                  mem_43597, np.int64(0),
                                                  np.int64(1), m_30124,
                                                  (i32_res_30143 * i32_res_30143))
      mem_43597 = None
      defunc_3_map_res_mem_43700 = mem_43698
    else:
      local_memory_capacity_45149 = self.max_local_memory
      if (sle64(np.int64(0),
                sext_i32_i64(local_memory_capacity_45149)) and suff_outer_par_32335):
        mem_43616 = opencl_alloc(self, bytes_43695, "mem_43616")
        mem_43600 = opencl_alloc(self, total_sizze_44865, "mem_43600")
        if ((1 * (np.long(num_groups_32331) * np.long(segmap_group_sizze_32330))) != 0):
          self.mainDetailedzisegmap_32175_var.set_args(self.global_failure,
                                                       np.int64(m_30124),
                                                       np.int64(N_30125),
                                                       np.int32(n_30128),
                                                       np.int32(k2p2zq_30141),
                                                       np.int64(i32_res_30143),
                                                       np.int64(num_groups_32331),
                                                       images_mem_43532,
                                                       mem_43544, mem_43548,
                                                       mem_43600, mem_43616)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_32175_var,
                                     ((np.long(num_groups_32331) * np.long(segmap_group_sizze_32330)),),
                                     (np.long(segmap_group_sizze_32330),))
          if synchronous:
            sync(self)
        mem_43600 = None
        mem_43692 = opencl_alloc(self, bytes_43695, "mem_43692")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43692, np.int64(0),
                                                    mem_43616, np.int64(0),
                                                    np.int64(1),
                                                    (m_30124 * i32_res_30143),
                                                    i32_res_30143)
        mem_43616 = None
        defunc_3_map_res_mem_43694 = mem_43692
      else:
        local_memory_capacity_45148 = self.max_local_memory
        if (sle64(np.int64(120),
                  sext_i32_i64(local_memory_capacity_45148)) and suff_outer_par_32361):
          mem_43619 = opencl_alloc(self, bytes_43549, "mem_43619")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_43619, np.int64(0),
                                                      images_mem_43532,
                                                      np.int64(0), np.int64(1),
                                                      N_30125, m_30124)
          gridDim_x_41631 = sdiv_up64(i32_res_30143, Tx_41630)
          gridDim_y_41632 = sdiv_up64(i32_res_30143, Ty_41629)
          binop_x_41634 = (gridDim_y_41632 * gridDim_zz_41633)
          grid_sizze_41635 = (gridDim_x_41631 * binop_x_41634)
          count_shmem_41637 = sdiv_up64(np.int64(30), group_sizze_41636)
          mem_43679 = opencl_alloc(self, bytes_43695, "mem_43679")
          if ((1 * (np.long(grid_sizze_41635) * np.long(group_sizze_41636))) != 0):
            self.mainDetailedzisegmap_intragroup_41641_var.set_args(self.global_failure,
                                                                    cl.LocalMemory(np.long(np.int64(120))),
                                                                    np.int64(m_30124),
                                                                    np.int32(n_30128),
                                                                    np.int64(i32_res_30143),
                                                                    np.int64(Ty_41629),
                                                                    np.int64(Tx_41630),
                                                                    np.int64(gridDim_x_41631),
                                                                    np.int64(gridDim_y_41632),
                                                                    np.int64(group_sizze_41636),
                                                                    np.int64(count_shmem_41637),
                                                                    mem_43544,
                                                                    mem_43548,
                                                                    mem_43619,
                                                                    mem_43679)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_intragroup_41641_var,
                                       ((np.long(grid_sizze_41635) * np.long(group_sizze_41636)),),
                                       (np.long(group_sizze_41636),))
            if synchronous:
              sync(self)
          mem_43619 = None
          defunc_3_map_res_mem_43688 = mem_43679
        else:
          mem_43682 = opencl_alloc(self, bytes_43534, "mem_43682")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_43682, np.int64(0),
                                                      mem_43548, np.int64(0),
                                                      np.int64(1),
                                                      i32_res_30143, N_30123)
          mem_43687 = opencl_alloc(self, bytes_43695, "mem_43687")
          if slt64((i32_res_30137 * np.int64(2)), segred_group_sizze_32382):
            segment_sizze_nonzzero_45088 = smax64(np.int64(1), i32_res_30137)
            num_threads_45089 = (num_groups_32383 * segred_group_sizze_32382)
            if ((1 * (np.long(num_groups_32383) * np.long(segred_group_sizze_32382))) != 0):
              self.mainDetailedzisegred_small_32244_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32382))),
                                                                 np.int64(N_30123),
                                                                 np.int64(m_30124),
                                                                 np.int64(N_30125),
                                                                 np.int64(i32_res_30137),
                                                                 np.int64(i32_res_30143),
                                                                 np.int64(num_groups_32383),
                                                                 images_mem_43532,
                                                                 binop_p_mem_43541,
                                                                 mem_43682,
                                                                 mem_43687,
                                                                 np.int64(segment_sizze_nonzzero_45088))
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainDetailedzisegred_small_32244_var,
                                         ((np.long(num_groups_32383) * np.long(segred_group_sizze_32382)),),
                                         (np.long(segred_group_sizze_32382),))
              if synchronous:
                sync(self)
          else:
            groups_per_segment_45109 = sdiv_up64(num_groups_32383,
                                                 smax64(np.int64(1),
                                                        ((m_30124 * i32_res_30143) * i32_res_30143)))
            elements_per_thread_45110 = sdiv_up64(i32_res_30137,
                                                  (segred_group_sizze_32382 * groups_per_segment_45109))
            virt_num_groups_45111 = (groups_per_segment_45109 * ((m_30124 * i32_res_30143) * i32_res_30143))
            num_threads_45112 = (num_groups_32383 * segred_group_sizze_32382)
            threads_per_segment_45113 = (groups_per_segment_45109 * segred_group_sizze_32382)
            group_res_arr_mem_45114 = opencl_alloc(self,
                                                   (np.int32(4) * (segred_group_sizze_32382 * virt_num_groups_45111)),
                                                   "group_res_arr_mem_45114")
            mainDetailedzicounter_mem_45116 = self.mainDetailedzicounter_mem_45116
            if ((1 * (np.long(num_groups_32383) * np.long(segred_group_sizze_32382))) != 0):
              self.mainDetailedzisegred_large_32244_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(np.int32(1))),
                                                                 cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32382))),
                                                                 np.int64(N_30123),
                                                                 np.int64(N_30125),
                                                                 np.int64(i32_res_30137),
                                                                 np.int64(i32_res_30143),
                                                                 np.int64(num_groups_32383),
                                                                 images_mem_43532,
                                                                 binop_p_mem_43541,
                                                                 mem_43682,
                                                                 mem_43687,
                                                                 np.int64(groups_per_segment_45109),
                                                                 np.int64(elements_per_thread_45110),
                                                                 np.int64(virt_num_groups_45111),
                                                                 np.int64(threads_per_segment_45113),
                                                                 group_res_arr_mem_45114,
                                                                 mainDetailedzicounter_mem_45116)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainDetailedzisegred_large_32244_var,
                                         ((np.long(num_groups_32383) * np.long(segred_group_sizze_32382)),),
                                         (np.long(segred_group_sizze_32382),))
              if synchronous:
                sync(self)
          mem_43682 = None
          defunc_3_map_res_mem_43688 = mem_43687
        defunc_3_map_res_mem_43694 = defunc_3_map_res_mem_43688
      defunc_3_map_res_mem_43700 = defunc_3_map_res_mem_43694
    m_30274 = (np.int64(2) * i32_res_30143)
    nm_30275 = (i32_res_30143 * m_30274)
    bounds_invalid_upwards_30276 = slt64(nm_30275, np.int64(0))
    valid_30277 = not(bounds_invalid_upwards_30276)
    range_valid_c_30278 = True
    assert valid_30277, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:77:21-27\n   #2  bfastfinal.fut:56:35-50\n   #3  bfastfinal.fut:177:3-56\n   #4  bfastfinal.fut:173:1-177:56\n" % ("Range ",
                                                                                                                                                                                                                                        np.int64(0),
                                                                                                                                                                                                                                        "..",
                                                                                                                                                                                                                                        np.int64(1),
                                                                                                                                                                                                                                        "..<",
                                                                                                                                                                                                                                        nm_30275,
                                                                                                                                                                                                                                        " is invalid."))
    zzero_30280 = (m_30274 == np.int64(0))
    nonzzero_30281 = not(zzero_30280)
    nonzzero_cert_30282 = True
    assert nonzzero_30281, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:72:41-47\n   #1  helpers.fut:72:14-77:28\n   #2  bfastfinal.fut:56:35-50\n   #3  bfastfinal.fut:177:3-56\n   #4  bfastfinal.fut:173:1-177:56\n" % ("division by zero",))
    i64_res_30283 = sext_i64_i32(m_30274)
    loop_nonempty_30284 = slt32(np.int32(0), k2p2zq_30141)
    zzero_30285 = (i64_res_30283 == np.int32(0))
    nonzzero_30286 = not(zzero_30285)
    loop_not_taken_30287 = not(loop_nonempty_30284)
    protect_assert_disj_30288 = (nonzzero_30286 or loop_not_taken_30287)
    nonzzero_cert_30289 = True
    assert protect_assert_disj_30288, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:59:43-49\n   #1  helpers.fut:59:16-65:32\n   #2  helpers.fut:78:15-53\n   #3  bfastfinal.fut:56:35-50\n   #4  bfastfinal.fut:177:3-56\n   #5  bfastfinal.fut:173:1-177:56\n" % ("division by zero",))
    y_32462 = smin64(i32_res_30143, nm_30275)
    intra_avail_par_32463 = smin64(y_32359, y_32462)
    y_32464 = smax64(i32_res_30143, nm_30275)
    computed_group_sizze_32406 = smax64(y_32359, y_32464)
    max_group_sizze_32597 = self.max_group_size
    fits_32598 = sle64(computed_group_sizze_32406, max_group_sizze_32597)
    suff_intra_par_32596 = (self.sizes["mainDetailed.suff_intra_par_10"] <= intra_avail_par_32463)
    intra_suff_and_fits_32599 = (suff_intra_par_32596 and fits_32598)
    nest_sizze_33180 = (m_30124 * nm_30275)
    segmap_group_sizze_33181 = self.sizes["mainDetailed.segmap_group_size_33144"]
    fits_33208 = sle64(nm_30275, max_group_sizze_32597)
    suff_intra_par_33210 = (self.sizes["mainDetailed.suff_intra_par_14"] <= nm_30275)
    intra_suff_and_fits_33211 = (fits_33208 and suff_intra_par_33210)
    segmap_group_sizze_33247 = self.sizes["mainDetailed.segmap_group_size_33052"]
    segmap_group_sizze_33263 = self.sizes["mainDetailed.segmap_group_size_32985"]
    segmap_group_sizze_33297 = self.sizes["mainDetailed.segmap_group_size_32931"]
    segmap_group_sizze_33332 = self.sizes["mainDetailed.segmap_group_size_32713"]
    segmap_usable_groups_33248 = sdiv_up_safe64(m_30124,
                                                segmap_group_sizze_33247)
    segmap_usable_groups_33264 = sdiv_up_safe64(nest_sizze_33180,
                                                segmap_group_sizze_33263)
    segmap_usable_groups_33298 = sdiv_up_safe64(nest_sizze_33180,
                                                segmap_group_sizze_33297)
    bytes_43703 = (np.int64(4) * nm_30275)
    bytes_43730 = (np.int64(4) * nest_sizze_33180)
    local_memory_capacity_45215 = self.max_local_memory
    if (sle64(((bytes_43703 + bytes_43703) + bytes_43553),
              sext_i32_i64(local_memory_capacity_45215)) and intra_suff_and_fits_32599):
      mem_43728 = opencl_alloc(self, bytes_43695, "mem_43728")
      if ((1 * (np.long(m_30124) * np.long(computed_group_sizze_32406))) != 0):
        self.mainDetailedzisegmap_intragroup_32465_var.set_args(self.global_failure,
                                                                self.failure_is_an_option,
                                                                self.global_failure_args,
                                                                cl.LocalMemory(np.long(bytes_43553)),
                                                                cl.LocalMemory(np.long(bytes_43703)),
                                                                cl.LocalMemory(np.long(bytes_43703)),
                                                                np.int32(k2p2zq_30141),
                                                                np.int64(i32_res_30143),
                                                                np.int64(m_30274),
                                                                np.int64(nm_30275),
                                                                np.int32(i64_res_30283),
                                                                np.int64(computed_group_sizze_32406),
                                                                defunc_3_map_res_mem_43700,
                                                                mem_43728)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_32465_var,
                                   ((np.long(m_30124) * np.long(computed_group_sizze_32406)),),
                                   (np.long(computed_group_sizze_32406),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      defunc_3_map_res_mem_43783 = mem_43728
    else:
      segmap_usable_groups_33182 = sdiv_up64(nest_sizze_33180,
                                             segmap_group_sizze_33181)
      mem_43732 = opencl_alloc(self, bytes_43730, "mem_43732")
      if ((1 * (np.long(segmap_usable_groups_33182) * np.long(segmap_group_sizze_33181))) != 0):
        self.mainDetailedzisegmap_33141_var.set_args(self.global_failure,
                                                     np.int64(m_30124),
                                                     np.int64(i32_res_30143),
                                                     np.int64(m_30274),
                                                     np.int64(nm_30275),
                                                     defunc_3_map_res_mem_43700,
                                                     mem_43732)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33141_var,
                                   ((np.long(segmap_usable_groups_33182) * np.long(segmap_group_sizze_33181)),),
                                   (np.long(segmap_group_sizze_33181),))
        if synchronous:
          sync(self)
      ctx_param_ext_43733 = m_30124
      ctx_param_ext_43734 = nm_30275
      ctx_param_ext_43735 = np.int64(0)
      ctx_param_ext_43736 = nm_30275
      ctx_param_ext_43737 = m_30124
      ctx_param_ext_43738 = np.int64(1)
      ctx_param_ext_43739 = nm_30275
      mem_param_43740 = mem_43732
      i_33196 = np.int32(0)
      one_46361 = np.int32(1)
      for counter_46360 in range(k2p2zq_30141):
        i_33198 = sext_i32_i64(i_33196)
        x_33199 = sle64(np.int64(0), i_33198)
        y_33200 = slt64(i_33198, nm_30275)
        bounds_check_33201 = (x_33199 and y_33200)
        index_certs_33202 = True
        assert bounds_check_33201, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:58:16-19\n   #1  helpers.fut:78:15-53\n   #2  bfastfinal.fut:56:35-50\n   #3  bfastfinal.fut:177:3-56\n   #4  bfastfinal.fut:173:1-177:56\n" % ("Index [",
                                                                                                                                                                                                                                         i_33198,
                                                                                                                                                                                                                                         "] out of bounds for array of shape [",
                                                                                                                                                                                                                                         nm_30275,
                                                                                                                                                                                                                                         "]."))
        local_memory_capacity_45175 = self.max_local_memory
        if intra_suff_and_fits_33211:
          gauss_jordan_res_ixfn_43762 = m_30124
        else:
          gauss_jordan_res_ixfn_43762 = ctx_param_ext_43737
        local_memory_capacity_45176 = self.max_local_memory
        if intra_suff_and_fits_33211:
          gauss_jordan_res_ixfn_43763 = nm_30275
        else:
          gauss_jordan_res_ixfn_43763 = ctx_param_ext_43739
        local_memory_capacity_45177 = self.max_local_memory
        if intra_suff_and_fits_33211:
          gauss_jordan_res_ixfn_43764 = m_30124
        else:
          gauss_jordan_res_ixfn_43764 = ctx_param_ext_43733
        local_memory_capacity_45178 = self.max_local_memory
        if intra_suff_and_fits_33211:
          gauss_jordan_res_ixfn_43765 = nm_30275
        else:
          gauss_jordan_res_ixfn_43765 = ctx_param_ext_43734
        local_memory_capacity_45179 = self.max_local_memory
        if intra_suff_and_fits_33211:
          gauss_jordan_res_ixfn_43766 = nm_30275
        else:
          gauss_jordan_res_ixfn_43766 = ctx_param_ext_43736
        local_memory_capacity_45180 = self.max_local_memory
        if intra_suff_and_fits_33211:
          gauss_jordan_res_ixfn_43767 = np.int64(1)
        else:
          gauss_jordan_res_ixfn_43767 = ctx_param_ext_43738
        local_memory_capacity_45181 = self.max_local_memory
        if intra_suff_and_fits_33211:
          gauss_jordan_res_ixfn_43768 = np.int64(0)
        else:
          gauss_jordan_res_ixfn_43768 = ctx_param_ext_43735
        local_memory_capacity_45209 = self.max_local_memory
        if ((sle64(np.int64(0),
                   sext_i32_i64(local_memory_capacity_45209)) and sle64(bytes_43703,
                                                                        sext_i32_i64(local_memory_capacity_45209))) and intra_suff_and_fits_33211):
          mem_43745 = opencl_alloc(self, bytes_43730, "mem_43745")
          group_sizze_45185 = self.sizes["mainDetailed.group_size_45185"]
          num_groups_45186 = sdiv_up64((m_30124 * nm_30275), group_sizze_45185)
          if ((1 * (np.long(num_groups_45186) * np.long(group_sizze_45185))) != 0):
            self.mainDetailedzicopy_45182_var.set_args(np.int64(m_30124),
                                                       np.int64(nm_30275),
                                                       np.int64(ctx_param_ext_43735),
                                                       np.int64(ctx_param_ext_43736),
                                                       np.int64(ctx_param_ext_43738),
                                                       mem_param_43740,
                                                       mem_43745)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzicopy_45182_var,
                                       ((np.long(num_groups_45186) * np.long(group_sizze_45185)),),
                                       (np.long(group_sizze_45185),))
            if synchronous:
              sync(self)
          mem_43753 = opencl_alloc(self, bytes_43730, "mem_43753")
          if ((1 * (np.long(m_30124) * np.long(nm_30275))) != 0):
            self.mainDetailedzisegmap_intragroup_32809_var.set_args(self.global_failure,
                                                                    cl.LocalMemory(np.long(bytes_43703)),
                                                                    np.int64(m_30124),
                                                                    np.int32(k2p2zq_30141),
                                                                    np.int64(nm_30275),
                                                                    np.int32(i64_res_30283),
                                                                    np.int32(i_33196),
                                                                    np.int64(i_33198),
                                                                    np.int64(ctx_param_ext_43735),
                                                                    np.int64(ctx_param_ext_43736),
                                                                    np.int64(ctx_param_ext_43738),
                                                                    mem_param_43740,
                                                                    mem_43745,
                                                                    mem_43753)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_intragroup_32809_var,
                                       ((np.long(m_30124) * np.long(nm_30275)),),
                                       (np.long(nm_30275),))
            if synchronous:
              sync(self)
          mem_43745 = None
          gauss_jordan_res_mem_43769 = mem_43753
        else:
          mem_43756 = opencl_alloc(self, m_30124, "mem_43756")
          if ((1 * (np.long(segmap_usable_groups_33248) * np.long(segmap_group_sizze_33247))) != 0):
            self.mainDetailedzisegmap_33050_var.set_args(self.global_failure,
                                                         np.int64(m_30124),
                                                         np.int64(i_33198),
                                                         np.int64(ctx_param_ext_43735),
                                                         np.int64(ctx_param_ext_43736),
                                                         np.int64(ctx_param_ext_43738),
                                                         mem_param_43740,
                                                         mem_43756)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_33050_var,
                                       ((np.long(segmap_usable_groups_33248) * np.long(segmap_group_sizze_33247)),),
                                       (np.long(segmap_group_sizze_33247),))
            if synchronous:
              sync(self)
          mem_43760 = opencl_alloc(self, bytes_43730, "mem_43760")
          if ((1 * (np.long(segmap_usable_groups_33264) * np.long(segmap_group_sizze_33263))) != 0):
            self.mainDetailedzisegmap_32982_var.set_args(self.global_failure,
                                                         np.int64(m_30124),
                                                         np.int32(k2p2zq_30141),
                                                         np.int64(nm_30275),
                                                         np.int32(i64_res_30283),
                                                         np.int32(i_33196),
                                                         np.int64(i_33198),
                                                         np.int64(ctx_param_ext_43735),
                                                         np.int64(ctx_param_ext_43736),
                                                         np.int64(ctx_param_ext_43738),
                                                         mem_param_43740,
                                                         mem_43756, mem_43760)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_32982_var,
                                       ((np.long(segmap_usable_groups_33264) * np.long(segmap_group_sizze_33263)),),
                                       (np.long(segmap_group_sizze_33263),))
            if synchronous:
              sync(self)
          mem_43756 = None
          if ((1 * (np.long(segmap_usable_groups_33298) * np.long(segmap_group_sizze_33297))) != 0):
            self.mainDetailedzisegmap_32928_var.set_args(self.global_failure,
                                                         np.int64(m_30124),
                                                         np.int64(nm_30275),
                                                         np.int64(ctx_param_ext_43735),
                                                         np.int64(ctx_param_ext_43736),
                                                         np.int64(ctx_param_ext_43738),
                                                         mem_param_43740,
                                                         mem_43760)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_32928_var,
                                       ((np.long(segmap_usable_groups_33298) * np.long(segmap_group_sizze_33297)),),
                                       (np.long(segmap_group_sizze_33297),))
            if synchronous:
              sync(self)
          mem_43760 = None
          gauss_jordan_res_mem_43769 = mem_param_43740
        ctx_param_ext_tmp_45166 = gauss_jordan_res_ixfn_43764
        ctx_param_ext_tmp_45167 = gauss_jordan_res_ixfn_43765
        ctx_param_ext_tmp_45168 = gauss_jordan_res_ixfn_43768
        ctx_param_ext_tmp_45169 = gauss_jordan_res_ixfn_43766
        ctx_param_ext_tmp_45170 = gauss_jordan_res_ixfn_43762
        ctx_param_ext_tmp_45171 = gauss_jordan_res_ixfn_43767
        ctx_param_ext_tmp_45172 = gauss_jordan_res_ixfn_43763
        mem_param_tmp_45173 = gauss_jordan_res_mem_43769
        ctx_param_ext_43733 = ctx_param_ext_tmp_45166
        ctx_param_ext_43734 = ctx_param_ext_tmp_45167
        ctx_param_ext_43735 = ctx_param_ext_tmp_45168
        ctx_param_ext_43736 = ctx_param_ext_tmp_45169
        ctx_param_ext_43737 = ctx_param_ext_tmp_45170
        ctx_param_ext_43738 = ctx_param_ext_tmp_45171
        ctx_param_ext_43739 = ctx_param_ext_tmp_45172
        mem_param_43740 = mem_param_tmp_45173
        i_33196 += one_46361
      gauss_jordan_res_r_ixfn_43770 = ctx_param_ext_43733
      gauss_jordan_res_r_ixfn_43771 = ctx_param_ext_43734
      gauss_jordan_res_r_ixfn_43772 = ctx_param_ext_43735
      gauss_jordan_res_r_ixfn_43773 = ctx_param_ext_43736
      gauss_jordan_res_r_ixfn_43774 = ctx_param_ext_43737
      gauss_jordan_res_r_ixfn_43775 = ctx_param_ext_43738
      gauss_jordan_res_r_ixfn_43776 = ctx_param_ext_43739
      gauss_jordan_res_r_mem_43777 = mem_param_43740
      mem_43732 = None
      segmap_usable_groups_33333 = sdiv_up64(comparatee_32360,
                                             segmap_group_sizze_33332)
      mem_43782 = opencl_alloc(self, bytes_43695, "mem_43782")
      if ((1 * (np.long(segmap_usable_groups_33333) * np.long(segmap_group_sizze_33332))) != 0):
        self.mainDetailedzisegmap_32709_var.set_args(self.global_failure,
                                                     np.int64(m_30124),
                                                     np.int64(i32_res_30143),
                                                     np.int64(m_30274),
                                                     np.int64(gauss_jordan_res_r_ixfn_43772),
                                                     np.int64(gauss_jordan_res_r_ixfn_43773),
                                                     np.int64(gauss_jordan_res_r_ixfn_43775),
                                                     gauss_jordan_res_r_mem_43777,
                                                     mem_43782)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_32709_var,
                                   ((np.long(segmap_usable_groups_33333) * np.long(segmap_group_sizze_33332)),),
                                   (np.long(segmap_group_sizze_33332),))
        if synchronous:
          sync(self)
      gauss_jordan_res_r_mem_43777 = None
      defunc_3_map_res_mem_43783 = mem_43782
    defunc_3_map_res_mem_43700 = None
    suff_outer_par_33345 = (self.sizes["mainDetailed.suff_outer_par_17"] <= m_30124)
    segmap_group_sizze_33367 = self.sizes["mainDetailed.segmap_group_size_33349"]
    max_num_groups_45216 = self.sizes["mainDetailed.segmap_num_groups_33351"]
    num_groups_33368 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_30124,
                                                            segmap_group_sizze_33367),
                                                  sext_i32_i64(max_num_groups_45216))))
    suff_outer_par_33452 = (self.sizes["mainDetailed.suff_outer_par_18"] <= nest_sizze_32329)
    nest_sizze_33468 = (i32_res_30137 * nest_sizze_32329)
    segred_group_sizze_33469 = self.sizes["mainDetailed.segred_group_size_33411"]
    max_num_groups_45217 = self.sizes["mainDetailed.segred_num_groups_33413"]
    num_groups_33470 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_33468,
                                                            segred_group_sizze_33469),
                                                  sext_i32_i64(max_num_groups_45217))))
    Ty_41775 = self.sizes["mainDetailed.Ty_41772"]
    Ry_41776 = self.sizes["mainDetailed.Ry_41774"]
    Tx_41777 = self.sizes["mainDetailed.Tx_41771"]
    Rx_41778 = self.sizes["mainDetailed.Rx_41773"]
    Tk_41779 = self.sizes["mainDetailed.Tk_41770"]
    TxRx_41782 = (Tx_41777 * Rx_41778)
    TyRy_41783 = (Ty_41775 * Ry_41776)
    a_loc_szz_41785 = (Tk_41779 * TyRy_41783)
    binop_x_41786 = (Tx_41777 * Tk_41779)
    b_loc_szz_41787 = (Rx_41778 * binop_x_41786)
    group_sizze_41791 = (Ty_41775 * Tx_41777)
    bytes_43802 = (np.int64(4) * nest_sizze_32329)
    binop_x_43816 = (Ry_41776 * group_sizze_41791)
    binop_x_43817 = (Rx_41778 * binop_x_43816)
    bytes_43814 = (np.int64(4) * binop_x_43817)
    binop_x_43808 = (Ry_41776 * Rx_41778)
    bytes_43807 = (np.int64(4) * binop_x_43808)
    bytes_43819 = (np.int64(4) * a_loc_szz_41785)
    bytes_43821 = (np.int64(4) * b_loc_szz_41787)
    bytes_43890 = (np.int64(4) * binop_x_43816)
    binop_x_43896 = (Rx_41778 * group_sizze_41791)
    bytes_43894 = (np.int64(4) * binop_x_43896)
    bytes_43882 = (np.int64(4) * Ry_41776)
    bytes_43884 = (np.int64(4) * Rx_41778)
    binop_x_44775 = (np.int64(4) * Ty_41775)
    binop_x_44776 = (Tx_41777 * binop_x_44775)
    binop_x_44777 = (Ry_41776 * binop_x_44776)
    sizze_44778 = (Rx_41778 * binop_x_44777)
    num_threads_44875 = (segmap_group_sizze_33367 * num_groups_33368)
    total_sizze_44876 = (bytes_43599 * num_threads_44875)
    local_memory_capacity_45347 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_45347)) and suff_outer_par_33345):
      mem_43786 = opencl_alloc(self, bytes_43549, "mem_43786")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43786, np.int64(0),
                                                  images_mem_43532, np.int64(0),
                                                  np.int64(1), N_30125, m_30124)
      mem_43804 = opencl_alloc(self, bytes_43802, "mem_43804")
      mem_43789 = opencl_alloc(self, total_sizze_44876, "mem_43789")
      if ((1 * (np.long(num_groups_33368) * np.long(segmap_group_sizze_33367))) != 0):
        self.mainDetailedzisegmap_33347_var.set_args(self.global_failure,
                                                     np.int64(N_30123),
                                                     np.int64(m_30124),
                                                     np.int32(n_30128),
                                                     np.int32(k2p2zq_30141),
                                                     np.int64(i32_res_30143),
                                                     np.int64(num_groups_33368),
                                                     binop_p_mem_43541,
                                                     mem_43786, mem_43789,
                                                     mem_43804)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33347_var,
                                   ((np.long(num_groups_33368) * np.long(segmap_group_sizze_33367)),),
                                   (np.long(segmap_group_sizze_33367),))
        if synchronous:
          sync(self)
      mem_43786 = None
      mem_43789 = None
      mem_44002 = opencl_alloc(self, bytes_43802, "mem_44002")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44002, np.int64(0),
                                                  mem_43804, np.int64(0),
                                                  np.int64(1), m_30124,
                                                  i32_res_30143)
      mem_43804 = None
      defunc_3_map_res_mem_44004 = mem_44002
    else:
      local_memory_capacity_45346 = self.max_local_memory
      if (sle64((bytes_43819 + bytes_43821),
                sext_i32_i64(local_memory_capacity_45346)) and suff_outer_par_33452):
        tk_div_tx_41780 = sdiv_up64(Tk_41779, Tx_41777)
        tk_div_ty_41781 = sdiv_up64(Tk_41779, Ty_41775)
        gridDim_x_41788 = sdiv_up64(i32_res_30143, TxRx_41782)
        gridDim_y_41789 = sdiv_up64(m_30124, TyRy_41783)
        grid_sizze_41790 = (gridDim_x_41788 * gridDim_y_41789)
        full_tiles_41819 = squot64(i32_res_30137, Tk_41779)
        kk_42026 = (Tk_41779 * full_tiles_41819)
        mem_43994 = opencl_alloc(self, bytes_43802, "mem_43994")
        if ((1 * (np.long(grid_sizze_41790) * np.long(group_sizze_41791))) != 0):
          self.mainDetailedzisegmap_intragroup_41794_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_43821)),
                                                                  cl.LocalMemory(np.long(bytes_43819)),
                                                                  np.int64(m_30124),
                                                                  np.int64(N_30125),
                                                                  np.int64(i32_res_30137),
                                                                  np.int64(i32_res_30143),
                                                                  np.int64(gridDim_x_41788),
                                                                  np.int64(full_tiles_41819),
                                                                  np.int64(kk_42026),
                                                                  images_mem_43532,
                                                                  mem_43544,
                                                                  mem_43994)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_41794_var,
                                     ((np.long(grid_sizze_41790) * np.long(group_sizze_41791)),),
                                     (np.long(group_sizze_41791),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43999 = mem_43994
      else:
        mem_43998 = opencl_alloc(self, bytes_43802, "mem_43998")
        if slt64((i32_res_30137 * np.int64(2)), segred_group_sizze_33469):
          segment_sizze_nonzzero_45286 = smax64(np.int64(1), i32_res_30137)
          num_threads_45287 = (num_groups_33470 * segred_group_sizze_33469)
          if ((1 * (np.long(num_groups_33470) * np.long(segred_group_sizze_33469))) != 0):
            self.mainDetailedzisegred_small_33417_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33469))),
                                                               np.int64(N_30123),
                                                               np.int64(m_30124),
                                                               np.int64(N_30125),
                                                               np.int64(i32_res_30137),
                                                               np.int64(i32_res_30143),
                                                               np.int64(num_groups_33470),
                                                               images_mem_43532,
                                                               binop_p_mem_43541,
                                                               mem_43998,
                                                               np.int64(segment_sizze_nonzzero_45286))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_33417_var,
                                       ((np.long(num_groups_33470) * np.long(segred_group_sizze_33469)),),
                                       (np.long(segred_group_sizze_33469),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45307 = sdiv_up64(num_groups_33470,
                                               smax64(np.int64(1),
                                                      (m_30124 * i32_res_30143)))
          elements_per_thread_45308 = sdiv_up64(i32_res_30137,
                                                (segred_group_sizze_33469 * groups_per_segment_45307))
          virt_num_groups_45309 = (groups_per_segment_45307 * (m_30124 * i32_res_30143))
          num_threads_45310 = (num_groups_33470 * segred_group_sizze_33469)
          threads_per_segment_45311 = (groups_per_segment_45307 * segred_group_sizze_33469)
          group_res_arr_mem_45312 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_33469 * virt_num_groups_45309)),
                                                 "group_res_arr_mem_45312")
          mainDetailedzicounter_mem_45314 = self.mainDetailedzicounter_mem_45314
          if ((1 * (np.long(num_groups_33470) * np.long(segred_group_sizze_33469))) != 0):
            self.mainDetailedzisegred_large_33417_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33469))),
                                                               np.int64(N_30123),
                                                               np.int64(N_30125),
                                                               np.int64(i32_res_30137),
                                                               np.int64(i32_res_30143),
                                                               np.int64(num_groups_33470),
                                                               images_mem_43532,
                                                               binop_p_mem_43541,
                                                               mem_43998,
                                                               np.int64(groups_per_segment_45307),
                                                               np.int64(elements_per_thread_45308),
                                                               np.int64(virt_num_groups_45309),
                                                               np.int64(threads_per_segment_45311),
                                                               group_res_arr_mem_45312,
                                                               mainDetailedzicounter_mem_45314)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_33417_var,
                                       ((np.long(num_groups_33470) * np.long(segred_group_sizze_33469)),),
                                       (np.long(segred_group_sizze_33469),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43999 = mem_43998
      defunc_3_map_res_mem_44004 = defunc_3_map_res_mem_43999
    binop_p_mem_43541 = None
    mem_43544 = None
    suff_outer_par_33486 = (self.sizes["mainDetailed.suff_outer_par_19"] <= m_30124)
    segmap_group_sizze_33507 = self.sizes["mainDetailed.segmap_group_size_33490"]
    max_num_groups_45348 = self.sizes["mainDetailed.segmap_num_groups_33492"]
    num_groups_33508 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_30124,
                                                            segmap_group_sizze_33507),
                                                  sext_i32_i64(max_num_groups_45348))))
    suff_outer_par_33587 = (self.sizes["mainDetailed.suff_outer_par_20"] <= nest_sizze_32329)
    segred_group_sizze_33602 = self.sizes["mainDetailed.segred_group_size_33548"]
    max_num_groups_45349 = self.sizes["mainDetailed.segred_num_groups_33550"]
    num_groups_33603 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_43697,
                                                            segred_group_sizze_33602),
                                                  sext_i32_i64(max_num_groups_45349))))
    tile_sizze_42238 = self.sizes["mainDetailed.tile_size_42237"]
    group_sizze_42239 = (tile_sizze_42238 * tile_sizze_42238)
    bytes_44036 = (np.int64(4) * group_sizze_42239)
    binop_x_44791 = (np.int64(4) * tile_sizze_42238)
    sizze_44792 = (tile_sizze_42238 * binop_x_44791)
    num_threads_44879 = (segmap_group_sizze_33507 * num_groups_33508)
    total_sizze_44880 = (bytes_43599 * num_threads_44879)
    local_memory_capacity_45435 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_45435)) and suff_outer_par_33486):
      mem_44008 = opencl_alloc(self, bytes_43594, "mem_44008")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44008, np.int64(0),
                                                  defunc_3_map_res_mem_43783,
                                                  np.int64(0), np.int64(1),
                                                  (i32_res_30143 * i32_res_30143),
                                                  m_30124)
      mem_44011 = opencl_alloc(self, bytes_43802, "mem_44011")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44011, np.int64(0),
                                                  defunc_3_map_res_mem_44004,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_30143, m_30124)
      mem_44029 = opencl_alloc(self, bytes_43802, "mem_44029")
      mem_44014 = opencl_alloc(self, total_sizze_44880, "mem_44014")
      if ((1 * (np.long(num_groups_33508) * np.long(segmap_group_sizze_33507))) != 0):
        self.mainDetailedzisegmap_33488_var.set_args(self.global_failure,
                                                     np.int64(m_30124),
                                                     np.int32(k2p2zq_30141),
                                                     np.int64(i32_res_30143),
                                                     np.int64(num_groups_33508),
                                                     mem_44008, mem_44011,
                                                     mem_44014, mem_44029)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33488_var,
                                   ((np.long(num_groups_33508) * np.long(segmap_group_sizze_33507)),),
                                   (np.long(segmap_group_sizze_33507),))
        if synchronous:
          sync(self)
      mem_44008 = None
      mem_44011 = None
      mem_44014 = None
      mem_44068 = opencl_alloc(self, bytes_43802, "mem_44068")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44068, np.int64(0),
                                                  mem_44029, np.int64(0),
                                                  np.int64(1), m_30124,
                                                  i32_res_30143)
      mem_44029 = None
      defunc_4_map_res_mem_44070 = mem_44068
    else:
      local_memory_capacity_45434 = self.max_local_memory
      if (sle64((bytes_44036 + bytes_44036),
                sext_i32_i64(local_memory_capacity_45434)) and suff_outer_par_33587):
        mem_44033 = opencl_alloc(self, bytes_43695, "mem_44033")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_44033, np.int64(0),
                                                    defunc_3_map_res_mem_43783,
                                                    np.int64(0), np.int64(1),
                                                    i32_res_30143,
                                                    (m_30124 * i32_res_30143))
        num_groups_x_42240 = sdiv_up64(m_30124, tile_sizze_42238)
        num_groups_y_42241 = sdiv_up64(i32_res_30143, tile_sizze_42238)
        num_groups_top_42242 = (num_groups_x_42240 * num_groups_y_42241)
        num_whole_tiles_42259 = squot64(i32_res_30143, tile_sizze_42238)
        residual_input_42386 = srem64(i32_res_30143, tile_sizze_42238)
        cond_42387 = (residual_input_42386 == np.int64(0))
        mem_44060 = opencl_alloc(self, bytes_43802, "mem_44060")
        if ((1 * (np.long(num_groups_top_42242) * np.long(group_sizze_42239))) != 0):
          self.mainDetailedzisegmap_intragroup_42243_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_44036)),
                                                                  cl.LocalMemory(np.long(bytes_44036)),
                                                                  np.int64(m_30124),
                                                                  np.int64(i32_res_30143),
                                                                  np.int64(num_groups_y_42241),
                                                                  np.int64(num_whole_tiles_42259),
                                                                  np.int64(residual_input_42386),
                                                                  np.byte(cond_42387),
                                                                  defunc_3_map_res_mem_44004,
                                                                  mem_44033,
                                                                  mem_44060)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_42243_var,
                                     ((np.long(num_groups_top_42242) * np.long(group_sizze_42239)),),
                                     (np.long(group_sizze_42239),))
          if synchronous:
            sync(self)
        mem_44033 = None
        defunc_4_map_res_mem_44065 = mem_44060
      else:
        mem_44064 = opencl_alloc(self, bytes_43802, "mem_44064")
        if slt64((i32_res_30143 * np.int64(2)), segred_group_sizze_33602):
          segment_sizze_nonzzero_45374 = smax64(np.int64(1), i32_res_30143)
          num_threads_45375 = (num_groups_33603 * segred_group_sizze_33602)
          if ((1 * (np.long(num_groups_33603) * np.long(segred_group_sizze_33602))) != 0):
            self.mainDetailedzisegred_small_33554_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33602))),
                                                               np.int64(m_30124),
                                                               np.int64(i32_res_30143),
                                                               np.int64(num_groups_33603),
                                                               defunc_3_map_res_mem_43783,
                                                               defunc_3_map_res_mem_44004,
                                                               mem_44064,
                                                               np.int64(segment_sizze_nonzzero_45374))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_33554_var,
                                       ((np.long(num_groups_33603) * np.long(segred_group_sizze_33602)),),
                                       (np.long(segred_group_sizze_33602),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45395 = sdiv_up64(num_groups_33603,
                                               smax64(np.int64(1),
                                                      (m_30124 * i32_res_30143)))
          elements_per_thread_45396 = sdiv_up64(i32_res_30143,
                                                (segred_group_sizze_33602 * groups_per_segment_45395))
          virt_num_groups_45397 = (groups_per_segment_45395 * (m_30124 * i32_res_30143))
          num_threads_45398 = (num_groups_33603 * segred_group_sizze_33602)
          threads_per_segment_45399 = (groups_per_segment_45395 * segred_group_sizze_33602)
          group_res_arr_mem_45400 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_33602 * virt_num_groups_45397)),
                                                 "group_res_arr_mem_45400")
          mainDetailedzicounter_mem_45402 = self.mainDetailedzicounter_mem_45402
          if ((1 * (np.long(num_groups_33603) * np.long(segred_group_sizze_33602))) != 0):
            self.mainDetailedzisegred_large_33554_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33602))),
                                                               np.int64(i32_res_30143),
                                                               np.int64(num_groups_33603),
                                                               defunc_3_map_res_mem_43783,
                                                               defunc_3_map_res_mem_44004,
                                                               mem_44064,
                                                               np.int64(groups_per_segment_45395),
                                                               np.int64(elements_per_thread_45396),
                                                               np.int64(virt_num_groups_45397),
                                                               np.int64(threads_per_segment_45399),
                                                               group_res_arr_mem_45400,
                                                               mainDetailedzicounter_mem_45402)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_33554_var,
                                       ((np.long(num_groups_33603) * np.long(segred_group_sizze_33602)),),
                                       (np.long(segred_group_sizze_33602),))
            if synchronous:
              sync(self)
        defunc_4_map_res_mem_44065 = mem_44064
      defunc_4_map_res_mem_44070 = defunc_4_map_res_mem_44065
    defunc_3_map_res_mem_43783 = None
    defunc_3_map_res_mem_44004 = None
    suff_outer_par_33618 = (self.sizes["mainDetailed.suff_outer_par_21"] <= m_30124)
    segmap_group_sizze_33638 = self.sizes["mainDetailed.segmap_group_size_33622"]
    max_num_groups_45436 = self.sizes["mainDetailed.segmap_num_groups_33624"]
    num_groups_33639 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_30124,
                                                            segmap_group_sizze_33638),
                                                  sext_i32_i64(max_num_groups_45436))))
    comparatee_33714 = (N_30123 * m_30124)
    suff_outer_par_33715 = (self.sizes["mainDetailed.suff_outer_par_22"] <= comparatee_33714)
    nest_sizze_33729 = (i32_res_30143 * comparatee_33714)
    segred_group_sizze_33730 = self.sizes["mainDetailed.segred_group_size_33678"]
    max_num_groups_45437 = self.sizes["mainDetailed.segred_num_groups_33680"]
    num_groups_33731 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_33729,
                                                            segred_group_sizze_33730),
                                                  sext_i32_i64(max_num_groups_45437))))
    Ty_42516 = self.sizes["mainDetailed.Ty_42513"]
    Ry_42517 = self.sizes["mainDetailed.Ry_42515"]
    Tx_42518 = self.sizes["mainDetailed.Tx_42512"]
    Rx_42519 = self.sizes["mainDetailed.Rx_42514"]
    Tk_42520 = self.sizes["mainDetailed.Tk_42511"]
    TxRx_42523 = (Tx_42518 * Rx_42519)
    TyRy_42524 = (Ty_42516 * Ry_42517)
    a_loc_szz_42526 = (Tk_42520 * TyRy_42524)
    binop_x_42527 = (Tx_42518 * Tk_42520)
    b_loc_szz_42528 = (Rx_42519 * binop_x_42527)
    group_sizze_42532 = (Ty_42516 * Tx_42518)
    bytes_44089 = (np.int64(4) * comparatee_33714)
    bytes_44075 = (np.int64(4) * N_30123)
    binop_x_44106 = (Ry_42517 * group_sizze_42532)
    binop_x_44107 = (Rx_42519 * binop_x_44106)
    bytes_44104 = (np.int64(4) * binop_x_44107)
    binop_x_44098 = (Ry_42517 * Rx_42519)
    bytes_44097 = (np.int64(4) * binop_x_44098)
    bytes_44109 = (np.int64(4) * a_loc_szz_42526)
    bytes_44111 = (np.int64(4) * b_loc_szz_42528)
    bytes_44180 = (np.int64(4) * binop_x_44106)
    binop_x_44186 = (Rx_42519 * group_sizze_42532)
    bytes_44184 = (np.int64(4) * binop_x_44186)
    bytes_44172 = (np.int64(4) * Ry_42517)
    bytes_44174 = (np.int64(4) * Rx_42519)
    binop_x_44805 = (np.int64(4) * Ty_42516)
    binop_x_44806 = (Tx_42518 * binop_x_44805)
    binop_x_44807 = (Ry_42517 * binop_x_44806)
    sizze_44808 = (Rx_42519 * binop_x_44807)
    num_threads_44883 = (segmap_group_sizze_33638 * num_groups_33639)
    total_sizze_44884 = (bytes_44075 * num_threads_44883)
    local_memory_capacity_45567 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_45567)) and suff_outer_par_33618):
      mem_44073 = opencl_alloc(self, bytes_43802, "mem_44073")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44073, np.int64(0),
                                                  defunc_4_map_res_mem_44070,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_30143, m_30124)
      mem_44091 = opencl_alloc(self, bytes_44089, "mem_44091")
      mem_44076 = opencl_alloc(self, total_sizze_44884, "mem_44076")
      if ((1 * (np.long(num_groups_33639) * np.long(segmap_group_sizze_33638))) != 0):
        self.mainDetailedzisegmap_33620_var.set_args(self.global_failure,
                                                     np.int64(N_30123),
                                                     np.int64(m_30124),
                                                     np.int32(k2p2zq_30141),
                                                     np.int64(i32_res_30143),
                                                     np.int64(num_groups_33639),
                                                     mem_43548, mem_44073,
                                                     mem_44076, mem_44091)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33620_var,
                                   ((np.long(num_groups_33639) * np.long(segmap_group_sizze_33638)),),
                                   (np.long(segmap_group_sizze_33638),))
        if synchronous:
          sync(self)
      mem_44073 = None
      mem_44076 = None
      mem_44292 = opencl_alloc(self, bytes_44089, "mem_44292")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44292, np.int64(0),
                                                  mem_44091, np.int64(0),
                                                  np.int64(1), m_30124, N_30123)
      mem_44091 = None
      defunc_3_map_res_mem_44294 = mem_44292
    else:
      local_memory_capacity_45566 = self.max_local_memory
      if (sle64((bytes_44109 + bytes_44111),
                sext_i32_i64(local_memory_capacity_45566)) and suff_outer_par_33715):
        mem_44094 = opencl_alloc(self, bytes_43534, "mem_44094")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_44094, np.int64(0),
                                                    mem_43548, np.int64(0),
                                                    np.int64(1), i32_res_30143,
                                                    N_30123)
        tk_div_tx_42521 = sdiv_up64(Tk_42520, Tx_42518)
        tk_div_ty_42522 = sdiv_up64(Tk_42520, Ty_42516)
        gridDim_x_42529 = sdiv_up64(N_30123, TxRx_42523)
        gridDim_y_42530 = sdiv_up64(m_30124, TyRy_42524)
        grid_sizze_42531 = (gridDim_x_42529 * gridDim_y_42530)
        full_tiles_42560 = squot64(i32_res_30143, Tk_42520)
        kk_42763 = (Tk_42520 * full_tiles_42560)
        mem_44284 = opencl_alloc(self, bytes_44089, "mem_44284")
        if ((1 * (np.long(grid_sizze_42531) * np.long(group_sizze_42532))) != 0):
          self.mainDetailedzisegmap_intragroup_42535_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_44111)),
                                                                  cl.LocalMemory(np.long(bytes_44109)),
                                                                  np.int64(N_30123),
                                                                  np.int64(m_30124),
                                                                  np.int64(i32_res_30143),
                                                                  np.int64(gridDim_x_42529),
                                                                  np.int64(full_tiles_42560),
                                                                  np.int64(kk_42763),
                                                                  defunc_4_map_res_mem_44070,
                                                                  mem_44094,
                                                                  mem_44284)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_42535_var,
                                     ((np.long(grid_sizze_42531) * np.long(group_sizze_42532)),),
                                     (np.long(group_sizze_42532),))
          if synchronous:
            sync(self)
        mem_44094 = None
        defunc_3_map_res_mem_44289 = mem_44284
      else:
        mem_44288 = opencl_alloc(self, bytes_44089, "mem_44288")
        if slt64((i32_res_30143 * np.int64(2)), segred_group_sizze_33730):
          segment_sizze_nonzzero_45506 = smax64(np.int64(1), i32_res_30143)
          num_threads_45507 = (num_groups_33731 * segred_group_sizze_33730)
          if ((1 * (np.long(num_groups_33731) * np.long(segred_group_sizze_33730))) != 0):
            self.mainDetailedzisegred_small_33684_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33730))),
                                                               np.int64(N_30123),
                                                               np.int64(m_30124),
                                                               np.int64(i32_res_30143),
                                                               np.int64(num_groups_33731),
                                                               mem_43548,
                                                               defunc_4_map_res_mem_44070,
                                                               mem_44288,
                                                               np.int64(segment_sizze_nonzzero_45506))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_33684_var,
                                       ((np.long(num_groups_33731) * np.long(segred_group_sizze_33730)),),
                                       (np.long(segred_group_sizze_33730),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45527 = sdiv_up64(num_groups_33731,
                                               smax64(np.int64(1),
                                                      (m_30124 * N_30123)))
          elements_per_thread_45528 = sdiv_up64(i32_res_30143,
                                                (segred_group_sizze_33730 * groups_per_segment_45527))
          virt_num_groups_45529 = (groups_per_segment_45527 * (m_30124 * N_30123))
          num_threads_45530 = (num_groups_33731 * segred_group_sizze_33730)
          threads_per_segment_45531 = (groups_per_segment_45527 * segred_group_sizze_33730)
          group_res_arr_mem_45532 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_33730 * virt_num_groups_45529)),
                                                 "group_res_arr_mem_45532")
          mainDetailedzicounter_mem_45534 = self.mainDetailedzicounter_mem_45534
          if ((1 * (np.long(num_groups_33731) * np.long(segred_group_sizze_33730))) != 0):
            self.mainDetailedzisegred_large_33684_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33730))),
                                                               np.int64(N_30123),
                                                               np.int64(i32_res_30143),
                                                               np.int64(num_groups_33731),
                                                               mem_43548,
                                                               defunc_4_map_res_mem_44070,
                                                               mem_44288,
                                                               np.int64(groups_per_segment_45527),
                                                               np.int64(elements_per_thread_45528),
                                                               np.int64(virt_num_groups_45529),
                                                               np.int64(threads_per_segment_45531),
                                                               group_res_arr_mem_45532,
                                                               mainDetailedzicounter_mem_45534)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_33684_var,
                                       ((np.long(num_groups_33731) * np.long(segred_group_sizze_33730)),),
                                       (np.long(segred_group_sizze_33730),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_44289 = mem_44288
      defunc_3_map_res_mem_44294 = defunc_3_map_res_mem_44289
    mem_43548 = None
    defunc_4_map_res_mem_44070 = None
    i_30390 = (N_30123 - np.int64(1))
    x_30391 = sle64(np.int64(0), i_30390)
    y_30392 = slt64(i_30390, N_30123)
    bounds_check_30393 = (x_30391 and y_30392)
    index_certs_30394 = True
    assert bounds_check_30393, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:18:29-34\n   #1  helpers.fut:20:13-20\n   #2  bfastfinal.fut:83:30-91\n   #3  /prelude/soacs.fut:56:19-23\n   #4  /prelude/soacs.fut:56:3-37\n   #5  bfastfinal.fut:77:5-86:25\n   #6  bfastfinal.fut:177:3-56\n   #7  bfastfinal.fut:173:1-177:56\n" % ("Index [",
                                                                                                                                                                                                                                                                                                                                                     i_30390,
                                                                                                                                                                                                                                                                                                                                                     "] out of bounds for array of shape [",
                                                                                                                                                                                                                                                                                                                                                     N_30123,
                                                                                                                                                                                                                                                                                                                                                     "]."))
    fits_33860 = sle64(N_30123, max_group_sizze_32597)
    suff_intra_par_33858 = (self.sizes["mainDetailed.suff_intra_par_25"] <= N_30123)
    intra_suff_and_fits_33861 = (suff_intra_par_33858 and fits_33860)
    segscan_group_sizze_34010 = self.sizes["mainDetailed.segscan_group_size_33987"]
    max_num_groups_45568 = self.sizes["mainDetailed.segscan_num_groups_33989"]
    num_groups_34011 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(comparatee_33714,
                                                            segscan_group_sizze_34010),
                                                  sext_i32_i64(max_num_groups_45568))))
    segmap_group_sizze_34030 = self.sizes["mainDetailed.segmap_group_size_33978"]
    mem_44297 = opencl_alloc(self, bytes_44089, "mem_44297")
    self.futhark_builtinzhreplicate_f32(mem_44297, (m_30124 * N_30123), np.nan)
    mem_44300 = opencl_alloc(self, bytes_44089, "mem_44300")
    self.futhark_builtinzhreplicate_i32(mem_44300, (m_30124 * N_30123),
                                        np.int32(0))
    segmap_group_sizze_34066 = self.sizes["mainDetailed.segmap_group_size_33903"]
    bytes_44312 = (np.int64(4) * m_30124)
    bytes_44303 = (np.int64(8) * N_30123)
    bytes_44321 = (np.int64(8) * comparatee_33714)
    local_memory_capacity_45670 = self.max_local_memory
    if (sle64((((bytes_44303 + bytes_44075) + bytes_44075) + bytes_44075),
              sext_i32_i64(local_memory_capacity_45670)) and intra_suff_and_fits_33861):
      mem_44313 = opencl_alloc(self, bytes_44312, "mem_44313")
      mem_44316 = opencl_alloc(self, bytes_44089, "mem_44316")
      mem_44319 = opencl_alloc(self, bytes_44089, "mem_44319")
      if ((1 * (np.long(m_30124) * np.long(N_30123))) != 0):
        self.mainDetailedzisegmap_intragroup_33783_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_44075)),
                                                                cl.LocalMemory(np.long(bytes_44075)),
                                                                cl.LocalMemory(np.long(bytes_44075)),
                                                                cl.LocalMemory(np.long(bytes_44303)),
                                                                np.int64(N_30123),
                                                                np.int64(N_30125),
                                                                np.int64(i_30390),
                                                                images_mem_43532,
                                                                defunc_3_map_res_mem_44294,
                                                                mem_44313,
                                                                mem_44316,
                                                                mem_44319)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_33783_var,
                                   ((np.long(m_30124) * np.long(N_30123)),),
                                   (np.long(N_30123),))
        if synchronous:
          sync(self)
      defunc_4_map_res_mem_44331 = mem_44313
      defunc_4_map_res_mem_44332 = mem_44316
      defunc_4_map_res_mem_44333 = mem_44319
    else:
      mem_44323 = opencl_alloc(self, bytes_44321, "mem_44323")
      mem_44326 = opencl_alloc(self, bytes_44089, "mem_44326")
      if slt64(np.int64(0), (m_30124 * N_30123)):
        stage1_max_num_groups_45604 = self.max_group_size
        stage1_num_groups_45605 = smin64(stage1_max_num_groups_45604,
                                         num_groups_34011)
        num_threads_45606 = sext_i64_i32((stage1_num_groups_45605 * segscan_group_sizze_34010))
        if ((1 * (np.long(stage1_num_groups_45605) * np.long(segscan_group_sizze_34010))) != 0):
          self.mainDetailedziscan_stage1_33993_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                          (np.int32(8) * segscan_group_sizze_34010)))),
                                                            np.int64(N_30123),
                                                            np.int64(m_30124),
                                                            np.int64(N_30125),
                                                            images_mem_43532,
                                                            defunc_3_map_res_mem_44294,
                                                            mem_44323,
                                                            mem_44326,
                                                            np.int32(num_threads_45606))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage1_33993_var,
                                     ((np.long(stage1_num_groups_45605) * np.long(segscan_group_sizze_34010)),),
                                     (np.long(segscan_group_sizze_34010),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_45605))) != 0):
          self.mainDetailedziscan_stage2_33993_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                          (np.int32(8) * stage1_num_groups_45605)))),
                                                            np.int64(N_30123),
                                                            np.int64(m_30124),
                                                            mem_44323,
                                                            np.int64(stage1_num_groups_45605),
                                                            np.int32(num_threads_45606))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage2_33993_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_45605)),),
                                     (np.long(stage1_num_groups_45605),))
          if synchronous:
            sync(self)
        required_groups_45648 = sext_i64_i32(sdiv_up64((m_30124 * N_30123),
                                                       segscan_group_sizze_34010))
        if ((1 * (np.long(num_groups_34011) * np.long(segscan_group_sizze_34010))) != 0):
          self.mainDetailedziscan_stage3_33993_var.set_args(self.global_failure,
                                                            np.int64(N_30123),
                                                            np.int64(m_30124),
                                                            np.int64(num_groups_34011),
                                                            mem_44323,
                                                            np.int32(num_threads_45606),
                                                            np.int32(required_groups_45648))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage3_33993_var,
                                     ((np.long(num_groups_34011) * np.long(segscan_group_sizze_34010)),),
                                     (np.long(segscan_group_sizze_34010),))
          if synchronous:
            sync(self)
      segmap_usable_groups_34031 = sdiv_up64(m_30124, segmap_group_sizze_34030)
      mem_44329 = opencl_alloc(self, bytes_44312, "mem_44329")
      if ((1 * (np.long(segmap_usable_groups_34031) * np.long(segmap_group_sizze_34030))) != 0):
        self.mainDetailedzisegmap_33976_var.set_args(self.global_failure,
                                                     np.int64(N_30123),
                                                     np.int64(m_30124),
                                                     np.int64(i_30390),
                                                     mem_44323, mem_44329)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33976_var,
                                   ((np.long(segmap_usable_groups_34031) * np.long(segmap_group_sizze_34030)),),
                                   (np.long(segmap_group_sizze_34030),))
        if synchronous:
          sync(self)
      segmap_usable_groups_34067 = sdiv_up64(comparatee_33714,
                                             segmap_group_sizze_34066)
      if ((1 * (np.long(segmap_usable_groups_34067) * np.long(segmap_group_sizze_34066))) != 0):
        self.mainDetailedzisegmap_33900_var.set_args(self.global_failure,
                                                     np.int64(N_30123),
                                                     np.int64(m_30124),
                                                     mem_44297, mem_44300,
                                                     mem_44323, mem_44326)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33900_var,
                                   ((np.long(segmap_usable_groups_34067) * np.long(segmap_group_sizze_34066)),),
                                   (np.long(segmap_group_sizze_34066),))
        if synchronous:
          sync(self)
      mem_44323 = None
      mem_44326 = None
      defunc_4_map_res_mem_44331 = mem_44329
      defunc_4_map_res_mem_44332 = mem_44297
      defunc_4_map_res_mem_44333 = mem_44300
    mem_44297 = None
    mem_44300 = None
    suff_outer_par_34115 = (self.sizes["mainDetailed.suff_outer_par_29"] <= m_30124)
    fits_34193 = sle64(i32_res_30137, max_group_sizze_32597)
    suff_intra_par_34191 = (self.sizes["mainDetailed.suff_intra_par_30"] <= i32_res_30137)
    intra_suff_and_fits_34194 = (suff_intra_par_34191 and fits_34193)
    segmap_group_sizze_34158 = self.sizes["mainDetailed.segmap_group_size_34127"]
    nest_sizze_34281 = (m_30124 * i32_res_30137)
    segred_group_sizze_34282 = self.sizes["mainDetailed.segred_group_size_34265"]
    max_num_groups_45671 = self.sizes["mainDetailed.segred_num_groups_34267"]
    num_groups_34283 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_34281,
                                                            segred_group_sizze_34282),
                                                  sext_i32_i64(max_num_groups_45671))))
    segred_group_sizze_34296 = self.sizes["mainDetailed.segred_group_size_34244"]
    max_num_groups_45672 = self.sizes["mainDetailed.segred_num_groups_34246"]
    num_groups_34297 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_34281,
                                                            segred_group_sizze_34296),
                                                  sext_i32_i64(max_num_groups_45672))))
    segmap_group_sizze_34312 = self.sizes["mainDetailed.segmap_group_size_34229"]
    bytes_44342 = (np.int64(4) * segmap_group_sizze_34158)
    local_memory_capacity_45826 = self.max_local_memory
    if (sle64((bytes_44342 + bytes_44342),
              sext_i32_i64(local_memory_capacity_45826)) and suff_outer_par_34115):
      segmap_usable_groups_34159 = sdiv_up64(m_30124, segmap_group_sizze_34158)
      mem_44336 = opencl_alloc(self, bytes_43549, "mem_44336")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44336, np.int64(0),
                                                  images_mem_43532, np.int64(0),
                                                  np.int64(1), N_30125, m_30124)
      mem_44339 = opencl_alloc(self, bytes_44089, "mem_44339")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44339, np.int64(0),
                                                  defunc_4_map_res_mem_44332,
                                                  np.int64(0), np.int64(1),
                                                  N_30123, m_30124)
      num_whole_tiles_42977 = squot64(i32_res_30137, segmap_group_sizze_34158)
      residual_input_43098 = srem64(i32_res_30137, segmap_group_sizze_34158)
      cond_43099 = (residual_input_43098 == np.int64(0))
      mem_44367 = opencl_alloc(self, bytes_44312, "mem_44367")
      mem_44369 = opencl_alloc(self, bytes_44312, "mem_44369")
      mem_44371 = opencl_alloc(self, bytes_44312, "mem_44371")
      if ((1 * (np.long(segmap_usable_groups_34159) * np.long(segmap_group_sizze_34158))) != 0):
        self.mainDetailedzisegmap_intragroup_42969_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_44342)),
                                                                cl.LocalMemory(np.long(bytes_44342)),
                                                                np.int64(m_30124),
                                                                np.int32(n_30128),
                                                                np.float32(hfrac_30130),
                                                                np.int64(i32_res_30137),
                                                                np.int32(k2p2_30139),
                                                                np.int64(num_whole_tiles_42977),
                                                                np.int64(residual_input_43098),
                                                                np.byte(cond_43099),
                                                                mem_44336,
                                                                mem_44339,
                                                                mem_44367,
                                                                mem_44369,
                                                                mem_44371)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_42969_var,
                                   ((np.long(segmap_usable_groups_34159) * np.long(segmap_group_sizze_34158)),),
                                   (np.long(segmap_group_sizze_34158),))
        if synchronous:
          sync(self)
      mem_44336 = None
      mem_44339 = None
      defunc_3_map_res_mem_44395 = mem_44367
      defunc_3_map_res_mem_44396 = mem_44369
      defunc_3_map_res_mem_44397 = mem_44371
    else:
      local_memory_capacity_45825 = self.max_local_memory
      if (sle64(((np.int32(4) * i32_res_30137) + (np.int32(4) * i32_res_30137)),
                sext_i32_i64(local_memory_capacity_45825)) and intra_suff_and_fits_34194):
        mem_44376 = opencl_alloc(self, bytes_44312, "mem_44376")
        mem_44378 = opencl_alloc(self, bytes_44312, "mem_44378")
        mem_44380 = opencl_alloc(self, bytes_44312, "mem_44380")
        if ((1 * (np.long(m_30124) * np.long(i32_res_30137))) != 0):
          self.mainDetailedzisegmap_intragroup_34123_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long((np.int32(4) * i32_res_30137))),
                                                                  cl.LocalMemory(np.long((np.int32(4) * i32_res_30137))),
                                                                  np.int64(N_30123),
                                                                  np.int64(N_30125),
                                                                  np.float32(hfrac_30130),
                                                                  np.int64(i32_res_30137),
                                                                  np.int32(k2p2_30139),
                                                                  images_mem_43532,
                                                                  defunc_4_map_res_mem_44332,
                                                                  mem_44376,
                                                                  mem_44378,
                                                                  mem_44380)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_34123_var,
                                     ((np.long(m_30124) * np.long(i32_res_30137)),),
                                     (np.long(i32_res_30137),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_44392 = mem_44376
        defunc_3_map_res_mem_44393 = mem_44378
        defunc_3_map_res_mem_44394 = mem_44380
      else:
        mem_44383 = opencl_alloc(self, bytes_44312, "mem_44383")
        if slt64((i32_res_30137 * np.int64(2)), segred_group_sizze_34282):
          segment_sizze_nonzzero_45700 = smax64(np.int64(1), i32_res_30137)
          num_threads_45701 = (num_groups_34283 * segred_group_sizze_34282)
          if ((1 * (np.long(num_groups_34283) * np.long(segred_group_sizze_34282))) != 0):
            self.mainDetailedzisegred_small_34271_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34282))),
                                                               np.int64(m_30124),
                                                               np.int64(N_30125),
                                                               np.int64(i32_res_30137),
                                                               np.int64(num_groups_34283),
                                                               images_mem_43532,
                                                               mem_44383,
                                                               np.int64(segment_sizze_nonzzero_45700))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_34271_var,
                                       ((np.long(num_groups_34283) * np.long(segred_group_sizze_34282)),),
                                       (np.long(segred_group_sizze_34282),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45721 = sdiv_up64(num_groups_34283,
                                               smax64(np.int64(1), m_30124))
          elements_per_thread_45722 = sdiv_up64(i32_res_30137,
                                                (segred_group_sizze_34282 * groups_per_segment_45721))
          virt_num_groups_45723 = (groups_per_segment_45721 * m_30124)
          num_threads_45724 = (num_groups_34283 * segred_group_sizze_34282)
          threads_per_segment_45725 = (groups_per_segment_45721 * segred_group_sizze_34282)
          group_res_arr_mem_45726 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_34282 * virt_num_groups_45723)),
                                                 "group_res_arr_mem_45726")
          mainDetailedzicounter_mem_45728 = self.mainDetailedzicounter_mem_45728
          if ((1 * (np.long(num_groups_34283) * np.long(segred_group_sizze_34282))) != 0):
            self.mainDetailedzisegred_large_34271_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34282))),
                                                               np.int64(N_30125),
                                                               np.int64(i32_res_30137),
                                                               np.int64(num_groups_34283),
                                                               images_mem_43532,
                                                               mem_44383,
                                                               np.int64(groups_per_segment_45721),
                                                               np.int64(elements_per_thread_45722),
                                                               np.int64(virt_num_groups_45723),
                                                               np.int64(threads_per_segment_45725),
                                                               group_res_arr_mem_45726,
                                                               mainDetailedzicounter_mem_45728)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_34271_var,
                                       ((np.long(num_groups_34283) * np.long(segred_group_sizze_34282)),),
                                       (np.long(segred_group_sizze_34282),))
            if synchronous:
              sync(self)
        mem_44386 = opencl_alloc(self, bytes_44312, "mem_44386")
        if slt64((i32_res_30137 * np.int64(2)), segred_group_sizze_34296):
          segment_sizze_nonzzero_45760 = smax64(np.int64(1), i32_res_30137)
          num_threads_45761 = (num_groups_34297 * segred_group_sizze_34296)
          if ((1 * (np.long(num_groups_34297) * np.long(segred_group_sizze_34296))) != 0):
            self.mainDetailedzisegred_small_34250_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34296))),
                                                               np.int64(N_30123),
                                                               np.int64(m_30124),
                                                               np.int64(i32_res_30137),
                                                               np.int64(num_groups_34297),
                                                               defunc_4_map_res_mem_44332,
                                                               mem_44383,
                                                               mem_44386,
                                                               np.int64(segment_sizze_nonzzero_45760))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_34250_var,
                                       ((np.long(num_groups_34297) * np.long(segred_group_sizze_34296)),),
                                       (np.long(segred_group_sizze_34296),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45781 = sdiv_up64(num_groups_34297,
                                               smax64(np.int64(1), m_30124))
          elements_per_thread_45782 = sdiv_up64(i32_res_30137,
                                                (segred_group_sizze_34296 * groups_per_segment_45781))
          virt_num_groups_45783 = (groups_per_segment_45781 * m_30124)
          num_threads_45784 = (num_groups_34297 * segred_group_sizze_34296)
          threads_per_segment_45785 = (groups_per_segment_45781 * segred_group_sizze_34296)
          group_res_arr_mem_45786 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_34296 * virt_num_groups_45783)),
                                                 "group_res_arr_mem_45786")
          mainDetailedzicounter_mem_45788 = self.mainDetailedzicounter_mem_45788
          if ((1 * (np.long(num_groups_34297) * np.long(segred_group_sizze_34296))) != 0):
            self.mainDetailedzisegred_large_34250_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34296))),
                                                               np.int64(N_30123),
                                                               np.int64(i32_res_30137),
                                                               np.int64(num_groups_34297),
                                                               defunc_4_map_res_mem_44332,
                                                               mem_44383,
                                                               mem_44386,
                                                               np.int64(groups_per_segment_45781),
                                                               np.int64(elements_per_thread_45782),
                                                               np.int64(virt_num_groups_45783),
                                                               np.int64(threads_per_segment_45785),
                                                               group_res_arr_mem_45786,
                                                               mainDetailedzicounter_mem_45788)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_34250_var,
                                       ((np.long(num_groups_34297) * np.long(segred_group_sizze_34296)),),
                                       (np.long(segred_group_sizze_34296),))
            if synchronous:
              sync(self)
        segmap_usable_groups_34313 = sdiv_up64(m_30124,
                                               segmap_group_sizze_34312)
        mem_44389 = opencl_alloc(self, bytes_44312, "mem_44389")
        mem_44391 = opencl_alloc(self, bytes_44312, "mem_44391")
        if ((1 * (np.long(segmap_usable_groups_34313) * np.long(segmap_group_sizze_34312))) != 0):
          self.mainDetailedzisegmap_34227_var.set_args(self.global_failure,
                                                       np.int64(m_30124),
                                                       np.float32(hfrac_30130),
                                                       np.int32(k2p2_30139),
                                                       mem_44383, mem_44386,
                                                       mem_44389, mem_44391)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_34227_var,
                                     ((np.long(segmap_usable_groups_34313) * np.long(segmap_group_sizze_34312)),),
                                     (np.long(segmap_group_sizze_34312),))
          if synchronous:
            sync(self)
        mem_44386 = None
        defunc_3_map_res_mem_44392 = mem_44389
        defunc_3_map_res_mem_44393 = mem_44383
        defunc_3_map_res_mem_44394 = mem_44391
      defunc_3_map_res_mem_44395 = defunc_3_map_res_mem_44392
      defunc_3_map_res_mem_44396 = defunc_3_map_res_mem_44393
      defunc_3_map_res_mem_44397 = defunc_3_map_res_mem_44394
    segred_group_sizze_34333 = self.sizes["mainDetailed.segred_group_size_34332"]
    max_num_groups_45827 = self.sizes["mainDetailed.segred_num_groups_34334"]
    num_groups_34335 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_30124,
                                                            segred_group_sizze_34333),
                                                  sext_i32_i64(max_num_groups_45827))))
    mem_44400 = opencl_alloc(self, np.int64(4), "mem_44400")
    mainDetailedzicounter_mem_45828 = self.mainDetailedzicounter_mem_45828
    group_res_arr_mem_45830 = opencl_alloc(self,
                                           (np.int32(4) * (segred_group_sizze_34333 * num_groups_34335)),
                                           "group_res_arr_mem_45830")
    num_threads_45832 = (num_groups_34335 * segred_group_sizze_34333)
    if ((1 * (np.long(num_groups_34335) * np.long(segred_group_sizze_34333))) != 0):
      self.mainDetailedzisegred_nonseg_34340_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34333))),
                                                          cl.LocalMemory(np.long(np.int32(1))),
                                                          np.int64(m_30124),
                                                          np.int64(num_groups_34335),
                                                          defunc_3_map_res_mem_44395,
                                                          mem_44400,
                                                          mainDetailedzicounter_mem_45828,
                                                          group_res_arr_mem_45830,
                                                          np.int64(num_threads_45832))
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegred_nonseg_34340_var,
                                 ((np.long(num_groups_34335) * np.long(segred_group_sizze_34333)),),
                                 (np.long(segred_group_sizze_34333),))
      if synchronous:
        sync(self)
    read_res_46368 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_46368, mem_44400,
                    device_offset=(np.long(np.int64(0)) * 4),
                    is_blocking=synchronous)
    sync(self)
    defunc_2_reduce_comm_res_30480 = read_res_46368[0]
    mem_44400 = None
    i32_res_30485 = sext_i32_i64(defunc_2_reduce_comm_res_30480)
    bounds_invalid_upwards_30486 = slt64(i32_res_30485, np.int64(0))
    valid_30487 = not(bounds_invalid_upwards_30486)
    range_valid_c_30488 = True
    assert valid_30487, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:5:3-18\n   #2  bfastfinal.fut:111:34-46\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:106:17-113:24\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                                                                    i32_res_30485,
                                                                                                                                                                                                                                                                                                                    " is invalid."))
    suff_outer_par_34372 = (self.sizes["mainDetailed.suff_outer_par_32"] <= m_30124)
    segmap_group_sizze_34395 = self.sizes["mainDetailed.segmap_group_size_34376"]
    nest_sizze_34438 = (m_30124 * i32_res_30485)
    segred_group_sizze_34439 = self.sizes["mainDetailed.segred_group_size_34416"]
    max_num_groups_45858 = self.sizes["mainDetailed.segred_num_groups_34418"]
    num_groups_34440 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_34438,
                                                            segred_group_sizze_34439),
                                                  sext_i32_i64(max_num_groups_45858))))
    bytes_44403 = (np.int64(4) * segmap_group_sizze_34395)
    local_memory_capacity_45929 = self.max_local_memory
    if (sle64((bytes_44403 + bytes_44403),
              sext_i32_i64(local_memory_capacity_45929)) and suff_outer_par_34372):
      segmap_usable_groups_34396 = sdiv_up64(m_30124, segmap_group_sizze_34395)
      num_whole_tiles_43221 = squot64(i32_res_30485, segmap_group_sizze_34395)
      residual_input_43320 = srem64(i32_res_30485, segmap_group_sizze_34395)
      cond_43321 = (residual_input_43320 == np.int64(0))
      mem_44426 = opencl_alloc(self, bytes_44312, "mem_44426")
      if ((1 * (np.long(segmap_usable_groups_34396) * np.long(segmap_group_sizze_34395))) != 0):
        self.mainDetailedzisegmap_intragroup_43201_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_44403)),
                                                                cl.LocalMemory(np.long(bytes_44403)),
                                                                np.int64(N_30123),
                                                                np.int64(m_30124),
                                                                np.int64(i32_res_30485),
                                                                np.int64(num_whole_tiles_43221),
                                                                np.int64(residual_input_43320),
                                                                np.byte(cond_43321),
                                                                defunc_4_map_res_mem_44332,
                                                                defunc_3_map_res_mem_44395,
                                                                defunc_3_map_res_mem_44396,
                                                                mem_44426)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_43201_var,
                                   ((np.long(segmap_usable_groups_34396) * np.long(segmap_group_sizze_34395)),),
                                   (np.long(segmap_group_sizze_34395),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_44430 = mem_44426
    else:
      mem_44429 = opencl_alloc(self, bytes_44312, "mem_44429")
      if slt64((i32_res_30485 * np.int64(2)), segred_group_sizze_34439):
        segment_sizze_nonzzero_45869 = smax64(np.int64(1), i32_res_30485)
        num_threads_45870 = (num_groups_34440 * segred_group_sizze_34439)
        if ((1 * (np.long(num_groups_34440) * np.long(segred_group_sizze_34439))) != 0):
          self.mainDetailedzisegred_small_34422_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34439))),
                                                             np.int64(N_30123),
                                                             np.int64(m_30124),
                                                             np.int64(i32_res_30485),
                                                             np.int64(num_groups_34440),
                                                             defunc_4_map_res_mem_44332,
                                                             defunc_3_map_res_mem_44395,
                                                             defunc_3_map_res_mem_44396,
                                                             mem_44429,
                                                             np.int64(segment_sizze_nonzzero_45869))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegred_small_34422_var,
                                     ((np.long(num_groups_34440) * np.long(segred_group_sizze_34439)),),
                                     (np.long(segred_group_sizze_34439),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_45890 = sdiv_up64(num_groups_34440,
                                             smax64(np.int64(1), m_30124))
        elements_per_thread_45891 = sdiv_up64(i32_res_30485,
                                              (segred_group_sizze_34439 * groups_per_segment_45890))
        virt_num_groups_45892 = (groups_per_segment_45890 * m_30124)
        num_threads_45893 = (num_groups_34440 * segred_group_sizze_34439)
        threads_per_segment_45894 = (groups_per_segment_45890 * segred_group_sizze_34439)
        group_res_arr_mem_45895 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_34439 * virt_num_groups_45892)),
                                               "group_res_arr_mem_45895")
        mainDetailedzicounter_mem_45897 = self.mainDetailedzicounter_mem_45897
        if ((1 * (np.long(num_groups_34440) * np.long(segred_group_sizze_34439))) != 0):
          self.mainDetailedzisegred_large_34422_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(np.int32(1))),
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34439))),
                                                             np.int64(N_30123),
                                                             np.int64(i32_res_30485),
                                                             np.int64(num_groups_34440),
                                                             defunc_4_map_res_mem_44332,
                                                             defunc_3_map_res_mem_44395,
                                                             defunc_3_map_res_mem_44396,
                                                             mem_44429,
                                                             np.int64(groups_per_segment_45890),
                                                             np.int64(elements_per_thread_45891),
                                                             np.int64(virt_num_groups_45892),
                                                             np.int64(threads_per_segment_45894),
                                                             group_res_arr_mem_45895,
                                                             mainDetailedzicounter_mem_45897)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegred_large_34422_var,
                                     ((np.long(num_groups_34440) * np.long(segred_group_sizze_34439)),),
                                     (np.long(segred_group_sizze_34439),))
          if synchronous:
            sync(self)
      defunc_0_f_res_mem_44430 = mem_44429
    iota32_arg_30510 = (N_30123 - i32_res_30137)
    bounds_invalid_upwards_30511 = slt64(iota32_arg_30510, np.int64(0))
    valid_30512 = not(bounds_invalid_upwards_30511)
    range_valid_c_30513 = True
    assert valid_30512, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:119:22-35\n   #3  bfastfinal.fut:177:3-56\n   #4  bfastfinal.fut:173:1-177:56\n" % ("Range ",
                                                                                                                                                                                                                                      np.int64(0),
                                                                                                                                                                                                                                      "..",
                                                                                                                                                                                                                                      np.int64(1),
                                                                                                                                                                                                                                      "..<",
                                                                                                                                                                                                                                      iota32_arg_30510,
                                                                                                                                                                                                                                      " is invalid."))
    x_30515 = (np.int32(1) + n_30128)
    i_30516 = (n_30128 - np.int32(1))
    i_30517 = sext_i32_i64(i_30516)
    x_30518 = sle64(np.int64(0), i_30517)
    y_30519 = slt64(i_30517, N_30123)
    bounds_check_30520 = (x_30518 and y_30519)
    index_certs_30521 = True
    assert bounds_check_30520, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:117:64-84\n   #1  bfastfinal.fut:115:15-119:36\n   #2  bfastfinal.fut:177:3-56\n   #3  bfastfinal.fut:173:1-177:56\n" % ("Index [",
                                                                                                                                                                                                                 i_30517,
                                                                                                                                                                                                                 "] out of bounds for array of shape [",
                                                                                                                                                                                                                 N_30123,
                                                                                                                                                                                                                 "]."))
    read_res_46370 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_46370, mappingindices_mem_43531,
                    device_offset=(np.long(i_30517) * 4),
                    is_blocking=synchronous)
    sync(self)
    r32_arg_30522 = read_res_46370[0]
    i32_res_30523 = sitofp_i32_f32(r32_arg_30522)
    range_valid_c_30524 = True
    assert valid_30512, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:131:29-44\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:124:50-167:9\n   #5  bfastfinal.fut:177:3-56\n   #6  bfastfinal.fut:173:1-177:56\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                                                                  iota32_arg_30510,
                                                                                                                                                                                                                                                                                                                  " is invalid."))
    segmap_group_sizze_34517 = self.sizes["mainDetailed.segmap_group_size_34500"]
    segmap_usable_groups_34518 = sdiv_up64(iota32_arg_30510,
                                           segmap_group_sizze_34517)
    bytes_44432 = (np.int64(4) * iota32_arg_30510)
    mem_44433 = opencl_alloc(self, bytes_44432, "mem_44433")
    mem_44435 = opencl_alloc(self, bytes_44432, "mem_44435")
    if ((1 * (np.long(segmap_usable_groups_34518) * np.long(segmap_group_sizze_34517))) != 0):
      self.mainDetailedzisegmap_34498_var.set_args(self.global_failure,
                                                   np.float32(lam_30131),
                                                   np.int64(iota32_arg_30510),
                                                   np.int32(x_30515),
                                                   np.float32(i32_res_30523),
                                                   mappingindices_mem_43531,
                                                   mem_44433, mem_44435)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_34498_var,
                                 ((np.long(segmap_usable_groups_34518) * np.long(segmap_group_sizze_34517)),),
                                 (np.long(segmap_group_sizze_34517),))
      if synchronous:
        sync(self)
    mem_44433 = None
    cond_30540 = (iota32_arg_30510 == np.int64(0))
    if cond_30540:
      iters_30541 = np.int32(0)
    else:
      iters_30541 = np.int32(16)
    loop_nonempty_30542 = slt32(np.int32(0), iters_30541)
    i_30543 = (iota32_arg_30510 - np.int64(1))
    x_30544 = sle64(np.int64(0), i_30543)
    y_30545 = slt64(i_30543, iota32_arg_30510)
    bounds_check_30546 = (x_30544 and y_30545)
    loop_not_taken_30547 = not(loop_nonempty_30542)
    protect_assert_disj_30548 = (bounds_check_30546 or loop_not_taken_30547)
    index_certs_30549 = True
    assert protect_assert_disj_30548, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:18:29-34\n   #1  lib/github.com/diku-dk/sorts/radix_sort.fut:25:24-35\n   #2  lib/github.com/diku-dk/sorts/radix_sort.fut:53:31-62\n   #3  lib/github.com/diku-dk/sorts/radix_sort.fut:104:6-36\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:146:29-151:72\n   #6  /prelude/functional.fut:9:42-44\n   #7  bfastfinal.fut:124:50-167:9\n   #8  bfastfinal.fut:177:3-56\n   #9  bfastfinal.fut:173:1-177:56\n" % ("Index [",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      i_30543,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      "] out of bounds for array of shape [",
iota32_arg_30510,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      "]."))
    suff_outer_par_34535 = (self.sizes["mainDetailed.suff_outer_par_34"] <= m_30124)
    fits_35082 = sle64(iota32_arg_30510, max_group_sizze_32597)
    suff_intra_par_35080 = (self.sizes["mainDetailed.suff_intra_par_35"] <= iota32_arg_30510)
    intra_suff_and_fits_35083 = (suff_intra_par_35080 and fits_35082)
    segmap_group_sizze_34826 = self.sizes["mainDetailed.segmap_group_size_34575"]
    max_num_groups_45935 = self.sizes["mainDetailed.segmap_num_groups_34577"]
    num_groups_34827 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_30124,
                                                            segmap_group_sizze_34826),
                                                  sext_i32_i64(max_num_groups_45935))))
    segmap_group_sizze_36189 = self.sizes["mainDetailed.segmap_group_size_36169"]
    max_num_groups_45936 = self.sizes["mainDetailed.segmap_num_groups_36171"]
    num_groups_36190 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_30124,
                                                            segmap_group_sizze_36189),
                                                  sext_i32_i64(max_num_groups_45936))))
    nest_sizze_36211 = (m_30124 * iota32_arg_30510)
    segscan_group_sizze_36212 = self.sizes["mainDetailed.segscan_group_size_36128"]
    max_num_groups_45937 = self.sizes["mainDetailed.segscan_num_groups_36130"]
    num_groups_36213 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36211,
                                                            segscan_group_sizze_36212),
                                                  sext_i32_i64(max_num_groups_45937))))
    segred_group_sizze_36250 = self.sizes["mainDetailed.segred_group_size_36074"]
    max_num_groups_45938 = self.sizes["mainDetailed.segred_num_groups_36076"]
    num_groups_36251 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36211,
                                                            segred_group_sizze_36250),
                                                  sext_i32_i64(max_num_groups_45938))))
    segmap_group_sizze_36290 = self.sizes["mainDetailed.segmap_group_size_36048"]
    segmap_group_sizze_36313 = self.sizes["mainDetailed.segmap_group_size_36031"]
    segmap_group_sizze_36331 = self.sizes["mainDetailed.segmap_group_size_35973"]
    suff_intra_par_36372 = (self.sizes["mainDetailed.suff_intra_par_38"] <= iota32_arg_30510)
    intra_suff_and_fits_36373 = (fits_35082 and suff_intra_par_36372)
    segscan_group_sizze_36456 = self.sizes["mainDetailed.segscan_group_size_35773"]
    max_num_groups_45939 = self.sizes["mainDetailed.segscan_num_groups_35775"]
    num_groups_36457 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36211,
                                                            segscan_group_sizze_36456),
                                                  sext_i32_i64(max_num_groups_45939))))
    segmap_group_sizze_36525 = self.sizes["mainDetailed.segmap_group_size_35723"]
    segmap_group_sizze_36562 = self.sizes["mainDetailed.segmap_group_size_35393"]
    bytes_44436 = (np.int64(4) * nest_sizze_36211)
    mem_44438 = opencl_alloc(self, bytes_44436, "mem_44438")
    self.futhark_builtinzhreplicate_f32(mem_44438, (m_30124 * iota32_arg_30510),
                                        np.nan)
    segmap_group_sizze_36630 = self.sizes["mainDetailed.segmap_group_size_35341"]
    segmap_usable_groups_36526 = sdiv_up_safe64(nest_sizze_36211,
                                                segmap_group_sizze_36525)
    bytes_44473 = (np.int64(8) * iota32_arg_30510)
    bytes_44704 = (np.int64(8) * nest_sizze_36211)
    double_buffer_sizze_44848 = (np.int64(4) * iota32_arg_30510)
    double_buffer_sizze_44852 = (np.int64(4) * iota32_arg_30510)
    num_threads_44900 = (segmap_group_sizze_34826 * num_groups_34827)
    total_sizze_44901 = (bytes_44432 * num_threads_44900)
    total_sizze_44902 = (bytes_44432 * num_threads_44900)
    total_sizze_44903 = (bytes_44473 * num_threads_44900)
    total_sizze_44904 = (bytes_44473 * num_threads_44900)
    total_sizze_44905 = (bytes_44473 * num_threads_44900)
    total_sizze_44906 = (bytes_44473 * num_threads_44900)
    total_sizze_44907 = (bytes_44432 * num_threads_44900)
    total_sizze_44908 = (bytes_44432 * num_threads_44900)
    total_sizze_44909 = (bytes_44432 * num_threads_44900)
    total_sizze_44910 = (double_buffer_sizze_44848 * num_threads_44900)
    local_memory_capacity_46343 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_46343)) and suff_outer_par_34535):
      mem_44578 = opencl_alloc(self, bytes_44436, "mem_44578")
      mem_44581 = opencl_alloc(self, bytes_44436, "mem_44581")
      mem_44583 = opencl_alloc(self, bytes_44312, "mem_44583")
      mem_44585 = opencl_alloc(self, bytes_44312, "mem_44585")
      mem_44587 = opencl_alloc(self, bytes_44312, "mem_44587")
      mem_44441 = opencl_alloc(self, total_sizze_44901, "mem_44441")
      mem_44455 = opencl_alloc(self, total_sizze_44902, "mem_44455")
      mem_44474 = opencl_alloc(self, total_sizze_44903, "mem_44474")
      mem_44476 = opencl_alloc(self, total_sizze_44904, "mem_44476")
      mem_44478 = opencl_alloc(self, total_sizze_44905, "mem_44478")
      mem_44480 = opencl_alloc(self, total_sizze_44906, "mem_44480")
      mem_44482 = opencl_alloc(self, total_sizze_44907, "mem_44482")
      mem_44544 = opencl_alloc(self, total_sizze_44908, "mem_44544")
      mem_44563 = opencl_alloc(self, total_sizze_44909, "mem_44563")
      double_buffer_mem_44846 = opencl_alloc(self, total_sizze_44910,
                                             "double_buffer_mem_44846")
      if ((1 * (np.long(num_groups_34827) * np.long(segmap_group_sizze_34826))) != 0):
        self.mainDetailedzisegmap_34573_var.set_args(self.global_failure,
                                                     self.failure_is_an_option,
                                                     self.global_failure_args,
                                                     np.int64(N_30123),
                                                     np.int64(m_30124),
                                                     np.int32(n_30128),
                                                     np.int64(iota32_arg_30510),
                                                     np.int32(iters_30541),
                                                     np.int64(i_30543),
                                                     np.int64(num_groups_34827),
                                                     defunc_4_map_res_mem_44331,
                                                     defunc_4_map_res_mem_44332,
                                                     defunc_4_map_res_mem_44333,
                                                     defunc_3_map_res_mem_44395,
                                                     defunc_3_map_res_mem_44396,
                                                     defunc_3_map_res_mem_44397,
                                                     defunc_0_f_res_mem_44430,
                                                     mem_44435, mem_44441,
                                                     mem_44455, mem_44474,
                                                     mem_44476, mem_44478,
                                                     mem_44480, mem_44482,
                                                     mem_44544, mem_44563,
                                                     mem_44578, mem_44581,
                                                     mem_44583, mem_44585,
                                                     mem_44587,
                                                     double_buffer_mem_44846)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_34573_var,
                                   ((np.long(num_groups_34827) * np.long(segmap_group_sizze_34826)),),
                                   (np.long(segmap_group_sizze_34826),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      mem_44441 = None
      mem_44455 = None
      mem_44474 = None
      mem_44476 = None
      mem_44478 = None
      mem_44480 = None
      mem_44482 = None
      mem_44544 = None
      mem_44563 = None
      double_buffer_mem_44846 = None
      mem_44747 = opencl_alloc(self, bytes_44436, "mem_44747")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44747, np.int64(0),
                                                  mem_44578, np.int64(0),
                                                  np.int64(1), m_30124,
                                                  iota32_arg_30510)
      mem_44578 = None
      mem_44751 = opencl_alloc(self, bytes_44436, "mem_44751")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_44751, np.int64(0),
                                                  mem_44581, np.int64(0),
                                                  np.int64(1), m_30124,
                                                  iota32_arg_30510)
      mem_44581 = None
      defunc_0_f_res_mem_44753 = mem_44747
      defunc_0_f_res_mem_44754 = mem_44751
      defunc_0_f_res_mem_44755 = mem_44583
      defunc_0_f_res_mem_44756 = mem_44585
      defunc_0_f_res_mem_44757 = mem_44587
    else:
      local_memory_capacity_46342 = self.max_local_memory
      if (sle64((((((((((((((bytes_44432 + bytes_44432) + (np.int32(1) * iota32_arg_30510)) + (np.int32(4) * iota32_arg_30510)) + (np.int32(4) * iota32_arg_30510)) + bytes_44432) + bytes_44473) + bytes_44473) + bytes_44473) + bytes_44473) + bytes_44432) + double_buffer_sizze_44852) + bytes_44432) + bytes_44432),
                sext_i32_i64(local_memory_capacity_46342)) and intra_suff_and_fits_35083):
        mem_44631 = opencl_alloc(self, bytes_44436, "mem_44631")
        mem_44634 = opencl_alloc(self, bytes_44436, "mem_44634")
        mem_44636 = opencl_alloc(self, bytes_44312, "mem_44636")
        mem_44638 = opencl_alloc(self, bytes_44312, "mem_44638")
        mem_44640 = opencl_alloc(self, bytes_44312, "mem_44640")
        if ((1 * (np.long(m_30124) * np.long(iota32_arg_30510))) != 0):
          self.mainDetailedzisegmap_intragroup_34571_var.set_args(self.global_failure,
                                                                  self.failure_is_an_option,
                                                                  self.global_failure_args,
                                                                  cl.LocalMemory(np.long(bytes_44432)),
                                                                  cl.LocalMemory(np.long(bytes_44432)),
                                                                  cl.LocalMemory(np.long(double_buffer_sizze_44852)),
                                                                  cl.LocalMemory(np.long(bytes_44432)),
                                                                  cl.LocalMemory(np.long(bytes_44473)),
                                                                  cl.LocalMemory(np.long(bytes_44473)),
                                                                  cl.LocalMemory(np.long(bytes_44473)),
                                                                  cl.LocalMemory(np.long(bytes_44473)),
                                                                  cl.LocalMemory(np.long(bytes_44432)),
                                                                  cl.LocalMemory(np.long((np.int32(4) * iota32_arg_30510))),
                                                                  cl.LocalMemory(np.long((np.int32(4) * iota32_arg_30510))),
                                                                  cl.LocalMemory(np.long((np.int32(1) * iota32_arg_30510))),
                                                                  cl.LocalMemory(np.long(bytes_44432)),
                                                                  cl.LocalMemory(np.long(bytes_44432)),
                                                                  np.int64(N_30123),
                                                                  np.int32(n_30128),
                                                                  np.int64(iota32_arg_30510),
                                                                  np.int32(iters_30541),
                                                                  np.int64(i_30543),
                                                                  defunc_4_map_res_mem_44331,
                                                                  defunc_4_map_res_mem_44332,
                                                                  defunc_4_map_res_mem_44333,
                                                                  defunc_3_map_res_mem_44395,
                                                                  defunc_3_map_res_mem_44396,
                                                                  defunc_3_map_res_mem_44397,
                                                                  defunc_0_f_res_mem_44430,
                                                                  mem_44435,
                                                                  mem_44631,
                                                                  mem_44634,
                                                                  mem_44636,
                                                                  mem_44638,
                                                                  mem_44640)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_34571_var,
                                     ((np.long(m_30124) * np.long(iota32_arg_30510)),),
                                     (np.long(iota32_arg_30510),))
          if synchronous:
            sync(self)
        self.failure_is_an_option = np.int32(1)
        defunc_0_f_res_mem_44740 = mem_44631
        defunc_0_f_res_mem_44741 = mem_44634
        defunc_0_f_res_mem_44742 = mem_44636
        defunc_0_f_res_mem_44743 = mem_44638
        defunc_0_f_res_mem_44744 = mem_44640
      else:
        mem_44643 = opencl_alloc(self, bytes_44312, "mem_44643")
        mem_44645 = opencl_alloc(self, bytes_44312, "mem_44645")
        if ((1 * (np.long(num_groups_36190) * np.long(segmap_group_sizze_36189))) != 0):
          self.mainDetailedzisegmap_36167_var.set_args(self.global_failure,
                                                       np.int64(m_30124),
                                                       np.int64(num_groups_36190),
                                                       defunc_4_map_res_mem_44331,
                                                       defunc_3_map_res_mem_44396,
                                                       defunc_3_map_res_mem_44397,
                                                       mem_44643, mem_44645)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_36167_var,
                                     ((np.long(num_groups_36190) * np.long(segmap_group_sizze_36189)),),
                                     (np.long(segmap_group_sizze_36189),))
          if synchronous:
            sync(self)
        mem_44649 = opencl_alloc(self, bytes_44436, "mem_44649")
        if slt64(np.int64(0), (m_30124 * iota32_arg_30510)):
          stage1_max_num_groups_46031 = self.max_group_size
          stage1_num_groups_46032 = smin64(stage1_max_num_groups_46031,
                                           num_groups_36213)
          num_threads_46033 = sext_i64_i32((stage1_num_groups_46032 * segscan_group_sizze_36212))
          if ((1 * (np.long(stage1_num_groups_46032) * np.long(segscan_group_sizze_36212))) != 0):
            self.mainDetailedziscan_stage1_36134_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                            (np.int32(4) * segscan_group_sizze_36212)))),
                                                              np.int64(N_30123),
                                                              np.int64(m_30124),
                                                              np.int64(iota32_arg_30510),
                                                              defunc_4_map_res_mem_44332,
                                                              defunc_3_map_res_mem_44395,
                                                              defunc_3_map_res_mem_44396,
                                                              defunc_0_f_res_mem_44430,
                                                              mem_44645,
                                                              mem_44649,
                                                              np.int32(num_threads_46033))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedziscan_stage1_36134_var,
                                       ((np.long(stage1_num_groups_46032) * np.long(segscan_group_sizze_36212)),),
                                       (np.long(segscan_group_sizze_36212),))
            if synchronous:
              sync(self)
          if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_46032))) != 0):
            self.mainDetailedziscan_stage2_36134_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                            (np.int32(4) * stage1_num_groups_46032)))),
                                                              np.int64(m_30124),
                                                              np.int64(iota32_arg_30510),
                                                              mem_44649,
                                                              np.int64(stage1_num_groups_46032),
                                                              np.int32(num_threads_46033))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedziscan_stage2_36134_var,
                                       ((np.long(np.int64(1)) * np.long(stage1_num_groups_46032)),),
                                       (np.long(stage1_num_groups_46032),))
            if synchronous:
              sync(self)
          required_groups_46075 = sext_i64_i32(sdiv_up64((m_30124 * iota32_arg_30510),
                                                         segscan_group_sizze_36212))
          if ((1 * (np.long(num_groups_36213) * np.long(segscan_group_sizze_36212))) != 0):
            self.mainDetailedziscan_stage3_36134_var.set_args(self.global_failure,
                                                              np.int64(m_30124),
                                                              np.int64(iota32_arg_30510),
                                                              np.int64(num_groups_36213),
                                                              mem_44649,
                                                              np.int32(num_threads_46033),
                                                              np.int32(required_groups_46075))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedziscan_stage3_36134_var,
                                       ((np.long(num_groups_36213) * np.long(segscan_group_sizze_36212)),),
                                       (np.long(segscan_group_sizze_36212),))
            if synchronous:
              sync(self)
        mem_44652 = opencl_alloc(self, m_30124, "mem_44652")
        mem_44654 = opencl_alloc(self, bytes_44312, "mem_44654")
        mem_44656 = opencl_alloc(self, bytes_44312, "mem_44656")
        mem_44659 = opencl_alloc(self, bytes_44436, "mem_44659")
        if slt64((iota32_arg_30510 * np.int64(2)), segred_group_sizze_36250):
          segment_sizze_nonzzero_46087 = smax64(np.int64(1), iota32_arg_30510)
          num_threads_46088 = (num_groups_36251 * segred_group_sizze_36250)
          if ((1 * (np.long(num_groups_36251) * np.long(segred_group_sizze_36250))) != 0):
            self.mainDetailedzisegred_small_36080_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36250))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36250))),
                                                               cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_36250))),
                                                               np.int64(m_30124),
                                                               np.int64(iota32_arg_30510),
                                                               np.int64(num_groups_36251),
                                                               mem_44435,
                                                               mem_44643,
                                                               mem_44645,
                                                               mem_44649,
                                                               mem_44652,
                                                               mem_44654,
                                                               mem_44656,
                                                               mem_44659,
                                                               np.int64(segment_sizze_nonzzero_46087))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_36080_var,
                                       ((np.long(num_groups_36251) * np.long(segred_group_sizze_36250)),),
                                       (np.long(segred_group_sizze_36250),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_46123 = sdiv_up64(num_groups_36251,
                                               smax64(np.int64(1), m_30124))
          elements_per_thread_46124 = sdiv_up64(iota32_arg_30510,
                                                (segred_group_sizze_36250 * groups_per_segment_46123))
          virt_num_groups_46125 = (groups_per_segment_46123 * m_30124)
          num_threads_46126 = (num_groups_36251 * segred_group_sizze_36250)
          threads_per_segment_46127 = (groups_per_segment_46123 * segred_group_sizze_36250)
          group_res_arr_mem_46128 = opencl_alloc(self,
                                                 (np.int32(1) * (segred_group_sizze_36250 * virt_num_groups_46125)),
                                                 "group_res_arr_mem_46128")
          group_res_arr_mem_46130 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_36250 * virt_num_groups_46125)),
                                                 "group_res_arr_mem_46130")
          group_res_arr_mem_46132 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_36250 * virt_num_groups_46125)),
                                                 "group_res_arr_mem_46132")
          mainDetailedzicounter_mem_46134 = self.mainDetailedzicounter_mem_46134
          if ((1 * (np.long(num_groups_36251) * np.long(segred_group_sizze_36250))) != 0):
            self.mainDetailedzisegred_large_36080_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36250))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36250))),
                                                               cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_36250))),
                                                               np.int64(iota32_arg_30510),
                                                               np.int64(num_groups_36251),
                                                               mem_44435,
                                                               mem_44643,
                                                               mem_44645,
                                                               mem_44649,
                                                               mem_44652,
                                                               mem_44654,
                                                               mem_44656,
                                                               mem_44659,
                                                               np.int64(groups_per_segment_46123),
                                                               np.int64(elements_per_thread_46124),
                                                               np.int64(virt_num_groups_46125),
                                                               group_res_arr_mem_46128,
                                                               group_res_arr_mem_46130,
                                                               group_res_arr_mem_46132,
                                                               mainDetailedzicounter_mem_46134)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_36080_var,
                                       ((np.long(num_groups_36251) * np.long(segred_group_sizze_36250)),),
                                       (np.long(segred_group_sizze_36250),))
            if synchronous:
              sync(self)
        mem_44643 = None
        mem_44649 = None
        segmap_usable_groups_36291 = sdiv_up64(m_30124,
                                               segmap_group_sizze_36290)
        mem_44662 = opencl_alloc(self, m_30124, "mem_44662")
        mem_44664 = opencl_alloc(self, bytes_44312, "mem_44664")
        if ((1 * (np.long(segmap_usable_groups_36291) * np.long(segmap_group_sizze_36290))) != 0):
          self.mainDetailedzisegmap_36046_var.set_args(self.global_failure,
                                                       np.int64(m_30124),
                                                       mem_44652, mem_44654,
                                                       mem_44662, mem_44664)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_36046_var,
                                     ((np.long(segmap_usable_groups_36291) * np.long(segmap_group_sizze_36290)),),
                                     (np.long(segmap_group_sizze_36290),))
          if synchronous:
            sync(self)
        mem_44652 = None
        mem_44654 = None
        segmap_usable_groups_36314 = sdiv_up64(m_30124,
                                               segmap_group_sizze_36313)
        mem_44667 = opencl_alloc(self, bytes_44312, "mem_44667")
        if ((1 * (np.long(segmap_usable_groups_36314) * np.long(segmap_group_sizze_36313))) != 0):
          self.mainDetailedzisegmap_36029_var.set_args(self.global_failure,
                                                       np.int64(m_30124),
                                                       mem_44645, mem_44656,
                                                       mem_44667)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_36029_var,
                                     ((np.long(segmap_usable_groups_36314) * np.long(segmap_group_sizze_36313)),),
                                     (np.long(segmap_group_sizze_36313),))
          if synchronous:
            sync(self)
        mem_44656 = None
        segmap_usable_groups_36332 = sdiv_up64(nest_sizze_36211,
                                               segmap_group_sizze_36331)
        mem_44671 = opencl_alloc(self, bytes_44436, "mem_44671")
        if ((1 * (np.long(segmap_usable_groups_36332) * np.long(segmap_group_sizze_36331))) != 0):
          self.mainDetailedzisegmap_35970_var.set_args(self.global_failure,
                                                       self.failure_is_an_option,
                                                       self.global_failure_args,
                                                       np.int64(N_30123),
                                                       np.int64(m_30124),
                                                       np.int64(iota32_arg_30510),
                                                       defunc_4_map_res_mem_44332,
                                                       defunc_3_map_res_mem_44396,
                                                       mem_44645, mem_44671)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_35970_var,
                                     ((np.long(segmap_usable_groups_36332) * np.long(segmap_group_sizze_36331)),),
                                     (np.long(segmap_group_sizze_36331),))
          if synchronous:
            sync(self)
        self.failure_is_an_option = np.int32(1)
        mem_param_44679 = mem_44671
        i_36359 = np.int32(0)
        one_46373 = np.int32(1)
        for counter_46372 in range(iters_30541):
          defunc_2_radix_sort_step_arg_36361 = (np.int32(2) * i_36359)
          defunc_0_get_bit_arg_36362 = (np.int32(1) + defunc_2_radix_sort_step_arg_36361)
          cond_f_res_36363 = (defunc_0_get_bit_arg_36362 == np.int32(31))
          cond_f_res_36364 = (defunc_2_radix_sort_step_arg_36361 == np.int32(31))
          local_memory_capacity_46331 = self.max_local_memory
          if (sle64((((((bytes_44473 + bytes_44473) + bytes_44473) + bytes_44473) + bytes_44432) + bytes_44432),
                    sext_i32_i64(local_memory_capacity_46331)) and intra_suff_and_fits_36373):
            mem_44684 = opencl_alloc(self, bytes_44436, "mem_44684")
            self.futhark_builtinzhgpu_map_transpose_f32(mem_44684, np.int64(0),
                                                        mem_param_44679,
                                                        np.int64(0),
                                                        np.int64(1),
                                                        iota32_arg_30510,
                                                        m_30124)
            mem_44702 = opencl_alloc(self, bytes_44436, "mem_44702")
            if ((1 * (np.long(m_30124) * np.long(iota32_arg_30510))) != 0):
              self.mainDetailedzisegmap_intragroup_35455_var.set_args(self.global_failure,
                                                                      cl.LocalMemory(np.long(bytes_44432)),
                                                                      cl.LocalMemory(np.long(bytes_44432)),
                                                                      cl.LocalMemory(np.long(bytes_44473)),
                                                                      cl.LocalMemory(np.long(bytes_44473)),
                                                                      cl.LocalMemory(np.long(bytes_44473)),
                                                                      cl.LocalMemory(np.long(bytes_44473)),
                                                                      np.int64(m_30124),
                                                                      np.int64(iota32_arg_30510),
                                                                      np.int64(i_30543),
                                                                      np.int32(defunc_2_radix_sort_step_arg_36361),
                                                                      np.int32(defunc_0_get_bit_arg_36362),
                                                                      np.byte(cond_f_res_36363),
                                                                      np.byte(cond_f_res_36364),
                                                                      mem_param_44679,
                                                                      mem_44684,
                                                                      mem_44702)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainDetailedzisegmap_intragroup_35455_var,
                                         ((np.long(m_30124) * np.long(iota32_arg_30510)),),
                                         (np.long(iota32_arg_30510),))
              if synchronous:
                sync(self)
            mem_44684 = None
            defunc_2_radix_sort_res_mem_44723 = mem_44702
          else:
            mem_44706 = opencl_alloc(self, bytes_44704, "mem_44706")
            mem_44709 = opencl_alloc(self, bytes_44704, "mem_44709")
            mem_44712 = opencl_alloc(self, bytes_44704, "mem_44712")
            mem_44715 = opencl_alloc(self, bytes_44704, "mem_44715")
            mem_44718 = opencl_alloc(self, bytes_44436, "mem_44718")
            if slt64(np.int64(0), (m_30124 * iota32_arg_30510)):
              stage1_max_num_groups_46231 = self.max_group_size
              stage1_num_groups_46232 = smin64(stage1_max_num_groups_46231,
                                               num_groups_36457)
              num_threads_46233 = sext_i64_i32((stage1_num_groups_46232 * segscan_group_sizze_36456))
              if ((1 * (np.long(stage1_num_groups_46232) * np.long(segscan_group_sizze_36456))) != 0):
                self.mainDetailedziscan_stage1_35779_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                                (np.int32(8) * segscan_group_sizze_36456)))),
                                                                  cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                                (np.int32(8) * segscan_group_sizze_36456)))),
                                                                  cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                                (np.int32(8) * segscan_group_sizze_36456)))),
                                                                  cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                                (np.int32(8) * segscan_group_sizze_36456)))),
                                                                  np.int64(m_30124),
                                                                  np.int64(iota32_arg_30510),
                                                                  np.int32(defunc_2_radix_sort_step_arg_36361),
                                                                  np.int32(defunc_0_get_bit_arg_36362),
                                                                  np.byte(cond_f_res_36363),
                                                                  np.byte(cond_f_res_36364),
                                                                  mem_param_44679,
                                                                  mem_44706,
                                                                  mem_44709,
                                                                  mem_44712,
                                                                  mem_44715,
                                                                  mem_44718,
                                                                  np.int32(num_threads_46233))
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.mainDetailedziscan_stage1_35779_var,
                                           ((np.long(stage1_num_groups_46232) * np.long(segscan_group_sizze_36456)),),
                                           (np.long(segscan_group_sizze_36456),))
                if synchronous:
                  sync(self)
              if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_46232))) != 0):
                self.mainDetailedziscan_stage2_35779_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                                (np.int32(8) * stage1_num_groups_46232)))),
                                                                  cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                                (np.int32(8) * stage1_num_groups_46232)))),
                                                                  cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                                (np.int32(8) * stage1_num_groups_46232)))),
                                                                  cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                                (np.int32(8) * stage1_num_groups_46232)))),
                                                                  np.int64(m_30124),
                                                                  np.int64(iota32_arg_30510),
                                                                  mem_44706,
                                                                  mem_44709,
                                                                  mem_44712,
                                                                  mem_44715,
                                                                  np.int64(stage1_num_groups_46232),
                                                                  np.int32(num_threads_46233))
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.mainDetailedziscan_stage2_35779_var,
                                           ((np.long(np.int64(1)) * np.long(stage1_num_groups_46232)),),
                                           (np.long(stage1_num_groups_46232),))
                if synchronous:
                  sync(self)
              required_groups_46314 = sext_i64_i32(sdiv_up64((m_30124 * iota32_arg_30510),
                                                             segscan_group_sizze_36456))
              if ((1 * (np.long(num_groups_36457) * np.long(segscan_group_sizze_36456))) != 0):
                self.mainDetailedziscan_stage3_35779_var.set_args(self.global_failure,
                                                                  np.int64(m_30124),
                                                                  np.int64(iota32_arg_30510),
                                                                  np.int64(num_groups_36457),
                                                                  mem_44706,
                                                                  mem_44709,
                                                                  mem_44712,
                                                                  mem_44715,
                                                                  np.int32(num_threads_46233),
                                                                  np.int32(required_groups_46314))
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.mainDetailedziscan_stage3_35779_var,
                                           ((np.long(num_groups_36457) * np.long(segscan_group_sizze_36456)),),
                                           (np.long(segscan_group_sizze_36456),))
                if synchronous:
                  sync(self)
            mem_44721 = opencl_alloc(self, bytes_44436, "mem_44721")
            if (((m_30124 * iota32_arg_30510) * np.int32(4)) != 0):
              cl.enqueue_copy(self.queue, mem_44721, mem_param_44679,
                              dest_offset=np.long(np.int64(0)),
                              src_offset=np.long(np.int64(0)),
                              byte_count=np.long(((m_30124 * iota32_arg_30510) * np.int32(4))))
            if synchronous:
              sync(self)
            if ((1 * (np.long(segmap_usable_groups_36526) * np.long(segmap_group_sizze_36525))) != 0):
              self.mainDetailedzisegmap_35720_var.set_args(self.global_failure,
                                                           np.int64(m_30124),
                                                           np.int64(iota32_arg_30510),
                                                           np.int64(i_30543),
                                                           mem_param_44679,
                                                           mem_44706, mem_44709,
                                                           mem_44712, mem_44715,
                                                           mem_44718, mem_44721)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainDetailedzisegmap_35720_var,
                                         ((np.long(segmap_usable_groups_36526) * np.long(segmap_group_sizze_36525)),),
                                         (np.long(segmap_group_sizze_36525),))
              if synchronous:
                sync(self)
            mem_44706 = None
            mem_44709 = None
            mem_44712 = None
            mem_44715 = None
            mem_44718 = None
            defunc_2_radix_sort_res_mem_44723 = mem_44721
          mem_param_tmp_46200 = defunc_2_radix_sort_res_mem_44723
          mem_param_44679 = mem_param_tmp_46200
          i_36359 += one_46373
        defunc_2_radix_sort_res_r_mem_44733 = mem_param_44679
        mem_44671 = None
        segmap_usable_groups_36563 = sdiv_up64(m_30124,
                                               segmap_group_sizze_36562)
        mem_44736 = opencl_alloc(self, bytes_44312, "mem_44736")
        mem_44738 = opencl_alloc(self, bytes_44312, "mem_44738")
        if ((1 * (np.long(segmap_usable_groups_36563) * np.long(segmap_group_sizze_36562))) != 0):
          self.mainDetailedzisegmap_35391_var.set_args(self.global_failure,
                                                       self.failure_is_an_option,
                                                       self.global_failure_args,
                                                       np.int64(N_30123),
                                                       np.int64(m_30124),
                                                       np.int32(n_30128),
                                                       np.int64(iota32_arg_30510),
                                                       defunc_4_map_res_mem_44331,
                                                       defunc_4_map_res_mem_44333,
                                                       defunc_3_map_res_mem_44396,
                                                       mem_44645, mem_44662,
                                                       mem_44664,
                                                       defunc_2_radix_sort_res_r_mem_44733,
                                                       mem_44736, mem_44738)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_35391_var,
                                     ((np.long(segmap_usable_groups_36563) * np.long(segmap_group_sizze_36562)),),
                                     (np.long(segmap_group_sizze_36562),))
          if synchronous:
            sync(self)
        self.failure_is_an_option = np.int32(1)
        mem_44662 = None
        mem_44664 = None
        defunc_2_radix_sort_res_r_mem_44733 = None
        segmap_usable_groups_36631 = sdiv_up64(nest_sizze_36211,
                                               segmap_group_sizze_36630)
        if ((1 * (np.long(segmap_usable_groups_36631) * np.long(segmap_group_sizze_36630))) != 0):
          self.mainDetailedzisegmap_35338_var.set_args(self.global_failure,
                                                       np.int64(N_30123),
                                                       np.int64(m_30124),
                                                       np.int32(n_30128),
                                                       np.int64(iota32_arg_30510),
                                                       defunc_4_map_res_mem_44333,
                                                       defunc_3_map_res_mem_44396,
                                                       mem_44438, mem_44645,
                                                       mem_44659)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_35338_var,
                                     ((np.long(segmap_usable_groups_36631) * np.long(segmap_group_sizze_36630)),),
                                     (np.long(segmap_group_sizze_36630),))
          if synchronous:
            sync(self)
        mem_44645 = None
        defunc_0_f_res_mem_44740 = mem_44438
        defunc_0_f_res_mem_44741 = mem_44659
        defunc_0_f_res_mem_44742 = mem_44736
        defunc_0_f_res_mem_44743 = mem_44667
        defunc_0_f_res_mem_44744 = mem_44738
      defunc_0_f_res_mem_44753 = defunc_0_f_res_mem_44740
      defunc_0_f_res_mem_44754 = defunc_0_f_res_mem_44741
      defunc_0_f_res_mem_44755 = defunc_0_f_res_mem_44742
      defunc_0_f_res_mem_44756 = defunc_0_f_res_mem_44743
      defunc_0_f_res_mem_44757 = defunc_0_f_res_mem_44744
    defunc_4_map_res_mem_44333 = None
    defunc_3_map_res_mem_44395 = None
    mem_44438 = None
    out_arrsizze_44984 = m_30124
    out_arrsizze_44986 = m_30124
    out_arrsizze_44988 = m_30124
    out_arrsizze_44990 = m_30124
    out_arrsizze_44992 = m_30124
    out_arrsizze_44993 = iota32_arg_30510
    out_arrsizze_44995 = m_30124
    out_arrsizze_44996 = iota32_arg_30510
    out_arrsizze_44998 = iota32_arg_30510
    out_arrsizze_45000 = m_30124
    out_arrsizze_45002 = m_30124
    out_arrsizze_45004 = m_30124
    out_arrsizze_45006 = m_30124
    out_arrsizze_45007 = N_30123
    out_arrsizze_45009 = m_30124
    out_arrsizze_45010 = N_30123
    out_mem_44983 = defunc_0_f_res_mem_44430
    out_mem_44985 = defunc_4_map_res_mem_44331
    out_mem_44987 = defunc_3_map_res_mem_44396
    out_mem_44989 = defunc_3_map_res_mem_44397
    out_mem_44991 = defunc_0_f_res_mem_44753
    out_mem_44994 = defunc_0_f_res_mem_44754
    out_mem_44997 = mem_44435
    out_mem_44999 = defunc_0_f_res_mem_44755
    out_mem_45001 = defunc_0_f_res_mem_44756
    out_mem_45003 = defunc_0_f_res_mem_44757
    out_mem_45005 = defunc_4_map_res_mem_44332
    out_mem_45008 = defunc_3_map_res_mem_44294
    return (out_mem_44983, out_arrsizze_44984, out_mem_44985,
            out_arrsizze_44986, out_mem_44987, out_arrsizze_44988,
            out_mem_44989, out_arrsizze_44990, out_mem_44991,
            out_arrsizze_44992, out_arrsizze_44993, out_mem_44994,
            out_arrsizze_44995, out_arrsizze_44996, out_mem_44997,
            out_arrsizze_44998, out_mem_44999, out_arrsizze_45000,
            out_mem_45001, out_arrsizze_45002, out_mem_45003,
            out_arrsizze_45004, out_mem_45005, out_arrsizze_45006,
            out_arrsizze_45007, out_mem_45008, out_arrsizze_45009,
            out_arrsizze_45010)
  def futhark_remove_nans(self, images_mem_43531, m_30109, n_30110, p_30111,
                          nan_value_30112):
    y_31690 = (n_30110 * p_30111)
    nest_sizze_31691 = (m_30109 * y_31690)
    segmap_group_sizze_31692 = self.sizes["remove_nans.segmap_group_size_31635"]
    segmap_usable_groups_31693 = sdiv_up64(nest_sizze_31691,
                                           segmap_group_sizze_31692)
    binop_x_43534 = (m_30109 * n_30110)
    binop_x_43535 = (p_30111 * binop_x_43534)
    bytes_43533 = (np.int64(4) * binop_x_43535)
    mem_43536 = opencl_alloc(self, bytes_43533, "mem_43536")
    if ((1 * (np.long(segmap_usable_groups_31693) * np.long(segmap_group_sizze_31692))) != 0):
      self.remove_nanszisegmap_31631_var.set_args(self.global_failure,
                                                  np.int64(m_30109),
                                                  np.int64(n_30110),
                                                  np.int64(p_30111),
                                                  np.int16(nan_value_30112),
                                                  images_mem_43531, mem_43536)
      cl.enqueue_nd_range_kernel(self.queue, self.remove_nanszisegmap_31631_var,
                                 ((np.long(segmap_usable_groups_31693) * np.long(segmap_group_sizze_31692)),),
                                 (np.long(segmap_group_sizze_31692),))
      if synchronous:
        sync(self)
    out_arrsizze_44984 = m_30109
    out_arrsizze_44985 = n_30110
    out_arrsizze_44986 = p_30111
    out_mem_44983 = mem_43536
    return (out_mem_44983, out_arrsizze_44984, out_arrsizze_44985,
            out_arrsizze_44986)
  def futhark_reshapeTransp(self, images_mem_43531, m_30102, n_30103, p_30104):
    flatten_to_arg_30106 = (n_30103 * p_30104)
    binop_x_43533 = (m_30102 * flatten_to_arg_30106)
    bytes_43532 = (np.int64(4) * binop_x_43533)
    mem_43534 = opencl_alloc(self, bytes_43532, "mem_43534")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_43534, np.int64(0),
                                                images_mem_43531, np.int64(0),
                                                np.int64(1),
                                                flatten_to_arg_30106, m_30102)
    out_arrsizze_44984 = flatten_to_arg_30106
    out_arrsizze_44985 = m_30102
    out_mem_44983 = mem_43534
    return (out_mem_44983, out_arrsizze_44984, out_arrsizze_44985)
  def main(self, trend_30873_ext, k_30874_ext, n_30875_ext, freq_30876_ext,
           hfrac_30877_ext, lam_30878_ext, mappingindices_mem_43531_ext,
           images_mem_43532_ext):
    try:
      trend_30873 = np.int32(ct.c_int32(trend_30873_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(trend_30873_ext),
                                                                                                                            trend_30873_ext))
    try:
      k_30874 = np.int32(ct.c_int32(k_30874_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(k_30874_ext),
                                                                                                                            k_30874_ext))
    try:
      n_30875 = np.int32(ct.c_int32(n_30875_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(n_30875_ext),
                                                                                                                            n_30875_ext))
    try:
      freq_30876 = np.float32(ct.c_float(freq_30876_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(freq_30876_ext),
                                                                                                                            freq_30876_ext))
    try:
      hfrac_30877 = np.float32(ct.c_float(hfrac_30877_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(hfrac_30877_ext),
                                                                                                                            hfrac_30877_ext))
    try:
      lam_30878 = np.float32(ct.c_float(lam_30878_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #5 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(lam_30878_ext),
                                                                                                                            lam_30878_ext))
    try:
      assert ((type(mappingindices_mem_43531_ext) in [np.ndarray,
                                                      cl.array.Array]) and (mappingindices_mem_43531_ext.dtype == np.int32)), "Parameter has unexpected type"
      N_30870 = np.int64(mappingindices_mem_43531_ext.shape[0])
      if (type(mappingindices_mem_43531_ext) == cl.array.Array):
        mappingindices_mem_43531 = mappingindices_mem_43531_ext.data
      else:
        mappingindices_mem_43531 = opencl_alloc(self,
                                                np.int64(mappingindices_mem_43531_ext.nbytes),
                                                "mappingindices_mem_43531")
        if (np.int64(mappingindices_mem_43531_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, mappingindices_mem_43531,
                          normaliseArray(mappingindices_mem_43531_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #6 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[]i32",
                                                                                                                            type(mappingindices_mem_43531_ext),
                                                                                                                            mappingindices_mem_43531_ext))
    try:
      assert ((type(images_mem_43532_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_43532_ext.dtype == np.float32)), "Parameter has unexpected type"
      m_30871 = np.int64(images_mem_43532_ext.shape[0])
      N_30872 = np.int64(images_mem_43532_ext.shape[1])
      if (type(images_mem_43532_ext) == cl.array.Array):
        images_mem_43532 = images_mem_43532_ext.data
      else:
        images_mem_43532 = opencl_alloc(self,
                                        np.int64(images_mem_43532_ext.nbytes),
                                        "images_mem_43532")
        if (np.int64(images_mem_43532_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_43532,
                          normaliseArray(images_mem_43532_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #7 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][]f32",
                                                                                                                            type(images_mem_43532_ext),
                                                                                                                            images_mem_43532_ext))
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_44983, out_arrsizze_44984, out_mem_44985, out_arrsizze_44986,
       out_mem_44987,
       out_arrsizze_44988) = self.futhark_main(mappingindices_mem_43531,
                                               images_mem_43532, N_30870,
                                               m_30871, N_30872, trend_30873,
                                               k_30874, n_30875, freq_30876,
                                               hfrac_30877, lam_30878)
    sync(self)
    return (cl.array.Array(self.queue, (out_arrsizze_44984,), ct.c_int32,
                           data=out_mem_44983), cl.array.Array(self.queue,
                                                               (out_arrsizze_44986,),
                                                               ct.c_float,
                                                               data=out_mem_44985),
            cl.array.Array(self.queue, (out_arrsizze_44988,), ct.c_float,
                           data=out_mem_44987))
  def mainDetailed(self, trend_30126_ext, k_30127_ext, n_30128_ext,
                   freq_30129_ext, hfrac_30130_ext, lam_30131_ext,
                   mappingindices_mem_43531_ext, images_mem_43532_ext):
    try:
      trend_30126 = np.int32(ct.c_int32(trend_30126_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(trend_30126_ext),
                                                                                                                            trend_30126_ext))
    try:
      k_30127 = np.int32(ct.c_int32(k_30127_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(k_30127_ext),
                                                                                                                            k_30127_ext))
    try:
      n_30128 = np.int32(ct.c_int32(n_30128_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(n_30128_ext),
                                                                                                                            n_30128_ext))
    try:
      freq_30129 = np.float32(ct.c_float(freq_30129_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(freq_30129_ext),
                                                                                                                            freq_30129_ext))
    try:
      hfrac_30130 = np.float32(ct.c_float(hfrac_30130_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(hfrac_30130_ext),
                                                                                                                            hfrac_30130_ext))
    try:
      lam_30131 = np.float32(ct.c_float(lam_30131_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #5 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(lam_30131_ext),
                                                                                                                            lam_30131_ext))
    try:
      assert ((type(mappingindices_mem_43531_ext) in [np.ndarray,
                                                      cl.array.Array]) and (mappingindices_mem_43531_ext.dtype == np.int32)), "Parameter has unexpected type"
      N_30123 = np.int64(mappingindices_mem_43531_ext.shape[0])
      if (type(mappingindices_mem_43531_ext) == cl.array.Array):
        mappingindices_mem_43531 = mappingindices_mem_43531_ext.data
      else:
        mappingindices_mem_43531 = opencl_alloc(self,
                                                np.int64(mappingindices_mem_43531_ext.nbytes),
                                                "mappingindices_mem_43531")
        if (np.int64(mappingindices_mem_43531_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, mappingindices_mem_43531,
                          normaliseArray(mappingindices_mem_43531_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #6 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[]i32",
                                                                                                                            type(mappingindices_mem_43531_ext),
                                                                                                                            mappingindices_mem_43531_ext))
    try:
      assert ((type(images_mem_43532_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_43532_ext.dtype == np.float32)), "Parameter has unexpected type"
      m_30124 = np.int64(images_mem_43532_ext.shape[0])
      N_30125 = np.int64(images_mem_43532_ext.shape[1])
      if (type(images_mem_43532_ext) == cl.array.Array):
        images_mem_43532 = images_mem_43532_ext.data
      else:
        images_mem_43532 = opencl_alloc(self,
                                        np.int64(images_mem_43532_ext.nbytes),
                                        "images_mem_43532")
        if (np.int64(images_mem_43532_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_43532,
                          normaliseArray(images_mem_43532_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #7 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][]f32",
                                                                                                                            type(images_mem_43532_ext),
                                                                                                                            images_mem_43532_ext))
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_44983, out_arrsizze_44984, out_mem_44985, out_arrsizze_44986,
       out_mem_44987, out_arrsizze_44988, out_mem_44989, out_arrsizze_44990,
       out_mem_44991, out_arrsizze_44992, out_arrsizze_44993, out_mem_44994,
       out_arrsizze_44995, out_arrsizze_44996, out_mem_44997,
       out_arrsizze_44998, out_mem_44999, out_arrsizze_45000, out_mem_45001,
       out_arrsizze_45002, out_mem_45003, out_arrsizze_45004, out_mem_45005,
       out_arrsizze_45006, out_arrsizze_45007, out_mem_45008,
       out_arrsizze_45009,
       out_arrsizze_45010) = self.futhark_mainDetailed(mappingindices_mem_43531,
                                                       images_mem_43532,
                                                       N_30123, m_30124,
                                                       N_30125, trend_30126,
                                                       k_30127, n_30128,
                                                       freq_30129, hfrac_30130,
                                                       lam_30131)
    sync(self)
    return (cl.array.Array(self.queue, (out_arrsizze_44984,), ct.c_float,
                           data=out_mem_44983), cl.array.Array(self.queue,
                                                               (out_arrsizze_44986,),
                                                               ct.c_int32,
                                                               data=out_mem_44985),
            cl.array.Array(self.queue, (out_arrsizze_44988,), ct.c_int32,
                           data=out_mem_44987), cl.array.Array(self.queue,
                                                               (out_arrsizze_44990,),
                                                               ct.c_float,
                                                               data=out_mem_44989),
            cl.array.Array(self.queue, (out_arrsizze_44992, out_arrsizze_44993),
                           ct.c_float, data=out_mem_44991),
            cl.array.Array(self.queue, (out_arrsizze_44995, out_arrsizze_44996),
                           ct.c_float, data=out_mem_44994),
            cl.array.Array(self.queue, (out_arrsizze_44998,), ct.c_float,
                           data=out_mem_44997), cl.array.Array(self.queue,
                                                               (out_arrsizze_45000,),
                                                               ct.c_int32,
                                                               data=out_mem_44999),
            cl.array.Array(self.queue, (out_arrsizze_45002,), ct.c_float,
                           data=out_mem_45001), cl.array.Array(self.queue,
                                                               (out_arrsizze_45004,),
                                                               ct.c_float,
                                                               data=out_mem_45003),
            cl.array.Array(self.queue, (out_arrsizze_45006, out_arrsizze_45007),
                           ct.c_float, data=out_mem_45005),
            cl.array.Array(self.queue, (out_arrsizze_45009, out_arrsizze_45010),
                           ct.c_float, data=out_mem_45008))
  def remove_nans(self, nan_value_30112_ext, images_mem_43531_ext):
    try:
      nan_value_30112 = np.int16(ct.c_int16(nan_value_30112_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i16",
                                                                                                                            type(nan_value_30112_ext),
                                                                                                                            nan_value_30112_ext))
    try:
      assert ((type(images_mem_43531_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_43531_ext.dtype == np.int16)), "Parameter has unexpected type"
      m_30109 = np.int64(images_mem_43531_ext.shape[0])
      n_30110 = np.int64(images_mem_43531_ext.shape[1])
      p_30111 = np.int64(images_mem_43531_ext.shape[2])
      if (type(images_mem_43531_ext) == cl.array.Array):
        images_mem_43531 = images_mem_43531_ext.data
      else:
        images_mem_43531 = opencl_alloc(self,
                                        np.int64(images_mem_43531_ext.nbytes),
                                        "images_mem_43531")
        if (np.int64(images_mem_43531_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_43531,
                          normaliseArray(images_mem_43531_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][][]i16",
                                                                                                                            type(images_mem_43531_ext),
                                                                                                                            images_mem_43531_ext))
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_44983, out_arrsizze_44984, out_arrsizze_44985,
       out_arrsizze_44986) = self.futhark_remove_nans(images_mem_43531, m_30109,
                                                      n_30110, p_30111,
                                                      nan_value_30112)
    sync(self)
    return cl.array.Array(self.queue, (out_arrsizze_44984, out_arrsizze_44985,
                                       out_arrsizze_44986), ct.c_float,
                          data=out_mem_44983)
  def reshapeTransp(self, images_mem_43531_ext):
    try:
      assert ((type(images_mem_43531_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_43531_ext.dtype == np.float32)), "Parameter has unexpected type"
      m_30102 = np.int64(images_mem_43531_ext.shape[0])
      n_30103 = np.int64(images_mem_43531_ext.shape[1])
      p_30104 = np.int64(images_mem_43531_ext.shape[2])
      if (type(images_mem_43531_ext) == cl.array.Array):
        images_mem_43531 = images_mem_43531_ext.data
      else:
        images_mem_43531 = opencl_alloc(self,
                                        np.int64(images_mem_43531_ext.nbytes),
                                        "images_mem_43531")
        if (np.int64(images_mem_43531_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_43531,
                          normaliseArray(images_mem_43531_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][][]f32",
                                                                                                                            type(images_mem_43531_ext),
                                                                                                                            images_mem_43531_ext))
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_44983, out_arrsizze_44984,
       out_arrsizze_44985) = self.futhark_reshapeTransp(images_mem_43531,
                                                        m_30102, n_30103,
                                                        p_30104)
    sync(self)
    return cl.array.Array(self.queue, (out_arrsizze_44984, out_arrsizze_44985),
                          ct.c_float, data=out_mem_44983)
