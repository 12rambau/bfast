import sys
import numpy as np
import ctypes as ct
# Stub code for OpenCL setup.

import pyopencl as cl
import numpy as np
import sys

if cl.version.VERSION < (2015,2):
    raise Exception('Futhark requires at least PyOpenCL version 2015.2.  Installed version is %s.' %
                    cl.version.VERSION_TEXT)

def parse_preferred_device(s):
    pref_num = 0
    if len(s) > 1 and s[0] == '#':
        i = 1
        while i < len(s):
            if not s[i].isdigit():
                break
            else:
                pref_num = pref_num * 10 + int(s[i])
            i += 1
        while i < len(s) and s[i].isspace():
            i += 1
        return (s[i:], pref_num)
    else:
        return (s, 0)

def get_prefered_context(interactive=False, platform_pref=None, device_pref=None):
    if device_pref != None:
        (device_pref, device_num) = parse_preferred_device(device_pref)
    else:
        device_num = 0

    if interactive:
        return cl.create_some_context(interactive=True)

    def blacklisted(p, d):
        return platform_pref == None and device_pref == None and \
            p.name == "Apple" and d.name.find("Intel(R) Core(TM)") >= 0
    def platform_ok(p):
        return not platform_pref or p.name.find(platform_pref) >= 0
    def device_ok(d):
        return not device_pref or d.name.find(device_pref) >= 0

    device_matches = 0

    for p in cl.get_platforms():
        if not platform_ok(p):
            continue
        for d in p.get_devices():
            if blacklisted(p,d) or not device_ok(d):
                continue
            if device_matches == device_num:
                return cl.Context(devices=[d])
            else:
                device_matches += 1
    raise Exception('No OpenCL platform and device matching constraints found.')

def size_assignment(s):
    name, value = s.split('=')
    return (name, int(value))

def check_types(self, required_types):
    if 'f64' in required_types:
        if self.device.get_info(cl.device_info.PREFERRED_VECTOR_WIDTH_DOUBLE) == 0:
            raise Exception('Program uses double-precision floats, but this is not supported on chosen device: %s' % self.device.name)

def apply_size_heuristics(self, size_heuristics, sizes):
    for (platform_name, device_type, size, valuef) in size_heuristics:
        if sizes[size] == None \
           and self.platform.name.find(platform_name) >= 0 \
           and (self.device.type & device_type) == device_type:
               sizes[size] = valuef(self.device)
    return sizes

def initialise_opencl_object(self,
                             program_src='',
                             command_queue=None,
                             interactive=False,
                             platform_pref=None,
                             device_pref=None,
                             default_group_size=None,
                             default_num_groups=None,
                             default_tile_size=None,
                             default_threshold=None,
                             size_heuristics=[],
                             required_types=[],
                             all_sizes={},
                             user_sizes={}):
    if command_queue is None:
        self.ctx = get_prefered_context(interactive, platform_pref, device_pref)
        self.queue = cl.CommandQueue(self.ctx)
    else:
        self.ctx = command_queue.context
        self.queue = command_queue
    self.device = self.queue.device
    self.platform = self.device.platform
    self.pool = cl.tools.MemoryPool(cl.tools.ImmediateAllocator(self.queue))
    device_type = self.device.type

    check_types(self, required_types)

    max_group_size = int(self.device.max_work_group_size)
    max_tile_size = int(np.sqrt(self.device.max_work_group_size))

    self.max_group_size = max_group_size
    self.max_tile_size = max_tile_size
    self.max_threshold = 0
    self.max_num_groups = 0

    self.max_local_memory = int(self.device.local_mem_size)

    # Futhark reserves 4 bytes of local memory for its own purposes.
    self.max_local_memory -= 4

    # See comment in rts/c/opencl.h.
    if self.platform.name.find('NVIDIA CUDA') >= 0:
        self.max_local_memory -= 12
    elif self.platform.name.find('AMD') >= 0:
        self.max_local_memory -= 16

    self.free_list = {}

    self.global_failure = self.pool.allocate(np.int32().itemsize)
    cl.enqueue_fill_buffer(self.queue, self.global_failure, np.int32(-1), 0, np.int32().itemsize)
    self.global_failure_args = self.pool.allocate(np.int64().itemsize *
                                                  (self.global_failure_args_max+1))
    self.failure_is_an_option = np.int32(0)

    if 'default_group_size' in sizes:
        default_group_size = sizes['default_group_size']
        del sizes['default_group_size']

    if 'default_num_groups' in sizes:
        default_num_groups = sizes['default_num_groups']
        del sizes['default_num_groups']

    if 'default_tile_size' in sizes:
        default_tile_size = sizes['default_tile_size']
        del sizes['default_tile_size']

    if 'default_threshold' in sizes:
        default_threshold = sizes['default_threshold']
        del sizes['default_threshold']

    default_group_size_set = default_group_size != None
    default_tile_size_set = default_tile_size != None
    default_sizes = apply_size_heuristics(self, size_heuristics,
                                          {'group_size': default_group_size,
                                           'tile_size': default_tile_size,
                                           'reg_tile_size': default_reg_tile_size,
                                           'num_groups': default_num_groups,
                                           'lockstep_width': None,
                                           'threshold': default_threshold})
    default_group_size = default_sizes['group_size']
    default_num_groups = default_sizes['num_groups']
    default_threshold = default_sizes['threshold']
    default_tile_size = default_sizes['tile_size']
    lockstep_width = default_sizes['lockstep_width']

    if default_group_size > max_group_size:
        if default_group_size_set:
            sys.stderr.write('Note: Device limits group size to {} (down from {})\n'.
                             format(max_tile_size, default_group_size))
        default_group_size = max_group_size

    if default_tile_size > max_tile_size:
        if default_tile_size_set:
            sys.stderr.write('Note: Device limits tile size to {} (down from {})\n'.
                             format(max_tile_size, default_tile_size))
        default_tile_size = max_tile_size

    for (k,v) in user_sizes.items():
        if k in all_sizes:
            all_sizes[k]['value'] = v
        else:
            raise Exception('Unknown size: {}\nKnown sizes: {}'.format(k, ' '.join(all_sizes.keys())))

    self.sizes = {}
    for (k,v) in all_sizes.items():
        if v['class'] == 'group_size':
            max_value = max_group_size
            default_value = default_group_size
        elif v['class'] == 'num_groups':
            max_value = max_group_size # Intentional!
            default_value = default_num_groups
        elif v['class'] == 'tile_size':
            max_value = max_tile_size
            default_value = default_tile_size
        elif v['class'].startswith('threshold'):
            max_value = None
            default_value = default_threshold
        else:
            # Bespoke sizes have no limit or default.
            max_value = None
        if v['value'] == None:
            self.sizes[k] = default_value
        elif max_value != None and v['value'] > max_value:
            sys.stderr.write('Note: Device limits {} to {} (down from {}\n'.
                             format(k, max_value, v['value']))
            self.sizes[k] = max_value
        else:
            self.sizes[k] = v['value']

    # XXX: we perform only a subset of z-encoding here.  Really, the
    # compiler should provide us with the variables to which
    # parameters are mapped.
    if (len(program_src) >= 0):
        return cl.Program(self.ctx, program_src).build(
            ["-DLOCKSTEP_WIDTH={}".format(lockstep_width)]
            + ["-D{}={}".format(s.replace('z', 'zz').replace('.', 'zi').replace('#', 'zh'),v) for (s,v) in self.sizes.items()])

def opencl_alloc(self, min_size, tag):
    min_size = 1 if min_size == 0 else min_size
    assert min_size > 0
    return self.pool.allocate(min_size)

def opencl_free_all(self):
    self.pool.free_held()

def sync(self):
    failure = np.empty(1, dtype=np.int32)
    cl.enqueue_copy(self.queue, failure, self.global_failure, is_blocking=True)
    self.failure_is_an_option = np.int32(0)
    if failure[0] >= 0:
        # Reset failure information.
        cl.enqueue_fill_buffer(self.queue, self.global_failure, np.int32(-1), 0, np.int32().itemsize)

        # Read failure args.
        failure_args = np.empty(self.global_failure_args_max+1, dtype=np.int64)
        cl.enqueue_copy(self.queue, failure_args, self.global_failure_args, is_blocking=True)

        raise Exception(self.failure_msgs[failure[0]].format(*failure_args))
import pyopencl.array
import time
import argparse
sizes = {}
synchronous = False
preferred_platform = None
preferred_device = None
default_threshold = None
default_group_size = None
default_num_groups = None
default_tile_size = None
default_reg_tile_size = None
fut_opencl_src = """#ifdef cl_clang_storage_class_specifiers
#pragma OPENCL EXTENSION cl_clang_storage_class_specifiers : enable
#endif
#pragma OPENCL EXTENSION cl_khr_byte_addressable_store : enable
__kernel void dummy_kernel(__global unsigned char *dummy, int n)
{
    const int thread_gid = get_global_id(0);
    
    if (thread_gid >= n)
        return;
}
typedef char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef long int64_t;
typedef uchar uint8_t;
typedef ushort uint16_t;
typedef uint uint32_t;
typedef ulong uint64_t;
#ifdef cl_nv_pragma_unroll
static inline void mem_fence_global()
{
    asm("membar.gl;");
}
#else
static inline void mem_fence_global()
{
    mem_fence(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
}
#endif
static inline void mem_fence_local()
{
    mem_fence(CLK_LOCAL_MEM_FENCE);
}
static inline uint8_t add8(uint8_t x, uint8_t y)
{
    return x + y;
}
static inline uint16_t add16(uint16_t x, uint16_t y)
{
    return x + y;
}
static inline uint32_t add32(uint32_t x, uint32_t y)
{
    return x + y;
}
static inline uint64_t add64(uint64_t x, uint64_t y)
{
    return x + y;
}
static inline uint8_t sub8(uint8_t x, uint8_t y)
{
    return x - y;
}
static inline uint16_t sub16(uint16_t x, uint16_t y)
{
    return x - y;
}
static inline uint32_t sub32(uint32_t x, uint32_t y)
{
    return x - y;
}
static inline uint64_t sub64(uint64_t x, uint64_t y)
{
    return x - y;
}
static inline uint8_t mul8(uint8_t x, uint8_t y)
{
    return x * y;
}
static inline uint16_t mul16(uint16_t x, uint16_t y)
{
    return x * y;
}
static inline uint32_t mul32(uint32_t x, uint32_t y)
{
    return x * y;
}
static inline uint64_t mul64(uint64_t x, uint64_t y)
{
    return x * y;
}
static inline uint8_t udiv8(uint8_t x, uint8_t y)
{
    return x / y;
}
static inline uint16_t udiv16(uint16_t x, uint16_t y)
{
    return x / y;
}
static inline uint32_t udiv32(uint32_t x, uint32_t y)
{
    return x / y;
}
static inline uint64_t udiv64(uint64_t x, uint64_t y)
{
    return x / y;
}
static inline uint8_t udiv_up8(uint8_t x, uint8_t y)
{
    return (x + y - 1) / y;
}
static inline uint16_t udiv_up16(uint16_t x, uint16_t y)
{
    return (x + y - 1) / y;
}
static inline uint32_t udiv_up32(uint32_t x, uint32_t y)
{
    return (x + y - 1) / y;
}
static inline uint64_t udiv_up64(uint64_t x, uint64_t y)
{
    return (x + y - 1) / y;
}
static inline uint8_t umod8(uint8_t x, uint8_t y)
{
    return x % y;
}
static inline uint16_t umod16(uint16_t x, uint16_t y)
{
    return x % y;
}
static inline uint32_t umod32(uint32_t x, uint32_t y)
{
    return x % y;
}
static inline uint64_t umod64(uint64_t x, uint64_t y)
{
    return x % y;
}
static inline uint8_t udiv_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint16_t udiv_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint32_t udiv_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint64_t udiv_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint8_t udiv_up_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint16_t udiv_up_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint32_t udiv_up_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint64_t udiv_up_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint8_t umod_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint16_t umod_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint32_t umod_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint64_t umod_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int8_t sdiv8(int8_t x, int8_t y)
{
    int8_t q = x / y;
    int8_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int16_t sdiv16(int16_t x, int16_t y)
{
    int16_t q = x / y;
    int16_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int32_t sdiv32(int32_t x, int32_t y)
{
    int32_t q = x / y;
    int32_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int64_t sdiv64(int64_t x, int64_t y)
{
    int64_t q = x / y;
    int64_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int8_t sdiv_up8(int8_t x, int8_t y)
{
    return sdiv8(x + y - 1, y);
}
static inline int16_t sdiv_up16(int16_t x, int16_t y)
{
    return sdiv16(x + y - 1, y);
}
static inline int32_t sdiv_up32(int32_t x, int32_t y)
{
    return sdiv32(x + y - 1, y);
}
static inline int64_t sdiv_up64(int64_t x, int64_t y)
{
    return sdiv64(x + y - 1, y);
}
static inline int8_t smod8(int8_t x, int8_t y)
{
    int8_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int16_t smod16(int16_t x, int16_t y)
{
    int16_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int32_t smod32(int32_t x, int32_t y)
{
    int32_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int64_t smod64(int64_t x, int64_t y)
{
    int64_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int8_t sdiv_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : sdiv8(x, y);
}
static inline int16_t sdiv_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : sdiv16(x, y);
}
static inline int32_t sdiv_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : sdiv32(x, y);
}
static inline int64_t sdiv_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : sdiv64(x, y);
}
static inline int8_t sdiv_up_safe8(int8_t x, int8_t y)
{
    return sdiv_safe8(x + y - 1, y);
}
static inline int16_t sdiv_up_safe16(int16_t x, int16_t y)
{
    return sdiv_safe16(x + y - 1, y);
}
static inline int32_t sdiv_up_safe32(int32_t x, int32_t y)
{
    return sdiv_safe32(x + y - 1, y);
}
static inline int64_t sdiv_up_safe64(int64_t x, int64_t y)
{
    return sdiv_safe64(x + y - 1, y);
}
static inline int8_t smod_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : smod8(x, y);
}
static inline int16_t smod_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : smod16(x, y);
}
static inline int32_t smod_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : smod32(x, y);
}
static inline int64_t smod_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : smod64(x, y);
}
static inline int8_t squot8(int8_t x, int8_t y)
{
    return x / y;
}
static inline int16_t squot16(int16_t x, int16_t y)
{
    return x / y;
}
static inline int32_t squot32(int32_t x, int32_t y)
{
    return x / y;
}
static inline int64_t squot64(int64_t x, int64_t y)
{
    return x / y;
}
static inline int8_t srem8(int8_t x, int8_t y)
{
    return x % y;
}
static inline int16_t srem16(int16_t x, int16_t y)
{
    return x % y;
}
static inline int32_t srem32(int32_t x, int32_t y)
{
    return x % y;
}
static inline int64_t srem64(int64_t x, int64_t y)
{
    return x % y;
}
static inline int8_t squot_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int16_t squot_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int32_t squot_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int64_t squot_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int8_t srem_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int16_t srem_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int32_t srem_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int64_t srem_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int8_t smin8(int8_t x, int8_t y)
{
    return x < y ? x : y;
}
static inline int16_t smin16(int16_t x, int16_t y)
{
    return x < y ? x : y;
}
static inline int32_t smin32(int32_t x, int32_t y)
{
    return x < y ? x : y;
}
static inline int64_t smin64(int64_t x, int64_t y)
{
    return x < y ? x : y;
}
static inline uint8_t umin8(uint8_t x, uint8_t y)
{
    return x < y ? x : y;
}
static inline uint16_t umin16(uint16_t x, uint16_t y)
{
    return x < y ? x : y;
}
static inline uint32_t umin32(uint32_t x, uint32_t y)
{
    return x < y ? x : y;
}
static inline uint64_t umin64(uint64_t x, uint64_t y)
{
    return x < y ? x : y;
}
static inline int8_t smax8(int8_t x, int8_t y)
{
    return x < y ? y : x;
}
static inline int16_t smax16(int16_t x, int16_t y)
{
    return x < y ? y : x;
}
static inline int32_t smax32(int32_t x, int32_t y)
{
    return x < y ? y : x;
}
static inline int64_t smax64(int64_t x, int64_t y)
{
    return x < y ? y : x;
}
static inline uint8_t umax8(uint8_t x, uint8_t y)
{
    return x < y ? y : x;
}
static inline uint16_t umax16(uint16_t x, uint16_t y)
{
    return x < y ? y : x;
}
static inline uint32_t umax32(uint32_t x, uint32_t y)
{
    return x < y ? y : x;
}
static inline uint64_t umax64(uint64_t x, uint64_t y)
{
    return x < y ? y : x;
}
static inline uint8_t shl8(uint8_t x, uint8_t y)
{
    return x << y;
}
static inline uint16_t shl16(uint16_t x, uint16_t y)
{
    return x << y;
}
static inline uint32_t shl32(uint32_t x, uint32_t y)
{
    return x << y;
}
static inline uint64_t shl64(uint64_t x, uint64_t y)
{
    return x << y;
}
static inline uint8_t lshr8(uint8_t x, uint8_t y)
{
    return x >> y;
}
static inline uint16_t lshr16(uint16_t x, uint16_t y)
{
    return x >> y;
}
static inline uint32_t lshr32(uint32_t x, uint32_t y)
{
    return x >> y;
}
static inline uint64_t lshr64(uint64_t x, uint64_t y)
{
    return x >> y;
}
static inline int8_t ashr8(int8_t x, int8_t y)
{
    return x >> y;
}
static inline int16_t ashr16(int16_t x, int16_t y)
{
    return x >> y;
}
static inline int32_t ashr32(int32_t x, int32_t y)
{
    return x >> y;
}
static inline int64_t ashr64(int64_t x, int64_t y)
{
    return x >> y;
}
static inline uint8_t and8(uint8_t x, uint8_t y)
{
    return x & y;
}
static inline uint16_t and16(uint16_t x, uint16_t y)
{
    return x & y;
}
static inline uint32_t and32(uint32_t x, uint32_t y)
{
    return x & y;
}
static inline uint64_t and64(uint64_t x, uint64_t y)
{
    return x & y;
}
static inline uint8_t or8(uint8_t x, uint8_t y)
{
    return x | y;
}
static inline uint16_t or16(uint16_t x, uint16_t y)
{
    return x | y;
}
static inline uint32_t or32(uint32_t x, uint32_t y)
{
    return x | y;
}
static inline uint64_t or64(uint64_t x, uint64_t y)
{
    return x | y;
}
static inline uint8_t xor8(uint8_t x, uint8_t y)
{
    return x ^ y;
}
static inline uint16_t xor16(uint16_t x, uint16_t y)
{
    return x ^ y;
}
static inline uint32_t xor32(uint32_t x, uint32_t y)
{
    return x ^ y;
}
static inline uint64_t xor64(uint64_t x, uint64_t y)
{
    return x ^ y;
}
static inline bool ult8(uint8_t x, uint8_t y)
{
    return x < y;
}
static inline bool ult16(uint16_t x, uint16_t y)
{
    return x < y;
}
static inline bool ult32(uint32_t x, uint32_t y)
{
    return x < y;
}
static inline bool ult64(uint64_t x, uint64_t y)
{
    return x < y;
}
static inline bool ule8(uint8_t x, uint8_t y)
{
    return x <= y;
}
static inline bool ule16(uint16_t x, uint16_t y)
{
    return x <= y;
}
static inline bool ule32(uint32_t x, uint32_t y)
{
    return x <= y;
}
static inline bool ule64(uint64_t x, uint64_t y)
{
    return x <= y;
}
static inline bool slt8(int8_t x, int8_t y)
{
    return x < y;
}
static inline bool slt16(int16_t x, int16_t y)
{
    return x < y;
}
static inline bool slt32(int32_t x, int32_t y)
{
    return x < y;
}
static inline bool slt64(int64_t x, int64_t y)
{
    return x < y;
}
static inline bool sle8(int8_t x, int8_t y)
{
    return x <= y;
}
static inline bool sle16(int16_t x, int16_t y)
{
    return x <= y;
}
static inline bool sle32(int32_t x, int32_t y)
{
    return x <= y;
}
static inline bool sle64(int64_t x, int64_t y)
{
    return x <= y;
}
static inline int8_t pow8(int8_t x, int8_t y)
{
    int8_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int16_t pow16(int16_t x, int16_t y)
{
    int16_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int32_t pow32(int32_t x, int32_t y)
{
    int32_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int64_t pow64(int64_t x, int64_t y)
{
    int64_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline bool itob_i8_bool(int8_t x)
{
    return x;
}
static inline bool itob_i16_bool(int16_t x)
{
    return x;
}
static inline bool itob_i32_bool(int32_t x)
{
    return x;
}
static inline bool itob_i64_bool(int64_t x)
{
    return x;
}
static inline int8_t btoi_bool_i8(bool x)
{
    return x;
}
static inline int16_t btoi_bool_i16(bool x)
{
    return x;
}
static inline int32_t btoi_bool_i32(bool x)
{
    return x;
}
static inline int64_t btoi_bool_i64(bool x)
{
    return x;
}
#define sext_i8_i8(x) ((int8_t) (int8_t) x)
#define sext_i8_i16(x) ((int16_t) (int8_t) x)
#define sext_i8_i32(x) ((int32_t) (int8_t) x)
#define sext_i8_i64(x) ((int64_t) (int8_t) x)
#define sext_i16_i8(x) ((int8_t) (int16_t) x)
#define sext_i16_i16(x) ((int16_t) (int16_t) x)
#define sext_i16_i32(x) ((int32_t) (int16_t) x)
#define sext_i16_i64(x) ((int64_t) (int16_t) x)
#define sext_i32_i8(x) ((int8_t) (int32_t) x)
#define sext_i32_i16(x) ((int16_t) (int32_t) x)
#define sext_i32_i32(x) ((int32_t) (int32_t) x)
#define sext_i32_i64(x) ((int64_t) (int32_t) x)
#define sext_i64_i8(x) ((int8_t) (int64_t) x)
#define sext_i64_i16(x) ((int16_t) (int64_t) x)
#define sext_i64_i32(x) ((int32_t) (int64_t) x)
#define sext_i64_i64(x) ((int64_t) (int64_t) x)
#define zext_i8_i8(x) ((int8_t) (uint8_t) x)
#define zext_i8_i16(x) ((int16_t) (uint8_t) x)
#define zext_i8_i32(x) ((int32_t) (uint8_t) x)
#define zext_i8_i64(x) ((int64_t) (uint8_t) x)
#define zext_i16_i8(x) ((int8_t) (uint16_t) x)
#define zext_i16_i16(x) ((int16_t) (uint16_t) x)
#define zext_i16_i32(x) ((int32_t) (uint16_t) x)
#define zext_i16_i64(x) ((int64_t) (uint16_t) x)
#define zext_i32_i8(x) ((int8_t) (uint32_t) x)
#define zext_i32_i16(x) ((int16_t) (uint32_t) x)
#define zext_i32_i32(x) ((int32_t) (uint32_t) x)
#define zext_i32_i64(x) ((int64_t) (uint32_t) x)
#define zext_i64_i8(x) ((int8_t) (uint64_t) x)
#define zext_i64_i16(x) ((int16_t) (uint64_t) x)
#define zext_i64_i32(x) ((int32_t) (uint64_t) x)
#define zext_i64_i64(x) ((int64_t) (uint64_t) x)
#if defined(__OPENCL_VERSION__)
static int32_t futrts_popc8(int8_t x)
{
    return popcount(x);
}
static int32_t futrts_popc16(int16_t x)
{
    return popcount(x);
}
static int32_t futrts_popc32(int32_t x)
{
    return popcount(x);
}
static int32_t futrts_popc64(int64_t x)
{
    return popcount(x);
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_popc8(int8_t x)
{
    return __popc(zext_i8_i32(x));
}
static int32_t futrts_popc16(int16_t x)
{
    return __popc(zext_i16_i32(x));
}
static int32_t futrts_popc32(int32_t x)
{
    return __popc(x);
}
static int32_t futrts_popc64(int64_t x)
{
    return __popcll(x);
}
#else
static int32_t futrts_popc8(int8_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc16(int16_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc32(int32_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc64(int64_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
#endif
#if defined(__OPENCL_VERSION__)
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    return mul_hi(a, b);
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    return mul_hi(a, b);
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    return mul_hi(a, b);
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    return mul_hi(a, b);
}
#elif defined(__CUDA_ARCH__)
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    uint16_t aa = a;
    uint16_t bb = b;
    
    return aa * bb >> 8;
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    uint32_t aa = a;
    uint32_t bb = b;
    
    return aa * bb >> 16;
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    return mulhi(a, b);
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    return mul64hi(a, b);
}
#else
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    uint16_t aa = a;
    uint16_t bb = b;
    
    return aa * bb >> 8;
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    uint32_t aa = a;
    uint32_t bb = b;
    
    return aa * bb >> 16;
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    uint64_t aa = a;
    uint64_t bb = b;
    
    return aa * bb >> 32;
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    __uint128_t aa = a;
    __uint128_t bb = b;
    
    return aa * bb >> 64;
}
#endif
#if defined(__OPENCL_VERSION__)
static uint8_t futrts_mad_hi8(uint8_t a, uint8_t b, uint8_t c)
{
    return mad_hi(a, b, c);
}
static uint16_t futrts_mad_hi16(uint16_t a, uint16_t b, uint16_t c)
{
    return mad_hi(a, b, c);
}
static uint32_t futrts_mad_hi32(uint32_t a, uint32_t b, uint32_t c)
{
    return mad_hi(a, b, c);
}
static uint64_t futrts_mad_hi64(uint64_t a, uint64_t b, uint64_t c)
{
    return mad_hi(a, b, c);
}
#else
static uint8_t futrts_mad_hi8(uint8_t a, uint8_t b, uint8_t c)
{
    return futrts_mul_hi8(a, b) + c;
}
static uint16_t futrts_mad_hi16(uint16_t a, uint16_t b, uint16_t c)
{
    return futrts_mul_hi16(a, b) + c;
}
static uint32_t futrts_mad_hi32(uint32_t a, uint32_t b, uint32_t c)
{
    return futrts_mul_hi32(a, b) + c;
}
static uint64_t futrts_mad_hi64(uint64_t a, uint64_t b, uint64_t c)
{
    return futrts_mul_hi64(a, b) + c;
}
#endif
#if defined(__OPENCL_VERSION__)
static int32_t futrts_clzz8(int8_t x)
{
    return clz(x);
}
static int32_t futrts_clzz16(int16_t x)
{
    return clz(x);
}
static int32_t futrts_clzz32(int32_t x)
{
    return clz(x);
}
static int32_t futrts_clzz64(int64_t x)
{
    return clz(x);
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_clzz8(int8_t x)
{
    return __clz(zext_i8_i32(x)) - 24;
}
static int32_t futrts_clzz16(int16_t x)
{
    return __clz(zext_i16_i32(x)) - 16;
}
static int32_t futrts_clzz32(int32_t x)
{
    return __clz(x);
}
static int32_t futrts_clzz64(int64_t x)
{
    return __clzll(x);
}
#else
static int32_t futrts_clzz8(int8_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz16(int16_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz32(int32_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz64(int64_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
#endif
#if defined(__OPENCL_VERSION__)
static int32_t futrts_ctzz8(int8_t x)
{
    int i = 0;
    
    for (; i < 8 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz16(int16_t x)
{
    int i = 0;
    
    for (; i < 16 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz32(int32_t x)
{
    int i = 0;
    
    for (; i < 32 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz64(int64_t x)
{
    int i = 0;
    
    for (; i < 64 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_ctzz8(int8_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 8 : y - 1;
}
static int32_t futrts_ctzz16(int16_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 16 : y - 1;
}
static int32_t futrts_ctzz32(int32_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 32 : y - 1;
}
static int32_t futrts_ctzz64(int64_t x)
{
    int y = __ffsll(x);
    
    return y == 0 ? 64 : y - 1;
}
#else
static int32_t futrts_ctzz8(int8_t x)
{
    return x == 0 ? 8 : __builtin_ctz((uint32_t) x);
}
static int32_t futrts_ctzz16(int16_t x)
{
    return x == 0 ? 16 : __builtin_ctz((uint32_t) x);
}
static int32_t futrts_ctzz32(int32_t x)
{
    return x == 0 ? 32 : __builtin_ctz(x);
}
static int32_t futrts_ctzz64(int64_t x)
{
    return x == 0 ? 64 : __builtin_ctzl(x);
}
#endif
static inline float fdiv32(float x, float y)
{
    return x / y;
}
static inline float fadd32(float x, float y)
{
    return x + y;
}
static inline float fsub32(float x, float y)
{
    return x - y;
}
static inline float fmul32(float x, float y)
{
    return x * y;
}
static inline float fmin32(float x, float y)
{
    return fmin(x, y);
}
static inline float fmax32(float x, float y)
{
    return fmax(x, y);
}
static inline float fpow32(float x, float y)
{
    return pow(x, y);
}
static inline bool cmplt32(float x, float y)
{
    return x < y;
}
static inline bool cmple32(float x, float y)
{
    return x <= y;
}
static inline float sitofp_i8_f32(int8_t x)
{
    return (float) x;
}
static inline float sitofp_i16_f32(int16_t x)
{
    return (float) x;
}
static inline float sitofp_i32_f32(int32_t x)
{
    return (float) x;
}
static inline float sitofp_i64_f32(int64_t x)
{
    return (float) x;
}
static inline float uitofp_i8_f32(uint8_t x)
{
    return (float) x;
}
static inline float uitofp_i16_f32(uint16_t x)
{
    return (float) x;
}
static inline float uitofp_i32_f32(uint32_t x)
{
    return (float) x;
}
static inline float uitofp_i64_f32(uint64_t x)
{
    return (float) x;
}
static inline int8_t fptosi_f32_i8(float x)
{
    return (int8_t) x;
}
static inline int16_t fptosi_f32_i16(float x)
{
    return (int16_t) x;
}
static inline int32_t fptosi_f32_i32(float x)
{
    return (int32_t) x;
}
static inline int64_t fptosi_f32_i64(float x)
{
    return (int64_t) x;
}
static inline uint8_t fptoui_f32_i8(float x)
{
    return (uint8_t) x;
}
static inline uint16_t fptoui_f32_i16(float x)
{
    return (uint16_t) x;
}
static inline uint32_t fptoui_f32_i32(float x)
{
    return (uint32_t) x;
}
static inline uint64_t fptoui_f32_i64(float x)
{
    return (uint64_t) x;
}
static inline float futrts_log32(float x)
{
    return log(x);
}
static inline float futrts_log2_32(float x)
{
    return log2(x);
}
static inline float futrts_log10_32(float x)
{
    return log10(x);
}
static inline float futrts_sqrt32(float x)
{
    return sqrt(x);
}
static inline float futrts_exp32(float x)
{
    return exp(x);
}
static inline float futrts_cos32(float x)
{
    return cos(x);
}
static inline float futrts_sin32(float x)
{
    return sin(x);
}
static inline float futrts_tan32(float x)
{
    return tan(x);
}
static inline float futrts_acos32(float x)
{
    return acos(x);
}
static inline float futrts_asin32(float x)
{
    return asin(x);
}
static inline float futrts_atan32(float x)
{
    return atan(x);
}
static inline float futrts_cosh32(float x)
{
    return cosh(x);
}
static inline float futrts_sinh32(float x)
{
    return sinh(x);
}
static inline float futrts_tanh32(float x)
{
    return tanh(x);
}
static inline float futrts_acosh32(float x)
{
    return acosh(x);
}
static inline float futrts_asinh32(float x)
{
    return asinh(x);
}
static inline float futrts_atanh32(float x)
{
    return atanh(x);
}
static inline float futrts_atan2_32(float x, float y)
{
    return atan2(x, y);
}
static inline float futrts_gamma32(float x)
{
    return tgamma(x);
}
static inline float futrts_lgamma32(float x)
{
    return lgamma(x);
}
static inline bool futrts_isnan32(float x)
{
    return isnan(x);
}
static inline bool futrts_isinf32(float x)
{
    return isinf(x);
}
static inline int32_t futrts_to_bits32(float x)
{
    union {
        float f;
        int32_t t;
    } p;
    
    p.f = x;
    return p.t;
}
static inline float futrts_from_bits32(int32_t x)
{
    union {
        int32_t f;
        float t;
    } p;
    
    p.f = x;
    return p.t;
}
#ifdef __OPENCL_VERSION__
static inline float fmod32(float x, float y)
{
    return fmod(x, y);
}
static inline float futrts_round32(float x)
{
    return rint(x);
}
static inline float futrts_floor32(float x)
{
    return floor(x);
}
static inline float futrts_ceil32(float x)
{
    return ceil(x);
}
static inline float futrts_lerp32(float v0, float v1, float t)
{
    return mix(v0, v1, t);
}
static inline float futrts_mad32(float a, float b, float c)
{
    return mad(a, b, c);
}
static inline float futrts_fma32(float a, float b, float c)
{
    return fma(a, b, c);
}
#else
static inline float fmod32(float x, float y)
{
    return fmodf(x, y);
}
static inline float futrts_round32(float x)
{
    return rintf(x);
}
static inline float futrts_floor32(float x)
{
    return floorf(x);
}
static inline float futrts_ceil32(float x)
{
    return ceilf(x);
}
static inline float futrts_lerp32(float v0, float v1, float t)
{
    return v0 + (v1 - v0) * t;
}
static inline float futrts_mad32(float a, float b, float c)
{
    return a * b + c;
}
static inline float futrts_fma32(float a, float b, float c)
{
    return fmaf(a, b, c);
}
#endif
// Start of atomics.h

inline int32_t atomic_add_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((int32_t*)p, x);
#else
  return atomic_add(p, x);
#endif
}

inline int32_t atomic_add_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((int32_t*)p, x);
#else
  return atomic_add(p, x);
#endif
}

inline float atomic_fadd_f32_global(volatile __global float *p, float x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((float*)p, x);
#else
  union { int32_t i; float f; } old;
  union { int32_t i; float f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg((volatile __global int32_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline float atomic_fadd_f32_local(volatile __local float *p, float x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((float*)p, x);
#else
  union { int32_t i; float f; } old;
  union { int32_t i; float f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg((volatile __local int32_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline int32_t atomic_smax_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline int32_t atomic_smax_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline int32_t atomic_smin_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline int32_t atomic_smin_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline uint32_t atomic_umax_i32_global(volatile __global uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline uint32_t atomic_umax_i32_local(volatile __local uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline uint32_t atomic_umin_i32_global(volatile __global uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline uint32_t atomic_umin_i32_local(volatile __local uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline int32_t atomic_and_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int32_t*)p, x);
#else
  return atomic_and(p, x);
#endif
}

inline int32_t atomic_and_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int32_t*)p, x);
#else
  return atomic_and(p, x);
#endif
}

inline int32_t atomic_or_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int32_t*)p, x);
#else
  return atomic_or(p, x);
#endif
}

inline int32_t atomic_or_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int32_t*)p, x);
#else
  return atomic_or(p, x);
#endif
}

inline int32_t atomic_xor_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_xor_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_xchg_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_xchg_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_cmpxchg_i32_global(volatile __global int32_t *p,
                                         int32_t cmp, int32_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((int32_t*)p, cmp, val);
#else
  return atomic_cmpxchg(p, cmp, val);
#endif
}

inline int32_t atomic_cmpxchg_i32_local(volatile __local int32_t *p,
                                         int32_t cmp, int32_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((int32_t*)p, cmp, val);
#else
  return atomic_cmpxchg(p, cmp, val);
#endif
}

// End of atomics.h




__kernel void builtinzhreplicate_f32zireplicate_44910(__global
                                                      unsigned char *mem_44906,
                                                      int32_t num_elems_44907,
                                                      float val_44908)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t replicate_gtid_44910;
    int32_t replicate_ltid_44911;
    int32_t replicate_gid_44912;
    
    replicate_gtid_44910 = get_global_id(0);
    replicate_ltid_44911 = get_local_id(0);
    replicate_gid_44912 = get_group_id(0);
    if (slt64(replicate_gtid_44910, num_elems_44907)) {
        ((__global float *) mem_44906)[sext_i32_i64(replicate_gtid_44910)] =
            val_44908;
    }
    
  error_0:
    return;
}
__kernel void builtinzhreplicate_i32zireplicate_44919(__global
                                                      unsigned char *mem_44915,
                                                      int32_t num_elems_44916,
                                                      int32_t val_44917)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t replicate_gtid_44919;
    int32_t replicate_ltid_44920;
    int32_t replicate_gid_44921;
    
    replicate_gtid_44919 = get_global_id(0);
    replicate_ltid_44920 = get_local_id(0);
    replicate_gid_44921 = get_group_id(0);
    if (slt64(replicate_gtid_44919, num_elems_44916)) {
        ((__global int32_t *) mem_44915)[sext_i32_i64(replicate_gtid_44919)] =
            val_44917;
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32(__local volatile
                                    int64_t *block_9_backing_aligned_0,
                                    int32_t destoffset_1, int32_t srcoffset_3,
                                    int32_t num_arrays_4, int32_t x_elems_5,
                                    int32_t y_elems_6, int32_t mulx_7,
                                    int32_t muly_8, __global
                                    unsigned char *destmem_0, __global
                                    unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_global_id_0_37;
    int32_t y_index_32 = get_group_id_1_41 * 32 + get_local_id_1_39;
    
    if (slt32(x_index_31, x_elems_5)) {
        for (int32_t j_43 = 0; j_43 < 4; j_43++) {
            int32_t index_in_35 = (y_index_32 + j_43 * 8) * x_elems_5 +
                    x_index_31;
            
            if (slt32(y_index_32 + j_43 * 8, y_elems_6)) {
                ((__local float *) block_9)[sext_i32_i64((get_local_id_1_39 +
                                                          j_43 * 8) * 33 +
                                            get_local_id_0_38)] = ((__global
                                                                    float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                                       index_in_35)];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 32 + get_local_id_0_38;
    y_index_32 = get_group_id_0_40 * 32 + get_local_id_1_39;
    if (slt32(x_index_31, y_elems_6)) {
        for (int32_t j_43 = 0; j_43 < 4; j_43++) {
            int32_t index_out_36 = (y_index_32 + j_43 * 8) * y_elems_6 +
                    x_index_31;
            
            if (slt32(y_index_32 + j_43 * 8, x_elems_5)) {
                ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                               index_out_36)] = ((__local
                                                                  float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                                    33 +
                                                                                    get_local_id_1_39 +
                                                                                    j_43 *
                                                                                    8)];
            }
        }
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_low_height(__local volatile
                                               int64_t *block_9_backing_aligned_0,
                                               int32_t destoffset_1,
                                               int32_t srcoffset_3,
                                               int32_t num_arrays_4,
                                               int32_t x_elems_5,
                                               int32_t y_elems_6,
                                               int32_t mulx_7, int32_t muly_8,
                                               __global
                                               unsigned char *destmem_0,
                                               __global unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_group_id_0_40 * 16 * mulx_7 + get_local_id_0_38 +
            srem32(get_local_id_1_39, mulx_7) * 16;
    int32_t y_index_32 = get_group_id_1_41 * 16 + squot32(get_local_id_1_39,
                                                          mulx_7);
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    
    if (slt32(x_index_31, x_elems_5) && slt32(y_index_32, y_elems_6)) {
        ((__local float *) block_9)[sext_i32_i64(get_local_id_1_39 * 17 +
                                    get_local_id_0_38)] = ((__global
                                                            float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                               index_in_35)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 16 + squot32(get_local_id_0_38, mulx_7);
    y_index_32 = get_group_id_0_40 * 16 * mulx_7 + get_local_id_1_39 +
        srem32(get_local_id_0_38, mulx_7) * 16;
    
    int32_t index_out_36 = y_index_32 * y_elems_6 + x_index_31;
    
    if (slt32(x_index_31, y_elems_6) && slt32(y_index_32, x_elems_5)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__local
                                                          float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                            17 +
                                                                            get_local_id_1_39)];
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_low_width(__local volatile
                                              int64_t *block_9_backing_aligned_0,
                                              int32_t destoffset_1,
                                              int32_t srcoffset_3,
                                              int32_t num_arrays_4,
                                              int32_t x_elems_5,
                                              int32_t y_elems_6, int32_t mulx_7,
                                              int32_t muly_8, __global
                                              unsigned char *destmem_0, __global
                                              unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_group_id_0_40 * 16 + squot32(get_local_id_0_38,
                                                          muly_8);
    int32_t y_index_32 = get_group_id_1_41 * 16 * muly_8 + get_local_id_1_39 +
            srem32(get_local_id_0_38, muly_8) * 16;
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    
    if (slt32(x_index_31, x_elems_5) && slt32(y_index_32, y_elems_6)) {
        ((__local float *) block_9)[sext_i32_i64(get_local_id_1_39 * 17 +
                                    get_local_id_0_38)] = ((__global
                                                            float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                               index_in_35)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 16 * muly_8 + get_local_id_0_38 +
        srem32(get_local_id_1_39, muly_8) * 16;
    y_index_32 = get_group_id_0_40 * 16 + squot32(get_local_id_1_39, muly_8);
    
    int32_t index_out_36 = y_index_32 * y_elems_6 + x_index_31;
    
    if (slt32(x_index_31, y_elems_6) && slt32(y_index_32, x_elems_5)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__local
                                                          float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                            17 +
                                                                            get_local_id_1_39)];
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_small(__local volatile
                                          int64_t *block_9_backing_aligned_0,
                                          int32_t destoffset_1,
                                          int32_t srcoffset_3,
                                          int32_t num_arrays_4,
                                          int32_t x_elems_5, int32_t y_elems_6,
                                          int32_t mulx_7, int32_t muly_8,
                                          __global unsigned char *destmem_0,
                                          __global unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = squot32(get_global_id_0_37, y_elems_6 *
                                          x_elems_5) * (y_elems_6 * x_elems_5);
    int32_t x_index_31 = squot32(srem32(get_global_id_0_37, y_elems_6 *
                                        x_elems_5), y_elems_6);
    int32_t y_index_32 = srem32(get_global_id_0_37, y_elems_6);
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    int32_t index_out_36 = x_index_31 * y_elems_6 + y_index_32;
    
    if (slt32(get_global_id_0_37, x_elems_5 * y_elems_6 * num_arrays_4)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__global
                                                          float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                             index_in_35)];
    }
    
  error_0:
    return;
}
__kernel void mainzicopy_44519(int64_t m_29116, int64_t i32_res_29268,
                               int64_t ctx_param_ext_43322,
                               int64_t ctx_param_ext_43323,
                               int64_t ctx_param_ext_43325, __global
                               unsigned char *mem_param_43327, __global
                               unsigned char *mem_43332)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_44519;
    int32_t copy_ltid_44520;
    int32_t copy_gid_44521;
    
    copy_gtid_44519 = get_global_id(0);
    copy_ltid_44520 = get_local_id(0);
    copy_gid_44521 = get_group_id(0);
    if (slt64(sext_i32_i64(copy_gtid_44519), m_29116 * i32_res_29268)) {
        ((__global float *) mem_43332)[(sext_i32_i64(copy_gtid_44519) -
                                        squot64(sext_i32_i64(copy_gtid_44519),
                                                i32_res_29268) *
                                        i32_res_29268) * m_29116 +
                                       squot64(sext_i32_i64(copy_gtid_44519),
                                               i32_res_29268)] = ((__global
                                                                   float *) mem_param_43327)[ctx_param_ext_43322 +
                                                                                             (squot64(sext_i32_i64(copy_gtid_44519),
                                                                                                      i32_res_29268) *
                                                                                              ctx_param_ext_43323 +
                                                                                              (sext_i32_i64(copy_gtid_44519) -
                                                                                               squot64(sext_i32_i64(copy_gtid_44519),
                                                                                                       i32_res_29268) *
                                                                                               i32_res_29268) *
                                                                                              ctx_param_ext_43325)];
    }
    
  error_0:
    return;
}
__kernel void mainziscan_stage1_39927(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_44949_backing_aligned_0,
                                      int64_t N_29115, int64_t m_29116,
                                      int64_t N_29117, __global
                                      unsigned char *images_mem_43123, __global
                                      unsigned char *defunc_3_map_res_mem_43881,
                                      __global unsigned char *mem_43910,
                                      __global unsigned char *mem_43913,
                                      int32_t num_threads_44943)
{
    #define segscan_group_sizze_39944 (mainzisegscan_group_sizze_39921)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44949_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44949_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44944;
    int32_t local_tid_44945;
    int64_t group_sizze_44948;
    int32_t wave_sizze_44947;
    int32_t group_tid_44946;
    
    global_tid_44944 = get_global_id(0);
    local_tid_44945 = get_local_id(0);
    group_sizze_44948 = get_local_size(0);
    wave_sizze_44947 = LOCKSTEP_WIDTH;
    group_tid_44946 = get_group_id(0);
    
    int32_t phys_tid_39927;
    
    phys_tid_39927 = global_tid_44944;
    
    __local char *scan_arr_mem_44949;
    
    scan_arr_mem_44949 = (__local char *) scan_arr_mem_44949_backing_0;
    
    int64_t x_39949;
    int64_t x_39950;
    
    x_39949 = 0;
    for (int64_t j_44951 = 0; j_44951 < sdiv_up64(m_29116 * N_29115,
                                                  sext_i32_i64(num_threads_44943));
         j_44951++) {
        int64_t chunk_offset_44952 = segscan_group_sizze_39944 * j_44951 +
                sext_i32_i64(group_tid_44946) * (segscan_group_sizze_39944 *
                                                 sdiv_up64(m_29116 * N_29115,
                                                           sext_i32_i64(num_threads_44943)));
        int64_t flat_idx_44953 = chunk_offset_44952 +
                sext_i32_i64(local_tid_44945);
        int64_t gtid_39918 = squot64(flat_idx_44953, N_29115);
        int64_t gtid_39926 = flat_idx_44953 - squot64(flat_idx_44953, N_29115) *
                N_29115;
        
        // threads in bounds read input
        {
            if (slt64(gtid_39918, m_29116) && slt64(gtid_39926, N_29115)) {
                float x_39954 = ((__global
                                  float *) images_mem_43123)[gtid_39918 *
                                                             N_29117 +
                                                             gtid_39926];
                bool isnan_res_39956;
                
                isnan_res_39956 = futrts_isnan32(x_39954);
                
                bool cond_39957 = !isnan_res_39956;
                float defunc_0_f_res_39958;
                
                if (cond_39957) {
                    float x_39955 = ((__global
                                      float *) defunc_3_map_res_mem_43881)[gtid_39918 *
                                                                           N_29115 +
                                                                           gtid_39926];
                    float defunc_0_f_res_t_res_39959 = x_39954 - x_39955;
                    
                    defunc_0_f_res_39958 = defunc_0_f_res_t_res_39959;
                } else {
                    defunc_0_f_res_39958 = NAN;
                }
                
                bool isnan_res_39960;
                
                isnan_res_39960 = futrts_isnan32(defunc_0_f_res_39958);
                
                bool defunc_0_p_res_39961 = !isnan_res_39960;
                int64_t defunc_0_f_res_39962 =
                        btoi_bool_i64(defunc_0_p_res_39961);
                
                // write to-scan values to parameters
                {
                    x_39950 = defunc_0_f_res_39962;
                }
                // write mapped values results to global memory
                {
                    ((__global float *) mem_43913)[gtid_39918 * N_29115 +
                                                   gtid_39926] =
                        defunc_0_f_res_39958;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_39918, m_29116) && slt64(gtid_39926,
                                                          N_29115))) {
                    x_39950 = 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_39951 = add64(x_39949, x_39950);
                
                ((__local
                  int64_t *) scan_arr_mem_44949)[sext_i32_i64(local_tid_44945)] =
                    defunc_1_op_res_39951;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_44954;
            int64_t x_44955;
            int64_t x_44957;
            int64_t x_44958;
            bool ltid_in_bounds_44960;
            
            ltid_in_bounds_44960 = slt64(sext_i32_i64(local_tid_44945),
                                         segscan_group_sizze_39944);
            
            int32_t skip_threads_44961;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_44960) {
                    x_44955 = ((volatile __local
                                int64_t *) scan_arr_mem_44949)[sext_i32_i64(local_tid_44945)];
                    if ((local_tid_44945 - squot32(local_tid_44945, 32) * 32) ==
                        0) {
                        x_44954 = x_44955;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_44961 = 1;
                while (slt32(skip_threads_44961, 32)) {
                    if (sle32(skip_threads_44961, local_tid_44945 -
                              squot32(local_tid_44945, 32) * 32) &&
                        ltid_in_bounds_44960) {
                        // read operands
                        {
                            x_44954 = ((volatile __local
                                        int64_t *) scan_arr_mem_44949)[sext_i32_i64(local_tid_44945) -
                                                                       sext_i32_i64(skip_threads_44961)];
                        }
                        // perform operation
                        {
                            bool inactive_44962 =
                                 slt64(srem64(sext_i32_i64(local_tid_44945) +
                                              chunk_offset_44952, N_29115),
                                       sext_i32_i64(local_tid_44945) +
                                       chunk_offset_44952 -
                                       (sext_i32_i64(local_tid_44945 -
                                        skip_threads_44961) +
                                        chunk_offset_44952));
                            
                            if (inactive_44962) {
                                x_44954 = x_44955;
                            }
                            if (!inactive_44962) {
                                int64_t defunc_1_op_res_44956 = add64(x_44954,
                                                                      x_44955);
                                
                                x_44954 = defunc_1_op_res_44956;
                            }
                        }
                    }
                    if (sle32(wave_sizze_44947, skip_threads_44961)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_44961, local_tid_44945 -
                              squot32(local_tid_44945, 32) * 32) &&
                        ltid_in_bounds_44960) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_44949)[sext_i32_i64(local_tid_44945)] =
                                x_44954;
                            x_44955 = x_44954;
                        }
                    }
                    if (sle32(wave_sizze_44947, skip_threads_44961)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_44961 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_44945 - squot32(local_tid_44945, 32) * 32) ==
                    31 && ltid_in_bounds_44960) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_44949)[sext_i32_i64(squot32(local_tid_44945,
                                                                          32))] =
                        x_44954;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_44963;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_44945, 32) == 0 &&
                        ltid_in_bounds_44960) {
                        x_44958 = ((volatile __local
                                    int64_t *) scan_arr_mem_44949)[sext_i32_i64(local_tid_44945)];
                        if ((local_tid_44945 - squot32(local_tid_44945, 32) *
                             32) == 0) {
                            x_44957 = x_44958;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44963 = 1;
                    while (slt32(skip_threads_44963, 32)) {
                        if (sle32(skip_threads_44963, local_tid_44945 -
                                  squot32(local_tid_44945, 32) * 32) &&
                            (squot32(local_tid_44945, 32) == 0 &&
                             ltid_in_bounds_44960)) {
                            // read operands
                            {
                                x_44957 = ((volatile __local
                                            int64_t *) scan_arr_mem_44949)[sext_i32_i64(local_tid_44945) -
                                                                           sext_i32_i64(skip_threads_44963)];
                            }
                            // perform operation
                            {
                                bool inactive_44964 =
                                     slt64(srem64(sext_i32_i64(local_tid_44945 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_44952, N_29115),
                                           sext_i32_i64(local_tid_44945 * 32 +
                                           32 - 1) + chunk_offset_44952 -
                                           (sext_i32_i64((local_tid_44945 -
                                                          skip_threads_44963) *
                                            32 + 32 - 1) + chunk_offset_44952));
                                
                                if (inactive_44964) {
                                    x_44957 = x_44958;
                                }
                                if (!inactive_44964) {
                                    int64_t defunc_1_op_res_44959 =
                                            add64(x_44957, x_44958);
                                    
                                    x_44957 = defunc_1_op_res_44959;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44947, skip_threads_44963)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44963, local_tid_44945 -
                                  squot32(local_tid_44945, 32) * 32) &&
                            (squot32(local_tid_44945, 32) == 0 &&
                             ltid_in_bounds_44960)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_44949)[sext_i32_i64(local_tid_44945)] =
                                    x_44957;
                                x_44958 = x_44957;
                            }
                        }
                        if (sle32(wave_sizze_44947, skip_threads_44963)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44963 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_44945, 32) == 0 ||
                      !ltid_in_bounds_44960)) {
                    // read operands
                    {
                        x_44955 = x_44954;
                        x_44954 = ((__local
                                    int64_t *) scan_arr_mem_44949)[sext_i32_i64(squot32(local_tid_44945,
                                                                                        32)) -
                                                                   1];
                    }
                    // perform operation
                    {
                        bool inactive_44965 =
                             slt64(srem64(sext_i32_i64(local_tid_44945) +
                                          chunk_offset_44952, N_29115),
                                   sext_i32_i64(local_tid_44945) +
                                   chunk_offset_44952 -
                                   (sext_i32_i64(squot32(local_tid_44945, 32) *
                                    32 - 1) + chunk_offset_44952));
                        
                        if (inactive_44965) {
                            x_44954 = x_44955;
                        }
                        if (!inactive_44965) {
                            int64_t defunc_1_op_res_44956 = add64(x_44954,
                                                                  x_44955);
                            
                            x_44954 = defunc_1_op_res_44956;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_44949)[sext_i32_i64(local_tid_44945)] =
                            x_44954;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_44945, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_44949)[sext_i32_i64(local_tid_44945)] =
                        x_44955;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_39918, m_29116) && slt64(gtid_39926, N_29115)) {
                    ((__global int64_t *) mem_43910)[gtid_39918 * N_29115 +
                                                     gtid_39926] = ((__local
                                                                     int64_t *) scan_arr_mem_44949)[sext_i32_i64(local_tid_44945)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_44966 = slt64(srem64(chunk_offset_44952 +
                                                          segscan_group_sizze_39944,
                                                          N_29115),
                                                   chunk_offset_44952 +
                                                   segscan_group_sizze_39944 -
                                                   (chunk_offset_44952 +
                                                    segscan_group_sizze_39944 -
                                                    1));
                bool should_load_carry_44967 = local_tid_44945 == 0 &&
                     !crosses_segment_44966;
                
                if (should_load_carry_44967) {
                    x_39949 = ((__local
                                int64_t *) scan_arr_mem_44949)[segscan_group_sizze_39944 -
                                                               1];
                }
                if (!should_load_carry_44967) {
                    x_39949 = 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_39944
}
__kernel void mainziscan_stage1_40911(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_45316_backing_aligned_0,
                                      int64_t N_29115, int64_t m_29116,
                                      int64_t iota32_arg_29515, __global
                                      unsigned char *defunc_4_map_res_mem_43919,
                                      __global
                                      unsigned char *defunc_3_map_res_mem_43982,
                                      __global
                                      unsigned char *defunc_3_map_res_mem_43983,
                                      __global
                                      unsigned char *defunc_0_f_res_mem_44017,
                                      __global unsigned char *mem_44036,
                                      __global unsigned char *mem_44040,
                                      int32_t num_threads_45310)
{
    #define segscan_group_sizze_40989 (mainzisegscan_group_sizze_40905)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45316_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45316_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45311;
    int32_t local_tid_45312;
    int64_t group_sizze_45315;
    int32_t wave_sizze_45314;
    int32_t group_tid_45313;
    
    global_tid_45311 = get_global_id(0);
    local_tid_45312 = get_local_id(0);
    group_sizze_45315 = get_local_size(0);
    wave_sizze_45314 = LOCKSTEP_WIDTH;
    group_tid_45313 = get_group_id(0);
    
    int32_t phys_tid_40911;
    
    phys_tid_40911 = global_tid_45311;
    
    __local char *scan_arr_mem_45316;
    
    scan_arr_mem_45316 = (__local char *) scan_arr_mem_45316_backing_0;
    
    float x_40993;
    float x_40994;
    
    x_40993 = 0.0F;
    for (int64_t j_45318 = 0; j_45318 < sdiv_up64(m_29116 * iota32_arg_29515,
                                                  sext_i32_i64(num_threads_45310));
         j_45318++) {
        int64_t chunk_offset_45319 = segscan_group_sizze_40989 * j_45318 +
                sext_i32_i64(group_tid_45313) * (segscan_group_sizze_40989 *
                                                 sdiv_up64(m_29116 *
                                                           iota32_arg_29515,
                                                           sext_i32_i64(num_threads_45310)));
        int64_t flat_idx_45320 = chunk_offset_45319 +
                sext_i32_i64(local_tid_45312);
        int64_t gtid_40902 = squot64(flat_idx_45320, iota32_arg_29515);
        int64_t gtid_40910 = flat_idx_45320 - squot64(flat_idx_45320,
                                                      iota32_arg_29515) *
                iota32_arg_29515;
        
        // threads in bounds read input
        {
            if (slt64(gtid_40902, m_29116) && slt64(gtid_40910,
                                                    iota32_arg_29515)) {
                int32_t y_41000 = ((__global int32_t *) mem_44036)[gtid_40902];
                int32_t index_primexp_41178 = sext_i64_i32(gtid_40910);
                bool cond_41003 = sle32(y_41000, index_primexp_41178);
                float defunc_0_f_res_41004;
                
                if (cond_41003) {
                    defunc_0_f_res_41004 = 0.0F;
                } else {
                    int32_t x_40996 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43983)[gtid_40902];
                    int32_t x_40997 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43982)[gtid_40902];
                    float x_40998 = ((__global
                                      float *) defunc_0_f_res_mem_44017)[gtid_40902];
                    bool cond_41005 = index_primexp_41178 == 0;
                    float defunc_0_f_res_f_res_41006;
                    
                    if (cond_41005) {
                        defunc_0_f_res_f_res_41006 = x_40998;
                    } else {
                        int32_t i_41007 = add32(x_40996, index_primexp_41178);
                        int64_t i_41008 = sext_i32_i64(i_41007);
                        float x_41009 = ((__global
                                          float *) defunc_4_map_res_mem_43919)[gtid_40902 *
                                                                               N_29115 +
                                                                               i_41008];
                        int32_t x_41010 = sub32(x_40996, x_40997);
                        int32_t i_41011 = add32(x_41010, index_primexp_41178);
                        int64_t i_41012 = sext_i32_i64(i_41011);
                        float y_41013 = ((__global
                                          float *) defunc_4_map_res_mem_43919)[gtid_40902 *
                                                                               N_29115 +
                                                                               i_41012];
                        float defunc_0_f_res_f_res_f_res_41014 = x_41009 -
                              y_41013;
                        
                        defunc_0_f_res_f_res_41006 =
                            defunc_0_f_res_f_res_f_res_41014;
                    }
                    defunc_0_f_res_41004 = defunc_0_f_res_f_res_41006;
                }
                // write to-scan values to parameters
                {
                    x_40994 = defunc_0_f_res_41004;
                }
                // write mapped values results to global memory
                { }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_40902, m_29116) && slt64(gtid_40910,
                                                          iota32_arg_29515))) {
                    x_40994 = 0.0F;
                }
            }
            // combine with carry and write to local memory
            {
                float defunc_1_op_res_40995 = x_40993 + x_40994;
                
                ((__local
                  float *) scan_arr_mem_45316)[sext_i32_i64(local_tid_45312)] =
                    defunc_1_op_res_40995;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float x_45321;
            float x_45322;
            float x_45324;
            float x_45325;
            bool ltid_in_bounds_45327;
            
            ltid_in_bounds_45327 = slt64(sext_i32_i64(local_tid_45312),
                                         segscan_group_sizze_40989);
            
            int32_t skip_threads_45328;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_45327) {
                    x_45322 = ((volatile __local
                                float *) scan_arr_mem_45316)[sext_i32_i64(local_tid_45312)];
                    if ((local_tid_45312 - squot32(local_tid_45312, 32) * 32) ==
                        0) {
                        x_45321 = x_45322;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_45328 = 1;
                while (slt32(skip_threads_45328, 32)) {
                    if (sle32(skip_threads_45328, local_tid_45312 -
                              squot32(local_tid_45312, 32) * 32) &&
                        ltid_in_bounds_45327) {
                        // read operands
                        {
                            x_45321 = ((volatile __local
                                        float *) scan_arr_mem_45316)[sext_i32_i64(local_tid_45312) -
                                                                     sext_i32_i64(skip_threads_45328)];
                        }
                        // perform operation
                        {
                            bool inactive_45329 =
                                 slt64(srem64(sext_i32_i64(local_tid_45312) +
                                              chunk_offset_45319,
                                              iota32_arg_29515),
                                       sext_i32_i64(local_tid_45312) +
                                       chunk_offset_45319 -
                                       (sext_i32_i64(local_tid_45312 -
                                        skip_threads_45328) +
                                        chunk_offset_45319));
                            
                            if (inactive_45329) {
                                x_45321 = x_45322;
                            }
                            if (!inactive_45329) {
                                float defunc_1_op_res_45323 = x_45321 + x_45322;
                                
                                x_45321 = defunc_1_op_res_45323;
                            }
                        }
                    }
                    if (sle32(wave_sizze_45314, skip_threads_45328)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_45328, local_tid_45312 -
                              squot32(local_tid_45312, 32) * 32) &&
                        ltid_in_bounds_45327) {
                        // write result
                        {
                            ((volatile __local
                              float *) scan_arr_mem_45316)[sext_i32_i64(local_tid_45312)] =
                                x_45321;
                            x_45322 = x_45321;
                        }
                    }
                    if (sle32(wave_sizze_45314, skip_threads_45328)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_45328 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_45312 - squot32(local_tid_45312, 32) * 32) ==
                    31 && ltid_in_bounds_45327) {
                    ((volatile __local
                      float *) scan_arr_mem_45316)[sext_i32_i64(squot32(local_tid_45312,
                                                                        32))] =
                        x_45321;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_45330;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_45312, 32) == 0 &&
                        ltid_in_bounds_45327) {
                        x_45325 = ((volatile __local
                                    float *) scan_arr_mem_45316)[sext_i32_i64(local_tid_45312)];
                        if ((local_tid_45312 - squot32(local_tid_45312, 32) *
                             32) == 0) {
                            x_45324 = x_45325;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45330 = 1;
                    while (slt32(skip_threads_45330, 32)) {
                        if (sle32(skip_threads_45330, local_tid_45312 -
                                  squot32(local_tid_45312, 32) * 32) &&
                            (squot32(local_tid_45312, 32) == 0 &&
                             ltid_in_bounds_45327)) {
                            // read operands
                            {
                                x_45324 = ((volatile __local
                                            float *) scan_arr_mem_45316)[sext_i32_i64(local_tid_45312) -
                                                                         sext_i32_i64(skip_threads_45330)];
                            }
                            // perform operation
                            {
                                bool inactive_45331 =
                                     slt64(srem64(sext_i32_i64(local_tid_45312 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_45319,
                                                  iota32_arg_29515),
                                           sext_i32_i64(local_tid_45312 * 32 +
                                           32 - 1) + chunk_offset_45319 -
                                           (sext_i32_i64((local_tid_45312 -
                                                          skip_threads_45330) *
                                            32 + 32 - 1) + chunk_offset_45319));
                                
                                if (inactive_45331) {
                                    x_45324 = x_45325;
                                }
                                if (!inactive_45331) {
                                    float defunc_1_op_res_45326 = x_45324 +
                                          x_45325;
                                    
                                    x_45324 = defunc_1_op_res_45326;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45314, skip_threads_45330)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45330, local_tid_45312 -
                                  squot32(local_tid_45312, 32) * 32) &&
                            (squot32(local_tid_45312, 32) == 0 &&
                             ltid_in_bounds_45327)) {
                            // write result
                            {
                                ((volatile __local
                                  float *) scan_arr_mem_45316)[sext_i32_i64(local_tid_45312)] =
                                    x_45324;
                                x_45325 = x_45324;
                            }
                        }
                        if (sle32(wave_sizze_45314, skip_threads_45330)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45330 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_45312, 32) == 0 ||
                      !ltid_in_bounds_45327)) {
                    // read operands
                    {
                        x_45322 = x_45321;
                        x_45321 = ((__local
                                    float *) scan_arr_mem_45316)[sext_i32_i64(squot32(local_tid_45312,
                                                                                      32)) -
                                                                 1];
                    }
                    // perform operation
                    {
                        bool inactive_45332 =
                             slt64(srem64(sext_i32_i64(local_tid_45312) +
                                          chunk_offset_45319, iota32_arg_29515),
                                   sext_i32_i64(local_tid_45312) +
                                   chunk_offset_45319 -
                                   (sext_i32_i64(squot32(local_tid_45312, 32) *
                                    32 - 1) + chunk_offset_45319));
                        
                        if (inactive_45332) {
                            x_45321 = x_45322;
                        }
                        if (!inactive_45332) {
                            float defunc_1_op_res_45323 = x_45321 + x_45322;
                            
                            x_45321 = defunc_1_op_res_45323;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          float *) scan_arr_mem_45316)[sext_i32_i64(local_tid_45312)] =
                            x_45321;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_45312, 32) == 0) {
                    ((__local
                      float *) scan_arr_mem_45316)[sext_i32_i64(local_tid_45312)] =
                        x_45322;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_40902, m_29116) && slt64(gtid_40910,
                                                        iota32_arg_29515)) {
                    ((__global float *) mem_44040)[gtid_40902 *
                                                   iota32_arg_29515 +
                                                   gtid_40910] = ((__local
                                                                   float *) scan_arr_mem_45316)[sext_i32_i64(local_tid_45312)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_45333 = slt64(srem64(chunk_offset_45319 +
                                                          segscan_group_sizze_40989,
                                                          iota32_arg_29515),
                                                   chunk_offset_45319 +
                                                   segscan_group_sizze_40989 -
                                                   (chunk_offset_45319 +
                                                    segscan_group_sizze_40989 -
                                                    1));
                bool should_load_carry_45334 = local_tid_45312 == 0 &&
                     !crosses_segment_45333;
                
                if (should_load_carry_45334) {
                    x_40993 = ((__local
                                float *) scan_arr_mem_45316)[segscan_group_sizze_40989 -
                                                             1];
                }
                if (!should_load_carry_45334) {
                    x_40993 = 0.0F;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_40989
}
__kernel void mainziscan_stage2_39927(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_44973_backing_aligned_0,
                                      int64_t N_29115, int64_t m_29116, __global
                                      unsigned char *mem_43910,
                                      int64_t stage1_num_groups_44942,
                                      int32_t num_threads_44943)
{
    #define segscan_group_sizze_39944 (mainzisegscan_group_sizze_39921)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44973_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44973_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44968;
    int32_t local_tid_44969;
    int64_t group_sizze_44972;
    int32_t wave_sizze_44971;
    int32_t group_tid_44970;
    
    global_tid_44968 = get_global_id(0);
    local_tid_44969 = get_local_id(0);
    group_sizze_44972 = get_local_size(0);
    wave_sizze_44971 = LOCKSTEP_WIDTH;
    group_tid_44970 = get_group_id(0);
    
    int32_t phys_tid_39927;
    
    phys_tid_39927 = global_tid_44968;
    
    __local char *scan_arr_mem_44973;
    
    scan_arr_mem_44973 = (__local char *) scan_arr_mem_44973_backing_0;
    
    int64_t flat_idx_44975;
    
    flat_idx_44975 = (sext_i32_i64(local_tid_44969) + 1) *
        (segscan_group_sizze_39944 * sdiv_up64(m_29116 * N_29115,
                                               sext_i32_i64(num_threads_44943))) -
        1;
    
    int64_t gtid_39918;
    
    gtid_39918 = squot64(flat_idx_44975, N_29115);
    
    int64_t gtid_39926;
    
    gtid_39926 = flat_idx_44975 - squot64(flat_idx_44975, N_29115) * N_29115;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_39918, m_29116) && slt64(gtid_39926, N_29115)) {
            ((__local
              int64_t *) scan_arr_mem_44973)[sext_i32_i64(local_tid_44969)] =
                ((__global int64_t *) mem_43910)[gtid_39918 * N_29115 +
                                                 gtid_39926];
        } else {
            ((__local
              int64_t *) scan_arr_mem_44973)[sext_i32_i64(local_tid_44969)] = 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_39949;
    int64_t x_39950;
    int64_t x_44976;
    int64_t x_44977;
    bool ltid_in_bounds_44979;
    
    ltid_in_bounds_44979 = slt64(sext_i32_i64(local_tid_44969),
                                 stage1_num_groups_44942);
    
    int32_t skip_threads_44980;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44979) {
            x_39950 = ((volatile __local
                        int64_t *) scan_arr_mem_44973)[sext_i32_i64(local_tid_44969)];
            if ((local_tid_44969 - squot32(local_tid_44969, 32) * 32) == 0) {
                x_39949 = x_39950;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44980 = 1;
        while (slt32(skip_threads_44980, 32)) {
            if (sle32(skip_threads_44980, local_tid_44969 -
                      squot32(local_tid_44969, 32) * 32) &&
                ltid_in_bounds_44979) {
                // read operands
                {
                    x_39949 = ((volatile __local
                                int64_t *) scan_arr_mem_44973)[sext_i32_i64(local_tid_44969) -
                                                               sext_i32_i64(skip_threads_44980)];
                }
                // perform operation
                {
                    bool inactive_44981 =
                         slt64(srem64((sext_i32_i64(local_tid_44969) + 1) *
                                      (segscan_group_sizze_39944 *
                                       sdiv_up64(m_29116 * N_29115,
                                                 sext_i32_i64(num_threads_44943))) -
                                      1, N_29115),
                               (sext_i32_i64(local_tid_44969) + 1) *
                               (segscan_group_sizze_39944 * sdiv_up64(m_29116 *
                                                                      N_29115,
                                                                      sext_i32_i64(num_threads_44943))) -
                               1 - ((sext_i32_i64(local_tid_44969 -
                                     skip_threads_44980) + 1) *
                                    (segscan_group_sizze_39944 *
                                     sdiv_up64(m_29116 * N_29115,
                                               sext_i32_i64(num_threads_44943))) -
                                    1));
                    
                    if (inactive_44981) {
                        x_39949 = x_39950;
                    }
                    if (!inactive_44981) {
                        int64_t defunc_1_op_res_39951 = add64(x_39949, x_39950);
                        
                        x_39949 = defunc_1_op_res_39951;
                    }
                }
            }
            if (sle32(wave_sizze_44971, skip_threads_44980)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44980, local_tid_44969 -
                      squot32(local_tid_44969, 32) * 32) &&
                ltid_in_bounds_44979) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_44973)[sext_i32_i64(local_tid_44969)] =
                        x_39949;
                    x_39950 = x_39949;
                }
            }
            if (sle32(wave_sizze_44971, skip_threads_44980)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44980 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44969 - squot32(local_tid_44969, 32) * 32) == 31 &&
            ltid_in_bounds_44979) {
            ((volatile __local
              int64_t *) scan_arr_mem_44973)[sext_i32_i64(squot32(local_tid_44969,
                                                                  32))] =
                x_39949;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44982;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44969, 32) == 0 && ltid_in_bounds_44979) {
                x_44977 = ((volatile __local
                            int64_t *) scan_arr_mem_44973)[sext_i32_i64(local_tid_44969)];
                if ((local_tid_44969 - squot32(local_tid_44969, 32) * 32) ==
                    0) {
                    x_44976 = x_44977;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44982 = 1;
            while (slt32(skip_threads_44982, 32)) {
                if (sle32(skip_threads_44982, local_tid_44969 -
                          squot32(local_tid_44969, 32) * 32) &&
                    (squot32(local_tid_44969, 32) == 0 &&
                     ltid_in_bounds_44979)) {
                    // read operands
                    {
                        x_44976 = ((volatile __local
                                    int64_t *) scan_arr_mem_44973)[sext_i32_i64(local_tid_44969) -
                                                                   sext_i32_i64(skip_threads_44982)];
                    }
                    // perform operation
                    {
                        bool inactive_44983 =
                             slt64(srem64((sext_i32_i64(local_tid_44969 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_39944 *
                                           sdiv_up64(m_29116 * N_29115,
                                                     sext_i32_i64(num_threads_44943))) -
                                          1, N_29115),
                                   (sext_i32_i64(local_tid_44969 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_39944 *
                                               sdiv_up64(m_29116 * N_29115,
                                                         sext_i32_i64(num_threads_44943))) -
                                   1 - ((sext_i32_i64((local_tid_44969 -
                                                       skip_threads_44982) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_39944 *
                                         sdiv_up64(m_29116 * N_29115,
                                                   sext_i32_i64(num_threads_44943))) -
                                        1));
                        
                        if (inactive_44983) {
                            x_44976 = x_44977;
                        }
                        if (!inactive_44983) {
                            int64_t defunc_1_op_res_44978 = add64(x_44976,
                                                                  x_44977);
                            
                            x_44976 = defunc_1_op_res_44978;
                        }
                    }
                }
                if (sle32(wave_sizze_44971, skip_threads_44982)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44982, local_tid_44969 -
                          squot32(local_tid_44969, 32) * 32) &&
                    (squot32(local_tid_44969, 32) == 0 &&
                     ltid_in_bounds_44979)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_44973)[sext_i32_i64(local_tid_44969)] =
                            x_44976;
                        x_44977 = x_44976;
                    }
                }
                if (sle32(wave_sizze_44971, skip_threads_44982)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44982 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44969, 32) == 0 || !ltid_in_bounds_44979)) {
            // read operands
            {
                x_39950 = x_39949;
                x_39949 = ((__local
                            int64_t *) scan_arr_mem_44973)[sext_i32_i64(squot32(local_tid_44969,
                                                                                32)) -
                                                           1];
            }
            // perform operation
            {
                bool inactive_44984 =
                     slt64(srem64((sext_i32_i64(local_tid_44969) + 1) *
                                  (segscan_group_sizze_39944 *
                                   sdiv_up64(m_29116 * N_29115,
                                             sext_i32_i64(num_threads_44943))) -
                                  1, N_29115), (sext_i32_i64(local_tid_44969) +
                                                1) *
                           (segscan_group_sizze_39944 * sdiv_up64(m_29116 *
                                                                  N_29115,
                                                                  sext_i32_i64(num_threads_44943))) -
                           1 - ((sext_i32_i64(squot32(local_tid_44969, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_39944 *
                                                 sdiv_up64(m_29116 * N_29115,
                                                           sext_i32_i64(num_threads_44943))) -
                                1));
                
                if (inactive_44984) {
                    x_39949 = x_39950;
                }
                if (!inactive_44984) {
                    int64_t defunc_1_op_res_39951 = add64(x_39949, x_39950);
                    
                    x_39949 = defunc_1_op_res_39951;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_44973)[sext_i32_i64(local_tid_44969)] =
                    x_39949;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44969, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_44973)[sext_i32_i64(local_tid_44969)] =
                x_39950;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_39918, m_29116) && slt64(gtid_39926, N_29115)) {
            ((__global int64_t *) mem_43910)[gtid_39918 * N_29115 +
                                             gtid_39926] = ((__local
                                                             int64_t *) scan_arr_mem_44973)[sext_i32_i64(local_tid_44969)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_39944
}
__kernel void mainziscan_stage2_40911(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_45340_backing_aligned_0,
                                      int64_t m_29116, int64_t iota32_arg_29515,
                                      __global unsigned char *mem_44040,
                                      int64_t stage1_num_groups_45309,
                                      int32_t num_threads_45310)
{
    #define segscan_group_sizze_40989 (mainzisegscan_group_sizze_40905)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45340_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45340_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45335;
    int32_t local_tid_45336;
    int64_t group_sizze_45339;
    int32_t wave_sizze_45338;
    int32_t group_tid_45337;
    
    global_tid_45335 = get_global_id(0);
    local_tid_45336 = get_local_id(0);
    group_sizze_45339 = get_local_size(0);
    wave_sizze_45338 = LOCKSTEP_WIDTH;
    group_tid_45337 = get_group_id(0);
    
    int32_t phys_tid_40911;
    
    phys_tid_40911 = global_tid_45335;
    
    __local char *scan_arr_mem_45340;
    
    scan_arr_mem_45340 = (__local char *) scan_arr_mem_45340_backing_0;
    
    int64_t flat_idx_45342;
    
    flat_idx_45342 = (sext_i32_i64(local_tid_45336) + 1) *
        (segscan_group_sizze_40989 * sdiv_up64(m_29116 * iota32_arg_29515,
                                               sext_i32_i64(num_threads_45310))) -
        1;
    
    int64_t gtid_40902;
    
    gtid_40902 = squot64(flat_idx_45342, iota32_arg_29515);
    
    int64_t gtid_40910;
    
    gtid_40910 = flat_idx_45342 - squot64(flat_idx_45342, iota32_arg_29515) *
        iota32_arg_29515;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_40902, m_29116) && slt64(gtid_40910, iota32_arg_29515)) {
            ((__local
              float *) scan_arr_mem_45340)[sext_i32_i64(local_tid_45336)] =
                ((__global float *) mem_44040)[gtid_40902 * iota32_arg_29515 +
                                               gtid_40910];
        } else {
            ((__local
              float *) scan_arr_mem_45340)[sext_i32_i64(local_tid_45336)] =
                0.0F;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float x_40993;
    float x_40994;
    float x_45343;
    float x_45344;
    bool ltid_in_bounds_45346;
    
    ltid_in_bounds_45346 = slt64(sext_i32_i64(local_tid_45336),
                                 stage1_num_groups_45309);
    
    int32_t skip_threads_45347;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45346) {
            x_40994 = ((volatile __local
                        float *) scan_arr_mem_45340)[sext_i32_i64(local_tid_45336)];
            if ((local_tid_45336 - squot32(local_tid_45336, 32) * 32) == 0) {
                x_40993 = x_40994;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45347 = 1;
        while (slt32(skip_threads_45347, 32)) {
            if (sle32(skip_threads_45347, local_tid_45336 -
                      squot32(local_tid_45336, 32) * 32) &&
                ltid_in_bounds_45346) {
                // read operands
                {
                    x_40993 = ((volatile __local
                                float *) scan_arr_mem_45340)[sext_i32_i64(local_tid_45336) -
                                                             sext_i32_i64(skip_threads_45347)];
                }
                // perform operation
                {
                    bool inactive_45348 =
                         slt64(srem64((sext_i32_i64(local_tid_45336) + 1) *
                                      (segscan_group_sizze_40989 *
                                       sdiv_up64(m_29116 * iota32_arg_29515,
                                                 sext_i32_i64(num_threads_45310))) -
                                      1, iota32_arg_29515),
                               (sext_i32_i64(local_tid_45336) + 1) *
                               (segscan_group_sizze_40989 * sdiv_up64(m_29116 *
                                                                      iota32_arg_29515,
                                                                      sext_i32_i64(num_threads_45310))) -
                               1 - ((sext_i32_i64(local_tid_45336 -
                                     skip_threads_45347) + 1) *
                                    (segscan_group_sizze_40989 *
                                     sdiv_up64(m_29116 * iota32_arg_29515,
                                               sext_i32_i64(num_threads_45310))) -
                                    1));
                    
                    if (inactive_45348) {
                        x_40993 = x_40994;
                    }
                    if (!inactive_45348) {
                        float defunc_1_op_res_40995 = x_40993 + x_40994;
                        
                        x_40993 = defunc_1_op_res_40995;
                    }
                }
            }
            if (sle32(wave_sizze_45338, skip_threads_45347)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45347, local_tid_45336 -
                      squot32(local_tid_45336, 32) * 32) &&
                ltid_in_bounds_45346) {
                // write result
                {
                    ((volatile __local
                      float *) scan_arr_mem_45340)[sext_i32_i64(local_tid_45336)] =
                        x_40993;
                    x_40994 = x_40993;
                }
            }
            if (sle32(wave_sizze_45338, skip_threads_45347)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45347 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45336 - squot32(local_tid_45336, 32) * 32) == 31 &&
            ltid_in_bounds_45346) {
            ((volatile __local
              float *) scan_arr_mem_45340)[sext_i32_i64(squot32(local_tid_45336,
                                                                32))] = x_40993;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45349;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45336, 32) == 0 && ltid_in_bounds_45346) {
                x_45344 = ((volatile __local
                            float *) scan_arr_mem_45340)[sext_i32_i64(local_tid_45336)];
                if ((local_tid_45336 - squot32(local_tid_45336, 32) * 32) ==
                    0) {
                    x_45343 = x_45344;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45349 = 1;
            while (slt32(skip_threads_45349, 32)) {
                if (sle32(skip_threads_45349, local_tid_45336 -
                          squot32(local_tid_45336, 32) * 32) &&
                    (squot32(local_tid_45336, 32) == 0 &&
                     ltid_in_bounds_45346)) {
                    // read operands
                    {
                        x_45343 = ((volatile __local
                                    float *) scan_arr_mem_45340)[sext_i32_i64(local_tid_45336) -
                                                                 sext_i32_i64(skip_threads_45349)];
                    }
                    // perform operation
                    {
                        bool inactive_45350 =
                             slt64(srem64((sext_i32_i64(local_tid_45336 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_40989 *
                                           sdiv_up64(m_29116 * iota32_arg_29515,
                                                     sext_i32_i64(num_threads_45310))) -
                                          1, iota32_arg_29515),
                                   (sext_i32_i64(local_tid_45336 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_40989 *
                                               sdiv_up64(m_29116 *
                                                         iota32_arg_29515,
                                                         sext_i32_i64(num_threads_45310))) -
                                   1 - ((sext_i32_i64((local_tid_45336 -
                                                       skip_threads_45349) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_40989 *
                                         sdiv_up64(m_29116 * iota32_arg_29515,
                                                   sext_i32_i64(num_threads_45310))) -
                                        1));
                        
                        if (inactive_45350) {
                            x_45343 = x_45344;
                        }
                        if (!inactive_45350) {
                            float defunc_1_op_res_45345 = x_45343 + x_45344;
                            
                            x_45343 = defunc_1_op_res_45345;
                        }
                    }
                }
                if (sle32(wave_sizze_45338, skip_threads_45349)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45349, local_tid_45336 -
                          squot32(local_tid_45336, 32) * 32) &&
                    (squot32(local_tid_45336, 32) == 0 &&
                     ltid_in_bounds_45346)) {
                    // write result
                    {
                        ((volatile __local
                          float *) scan_arr_mem_45340)[sext_i32_i64(local_tid_45336)] =
                            x_45343;
                        x_45344 = x_45343;
                    }
                }
                if (sle32(wave_sizze_45338, skip_threads_45349)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45349 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45336, 32) == 0 || !ltid_in_bounds_45346)) {
            // read operands
            {
                x_40994 = x_40993;
                x_40993 = ((__local
                            float *) scan_arr_mem_45340)[sext_i32_i64(squot32(local_tid_45336,
                                                                              32)) -
                                                         1];
            }
            // perform operation
            {
                bool inactive_45351 =
                     slt64(srem64((sext_i32_i64(local_tid_45336) + 1) *
                                  (segscan_group_sizze_40989 *
                                   sdiv_up64(m_29116 * iota32_arg_29515,
                                             sext_i32_i64(num_threads_45310))) -
                                  1, iota32_arg_29515),
                           (sext_i32_i64(local_tid_45336) + 1) *
                           (segscan_group_sizze_40989 * sdiv_up64(m_29116 *
                                                                  iota32_arg_29515,
                                                                  sext_i32_i64(num_threads_45310))) -
                           1 - ((sext_i32_i64(squot32(local_tid_45336, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_40989 *
                                                 sdiv_up64(m_29116 *
                                                           iota32_arg_29515,
                                                           sext_i32_i64(num_threads_45310))) -
                                1));
                
                if (inactive_45351) {
                    x_40993 = x_40994;
                }
                if (!inactive_45351) {
                    float defunc_1_op_res_40995 = x_40993 + x_40994;
                    
                    x_40993 = defunc_1_op_res_40995;
                }
            }
            // write final result
            {
                ((__local
                  float *) scan_arr_mem_45340)[sext_i32_i64(local_tid_45336)] =
                    x_40993;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45336, 32) == 0) {
            ((__local
              float *) scan_arr_mem_45340)[sext_i32_i64(local_tid_45336)] =
                x_40994;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_40902, m_29116) && slt64(gtid_40910, iota32_arg_29515)) {
            ((__global float *) mem_44040)[gtid_40902 * iota32_arg_29515 +
                                           gtid_40910] = ((__local
                                                           float *) scan_arr_mem_45340)[sext_i32_i64(local_tid_45336)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_40989
}
__kernel void mainziscan_stage3_39927(__global int *global_failure,
                                      int64_t N_29115, int64_t m_29116,
                                      int64_t num_groups_39945, __global
                                      unsigned char *mem_43910,
                                      int32_t num_threads_44943,
                                      int32_t required_groups_44985)
{
    #define segscan_group_sizze_39944 (mainzisegscan_group_sizze_39921)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44986;
    int32_t local_tid_44987;
    int64_t group_sizze_44990;
    int32_t wave_sizze_44989;
    int32_t group_tid_44988;
    
    global_tid_44986 = get_global_id(0);
    local_tid_44987 = get_local_id(0);
    group_sizze_44990 = get_local_size(0);
    wave_sizze_44989 = LOCKSTEP_WIDTH;
    group_tid_44988 = get_group_id(0);
    
    int32_t phys_tid_39927;
    
    phys_tid_39927 = global_tid_44986;
    
    int32_t phys_group_id_44991;
    
    phys_group_id_44991 = get_group_id(0);
    for (int32_t i_44992 = 0; i_44992 < sdiv_up32(required_groups_44985 -
                                                  phys_group_id_44991,
                                                  sext_i64_i32(num_groups_39945));
         i_44992++) {
        int32_t virt_group_id_44993 = phys_group_id_44991 + i_44992 *
                sext_i64_i32(num_groups_39945);
        int64_t flat_idx_44994 = sext_i32_i64(virt_group_id_44993) *
                segscan_group_sizze_39944 + sext_i32_i64(local_tid_44987);
        int64_t gtid_39918 = squot64(flat_idx_44994, N_29115);
        int64_t gtid_39926 = flat_idx_44994 - squot64(flat_idx_44994, N_29115) *
                N_29115;
        int64_t orig_group_44995 = squot64(flat_idx_44994,
                                           segscan_group_sizze_39944 *
                                           sdiv_up64(m_29116 * N_29115,
                                                     sext_i32_i64(num_threads_44943)));
        int64_t carry_in_flat_idx_44996 = orig_group_44995 *
                (segscan_group_sizze_39944 * sdiv_up64(m_29116 * N_29115,
                                                       sext_i32_i64(num_threads_44943))) -
                1;
        
        if (slt64(gtid_39918, m_29116) && slt64(gtid_39926, N_29115)) {
            if (!(orig_group_44995 == 0 || (flat_idx_44994 ==
                                            (orig_group_44995 + 1) *
                                            (segscan_group_sizze_39944 *
                                             sdiv_up64(m_29116 * N_29115,
                                                       sext_i32_i64(num_threads_44943))) -
                                            1 || slt64(srem64(flat_idx_44994,
                                                              N_29115),
                                                       flat_idx_44994 -
                                                       carry_in_flat_idx_44996)))) {
                int64_t x_39949;
                int64_t x_39950;
                
                x_39949 = ((__global
                            int64_t *) mem_43910)[squot64(carry_in_flat_idx_44996,
                                                          N_29115) * N_29115 +
                                                  (carry_in_flat_idx_44996 -
                                                   squot64(carry_in_flat_idx_44996,
                                                           N_29115) * N_29115)];
                x_39950 = ((__global int64_t *) mem_43910)[gtid_39918 *
                                                           N_29115 +
                                                           gtid_39926];
                
                int64_t defunc_1_op_res_39951;
                
                defunc_1_op_res_39951 = add64(x_39949, x_39950);
                x_39949 = defunc_1_op_res_39951;
                ((__global int64_t *) mem_43910)[gtid_39918 * N_29115 +
                                                 gtid_39926] = x_39949;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_39944
}
__kernel void mainziscan_stage3_40911(__global int *global_failure,
                                      int64_t m_29116, int64_t iota32_arg_29515,
                                      int64_t num_groups_40990, __global
                                      unsigned char *mem_44040,
                                      int32_t num_threads_45310,
                                      int32_t required_groups_45352)
{
    #define segscan_group_sizze_40989 (mainzisegscan_group_sizze_40905)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45353;
    int32_t local_tid_45354;
    int64_t group_sizze_45357;
    int32_t wave_sizze_45356;
    int32_t group_tid_45355;
    
    global_tid_45353 = get_global_id(0);
    local_tid_45354 = get_local_id(0);
    group_sizze_45357 = get_local_size(0);
    wave_sizze_45356 = LOCKSTEP_WIDTH;
    group_tid_45355 = get_group_id(0);
    
    int32_t phys_tid_40911;
    
    phys_tid_40911 = global_tid_45353;
    
    int32_t phys_group_id_45358;
    
    phys_group_id_45358 = get_group_id(0);
    for (int32_t i_45359 = 0; i_45359 < sdiv_up32(required_groups_45352 -
                                                  phys_group_id_45358,
                                                  sext_i64_i32(num_groups_40990));
         i_45359++) {
        int32_t virt_group_id_45360 = phys_group_id_45358 + i_45359 *
                sext_i64_i32(num_groups_40990);
        int64_t flat_idx_45361 = sext_i32_i64(virt_group_id_45360) *
                segscan_group_sizze_40989 + sext_i32_i64(local_tid_45354);
        int64_t gtid_40902 = squot64(flat_idx_45361, iota32_arg_29515);
        int64_t gtid_40910 = flat_idx_45361 - squot64(flat_idx_45361,
                                                      iota32_arg_29515) *
                iota32_arg_29515;
        int64_t orig_group_45362 = squot64(flat_idx_45361,
                                           segscan_group_sizze_40989 *
                                           sdiv_up64(m_29116 * iota32_arg_29515,
                                                     sext_i32_i64(num_threads_45310)));
        int64_t carry_in_flat_idx_45363 = orig_group_45362 *
                (segscan_group_sizze_40989 * sdiv_up64(m_29116 *
                                                       iota32_arg_29515,
                                                       sext_i32_i64(num_threads_45310))) -
                1;
        
        if (slt64(gtid_40902, m_29116) && slt64(gtid_40910, iota32_arg_29515)) {
            if (!(orig_group_45362 == 0 || (flat_idx_45361 ==
                                            (orig_group_45362 + 1) *
                                            (segscan_group_sizze_40989 *
                                             sdiv_up64(m_29116 *
                                                       iota32_arg_29515,
                                                       sext_i32_i64(num_threads_45310))) -
                                            1 || slt64(srem64(flat_idx_45361,
                                                              iota32_arg_29515),
                                                       flat_idx_45361 -
                                                       carry_in_flat_idx_45363)))) {
                float x_40993;
                float x_40994;
                
                x_40993 = ((__global
                            float *) mem_44040)[squot64(carry_in_flat_idx_45363,
                                                        iota32_arg_29515) *
                                                iota32_arg_29515 +
                                                (carry_in_flat_idx_45363 -
                                                 squot64(carry_in_flat_idx_45363,
                                                         iota32_arg_29515) *
                                                 iota32_arg_29515)];
                x_40994 = ((__global float *) mem_44040)[gtid_40902 *
                                                         iota32_arg_29515 +
                                                         gtid_40910];
                
                float defunc_1_op_res_40995;
                
                defunc_1_op_res_40995 = x_40993 + x_40994;
                x_40993 = defunc_1_op_res_40995;
                ((__global float *) mem_44040)[gtid_40902 * iota32_arg_29515 +
                                               gtid_40910] = x_40993;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_40989
}
__kernel void mainzisegmap_37850(__global int *global_failure, int64_t N_29115,
                                 float freq_29121, int64_t i32_res_29135,
                                 __global
                                 unsigned char *mappingindices_mem_43122,
                                 __global unsigned char *mem_43127)
{
    #define segmap_group_sizze_37923 (mainzisegmap_group_sizze_37853)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44350;
    int32_t local_tid_44351;
    int64_t group_sizze_44354;
    int32_t wave_sizze_44353;
    int32_t group_tid_44352;
    
    global_tid_44350 = get_global_id(0);
    local_tid_44351 = get_local_id(0);
    group_sizze_44354 = get_local_size(0);
    wave_sizze_44353 = LOCKSTEP_WIDTH;
    group_tid_44352 = get_group_id(0);
    
    int32_t phys_tid_37850;
    
    phys_tid_37850 = global_tid_44350;
    
    int64_t gtid_37848;
    
    gtid_37848 = squot64(sext_i32_i64(group_tid_44352) *
                         segmap_group_sizze_37923 +
                         sext_i32_i64(local_tid_44351), N_29115);
    
    int64_t gtid_37849;
    
    gtid_37849 = sext_i32_i64(group_tid_44352) * segmap_group_sizze_37923 +
        sext_i32_i64(local_tid_44351) - squot64(sext_i32_i64(group_tid_44352) *
                                                segmap_group_sizze_37923 +
                                                sext_i32_i64(local_tid_44351),
                                                N_29115) * N_29115;
    if (slt64(gtid_37848, i32_res_29135) && slt64(gtid_37849, N_29115)) {
        int32_t index_primexp_41117 = sext_i64_i32(gtid_37848);
        bool index_primexp_41114 = index_primexp_41117 == 0;
        float defunc_0_f_res_37929;
        
        if (index_primexp_41114) {
            defunc_0_f_res_37929 = 1.0F;
        } else {
            int32_t x_37928 = ((__global
                                int32_t *) mappingindices_mem_43122)[gtid_37849];
            bool cond_37930 = index_primexp_41117 == 1;
            float defunc_0_f_res_f_res_37931;
            
            if (cond_37930) {
                float i32_res_37932 = sitofp_i32_f32(x_37928);
                
                defunc_0_f_res_f_res_37931 = i32_res_37932;
            } else {
                int32_t r32_arg_37933 = sdiv32(index_primexp_41117, 2);
                float i32_res_37934 = sitofp_i32_f32(r32_arg_37933);
                float i32_res_37935 = sitofp_i32_f32(x_37928);
                float x_37936 = 6.2831855F * i32_res_37934;
                float x_37937 = i32_res_37935 * x_37936;
                float angle_37938 = x_37937 / freq_29121;
                int32_t x_37939 = smod32(index_primexp_41117, 2);
                bool cond_37940 = x_37939 == 0;
                float defunc_0_f_res_f_res_f_res_37941;
                
                if (cond_37940) {
                    float sin_res_37942;
                    
                    sin_res_37942 = futrts_sin32(angle_37938);
                    defunc_0_f_res_f_res_f_res_37941 = sin_res_37942;
                } else {
                    float cos_res_37943;
                    
                    cos_res_37943 = futrts_cos32(angle_37938);
                    defunc_0_f_res_f_res_f_res_37941 = cos_res_37943;
                }
                defunc_0_f_res_f_res_37931 = defunc_0_f_res_f_res_f_res_37941;
            }
            defunc_0_f_res_37929 = defunc_0_f_res_f_res_37931;
        }
        ((__global float *) mem_43127)[gtid_37848 * N_29115 + gtid_37849] =
            defunc_0_f_res_37929;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37923
}
__kernel void mainzisegmap_38028(__global int *global_failure, int64_t N_29115,
                                 float freq_29121, int64_t i32_res_29135,
                                 __global
                                 unsigned char *mappingindices_mem_43122,
                                 __global unsigned char *mem_43131)
{
    #define segmap_group_sizze_38097 (mainzisegmap_group_sizze_38031)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44355;
    int32_t local_tid_44356;
    int64_t group_sizze_44359;
    int32_t wave_sizze_44358;
    int32_t group_tid_44357;
    
    global_tid_44355 = get_global_id(0);
    local_tid_44356 = get_local_id(0);
    group_sizze_44359 = get_local_size(0);
    wave_sizze_44358 = LOCKSTEP_WIDTH;
    group_tid_44357 = get_group_id(0);
    
    int32_t phys_tid_38028;
    
    phys_tid_38028 = global_tid_44355;
    
    int64_t gtid_38026;
    
    gtid_38026 = squot64(sext_i32_i64(group_tid_44357) *
                         segmap_group_sizze_38097 +
                         sext_i32_i64(local_tid_44356), N_29115);
    
    int64_t gtid_38027;
    
    gtid_38027 = sext_i32_i64(group_tid_44357) * segmap_group_sizze_38097 +
        sext_i32_i64(local_tid_44356) - squot64(sext_i32_i64(group_tid_44357) *
                                                segmap_group_sizze_38097 +
                                                sext_i32_i64(local_tid_44356),
                                                N_29115) * N_29115;
    if (slt64(gtid_38026, i32_res_29135) && slt64(gtid_38027, N_29115)) {
        int32_t index_primexp_41126 = sext_i64_i32(gtid_38026);
        bool index_primexp_41123 = index_primexp_41126 == 0;
        float defunc_0_f_res_38103;
        
        if (index_primexp_41123) {
            defunc_0_f_res_38103 = 1.0F;
        } else {
            int32_t x_38102 = ((__global
                                int32_t *) mappingindices_mem_43122)[gtid_38027];
            int32_t i_38104 = add32(1, index_primexp_41126);
            int32_t r32_arg_38105 = sdiv32(i_38104, 2);
            float i32_res_38106 = sitofp_i32_f32(r32_arg_38105);
            float i32_res_38107 = sitofp_i32_f32(x_38102);
            float x_38108 = 6.2831855F * i32_res_38106;
            float x_38109 = i32_res_38107 * x_38108;
            float angle_38110 = x_38109 / freq_29121;
            int32_t x_38111 = smod32(i_38104, 2);
            bool cond_38112 = x_38111 == 0;
            float defunc_0_f_res_f_res_38113;
            
            if (cond_38112) {
                float sin_res_38114;
                
                sin_res_38114 = futrts_sin32(angle_38110);
                defunc_0_f_res_f_res_38113 = sin_res_38114;
            } else {
                float cos_res_38115;
                
                cos_res_38115 = futrts_cos32(angle_38110);
                defunc_0_f_res_f_res_38113 = cos_res_38115;
            }
            defunc_0_f_res_38103 = defunc_0_f_res_f_res_38113;
        }
        ((__global float *) mem_43131)[gtid_38026 * N_29115 + gtid_38027] =
            defunc_0_f_res_38103;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38097
}
__kernel void mainzisegmap_38156(__global int *global_failure, int64_t N_29115,
                                 int64_t i32_res_29135, float i32_res_29200,
                                 __global unsigned char *mem_43135, __global
                                 unsigned char *mem_43139)
{
    #define segmap_group_sizze_38180 (mainzisegmap_group_sizze_38159)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44360;
    int32_t local_tid_44361;
    int64_t group_sizze_44364;
    int32_t wave_sizze_44363;
    int32_t group_tid_44362;
    
    global_tid_44360 = get_global_id(0);
    local_tid_44361 = get_local_id(0);
    group_sizze_44364 = get_local_size(0);
    wave_sizze_44363 = LOCKSTEP_WIDTH;
    group_tid_44362 = get_group_id(0);
    
    int32_t phys_tid_38156;
    
    phys_tid_38156 = global_tid_44360;
    
    int64_t gtid_38154;
    
    gtid_38154 = squot64(sext_i32_i64(group_tid_44362) *
                         segmap_group_sizze_38180 +
                         sext_i32_i64(local_tid_44361), i32_res_29135);
    
    int64_t gtid_38155;
    
    gtid_38155 = sext_i32_i64(group_tid_44362) * segmap_group_sizze_38180 +
        sext_i32_i64(local_tid_44361) - squot64(sext_i32_i64(group_tid_44362) *
                                                segmap_group_sizze_38180 +
                                                sext_i32_i64(local_tid_44361),
                                                i32_res_29135) * i32_res_29135;
    if (slt64(gtid_38154, N_29115) && slt64(gtid_38155, i32_res_29135)) {
        float x_38183 = ((__global float *) mem_43135)[gtid_38154 *
                                                       i32_res_29135 +
                                                       gtid_38155];
        float defunc_0_f_res_38184 = i32_res_29200 + x_38183;
        
        ((__global float *) mem_43139)[gtid_38154 * i32_res_29135 +
                                       gtid_38155] = defunc_0_f_res_38184;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38180
}
__kernel void mainzisegmap_38189(__global int *global_failure, int64_t N_29115,
                                 int64_t m_29116, int32_t n_29120,
                                 int32_t k2p2zq_29133, int64_t i32_res_29135,
                                 int64_t num_groups_38214, __global
                                 unsigned char *binop_p_mem_43132, __global
                                 unsigned char *mem_43139, __global
                                 unsigned char *mem_43142, __global
                                 unsigned char *mem_43146, __global
                                 unsigned char *mem_43188)
{
    #define segmap_group_sizze_38213 (mainzisegmap_group_sizze_38191)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44368;
    int32_t local_tid_44369;
    int64_t group_sizze_44372;
    int32_t wave_sizze_44371;
    int32_t group_tid_44370;
    
    global_tid_44368 = get_global_id(0);
    local_tid_44369 = get_local_id(0);
    group_sizze_44372 = get_local_size(0);
    wave_sizze_44371 = LOCKSTEP_WIDTH;
    group_tid_44370 = get_group_id(0);
    
    int32_t phys_tid_38189;
    
    phys_tid_38189 = global_tid_44368;
    
    int32_t phys_group_id_44373;
    
    phys_group_id_44373 = get_group_id(0);
    for (int32_t i_44374 = 0; i_44374 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29116, segmap_group_sizze_38213)) -
                   phys_group_id_44373, sext_i64_i32(num_groups_38214));
         i_44374++) {
        int32_t virt_group_id_44375 = phys_group_id_44373 + i_44374 *
                sext_i64_i32(num_groups_38214);
        int64_t gtid_38188 = sext_i32_i64(virt_group_id_44375) *
                segmap_group_sizze_38213 + sext_i32_i64(local_tid_44369);
        
        if (slt64(gtid_38188, m_29116)) {
            for (int32_t i_43104 = 0; i_43104 < k2p2zq_29133; i_43104++) {
                int64_t i_43052 = sext_i32_i64(i_43104);
                
                for (int32_t i_43103 = 0; i_43103 < k2p2zq_29133; i_43103++) {
                    int64_t i_43056 = sext_i32_i64(i_43103);
                    float defunc_2_reduce_res_38222;
                    float redout_43058 = 0.0F;
                    
                    for (int32_t i_43102 = 0; i_43102 < n_29120; i_43102++) {
                        int64_t i_43059 = sext_i32_i64(i_43102);
                        float x_38226 = ((__global float *) mem_43142)[i_43059 *
                                                                       m_29116 +
                                                                       gtid_38188];
                        float x_38227 = ((__global
                                          float *) binop_p_mem_43132)[i_43052 *
                                                                      N_29115 +
                                                                      i_43059];
                        float x_38228 = ((__global float *) mem_43139)[i_43059 *
                                                                       i32_res_29135 +
                                                                       i_43056];
                        float x_38229 = x_38227 * x_38228;
                        bool isnan_res_38230;
                        
                        isnan_res_38230 = futrts_isnan32(x_38226);
                        
                        float y_38231;
                        
                        if (isnan_res_38230) {
                            y_38231 = 0.0F;
                        } else {
                            y_38231 = 1.0F;
                        }
                        
                        float defunc_2_f_res_38232 = x_38229 * y_38231;
                        float defunc_1_op_res_38225 = defunc_2_f_res_38232 +
                              redout_43058;
                        float redout_tmp_44378 = defunc_1_op_res_38225;
                        
                        redout_43058 = redout_tmp_44378;
                    }
                    defunc_2_reduce_res_38222 = redout_43058;
                    ((__global float *) mem_43146)[phys_tid_38189 + (i_43052 *
                                                                     (num_groups_38214 *
                                                                      segmap_group_sizze_38213 *
                                                                      i32_res_29135) +
                                                                     i_43056 *
                                                                     (num_groups_38214 *
                                                                      segmap_group_sizze_38213))] =
                        defunc_2_reduce_res_38222;
                }
            }
            for (int64_t i_44379 = 0; i_44379 < i32_res_29135; i_44379++) {
                for (int64_t i_44380 = 0; i_44380 < i32_res_29135; i_44380++) {
                    ((__global float *) mem_43188)[i_44379 * (m_29116 *
                                                              i32_res_29135) +
                                                   i_44380 * m_29116 +
                                                   gtid_38188] = ((__global
                                                                   float *) mem_43146)[phys_tid_38189 +
                                                                                       (i_44379 *
                                                                                        (num_groups_38214 *
                                                                                         segmap_group_sizze_38213 *
                                                                                         i32_res_29135) +
                                                                                        i_44380 *
                                                                                        (num_groups_38214 *
                                                                                         segmap_group_sizze_38213))];
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38213
}
__kernel void mainzisegmap_38235(__global int *global_failure, int64_t m_29116,
                                 int64_t N_29117, int32_t n_29120,
                                 int32_t k2p2zq_29133, int64_t i32_res_29135,
                                 int64_t num_groups_38391, __global
                                 unsigned char *images_mem_43123, __global
                                 unsigned char *mem_43135, __global
                                 unsigned char *mem_43139, __global
                                 unsigned char *mem_43191, __global
                                 unsigned char *mem_43207)
{
    #define segmap_group_sizze_38390 (mainzisegmap_group_sizze_38238)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44381;
    int32_t local_tid_44382;
    int64_t group_sizze_44385;
    int32_t wave_sizze_44384;
    int32_t group_tid_44383;
    
    global_tid_44381 = get_global_id(0);
    local_tid_44382 = get_local_id(0);
    group_sizze_44385 = get_local_size(0);
    wave_sizze_44384 = LOCKSTEP_WIDTH;
    group_tid_44383 = get_group_id(0);
    
    int32_t phys_tid_38235;
    
    phys_tid_38235 = global_tid_44381;
    
    int32_t phys_group_id_44386;
    
    phys_group_id_44386 = get_group_id(0);
    for (int32_t i_44387 = 0; i_44387 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29116 * i32_res_29135,
                                          segmap_group_sizze_38390)) -
                   phys_group_id_44386, sext_i64_i32(num_groups_38391));
         i_44387++) {
        int32_t virt_group_id_44388 = phys_group_id_44386 + i_44387 *
                sext_i64_i32(num_groups_38391);
        int64_t gtid_38233 = squot64(sext_i32_i64(virt_group_id_44388) *
                                     segmap_group_sizze_38390 +
                                     sext_i32_i64(local_tid_44382),
                                     i32_res_29135);
        int64_t gtid_38234 = sext_i32_i64(virt_group_id_44388) *
                segmap_group_sizze_38390 + sext_i32_i64(local_tid_44382) -
                squot64(sext_i32_i64(virt_group_id_44388) *
                        segmap_group_sizze_38390 +
                        sext_i32_i64(local_tid_44382), i32_res_29135) *
                i32_res_29135;
        
        if (slt64(gtid_38233, m_29116) && slt64(gtid_38234, i32_res_29135)) {
            for (int32_t i_43106 = 0; i_43106 < k2p2zq_29133; i_43106++) {
                int64_t i_43062 = sext_i32_i64(i_43106);
                float defunc_2_reduce_res_38402;
                float redout_43064 = 0.0F;
                
                for (int32_t i_43105 = 0; i_43105 < n_29120; i_43105++) {
                    int64_t i_43065 = sext_i32_i64(i_43105);
                    float x_38406 = ((__global
                                      float *) images_mem_43123)[gtid_38233 *
                                                                 N_29117 +
                                                                 i_43065];
                    float x_38407 = ((__global float *) mem_43135)[i_43065 *
                                                                   i32_res_29135 +
                                                                   gtid_38234];
                    float x_38408 = ((__global float *) mem_43139)[i_43065 *
                                                                   i32_res_29135 +
                                                                   i_43062];
                    float x_38409 = x_38407 * x_38408;
                    bool isnan_res_38410;
                    
                    isnan_res_38410 = futrts_isnan32(x_38406);
                    
                    float y_38411;
                    
                    if (isnan_res_38410) {
                        y_38411 = 0.0F;
                    } else {
                        y_38411 = 1.0F;
                    }
                    
                    float defunc_2_f_res_38412 = x_38409 * y_38411;
                    float defunc_1_op_res_38405 = defunc_2_f_res_38412 +
                          redout_43064;
                    float redout_tmp_44390 = defunc_1_op_res_38405;
                    
                    redout_43064 = redout_tmp_44390;
                }
                defunc_2_reduce_res_38402 = redout_43064;
                ((__global float *) mem_43191)[phys_tid_38235 + i_43062 *
                                               (num_groups_38391 *
                                                segmap_group_sizze_38390)] =
                    defunc_2_reduce_res_38402;
            }
            for (int64_t i_44391 = 0; i_44391 < i32_res_29135; i_44391++) {
                ((__global float *) mem_43207)[i_44391 * (i32_res_29135 *
                                                          m_29116) +
                                               gtid_38233 * i32_res_29135 +
                                               gtid_38234] = ((__global
                                                               float *) mem_43191)[phys_tid_38235 +
                                                                                   i_44391 *
                                                                                   (num_groups_38391 *
                                                                                    segmap_group_sizze_38390)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38390
}
__kernel void mainzisegmap_38719(__global int *global_failure, int64_t m_29116,
                                 int64_t i32_res_29135, int64_t i32_res_29268,
                                 int64_t i32_res_29283, int64_t x_29284,
                                 int64_t j_m_i_29287,
                                 int64_t gauss_jordan_res_r_ixfn_43359,
                                 int64_t gauss_jordan_res_r_ixfn_43360,
                                 int64_t gauss_jordan_res_r_ixfn_43362, __global
                                 unsigned char *gauss_jordan_res_r_mem_43364,
                                 __global unsigned char *mem_43369)
{
    #define segmap_group_sizze_39270 (mainzisegmap_group_sizze_38723)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44547;
    int32_t local_tid_44548;
    int64_t group_sizze_44551;
    int32_t wave_sizze_44550;
    int32_t group_tid_44549;
    
    global_tid_44547 = get_global_id(0);
    local_tid_44548 = get_local_id(0);
    group_sizze_44551 = get_local_size(0);
    wave_sizze_44550 = LOCKSTEP_WIDTH;
    group_tid_44549 = get_group_id(0);
    
    int32_t phys_tid_38719;
    
    phys_tid_38719 = global_tid_44547;
    
    int64_t gtid_38716;
    
    gtid_38716 = squot64(sext_i32_i64(group_tid_44549) *
                         segmap_group_sizze_39270 +
                         sext_i32_i64(local_tid_44548), i32_res_29135 *
                         j_m_i_29287);
    
    int64_t gtid_slice_38714;
    
    gtid_slice_38714 = squot64(sext_i32_i64(group_tid_44549) *
                               segmap_group_sizze_39270 +
                               sext_i32_i64(local_tid_44548) -
                               squot64(sext_i32_i64(group_tid_44549) *
                                       segmap_group_sizze_39270 +
                                       sext_i32_i64(local_tid_44548),
                                       i32_res_29135 * j_m_i_29287) *
                               (i32_res_29135 * j_m_i_29287), j_m_i_29287);
    
    int64_t gtid_slice_38715;
    
    gtid_slice_38715 = sext_i32_i64(group_tid_44549) *
        segmap_group_sizze_39270 + sext_i32_i64(local_tid_44548) -
        squot64(sext_i32_i64(group_tid_44549) * segmap_group_sizze_39270 +
                sext_i32_i64(local_tid_44548), i32_res_29135 * j_m_i_29287) *
        (i32_res_29135 * j_m_i_29287) - squot64(sext_i32_i64(group_tid_44549) *
                                                segmap_group_sizze_39270 +
                                                sext_i32_i64(local_tid_44548) -
                                                squot64(sext_i32_i64(group_tid_44549) *
                                                        segmap_group_sizze_39270 +
                                                        sext_i32_i64(local_tid_44548),
                                                        i32_res_29135 *
                                                        j_m_i_29287) *
                                                (i32_res_29135 * j_m_i_29287),
                                                j_m_i_29287) * j_m_i_29287;
    if ((slt64(gtid_38716, m_29116) && slt64(gtid_slice_38714,
                                             i32_res_29135)) &&
        slt64(gtid_slice_38715, j_m_i_29287)) {
        int64_t slice_39274 = i32_res_29135 + gtid_slice_38715;
        int64_t binop_x_41184 = x_29284 * gtid_38716;
        int64_t binop_y_41185 = i32_res_29283 * gtid_slice_38714;
        int64_t binop_x_41186 = binop_x_41184 + binop_y_41185;
        int64_t binop_x_41187 = slice_39274 + binop_x_41186;
        int64_t new_index_41188 = squot64(binop_x_41187, i32_res_29268);
        int64_t binop_y_41200 = i32_res_29268 * new_index_41188;
        int64_t new_index_41201 = binop_x_41187 - binop_y_41200;
        float v_39275 = ((__global
                          float *) gauss_jordan_res_r_mem_43364)[gauss_jordan_res_r_ixfn_43359 +
                                                                 (new_index_41188 *
                                                                  gauss_jordan_res_r_ixfn_43360 +
                                                                  new_index_41201 *
                                                                  gauss_jordan_res_r_ixfn_43362)];
        
        ((__global float *) mem_43369)[gtid_38716 * (j_m_i_29287 *
                                                     i32_res_29135) +
                                       gtid_slice_38714 * j_m_i_29287 +
                                       gtid_slice_38715] = v_39275;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39270
}
__kernel void mainzisegmap_38885(__global int *global_failure, int64_t m_29116,
                                 int64_t i32_res_29268,
                                 int64_t ctx_param_ext_43322,
                                 int64_t ctx_param_ext_43323,
                                 int64_t ctx_param_ext_43325, __global
                                 unsigned char *mem_param_43327, __global
                                 unsigned char *mem_43347)
{
    #define segmap_group_sizze_39258 (mainzisegmap_group_sizze_38888)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44541;
    int32_t local_tid_44542;
    int64_t group_sizze_44545;
    int32_t wave_sizze_44544;
    int32_t group_tid_44543;
    
    global_tid_44541 = get_global_id(0);
    local_tid_44542 = get_local_id(0);
    group_sizze_44545 = get_local_size(0);
    wave_sizze_44544 = LOCKSTEP_WIDTH;
    group_tid_44543 = get_group_id(0);
    
    int32_t phys_tid_38885;
    
    phys_tid_38885 = global_tid_44541;
    
    int64_t gtid_38883;
    
    gtid_38883 = squot64(sext_i32_i64(group_tid_44543) *
                         segmap_group_sizze_39258 +
                         sext_i32_i64(local_tid_44542), i32_res_29268);
    
    int64_t gtid_38884;
    
    gtid_38884 = sext_i32_i64(group_tid_44543) * segmap_group_sizze_39258 +
        sext_i32_i64(local_tid_44542) - squot64(sext_i32_i64(group_tid_44543) *
                                                segmap_group_sizze_39258 +
                                                sext_i32_i64(local_tid_44542),
                                                i32_res_29268) * i32_res_29268;
    if (slt64(gtid_38883, m_29116) && slt64(gtid_38884, i32_res_29268)) {
        float write_value_39264 = ((__global float *) mem_43347)[gtid_38883 *
                                                                 i32_res_29268 +
                                                                 gtid_38884];
        
        if ((sle64(0, gtid_38883) && slt64(gtid_38883, m_29116)) && (sle64(0,
                                                                           gtid_38884) &&
                                                                     slt64(gtid_38884,
                                                                           i32_res_29268))) {
            ((__global float *) mem_param_43327)[ctx_param_ext_43322 +
                                                 (gtid_38883 *
                                                  ctx_param_ext_43323 +
                                                  gtid_38884 *
                                                  ctx_param_ext_43325)] =
                write_value_39264;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39258
}
__kernel void mainzisegmap_38939(__global int *global_failure, int64_t m_29116,
                                 int32_t k2p2zq_29133, int32_t m_29266,
                                 int64_t i32_res_29268, int32_t i_39161,
                                 int64_t i32_res_39163,
                                 int64_t ctx_param_ext_43322,
                                 int64_t ctx_param_ext_43323,
                                 int64_t ctx_param_ext_43325, __global
                                 unsigned char *mem_param_43327, __global
                                 unsigned char *mem_43343, __global
                                 unsigned char *mem_43347)
{
    #define segmap_group_sizze_39224 (mainzisegmap_group_sizze_38942)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44536;
    int32_t local_tid_44537;
    int64_t group_sizze_44540;
    int32_t wave_sizze_44539;
    int32_t group_tid_44538;
    
    global_tid_44536 = get_global_id(0);
    local_tid_44537 = get_local_id(0);
    group_sizze_44540 = get_local_size(0);
    wave_sizze_44539 = LOCKSTEP_WIDTH;
    group_tid_44538 = get_group_id(0);
    
    int32_t phys_tid_38939;
    
    phys_tid_38939 = global_tid_44536;
    
    int64_t gtid_38937;
    
    gtid_38937 = squot64(sext_i32_i64(group_tid_44538) *
                         segmap_group_sizze_39224 +
                         sext_i32_i64(local_tid_44537), i32_res_29268);
    
    int64_t gtid_38938;
    
    gtid_38938 = sext_i32_i64(group_tid_44538) * segmap_group_sizze_39224 +
        sext_i32_i64(local_tid_44537) - squot64(sext_i32_i64(group_tid_44538) *
                                                segmap_group_sizze_39224 +
                                                sext_i32_i64(local_tid_44537),
                                                i32_res_29268) * i32_res_29268;
    if (slt64(gtid_38937, m_29116) && slt64(gtid_38938, i32_res_29268)) {
        bool cond_39229 = ((__global bool *) mem_43343)[gtid_38937];
        int32_t defunc_0_f_res_39231 = sext_i64_i32(gtid_38938);
        int32_t defunc_0_f_res_39232 = sdiv32(defunc_0_f_res_39231, m_29266);
        int32_t defunc_0_f_res_39233 = smod32(defunc_0_f_res_39231, m_29266);
        float defunc_0_f_res_39234;
        
        if (cond_39229) {
            int32_t x_39235 = mul32(m_29266, defunc_0_f_res_39232);
            int32_t i32_arg_39236 = add32(defunc_0_f_res_39233, x_39235);
            int64_t i32_res_39237 = sext_i32_i64(i32_arg_39236);
            float defunc_0_f_res_t_res_39238 = ((__global
                                                 float *) mem_param_43327)[ctx_param_ext_43322 +
                                                                           (gtid_38937 *
                                                                            ctx_param_ext_43323 +
                                                                            i32_res_39237 *
                                                                            ctx_param_ext_43325)];
            
            defunc_0_f_res_39234 = defunc_0_f_res_t_res_39238;
        } else {
            float v1_39228 = ((__global
                               float *) mem_param_43327)[ctx_param_ext_43322 +
                                                         (gtid_38937 *
                                                          ctx_param_ext_43323 +
                                                          i32_res_39163 *
                                                          ctx_param_ext_43325)];
            int64_t i32_res_39239 = sext_i32_i64(defunc_0_f_res_39233);
            float x_39240 = ((__global
                              float *) mem_param_43327)[ctx_param_ext_43322 +
                                                        (gtid_38937 *
                                                         ctx_param_ext_43323 +
                                                         i32_res_39239 *
                                                         ctx_param_ext_43325)];
            float x_39241 = x_39240 / v1_39228;
            int32_t y_39242 = sub32(k2p2zq_29133, 1);
            bool cond_39243 = slt32(defunc_0_f_res_39232, y_39242);
            float defunc_0_f_res_f_res_39244;
            
            if (cond_39243) {
                int32_t x_39245 = add32(1, defunc_0_f_res_39232);
                int32_t x_39246 = mul32(m_29266, x_39245);
                int32_t i32_arg_39247 = add32(defunc_0_f_res_39233, x_39246);
                int64_t i32_res_39248 = sext_i32_i64(i32_arg_39247);
                float x_39249 = ((__global
                                  float *) mem_param_43327)[ctx_param_ext_43322 +
                                                            (gtid_38937 *
                                                             ctx_param_ext_43323 +
                                                             i32_res_39248 *
                                                             ctx_param_ext_43325)];
                int32_t i32_arg_39250 = add32(i_39161, x_39246);
                int64_t i32_res_39251 = sext_i32_i64(i32_arg_39250);
                float x_39252 = ((__global
                                  float *) mem_param_43327)[ctx_param_ext_43322 +
                                                            (gtid_38937 *
                                                             ctx_param_ext_43323 +
                                                             i32_res_39251 *
                                                             ctx_param_ext_43325)];
                float y_39253 = x_39241 * x_39252;
                float defunc_0_f_res_f_res_t_res_39254 = x_39249 - y_39253;
                
                defunc_0_f_res_f_res_39244 = defunc_0_f_res_f_res_t_res_39254;
            } else {
                defunc_0_f_res_f_res_39244 = x_39241;
            }
            defunc_0_f_res_39234 = defunc_0_f_res_f_res_39244;
        }
        ((__global float *) mem_43347)[gtid_38937 * i32_res_29268 +
                                       gtid_38938] = defunc_0_f_res_39234;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39224
}
__kernel void mainzisegmap_39007(__global int *global_failure, int64_t m_29116,
                                 int64_t i32_res_39163,
                                 int64_t ctx_param_ext_43322,
                                 int64_t ctx_param_ext_43323,
                                 int64_t ctx_param_ext_43325, __global
                                 unsigned char *mem_param_43327, __global
                                 unsigned char *mem_43343)
{
    #define segmap_group_sizze_39208 (mainzisegmap_group_sizze_39009)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44531;
    int32_t local_tid_44532;
    int64_t group_sizze_44535;
    int32_t wave_sizze_44534;
    int32_t group_tid_44533;
    
    global_tid_44531 = get_global_id(0);
    local_tid_44532 = get_local_id(0);
    group_sizze_44535 = get_local_size(0);
    wave_sizze_44534 = LOCKSTEP_WIDTH;
    group_tid_44533 = get_group_id(0);
    
    int32_t phys_tid_39007;
    
    phys_tid_39007 = global_tid_44531;
    
    int64_t gtid_39006;
    
    gtid_39006 = sext_i32_i64(group_tid_44533) * segmap_group_sizze_39208 +
        sext_i32_i64(local_tid_44532);
    if (slt64(gtid_39006, m_29116)) {
        float v1_39213 = ((__global
                           float *) mem_param_43327)[ctx_param_ext_43322 +
                                                     (gtid_39006 *
                                                      ctx_param_ext_43323 +
                                                      i32_res_39163 *
                                                      ctx_param_ext_43325)];
        bool cond_39214 = v1_39213 == 0.0F;
        
        ((__global bool *) mem_43343)[gtid_39006] = cond_39214;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39208
}
__kernel void mainzisegmap_39100(__global int *global_failure, int64_t m_29116,
                                 int32_t k2p2zq_29133, int64_t i32_res_29135,
                                 int32_t m_29266, int64_t i32_res_29268,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_43291,
                                 __global unsigned char *mem_43319)
{
    #define segmap_group_sizze_39144 (mainzisegmap_group_sizze_39103)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44498;
    int32_t local_tid_44499;
    int64_t group_sizze_44502;
    int32_t wave_sizze_44501;
    int32_t group_tid_44500;
    
    global_tid_44498 = get_global_id(0);
    local_tid_44499 = get_local_id(0);
    group_sizze_44502 = get_local_size(0);
    wave_sizze_44501 = LOCKSTEP_WIDTH;
    group_tid_44500 = get_group_id(0);
    
    int32_t phys_tid_39100;
    
    phys_tid_39100 = global_tid_44498;
    
    int64_t gtid_39098;
    
    gtid_39098 = squot64(sext_i32_i64(group_tid_44500) *
                         segmap_group_sizze_39144 +
                         sext_i32_i64(local_tid_44499), i32_res_29268);
    
    int64_t gtid_39099;
    
    gtid_39099 = sext_i32_i64(group_tid_44500) * segmap_group_sizze_39144 +
        sext_i32_i64(local_tid_44499) - squot64(sext_i32_i64(group_tid_44500) *
                                                segmap_group_sizze_39144 +
                                                sext_i32_i64(local_tid_44499),
                                                i32_res_29268) * i32_res_29268;
    if (slt64(gtid_39098, m_29116) && slt64(gtid_39099, i32_res_29268)) {
        int32_t index_primexp_41138 = sext_i64_i32(gtid_39099);
        int32_t defunc_0_f_res_39149 = sdiv32(index_primexp_41138, m_29266);
        int32_t defunc_0_f_res_39150 = smod32(index_primexp_41138, m_29266);
        bool cond_39151 = slt32(defunc_0_f_res_39150, k2p2zq_29133);
        float defunc_0_f_res_39152;
        
        if (cond_39151) {
            int64_t i_39153 = sext_i32_i64(defunc_0_f_res_39149);
            int64_t j_39154 = sext_i32_i64(defunc_0_f_res_39150);
            float defunc_0_f_res_t_res_39155 = ((__global
                                                 float *) defunc_3_map_res_mem_43291)[gtid_39098 *
                                                                                      (i32_res_29135 *
                                                                                       i32_res_29135) +
                                                                                      i_39153 *
                                                                                      i32_res_29135 +
                                                                                      j_39154];
            
            defunc_0_f_res_39152 = defunc_0_f_res_t_res_39155;
        } else {
            int32_t y_39156 = add32(k2p2zq_29133, defunc_0_f_res_39149);
            bool cond_39157 = defunc_0_f_res_39150 == y_39156;
            float defunc_0_f_res_f_res_39158;
            
            if (cond_39157) {
                defunc_0_f_res_f_res_39158 = 1.0F;
            } else {
                defunc_0_f_res_f_res_39158 = 0.0F;
            }
            defunc_0_f_res_39152 = defunc_0_f_res_f_res_39158;
        }
        ((__global float *) mem_43319)[gtid_39098 * i32_res_29268 +
                                       gtid_39099] = defunc_0_f_res_39152;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39144
}
__kernel void mainzisegmap_39281(__global int *global_failure, int64_t N_29115,
                                 int64_t m_29116, int32_t n_29120,
                                 int32_t k2p2zq_29133, int64_t i32_res_29135,
                                 int64_t num_groups_39302, __global
                                 unsigned char *binop_p_mem_43132, __global
                                 unsigned char *mem_43373, __global
                                 unsigned char *mem_43376, __global
                                 unsigned char *mem_43391)
{
    #define segmap_group_sizze_39301 (mainzisegmap_group_sizze_39283)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44555;
    int32_t local_tid_44556;
    int64_t group_sizze_44559;
    int32_t wave_sizze_44558;
    int32_t group_tid_44557;
    
    global_tid_44555 = get_global_id(0);
    local_tid_44556 = get_local_id(0);
    group_sizze_44559 = get_local_size(0);
    wave_sizze_44558 = LOCKSTEP_WIDTH;
    group_tid_44557 = get_group_id(0);
    
    int32_t phys_tid_39281;
    
    phys_tid_39281 = global_tid_44555;
    
    int32_t phys_group_id_44560;
    
    phys_group_id_44560 = get_group_id(0);
    for (int32_t i_44561 = 0; i_44561 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29116, segmap_group_sizze_39301)) -
                   phys_group_id_44560, sext_i64_i32(num_groups_39302));
         i_44561++) {
        int32_t virt_group_id_44562 = phys_group_id_44560 + i_44561 *
                sext_i64_i32(num_groups_39302);
        int64_t gtid_39280 = sext_i32_i64(virt_group_id_44562) *
                segmap_group_sizze_39301 + sext_i32_i64(local_tid_44556);
        
        if (slt64(gtid_39280, m_29116)) {
            for (int32_t i_43108 = 0; i_43108 < k2p2zq_29133; i_43108++) {
                int64_t i_43068 = sext_i32_i64(i_43108);
                float defunc_2_reduce_res_39308;
                float redout_43070 = 0.0F;
                
                for (int32_t i_43107 = 0; i_43107 < n_29120; i_43107++) {
                    int64_t i_43071 = sext_i32_i64(i_43107);
                    float x_39313 = ((__global float *) mem_43373)[i_43071 *
                                                                   m_29116 +
                                                                   gtid_39280];
                    bool isnan_res_39314;
                    
                    isnan_res_39314 = futrts_isnan32(x_39313);
                    
                    float defunc_1_f_res_39315;
                    
                    if (isnan_res_39314) {
                        defunc_1_f_res_39315 = 0.0F;
                    } else {
                        float x_39312 = ((__global
                                          float *) binop_p_mem_43132)[i_43068 *
                                                                      N_29115 +
                                                                      i_43071];
                        float defunc_1_f_res_f_res_39316 = x_39312 * x_39313;
                        
                        defunc_1_f_res_39315 = defunc_1_f_res_f_res_39316;
                    }
                    
                    float defunc_1_op_res_39311 = defunc_1_f_res_39315 +
                          redout_43070;
                    float redout_tmp_44564 = defunc_1_op_res_39311;
                    
                    redout_43070 = redout_tmp_44564;
                }
                defunc_2_reduce_res_39308 = redout_43070;
                ((__global float *) mem_43376)[phys_tid_39281 + i_43068 *
                                               (num_groups_39302 *
                                                segmap_group_sizze_39301)] =
                    defunc_2_reduce_res_39308;
            }
            for (int64_t i_44565 = 0; i_44565 < i32_res_29135; i_44565++) {
                ((__global float *) mem_43391)[i_44565 * m_29116 + gtid_39280] =
                    ((__global float *) mem_43376)[phys_tid_39281 + i_44565 *
                                                   (num_groups_39302 *
                                                    segmap_group_sizze_39301)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39301
}
__kernel void mainzisegmap_39422(__global int *global_failure, int64_t m_29116,
                                 int32_t k2p2zq_29133, int64_t i32_res_29135,
                                 int64_t num_groups_39442, __global
                                 unsigned char *mem_43595, __global
                                 unsigned char *mem_43598, __global
                                 unsigned char *mem_43601, __global
                                 unsigned char *mem_43616)
{
    #define segmap_group_sizze_39441 (mainzisegmap_group_sizze_39424)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44687;
    int32_t local_tid_44688;
    int64_t group_sizze_44691;
    int32_t wave_sizze_44690;
    int32_t group_tid_44689;
    
    global_tid_44687 = get_global_id(0);
    local_tid_44688 = get_local_id(0);
    group_sizze_44691 = get_local_size(0);
    wave_sizze_44690 = LOCKSTEP_WIDTH;
    group_tid_44689 = get_group_id(0);
    
    int32_t phys_tid_39422;
    
    phys_tid_39422 = global_tid_44687;
    
    int32_t phys_group_id_44692;
    
    phys_group_id_44692 = get_group_id(0);
    for (int32_t i_44693 = 0; i_44693 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29116, segmap_group_sizze_39441)) -
                   phys_group_id_44692, sext_i64_i32(num_groups_39442));
         i_44693++) {
        int32_t virt_group_id_44694 = phys_group_id_44692 + i_44693 *
                sext_i64_i32(num_groups_39442);
        int64_t gtid_39421 = sext_i32_i64(virt_group_id_44694) *
                segmap_group_sizze_39441 + sext_i32_i64(local_tid_44688);
        
        if (slt64(gtid_39421, m_29116)) {
            for (int32_t i_43110 = 0; i_43110 < k2p2zq_29133; i_43110++) {
                int64_t i_43074 = sext_i32_i64(i_43110);
                float defunc_0_f_res_39449;
                float redout_43076 = 0.0F;
                
                for (int32_t i_43109 = 0; i_43109 < k2p2zq_29133; i_43109++) {
                    int64_t i_43077 = sext_i32_i64(i_43109);
                    float x_39453 = ((__global float *) mem_43598)[i_43077 *
                                                                   m_29116 +
                                                                   gtid_39421];
                    float x_39454 = ((__global float *) mem_43595)[i_43074 *
                                                                   (m_29116 *
                                                                    i32_res_29135) +
                                                                   i_43077 *
                                                                   m_29116 +
                                                                   gtid_39421];
                    float defunc_1_f_res_39455 = x_39453 * x_39454;
                    float defunc_1_op_res_39452 = defunc_1_f_res_39455 +
                          redout_43076;
                    float redout_tmp_44696 = defunc_1_op_res_39452;
                    
                    redout_43076 = redout_tmp_44696;
                }
                defunc_0_f_res_39449 = redout_43076;
                ((__global float *) mem_43601)[phys_tid_39422 + i_43074 *
                                               (num_groups_39442 *
                                                segmap_group_sizze_39441)] =
                    defunc_0_f_res_39449;
            }
            for (int64_t i_44697 = 0; i_44697 < i32_res_29135; i_44697++) {
                ((__global float *) mem_43616)[i_44697 * m_29116 + gtid_39421] =
                    ((__global float *) mem_43601)[phys_tid_39422 + i_44697 *
                                                   (num_groups_39442 *
                                                    segmap_group_sizze_39441)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39441
}
__kernel void mainzisegmap_39554(__global int *global_failure, int64_t N_29115,
                                 int64_t m_29116, int32_t k2p2zq_29133,
                                 int64_t i32_res_29135,
                                 int64_t num_groups_39573, __global
                                 unsigned char *mem_43139, __global
                                 unsigned char *mem_43660, __global
                                 unsigned char *mem_43663, __global
                                 unsigned char *mem_43678)
{
    #define segmap_group_sizze_39572 (mainzisegmap_group_sizze_39556)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44775;
    int32_t local_tid_44776;
    int64_t group_sizze_44779;
    int32_t wave_sizze_44778;
    int32_t group_tid_44777;
    
    global_tid_44775 = get_global_id(0);
    local_tid_44776 = get_local_id(0);
    group_sizze_44779 = get_local_size(0);
    wave_sizze_44778 = LOCKSTEP_WIDTH;
    group_tid_44777 = get_group_id(0);
    
    int32_t phys_tid_39554;
    
    phys_tid_39554 = global_tid_44775;
    
    int32_t phys_group_id_44780;
    
    phys_group_id_44780 = get_group_id(0);
    for (int32_t i_44781 = 0; i_44781 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29116, segmap_group_sizze_39572)) -
                   phys_group_id_44780, sext_i64_i32(num_groups_39573));
         i_44781++) {
        int32_t virt_group_id_44782 = phys_group_id_44780 + i_44781 *
                sext_i64_i32(num_groups_39573);
        int64_t gtid_39553 = sext_i32_i64(virt_group_id_44782) *
                segmap_group_sizze_39572 + sext_i32_i64(local_tid_44776);
        
        if (slt64(gtid_39553, m_29116)) {
            for (int64_t i_43084 = 0; i_43084 < N_29115; i_43084++) {
                float defunc_0_f_res_39579;
                float redout_43086 = 0.0F;
                
                for (int32_t i_43113 = 0; i_43113 < k2p2zq_29133; i_43113++) {
                    int64_t i_43087 = sext_i32_i64(i_43113);
                    float x_39583 = ((__global float *) mem_43660)[i_43087 *
                                                                   m_29116 +
                                                                   gtid_39553];
                    float x_39584 = ((__global float *) mem_43139)[i_43084 *
                                                                   i32_res_29135 +
                                                                   i_43087];
                    float defunc_1_f_res_39585 = x_39583 * x_39584;
                    float defunc_1_op_res_39582 = defunc_1_f_res_39585 +
                          redout_43086;
                    float redout_tmp_44784 = defunc_1_op_res_39582;
                    
                    redout_43086 = redout_tmp_44784;
                }
                defunc_0_f_res_39579 = redout_43086;
                ((__global float *) mem_43663)[phys_tid_39554 + i_43084 *
                                               (num_groups_39573 *
                                                segmap_group_sizze_39572)] =
                    defunc_0_f_res_39579;
            }
            for (int64_t i_44785 = 0; i_44785 < N_29115; i_44785++) {
                ((__global float *) mem_43678)[i_44785 * m_29116 + gtid_39553] =
                    ((__global float *) mem_43663)[phys_tid_39554 + i_44785 *
                                                   (num_groups_39573 *
                                                    segmap_group_sizze_39572)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39572
}
__kernel void mainzisegmap_39834(__global int *global_failure, int64_t N_29115,
                                 int64_t m_29116, __global
                                 unsigned char *mem_43884, __global
                                 unsigned char *mem_43887, __global
                                 unsigned char *mem_43910, __global
                                 unsigned char *mem_43913)
{
    #define segmap_group_sizze_40000 (mainzisegmap_group_sizze_39837)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45002;
    int32_t local_tid_45003;
    int64_t group_sizze_45006;
    int32_t wave_sizze_45005;
    int32_t group_tid_45004;
    
    global_tid_45002 = get_global_id(0);
    local_tid_45003 = get_local_id(0);
    group_sizze_45006 = get_local_size(0);
    wave_sizze_45005 = LOCKSTEP_WIDTH;
    group_tid_45004 = get_group_id(0);
    
    int32_t phys_tid_39834;
    
    phys_tid_39834 = global_tid_45002;
    
    int64_t gtid_39832;
    
    gtid_39832 = squot64(sext_i32_i64(group_tid_45004) *
                         segmap_group_sizze_40000 +
                         sext_i32_i64(local_tid_45003), N_29115);
    
    int64_t gtid_39833;
    
    gtid_39833 = sext_i32_i64(group_tid_45004) * segmap_group_sizze_40000 +
        sext_i32_i64(local_tid_45003) - squot64(sext_i32_i64(group_tid_45004) *
                                                segmap_group_sizze_40000 +
                                                sext_i32_i64(local_tid_45003),
                                                N_29115) * N_29115;
    if (slt64(gtid_39832, m_29116) && slt64(gtid_39833, N_29115)) {
        float x_40008 = ((__global float *) mem_43913)[gtid_39832 * N_29115 +
                                                       gtid_39833];
        int32_t index_primexp_41154 = sext_i64_i32(gtid_39833);
        bool isnan_res_40011;
        
        isnan_res_40011 = futrts_isnan32(x_40008);
        
        bool defunc_0_p_res_40012 = !isnan_res_40011;
        int64_t defunc_1_f_res_40013;
        
        if (defunc_0_p_res_40012) {
            int64_t x_40009 = ((__global int64_t *) mem_43910)[gtid_39832 *
                                                               N_29115 +
                                                               gtid_39833];
            int64_t defunc_1_f_res_t_res_40014 = sub64(x_40009, 1);
            
            defunc_1_f_res_40013 = defunc_1_f_res_t_res_40014;
        } else {
            defunc_1_f_res_40013 = -1;
        }
        if ((sle64(0, gtid_39832) && slt64(gtid_39832, m_29116)) && (sle64(0,
                                                                           defunc_1_f_res_40013) &&
                                                                     slt64(defunc_1_f_res_40013,
                                                                           N_29115))) {
            ((__global int32_t *) mem_43887)[gtid_39832 * N_29115 +
                                             defunc_1_f_res_40013] =
                index_primexp_41154;
        }
        if ((sle64(0, gtid_39832) && slt64(gtid_39832, m_29116)) && (sle64(0,
                                                                           defunc_1_f_res_40013) &&
                                                                     slt64(defunc_1_f_res_40013,
                                                                           N_29115))) {
            ((__global float *) mem_43884)[gtid_39832 * N_29115 +
                                           defunc_1_f_res_40013] = x_40008;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_40000
}
__kernel void mainzisegmap_39910(__global int *global_failure, int64_t N_29115,
                                 int64_t m_29116, int64_t i_29395, __global
                                 unsigned char *mem_43910, __global
                                 unsigned char *mem_43916)
{
    #define segmap_group_sizze_39964 (mainzisegmap_group_sizze_39912)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44997;
    int32_t local_tid_44998;
    int64_t group_sizze_45001;
    int32_t wave_sizze_45000;
    int32_t group_tid_44999;
    
    global_tid_44997 = get_global_id(0);
    local_tid_44998 = get_local_id(0);
    group_sizze_45001 = get_local_size(0);
    wave_sizze_45000 = LOCKSTEP_WIDTH;
    group_tid_44999 = get_group_id(0);
    
    int32_t phys_tid_39910;
    
    phys_tid_39910 = global_tid_44997;
    
    int64_t gtid_39909;
    
    gtid_39909 = sext_i32_i64(group_tid_44999) * segmap_group_sizze_39964 +
        sext_i32_i64(local_tid_44998);
    if (slt64(gtid_39909, m_29116)) {
        int64_t last_res_39968 = ((__global int64_t *) mem_43910)[gtid_39909 *
                                                                  N_29115 +
                                                                  i_29395];
        int32_t defunc_0_f_res_39969 = sext_i64_i32(last_res_39968);
        
        ((__global int32_t *) mem_43916)[gtid_39909] = defunc_0_f_res_39969;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39964
}
__kernel void mainzisegmap_40161(__global int *global_failure, int64_t m_29116,
                                 float hfrac_29122, int32_t k2p2_29131, __global
                                 unsigned char *mem_43970, __global
                                 unsigned char *mem_43973, __global
                                 unsigned char *mem_43976, __global
                                 unsigned char *mem_43978)
{
    #define segmap_group_sizze_40246 (mainzisegmap_group_sizze_40163)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45157;
    int32_t local_tid_45158;
    int64_t group_sizze_45161;
    int32_t wave_sizze_45160;
    int32_t group_tid_45159;
    
    global_tid_45157 = get_global_id(0);
    local_tid_45158 = get_local_id(0);
    group_sizze_45161 = get_local_size(0);
    wave_sizze_45160 = LOCKSTEP_WIDTH;
    group_tid_45159 = get_group_id(0);
    
    int32_t phys_tid_40161;
    
    phys_tid_40161 = global_tid_45157;
    
    int64_t gtid_40160;
    
    gtid_40160 = sext_i32_i64(group_tid_45159) * segmap_group_sizze_40246 +
        sext_i32_i64(local_tid_45158);
    if (slt64(gtid_40160, m_29116)) {
        int32_t defunc_0_f_res_40250 = ((__global
                                         int32_t *) mem_43970)[gtid_40160];
        float defunc_0_f_res_40251 = ((__global float *) mem_43973)[gtid_40160];
        int32_t r32_arg_40252 = sub32(defunc_0_f_res_40250, k2p2_29131);
        float i32_res_40253 = sitofp_i32_f32(r32_arg_40252);
        float sqrt_arg_40254 = defunc_0_f_res_40251 / i32_res_40253;
        float sqrt_res_40255;
        
        sqrt_res_40255 = futrts_sqrt32(sqrt_arg_40254);
        
        float i32_res_40256 = sitofp_i32_f32(defunc_0_f_res_40250);
        float t32_arg_40257 = hfrac_29122 * i32_res_40256;
        int32_t f32_res_40258 = fptosi_f32_i32(t32_arg_40257);
        
        ((__global int32_t *) mem_43976)[gtid_40160] = f32_res_40258;
        ((__global float *) mem_43978)[gtid_40160] = sqrt_res_40255;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_40246
}
__kernel void mainzisegmap_40432(__global int *global_failure, float lam_29123,
                                 int64_t iota32_arg_29515, int32_t x_29520,
                                 float i32_res_29528, __global
                                 unsigned char *mappingindices_mem_43122,
                                 __global unsigned char *mem_44020, __global
                                 unsigned char *mem_44022)
{
    #define segmap_group_sizze_40451 (mainzisegmap_group_sizze_40434)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45267;
    int32_t local_tid_45268;
    int64_t group_sizze_45271;
    int32_t wave_sizze_45270;
    int32_t group_tid_45269;
    
    global_tid_45267 = get_global_id(0);
    local_tid_45268 = get_local_id(0);
    group_sizze_45271 = get_local_size(0);
    wave_sizze_45270 = LOCKSTEP_WIDTH;
    group_tid_45269 = get_group_id(0);
    
    int32_t phys_tid_40432;
    
    phys_tid_40432 = global_tid_45267;
    
    int64_t gtid_40431;
    
    gtid_40431 = sext_i32_i64(group_tid_45269) * segmap_group_sizze_40451 +
        sext_i32_i64(local_tid_45268);
    if (slt64(gtid_40431, iota32_arg_29515)) {
        int32_t defunc_0_f_res_40456 = sext_i64_i32(gtid_40431);
        int32_t t_40457 = add32(x_29520, defunc_0_f_res_40456);
        int32_t i_40458 = sub32(t_40457, 1);
        int64_t i_40459 = sext_i32_i64(i_40458);
        int32_t time_40460 = ((__global
                               int32_t *) mappingindices_mem_43122)[i_40459];
        float i32_res_40461 = sitofp_i32_f32(time_40460);
        float logplus_arg_40462 = i32_res_40461 / i32_res_29528;
        bool cond_40463 = 2.7182817F < logplus_arg_40462;
        float logplus_res_40464;
        
        if (cond_40463) {
            float log_res_40465;
            
            log_res_40465 = futrts_log32(logplus_arg_40462);
            logplus_res_40464 = log_res_40465;
        } else {
            logplus_res_40464 = 1.0F;
        }
        
        float sqrt_res_40466;
        
        sqrt_res_40466 = futrts_sqrt32(logplus_res_40464);
        
        float defunc_0_f_res_40467 = lam_29123 * sqrt_res_40466;
        
        ((__global int32_t *) mem_44020)[gtid_40431] = defunc_0_f_res_40456;
        ((__global float *) mem_44022)[gtid_40431] = defunc_0_f_res_40467;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_40451
}
__kernel void mainzisegmap_40802(__global int *global_failure, int64_t N_29115,
                                 int64_t m_29116, int32_t n_29120, __global
                                 unsigned char *defunc_4_map_res_mem_43920,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_43983,
                                 __global unsigned char *mem_44036, __global
                                 unsigned char *mem_44043, __global
                                 unsigned char *mem_44045, __global
                                 unsigned char *mem_44047, __global
                                 unsigned char *mem_44050, __global
                                 unsigned char *mem_44052)
{
    #define segmap_group_sizze_41066 (mainzisegmap_group_sizze_40804)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45462;
    int32_t local_tid_45463;
    int64_t group_sizze_45466;
    int32_t wave_sizze_45465;
    int32_t group_tid_45464;
    
    global_tid_45462 = get_global_id(0);
    local_tid_45463 = get_local_id(0);
    group_sizze_45466 = get_local_size(0);
    wave_sizze_45465 = LOCKSTEP_WIDTH;
    group_tid_45464 = get_group_id(0);
    
    int32_t phys_tid_40802;
    
    phys_tid_40802 = global_tid_45462;
    
    int64_t gtid_40801;
    
    gtid_40801 = sext_i32_i64(group_tid_45464) * segmap_group_sizze_41066 +
        sext_i32_i64(local_tid_45463);
    if (slt64(gtid_40801, m_29116)) {
        int32_t x_41070 = ((__global
                            int32_t *) defunc_3_map_res_mem_43983)[gtid_40801];
        int32_t y_41072 = ((__global int32_t *) mem_44036)[gtid_40801];
        bool acc0_41074 = ((__global bool *) mem_44043)[gtid_40801];
        bool x_41079 = acc0_41074 && acc0_41074;
        int32_t defunc_1_op_res_f_res_41083;
        
        if (acc0_41074) {
            int32_t acc0_41075 = ((__global int32_t *) mem_44045)[gtid_40801];
            
            defunc_1_op_res_f_res_41083 = acc0_41075;
        } else {
            defunc_1_op_res_f_res_41083 = -1;
        }
        
        bool cond_41089 = y_41072 == 0;
        float defunc_0_f_res_41090;
        
        if (cond_41089) {
            defunc_0_f_res_41090 = 0.0F;
        } else {
            float acc0_41076 = ((__global float *) mem_44047)[gtid_40801];
            float i32_res_41091 = sitofp_i32_f32(y_41072);
            float defunc_0_f_res_f_res_41092 = acc0_41076 / i32_res_41091;
            
            defunc_0_f_res_41090 = defunc_0_f_res_f_res_41092;
        }
        
        bool cond_41093 = !x_41079;
        int32_t fst_breakzq_41094;
        
        if (cond_41093) {
            fst_breakzq_41094 = -1;
        } else {
            bool cond_41095 = slt32(defunc_1_op_res_f_res_41083, y_41072);
            int32_t adjustValInds_res_41096;
            
            if (cond_41095) {
                int32_t i_41097 = add32(x_41070, defunc_1_op_res_f_res_41083);
                int64_t i_41098 = sext_i32_i64(i_41097);
                int32_t x_41099 = ((__global
                                    int32_t *) defunc_4_map_res_mem_43920)[gtid_40801 *
                                                                           N_29115 +
                                                                           i_41098];
                int32_t adjustValInds_res_t_res_41100 = sub32(x_41099, n_29120);
                
                adjustValInds_res_41096 = adjustValInds_res_t_res_41100;
            } else {
                adjustValInds_res_41096 = -1;
            }
            fst_breakzq_41094 = adjustValInds_res_41096;
        }
        
        bool cond_41101 = sle32(x_41070, 5);
        bool cond_f_res_41102 = sle32(y_41072, 5);
        bool x_41103 = !cond_41101;
        bool y_41104 = cond_f_res_41102 && x_41103;
        bool cond_41105 = cond_41101 || y_41104;
        int32_t fst_breakzq_41106;
        
        if (cond_41105) {
            fst_breakzq_41106 = -2;
        } else {
            fst_breakzq_41106 = fst_breakzq_41094;
        }
        ((__global int32_t *) mem_44050)[gtid_40801] = fst_breakzq_41106;
        ((__global float *) mem_44052)[gtid_40801] = defunc_0_f_res_41090;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_41066
}
__kernel void mainzisegmap_40944(__global int *global_failure, int64_t m_29116,
                                 int64_t num_groups_40967, __global
                                 unsigned char *defunc_4_map_res_mem_43918,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_43983,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_43984,
                                 __global unsigned char *mem_44034, __global
                                 unsigned char *mem_44036)
{
    #define segmap_group_sizze_40966 (mainzisegmap_group_sizze_40946)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45300;
    int32_t local_tid_45301;
    int64_t group_sizze_45304;
    int32_t wave_sizze_45303;
    int32_t group_tid_45302;
    
    global_tid_45300 = get_global_id(0);
    local_tid_45301 = get_local_id(0);
    group_sizze_45304 = get_local_size(0);
    wave_sizze_45303 = LOCKSTEP_WIDTH;
    group_tid_45302 = get_group_id(0);
    
    int32_t phys_tid_40944;
    
    phys_tid_40944 = global_tid_45300;
    
    int32_t phys_group_id_45305;
    
    phys_group_id_45305 = get_group_id(0);
    for (int32_t i_45306 = 0; i_45306 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29116, segmap_group_sizze_40966)) -
                   phys_group_id_45305, sext_i64_i32(num_groups_40967));
         i_45306++) {
        int32_t virt_group_id_45307 = phys_group_id_45305 + i_45306 *
                sext_i64_i32(num_groups_40967);
        int64_t gtid_40943 = sext_i32_i64(virt_group_id_45307) *
                segmap_group_sizze_40966 + sext_i32_i64(local_tid_45301);
        
        if (slt64(gtid_40943, m_29116)) {
            int32_t x_40973 = ((__global
                                int32_t *) defunc_4_map_res_mem_43918)[gtid_40943];
            int32_t x_40974 = ((__global
                                int32_t *) defunc_3_map_res_mem_43983)[gtid_40943];
            float x_40975 = ((__global
                              float *) defunc_3_map_res_mem_43984)[gtid_40943];
            int32_t y_40976 = sub32(x_40973, x_40974);
            float i32_res_40977 = sitofp_i32_f32(x_40974);
            float sqrt_res_40978;
            
            sqrt_res_40978 = futrts_sqrt32(i32_res_40977);
            
            float y_40979 = x_40975 * sqrt_res_40978;
            
            ((__global float *) mem_44034)[gtid_40943] = y_40979;
            ((__global int32_t *) mem_44036)[gtid_40943] = y_40976;
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_40966
}
__kernel void mainzisegmap_intragroup_38539(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43305_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43295_backing_aligned_1,
                                            int32_t k2p2zq_29133,
                                            int64_t i32_res_29135,
                                            int32_t m_29266,
                                            int64_t i32_res_29268,
                                            int64_t i32_res_29283, __global
                                            unsigned char *defunc_3_map_res_mem_43291,
                                            __global unsigned char *mem_43315)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43305_backing_1 = (__local volatile
                                                           char *) mem_43305_backing_aligned_0;
    __local volatile char *restrict mem_43295_backing_0 = (__local volatile
                                                           char *) mem_43295_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44490;
    int32_t local_tid_44491;
    int64_t group_sizze_44494;
    int32_t wave_sizze_44493;
    int32_t group_tid_44492;
    
    global_tid_44490 = get_global_id(0);
    local_tid_44491 = get_local_id(0);
    group_sizze_44494 = get_local_size(0);
    wave_sizze_44493 = LOCKSTEP_WIDTH;
    group_tid_44492 = get_group_id(0);
    
    int32_t phys_tid_38539;
    
    phys_tid_38539 = group_tid_44492;
    
    int32_t ltid_pre_44495;
    
    ltid_pre_44495 = local_tid_44491;
    
    int64_t gtid_38494;
    
    gtid_38494 = sext_i32_i64(group_tid_44492);
    
    __local char *mem_43295;
    
    mem_43295 = (__local char *) mem_43295_backing_0;
    
    int64_t gtid_38497 = sext_i32_i64(ltid_pre_44495);
    int32_t phys_tid_38498 = local_tid_44491;
    int32_t index_primexp_41131 = sext_i64_i32(gtid_38497);
    int32_t defunc_0_f_res_38664 = sdiv32(index_primexp_41131, m_29266);
    int32_t defunc_0_f_res_38665 = smod32(index_primexp_41131, m_29266);
    bool cond_38666 = slt32(defunc_0_f_res_38665, k2p2zq_29133);
    float defunc_0_f_res_38667;
    
    if (cond_38666) {
        int64_t i_38668 = sext_i32_i64(defunc_0_f_res_38664);
        int64_t j_38669 = sext_i32_i64(defunc_0_f_res_38665);
        float defunc_0_f_res_t_res_38670 = ((__global
                                             float *) defunc_3_map_res_mem_43291)[gtid_38494 *
                                                                                  (i32_res_29135 *
                                                                                   i32_res_29135) +
                                                                                  i_38668 *
                                                                                  i32_res_29135 +
                                                                                  j_38669];
        
        defunc_0_f_res_38667 = defunc_0_f_res_t_res_38670;
    } else {
        int32_t y_38671 = add32(k2p2zq_29133, defunc_0_f_res_38664);
        bool cond_38672 = defunc_0_f_res_38665 == y_38671;
        float defunc_0_f_res_f_res_38673;
        
        if (cond_38672) {
            defunc_0_f_res_f_res_38673 = 1.0F;
        } else {
            defunc_0_f_res_f_res_38673 = 0.0F;
        }
        defunc_0_f_res_38667 = defunc_0_f_res_f_res_38673;
    }
    ((__local float *) mem_43295)[gtid_38497] = defunc_0_f_res_38667;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43305;
    
    mem_43305 = (__local char *) mem_43305_backing_1;
    for (int32_t i_38675 = 0; i_38675 < k2p2zq_29133; i_38675++) {
        int64_t i32_res_38677 = sext_i32_i64(i_38675);
        float v1_38678 = ((__local float *) mem_43295)[i32_res_38677];
        bool cond_38679 = v1_38678 == 0.0F;
        int64_t gtid_38510 = sext_i32_i64(ltid_pre_44495);
        int32_t phys_tid_38511 = local_tid_44491;
        int32_t defunc_0_f_res_38682 = sext_i64_i32(gtid_38510);
        int32_t defunc_0_f_res_38683 = sdiv32(defunc_0_f_res_38682, m_29266);
        int32_t defunc_0_f_res_38684 = smod32(defunc_0_f_res_38682, m_29266);
        float defunc_0_f_res_38685;
        
        if (cond_38679) {
            int32_t x_38686 = mul32(m_29266, defunc_0_f_res_38683);
            int32_t i32_arg_38687 = add32(defunc_0_f_res_38684, x_38686);
            int64_t i32_res_38688 = sext_i32_i64(i32_arg_38687);
            float defunc_0_f_res_t_res_38689 = ((__local
                                                 float *) mem_43295)[i32_res_38688];
            
            defunc_0_f_res_38685 = defunc_0_f_res_t_res_38689;
        } else {
            int64_t i32_res_38690 = sext_i32_i64(defunc_0_f_res_38684);
            float x_38691 = ((__local float *) mem_43295)[i32_res_38690];
            float x_38692 = x_38691 / v1_38678;
            int32_t y_38693 = sub32(k2p2zq_29133, 1);
            bool cond_38694 = slt32(defunc_0_f_res_38683, y_38693);
            float defunc_0_f_res_f_res_38695;
            
            if (cond_38694) {
                int32_t x_38696 = add32(1, defunc_0_f_res_38683);
                int32_t x_38697 = mul32(m_29266, x_38696);
                int32_t i32_arg_38698 = add32(defunc_0_f_res_38684, x_38697);
                int64_t i32_res_38699 = sext_i32_i64(i32_arg_38698);
                float x_38700 = ((__local float *) mem_43295)[i32_res_38699];
                int32_t i32_arg_38701 = add32(i_38675, x_38697);
                int64_t i32_res_38702 = sext_i32_i64(i32_arg_38701);
                float x_38703 = ((__local float *) mem_43295)[i32_res_38702];
                float y_38704 = x_38692 * x_38703;
                float defunc_0_f_res_f_res_t_res_38705 = x_38700 - y_38704;
                
                defunc_0_f_res_f_res_38695 = defunc_0_f_res_f_res_t_res_38705;
            } else {
                defunc_0_f_res_f_res_38695 = x_38692;
            }
            defunc_0_f_res_38685 = defunc_0_f_res_f_res_38695;
        }
        ((__local float *) mem_43305)[gtid_38510] = defunc_0_f_res_38685;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_38537 = sext_i32_i64(ltid_pre_44495);
        int32_t phys_tid_38538 = local_tid_44491;
        float write_value_38708 = ((__local float *) mem_43305)[write_i_38537];
        
        if (sle64(0, write_i_38537) && slt64(write_i_38537, i32_res_29268)) {
            ((__local float *) mem_43295)[write_i_38537] = write_value_38708;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    for (int64_t i_44497 = 0; i_44497 < sdiv_up64(i32_res_29135 *
                                                  i32_res_29135 -
                                                  sext_i32_i64(local_tid_44491),
                                                  i32_res_29268); i_44497++) {
        ((__global float *) mem_43315)[gtid_38494 * (i32_res_29135 *
                                                     i32_res_29135) +
                                       squot64(i_44497 * i32_res_29268 +
                                               sext_i32_i64(local_tid_44491),
                                               i32_res_29135) * i32_res_29135 +
                                       (i_44497 * i32_res_29268 +
                                        sext_i32_i64(local_tid_44491) -
                                        squot64(i_44497 * i32_res_29268 +
                                                sext_i32_i64(local_tid_44491),
                                                i32_res_29135) *
                                        i32_res_29135)] = ((__local
                                                            float *) mem_43295)[i32_res_29135 +
                                                                                (squot64(i_44497 *
                                                                                         i32_res_29268 +
                                                                                         sext_i32_i64(local_tid_44491),
                                                                                         i32_res_29135) *
                                                                                 i32_res_29283 +
                                                                                 (i_44497 *
                                                                                  i32_res_29268 +
                                                                                  sext_i32_i64(local_tid_44491) -
                                                                                  squot64(i_44497 *
                                                                                          i32_res_29268 +
                                                                                          sext_i32_i64(local_tid_44491),
                                                                                          i32_res_29135) *
                                                                                  i32_res_29135))];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_3:
    return;
}
__kernel void mainzisegmap_intragroup_38766(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43336_backing_aligned_0,
                                            int64_t m_29116,
                                            int32_t k2p2zq_29133,
                                            int32_t m_29266,
                                            int64_t i32_res_29268,
                                            int32_t i_39161,
                                            int64_t i32_res_39163,
                                            int64_t ctx_param_ext_43322,
                                            int64_t ctx_param_ext_43323,
                                            int64_t ctx_param_ext_43325,
                                            __global
                                            unsigned char *mem_param_43327,
                                            __global unsigned char *mem_43332,
                                            __global unsigned char *mem_43340)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43336_backing_0 = (__local volatile
                                                           char *) mem_43336_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44524;
    int32_t local_tid_44525;
    int64_t group_sizze_44528;
    int32_t wave_sizze_44527;
    int32_t group_tid_44526;
    
    global_tid_44524 = get_global_id(0);
    local_tid_44525 = get_local_id(0);
    group_sizze_44528 = get_local_size(0);
    wave_sizze_44527 = LOCKSTEP_WIDTH;
    group_tid_44526 = get_group_id(0);
    
    int32_t phys_tid_38766;
    
    phys_tid_38766 = group_tid_44526;
    
    int32_t ltid_pre_44529;
    
    ltid_pre_44529 = local_tid_44525;
    
    int64_t gtid_38734;
    
    gtid_38734 = sext_i32_i64(group_tid_44526);
    
    float v1_39176 = ((__global float *) mem_param_43327)[ctx_param_ext_43322 +
                                                          (gtid_38734 *
                                                           ctx_param_ext_43323 +
                                                           i32_res_39163 *
                                                           ctx_param_ext_43325)];
    bool cond_39177 = v1_39176 == 0.0F;
    __local char *mem_43336;
    
    mem_43336 = (__local char *) mem_43336_backing_0;
    
    int64_t gtid_38737 = sext_i32_i64(ltid_pre_44529);
    int32_t phys_tid_38738 = local_tid_44525;
    int32_t defunc_0_f_res_39180 = sext_i64_i32(gtid_38737);
    int32_t defunc_0_f_res_39181 = sdiv32(defunc_0_f_res_39180, m_29266);
    int32_t defunc_0_f_res_39182 = smod32(defunc_0_f_res_39180, m_29266);
    float defunc_0_f_res_39183;
    
    if (cond_39177) {
        int32_t x_39184 = mul32(m_29266, defunc_0_f_res_39181);
        int32_t i32_arg_39185 = add32(defunc_0_f_res_39182, x_39184);
        int64_t i32_res_39186 = sext_i32_i64(i32_arg_39185);
        float defunc_0_f_res_t_res_39187 = ((__global
                                             float *) mem_param_43327)[ctx_param_ext_43322 +
                                                                       (gtid_38734 *
                                                                        ctx_param_ext_43323 +
                                                                        i32_res_39186 *
                                                                        ctx_param_ext_43325)];
        
        defunc_0_f_res_39183 = defunc_0_f_res_t_res_39187;
    } else {
        int64_t i32_res_39188 = sext_i32_i64(defunc_0_f_res_39182);
        float x_39189 = ((__global
                          float *) mem_param_43327)[ctx_param_ext_43322 +
                                                    (gtid_38734 *
                                                     ctx_param_ext_43323 +
                                                     i32_res_39188 *
                                                     ctx_param_ext_43325)];
        float x_39190 = x_39189 / v1_39176;
        int32_t y_39191 = sub32(k2p2zq_29133, 1);
        bool cond_39192 = slt32(defunc_0_f_res_39181, y_39191);
        float defunc_0_f_res_f_res_39193;
        
        if (cond_39192) {
            int32_t x_39194 = add32(1, defunc_0_f_res_39181);
            int32_t x_39195 = mul32(m_29266, x_39194);
            int32_t i32_arg_39196 = add32(defunc_0_f_res_39182, x_39195);
            int64_t i32_res_39197 = sext_i32_i64(i32_arg_39196);
            float x_39198 = ((__global
                              float *) mem_param_43327)[ctx_param_ext_43322 +
                                                        (gtid_38734 *
                                                         ctx_param_ext_43323 +
                                                         i32_res_39197 *
                                                         ctx_param_ext_43325)];
            int32_t i32_arg_39199 = add32(i_39161, x_39195);
            int64_t i32_res_39200 = sext_i32_i64(i32_arg_39199);
            float x_39201 = ((__global
                              float *) mem_param_43327)[ctx_param_ext_43322 +
                                                        (gtid_38734 *
                                                         ctx_param_ext_43323 +
                                                         i32_res_39200 *
                                                         ctx_param_ext_43325)];
            float y_39202 = x_39190 * x_39201;
            float defunc_0_f_res_f_res_t_res_39203 = x_39198 - y_39202;
            
            defunc_0_f_res_f_res_39193 = defunc_0_f_res_f_res_t_res_39203;
        } else {
            defunc_0_f_res_f_res_39193 = x_39190;
        }
        defunc_0_f_res_39183 = defunc_0_f_res_f_res_39193;
    }
    ((__local float *) mem_43336)[gtid_38737] = defunc_0_f_res_39183;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_38764 = sext_i32_i64(ltid_pre_44529);
    int32_t phys_tid_38765 = local_tid_44525;
    float write_value_39206 = ((__local float *) mem_43336)[write_i_38764];
    
    if (sle64(0, write_i_38764) && slt64(write_i_38764, i32_res_29268)) {
        ((__global float *) mem_43332)[gtid_38734 + write_i_38764 * m_29116] =
            write_value_39206;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44525 == 0) {
        for (int64_t i_44530 = 0; i_44530 < i32_res_29268; i_44530++) {
            ((__global float *) mem_43340)[gtid_38734 * i32_res_29268 +
                                           i_44530] = ((__global
                                                        float *) mem_43332)[gtid_38734 +
                                                                            i_44530 *
                                                                            m_29116];
        }
    }
    
  error_2:
    return;
}
__kernel void mainzisegmap_intragroup_39717(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43897_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43895_backing_aligned_1,
                                            __local volatile
                                            int64_t *mem_43893_backing_aligned_2,
                                            __local volatile
                                            int64_t *mem_43891_backing_aligned_3,
                                            int64_t N_29115, int64_t N_29117,
                                            int64_t i_29395, __global
                                            unsigned char *images_mem_43123,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43881,
                                            __global unsigned char *mem_43900,
                                            __global unsigned char *mem_43903,
                                            __global unsigned char *mem_43906)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43897_backing_3 = (__local volatile
                                                           char *) mem_43897_backing_aligned_0;
    __local volatile char *restrict mem_43895_backing_2 = (__local volatile
                                                           char *) mem_43895_backing_aligned_1;
    __local volatile char *restrict mem_43893_backing_1 = (__local volatile
                                                           char *) mem_43893_backing_aligned_2;
    __local volatile char *restrict mem_43891_backing_0 = (__local volatile
                                                           char *) mem_43891_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44924;
    int32_t local_tid_44925;
    int64_t group_sizze_44928;
    int32_t wave_sizze_44927;
    int32_t group_tid_44926;
    
    global_tid_44924 = get_global_id(0);
    local_tid_44925 = get_local_id(0);
    group_sizze_44928 = get_local_size(0);
    wave_sizze_44927 = LOCKSTEP_WIDTH;
    group_tid_44926 = get_group_id(0);
    
    int32_t phys_tid_39717;
    
    phys_tid_39717 = group_tid_44926;
    
    int32_t ltid_pre_44929;
    
    ltid_pre_44929 = local_tid_44925;
    
    int64_t gtid_39710;
    
    gtid_39710 = sext_i32_i64(group_tid_44926);
    
    __local char *mem_43891;
    
    mem_43891 = (__local char *) mem_43891_backing_0;
    
    __local char *mem_43893;
    
    mem_43893 = (__local char *) mem_43893_backing_1;
    
    int64_t gtid_39713 = sext_i32_i64(ltid_pre_44929);
    int32_t phys_tid_39714 = local_tid_44925;
    float x_39806 = ((__global float *) images_mem_43123)[gtid_39710 * N_29117 +
                                                          gtid_39713];
    bool isnan_res_39808;
    
    isnan_res_39808 = futrts_isnan32(x_39806);
    
    bool cond_39809 = !isnan_res_39808;
    float defunc_0_f_res_39810;
    
    if (cond_39809) {
        float x_39807 = ((__global
                          float *) defunc_3_map_res_mem_43881)[gtid_39710 *
                                                               N_29115 +
                                                               gtid_39713];
        float defunc_0_f_res_t_res_39811 = x_39806 - x_39807;
        
        defunc_0_f_res_39810 = defunc_0_f_res_t_res_39811;
    } else {
        defunc_0_f_res_39810 = NAN;
    }
    
    bool isnan_res_39812;
    
    isnan_res_39812 = futrts_isnan32(defunc_0_f_res_39810);
    
    bool defunc_0_p_res_39813 = !isnan_res_39812;
    int64_t defunc_0_f_res_39814 = btoi_bool_i64(defunc_0_p_res_39813);
    
    ((__local int64_t *) mem_43891)[gtid_39713] = defunc_0_f_res_39814;
    ((__local float *) mem_43893)[gtid_39713] = defunc_0_f_res_39810;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_44930;
    
    dims_flat_44930 = N_29115;
    
    int64_t x_39803;
    int64_t x_39804;
    int64_t x_44932;
    int64_t x_44933;
    bool ltid_in_bounds_44935;
    
    ltid_in_bounds_44935 = slt64(sext_i32_i64(local_tid_44925), N_29115);
    
    int32_t skip_threads_44936;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44935) {
            x_39804 = ((volatile __local
                        int64_t *) mem_43891)[sext_i32_i64(local_tid_44925)];
            if ((local_tid_44925 - squot32(local_tid_44925, 32) * 32) == 0) {
                x_39803 = x_39804;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44936 = 1;
        while (slt32(skip_threads_44936, 32)) {
            if (sle32(skip_threads_44936, local_tid_44925 -
                      squot32(local_tid_44925, 32) * 32) &&
                ltid_in_bounds_44935) {
                // read operands
                {
                    x_39803 = ((volatile __local
                                int64_t *) mem_43891)[sext_i32_i64(local_tid_44925) -
                                                      sext_i32_i64(skip_threads_44936)];
                }
                // perform operation
                {
                    bool inactive_44937 =
                         slt64(srem64(sext_i32_i64(local_tid_44925), N_29115),
                               sext_i32_i64(local_tid_44925) -
                               sext_i32_i64(local_tid_44925 -
                               skip_threads_44936));
                    
                    if (inactive_44937) {
                        x_39803 = x_39804;
                    }
                    if (!inactive_44937) {
                        int64_t defunc_1_op_res_39805 = add64(x_39803, x_39804);
                        
                        x_39803 = defunc_1_op_res_39805;
                    }
                }
            }
            if (sle32(wave_sizze_44927, skip_threads_44936)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44936, local_tid_44925 -
                      squot32(local_tid_44925, 32) * 32) &&
                ltid_in_bounds_44935) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_43891)[sext_i32_i64(local_tid_44925)] =
                        x_39803;
                    x_39804 = x_39803;
                }
            }
            if (sle32(wave_sizze_44927, skip_threads_44936)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44936 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44925 - squot32(local_tid_44925, 32) * 32) == 31 &&
            ltid_in_bounds_44935) {
            ((volatile __local
              int64_t *) mem_43891)[sext_i32_i64(squot32(local_tid_44925,
                                                         32))] = x_39803;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44938;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44925, 32) == 0 && ltid_in_bounds_44935) {
                x_44933 = ((volatile __local
                            int64_t *) mem_43891)[sext_i32_i64(local_tid_44925)];
                if ((local_tid_44925 - squot32(local_tid_44925, 32) * 32) ==
                    0) {
                    x_44932 = x_44933;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44938 = 1;
            while (slt32(skip_threads_44938, 32)) {
                if (sle32(skip_threads_44938, local_tid_44925 -
                          squot32(local_tid_44925, 32) * 32) &&
                    (squot32(local_tid_44925, 32) == 0 &&
                     ltid_in_bounds_44935)) {
                    // read operands
                    {
                        x_44932 = ((volatile __local
                                    int64_t *) mem_43891)[sext_i32_i64(local_tid_44925) -
                                                          sext_i32_i64(skip_threads_44938)];
                    }
                    // perform operation
                    {
                        bool inactive_44939 =
                             slt64(srem64(sext_i32_i64(local_tid_44925 * 32 +
                                          32 - 1), N_29115),
                                   sext_i32_i64(local_tid_44925 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_44925 -
                                                 skip_threads_44938) * 32 + 32 -
                                   1));
                        
                        if (inactive_44939) {
                            x_44932 = x_44933;
                        }
                        if (!inactive_44939) {
                            int64_t defunc_1_op_res_44934 = add64(x_44932,
                                                                  x_44933);
                            
                            x_44932 = defunc_1_op_res_44934;
                        }
                    }
                }
                if (sle32(wave_sizze_44927, skip_threads_44938)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44938, local_tid_44925 -
                          squot32(local_tid_44925, 32) * 32) &&
                    (squot32(local_tid_44925, 32) == 0 &&
                     ltid_in_bounds_44935)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_43891)[sext_i32_i64(local_tid_44925)] =
                            x_44932;
                        x_44933 = x_44932;
                    }
                }
                if (sle32(wave_sizze_44927, skip_threads_44938)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44938 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44925, 32) == 0 || !ltid_in_bounds_44935)) {
            // read operands
            {
                x_39804 = x_39803;
                x_39803 = ((__local
                            int64_t *) mem_43891)[sext_i32_i64(squot32(local_tid_44925,
                                                                       32)) -
                                                  1];
            }
            // perform operation
            {
                bool inactive_44940 =
                     slt64(srem64(sext_i32_i64(local_tid_44925), N_29115),
                           sext_i32_i64(local_tid_44925) -
                           sext_i32_i64(squot32(local_tid_44925, 32) * 32 - 1));
                
                if (inactive_44940) {
                    x_39803 = x_39804;
                }
                if (!inactive_44940) {
                    int64_t defunc_1_op_res_39805 = add64(x_39803, x_39804);
                    
                    x_39803 = defunc_1_op_res_39805;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_43891)[sext_i32_i64(local_tid_44925)] =
                    x_39803;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44925, 32) == 0) {
            ((__local int64_t *) mem_43891)[sext_i32_i64(local_tid_44925)] =
                x_39804;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_39815 = ((__local int64_t *) mem_43891)[i_29395];
    int32_t defunc_0_f_res_39816 = sext_i64_i32(last_res_39815);
    __local char *mem_43895;
    
    mem_43895 = (__local char *) mem_43895_backing_2;
    ((__local float *) mem_43895)[sext_i32_i64(local_tid_44925)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43897;
    
    mem_43897 = (__local char *) mem_43897_backing_3;
    ((__local int32_t *) mem_43897)[sext_i32_i64(local_tid_44925)] = 0;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_39715 = sext_i32_i64(ltid_pre_44929);
    int32_t phys_tid_39716 = local_tid_44925;
    float x_39821 = ((__local float *) mem_43893)[write_i_39715];
    int32_t index_primexp_41151 = sext_i64_i32(write_i_39715);
    bool isnan_res_39824;
    
    isnan_res_39824 = futrts_isnan32(x_39821);
    
    bool defunc_0_p_res_39825 = !isnan_res_39824;
    int64_t defunc_1_f_res_39826;
    
    if (defunc_0_p_res_39825) {
        int64_t x_39822 = ((__local int64_t *) mem_43891)[write_i_39715];
        int64_t defunc_1_f_res_t_res_39827 = sub64(x_39822, 1);
        
        defunc_1_f_res_39826 = defunc_1_f_res_t_res_39827;
    } else {
        defunc_1_f_res_39826 = -1;
    }
    if (sle64(0, defunc_1_f_res_39826) && slt64(defunc_1_f_res_39826,
                                                N_29115)) {
        ((__local int32_t *) mem_43897)[defunc_1_f_res_39826] =
            index_primexp_41151;
    }
    if (sle64(0, defunc_1_f_res_39826) && slt64(defunc_1_f_res_39826,
                                                N_29115)) {
        ((__local float *) mem_43895)[defunc_1_f_res_39826] = x_39821;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44925 == 0) {
        ((__global int32_t *) mem_43900)[gtid_39710] = defunc_0_f_res_39816;
    }
    ((__global float *) mem_43903)[gtid_39710 * N_29115 +
                                   sext_i32_i64(local_tid_44925)] = ((__local
                                                                      float *) mem_43895)[sext_i32_i64(local_tid_44925)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global int32_t *) mem_43906)[gtid_39710 * N_29115 +
                                     sext_i32_i64(local_tid_44925)] = ((__local
                                                                        int32_t *) mem_43897)[sext_i32_i64(local_tid_44925)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainzisegmap_intragroup_40057(__global int *global_failure,
                                            __local volatile
                                            int64_t *red_arr_mem_45033_backing_aligned_0,
                                            __local volatile
                                            int64_t *red_arr_mem_45029_backing_aligned_1,
                                            int64_t N_29115, int64_t N_29117,
                                            float hfrac_29122,
                                            int64_t i32_res_29129,
                                            int32_t k2p2_29131, __global
                                            unsigned char *images_mem_43123,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_43919,
                                            __global unsigned char *mem_43963,
                                            __global unsigned char *mem_43965,
                                            __global unsigned char *mem_43967)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45033_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45033_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45029_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45029_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45023;
    int32_t local_tid_45024;
    int64_t group_sizze_45027;
    int32_t wave_sizze_45026;
    int32_t group_tid_45025;
    
    global_tid_45023 = get_global_id(0);
    local_tid_45024 = get_local_id(0);
    group_sizze_45027 = get_local_size(0);
    wave_sizze_45026 = LOCKSTEP_WIDTH;
    group_tid_45025 = get_group_id(0);
    
    int32_t phys_tid_40057;
    
    phys_tid_40057 = group_tid_45025;
    
    int32_t ltid_pre_45028;
    
    ltid_pre_45028 = local_tid_45024;
    
    int64_t gtid_40050;
    
    gtid_40050 = sext_i32_i64(group_tid_45025);
    
    int32_t defunc_0_f_res_40134;
    int64_t gtid_40053 = sext_i32_i64(ltid_pre_45028);
    int32_t phys_tid_40054 = local_tid_45024;
    __local char *red_arr_mem_45029;
    
    red_arr_mem_45029 = (__local char *) red_arr_mem_45029_backing_0;
    
    float x_40138;
    
    x_40138 = ((__global float *) images_mem_43123)[gtid_40050 * N_29117 +
                                                    gtid_40053];
    
    bool isnan_res_40139;
    
    isnan_res_40139 = futrts_isnan32(x_40138);
    
    bool cond_40140 = !isnan_res_40139;
    int32_t defunc_0_f_res_40141 = btoi_bool_i32(cond_40140);
    
    ((__local int32_t *) red_arr_mem_45029)[gtid_40053] = defunc_0_f_res_40141;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45031;
    int32_t skip_waves_45032;
    
    skip_waves_45032 = 1;
    
    int32_t x_40135;
    int32_t x_40136;
    
    offset_45031 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45024, sext_i64_i32(i32_res_29129))) {
            x_40135 = ((__local
                        int32_t *) red_arr_mem_45029)[sext_i32_i64(local_tid_45024 +
                                                      offset_45031)];
        }
    }
    offset_45031 = 1;
    while (slt32(offset_45031, wave_sizze_45026)) {
        if (slt32(local_tid_45024 + offset_45031,
                  sext_i64_i32(i32_res_29129)) && ((local_tid_45024 -
                                                    squot32(local_tid_45024,
                                                            wave_sizze_45026) *
                                                    wave_sizze_45026) & (2 *
                                                                         offset_45031 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_40136 = ((volatile __local
                            int32_t *) red_arr_mem_45029)[sext_i32_i64(local_tid_45024 +
                                                          offset_45031)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_40137 = add32(x_40135, x_40136);
                
                x_40135 = defunc_1_op_res_40137;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_45029)[sext_i32_i64(local_tid_45024)] =
                    x_40135;
            }
        }
        offset_45031 *= 2;
    }
    while (slt32(skip_waves_45032, squot32(sext_i64_i32(i32_res_29129) +
                                           wave_sizze_45026 - 1,
                                           wave_sizze_45026))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45031 = skip_waves_45032 * wave_sizze_45026;
        if (slt32(local_tid_45024 + offset_45031,
                  sext_i64_i32(i32_res_29129)) && ((local_tid_45024 -
                                                    squot32(local_tid_45024,
                                                            wave_sizze_45026) *
                                                    wave_sizze_45026) == 0 &&
                                                   (squot32(local_tid_45024,
                                                            wave_sizze_45026) &
                                                    (2 * skip_waves_45032 -
                                                     1)) == 0)) {
            // read array element
            {
                x_40136 = ((__local
                            int32_t *) red_arr_mem_45029)[sext_i32_i64(local_tid_45024 +
                                                          offset_45031)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_40137 = add32(x_40135, x_40136);
                
                x_40135 = defunc_1_op_res_40137;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_45029)[sext_i32_i64(local_tid_45024)] =
                    x_40135;
            }
        }
        skip_waves_45032 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_40134 = ((__local int32_t *) red_arr_mem_45029)[0];
    
    float defunc_0_f_res_40142;
    int64_t gtid_40055 = sext_i32_i64(ltid_pre_45028);
    int32_t phys_tid_40056 = local_tid_45024;
    __local char *red_arr_mem_45033;
    
    red_arr_mem_45033 = (__local char *) red_arr_mem_45033_backing_1;
    
    int32_t index_primexp_41159;
    
    index_primexp_41159 = sext_i64_i32(gtid_40055);
    
    bool cond_40147 = slt32(index_primexp_41159, defunc_0_f_res_40134);
    float defunc_0_f_res_40148;
    
    if (cond_40147) {
        int64_t i_40149 = sext_i32_i64(index_primexp_41159);
        float defunc_0_f_res_t_res_40150 = ((__global
                                             float *) defunc_4_map_res_mem_43919)[gtid_40050 *
                                                                                  N_29115 +
                                                                                  i_40149];
        
        defunc_0_f_res_40148 = defunc_0_f_res_t_res_40150;
    } else {
        defunc_0_f_res_40148 = 0.0F;
    }
    
    float defunc_0_f_res_40151 = defunc_0_f_res_40148 * defunc_0_f_res_40148;
    
    ((__local float *) red_arr_mem_45033)[gtid_40055] = defunc_0_f_res_40151;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45035;
    int32_t skip_waves_45036;
    
    skip_waves_45036 = 1;
    
    float x_40143;
    float x_40144;
    
    offset_45035 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45024, sext_i64_i32(i32_res_29129))) {
            x_40143 = ((__local
                        float *) red_arr_mem_45033)[sext_i32_i64(local_tid_45024 +
                                                    offset_45035)];
        }
    }
    offset_45035 = 1;
    while (slt32(offset_45035, wave_sizze_45026)) {
        if (slt32(local_tid_45024 + offset_45035,
                  sext_i64_i32(i32_res_29129)) && ((local_tid_45024 -
                                                    squot32(local_tid_45024,
                                                            wave_sizze_45026) *
                                                    wave_sizze_45026) & (2 *
                                                                         offset_45035 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_40144 = ((volatile __local
                            float *) red_arr_mem_45033)[sext_i32_i64(local_tid_45024 +
                                                        offset_45035)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_40145 = x_40143 + x_40144;
                
                x_40143 = defunc_1_op_res_40145;
            }
            // write result of operation
            {
                ((volatile __local
                  float *) red_arr_mem_45033)[sext_i32_i64(local_tid_45024)] =
                    x_40143;
            }
        }
        offset_45035 *= 2;
    }
    while (slt32(skip_waves_45036, squot32(sext_i64_i32(i32_res_29129) +
                                           wave_sizze_45026 - 1,
                                           wave_sizze_45026))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45035 = skip_waves_45036 * wave_sizze_45026;
        if (slt32(local_tid_45024 + offset_45035,
                  sext_i64_i32(i32_res_29129)) && ((local_tid_45024 -
                                                    squot32(local_tid_45024,
                                                            wave_sizze_45026) *
                                                    wave_sizze_45026) == 0 &&
                                                   (squot32(local_tid_45024,
                                                            wave_sizze_45026) &
                                                    (2 * skip_waves_45036 -
                                                     1)) == 0)) {
            // read array element
            {
                x_40144 = ((__local
                            float *) red_arr_mem_45033)[sext_i32_i64(local_tid_45024 +
                                                        offset_45035)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_40145 = x_40143 + x_40144;
                
                x_40143 = defunc_1_op_res_40145;
            }
            // write result of operation
            {
                ((__local
                  float *) red_arr_mem_45033)[sext_i32_i64(local_tid_45024)] =
                    x_40143;
            }
        }
        skip_waves_45036 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_40142 = ((__local float *) red_arr_mem_45033)[0];
    
    int32_t r32_arg_40152 = sub32(defunc_0_f_res_40134, k2p2_29131);
    float i32_res_40153 = sitofp_i32_f32(r32_arg_40152);
    float sqrt_arg_40154 = defunc_0_f_res_40142 / i32_res_40153;
    float sqrt_res_40155;
    
    sqrt_res_40155 = futrts_sqrt32(sqrt_arg_40154);
    
    float i32_res_40156 = sitofp_i32_f32(defunc_0_f_res_40134);
    float t32_arg_40157 = hfrac_29122 * i32_res_40156;
    int32_t f32_res_40158 = fptosi_f32_i32(t32_arg_40157);
    
    if (local_tid_45024 == 0) {
        ((__global int32_t *) mem_43963)[gtid_40050] = f32_res_40158;
    }
    if (local_tid_45024 == 0) {
        ((__global int32_t *) mem_43965)[gtid_40050] = defunc_0_f_res_40134;
    }
    if (local_tid_45024 == 0) {
        ((__global float *) mem_43967)[gtid_40050] = sqrt_res_40155;
    }
    
  error_4:
    return;
}
__kernel void mainzisegmap_intragroup_40477(__global int *global_failure,
                                            __local volatile
                                            int64_t *red_arr_mem_45296_backing_aligned_0,
                                            __local volatile
                                            int64_t *red_arr_mem_45294_backing_aligned_1,
                                            __local volatile
                                            int64_t *red_arr_mem_45292_backing_aligned_2,
                                            __local volatile
                                            int64_t *mem_44026_backing_aligned_3,
                                            int64_t N_29115, int32_t n_29120,
                                            int64_t iota32_arg_29515, __global
                                            unsigned char *defunc_4_map_res_mem_43918,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_43919,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_43920,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43982,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43983,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43984,
                                            __global
                                            unsigned char *defunc_0_f_res_mem_44017,
                                            __global unsigned char *mem_44022,
                                            __global unsigned char *mem_44029,
                                            __global unsigned char *mem_44031)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45296_backing_3 =
                          (__local volatile
                           char *) red_arr_mem_45296_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45294_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45294_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45292_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45292_backing_aligned_2;
    __local volatile char *restrict mem_44026_backing_0 = (__local volatile
                                                           char *) mem_44026_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45275;
    int32_t local_tid_45276;
    int64_t group_sizze_45279;
    int32_t wave_sizze_45278;
    int32_t group_tid_45277;
    
    global_tid_45275 = get_global_id(0);
    local_tid_45276 = get_local_id(0);
    group_sizze_45279 = get_local_size(0);
    wave_sizze_45278 = LOCKSTEP_WIDTH;
    group_tid_45277 = get_group_id(0);
    
    int32_t phys_tid_40477;
    
    phys_tid_40477 = group_tid_45277;
    
    int32_t ltid_pre_45280;
    
    ltid_pre_45280 = local_tid_45276;
    
    int64_t gtid_40470;
    
    gtid_40470 = sext_i32_i64(group_tid_45277);
    
    int32_t x_40696;
    
    x_40696 = ((__global int32_t *) defunc_4_map_res_mem_43918)[gtid_40470];
    
    int32_t x_40697 = ((__global
                        int32_t *) defunc_3_map_res_mem_43983)[gtid_40470];
    float x_40698 = ((__global float *) defunc_3_map_res_mem_43984)[gtid_40470];
    int32_t x_40699 = ((__global
                        int32_t *) defunc_3_map_res_mem_43982)[gtid_40470];
    float x_40700 = ((__global float *) defunc_0_f_res_mem_44017)[gtid_40470];
    int32_t y_40703 = sub32(x_40696, x_40697);
    float i32_res_40704 = sitofp_i32_f32(x_40697);
    float sqrt_res_40705;
    
    sqrt_res_40705 = futrts_sqrt32(i32_res_40704);
    
    float y_40706 = x_40698 * sqrt_res_40705;
    __local char *mem_44026;
    
    mem_44026 = (__local char *) mem_44026_backing_0;
    
    int64_t gtid_40473 = sext_i32_i64(ltid_pre_45280);
    int32_t phys_tid_40474 = local_tid_45276;
    int32_t index_primexp_41172 = sext_i64_i32(gtid_40473);
    bool cond_40719 = sle32(y_40703, index_primexp_41172);
    float defunc_0_f_res_40720;
    
    if (cond_40719) {
        defunc_0_f_res_40720 = 0.0F;
    } else {
        bool cond_40721 = index_primexp_41172 == 0;
        float defunc_0_f_res_f_res_40722;
        
        if (cond_40721) {
            defunc_0_f_res_f_res_40722 = x_40700;
        } else {
            int32_t i_40723 = add32(x_40697, index_primexp_41172);
            int64_t i_40724 = sext_i32_i64(i_40723);
            float x_40725 = ((__global
                              float *) defunc_4_map_res_mem_43919)[gtid_40470 *
                                                                   N_29115 +
                                                                   i_40724];
            int32_t x_40726 = sub32(x_40697, x_40699);
            int32_t i_40727 = add32(x_40726, index_primexp_41172);
            int64_t i_40728 = sext_i32_i64(i_40727);
            float y_40729 = ((__global
                              float *) defunc_4_map_res_mem_43919)[gtid_40470 *
                                                                   N_29115 +
                                                                   i_40728];
            float defunc_0_f_res_f_res_f_res_40730 = x_40725 - y_40729;
            
            defunc_0_f_res_f_res_40722 = defunc_0_f_res_f_res_f_res_40730;
        }
        defunc_0_f_res_40720 = defunc_0_f_res_f_res_40722;
    }
    ((__local float *) mem_44026)[gtid_40473] = defunc_0_f_res_40720;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_45281;
    
    dims_flat_45281 = iota32_arg_29515;
    
    float x_40715;
    float x_40716;
    float x_45283;
    float x_45284;
    bool ltid_in_bounds_45286;
    
    ltid_in_bounds_45286 = slt64(sext_i32_i64(local_tid_45276),
                                 iota32_arg_29515);
    
    int32_t skip_threads_45287;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45286) {
            x_40716 = ((volatile __local
                        float *) mem_44026)[sext_i32_i64(local_tid_45276)];
            if ((local_tid_45276 - squot32(local_tid_45276, 32) * 32) == 0) {
                x_40715 = x_40716;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45287 = 1;
        while (slt32(skip_threads_45287, 32)) {
            if (sle32(skip_threads_45287, local_tid_45276 -
                      squot32(local_tid_45276, 32) * 32) &&
                ltid_in_bounds_45286) {
                // read operands
                {
                    x_40715 = ((volatile __local
                                float *) mem_44026)[sext_i32_i64(local_tid_45276) -
                                                    sext_i32_i64(skip_threads_45287)];
                }
                // perform operation
                {
                    bool inactive_45288 =
                         slt64(srem64(sext_i32_i64(local_tid_45276),
                                      iota32_arg_29515),
                               sext_i32_i64(local_tid_45276) -
                               sext_i32_i64(local_tid_45276 -
                               skip_threads_45287));
                    
                    if (inactive_45288) {
                        x_40715 = x_40716;
                    }
                    if (!inactive_45288) {
                        float defunc_1_op_res_40717 = x_40715 + x_40716;
                        
                        x_40715 = defunc_1_op_res_40717;
                    }
                }
            }
            if (sle32(wave_sizze_45278, skip_threads_45287)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45287, local_tid_45276 -
                      squot32(local_tid_45276, 32) * 32) &&
                ltid_in_bounds_45286) {
                // write result
                {
                    ((volatile __local
                      float *) mem_44026)[sext_i32_i64(local_tid_45276)] =
                        x_40715;
                    x_40716 = x_40715;
                }
            }
            if (sle32(wave_sizze_45278, skip_threads_45287)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45287 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45276 - squot32(local_tid_45276, 32) * 32) == 31 &&
            ltid_in_bounds_45286) {
            ((volatile __local
              float *) mem_44026)[sext_i32_i64(squot32(local_tid_45276, 32))] =
                x_40715;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45289;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45276, 32) == 0 && ltid_in_bounds_45286) {
                x_45284 = ((volatile __local
                            float *) mem_44026)[sext_i32_i64(local_tid_45276)];
                if ((local_tid_45276 - squot32(local_tid_45276, 32) * 32) ==
                    0) {
                    x_45283 = x_45284;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45289 = 1;
            while (slt32(skip_threads_45289, 32)) {
                if (sle32(skip_threads_45289, local_tid_45276 -
                          squot32(local_tid_45276, 32) * 32) &&
                    (squot32(local_tid_45276, 32) == 0 &&
                     ltid_in_bounds_45286)) {
                    // read operands
                    {
                        x_45283 = ((volatile __local
                                    float *) mem_44026)[sext_i32_i64(local_tid_45276) -
                                                        sext_i32_i64(skip_threads_45289)];
                    }
                    // perform operation
                    {
                        bool inactive_45290 =
                             slt64(srem64(sext_i32_i64(local_tid_45276 * 32 +
                                          32 - 1), iota32_arg_29515),
                                   sext_i32_i64(local_tid_45276 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_45276 -
                                                 skip_threads_45289) * 32 + 32 -
                                   1));
                        
                        if (inactive_45290) {
                            x_45283 = x_45284;
                        }
                        if (!inactive_45290) {
                            float defunc_1_op_res_45285 = x_45283 + x_45284;
                            
                            x_45283 = defunc_1_op_res_45285;
                        }
                    }
                }
                if (sle32(wave_sizze_45278, skip_threads_45289)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45289, local_tid_45276 -
                          squot32(local_tid_45276, 32) * 32) &&
                    (squot32(local_tid_45276, 32) == 0 &&
                     ltid_in_bounds_45286)) {
                    // write result
                    {
                        ((volatile __local
                          float *) mem_44026)[sext_i32_i64(local_tid_45276)] =
                            x_45283;
                        x_45284 = x_45283;
                    }
                }
                if (sle32(wave_sizze_45278, skip_threads_45289)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45289 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45276, 32) == 0 || !ltid_in_bounds_45286)) {
            // read operands
            {
                x_40716 = x_40715;
                x_40715 = ((__local
                            float *) mem_44026)[sext_i32_i64(squot32(local_tid_45276,
                                                                     32)) - 1];
            }
            // perform operation
            {
                bool inactive_45291 =
                     slt64(srem64(sext_i32_i64(local_tid_45276),
                                  iota32_arg_29515),
                           sext_i32_i64(local_tid_45276) -
                           sext_i32_i64(squot32(local_tid_45276, 32) * 32 - 1));
                
                if (inactive_45291) {
                    x_40715 = x_40716;
                }
                if (!inactive_45291) {
                    float defunc_1_op_res_40717 = x_40715 + x_40716;
                    
                    x_40715 = defunc_1_op_res_40717;
                }
            }
            // write final result
            {
                ((__local float *) mem_44026)[sext_i32_i64(local_tid_45276)] =
                    x_40715;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45276, 32) == 0) {
            ((__local float *) mem_44026)[sext_i32_i64(local_tid_45276)] =
                x_40716;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    bool acc0_40736;
    int32_t acc0_40737;
    float acc0_40738;
    int64_t gtid_40475 = sext_i32_i64(ltid_pre_45280);
    int32_t phys_tid_40476 = local_tid_45276;
    __local char *red_arr_mem_45292;
    
    red_arr_mem_45292 = (__local char *) red_arr_mem_45292_backing_1;
    
    __local char *red_arr_mem_45294;
    
    red_arr_mem_45294 = (__local char *) red_arr_mem_45294_backing_2;
    
    __local char *red_arr_mem_45296;
    
    red_arr_mem_45296 = (__local char *) red_arr_mem_45296_backing_3;
    
    float x_40753;
    
    x_40753 = ((__local float *) mem_44026)[gtid_40475];
    
    float x_40754 = ((__global float *) mem_44022)[gtid_40475];
    int32_t index_primexp_41175 = sext_i64_i32(gtid_40475);
    float defunc_0_f_res_40757 = x_40753 / y_40706;
    bool cond_40758 = slt32(index_primexp_41175, y_40703);
    bool isnan_res_40759;
    
    isnan_res_40759 = futrts_isnan32(defunc_0_f_res_40757);
    
    bool cond_t_res_40760 = !isnan_res_40759;
    bool x_40761 = cond_40758 && cond_t_res_40760;
    float abs_res_40762 = (float) fabs(defunc_0_f_res_40757);
    bool defunc_2_f_res_t_res_40763 = x_40754 < abs_res_40762;
    bool x_40764 = x_40761 && defunc_2_f_res_t_res_40763;
    float defunc_1_f_res_40765;
    
    if (cond_40758) {
        defunc_1_f_res_40765 = defunc_0_f_res_40757;
    } else {
        defunc_1_f_res_40765 = 0.0F;
    }
    ((__local bool *) red_arr_mem_45292)[gtid_40475] = x_40764;
    ((__local int32_t *) red_arr_mem_45294)[gtid_40475] = index_primexp_41175;
    ((__local float *) red_arr_mem_45296)[gtid_40475] = defunc_1_f_res_40765;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45298;
    int32_t skip_waves_45299;
    
    skip_waves_45299 = 1;
    
    bool x_40739;
    int32_t x_40740;
    float x_40741;
    bool x_40742;
    int32_t x_40743;
    float x_40744;
    
    offset_45298 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45276, sext_i64_i32(iota32_arg_29515))) {
            x_40739 = ((__local
                        bool *) red_arr_mem_45292)[sext_i32_i64(local_tid_45276 +
                                                   offset_45298)];
            x_40740 = ((__local
                        int32_t *) red_arr_mem_45294)[sext_i32_i64(local_tid_45276 +
                                                      offset_45298)];
            x_40741 = ((__local
                        float *) red_arr_mem_45296)[sext_i32_i64(local_tid_45276 +
                                                    offset_45298)];
        }
    }
    offset_45298 = 1;
    while (slt32(offset_45298, wave_sizze_45278)) {
        if (slt32(local_tid_45276 + offset_45298,
                  sext_i64_i32(iota32_arg_29515)) && ((local_tid_45276 -
                                                       squot32(local_tid_45276,
                                                               wave_sizze_45278) *
                                                       wave_sizze_45278) & (2 *
                                                                            offset_45298 -
                                                                            1)) ==
            0) {
            // read array element
            {
                x_40742 = ((volatile __local
                            bool *) red_arr_mem_45292)[sext_i32_i64(local_tid_45276 +
                                                       offset_45298)];
                x_40743 = ((volatile __local
                            int32_t *) red_arr_mem_45294)[sext_i32_i64(local_tid_45276 +
                                                          offset_45298)];
                x_40744 = ((volatile __local
                            float *) red_arr_mem_45296)[sext_i32_i64(local_tid_45276 +
                                                        offset_45298)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_40745;
                int32_t defunc_1_op_res_40746;
                
                if (x_40739) {
                    defunc_1_op_res_40745 = x_40739;
                    defunc_1_op_res_40746 = x_40740;
                } else {
                    bool x_40747 = x_40742 && x_40742;
                    bool x_40748 = !x_40742;
                    bool y_40749 = x_40739 && x_40748;
                    bool defunc_1_op_res_f_res_40750 = x_40747 || y_40749;
                    int32_t defunc_1_op_res_f_res_40751;
                    
                    if (x_40742) {
                        defunc_1_op_res_f_res_40751 = x_40743;
                    } else {
                        defunc_1_op_res_f_res_40751 = x_40740;
                    }
                    defunc_1_op_res_40745 = defunc_1_op_res_f_res_40750;
                    defunc_1_op_res_40746 = defunc_1_op_res_f_res_40751;
                }
                
                float defunc_1_op_res_40752 = x_40741 + x_40744;
                
                x_40739 = defunc_1_op_res_40745;
                x_40740 = defunc_1_op_res_40746;
                x_40741 = defunc_1_op_res_40752;
            }
            // write result of operation
            {
                ((volatile __local
                  bool *) red_arr_mem_45292)[sext_i32_i64(local_tid_45276)] =
                    x_40739;
                ((volatile __local
                  int32_t *) red_arr_mem_45294)[sext_i32_i64(local_tid_45276)] =
                    x_40740;
                ((volatile __local
                  float *) red_arr_mem_45296)[sext_i32_i64(local_tid_45276)] =
                    x_40741;
            }
        }
        offset_45298 *= 2;
    }
    while (slt32(skip_waves_45299, squot32(sext_i64_i32(iota32_arg_29515) +
                                           wave_sizze_45278 - 1,
                                           wave_sizze_45278))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45298 = skip_waves_45299 * wave_sizze_45278;
        if (slt32(local_tid_45276 + offset_45298,
                  sext_i64_i32(iota32_arg_29515)) && ((local_tid_45276 -
                                                       squot32(local_tid_45276,
                                                               wave_sizze_45278) *
                                                       wave_sizze_45278) == 0 &&
                                                      (squot32(local_tid_45276,
                                                               wave_sizze_45278) &
                                                       (2 * skip_waves_45299 -
                                                        1)) == 0)) {
            // read array element
            {
                x_40742 = ((__local
                            bool *) red_arr_mem_45292)[sext_i32_i64(local_tid_45276 +
                                                       offset_45298)];
                x_40743 = ((__local
                            int32_t *) red_arr_mem_45294)[sext_i32_i64(local_tid_45276 +
                                                          offset_45298)];
                x_40744 = ((__local
                            float *) red_arr_mem_45296)[sext_i32_i64(local_tid_45276 +
                                                        offset_45298)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_40745;
                int32_t defunc_1_op_res_40746;
                
                if (x_40739) {
                    defunc_1_op_res_40745 = x_40739;
                    defunc_1_op_res_40746 = x_40740;
                } else {
                    bool x_40747 = x_40742 && x_40742;
                    bool x_40748 = !x_40742;
                    bool y_40749 = x_40739 && x_40748;
                    bool defunc_1_op_res_f_res_40750 = x_40747 || y_40749;
                    int32_t defunc_1_op_res_f_res_40751;
                    
                    if (x_40742) {
                        defunc_1_op_res_f_res_40751 = x_40743;
                    } else {
                        defunc_1_op_res_f_res_40751 = x_40740;
                    }
                    defunc_1_op_res_40745 = defunc_1_op_res_f_res_40750;
                    defunc_1_op_res_40746 = defunc_1_op_res_f_res_40751;
                }
                
                float defunc_1_op_res_40752 = x_40741 + x_40744;
                
                x_40739 = defunc_1_op_res_40745;
                x_40740 = defunc_1_op_res_40746;
                x_40741 = defunc_1_op_res_40752;
            }
            // write result of operation
            {
                ((__local
                  bool *) red_arr_mem_45292)[sext_i32_i64(local_tid_45276)] =
                    x_40739;
                ((__local
                  int32_t *) red_arr_mem_45294)[sext_i32_i64(local_tid_45276)] =
                    x_40740;
                ((__local
                  float *) red_arr_mem_45296)[sext_i32_i64(local_tid_45276)] =
                    x_40741;
            }
        }
        skip_waves_45299 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    acc0_40736 = ((__local bool *) red_arr_mem_45292)[0];
    acc0_40737 = ((__local int32_t *) red_arr_mem_45294)[0];
    acc0_40738 = ((__local float *) red_arr_mem_45296)[0];
    
    bool x_40768 = acc0_40736 && acc0_40736;
    int32_t defunc_1_op_res_f_res_40772;
    
    if (acc0_40736) {
        defunc_1_op_res_f_res_40772 = acc0_40737;
    } else {
        defunc_1_op_res_f_res_40772 = -1;
    }
    
    bool cond_40778 = y_40703 == 0;
    float defunc_0_f_res_40779;
    
    if (cond_40778) {
        defunc_0_f_res_40779 = 0.0F;
    } else {
        float i32_res_40780 = sitofp_i32_f32(y_40703);
        float defunc_0_f_res_f_res_40781 = acc0_40738 / i32_res_40780;
        
        defunc_0_f_res_40779 = defunc_0_f_res_f_res_40781;
    }
    
    bool cond_40782 = !x_40768;
    int32_t fst_breakzq_40783;
    
    if (cond_40782) {
        fst_breakzq_40783 = -1;
    } else {
        bool cond_40784 = slt32(defunc_1_op_res_f_res_40772, y_40703);
        int32_t adjustValInds_res_40785;
        
        if (cond_40784) {
            int32_t i_40786 = add32(x_40697, defunc_1_op_res_f_res_40772);
            int64_t i_40787 = sext_i32_i64(i_40786);
            int32_t x_40788 = ((__global
                                int32_t *) defunc_4_map_res_mem_43920)[gtid_40470 *
                                                                       N_29115 +
                                                                       i_40787];
            int32_t adjustValInds_res_t_res_40789 = sub32(x_40788, n_29120);
            
            adjustValInds_res_40785 = adjustValInds_res_t_res_40789;
        } else {
            adjustValInds_res_40785 = -1;
        }
        fst_breakzq_40783 = adjustValInds_res_40785;
    }
    
    bool cond_40790 = sle32(x_40697, 5);
    bool cond_f_res_40791 = sle32(y_40703, 5);
    bool x_40792 = !cond_40790;
    bool y_40793 = cond_f_res_40791 && x_40792;
    bool cond_40794 = cond_40790 || y_40793;
    int32_t fst_breakzq_40795;
    
    if (cond_40794) {
        fst_breakzq_40795 = -2;
    } else {
        fst_breakzq_40795 = fst_breakzq_40783;
    }
    if (local_tid_45276 == 0) {
        ((__global int32_t *) mem_44029)[gtid_40470] = fst_breakzq_40795;
    }
    if (local_tid_45276 == 0) {
        ((__global float *) mem_44031)[gtid_40470] = defunc_0_f_res_40779;
    }
    
  error_3:
    return;
}
__kernel void mainzisegmap_intragroup_41294(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43222_backing_aligned_0,
                                            int64_t m_29116, int32_t n_29120,
                                            int64_t i32_res_29135,
                                            int64_t Ty_41282, int64_t Tx_41283,
                                            int64_t gridDim_x_41284,
                                            int64_t gridDim_y_41285,
                                            int64_t group_sizze_41289,
                                            int64_t count_shmem_41290, __global
                                            unsigned char *mem_43135, __global
                                            unsigned char *mem_43139, __global
                                            unsigned char *mem_43210, __global
                                            unsigned char *mem_43270)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43222_backing_0 = (__local volatile
                                                           char *) mem_43222_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44392;
    int32_t local_tid_44393;
    int64_t group_sizze_44396;
    int32_t wave_sizze_44395;
    int32_t group_tid_44394;
    
    global_tid_44392 = get_global_id(0);
    local_tid_44393 = get_local_id(0);
    group_sizze_44396 = get_local_size(0);
    wave_sizze_44395 = LOCKSTEP_WIDTH;
    group_tid_44394 = get_group_id(0);
    
    int32_t gid_flat_41294;
    
    gid_flat_41294 = group_tid_44394;
    
    int32_t ltid_pre_44397;
    
    ltid_pre_44397 = squot32(local_tid_44393, sext_i64_i32(Ty_41282) *
                             sext_i64_i32(Tx_41283));
    
    int32_t ltid_pre_44398;
    
    ltid_pre_44398 = squot32(local_tid_44393 - squot32(local_tid_44393,
                                                       sext_i64_i32(Ty_41282) *
                                                       sext_i64_i32(Tx_41283)) *
                             (sext_i64_i32(Ty_41282) * sext_i64_i32(Tx_41283)),
                             sext_i64_i32(Tx_41283));
    
    int32_t ltid_pre_44399;
    
    ltid_pre_44399 = local_tid_44393 - squot32(local_tid_44393,
                                               sext_i64_i32(Ty_41282) *
                                               sext_i64_i32(Tx_41283)) *
        (sext_i64_i32(Ty_41282) * sext_i64_i32(Tx_41283)) -
        squot32(local_tid_44393 - squot32(local_tid_44393,
                                          sext_i64_i32(Ty_41282) *
                                          sext_i64_i32(Tx_41283)) *
                (sext_i64_i32(Ty_41282) * sext_i64_i32(Tx_41283)),
                sext_i64_i32(Tx_41283)) * sext_i64_i32(Tx_41283);
    
    int32_t ltid_pre_44400;
    
    ltid_pre_44400 = squot32(local_tid_44393, sext_i64_i32(Tx_41283));
    
    int32_t ltid_pre_44401;
    
    ltid_pre_44401 = local_tid_44393 - squot32(local_tid_44393,
                                               sext_i64_i32(Tx_41283)) *
        sext_i64_i32(Tx_41283);
    
    int32_t ltid_pre_44402;
    
    ltid_pre_44402 = local_tid_44393;
    
    int64_t gid_zz_41293;
    
    gid_zz_41293 = squot64(sext_i32_i64(group_tid_44394), gridDim_y_41285 *
                           gridDim_x_41284);
    
    int64_t gid_y_41292;
    
    gid_y_41292 = squot64(sext_i32_i64(group_tid_44394) -
                          squot64(sext_i32_i64(group_tid_44394),
                                  gridDim_y_41285 * gridDim_x_41284) *
                          (gridDim_y_41285 * gridDim_x_41284), gridDim_x_41284);
    
    int64_t gid_x_41291;
    
    gid_x_41291 = sext_i32_i64(group_tid_44394) -
        squot64(sext_i32_i64(group_tid_44394), gridDim_y_41285 *
                gridDim_x_41284) * (gridDim_y_41285 * gridDim_x_41284) -
        squot64(sext_i32_i64(group_tid_44394) -
                squot64(sext_i32_i64(group_tid_44394), gridDim_y_41285 *
                        gridDim_x_41284) * (gridDim_y_41285 * gridDim_x_41284),
                gridDim_x_41284) * gridDim_x_41284;
    
    int64_t ii_41295;
    
    ii_41295 = 30 * gid_zz_41293;
    
    int64_t jj1_41296 = Ty_41282 * gid_y_41292;
    int64_t jj2_41297 = Tx_41283 * gid_x_41291;
    float mem_43220[30];
    int64_t ltid_y_41300 = sext_i32_i64(ltid_pre_44400);
    int64_t ltid_x_41298 = sext_i32_i64(ltid_pre_44401);
    int32_t ltid_flat_41299 = local_tid_44393;
    float mem_43214[30];
    
    for (int32_t i_43033 = 0; i_43033 < 30; i_43033++) {
        int64_t i_41308 = sext_i32_i64(i_43033);
        
        mem_43214[i_41308] = 0.0F;
    }
    for (int64_t i_44404 = 0; i_44404 < 30; i_44404++) {
        mem_43220[i_44404] = mem_43214[i_44404];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43222;
    
    mem_43222 = (__local char *) mem_43222_backing_0;
    
    float loop_mem_43252[30];
    float mem_param_43223[30];
    
    for (int32_t i_1 = 0; i_1 < 30; i_1++)
        mem_param_43223[i_1] = mem_43220[i_1];
    for (int32_t i_43035 = 0; i_43035 < n_29120; i_43035++) {
        int64_t i_41313 = sext_i32_i64(i_43035);
        
        for (int64_t i_41316 = 0; i_41316 < count_shmem_41290; i_41316++) {
            int64_t offs_41329 = group_sizze_41289 * i_41316;
            int64_t ltid_41319 = sext_i32_i64(ltid_pre_44402);
            int32_t ltid_flat_41318 = local_tid_44393;
            int64_t loc_ind_41330 = ltid_41319 + offs_41329;
            int64_t gtid_41331 = ii_41295 + loc_ind_41330;
            bool cond_41332 = slt64(gtid_41331, m_29116);
            float y_elem_41333;
            
            if (cond_41332) {
                float Y_elem_41335 = ((__global float *) mem_43210)[i_41313 *
                                                                    m_29116 +
                                                                    gtid_41331];
                
                y_elem_41333 = Y_elem_41335;
            } else {
                y_elem_41333 = 0.0F;
            }
            
            bool cond_41337 = slt64(loc_ind_41330, 30);
            int64_t y_loc_ind_41338;
            
            if (cond_41337) {
                y_loc_ind_41338 = loc_ind_41330;
            } else {
                y_loc_ind_41338 = -1;
            }
            if (sle64(0, y_loc_ind_41338) && slt64(y_loc_ind_41338, 30)) {
                ((__local float *) mem_43222)[y_loc_ind_41338] = y_elem_41333;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
        
        float mem_43251[30];
        int64_t ltid_y_41344 = sext_i32_i64(ltid_pre_44400);
        int64_t ltid_x_41342 = sext_i32_i64(ltid_pre_44401);
        int32_t ltid_flat_41343 = local_tid_44393;
        int64_t gtid_41371 = jj1_41296 + ltid_y_41344;
        int64_t gtid_41372 = jj2_41297 + ltid_x_41342;
        bool binop_x_41374 = slt64(gtid_41371, i32_res_29135);
        bool binop_y_41375 = slt64(gtid_41372, i32_res_29135);
        bool cond_41376 = binop_x_41374 && binop_y_41375;
        float mem_44124[30];
        
        if (cond_41376) {
            float x_41379 = ((__global float *) mem_43135)[i_41313 *
                                                           i32_res_29135 +
                                                           gtid_41371];
            float x_41381 = ((__global float *) mem_43139)[i_41313 *
                                                           i32_res_29135 +
                                                           gtid_41372];
            
            for (int32_t i_43034 = 0; i_43034 < 30; i_43034++) {
                int64_t i_41383 = sext_i32_i64(i_43034);
                int64_t gtid_41385 = ii_41295 + i_41383;
                bool cond_41386 = slt64(gtid_41385, m_29116);
                
                if (cond_41386) {
                    float inp_reg_var2zz_41388 = ((__local
                                                   float *) mem_43222)[i_41383];
                    float res_reg_var2zz_41389 = mem_param_43223[i_41383];
                    float x_41393 = x_41379 * x_41381;
                    bool isnan_res_41394;
                    
                    isnan_res_41394 = futrts_isnan32(inp_reg_var2zz_41388);
                    
                    float y_41395;
                    
                    if (isnan_res_41394) {
                        y_41395 = 0.0F;
                    } else {
                        y_41395 = 1.0F;
                    }
                    
                    float defunc_2_f_res_41396 = x_41393 * y_41395;
                    float defunc_1_op_res_41400 = res_reg_var2zz_41389 +
                          defunc_2_f_res_41396;
                    
                    mem_param_43223[i_41383] = defunc_1_op_res_41400;
                }
            }
            for (int64_t i_44410 = 0; i_44410 < 30; i_44410++) {
                mem_44124[i_44410] = mem_param_43223[i_44410];
            }
        } else {
            for (int64_t i_44411 = 0; i_44411 < 30; i_44411++) {
                mem_44124[i_44411] = mem_param_43223[i_44411];
            }
        }
        for (int64_t i_44412 = 0; i_44412 < 30; i_44412++) {
            mem_43251[i_44412] = mem_44124[i_44412];
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44405[30];
        
        for (int32_t i_2 = 0; i_2 < 30; i_2++)
            mem_param_tmp_44405[i_2] = mem_43251[i_2];
        for (int32_t i_3 = 0; i_3 < 30; i_3++)
            mem_param_43223[i_3] = mem_param_tmp_44405[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 30; i_4++)
        loop_mem_43252[i_4] = mem_param_43223[i_4];
    
    float mem_43266[30 * 1 * 1];
    int64_t ltid_zz_41409 = sext_i32_i64(ltid_pre_44397);
    int64_t ltid_y_41408 = sext_i32_i64(ltid_pre_44398);
    int64_t ltid_x_41406 = sext_i32_i64(ltid_pre_44399);
    int32_t ltid_flat_41407 = local_tid_44393;
    float mem_43260[30 * 1 * 1];
    
    for (int32_t i_43037 = 0; i_43037 < 30; i_43037++) {
        int64_t i_41418 = sext_i32_i64(i_43037);
        
        for (int64_t i_44414 = 0; i_44414 < 1; i_44414++) {
            mem_43260[i_41418 + i_44414] = loop_mem_43252[i_41418 + i_44414];
        }
    }
    for (int64_t i_44415 = 0; i_44415 < 30; i_44415++) {
        for (int64_t i_44416 = 0; i_44416 < 1; i_44416++) {
            for (int64_t i_44417 = 0; i_44417 < 1; i_44417++) {
                mem_43266[i_44415 + i_44416 + i_44417] = mem_43260[i_44415 +
                                                                   i_44416 +
                                                                   i_44417];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t reg_tile_i_44418 = squot64(sext_i32_i64(local_tid_44393), Ty_41282 *
                                       Tx_41283);
    int64_t reg_tile_i_44419 = squot64(sext_i32_i64(local_tid_44393) -
                                       squot64(sext_i32_i64(local_tid_44393),
                                               Ty_41282 * Tx_41283) *
                                       (Ty_41282 * Tx_41283), Tx_41283);
    int64_t reg_tile_i_44420 = sext_i32_i64(local_tid_44393) -
            squot64(sext_i32_i64(local_tid_44393), Ty_41282 * Tx_41283) *
            (Ty_41282 * Tx_41283) - squot64(sext_i32_i64(local_tid_44393) -
                                            squot64(sext_i32_i64(local_tid_44393),
                                                    Ty_41282 * Tx_41283) *
                                            (Ty_41282 * Tx_41283), Tx_41283) *
            Tx_41283;
    int64_t tile_dim_start_44421 = 30 * (gid_zz_41293 + reg_tile_i_44418);
    int64_t tile_dim_start_44422 = Ty_41282 * gid_y_41292 + reg_tile_i_44419;
    int64_t tile_dim_start_44423 = Tx_41283 * gid_x_41291 + reg_tile_i_44420;
    
    for (int64_t nest_i_44424 = 0; nest_i_44424 < 30; nest_i_44424++) {
        for (int64_t nest_i_44425 = 0; nest_i_44425 < 1; nest_i_44425++) {
            for (int64_t nest_i_44426 = 0; nest_i_44426 < 1; nest_i_44426++) {
                if ((slt64(tile_dim_start_44421 + nest_i_44424, m_29116) &&
                     slt64(tile_dim_start_44422 + nest_i_44425,
                           i32_res_29135)) && slt64(tile_dim_start_44423 +
                                                    nest_i_44426,
                                                    i32_res_29135)) {
                    ((__global float *) mem_43270)[(tile_dim_start_44421 +
                                                    nest_i_44424) *
                                                   (i32_res_29135 *
                                                    i32_res_29135) +
                                                   (tile_dim_start_44422 +
                                                    nest_i_44425) *
                                                   i32_res_29135 +
                                                   (tile_dim_start_44423 +
                                                    nest_i_44426)] =
                        mem_43266[nest_i_44424 + nest_i_44425 + nest_i_44426];
                }
            }
        }
    }
    
  error_4:
    return;
}
__kernel void mainzisegmap_intragroup_41447(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43409_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43407_backing_aligned_1,
                                            int64_t m_29116, int64_t N_29117,
                                            int64_t i32_res_29129,
                                            int64_t i32_res_29135,
                                            int64_t gridDim_x_41441,
                                            int64_t full_tiles_41472,
                                            int64_t kk_41679, __global
                                            unsigned char *images_mem_43123,
                                            __global unsigned char *mem_43135,
                                            __global unsigned char *mem_43581)
{
    #define Ty_41428 (mainziTy_41425)
    #define Ry_41429 (mainziRy_41427)
    #define Tx_41430 (mainziTx_41424)
    #define Rx_41431 (mainziRx_41426)
    #define Tk_41432 (mainziTk_41423)
    #define tk_div_tx_41433 (sdiv_up64(mainziTk_41423, mainziTx_41424))
    #define tk_div_ty_41434 (sdiv_up64(mainziTk_41423, mainziTy_41425))
    #define TxRx_41435 (mainziTx_41424 * mainziRx_41426)
    #define TyRy_41436 (mainziTy_41425 * mainziRy_41427)
    #define a_loc_szz_41438 (mainziTk_41423 * (mainziTy_41425 * mainziRy_41427))
    #define b_loc_szz_41440 (mainziRx_41426 * (mainziTx_41424 * mainziTk_41423))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43409_backing_1 = (__local volatile
                                                           char *) mem_43409_backing_aligned_0;
    __local volatile char *restrict mem_43407_backing_0 = (__local volatile
                                                           char *) mem_43407_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44566;
    int32_t local_tid_44567;
    int64_t group_sizze_44570;
    int32_t wave_sizze_44569;
    int32_t group_tid_44568;
    
    global_tid_44566 = get_global_id(0);
    local_tid_44567 = get_local_id(0);
    group_sizze_44570 = get_local_size(0);
    wave_sizze_44569 = LOCKSTEP_WIDTH;
    group_tid_44568 = get_group_id(0);
    
    int32_t gid_flat_41447;
    
    gid_flat_41447 = group_tid_44568;
    
    int32_t ltid_pre_44571;
    
    ltid_pre_44571 = squot32(local_tid_44567, sext_i64_i32(Tx_41430));
    
    int32_t ltid_pre_44572;
    
    ltid_pre_44572 = local_tid_44567 - squot32(local_tid_44567,
                                               sext_i64_i32(Tx_41430)) *
        sext_i64_i32(Tx_41430);
    
    int64_t gid_y_41446;
    
    gid_y_41446 = squot64(sext_i32_i64(group_tid_44568), gridDim_x_41441);
    
    int64_t gid_x_41445;
    
    gid_x_41445 = sext_i32_i64(group_tid_44568) -
        squot64(sext_i32_i64(group_tid_44568), gridDim_x_41441) *
        gridDim_x_41441;
    
    int64_t iii_41448;
    
    iii_41448 = TyRy_41436 * gid_y_41446;
    
    int64_t jjj_41449 = TxRx_41435 * gid_x_41445;
    float mem_43405[Ry_41429 * Rx_41431];
    int64_t ltid_y_41452 = sext_i32_i64(ltid_pre_44571);
    int64_t ltid_x_41450 = sext_i32_i64(ltid_pre_44572);
    int32_t ltid_flat_41451 = local_tid_44567;
    float mem_43396[Ry_41429 * Rx_41431];
    
    for (int64_t i_41463 = 0; i_41463 < Ry_41429; i_41463++) {
        for (int64_t i_41466 = 0; i_41466 < Rx_41431; i_41466++) {
            mem_43396[i_41463 * Rx_41431 + i_41466] = 0.0F;
        }
    }
    for (int64_t i_44575 = 0; i_44575 < Ry_41429; i_44575++) {
        for (int64_t i_44576 = 0; i_44576 < Rx_41431; i_44576++) {
            mem_43405[i_44575 * Rx_41431 + i_44576] = mem_43396[i_44575 *
                                                                Rx_41431 +
                                                                i_44576];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43407;
    
    mem_43407 = (__local char *) mem_43407_backing_0;
    
    __local char *mem_43409;
    
    mem_43409 = (__local char *) mem_43409_backing_1;
    
    float mem_43480[Ry_41429];
    float mem_43484[Rx_41431];
    float loop_mem_43496[Ry_41429 * Rx_41431];
    float mem_param_43410[Ry_41429 * Rx_41431];
    
    for (int32_t i_2 = 0; i_2 < Ry_41429 * Rx_41431; i_2++)
        mem_param_43410[i_2] = mem_43405[i_2];
    for (int64_t i_41473 = 0; i_41473 < full_tiles_41472; i_41473++) {
        int64_t kk_41477 = Tk_41432 * i_41473;
        
        for (int64_t i_41478 = 0; i_41478 < Ry_41429; i_41478++) {
            int64_t binop_y_41501 = Ty_41428 * i_41478;
            
            for (int64_t i_41480 = 0; i_41480 < tk_div_tx_41433; i_41480++) {
                int64_t binop_y_41499 = Tx_41430 * i_41480;
                int64_t ltid_x_41482 = sext_i32_i64(ltid_pre_44571);
                int64_t ltid_y_41483 = sext_i32_i64(ltid_pre_44572);
                int32_t ltid_flat_41484 = local_tid_44567;
                int64_t k_41500 = ltid_y_41483 + binop_y_41499;
                int64_t i_41502 = ltid_x_41482 + binop_y_41501;
                int64_t gtid_41503 = iii_41448 + i_41502;
                int64_t A_col_idx_41504 = kk_41477 + k_41500;
                bool cond_41505 = slt64(gtid_41503, m_29116);
                float A_elem_41506;
                
                if (cond_41505) {
                    float A_elem_41508 = ((__global
                                           float *) images_mem_43123)[gtid_41503 *
                                                                      N_29117 +
                                                                      A_col_idx_41504];
                    
                    A_elem_41506 = A_elem_41508;
                } else {
                    A_elem_41506 = 0.0F;
                }
                
                bool cond_41510 = slt64(k_41500, Tk_41432);
                int64_t a_loc_ind_41511;
                
                if (cond_41510) {
                    int64_t binop_y_41512 = Tk_41432 * i_41502;
                    int64_t loc_fi_41513 = k_41500 + binop_y_41512;
                    
                    a_loc_ind_41511 = loc_fi_41513;
                } else {
                    a_loc_ind_41511 = -1;
                }
                if (sle64(0, a_loc_ind_41511) && slt64(a_loc_ind_41511,
                                                       a_loc_szz_41438)) {
                    ((__local float *) mem_43407)[a_loc_ind_41511] =
                        A_elem_41506;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_41518 = 0; i_41518 < tk_div_ty_41434; i_41518++) {
            int64_t binop_y_41539 = Ty_41428 * i_41518;
            
            for (int64_t i_41520 = 0; i_41520 < Rx_41431; i_41520++) {
                int64_t binop_y_41541 = Tx_41430 * i_41520;
                int64_t ltid_x_41522 = sext_i32_i64(ltid_pre_44571);
                int64_t ltid_y_41523 = sext_i32_i64(ltid_pre_44572);
                int32_t ltid_flat_41524 = local_tid_44567;
                int64_t k_41540 = ltid_x_41522 + binop_y_41539;
                int64_t j_41542 = ltid_y_41523 + binop_y_41541;
                int64_t gtid_41543 = jjj_41449 + j_41542;
                int64_t B_row_idx_41544 = kk_41477 + k_41540;
                bool cond_41545 = slt64(gtid_41543, i32_res_29135);
                float B_elem_41546;
                
                if (cond_41545) {
                    float B_elem_41548 = ((__global
                                           float *) mem_43135)[B_row_idx_41544 *
                                                               i32_res_29135 +
                                                               gtid_41543];
                    
                    B_elem_41546 = B_elem_41548;
                } else {
                    B_elem_41546 = 0.0F;
                }
                
                bool cond_41550 = slt64(k_41540, Tk_41432);
                int64_t b_loc_ind_41551;
                
                if (cond_41550) {
                    int64_t binop_y_41552 = TxRx_41435 * k_41540;
                    int64_t loc_fi_41553 = j_41542 + binop_y_41552;
                    
                    b_loc_ind_41551 = loc_fi_41553;
                } else {
                    b_loc_ind_41551 = -1;
                }
                if (sle64(0, b_loc_ind_41551) && slt64(b_loc_ind_41551,
                                                       b_loc_szz_41440)) {
                    ((__local float *) mem_43409)[b_loc_ind_41551] =
                        B_elem_41546;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_43495[Ry_41429 * Rx_41431];
        float mem_param_43467[Ry_41429 * Rx_41431];
        
        for (int32_t i_3 = 0; i_3 < Ry_41429 * Rx_41431; i_3++)
            mem_param_43467[i_3] = mem_param_43410[i_3];
        for (int64_t i_41558 = 0; i_41558 < Tk_41432; i_41558++) {
            int64_t binop_y_41597 = TxRx_41435 * i_41558;
            int64_t ltid_y_41562 = sext_i32_i64(ltid_pre_44571);
            int64_t ltid_x_41560 = sext_i32_i64(ltid_pre_44572);
            int32_t ltid_flat_41561 = local_tid_44567;
            float mem_43470[Ry_41429];
            float mem_43472[Rx_41431];
            int64_t binop_x_41588 = Ry_41429 * ltid_y_41562;
            
            for (int64_t i_41586 = 0; i_41586 < Ry_41429; i_41586++) {
                int64_t binop_x_41589 = i_41586 + binop_x_41588;
                int64_t binop_y_41590 = Tk_41432 * binop_x_41589;
                int64_t a_loc_ind_41591 = i_41558 + binop_y_41590;
                
                for (int64_t i_44588 = 0; i_44588 < 1; i_44588++) {
                    mem_43470[i_41586 + i_44588] = ((__local
                                                     float *) mem_43407)[a_loc_ind_41591 +
                                                                         i_44588];
                }
            }
            
            int64_t binop_y_41599 = Rx_41431 * ltid_x_41560;
            
            for (int64_t i_41595 = 0; i_41595 < Rx_41431; i_41595++) {
                int64_t binop_x_41598 = i_41595 + binop_y_41597;
                int64_t b_loc_ind_41600 = binop_x_41598 + binop_y_41599;
                
                for (int64_t i_44590 = 0; i_44590 < 1; i_44590++) {
                    mem_43472[i_41595 + i_44590] = ((__local
                                                     float *) mem_43409)[b_loc_ind_41600 +
                                                                         i_44590];
                }
            }
            for (int64_t i_44591 = 0; i_44591 < Ry_41429; i_44591++) {
                mem_43480[i_44591] = mem_43470[i_44591];
            }
            for (int64_t i_44592 = 0; i_44592 < Rx_41431; i_44592++) {
                mem_43484[i_44592] = mem_43472[i_44592];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_43494[Ry_41429 * Rx_41431];
            int64_t ltid_y_41607 = sext_i32_i64(ltid_pre_44571);
            int64_t ltid_x_41605 = sext_i32_i64(ltid_pre_44572);
            int32_t ltid_flat_41606 = local_tid_44567;
            int64_t binop_y_41650 = Ry_41429 * ltid_y_41607;
            int64_t binop_y_41654 = Rx_41431 * ltid_x_41605;
            
            for (int64_t i_41644 = 0; i_41644 < Ry_41429; i_41644++) {
                int64_t binop_x_41649 = iii_41448 + i_41644;
                int64_t cmpop_x_41651 = binop_x_41649 + binop_y_41650;
                bool binop_x_41652 = slt64(cmpop_x_41651, m_29116);
                
                for (int64_t i_41647 = 0; i_41647 < Rx_41431; i_41647++) {
                    int64_t binop_x_41653 = jjj_41449 + i_41647;
                    int64_t cmpop_x_41655 = binop_x_41653 + binop_y_41654;
                    bool binop_y_41656 = slt64(cmpop_x_41655, i32_res_29135);
                    bool cond_41657 = binop_x_41652 && binop_y_41656;
                    
                    if (cond_41657) {
                        float a_41659 = mem_43480[i_41644];
                        float c_41661 = mem_param_43467[i_41644 * Rx_41431 +
                                                        i_41647];
                        bool isnan_res_41664;
                        
                        isnan_res_41664 = futrts_isnan32(a_41659);
                        
                        float defunc_1_f_res_41665;
                        
                        if (isnan_res_41664) {
                            defunc_1_f_res_41665 = 0.0F;
                        } else {
                            float b_41660 = mem_43484[i_41647];
                            float defunc_1_f_res_f_res_41666 = a_41659 *
                                  b_41660;
                            
                            defunc_1_f_res_41665 = defunc_1_f_res_f_res_41666;
                        }
                        
                        float defunc_1_op_res_41670 = c_41661 +
                              defunc_1_f_res_41665;
                        
                        mem_param_43467[i_41644 * Rx_41431 + i_41647] =
                            defunc_1_op_res_41670;
                    }
                }
            }
            for (int64_t i_44595 = 0; i_44595 < Ry_41429; i_44595++) {
                for (int64_t i_44596 = 0; i_44596 < Rx_41431; i_44596++) {
                    mem_43494[i_44595 * Rx_41431 + i_44596] =
                        mem_param_43467[i_44595 * Rx_41431 + i_44596];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44585[Ry_41429 * Rx_41431];
            
            for (int32_t i_4 = 0; i_4 < Ry_41429 * Rx_41431; i_4++)
                mem_param_tmp_44585[i_4] = mem_43494[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_41429 * Rx_41431; i_5++)
                mem_param_43467[i_5] = mem_param_tmp_44585[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_41429 * Rx_41431; i_6++)
            loop_mem_43495[i_6] = mem_param_43467[i_6];
        
        float mem_param_tmp_44577[Ry_41429 * Rx_41431];
        
        for (int32_t i_7 = 0; i_7 < Ry_41429 * Rx_41431; i_7++)
            mem_param_tmp_44577[i_7] = loop_mem_43495[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_41429 * Rx_41431; i_8++)
            mem_param_43410[i_8] = mem_param_tmp_44577[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_41429 * Rx_41431; i_9++)
        loop_mem_43496[i_9] = mem_param_43410[i_9];
    for (int64_t i_41680 = 0; i_41680 < Ry_41429; i_41680++) {
        int64_t binop_y_41705 = Ty_41428 * i_41680;
        
        for (int64_t i_41682 = 0; i_41682 < tk_div_tx_41433; i_41682++) {
            int64_t binop_y_41703 = Tx_41430 * i_41682;
            int64_t ltid_x_41684 = sext_i32_i64(ltid_pre_44571);
            int64_t ltid_y_41685 = sext_i32_i64(ltid_pre_44572);
            int32_t ltid_flat_41686 = local_tid_44567;
            int64_t k_41704 = ltid_y_41685 + binop_y_41703;
            int64_t i_41706 = ltid_x_41684 + binop_y_41705;
            int64_t gtid_41707 = iii_41448 + i_41706;
            int64_t A_col_idx_41708 = kk_41679 + k_41704;
            bool binop_x_41709 = slt64(gtid_41707, m_29116);
            bool binop_y_41710 = slt64(A_col_idx_41708, i32_res_29129);
            bool cond_41711 = binop_x_41709 && binop_y_41710;
            float A_elem_41712;
            
            if (cond_41711) {
                float A_elem_41714 = ((__global
                                       float *) images_mem_43123)[gtid_41707 *
                                                                  N_29117 +
                                                                  A_col_idx_41708];
                
                A_elem_41712 = A_elem_41714;
            } else {
                A_elem_41712 = 0.0F;
            }
            
            bool cond_41716 = slt64(k_41704, Tk_41432);
            int64_t a_loc_ind_41717;
            
            if (cond_41716) {
                int64_t binop_y_41718 = Tk_41432 * i_41706;
                int64_t loc_fi_41719 = k_41704 + binop_y_41718;
                
                a_loc_ind_41717 = loc_fi_41719;
            } else {
                a_loc_ind_41717 = -1;
            }
            if (sle64(0, a_loc_ind_41717) && slt64(a_loc_ind_41717,
                                                   a_loc_szz_41438)) {
                ((__local float *) mem_43407)[a_loc_ind_41717] = A_elem_41712;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_41724 = 0; i_41724 < tk_div_ty_41434; i_41724++) {
        int64_t binop_y_41747 = Ty_41428 * i_41724;
        
        for (int64_t i_41726 = 0; i_41726 < Rx_41431; i_41726++) {
            int64_t binop_y_41749 = Tx_41430 * i_41726;
            int64_t ltid_x_41728 = sext_i32_i64(ltid_pre_44571);
            int64_t ltid_y_41729 = sext_i32_i64(ltid_pre_44572);
            int32_t ltid_flat_41730 = local_tid_44567;
            int64_t k_41748 = ltid_x_41728 + binop_y_41747;
            int64_t j_41750 = ltid_y_41729 + binop_y_41749;
            int64_t gtid_41751 = jjj_41449 + j_41750;
            int64_t B_row_idx_41752 = kk_41679 + k_41748;
            bool binop_x_41753 = slt64(gtid_41751, i32_res_29135);
            bool binop_y_41754 = slt64(B_row_idx_41752, i32_res_29129);
            bool cond_41755 = binop_x_41753 && binop_y_41754;
            float B_elem_41756;
            
            if (cond_41755) {
                float B_elem_41758 = ((__global
                                       float *) mem_43135)[B_row_idx_41752 *
                                                           i32_res_29135 +
                                                           gtid_41751];
                
                B_elem_41756 = B_elem_41758;
            } else {
                B_elem_41756 = 0.0F;
            }
            
            bool cond_41760 = slt64(k_41748, Tk_41432);
            int64_t b_loc_ind_41761;
            
            if (cond_41760) {
                int64_t binop_y_41762 = TxRx_41435 * k_41748;
                int64_t loc_fi_41763 = j_41750 + binop_y_41762;
                
                b_loc_ind_41761 = loc_fi_41763;
            } else {
                b_loc_ind_41761 = -1;
            }
            if (sle64(0, b_loc_ind_41761) && slt64(b_loc_ind_41761,
                                                   b_loc_szz_41440)) {
                ((__local float *) mem_43409)[b_loc_ind_41761] = B_elem_41756;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_43562[Ry_41429];
    float mem_43566[Rx_41431];
    float mem_43576[Ry_41429 * Rx_41431];
    float loop_mem_43578[Ry_41429 * Rx_41431];
    float mem_param_43549[Ry_41429 * Rx_41431];
    
    for (int32_t i_10 = 0; i_10 < Ry_41429 * Rx_41431; i_10++)
        mem_param_43549[i_10] = loop_mem_43496[i_10];
    for (int64_t i_41768 = 0; i_41768 < Tk_41432; i_41768++) {
        int64_t cmpop_x_41770 = kk_41679 + i_41768;
        bool cond_41771 = slt64(cmpop_x_41770, i32_res_29129);
        float mem_44142[Ry_41429 * Rx_41431];
        
        if (cond_41771) {
            int64_t binop_y_41809 = TxRx_41435 * i_41768;
            int64_t bytes_43551 = 4 * Ry_41429;
            int64_t bytes_43553 = 4 * Rx_41431;
            int64_t ltid_y_41774 = sext_i32_i64(ltid_pre_44571);
            int64_t ltid_x_41772 = sext_i32_i64(ltid_pre_44572);
            int32_t ltid_flat_41773 = local_tid_44567;
            float mem_43552[Ry_41429];
            float mem_43554[Rx_41431];
            int64_t binop_x_41800 = Ry_41429 * ltid_y_41774;
            
            for (int64_t i_41798 = 0; i_41798 < Ry_41429; i_41798++) {
                int64_t binop_x_41801 = i_41798 + binop_x_41800;
                int64_t binop_y_41802 = Tk_41432 * binop_x_41801;
                int64_t a_loc_ind_41803 = i_41768 + binop_y_41802;
                
                for (int64_t i_44604 = 0; i_44604 < 1; i_44604++) {
                    mem_43552[i_41798 + i_44604] = ((__local
                                                     float *) mem_43407)[a_loc_ind_41803 +
                                                                         i_44604];
                }
            }
            
            int64_t binop_y_41811 = Rx_41431 * ltid_x_41772;
            
            for (int64_t i_41807 = 0; i_41807 < Rx_41431; i_41807++) {
                int64_t binop_x_41810 = i_41807 + binop_y_41809;
                int64_t b_loc_ind_41812 = binop_x_41810 + binop_y_41811;
                
                for (int64_t i_44606 = 0; i_44606 < 1; i_44606++) {
                    mem_43554[i_41807 + i_44606] = ((__local
                                                     float *) mem_43409)[b_loc_ind_41812 +
                                                                         i_44606];
                }
            }
            for (int64_t i_44607 = 0; i_44607 < Ry_41429; i_44607++) {
                mem_43562[i_44607] = mem_43552[i_44607];
            }
            for (int64_t i_44608 = 0; i_44608 < Rx_41431; i_44608++) {
                mem_43566[i_44608] = mem_43554[i_44608];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_41819 = sext_i32_i64(ltid_pre_44571);
            int64_t ltid_x_41817 = sext_i32_i64(ltid_pre_44572);
            int32_t ltid_flat_41818 = local_tid_44567;
            int64_t binop_y_41862 = Ry_41429 * ltid_y_41819;
            int64_t binop_y_41866 = Rx_41431 * ltid_x_41817;
            
            for (int64_t i_41856 = 0; i_41856 < Ry_41429; i_41856++) {
                int64_t binop_x_41861 = iii_41448 + i_41856;
                int64_t cmpop_x_41863 = binop_x_41861 + binop_y_41862;
                bool binop_x_41864 = slt64(cmpop_x_41863, m_29116);
                
                for (int64_t i_41859 = 0; i_41859 < Rx_41431; i_41859++) {
                    int64_t binop_x_41865 = jjj_41449 + i_41859;
                    int64_t cmpop_x_41867 = binop_x_41865 + binop_y_41866;
                    bool binop_y_41868 = slt64(cmpop_x_41867, i32_res_29135);
                    bool cond_41869 = binop_x_41864 && binop_y_41868;
                    
                    if (cond_41869) {
                        float a_41871 = mem_43562[i_41856];
                        float c_41873 = mem_param_43549[i_41856 * Rx_41431 +
                                                        i_41859];
                        bool isnan_res_41876;
                        
                        isnan_res_41876 = futrts_isnan32(a_41871);
                        
                        float defunc_1_f_res_41877;
                        
                        if (isnan_res_41876) {
                            defunc_1_f_res_41877 = 0.0F;
                        } else {
                            float b_41872 = mem_43566[i_41859];
                            float defunc_1_f_res_f_res_41878 = a_41871 *
                                  b_41872;
                            
                            defunc_1_f_res_41877 = defunc_1_f_res_f_res_41878;
                        }
                        
                        float defunc_1_op_res_41882 = c_41873 +
                              defunc_1_f_res_41877;
                        
                        mem_param_43549[i_41856 * Rx_41431 + i_41859] =
                            defunc_1_op_res_41882;
                    }
                }
            }
            for (int64_t i_44611 = 0; i_44611 < Ry_41429; i_44611++) {
                for (int64_t i_44612 = 0; i_44612 < Rx_41431; i_44612++) {
                    mem_43576[i_44611 * Rx_41431 + i_44612] =
                        mem_param_43549[i_44611 * Rx_41431 + i_44612];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44613 = 0; i_44613 < Ry_41429; i_44613++) {
                for (int64_t i_44614 = 0; i_44614 < Rx_41431; i_44614++) {
                    mem_44142[i_44613 * Rx_41431 + i_44614] =
                        mem_43576[i_44613 * Rx_41431 + i_44614];
                }
            }
        } else {
            for (int64_t i_44615 = 0; i_44615 < Ry_41429; i_44615++) {
                for (int64_t i_44616 = 0; i_44616 < Rx_41431; i_44616++) {
                    mem_44142[i_44615 * Rx_41431 + i_44616] =
                        mem_param_43549[i_44615 * Rx_41431 + i_44616];
                }
            }
        }
        
        float mem_param_tmp_44601[Ry_41429 * Rx_41431];
        
        for (int32_t i_11 = 0; i_11 < Ry_41429 * Rx_41431; i_11++)
            mem_param_tmp_44601[i_11] = mem_44142[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_41429 * Rx_41431; i_12++)
            mem_param_43549[i_12] = mem_param_tmp_44601[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_41429 * Rx_41431; i_13++)
        loop_mem_43578[i_13] = mem_param_43549[i_13];
    
    int64_t reg_tile_i_44617 = squot64(sext_i32_i64(local_tid_44567), Tx_41430);
    int64_t reg_tile_i_44618 = sext_i32_i64(local_tid_44567) -
            squot64(sext_i32_i64(local_tid_44567), Tx_41430) * Tx_41430;
    int64_t tile_dim_start_44619 = Ry_41429 * (Ty_41428 * gid_y_41446 +
                                               reg_tile_i_44617);
    int64_t tile_dim_start_44620 = Rx_41431 * (Tx_41430 * gid_x_41445 +
                                               reg_tile_i_44618);
    
    for (int64_t nest_i_44621 = 0; nest_i_44621 < Ry_41429; nest_i_44621++) {
        for (int64_t nest_i_44622 = 0; nest_i_44622 < Rx_41431;
             nest_i_44622++) {
            if (slt64(tile_dim_start_44619 + nest_i_44621, m_29116) &&
                slt64(tile_dim_start_44620 + nest_i_44622, i32_res_29135)) {
                ((__global float *) mem_43581)[(tile_dim_start_44619 +
                                                nest_i_44621) * i32_res_29135 +
                                               (tile_dim_start_44620 +
                                                nest_i_44622)] =
                    loop_mem_43578[nest_i_44621 * Rx_41431 + nest_i_44622];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_41428
    #undef Ry_41429
    #undef Tx_41430
    #undef Rx_41431
    #undef Tk_41432
    #undef tk_div_tx_41433
    #undef tk_div_ty_41434
    #undef TxRx_41435
    #undef TyRy_41436
    #undef a_loc_szz_41438
    #undef b_loc_szz_41440
}
__kernel void mainzisegmap_intragroup_41896(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43639_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43630_backing_aligned_1,
                                            int64_t m_29116,
                                            int64_t i32_res_29135,
                                            int64_t num_groups_y_41894,
                                            int64_t num_whole_tiles_41912,
                                            int64_t residual_input_42039,
                                            unsigned char cond_42040, __global
                                            unsigned char *defunc_3_map_res_mem_43591,
                                            __global unsigned char *mem_43620,
                                            __global unsigned char *mem_43647)
{
    #define tile_sizze_41891 (mainzitile_sizze_41890)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43639_backing_5 = (__local volatile
                                                           char *) mem_43639_backing_aligned_0;
    __local volatile char *restrict mem_43630_backing_0 = (__local volatile
                                                           char *) mem_43630_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44698;
    int32_t local_tid_44699;
    int64_t group_sizze_44702;
    int32_t wave_sizze_44701;
    int32_t group_tid_44700;
    
    global_tid_44698 = get_global_id(0);
    local_tid_44699 = get_local_id(0);
    group_sizze_44702 = get_local_size(0);
    wave_sizze_44701 = LOCKSTEP_WIDTH;
    group_tid_44700 = get_group_id(0);
    
    int32_t gid_flat_41896;
    
    gid_flat_41896 = group_tid_44700;
    
    int32_t ltid_pre_44703;
    
    ltid_pre_44703 = squot32(local_tid_44699, sext_i64_i32(tile_sizze_41891));
    
    int32_t ltid_pre_44704;
    
    ltid_pre_44704 = local_tid_44699 - squot32(local_tid_44699,
                                               sext_i64_i32(tile_sizze_41891)) *
        sext_i64_i32(tile_sizze_41891);
    
    int64_t gid_x_41888;
    
    gid_x_41888 = squot64(sext_i32_i64(group_tid_44700), num_groups_y_41894);
    
    int64_t gid_y_41889;
    
    gid_y_41889 = sext_i32_i64(group_tid_44700) -
        squot64(sext_i32_i64(group_tid_44700), num_groups_y_41894) *
        num_groups_y_41894;
    
    float mem_43625[1];
    int64_t ltid_x_41913 = sext_i32_i64(ltid_pre_44703);
    int64_t ltid_y_41914 = sext_i32_i64(ltid_pre_44704);
    int32_t ltid_flat_41915 = local_tid_44699;
    
    if (slt64(ltid_x_41913, tile_sizze_41891) && slt64(ltid_y_41914,
                                                       tile_sizze_41891)) {
        mem_43625[0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_41998 = gid_x_41888 * tile_sizze_41891;
    int64_t binop_x_42013 = gid_y_41889 * tile_sizze_41891;
    __local char *mem_43630;
    
    mem_43630 = (__local char *) mem_43630_backing_0;
    
    float accs_mem_43635[1];
    float mem_param_43626[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43626[i_1] = mem_43625[i_1];
    for (int64_t tile_id_41924 = 0; tile_id_41924 < num_whole_tiles_41912;
         tile_id_41924++) {
        int64_t binop_x_41996 = tile_sizze_41891 * tile_id_41924;
        int64_t ltid_x_41925 = sext_i32_i64(ltid_pre_44703);
        int64_t ltid_y_41926 = sext_i32_i64(ltid_pre_44704);
        int32_t ltid_flat_41927 = local_tid_44699;
        int64_t j_41997 = ltid_y_41926 + binop_x_41996;
        int64_t gtid_41999 = ltid_x_41925 + binop_x_41998;
        bool binop_x_42004 = slt64(j_41997, i32_res_29135);
        bool binop_y_42005 = slt64(gtid_41999, m_29116);
        bool cond_42006 = binop_x_42004 && binop_y_42005;
        float pre_42007;
        
        if (cond_42006) {
            float x_42008 = ((__global
                              float *) defunc_3_map_res_mem_43591)[gtid_41999 *
                                                                   i32_res_29135 +
                                                                   j_41997];
            
            pre_42007 = x_42008;
        } else {
            pre_42007 = 0.0F;
        }
        ((__local float *) mem_43630)[ltid_x_41925 * tile_sizze_41891 +
                                      ltid_y_41926] = pre_42007;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43634[1];
        int64_t ltid_x_41957 = sext_i32_i64(ltid_pre_44703);
        int64_t ltid_y_41958 = sext_i32_i64(ltid_pre_44704);
        int32_t ltid_flat_41959 = local_tid_44699;
        int64_t gtid_42012 = ltid_x_41957 + binop_x_41998;
        int64_t gtid_42014 = ltid_y_41958 + binop_x_42013;
        float acc_42017 = mem_param_43626[0];
        bool binop_x_42021 = slt64(gtid_42012, m_29116);
        bool binop_y_42022 = slt64(gtid_42014, i32_res_29135);
        bool cond_42023 = binop_x_42021 && binop_y_42022;
        float acc_42024;
        
        if (cond_42023) {
            float x_42025;
            float redout_43078 = acc_42017;
            
            for (int64_t i_43079 = 0; i_43079 < tile_sizze_41891; i_43079++) {
                float x_42029 = ((__local float *) mem_43630)[ltid_x_41957 *
                                                              tile_sizze_41891 +
                                                              i_43079];
                int64_t slice_43111 = binop_x_41996 + i_43079;
                float x_42030 = ((__global float *) mem_43620)[slice_43111 *
                                                               (i32_res_29135 *
                                                                m_29116) +
                                                               gtid_42012 *
                                                               i32_res_29135 +
                                                               gtid_42014];
                float defunc_1_f_res_42031 = x_42029 * x_42030;
                float defunc_1_op_res_42028 = defunc_1_f_res_42031 +
                      redout_43078;
                float redout_tmp_44707 = defunc_1_op_res_42028;
                
                redout_43078 = redout_tmp_44707;
            }
            x_42025 = redout_43078;
            acc_42024 = x_42025;
        } else {
            acc_42024 = acc_42017;
        }
        mem_43634[0] = acc_42024;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44705[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44705[i_2] = mem_43634[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43626[i_3] = mem_param_tmp_44705[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43635[i_4] = mem_param_43626[i_4];
    
    __local char *mem_43639;
    
    mem_43639 = (__local char *) mem_43639_backing_5;
    
    float mem_43643[1];
    float mem_44156[1];
    
    if (cond_42040) {
        mem_44156[0] = accs_mem_43635[0];
    } else {
        int64_t binop_x_42113 = tile_sizze_41891 * num_whole_tiles_41912;
        int64_t ltid_x_42041 = sext_i32_i64(ltid_pre_44703);
        int64_t ltid_y_42042 = sext_i32_i64(ltid_pre_44704);
        int32_t ltid_flat_42043 = local_tid_44699;
        int64_t j_42114 = ltid_y_42042 + binop_x_42113;
        int64_t gtid_42116 = binop_x_41998 + ltid_x_42041;
        bool binop_x_42121 = slt64(j_42114, i32_res_29135);
        bool binop_y_42122 = slt64(gtid_42116, m_29116);
        bool cond_42123 = binop_x_42121 && binop_y_42122;
        float pre_42124;
        
        if (cond_42123) {
            float x_42125 = ((__global
                              float *) defunc_3_map_res_mem_43591)[gtid_42116 *
                                                                   i32_res_29135 +
                                                                   j_42114];
            
            pre_42124 = x_42125;
        } else {
            pre_42124 = 0.0F;
        }
        ((__local float *) mem_43639)[ltid_x_42041 * tile_sizze_41891 +
                                      ltid_y_42042] = pre_42124;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_x_42074 = sext_i32_i64(ltid_pre_44703);
        int64_t ltid_y_42075 = sext_i32_i64(ltid_pre_44704);
        int32_t ltid_flat_42076 = local_tid_44699;
        int64_t gtid_42130 = binop_x_41998 + ltid_x_42074;
        int64_t gtid_42132 = binop_x_42013 + ltid_y_42075;
        float acc_42135 = accs_mem_43635[0];
        bool binop_x_42139 = slt64(gtid_42130, m_29116);
        bool binop_y_42140 = slt64(gtid_42132, i32_res_29135);
        bool cond_42141 = binop_x_42139 && binop_y_42140;
        float acc_42142;
        
        if (cond_42141) {
            float x_42143;
            float redout_43080 = acc_42135;
            
            for (int64_t i_43081 = 0; i_43081 < residual_input_42039;
                 i_43081++) {
                float x_42147 = ((__local float *) mem_43639)[ltid_x_42074 *
                                                              tile_sizze_41891 +
                                                              i_43081];
                int64_t slice_43112 = binop_x_42113 + i_43081;
                float x_42148 = ((__global float *) mem_43620)[slice_43112 *
                                                               (i32_res_29135 *
                                                                m_29116) +
                                                               gtid_42130 *
                                                               i32_res_29135 +
                                                               gtid_42132];
                float defunc_1_f_res_42149 = x_42147 * x_42148;
                float defunc_1_op_res_42146 = defunc_1_f_res_42149 +
                      redout_43080;
                float redout_tmp_44708 = defunc_1_op_res_42146;
                
                redout_43080 = redout_tmp_44708;
            }
            x_42143 = redout_43080;
            acc_42142 = x_42143;
        } else {
            acc_42142 = acc_42135;
        }
        mem_43643[0] = acc_42142;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44156[0] = mem_43643[0];
    }
    
    int64_t thread_out_index_44709 = gid_x_41888 * tile_sizze_41891 +
            sext_i32_i64(ltid_pre_44703);
    int64_t thread_out_index_44710 = gid_y_41889 * tile_sizze_41891 +
            sext_i32_i64(ltid_pre_44704);
    
    if (slt64(thread_out_index_44709, m_29116) && slt64(thread_out_index_44710,
                                                        i32_res_29135)) {
        ((__global float *) mem_43647)[thread_out_index_44709 * i32_res_29135 +
                                       thread_out_index_44710] = mem_44156[0];
    }
    
  error_5:
    return;
    #undef tile_sizze_41891
}
__kernel void mainzisegmap_intragroup_42188(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43699_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43697_backing_aligned_1,
                                            int64_t N_29115, int64_t m_29116,
                                            int64_t i32_res_29135,
                                            int64_t gridDim_x_42182,
                                            int64_t full_tiles_42213,
                                            int64_t kk_42416, __global
                                            unsigned char *defunc_4_map_res_mem_43657,
                                            __global unsigned char *mem_43681,
                                            __global unsigned char *mem_43871)
{
    #define Ty_42169 (mainziTy_42166)
    #define Ry_42170 (mainziRy_42168)
    #define Tx_42171 (mainziTx_42165)
    #define Rx_42172 (mainziRx_42167)
    #define Tk_42173 (mainziTk_42164)
    #define tk_div_tx_42174 (sdiv_up64(mainziTk_42164, mainziTx_42165))
    #define tk_div_ty_42175 (sdiv_up64(mainziTk_42164, mainziTy_42166))
    #define TxRx_42176 (mainziTx_42165 * mainziRx_42167)
    #define TyRy_42177 (mainziTy_42166 * mainziRy_42168)
    #define a_loc_szz_42179 (mainziTk_42164 * (mainziTy_42166 * mainziRy_42168))
    #define b_loc_szz_42181 (mainziRx_42167 * (mainziTx_42165 * mainziTk_42164))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43699_backing_1 = (__local volatile
                                                           char *) mem_43699_backing_aligned_0;
    __local volatile char *restrict mem_43697_backing_0 = (__local volatile
                                                           char *) mem_43697_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44786;
    int32_t local_tid_44787;
    int64_t group_sizze_44790;
    int32_t wave_sizze_44789;
    int32_t group_tid_44788;
    
    global_tid_44786 = get_global_id(0);
    local_tid_44787 = get_local_id(0);
    group_sizze_44790 = get_local_size(0);
    wave_sizze_44789 = LOCKSTEP_WIDTH;
    group_tid_44788 = get_group_id(0);
    
    int32_t gid_flat_42188;
    
    gid_flat_42188 = group_tid_44788;
    
    int32_t ltid_pre_44791;
    
    ltid_pre_44791 = squot32(local_tid_44787, sext_i64_i32(Tx_42171));
    
    int32_t ltid_pre_44792;
    
    ltid_pre_44792 = local_tid_44787 - squot32(local_tid_44787,
                                               sext_i64_i32(Tx_42171)) *
        sext_i64_i32(Tx_42171);
    
    int64_t gid_y_42187;
    
    gid_y_42187 = squot64(sext_i32_i64(group_tid_44788), gridDim_x_42182);
    
    int64_t gid_x_42186;
    
    gid_x_42186 = sext_i32_i64(group_tid_44788) -
        squot64(sext_i32_i64(group_tid_44788), gridDim_x_42182) *
        gridDim_x_42182;
    
    int64_t iii_42189;
    
    iii_42189 = TyRy_42177 * gid_y_42187;
    
    int64_t jjj_42190 = TxRx_42176 * gid_x_42186;
    float mem_43695[Ry_42170 * Rx_42172];
    int64_t ltid_y_42193 = sext_i32_i64(ltid_pre_44791);
    int64_t ltid_x_42191 = sext_i32_i64(ltid_pre_44792);
    int32_t ltid_flat_42192 = local_tid_44787;
    float mem_43686[Ry_42170 * Rx_42172];
    
    for (int64_t i_42204 = 0; i_42204 < Ry_42170; i_42204++) {
        for (int64_t i_42207 = 0; i_42207 < Rx_42172; i_42207++) {
            mem_43686[i_42204 * Rx_42172 + i_42207] = 0.0F;
        }
    }
    for (int64_t i_44795 = 0; i_44795 < Ry_42170; i_44795++) {
        for (int64_t i_44796 = 0; i_44796 < Rx_42172; i_44796++) {
            mem_43695[i_44795 * Rx_42172 + i_44796] = mem_43686[i_44795 *
                                                                Rx_42172 +
                                                                i_44796];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43697;
    
    mem_43697 = (__local char *) mem_43697_backing_0;
    
    __local char *mem_43699;
    
    mem_43699 = (__local char *) mem_43699_backing_1;
    
    float mem_43770[Ry_42170];
    float mem_43774[Rx_42172];
    float loop_mem_43786[Ry_42170 * Rx_42172];
    float mem_param_43700[Ry_42170 * Rx_42172];
    
    for (int32_t i_2 = 0; i_2 < Ry_42170 * Rx_42172; i_2++)
        mem_param_43700[i_2] = mem_43695[i_2];
    for (int64_t i_42214 = 0; i_42214 < full_tiles_42213; i_42214++) {
        int64_t kk_42218 = Tk_42173 * i_42214;
        
        for (int64_t i_42219 = 0; i_42219 < Ry_42170; i_42219++) {
            int64_t binop_y_42242 = Ty_42169 * i_42219;
            
            for (int64_t i_42221 = 0; i_42221 < tk_div_tx_42174; i_42221++) {
                int64_t binop_y_42240 = Tx_42171 * i_42221;
                int64_t ltid_x_42223 = sext_i32_i64(ltid_pre_44791);
                int64_t ltid_y_42224 = sext_i32_i64(ltid_pre_44792);
                int32_t ltid_flat_42225 = local_tid_44787;
                int64_t k_42241 = ltid_y_42224 + binop_y_42240;
                int64_t i_42243 = ltid_x_42223 + binop_y_42242;
                int64_t gtid_42244 = iii_42189 + i_42243;
                int64_t A_col_idx_42245 = kk_42218 + k_42241;
                bool cond_42246 = slt64(gtid_42244, m_29116);
                float A_elem_42247;
                
                if (cond_42246) {
                    float A_elem_42249 = ((__global
                                           float *) defunc_4_map_res_mem_43657)[gtid_42244 *
                                                                                i32_res_29135 +
                                                                                A_col_idx_42245];
                    
                    A_elem_42247 = A_elem_42249;
                } else {
                    A_elem_42247 = 0.0F;
                }
                
                bool cond_42251 = slt64(k_42241, Tk_42173);
                int64_t a_loc_ind_42252;
                
                if (cond_42251) {
                    int64_t binop_y_42253 = Tk_42173 * i_42243;
                    int64_t loc_fi_42254 = k_42241 + binop_y_42253;
                    
                    a_loc_ind_42252 = loc_fi_42254;
                } else {
                    a_loc_ind_42252 = -1;
                }
                if (sle64(0, a_loc_ind_42252) && slt64(a_loc_ind_42252,
                                                       a_loc_szz_42179)) {
                    ((__local float *) mem_43697)[a_loc_ind_42252] =
                        A_elem_42247;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_42259 = 0; i_42259 < tk_div_ty_42175; i_42259++) {
            int64_t binop_y_42280 = Ty_42169 * i_42259;
            
            for (int64_t i_42261 = 0; i_42261 < Rx_42172; i_42261++) {
                int64_t binop_y_42282 = Tx_42171 * i_42261;
                int64_t ltid_x_42263 = sext_i32_i64(ltid_pre_44791);
                int64_t ltid_y_42264 = sext_i32_i64(ltid_pre_44792);
                int32_t ltid_flat_42265 = local_tid_44787;
                int64_t k_42281 = ltid_x_42263 + binop_y_42280;
                int64_t j_42283 = ltid_y_42264 + binop_y_42282;
                int64_t gtid_42284 = jjj_42190 + j_42283;
                int64_t B_row_idx_42285 = kk_42218 + k_42281;
                bool cond_42286 = slt64(gtid_42284, N_29115);
                float B_elem_42287;
                
                if (cond_42286) {
                    float B_elem_42289 = ((__global
                                           float *) mem_43681)[B_row_idx_42285 *
                                                               N_29115 +
                                                               gtid_42284];
                    
                    B_elem_42287 = B_elem_42289;
                } else {
                    B_elem_42287 = 0.0F;
                }
                
                bool cond_42291 = slt64(k_42281, Tk_42173);
                int64_t b_loc_ind_42292;
                
                if (cond_42291) {
                    int64_t binop_y_42293 = TxRx_42176 * k_42281;
                    int64_t loc_fi_42294 = j_42283 + binop_y_42293;
                    
                    b_loc_ind_42292 = loc_fi_42294;
                } else {
                    b_loc_ind_42292 = -1;
                }
                if (sle64(0, b_loc_ind_42292) && slt64(b_loc_ind_42292,
                                                       b_loc_szz_42181)) {
                    ((__local float *) mem_43699)[b_loc_ind_42292] =
                        B_elem_42287;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_43785[Ry_42170 * Rx_42172];
        float mem_param_43757[Ry_42170 * Rx_42172];
        
        for (int32_t i_3 = 0; i_3 < Ry_42170 * Rx_42172; i_3++)
            mem_param_43757[i_3] = mem_param_43700[i_3];
        for (int64_t i_42299 = 0; i_42299 < Tk_42173; i_42299++) {
            int64_t binop_y_42338 = TxRx_42176 * i_42299;
            int64_t ltid_y_42303 = sext_i32_i64(ltid_pre_44791);
            int64_t ltid_x_42301 = sext_i32_i64(ltid_pre_44792);
            int32_t ltid_flat_42302 = local_tid_44787;
            float mem_43760[Ry_42170];
            float mem_43762[Rx_42172];
            int64_t binop_x_42329 = Ry_42170 * ltid_y_42303;
            
            for (int64_t i_42327 = 0; i_42327 < Ry_42170; i_42327++) {
                int64_t binop_x_42330 = i_42327 + binop_x_42329;
                int64_t binop_y_42331 = Tk_42173 * binop_x_42330;
                int64_t a_loc_ind_42332 = i_42299 + binop_y_42331;
                
                for (int64_t i_44808 = 0; i_44808 < 1; i_44808++) {
                    mem_43760[i_42327 + i_44808] = ((__local
                                                     float *) mem_43697)[a_loc_ind_42332 +
                                                                         i_44808];
                }
            }
            
            int64_t binop_y_42340 = Rx_42172 * ltid_x_42301;
            
            for (int64_t i_42336 = 0; i_42336 < Rx_42172; i_42336++) {
                int64_t binop_x_42339 = i_42336 + binop_y_42338;
                int64_t b_loc_ind_42341 = binop_x_42339 + binop_y_42340;
                
                for (int64_t i_44810 = 0; i_44810 < 1; i_44810++) {
                    mem_43762[i_42336 + i_44810] = ((__local
                                                     float *) mem_43699)[b_loc_ind_42341 +
                                                                         i_44810];
                }
            }
            for (int64_t i_44811 = 0; i_44811 < Ry_42170; i_44811++) {
                mem_43770[i_44811] = mem_43760[i_44811];
            }
            for (int64_t i_44812 = 0; i_44812 < Rx_42172; i_44812++) {
                mem_43774[i_44812] = mem_43762[i_44812];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_43784[Ry_42170 * Rx_42172];
            int64_t ltid_y_42348 = sext_i32_i64(ltid_pre_44791);
            int64_t ltid_x_42346 = sext_i32_i64(ltid_pre_44792);
            int32_t ltid_flat_42347 = local_tid_44787;
            int64_t binop_y_42389 = Ry_42170 * ltid_y_42348;
            int64_t binop_y_42393 = Rx_42172 * ltid_x_42346;
            
            for (int64_t i_42383 = 0; i_42383 < Ry_42170; i_42383++) {
                int64_t binop_x_42388 = iii_42189 + i_42383;
                int64_t cmpop_x_42390 = binop_x_42388 + binop_y_42389;
                bool binop_x_42391 = slt64(cmpop_x_42390, m_29116);
                
                for (int64_t i_42386 = 0; i_42386 < Rx_42172; i_42386++) {
                    int64_t binop_x_42392 = jjj_42190 + i_42386;
                    int64_t cmpop_x_42394 = binop_x_42392 + binop_y_42393;
                    bool binop_y_42395 = slt64(cmpop_x_42394, N_29115);
                    bool cond_42396 = binop_x_42391 && binop_y_42395;
                    
                    if (cond_42396) {
                        float a_42398 = mem_43770[i_42383];
                        float b_42399 = mem_43774[i_42386];
                        float c_42400 = mem_param_43757[i_42383 * Rx_42172 +
                                                        i_42386];
                        float defunc_1_f_res_42403 = a_42398 * b_42399;
                        float defunc_1_op_res_42407 = c_42400 +
                              defunc_1_f_res_42403;
                        
                        mem_param_43757[i_42383 * Rx_42172 + i_42386] =
                            defunc_1_op_res_42407;
                    }
                }
            }
            for (int64_t i_44815 = 0; i_44815 < Ry_42170; i_44815++) {
                for (int64_t i_44816 = 0; i_44816 < Rx_42172; i_44816++) {
                    mem_43784[i_44815 * Rx_42172 + i_44816] =
                        mem_param_43757[i_44815 * Rx_42172 + i_44816];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44805[Ry_42170 * Rx_42172];
            
            for (int32_t i_4 = 0; i_4 < Ry_42170 * Rx_42172; i_4++)
                mem_param_tmp_44805[i_4] = mem_43784[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_42170 * Rx_42172; i_5++)
                mem_param_43757[i_5] = mem_param_tmp_44805[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_42170 * Rx_42172; i_6++)
            loop_mem_43785[i_6] = mem_param_43757[i_6];
        
        float mem_param_tmp_44797[Ry_42170 * Rx_42172];
        
        for (int32_t i_7 = 0; i_7 < Ry_42170 * Rx_42172; i_7++)
            mem_param_tmp_44797[i_7] = loop_mem_43785[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_42170 * Rx_42172; i_8++)
            mem_param_43700[i_8] = mem_param_tmp_44797[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_42170 * Rx_42172; i_9++)
        loop_mem_43786[i_9] = mem_param_43700[i_9];
    for (int64_t i_42417 = 0; i_42417 < Ry_42170; i_42417++) {
        int64_t binop_y_42442 = Ty_42169 * i_42417;
        
        for (int64_t i_42419 = 0; i_42419 < tk_div_tx_42174; i_42419++) {
            int64_t binop_y_42440 = Tx_42171 * i_42419;
            int64_t ltid_x_42421 = sext_i32_i64(ltid_pre_44791);
            int64_t ltid_y_42422 = sext_i32_i64(ltid_pre_44792);
            int32_t ltid_flat_42423 = local_tid_44787;
            int64_t k_42441 = ltid_y_42422 + binop_y_42440;
            int64_t i_42443 = ltid_x_42421 + binop_y_42442;
            int64_t gtid_42444 = iii_42189 + i_42443;
            int64_t A_col_idx_42445 = kk_42416 + k_42441;
            bool binop_x_42446 = slt64(gtid_42444, m_29116);
            bool binop_y_42447 = slt64(A_col_idx_42445, i32_res_29135);
            bool cond_42448 = binop_x_42446 && binop_y_42447;
            float A_elem_42449;
            
            if (cond_42448) {
                float A_elem_42451 = ((__global
                                       float *) defunc_4_map_res_mem_43657)[gtid_42444 *
                                                                            i32_res_29135 +
                                                                            A_col_idx_42445];
                
                A_elem_42449 = A_elem_42451;
            } else {
                A_elem_42449 = 0.0F;
            }
            
            bool cond_42453 = slt64(k_42441, Tk_42173);
            int64_t a_loc_ind_42454;
            
            if (cond_42453) {
                int64_t binop_y_42455 = Tk_42173 * i_42443;
                int64_t loc_fi_42456 = k_42441 + binop_y_42455;
                
                a_loc_ind_42454 = loc_fi_42456;
            } else {
                a_loc_ind_42454 = -1;
            }
            if (sle64(0, a_loc_ind_42454) && slt64(a_loc_ind_42454,
                                                   a_loc_szz_42179)) {
                ((__local float *) mem_43697)[a_loc_ind_42454] = A_elem_42449;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_42461 = 0; i_42461 < tk_div_ty_42175; i_42461++) {
        int64_t binop_y_42484 = Ty_42169 * i_42461;
        
        for (int64_t i_42463 = 0; i_42463 < Rx_42172; i_42463++) {
            int64_t binop_y_42486 = Tx_42171 * i_42463;
            int64_t ltid_x_42465 = sext_i32_i64(ltid_pre_44791);
            int64_t ltid_y_42466 = sext_i32_i64(ltid_pre_44792);
            int32_t ltid_flat_42467 = local_tid_44787;
            int64_t k_42485 = ltid_x_42465 + binop_y_42484;
            int64_t j_42487 = ltid_y_42466 + binop_y_42486;
            int64_t gtid_42488 = jjj_42190 + j_42487;
            int64_t B_row_idx_42489 = kk_42416 + k_42485;
            bool binop_x_42490 = slt64(gtid_42488, N_29115);
            bool binop_y_42491 = slt64(B_row_idx_42489, i32_res_29135);
            bool cond_42492 = binop_x_42490 && binop_y_42491;
            float B_elem_42493;
            
            if (cond_42492) {
                float B_elem_42495 = ((__global
                                       float *) mem_43681)[B_row_idx_42489 *
                                                           N_29115 +
                                                           gtid_42488];
                
                B_elem_42493 = B_elem_42495;
            } else {
                B_elem_42493 = 0.0F;
            }
            
            bool cond_42497 = slt64(k_42485, Tk_42173);
            int64_t b_loc_ind_42498;
            
            if (cond_42497) {
                int64_t binop_y_42499 = TxRx_42176 * k_42485;
                int64_t loc_fi_42500 = j_42487 + binop_y_42499;
                
                b_loc_ind_42498 = loc_fi_42500;
            } else {
                b_loc_ind_42498 = -1;
            }
            if (sle64(0, b_loc_ind_42498) && slt64(b_loc_ind_42498,
                                                   b_loc_szz_42181)) {
                ((__local float *) mem_43699)[b_loc_ind_42498] = B_elem_42493;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_43852[Ry_42170];
    float mem_43856[Rx_42172];
    float mem_43866[Ry_42170 * Rx_42172];
    float loop_mem_43868[Ry_42170 * Rx_42172];
    float mem_param_43839[Ry_42170 * Rx_42172];
    
    for (int32_t i_10 = 0; i_10 < Ry_42170 * Rx_42172; i_10++)
        mem_param_43839[i_10] = loop_mem_43786[i_10];
    for (int64_t i_42505 = 0; i_42505 < Tk_42173; i_42505++) {
        int64_t cmpop_x_42507 = kk_42416 + i_42505;
        bool cond_42508 = slt64(cmpop_x_42507, i32_res_29135);
        float mem_44172[Ry_42170 * Rx_42172];
        
        if (cond_42508) {
            int64_t binop_y_42546 = TxRx_42176 * i_42505;
            int64_t bytes_43841 = 4 * Ry_42170;
            int64_t bytes_43843 = 4 * Rx_42172;
            int64_t ltid_y_42511 = sext_i32_i64(ltid_pre_44791);
            int64_t ltid_x_42509 = sext_i32_i64(ltid_pre_44792);
            int32_t ltid_flat_42510 = local_tid_44787;
            float mem_43842[Ry_42170];
            float mem_43844[Rx_42172];
            int64_t binop_x_42537 = Ry_42170 * ltid_y_42511;
            
            for (int64_t i_42535 = 0; i_42535 < Ry_42170; i_42535++) {
                int64_t binop_x_42538 = i_42535 + binop_x_42537;
                int64_t binop_y_42539 = Tk_42173 * binop_x_42538;
                int64_t a_loc_ind_42540 = i_42505 + binop_y_42539;
                
                for (int64_t i_44824 = 0; i_44824 < 1; i_44824++) {
                    mem_43842[i_42535 + i_44824] = ((__local
                                                     float *) mem_43697)[a_loc_ind_42540 +
                                                                         i_44824];
                }
            }
            
            int64_t binop_y_42548 = Rx_42172 * ltid_x_42509;
            
            for (int64_t i_42544 = 0; i_42544 < Rx_42172; i_42544++) {
                int64_t binop_x_42547 = i_42544 + binop_y_42546;
                int64_t b_loc_ind_42549 = binop_x_42547 + binop_y_42548;
                
                for (int64_t i_44826 = 0; i_44826 < 1; i_44826++) {
                    mem_43844[i_42544 + i_44826] = ((__local
                                                     float *) mem_43699)[b_loc_ind_42549 +
                                                                         i_44826];
                }
            }
            for (int64_t i_44827 = 0; i_44827 < Ry_42170; i_44827++) {
                mem_43852[i_44827] = mem_43842[i_44827];
            }
            for (int64_t i_44828 = 0; i_44828 < Rx_42172; i_44828++) {
                mem_43856[i_44828] = mem_43844[i_44828];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_42556 = sext_i32_i64(ltid_pre_44791);
            int64_t ltid_x_42554 = sext_i32_i64(ltid_pre_44792);
            int32_t ltid_flat_42555 = local_tid_44787;
            int64_t binop_y_42597 = Ry_42170 * ltid_y_42556;
            int64_t binop_y_42601 = Rx_42172 * ltid_x_42554;
            
            for (int64_t i_42591 = 0; i_42591 < Ry_42170; i_42591++) {
                int64_t binop_x_42596 = iii_42189 + i_42591;
                int64_t cmpop_x_42598 = binop_x_42596 + binop_y_42597;
                bool binop_x_42599 = slt64(cmpop_x_42598, m_29116);
                
                for (int64_t i_42594 = 0; i_42594 < Rx_42172; i_42594++) {
                    int64_t binop_x_42600 = jjj_42190 + i_42594;
                    int64_t cmpop_x_42602 = binop_x_42600 + binop_y_42601;
                    bool binop_y_42603 = slt64(cmpop_x_42602, N_29115);
                    bool cond_42604 = binop_x_42599 && binop_y_42603;
                    
                    if (cond_42604) {
                        float a_42606 = mem_43852[i_42591];
                        float b_42607 = mem_43856[i_42594];
                        float c_42608 = mem_param_43839[i_42591 * Rx_42172 +
                                                        i_42594];
                        float defunc_1_f_res_42611 = a_42606 * b_42607;
                        float defunc_1_op_res_42615 = c_42608 +
                              defunc_1_f_res_42611;
                        
                        mem_param_43839[i_42591 * Rx_42172 + i_42594] =
                            defunc_1_op_res_42615;
                    }
                }
            }
            for (int64_t i_44831 = 0; i_44831 < Ry_42170; i_44831++) {
                for (int64_t i_44832 = 0; i_44832 < Rx_42172; i_44832++) {
                    mem_43866[i_44831 * Rx_42172 + i_44832] =
                        mem_param_43839[i_44831 * Rx_42172 + i_44832];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44833 = 0; i_44833 < Ry_42170; i_44833++) {
                for (int64_t i_44834 = 0; i_44834 < Rx_42172; i_44834++) {
                    mem_44172[i_44833 * Rx_42172 + i_44834] =
                        mem_43866[i_44833 * Rx_42172 + i_44834];
                }
            }
        } else {
            for (int64_t i_44835 = 0; i_44835 < Ry_42170; i_44835++) {
                for (int64_t i_44836 = 0; i_44836 < Rx_42172; i_44836++) {
                    mem_44172[i_44835 * Rx_42172 + i_44836] =
                        mem_param_43839[i_44835 * Rx_42172 + i_44836];
                }
            }
        }
        
        float mem_param_tmp_44821[Ry_42170 * Rx_42172];
        
        for (int32_t i_11 = 0; i_11 < Ry_42170 * Rx_42172; i_11++)
            mem_param_tmp_44821[i_11] = mem_44172[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_42170 * Rx_42172; i_12++)
            mem_param_43839[i_12] = mem_param_tmp_44821[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_42170 * Rx_42172; i_13++)
        loop_mem_43868[i_13] = mem_param_43839[i_13];
    
    int64_t reg_tile_i_44837 = squot64(sext_i32_i64(local_tid_44787), Tx_42171);
    int64_t reg_tile_i_44838 = sext_i32_i64(local_tid_44787) -
            squot64(sext_i32_i64(local_tid_44787), Tx_42171) * Tx_42171;
    int64_t tile_dim_start_44839 = Ry_42170 * (Ty_42169 * gid_y_42187 +
                                               reg_tile_i_44837);
    int64_t tile_dim_start_44840 = Rx_42172 * (Tx_42171 * gid_x_42186 +
                                               reg_tile_i_44838);
    
    for (int64_t nest_i_44841 = 0; nest_i_44841 < Ry_42170; nest_i_44841++) {
        for (int64_t nest_i_44842 = 0; nest_i_44842 < Rx_42172;
             nest_i_44842++) {
            if (slt64(tile_dim_start_44839 + nest_i_44841, m_29116) &&
                slt64(tile_dim_start_44840 + nest_i_44842, N_29115)) {
                ((__global float *) mem_43871)[(tile_dim_start_44839 +
                                                nest_i_44841) * N_29115 +
                                               (tile_dim_start_44840 +
                                                nest_i_44842)] =
                    loop_mem_43868[nest_i_44841 * Rx_42172 + nest_i_44842];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_42169
    #undef Ry_42170
    #undef Tx_42171
    #undef Rx_42172
    #undef Tk_42173
    #undef tk_div_tx_42174
    #undef tk_div_ty_42175
    #undef TxRx_42176
    #undef TyRy_42177
    #undef a_loc_szz_42179
    #undef b_loc_szz_42181
}
__kernel void mainzisegmap_intragroup_42622(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43941_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43934_backing_aligned_1,
                                            int64_t m_29116, int32_t n_29120,
                                            float hfrac_29122,
                                            int64_t i32_res_29129,
                                            int32_t k2p2_29131,
                                            int64_t num_whole_tiles_42630,
                                            int64_t residual_input_42751,
                                            unsigned char cond_42752, __global
                                            unsigned char *mem_43923, __global
                                            unsigned char *mem_43926, __global
                                            unsigned char *mem_43954, __global
                                            unsigned char *mem_43956, __global
                                            unsigned char *mem_43958)
{
    #define segmap_group_sizze_40092 (mainzisegmap_group_sizze_40061)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43941_backing_5 = (__local volatile
                                                           char *) mem_43941_backing_aligned_0;
    __local volatile char *restrict mem_43934_backing_0 = (__local volatile
                                                           char *) mem_43934_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45010;
    int32_t local_tid_45011;
    int64_t group_sizze_45014;
    int32_t wave_sizze_45013;
    int32_t group_tid_45012;
    
    global_tid_45010 = get_global_id(0);
    local_tid_45011 = get_local_id(0);
    group_sizze_45014 = get_local_size(0);
    wave_sizze_45013 = LOCKSTEP_WIDTH;
    group_tid_45012 = get_group_id(0);
    
    int32_t gid_flat_42622;
    
    gid_flat_42622 = group_tid_45012;
    
    int32_t ltid_pre_45015;
    
    ltid_pre_45015 = local_tid_45011;
    
    int64_t gid_42621;
    
    gid_42621 = sext_i32_i64(group_tid_45012);
    
    float mem_43930[1];
    int64_t ltid_42631 = sext_i32_i64(ltid_pre_45015);
    int32_t ltid_flat_42632 = local_tid_45011;
    
    mem_43930[0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_42717 = segmap_group_sizze_40092 * gid_42621;
    __local char *mem_43934;
    
    mem_43934 = (__local char *) mem_43934_backing_0;
    
    float accs_mem_43938[1];
    float mem_param_43931[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43931[i_1] = mem_43930[i_1];
    for (int64_t tile_id_42638 = 0; tile_id_42638 < num_whole_tiles_42630;
         tile_id_42638++) {
        int64_t binop_x_42699 = segmap_group_sizze_40092 * tile_id_42638;
        int64_t ltid_42639 = sext_i32_i64(ltid_pre_45015);
        int32_t ltid_flat_42640 = local_tid_45011;
        int64_t j_42700 = ltid_42639 + binop_x_42699;
        bool cond_42712 = slt64(j_42700, i32_res_29129);
        int32_t pre_42713;
        
        if (cond_42712) {
            int32_t index_primexp_43046 = sext_i64_i32(j_42700);
            
            pre_42713 = index_primexp_43046;
        } else {
            pre_42713 = 0;
        }
        ((__local int32_t *) mem_43934)[ltid_42639] = pre_42713;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43937[1];
        int64_t ltid_42666 = sext_i32_i64(ltid_pre_45015);
        int32_t ltid_flat_42667 = local_tid_45011;
        int64_t gtid_42718 = ltid_42666 + binop_x_42717;
        int32_t defunc_0_f_res_42720;
        int32_t redout_43088 = 0;
        
        for (int32_t i_43114 = 0; i_43114 < n_29120; i_43114++) {
            int64_t i_43089 = sext_i32_i64(i_43114);
            float x_42724 = ((__global float *) mem_43923)[i_43089 * m_29116 +
                                                           gtid_42718];
            bool isnan_res_42725;
            
            isnan_res_42725 = futrts_isnan32(x_42724);
            
            bool cond_42726 = !isnan_res_42725;
            int32_t defunc_0_f_res_42727 = btoi_bool_i32(cond_42726);
            int32_t defunc_1_op_res_42723 = add32(defunc_0_f_res_42727,
                                                  redout_43088);
            int32_t redout_tmp_45018 = defunc_1_op_res_42723;
            
            redout_43088 = redout_tmp_45018;
        }
        defunc_0_f_res_42720 = redout_43088;
        
        float acc_42728 = mem_param_43931[0];
        bool cond_42729 = slt64(gtid_42718, m_29116);
        float acc_42730;
        
        if (cond_42729) {
            float x_42731;
            float redout_43090 = acc_42728;
            
            for (int64_t i_43091 = 0; i_43091 < segmap_group_sizze_40092;
                 i_43091++) {
                int32_t x_42735 = ((__local int32_t *) mem_43934)[i_43091];
                bool cond_42736 = slt32(x_42735, defunc_0_f_res_42720);
                float defunc_0_f_res_42737;
                
                if (cond_42736) {
                    int64_t i_42738 = sext_i32_i64(x_42735);
                    float defunc_0_f_res_t_res_42739 = ((__global
                                                         float *) mem_43926)[i_42738 *
                                                                             m_29116 +
                                                                             gtid_42718];
                    
                    defunc_0_f_res_42737 = defunc_0_f_res_t_res_42739;
                } else {
                    defunc_0_f_res_42737 = 0.0F;
                }
                
                float defunc_0_f_res_42740 = defunc_0_f_res_42737 *
                      defunc_0_f_res_42737;
                float defunc_1_op_res_42734 = defunc_0_f_res_42740 +
                      redout_43090;
                float redout_tmp_45019 = defunc_1_op_res_42734;
                
                redout_43090 = redout_tmp_45019;
            }
            x_42731 = redout_43090;
            acc_42730 = x_42731;
        } else {
            acc_42730 = acc_42728;
        }
        mem_43937[0] = acc_42730;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45016[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_45016[i_2] = mem_43937[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43931[i_3] = mem_param_tmp_45016[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43938[i_4] = mem_param_43931[i_4];
    
    __local char *mem_43941;
    
    mem_43941 = (__local char *) mem_43941_backing_5;
    
    float mem_43944[1];
    float mem_44185[1];
    
    if (cond_42752) {
        mem_44185[0] = accs_mem_43938[0];
    } else {
        int64_t binop_x_42762 = segmap_group_sizze_40092 *
                num_whole_tiles_42630;
        int64_t ltid_42753 = sext_i32_i64(ltid_pre_45015);
        int32_t ltid_flat_42754 = local_tid_45011;
        int64_t j_42763 = ltid_42753 + binop_x_42762;
        bool cond_42775 = slt64(j_42763, i32_res_29129);
        int32_t pre_42776;
        
        if (cond_42775) {
            int32_t index_primexp_43047 = sext_i64_i32(j_42763);
            
            pre_42776 = index_primexp_43047;
        } else {
            pre_42776 = 0;
        }
        ((__local int32_t *) mem_43941)[ltid_42753] = pre_42776;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_42781 = sext_i32_i64(ltid_pre_45015);
        int32_t ltid_flat_42782 = local_tid_45011;
        int64_t gtid_42789 = binop_x_42717 + ltid_42781;
        int32_t defunc_0_f_res_42791;
        int32_t redout_43092 = 0;
        
        for (int32_t i_43115 = 0; i_43115 < n_29120; i_43115++) {
            int64_t i_43093 = sext_i32_i64(i_43115);
            float x_42795 = ((__global float *) mem_43923)[i_43093 * m_29116 +
                                                           gtid_42789];
            bool isnan_res_42796;
            
            isnan_res_42796 = futrts_isnan32(x_42795);
            
            bool cond_42797 = !isnan_res_42796;
            int32_t defunc_0_f_res_42798 = btoi_bool_i32(cond_42797);
            int32_t defunc_1_op_res_42794 = add32(defunc_0_f_res_42798,
                                                  redout_43092);
            int32_t redout_tmp_45020 = defunc_1_op_res_42794;
            
            redout_43092 = redout_tmp_45020;
        }
        defunc_0_f_res_42791 = redout_43092;
        
        float acc_42799 = accs_mem_43938[0];
        bool cond_42800 = slt64(gtid_42789, m_29116);
        float acc_42801;
        
        if (cond_42800) {
            float x_42802;
            float redout_43094 = acc_42799;
            
            for (int64_t i_43095 = 0; i_43095 < residual_input_42751;
                 i_43095++) {
                int32_t x_42806 = ((__local int32_t *) mem_43941)[i_43095];
                bool cond_42807 = slt32(x_42806, defunc_0_f_res_42791);
                float defunc_0_f_res_42808;
                
                if (cond_42807) {
                    int64_t i_42809 = sext_i32_i64(x_42806);
                    float defunc_0_f_res_t_res_42810 = ((__global
                                                         float *) mem_43926)[i_42809 *
                                                                             m_29116 +
                                                                             gtid_42789];
                    
                    defunc_0_f_res_42808 = defunc_0_f_res_t_res_42810;
                } else {
                    defunc_0_f_res_42808 = 0.0F;
                }
                
                float defunc_0_f_res_42811 = defunc_0_f_res_42808 *
                      defunc_0_f_res_42808;
                float defunc_1_op_res_42805 = defunc_0_f_res_42811 +
                      redout_43094;
                float redout_tmp_45021 = defunc_1_op_res_42805;
                
                redout_43094 = redout_tmp_45021;
            }
            x_42802 = redout_43094;
            acc_42801 = x_42802;
        } else {
            acc_42801 = acc_42799;
        }
        mem_43944[0] = acc_42801;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44185[0] = mem_43944[0];
    }
    
    int32_t mem_43948[1];
    int32_t mem_43950[1];
    float mem_43952[1];
    int64_t ltid_42814 = sext_i32_i64(ltid_pre_45015);
    int32_t ltid_flat_42815 = local_tid_45011;
    int64_t gtid_42825 = binop_x_42717 + ltid_42814;
    bool cond_42827 = slt64(gtid_42825, m_29116);
    int32_t postlude_42828;
    int32_t postlude_42829;
    float postlude_42830;
    
    if (cond_42827) {
        float defunc_0_f_res_42826 = mem_44185[0];
        int32_t defunc_0_f_res_42832;
        int32_t redout_43096 = 0;
        
        for (int32_t i_43116 = 0; i_43116 < n_29120; i_43116++) {
            int64_t i_43097 = sext_i32_i64(i_43116);
            float x_42836 = ((__global float *) mem_43923)[i_43097 * m_29116 +
                                                           gtid_42825];
            bool isnan_res_42837;
            
            isnan_res_42837 = futrts_isnan32(x_42836);
            
            bool cond_42838 = !isnan_res_42837;
            int32_t defunc_0_f_res_42839 = btoi_bool_i32(cond_42838);
            int32_t defunc_1_op_res_42835 = add32(defunc_0_f_res_42839,
                                                  redout_43096);
            int32_t redout_tmp_45022 = defunc_1_op_res_42835;
            
            redout_43096 = redout_tmp_45022;
        }
        defunc_0_f_res_42832 = redout_43096;
        
        int32_t r32_arg_42840 = sub32(defunc_0_f_res_42832, k2p2_29131);
        float i32_res_42841 = sitofp_i32_f32(r32_arg_42840);
        float sqrt_arg_42842 = defunc_0_f_res_42826 / i32_res_42841;
        float sqrt_res_42843;
        
        sqrt_res_42843 = futrts_sqrt32(sqrt_arg_42842);
        
        float i32_res_42844 = sitofp_i32_f32(defunc_0_f_res_42832);
        float t32_arg_42845 = hfrac_29122 * i32_res_42844;
        int32_t f32_res_42846 = fptosi_f32_i32(t32_arg_42845);
        
        postlude_42828 = f32_res_42846;
        postlude_42829 = defunc_0_f_res_42832;
        postlude_42830 = sqrt_res_42843;
    } else {
        postlude_42828 = 0;
        postlude_42829 = 0;
        postlude_42830 = 0.0F;
    }
    mem_43948[0] = postlude_42828;
    mem_43950[0] = postlude_42829;
    mem_43952[0] = postlude_42830;
    barrier(CLK_LOCAL_MEM_FENCE);
    if (slt64(sext_i32_i64(local_tid_45011) + segmap_group_sizze_40092 *
              sext_i32_i64(group_tid_45012), m_29116)) {
        ((__global int32_t *) mem_43954)[sext_i32_i64(local_tid_45011) +
                                         segmap_group_sizze_40092 *
                                         sext_i32_i64(group_tid_45012)] =
            mem_43948[0];
    }
    if (slt64(sext_i32_i64(local_tid_45011) + segmap_group_sizze_40092 *
              sext_i32_i64(group_tid_45012), m_29116)) {
        ((__global int32_t *) mem_43956)[sext_i32_i64(local_tid_45011) +
                                         segmap_group_sizze_40092 *
                                         sext_i32_i64(group_tid_45012)] =
            mem_43950[0];
    }
    if (slt64(sext_i32_i64(local_tid_45011) + segmap_group_sizze_40092 *
              sext_i32_i64(group_tid_45012), m_29116)) {
        ((__global float *) mem_43958)[sext_i32_i64(local_tid_45011) +
                                       segmap_group_sizze_40092 *
                                       sext_i32_i64(group_tid_45012)] =
            mem_43952[0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_40092
}
__kernel void mainzisegmap_intragroup_42854(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_44007_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_44000_backing_aligned_1,
                                            int64_t N_29115, int64_t m_29116,
                                            int64_t i32_res_29490,
                                            int64_t num_whole_tiles_42874,
                                            int64_t residual_input_42973,
                                            unsigned char cond_42974, __global
                                            unsigned char *defunc_4_map_res_mem_43919,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43982,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43983,
                                            __global unsigned char *mem_44013)
{
    #define segmap_group_sizze_40329 (mainzisegmap_group_sizze_40310)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44007_backing_5 = (__local volatile
                                                           char *) mem_44007_backing_aligned_0;
    __local volatile char *restrict mem_44000_backing_0 = (__local volatile
                                                           char *) mem_44000_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45196;
    int32_t local_tid_45197;
    int64_t group_sizze_45200;
    int32_t wave_sizze_45199;
    int32_t group_tid_45198;
    
    global_tid_45196 = get_global_id(0);
    local_tid_45197 = get_local_id(0);
    group_sizze_45200 = get_local_size(0);
    wave_sizze_45199 = LOCKSTEP_WIDTH;
    group_tid_45198 = get_group_id(0);
    
    int32_t gid_flat_42854;
    
    gid_flat_42854 = group_tid_45198;
    
    int32_t ltid_pre_45201;
    
    ltid_pre_45201 = local_tid_45197;
    
    int64_t gid_42853;
    
    gid_42853 = sext_i32_i64(group_tid_45198);
    
    int64_t binop_x_42863;
    
    binop_x_42863 = segmap_group_sizze_40329 * gid_42853;
    
    int32_t mem_43991[1];
    int32_t mem_43993[1];
    int64_t ltid_42855 = sext_i32_i64(ltid_pre_45201);
    int32_t ltid_flat_42856 = local_tid_45197;
    int64_t gtid_42864 = ltid_42855 + binop_x_42863;
    bool cond_42865 = slt64(gtid_42864, m_29116);
    int32_t pre_42866;
    int32_t pre_42867;
    
    if (cond_42865) {
        int32_t x_42868 = ((__global
                            int32_t *) defunc_3_map_res_mem_43983)[gtid_42864];
        int32_t x_42869 = ((__global
                            int32_t *) defunc_3_map_res_mem_43982)[gtid_42864];
        
        pre_42866 = x_42868;
        pre_42867 = x_42869;
    } else {
        pre_42866 = 0;
        pre_42867 = 0;
    }
    mem_43991[0] = pre_42866;
    mem_43993[0] = pre_42867;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_43996[1];
    int64_t ltid_42875 = sext_i32_i64(ltid_pre_45201);
    int32_t ltid_flat_42876 = local_tid_45197;
    
    mem_43996[0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44000;
    
    mem_44000 = (__local char *) mem_44000_backing_0;
    
    float accs_mem_44004[1];
    float mem_param_43997[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43997[i_1] = mem_43996[i_1];
    for (int64_t tile_id_42882 = 0; tile_id_42882 < num_whole_tiles_42874;
         tile_id_42882++) {
        int64_t binop_x_42931 = segmap_group_sizze_40329 * tile_id_42882;
        int64_t ltid_42883 = sext_i32_i64(ltid_pre_45201);
        int32_t ltid_flat_42884 = local_tid_45197;
        int64_t j_42932 = ltid_42883 + binop_x_42931;
        bool cond_42937 = slt64(j_42932, i32_res_29490);
        int32_t pre_42938;
        
        if (cond_42937) {
            int32_t index_primexp_43048 = sext_i64_i32(j_42932);
            int32_t tile_elem_42939 = index_primexp_43048;
            
            pre_42938 = tile_elem_42939;
        } else {
            pre_42938 = 0;
        }
        ((__local int32_t *) mem_44000)[ltid_42883] = pre_42938;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_44003[1];
        int64_t ltid_42903 = sext_i32_i64(ltid_pre_45201);
        int32_t ltid_flat_42904 = local_tid_45197;
        int64_t gtid_42943 = binop_x_42863 + ltid_42903;
        float acc_42946 = mem_param_43997[0];
        bool cond_42947 = slt64(gtid_42943, m_29116);
        float acc_42948;
        
        if (cond_42947) {
            int32_t x_42944 = mem_43991[0];
            int32_t x_42945 = mem_43993[0];
            float x_42949;
            float redout_43098 = acc_42946;
            
            for (int64_t i_43099 = 0; i_43099 < segmap_group_sizze_40329;
                 i_43099++) {
                int32_t x_42953 = ((__local int32_t *) mem_44000)[i_43099];
                bool cond_42954 = slt32(x_42953, x_42945);
                float defunc_0_f_res_42955;
                
                if (cond_42954) {
                    int32_t x_42956 = add32(x_42944, x_42953);
                    int32_t x_42957 = sub32(x_42956, x_42945);
                    int32_t i_42958 = add32(1, x_42957);
                    int64_t i_42959 = sext_i32_i64(i_42958);
                    float defunc_0_f_res_t_res_42960 = ((__global
                                                         float *) defunc_4_map_res_mem_43919)[gtid_42943 *
                                                                                              N_29115 +
                                                                                              i_42959];
                    
                    defunc_0_f_res_42955 = defunc_0_f_res_t_res_42960;
                } else {
                    defunc_0_f_res_42955 = 0.0F;
                }
                
                float defunc_1_op_res_42952 = defunc_0_f_res_42955 +
                      redout_43098;
                float redout_tmp_45204 = defunc_1_op_res_42952;
                
                redout_43098 = redout_tmp_45204;
            }
            x_42949 = redout_43098;
            acc_42948 = x_42949;
        } else {
            acc_42948 = acc_42946;
        }
        mem_44003[0] = acc_42948;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45202[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_45202[i_2] = mem_44003[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43997[i_3] = mem_param_tmp_45202[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_44004[i_4] = mem_param_43997[i_4];
    
    __local char *mem_44007;
    
    mem_44007 = (__local char *) mem_44007_backing_5;
    
    float mem_44010[1];
    float mem_44194[1];
    
    if (cond_42974) {
        mem_44194[0] = accs_mem_44004[0];
    } else {
        int64_t binop_x_42984 = segmap_group_sizze_40329 *
                num_whole_tiles_42874;
        int64_t ltid_42975 = sext_i32_i64(ltid_pre_45201);
        int32_t ltid_flat_42976 = local_tid_45197;
        int64_t j_42985 = ltid_42975 + binop_x_42984;
        bool cond_42990 = slt64(j_42985, i32_res_29490);
        int32_t pre_42991;
        
        if (cond_42990) {
            int32_t index_primexp_43049 = sext_i64_i32(j_42985);
            int32_t tile_elem_42992 = index_primexp_43049;
            
            pre_42991 = tile_elem_42992;
        } else {
            pre_42991 = 0;
        }
        ((__local int32_t *) mem_44007)[ltid_42975] = pre_42991;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_42996 = sext_i32_i64(ltid_pre_45201);
        int32_t ltid_flat_42997 = local_tid_45197;
        int64_t gtid_43004 = binop_x_42863 + ltid_42996;
        float acc_43007 = accs_mem_44004[0];
        bool cond_43008 = slt64(gtid_43004, m_29116);
        float acc_43009;
        
        if (cond_43008) {
            int32_t x_43005 = mem_43991[0];
            int32_t x_43006 = mem_43993[0];
            float x_43010;
            float redout_43100 = acc_43007;
            
            for (int64_t i_43101 = 0; i_43101 < residual_input_42973;
                 i_43101++) {
                int32_t x_43014 = ((__local int32_t *) mem_44007)[i_43101];
                bool cond_43015 = slt32(x_43014, x_43006);
                float defunc_0_f_res_43016;
                
                if (cond_43015) {
                    int32_t x_43017 = add32(x_43005, x_43014);
                    int32_t x_43018 = sub32(x_43017, x_43006);
                    int32_t i_43019 = add32(1, x_43018);
                    int64_t i_43020 = sext_i32_i64(i_43019);
                    float defunc_0_f_res_t_res_43021 = ((__global
                                                         float *) defunc_4_map_res_mem_43919)[gtid_43004 *
                                                                                              N_29115 +
                                                                                              i_43020];
                    
                    defunc_0_f_res_43016 = defunc_0_f_res_t_res_43021;
                } else {
                    defunc_0_f_res_43016 = 0.0F;
                }
                
                float defunc_1_op_res_43013 = defunc_0_f_res_43016 +
                      redout_43100;
                float redout_tmp_45205 = defunc_1_op_res_43013;
                
                redout_43100 = redout_tmp_45205;
            }
            x_43010 = redout_43100;
            acc_43009 = x_43010;
        } else {
            acc_43009 = acc_43007;
        }
        mem_44010[0] = acc_43009;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44194[0] = mem_44010[0];
    }
    if (slt64(sext_i32_i64(local_tid_45197) + segmap_group_sizze_40329 *
              sext_i32_i64(group_tid_45198), m_29116)) {
        ((__global float *) mem_44013)[sext_i32_i64(local_tid_45197) +
                                       segmap_group_sizze_40329 *
                                       sext_i32_i64(group_tid_45198)] =
            mem_44194[0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_40329
}
__kernel void mainzisegred_large_38304(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44464_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44462_backing_aligned_1,
                                       int64_t N_29115, int64_t N_29117,
                                       int64_t i32_res_29129,
                                       int64_t i32_res_29135,
                                       int64_t num_groups_38443, __global
                                       unsigned char *images_mem_43123, __global
                                       unsigned char *binop_p_mem_43132,
                                       __global unsigned char *mem_43273,
                                       __global unsigned char *mem_43278,
                                       int64_t groups_per_segment_44448,
                                       int64_t elements_per_thread_44449,
                                       int64_t virt_num_groups_44450,
                                       int64_t threads_per_segment_44452,
                                       __global
                                       unsigned char *group_res_arr_mem_44453,
                                       __global
                                       unsigned char *mainzicounter_mem_44455)
{
    #define segred_group_sizze_38442 (mainzisegred_group_sizze_38298)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44464_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44464_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44462_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44462_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44457;
    int32_t local_tid_44458;
    int64_t group_sizze_44461;
    int32_t wave_sizze_44460;
    int32_t group_tid_44459;
    
    global_tid_44457 = get_global_id(0);
    local_tid_44458 = get_local_id(0);
    group_sizze_44461 = get_local_size(0);
    wave_sizze_44460 = LOCKSTEP_WIDTH;
    group_tid_44459 = get_group_id(0);
    
    int32_t phys_tid_38304;
    
    phys_tid_38304 = global_tid_44457;
    
    __local char *red_arr_mem_44462;
    
    red_arr_mem_44462 = (__local char *) red_arr_mem_44462_backing_0;
    
    __local char *sync_arr_mem_44464;
    
    sync_arr_mem_44464 = (__local char *) sync_arr_mem_44464_backing_1;
    
    int32_t phys_group_id_44466;
    
    phys_group_id_44466 = get_group_id(0);
    for (int32_t i_44467 = 0; i_44467 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44450) - phys_group_id_44466,
                   sext_i64_i32(num_groups_38443)); i_44467++) {
        int32_t virt_group_id_44468 = phys_group_id_44466 + i_44467 *
                sext_i64_i32(num_groups_38443);
        int32_t flat_segment_id_44469 = squot32(virt_group_id_44468,
                                                sext_i64_i32(groups_per_segment_44448));
        int64_t global_tid_44470 = srem64(sext_i32_i64(virt_group_id_44468) *
                                          segred_group_sizze_38442 +
                                          sext_i32_i64(local_tid_44458),
                                          segred_group_sizze_38442 *
                                          groups_per_segment_44448);
        int64_t gtid_38291 = squot64(sext_i32_i64(flat_segment_id_44469),
                                     i32_res_29135 * i32_res_29135);
        int64_t gtid_38292 = squot64(sext_i32_i64(flat_segment_id_44469) -
                                     squot64(sext_i32_i64(flat_segment_id_44469),
                                             i32_res_29135 * i32_res_29135) *
                                     (i32_res_29135 * i32_res_29135),
                                     i32_res_29135);
        int64_t gtid_38293 = sext_i32_i64(flat_segment_id_44469) -
                squot64(sext_i32_i64(flat_segment_id_44469), i32_res_29135 *
                        i32_res_29135) * (i32_res_29135 * i32_res_29135) -
                squot64(sext_i32_i64(flat_segment_id_44469) -
                        squot64(sext_i32_i64(flat_segment_id_44469),
                                i32_res_29135 * i32_res_29135) *
                        (i32_res_29135 * i32_res_29135), i32_res_29135) *
                i32_res_29135;
        int64_t gtid_38303;
        float x_acc_44471;
        int64_t chunk_sizze_44472;
        
        chunk_sizze_44472 = smin64(elements_per_thread_44449,
                                   sdiv_up64(i32_res_29129 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44470)),
                                             threads_per_segment_44452));
        
        float x_38446;
        float x_38447;
        
        // neutral-initialise the accumulators
        {
            x_acc_44471 = 0.0F;
        }
        for (int64_t i_44476 = 0; i_44476 < chunk_sizze_44472; i_44476++) {
            gtid_38303 = sext_i32_i64(sext_i64_i32(global_tid_44470)) +
                threads_per_segment_44452 * i_44476;
            // apply map function
            {
                float x_38452 = ((__global
                                  float *) images_mem_43123)[gtid_38291 *
                                                             N_29117 +
                                                             gtid_38303];
                float x_38453 = ((__global
                                  float *) binop_p_mem_43132)[gtid_38292 *
                                                              N_29115 +
                                                              gtid_38303];
                float x_38454 = ((__global float *) mem_43273)[gtid_38293 *
                                                               N_29115 +
                                                               gtid_38303];
                float x_38455 = x_38453 * x_38454;
                bool isnan_res_38456;
                
                isnan_res_38456 = futrts_isnan32(x_38452);
                
                float y_38457;
                
                if (isnan_res_38456) {
                    y_38457 = 0.0F;
                } else {
                    y_38457 = 1.0F;
                }
                
                float defunc_2_f_res_38458 = x_38455 * y_38457;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_38446 = x_acc_44471;
                }
                // load new values
                {
                    x_38447 = defunc_2_f_res_38458;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_38448 = x_38446 + x_38447;
                    
                    // store in accumulator
                    {
                        x_acc_44471 = defunc_1_op_res_38448;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_38446 = x_acc_44471;
            ((__local
              float *) red_arr_mem_44462)[sext_i32_i64(local_tid_44458)] =
                x_38446;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44477;
        int32_t skip_waves_44478;
        
        skip_waves_44478 = 1;
        
        float x_44473;
        float x_44474;
        
        offset_44477 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44458,
                      sext_i64_i32(segred_group_sizze_38442))) {
                x_44473 = ((__local
                            float *) red_arr_mem_44462)[sext_i32_i64(local_tid_44458 +
                                                        offset_44477)];
            }
        }
        offset_44477 = 1;
        while (slt32(offset_44477, wave_sizze_44460)) {
            if (slt32(local_tid_44458 + offset_44477,
                      sext_i64_i32(segred_group_sizze_38442)) &&
                ((local_tid_44458 - squot32(local_tid_44458, wave_sizze_44460) *
                  wave_sizze_44460) & (2 * offset_44477 - 1)) == 0) {
                // read array element
                {
                    x_44474 = ((volatile __local
                                float *) red_arr_mem_44462)[sext_i32_i64(local_tid_44458 +
                                                            offset_44477)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44475 = x_44473 + x_44474;
                    
                    x_44473 = defunc_1_op_res_44475;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44462)[sext_i32_i64(local_tid_44458)] =
                        x_44473;
                }
            }
            offset_44477 *= 2;
        }
        while (slt32(skip_waves_44478,
                     squot32(sext_i64_i32(segred_group_sizze_38442) +
                             wave_sizze_44460 - 1, wave_sizze_44460))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44477 = skip_waves_44478 * wave_sizze_44460;
            if (slt32(local_tid_44458 + offset_44477,
                      sext_i64_i32(segred_group_sizze_38442)) &&
                ((local_tid_44458 - squot32(local_tid_44458, wave_sizze_44460) *
                  wave_sizze_44460) == 0 && (squot32(local_tid_44458,
                                                     wave_sizze_44460) & (2 *
                                                                          skip_waves_44478 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44474 = ((__local
                                float *) red_arr_mem_44462)[sext_i32_i64(local_tid_44458 +
                                                            offset_44477)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44475 = x_44473 + x_44474;
                    
                    x_44473 = defunc_1_op_res_44475;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44462)[sext_i32_i64(local_tid_44458)] =
                        x_44473;
                }
            }
            skip_waves_44478 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44458) == 0) {
                x_acc_44471 = x_44473;
            }
        }
        if (groups_per_segment_44448 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44458 == 0) {
                    ((__global float *) mem_43278)[gtid_38291 * (i32_res_29135 *
                                                                 i32_res_29135) +
                                                   gtid_38292 * i32_res_29135 +
                                                   gtid_38293] = x_acc_44471;
                }
            }
        } else {
            int32_t old_counter_44479;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44458 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44453)[sext_i32_i64(virt_group_id_44468) *
                                                        segred_group_sizze_38442] =
                        x_acc_44471;
                    mem_fence_global();
                    old_counter_44479 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44455)[sext_i32_i64(srem32(flat_segment_id_44469,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44464)[0] =
                        old_counter_44479 == groups_per_segment_44448 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44480;
            
            is_last_group_44480 = ((__local bool *) sync_arr_mem_44464)[0];
            if (is_last_group_44480) {
                if (local_tid_44458 == 0) {
                    old_counter_44479 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44455)[sext_i32_i64(srem32(flat_segment_id_44469,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_44448));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44481 =
                            sdiv_up64(groups_per_segment_44448,
                                      segred_group_sizze_38442);
                    
                    x_38446 = 0.0F;
                    for (int64_t i_44482 = 0; i_44482 < read_per_thread_44481;
                         i_44482++) {
                        int64_t group_res_id_44483 =
                                sext_i32_i64(local_tid_44458) *
                                read_per_thread_44481 + i_44482;
                        int64_t index_of_group_res_44484 =
                                sext_i32_i64(flat_segment_id_44469) *
                                groups_per_segment_44448 + group_res_id_44483;
                        
                        if (slt64(group_res_id_44483,
                                  groups_per_segment_44448)) {
                            x_38447 = ((__global
                                        float *) group_res_arr_mem_44453)[index_of_group_res_44484 *
                                                                          segred_group_sizze_38442];
                            
                            float defunc_1_op_res_38448;
                            
                            defunc_1_op_res_38448 = x_38446 + x_38447;
                            x_38446 = defunc_1_op_res_38448;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44462)[sext_i32_i64(local_tid_44458)] =
                    x_38446;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44485;
                    int32_t skip_waves_44486;
                    
                    skip_waves_44486 = 1;
                    
                    float x_44473;
                    float x_44474;
                    
                    offset_44485 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44458,
                                  sext_i64_i32(segred_group_sizze_38442))) {
                            x_44473 = ((__local
                                        float *) red_arr_mem_44462)[sext_i32_i64(local_tid_44458 +
                                                                    offset_44485)];
                        }
                    }
                    offset_44485 = 1;
                    while (slt32(offset_44485, wave_sizze_44460)) {
                        if (slt32(local_tid_44458 + offset_44485,
                                  sext_i64_i32(segred_group_sizze_38442)) &&
                            ((local_tid_44458 - squot32(local_tid_44458,
                                                        wave_sizze_44460) *
                              wave_sizze_44460) & (2 * offset_44485 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44474 = ((volatile __local
                                            float *) red_arr_mem_44462)[sext_i32_i64(local_tid_44458 +
                                                                        offset_44485)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44475 = x_44473 + x_44474;
                                
                                x_44473 = defunc_1_op_res_44475;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44462)[sext_i32_i64(local_tid_44458)] =
                                    x_44473;
                            }
                        }
                        offset_44485 *= 2;
                    }
                    while (slt32(skip_waves_44486,
                                 squot32(sext_i64_i32(segred_group_sizze_38442) +
                                         wave_sizze_44460 - 1,
                                         wave_sizze_44460))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44485 = skip_waves_44486 * wave_sizze_44460;
                        if (slt32(local_tid_44458 + offset_44485,
                                  sext_i64_i32(segred_group_sizze_38442)) &&
                            ((local_tid_44458 - squot32(local_tid_44458,
                                                        wave_sizze_44460) *
                              wave_sizze_44460) == 0 &&
                             (squot32(local_tid_44458, wave_sizze_44460) & (2 *
                                                                            skip_waves_44486 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44474 = ((__local
                                            float *) red_arr_mem_44462)[sext_i32_i64(local_tid_44458 +
                                                                        offset_44485)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44475 = x_44473 + x_44474;
                                
                                x_44473 = defunc_1_op_res_44475;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44462)[sext_i32_i64(local_tid_44458)] =
                                    x_44473;
                            }
                        }
                        skip_waves_44486 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44458 == 0) {
                            ((__global float *) mem_43278)[gtid_38291 *
                                                           (i32_res_29135 *
                                                            i32_res_29135) +
                                                           gtid_38292 *
                                                           i32_res_29135 +
                                                           gtid_38293] =
                                x_44473;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38442
}
__kernel void mainzisegred_large_39351(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44660_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44658_backing_aligned_1,
                                       int64_t N_29115, int64_t N_29117,
                                       int64_t i32_res_29129,
                                       int64_t i32_res_29135,
                                       int64_t num_groups_39404, __global
                                       unsigned char *images_mem_43123, __global
                                       unsigned char *binop_p_mem_43132,
                                       __global unsigned char *mem_43585,
                                       int64_t groups_per_segment_44644,
                                       int64_t elements_per_thread_44645,
                                       int64_t virt_num_groups_44646,
                                       int64_t threads_per_segment_44648,
                                       __global
                                       unsigned char *group_res_arr_mem_44649,
                                       __global
                                       unsigned char *mainzicounter_mem_44651)
{
    #define segred_group_sizze_39403 (mainzisegred_group_sizze_39345)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44660_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44660_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44658_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44658_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44653;
    int32_t local_tid_44654;
    int64_t group_sizze_44657;
    int32_t wave_sizze_44656;
    int32_t group_tid_44655;
    
    global_tid_44653 = get_global_id(0);
    local_tid_44654 = get_local_id(0);
    group_sizze_44657 = get_local_size(0);
    wave_sizze_44656 = LOCKSTEP_WIDTH;
    group_tid_44655 = get_group_id(0);
    
    int32_t phys_tid_39351;
    
    phys_tid_39351 = global_tid_44653;
    
    __local char *red_arr_mem_44658;
    
    red_arr_mem_44658 = (__local char *) red_arr_mem_44658_backing_0;
    
    __local char *sync_arr_mem_44660;
    
    sync_arr_mem_44660 = (__local char *) sync_arr_mem_44660_backing_1;
    
    int32_t phys_group_id_44662;
    
    phys_group_id_44662 = get_group_id(0);
    for (int32_t i_44663 = 0; i_44663 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44646) - phys_group_id_44662,
                   sext_i64_i32(num_groups_39404)); i_44663++) {
        int32_t virt_group_id_44664 = phys_group_id_44662 + i_44663 *
                sext_i64_i32(num_groups_39404);
        int32_t flat_segment_id_44665 = squot32(virt_group_id_44664,
                                                sext_i64_i32(groups_per_segment_44644));
        int64_t global_tid_44666 = srem64(sext_i32_i64(virt_group_id_44664) *
                                          segred_group_sizze_39403 +
                                          sext_i32_i64(local_tid_44654),
                                          segred_group_sizze_39403 *
                                          groups_per_segment_44644);
        int64_t gtid_39340 = squot64(sext_i32_i64(flat_segment_id_44665),
                                     i32_res_29135);
        int64_t gtid_39341 = sext_i32_i64(flat_segment_id_44665) -
                squot64(sext_i32_i64(flat_segment_id_44665), i32_res_29135) *
                i32_res_29135;
        int64_t gtid_39350;
        float x_acc_44667;
        int64_t chunk_sizze_44668;
        
        chunk_sizze_44668 = smin64(elements_per_thread_44645,
                                   sdiv_up64(i32_res_29129 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44666)),
                                             threads_per_segment_44648));
        
        float x_39407;
        float x_39408;
        
        // neutral-initialise the accumulators
        {
            x_acc_44667 = 0.0F;
        }
        for (int64_t i_44672 = 0; i_44672 < chunk_sizze_44668; i_44672++) {
            gtid_39350 = sext_i32_i64(sext_i64_i32(global_tid_44666)) +
                threads_per_segment_44648 * i_44672;
            // apply map function
            {
                float x_39413 = ((__global
                                  float *) images_mem_43123)[gtid_39340 *
                                                             N_29117 +
                                                             gtid_39350];
                bool isnan_res_39414;
                
                isnan_res_39414 = futrts_isnan32(x_39413);
                
                float defunc_1_f_res_39415;
                
                if (isnan_res_39414) {
                    defunc_1_f_res_39415 = 0.0F;
                } else {
                    float x_39412 = ((__global
                                      float *) binop_p_mem_43132)[gtid_39341 *
                                                                  N_29115 +
                                                                  gtid_39350];
                    float defunc_1_f_res_f_res_39416 = x_39412 * x_39413;
                    
                    defunc_1_f_res_39415 = defunc_1_f_res_f_res_39416;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_39407 = x_acc_44667;
                }
                // load new values
                {
                    x_39408 = defunc_1_f_res_39415;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_39409 = x_39407 + x_39408;
                    
                    // store in accumulator
                    {
                        x_acc_44667 = defunc_1_op_res_39409;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_39407 = x_acc_44667;
            ((__local
              float *) red_arr_mem_44658)[sext_i32_i64(local_tid_44654)] =
                x_39407;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44673;
        int32_t skip_waves_44674;
        
        skip_waves_44674 = 1;
        
        float x_44669;
        float x_44670;
        
        offset_44673 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44654,
                      sext_i64_i32(segred_group_sizze_39403))) {
                x_44669 = ((__local
                            float *) red_arr_mem_44658)[sext_i32_i64(local_tid_44654 +
                                                        offset_44673)];
            }
        }
        offset_44673 = 1;
        while (slt32(offset_44673, wave_sizze_44656)) {
            if (slt32(local_tid_44654 + offset_44673,
                      sext_i64_i32(segred_group_sizze_39403)) &&
                ((local_tid_44654 - squot32(local_tid_44654, wave_sizze_44656) *
                  wave_sizze_44656) & (2 * offset_44673 - 1)) == 0) {
                // read array element
                {
                    x_44670 = ((volatile __local
                                float *) red_arr_mem_44658)[sext_i32_i64(local_tid_44654 +
                                                            offset_44673)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44671 = x_44669 + x_44670;
                    
                    x_44669 = defunc_1_op_res_44671;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44658)[sext_i32_i64(local_tid_44654)] =
                        x_44669;
                }
            }
            offset_44673 *= 2;
        }
        while (slt32(skip_waves_44674,
                     squot32(sext_i64_i32(segred_group_sizze_39403) +
                             wave_sizze_44656 - 1, wave_sizze_44656))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44673 = skip_waves_44674 * wave_sizze_44656;
            if (slt32(local_tid_44654 + offset_44673,
                      sext_i64_i32(segred_group_sizze_39403)) &&
                ((local_tid_44654 - squot32(local_tid_44654, wave_sizze_44656) *
                  wave_sizze_44656) == 0 && (squot32(local_tid_44654,
                                                     wave_sizze_44656) & (2 *
                                                                          skip_waves_44674 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44670 = ((__local
                                float *) red_arr_mem_44658)[sext_i32_i64(local_tid_44654 +
                                                            offset_44673)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44671 = x_44669 + x_44670;
                    
                    x_44669 = defunc_1_op_res_44671;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44658)[sext_i32_i64(local_tid_44654)] =
                        x_44669;
                }
            }
            skip_waves_44674 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44654) == 0) {
                x_acc_44667 = x_44669;
            }
        }
        if (groups_per_segment_44644 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44654 == 0) {
                    ((__global float *) mem_43585)[gtid_39340 * i32_res_29135 +
                                                   gtid_39341] = x_acc_44667;
                }
            }
        } else {
            int32_t old_counter_44675;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44654 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44649)[sext_i32_i64(virt_group_id_44664) *
                                                        segred_group_sizze_39403] =
                        x_acc_44667;
                    mem_fence_global();
                    old_counter_44675 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44651)[sext_i32_i64(srem32(flat_segment_id_44665,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44660)[0] =
                        old_counter_44675 == groups_per_segment_44644 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44676;
            
            is_last_group_44676 = ((__local bool *) sync_arr_mem_44660)[0];
            if (is_last_group_44676) {
                if (local_tid_44654 == 0) {
                    old_counter_44675 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44651)[sext_i32_i64(srem32(flat_segment_id_44665,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_44644));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44677 =
                            sdiv_up64(groups_per_segment_44644,
                                      segred_group_sizze_39403);
                    
                    x_39407 = 0.0F;
                    for (int64_t i_44678 = 0; i_44678 < read_per_thread_44677;
                         i_44678++) {
                        int64_t group_res_id_44679 =
                                sext_i32_i64(local_tid_44654) *
                                read_per_thread_44677 + i_44678;
                        int64_t index_of_group_res_44680 =
                                sext_i32_i64(flat_segment_id_44665) *
                                groups_per_segment_44644 + group_res_id_44679;
                        
                        if (slt64(group_res_id_44679,
                                  groups_per_segment_44644)) {
                            x_39408 = ((__global
                                        float *) group_res_arr_mem_44649)[index_of_group_res_44680 *
                                                                          segred_group_sizze_39403];
                            
                            float defunc_1_op_res_39409;
                            
                            defunc_1_op_res_39409 = x_39407 + x_39408;
                            x_39407 = defunc_1_op_res_39409;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44658)[sext_i32_i64(local_tid_44654)] =
                    x_39407;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44681;
                    int32_t skip_waves_44682;
                    
                    skip_waves_44682 = 1;
                    
                    float x_44669;
                    float x_44670;
                    
                    offset_44681 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44654,
                                  sext_i64_i32(segred_group_sizze_39403))) {
                            x_44669 = ((__local
                                        float *) red_arr_mem_44658)[sext_i32_i64(local_tid_44654 +
                                                                    offset_44681)];
                        }
                    }
                    offset_44681 = 1;
                    while (slt32(offset_44681, wave_sizze_44656)) {
                        if (slt32(local_tid_44654 + offset_44681,
                                  sext_i64_i32(segred_group_sizze_39403)) &&
                            ((local_tid_44654 - squot32(local_tid_44654,
                                                        wave_sizze_44656) *
                              wave_sizze_44656) & (2 * offset_44681 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44670 = ((volatile __local
                                            float *) red_arr_mem_44658)[sext_i32_i64(local_tid_44654 +
                                                                        offset_44681)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44671 = x_44669 + x_44670;
                                
                                x_44669 = defunc_1_op_res_44671;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44658)[sext_i32_i64(local_tid_44654)] =
                                    x_44669;
                            }
                        }
                        offset_44681 *= 2;
                    }
                    while (slt32(skip_waves_44682,
                                 squot32(sext_i64_i32(segred_group_sizze_39403) +
                                         wave_sizze_44656 - 1,
                                         wave_sizze_44656))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44681 = skip_waves_44682 * wave_sizze_44656;
                        if (slt32(local_tid_44654 + offset_44681,
                                  sext_i64_i32(segred_group_sizze_39403)) &&
                            ((local_tid_44654 - squot32(local_tid_44654,
                                                        wave_sizze_44656) *
                              wave_sizze_44656) == 0 &&
                             (squot32(local_tid_44654, wave_sizze_44656) & (2 *
                                                                            skip_waves_44682 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44670 = ((__local
                                            float *) red_arr_mem_44658)[sext_i32_i64(local_tid_44654 +
                                                                        offset_44681)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44671 = x_44669 + x_44670;
                                
                                x_44669 = defunc_1_op_res_44671;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44658)[sext_i32_i64(local_tid_44654)] =
                                    x_44669;
                            }
                        }
                        skip_waves_44682 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44654 == 0) {
                            ((__global float *) mem_43585)[gtid_39340 *
                                                           i32_res_29135 +
                                                           gtid_39341] =
                                x_44669;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39403
}
__kernel void mainzisegred_large_39488(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44748_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44746_backing_aligned_1,
                                       int64_t i32_res_29135,
                                       int64_t num_groups_39537, __global
                                       unsigned char *defunc_3_map_res_mem_43370,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43591,
                                       __global unsigned char *mem_43651,
                                       int64_t groups_per_segment_44732,
                                       int64_t elements_per_thread_44733,
                                       int64_t virt_num_groups_44734,
                                       int64_t threads_per_segment_44736,
                                       __global
                                       unsigned char *group_res_arr_mem_44737,
                                       __global
                                       unsigned char *mainzicounter_mem_44739)
{
    #define segred_group_sizze_39536 (mainzisegred_group_sizze_39482)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44748_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44748_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44746_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44746_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44741;
    int32_t local_tid_44742;
    int64_t group_sizze_44745;
    int32_t wave_sizze_44744;
    int32_t group_tid_44743;
    
    global_tid_44741 = get_global_id(0);
    local_tid_44742 = get_local_id(0);
    group_sizze_44745 = get_local_size(0);
    wave_sizze_44744 = LOCKSTEP_WIDTH;
    group_tid_44743 = get_group_id(0);
    
    int32_t phys_tid_39488;
    
    phys_tid_39488 = global_tid_44741;
    
    __local char *red_arr_mem_44746;
    
    red_arr_mem_44746 = (__local char *) red_arr_mem_44746_backing_0;
    
    __local char *sync_arr_mem_44748;
    
    sync_arr_mem_44748 = (__local char *) sync_arr_mem_44748_backing_1;
    
    int32_t phys_group_id_44750;
    
    phys_group_id_44750 = get_group_id(0);
    for (int32_t i_44751 = 0; i_44751 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44734) - phys_group_id_44750,
                   sext_i64_i32(num_groups_39537)); i_44751++) {
        int32_t virt_group_id_44752 = phys_group_id_44750 + i_44751 *
                sext_i64_i32(num_groups_39537);
        int32_t flat_segment_id_44753 = squot32(virt_group_id_44752,
                                                sext_i64_i32(groups_per_segment_44732));
        int64_t global_tid_44754 = srem64(sext_i32_i64(virt_group_id_44752) *
                                          segred_group_sizze_39536 +
                                          sext_i32_i64(local_tid_44742),
                                          segred_group_sizze_39536 *
                                          groups_per_segment_44732);
        int64_t gtid_39477 = squot64(sext_i32_i64(flat_segment_id_44753),
                                     i32_res_29135);
        int64_t gtid_39478 = sext_i32_i64(flat_segment_id_44753) -
                squot64(sext_i32_i64(flat_segment_id_44753), i32_res_29135) *
                i32_res_29135;
        int64_t gtid_39487;
        float x_acc_44755;
        int64_t chunk_sizze_44756;
        
        chunk_sizze_44756 = smin64(elements_per_thread_44733,
                                   sdiv_up64(i32_res_29135 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44754)),
                                             threads_per_segment_44736));
        
        float x_39540;
        float x_39541;
        
        // neutral-initialise the accumulators
        {
            x_acc_44755 = 0.0F;
        }
        for (int64_t i_44760 = 0; i_44760 < chunk_sizze_44756; i_44760++) {
            gtid_39487 = sext_i32_i64(sext_i64_i32(global_tid_44754)) +
                threads_per_segment_44736 * i_44760;
            // apply map function
            {
                float x_39546 = ((__global
                                  float *) defunc_3_map_res_mem_43591)[gtid_39477 *
                                                                       i32_res_29135 +
                                                                       gtid_39487];
                float x_39547 = ((__global
                                  float *) defunc_3_map_res_mem_43370)[gtid_39477 *
                                                                       (i32_res_29135 *
                                                                        i32_res_29135) +
                                                                       gtid_39478 *
                                                                       i32_res_29135 +
                                                                       gtid_39487];
                float defunc_1_f_res_39548 = x_39546 * x_39547;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_39540 = x_acc_44755;
                }
                // load new values
                {
                    x_39541 = defunc_1_f_res_39548;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_39542 = x_39540 + x_39541;
                    
                    // store in accumulator
                    {
                        x_acc_44755 = defunc_1_op_res_39542;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_39540 = x_acc_44755;
            ((__local
              float *) red_arr_mem_44746)[sext_i32_i64(local_tid_44742)] =
                x_39540;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44761;
        int32_t skip_waves_44762;
        
        skip_waves_44762 = 1;
        
        float x_44757;
        float x_44758;
        
        offset_44761 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44742,
                      sext_i64_i32(segred_group_sizze_39536))) {
                x_44757 = ((__local
                            float *) red_arr_mem_44746)[sext_i32_i64(local_tid_44742 +
                                                        offset_44761)];
            }
        }
        offset_44761 = 1;
        while (slt32(offset_44761, wave_sizze_44744)) {
            if (slt32(local_tid_44742 + offset_44761,
                      sext_i64_i32(segred_group_sizze_39536)) &&
                ((local_tid_44742 - squot32(local_tid_44742, wave_sizze_44744) *
                  wave_sizze_44744) & (2 * offset_44761 - 1)) == 0) {
                // read array element
                {
                    x_44758 = ((volatile __local
                                float *) red_arr_mem_44746)[sext_i32_i64(local_tid_44742 +
                                                            offset_44761)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44759 = x_44757 + x_44758;
                    
                    x_44757 = defunc_1_op_res_44759;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44746)[sext_i32_i64(local_tid_44742)] =
                        x_44757;
                }
            }
            offset_44761 *= 2;
        }
        while (slt32(skip_waves_44762,
                     squot32(sext_i64_i32(segred_group_sizze_39536) +
                             wave_sizze_44744 - 1, wave_sizze_44744))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44761 = skip_waves_44762 * wave_sizze_44744;
            if (slt32(local_tid_44742 + offset_44761,
                      sext_i64_i32(segred_group_sizze_39536)) &&
                ((local_tid_44742 - squot32(local_tid_44742, wave_sizze_44744) *
                  wave_sizze_44744) == 0 && (squot32(local_tid_44742,
                                                     wave_sizze_44744) & (2 *
                                                                          skip_waves_44762 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44758 = ((__local
                                float *) red_arr_mem_44746)[sext_i32_i64(local_tid_44742 +
                                                            offset_44761)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44759 = x_44757 + x_44758;
                    
                    x_44757 = defunc_1_op_res_44759;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44746)[sext_i32_i64(local_tid_44742)] =
                        x_44757;
                }
            }
            skip_waves_44762 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44742) == 0) {
                x_acc_44755 = x_44757;
            }
        }
        if (groups_per_segment_44732 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44742 == 0) {
                    ((__global float *) mem_43651)[gtid_39477 * i32_res_29135 +
                                                   gtid_39478] = x_acc_44755;
                }
            }
        } else {
            int32_t old_counter_44763;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44742 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44737)[sext_i32_i64(virt_group_id_44752) *
                                                        segred_group_sizze_39536] =
                        x_acc_44755;
                    mem_fence_global();
                    old_counter_44763 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44739)[sext_i32_i64(srem32(flat_segment_id_44753,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44748)[0] =
                        old_counter_44763 == groups_per_segment_44732 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44764;
            
            is_last_group_44764 = ((__local bool *) sync_arr_mem_44748)[0];
            if (is_last_group_44764) {
                if (local_tid_44742 == 0) {
                    old_counter_44763 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44739)[sext_i32_i64(srem32(flat_segment_id_44753,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_44732));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44765 =
                            sdiv_up64(groups_per_segment_44732,
                                      segred_group_sizze_39536);
                    
                    x_39540 = 0.0F;
                    for (int64_t i_44766 = 0; i_44766 < read_per_thread_44765;
                         i_44766++) {
                        int64_t group_res_id_44767 =
                                sext_i32_i64(local_tid_44742) *
                                read_per_thread_44765 + i_44766;
                        int64_t index_of_group_res_44768 =
                                sext_i32_i64(flat_segment_id_44753) *
                                groups_per_segment_44732 + group_res_id_44767;
                        
                        if (slt64(group_res_id_44767,
                                  groups_per_segment_44732)) {
                            x_39541 = ((__global
                                        float *) group_res_arr_mem_44737)[index_of_group_res_44768 *
                                                                          segred_group_sizze_39536];
                            
                            float defunc_1_op_res_39542;
                            
                            defunc_1_op_res_39542 = x_39540 + x_39541;
                            x_39540 = defunc_1_op_res_39542;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44746)[sext_i32_i64(local_tid_44742)] =
                    x_39540;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44769;
                    int32_t skip_waves_44770;
                    
                    skip_waves_44770 = 1;
                    
                    float x_44757;
                    float x_44758;
                    
                    offset_44769 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44742,
                                  sext_i64_i32(segred_group_sizze_39536))) {
                            x_44757 = ((__local
                                        float *) red_arr_mem_44746)[sext_i32_i64(local_tid_44742 +
                                                                    offset_44769)];
                        }
                    }
                    offset_44769 = 1;
                    while (slt32(offset_44769, wave_sizze_44744)) {
                        if (slt32(local_tid_44742 + offset_44769,
                                  sext_i64_i32(segred_group_sizze_39536)) &&
                            ((local_tid_44742 - squot32(local_tid_44742,
                                                        wave_sizze_44744) *
                              wave_sizze_44744) & (2 * offset_44769 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44758 = ((volatile __local
                                            float *) red_arr_mem_44746)[sext_i32_i64(local_tid_44742 +
                                                                        offset_44769)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44759 = x_44757 + x_44758;
                                
                                x_44757 = defunc_1_op_res_44759;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44746)[sext_i32_i64(local_tid_44742)] =
                                    x_44757;
                            }
                        }
                        offset_44769 *= 2;
                    }
                    while (slt32(skip_waves_44770,
                                 squot32(sext_i64_i32(segred_group_sizze_39536) +
                                         wave_sizze_44744 - 1,
                                         wave_sizze_44744))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44769 = skip_waves_44770 * wave_sizze_44744;
                        if (slt32(local_tid_44742 + offset_44769,
                                  sext_i64_i32(segred_group_sizze_39536)) &&
                            ((local_tid_44742 - squot32(local_tid_44742,
                                                        wave_sizze_44744) *
                              wave_sizze_44744) == 0 &&
                             (squot32(local_tid_44742, wave_sizze_44744) & (2 *
                                                                            skip_waves_44770 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44758 = ((__local
                                            float *) red_arr_mem_44746)[sext_i32_i64(local_tid_44742 +
                                                                        offset_44769)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44759 = x_44757 + x_44758;
                                
                                x_44757 = defunc_1_op_res_44759;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44746)[sext_i32_i64(local_tid_44742)] =
                                    x_44757;
                            }
                        }
                        skip_waves_44770 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44742 == 0) {
                            ((__global float *) mem_43651)[gtid_39477 *
                                                           i32_res_29135 +
                                                           gtid_39478] =
                                x_44757;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39536
}
__kernel void mainzisegred_large_39618(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44880_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44878_backing_aligned_1,
                                       int64_t N_29115, int64_t i32_res_29135,
                                       int64_t num_groups_39665, __global
                                       unsigned char *mem_43139, __global
                                       unsigned char *defunc_4_map_res_mem_43657,
                                       __global unsigned char *mem_43875,
                                       int64_t groups_per_segment_44864,
                                       int64_t elements_per_thread_44865,
                                       int64_t virt_num_groups_44866,
                                       int64_t threads_per_segment_44868,
                                       __global
                                       unsigned char *group_res_arr_mem_44869,
                                       __global
                                       unsigned char *mainzicounter_mem_44871)
{
    #define segred_group_sizze_39664 (mainzisegred_group_sizze_39612)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44880_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44880_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44878_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44878_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44873;
    int32_t local_tid_44874;
    int64_t group_sizze_44877;
    int32_t wave_sizze_44876;
    int32_t group_tid_44875;
    
    global_tid_44873 = get_global_id(0);
    local_tid_44874 = get_local_id(0);
    group_sizze_44877 = get_local_size(0);
    wave_sizze_44876 = LOCKSTEP_WIDTH;
    group_tid_44875 = get_group_id(0);
    
    int32_t phys_tid_39618;
    
    phys_tid_39618 = global_tid_44873;
    
    __local char *red_arr_mem_44878;
    
    red_arr_mem_44878 = (__local char *) red_arr_mem_44878_backing_0;
    
    __local char *sync_arr_mem_44880;
    
    sync_arr_mem_44880 = (__local char *) sync_arr_mem_44880_backing_1;
    
    int32_t phys_group_id_44882;
    
    phys_group_id_44882 = get_group_id(0);
    for (int32_t i_44883 = 0; i_44883 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44866) - phys_group_id_44882,
                   sext_i64_i32(num_groups_39665)); i_44883++) {
        int32_t virt_group_id_44884 = phys_group_id_44882 + i_44883 *
                sext_i64_i32(num_groups_39665);
        int32_t flat_segment_id_44885 = squot32(virt_group_id_44884,
                                                sext_i64_i32(groups_per_segment_44864));
        int64_t global_tid_44886 = srem64(sext_i32_i64(virt_group_id_44884) *
                                          segred_group_sizze_39664 +
                                          sext_i32_i64(local_tid_44874),
                                          segred_group_sizze_39664 *
                                          groups_per_segment_44864);
        int64_t gtid_39607 = squot64(sext_i32_i64(flat_segment_id_44885),
                                     N_29115);
        int64_t gtid_39608 = sext_i32_i64(flat_segment_id_44885) -
                squot64(sext_i32_i64(flat_segment_id_44885), N_29115) * N_29115;
        int64_t gtid_39617;
        float x_acc_44887;
        int64_t chunk_sizze_44888;
        
        chunk_sizze_44888 = smin64(elements_per_thread_44865,
                                   sdiv_up64(i32_res_29135 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44886)),
                                             threads_per_segment_44868));
        
        float x_39668;
        float x_39669;
        
        // neutral-initialise the accumulators
        {
            x_acc_44887 = 0.0F;
        }
        for (int64_t i_44892 = 0; i_44892 < chunk_sizze_44888; i_44892++) {
            gtid_39617 = sext_i32_i64(sext_i64_i32(global_tid_44886)) +
                threads_per_segment_44868 * i_44892;
            // apply map function
            {
                float x_39673 = ((__global
                                  float *) defunc_4_map_res_mem_43657)[gtid_39607 *
                                                                       i32_res_29135 +
                                                                       gtid_39617];
                float x_39674 = ((__global float *) mem_43139)[gtid_39608 *
                                                               i32_res_29135 +
                                                               gtid_39617];
                float defunc_1_f_res_39675 = x_39673 * x_39674;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_39668 = x_acc_44887;
                }
                // load new values
                {
                    x_39669 = defunc_1_f_res_39675;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_39670 = x_39668 + x_39669;
                    
                    // store in accumulator
                    {
                        x_acc_44887 = defunc_1_op_res_39670;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_39668 = x_acc_44887;
            ((__local
              float *) red_arr_mem_44878)[sext_i32_i64(local_tid_44874)] =
                x_39668;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44893;
        int32_t skip_waves_44894;
        
        skip_waves_44894 = 1;
        
        float x_44889;
        float x_44890;
        
        offset_44893 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44874,
                      sext_i64_i32(segred_group_sizze_39664))) {
                x_44889 = ((__local
                            float *) red_arr_mem_44878)[sext_i32_i64(local_tid_44874 +
                                                        offset_44893)];
            }
        }
        offset_44893 = 1;
        while (slt32(offset_44893, wave_sizze_44876)) {
            if (slt32(local_tid_44874 + offset_44893,
                      sext_i64_i32(segred_group_sizze_39664)) &&
                ((local_tid_44874 - squot32(local_tid_44874, wave_sizze_44876) *
                  wave_sizze_44876) & (2 * offset_44893 - 1)) == 0) {
                // read array element
                {
                    x_44890 = ((volatile __local
                                float *) red_arr_mem_44878)[sext_i32_i64(local_tid_44874 +
                                                            offset_44893)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44891 = x_44889 + x_44890;
                    
                    x_44889 = defunc_1_op_res_44891;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44878)[sext_i32_i64(local_tid_44874)] =
                        x_44889;
                }
            }
            offset_44893 *= 2;
        }
        while (slt32(skip_waves_44894,
                     squot32(sext_i64_i32(segred_group_sizze_39664) +
                             wave_sizze_44876 - 1, wave_sizze_44876))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44893 = skip_waves_44894 * wave_sizze_44876;
            if (slt32(local_tid_44874 + offset_44893,
                      sext_i64_i32(segred_group_sizze_39664)) &&
                ((local_tid_44874 - squot32(local_tid_44874, wave_sizze_44876) *
                  wave_sizze_44876) == 0 && (squot32(local_tid_44874,
                                                     wave_sizze_44876) & (2 *
                                                                          skip_waves_44894 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44890 = ((__local
                                float *) red_arr_mem_44878)[sext_i32_i64(local_tid_44874 +
                                                            offset_44893)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44891 = x_44889 + x_44890;
                    
                    x_44889 = defunc_1_op_res_44891;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44878)[sext_i32_i64(local_tid_44874)] =
                        x_44889;
                }
            }
            skip_waves_44894 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44874) == 0) {
                x_acc_44887 = x_44889;
            }
        }
        if (groups_per_segment_44864 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44874 == 0) {
                    ((__global float *) mem_43875)[gtid_39607 * N_29115 +
                                                   gtid_39608] = x_acc_44887;
                }
            }
        } else {
            int32_t old_counter_44895;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44874 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44869)[sext_i32_i64(virt_group_id_44884) *
                                                        segred_group_sizze_39664] =
                        x_acc_44887;
                    mem_fence_global();
                    old_counter_44895 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44871)[sext_i32_i64(srem32(flat_segment_id_44885,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44880)[0] =
                        old_counter_44895 == groups_per_segment_44864 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44896;
            
            is_last_group_44896 = ((__local bool *) sync_arr_mem_44880)[0];
            if (is_last_group_44896) {
                if (local_tid_44874 == 0) {
                    old_counter_44895 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44871)[sext_i32_i64(srem32(flat_segment_id_44885,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_44864));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44897 =
                            sdiv_up64(groups_per_segment_44864,
                                      segred_group_sizze_39664);
                    
                    x_39668 = 0.0F;
                    for (int64_t i_44898 = 0; i_44898 < read_per_thread_44897;
                         i_44898++) {
                        int64_t group_res_id_44899 =
                                sext_i32_i64(local_tid_44874) *
                                read_per_thread_44897 + i_44898;
                        int64_t index_of_group_res_44900 =
                                sext_i32_i64(flat_segment_id_44885) *
                                groups_per_segment_44864 + group_res_id_44899;
                        
                        if (slt64(group_res_id_44899,
                                  groups_per_segment_44864)) {
                            x_39669 = ((__global
                                        float *) group_res_arr_mem_44869)[index_of_group_res_44900 *
                                                                          segred_group_sizze_39664];
                            
                            float defunc_1_op_res_39670;
                            
                            defunc_1_op_res_39670 = x_39668 + x_39669;
                            x_39668 = defunc_1_op_res_39670;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44878)[sext_i32_i64(local_tid_44874)] =
                    x_39668;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44901;
                    int32_t skip_waves_44902;
                    
                    skip_waves_44902 = 1;
                    
                    float x_44889;
                    float x_44890;
                    
                    offset_44901 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44874,
                                  sext_i64_i32(segred_group_sizze_39664))) {
                            x_44889 = ((__local
                                        float *) red_arr_mem_44878)[sext_i32_i64(local_tid_44874 +
                                                                    offset_44901)];
                        }
                    }
                    offset_44901 = 1;
                    while (slt32(offset_44901, wave_sizze_44876)) {
                        if (slt32(local_tid_44874 + offset_44901,
                                  sext_i64_i32(segred_group_sizze_39664)) &&
                            ((local_tid_44874 - squot32(local_tid_44874,
                                                        wave_sizze_44876) *
                              wave_sizze_44876) & (2 * offset_44901 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44890 = ((volatile __local
                                            float *) red_arr_mem_44878)[sext_i32_i64(local_tid_44874 +
                                                                        offset_44901)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44891 = x_44889 + x_44890;
                                
                                x_44889 = defunc_1_op_res_44891;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44878)[sext_i32_i64(local_tid_44874)] =
                                    x_44889;
                            }
                        }
                        offset_44901 *= 2;
                    }
                    while (slt32(skip_waves_44902,
                                 squot32(sext_i64_i32(segred_group_sizze_39664) +
                                         wave_sizze_44876 - 1,
                                         wave_sizze_44876))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44901 = skip_waves_44902 * wave_sizze_44876;
                        if (slt32(local_tid_44874 + offset_44901,
                                  sext_i64_i32(segred_group_sizze_39664)) &&
                            ((local_tid_44874 - squot32(local_tid_44874,
                                                        wave_sizze_44876) *
                              wave_sizze_44876) == 0 &&
                             (squot32(local_tid_44874, wave_sizze_44876) & (2 *
                                                                            skip_waves_44902 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44890 = ((__local
                                            float *) red_arr_mem_44878)[sext_i32_i64(local_tid_44874 +
                                                                        offset_44901)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44891 = x_44889 + x_44890;
                                
                                x_44889 = defunc_1_op_res_44891;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44878)[sext_i32_i64(local_tid_44874)] =
                                    x_44889;
                            }
                        }
                        skip_waves_44902 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44874 == 0) {
                            ((__global float *) mem_43875)[gtid_39607 *
                                                           N_29115 +
                                                           gtid_39608] =
                                x_44889;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39664
}
__kernel void mainzisegred_large_40184(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_45134_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45132_backing_aligned_1,
                                       int64_t N_29115, int64_t i32_res_29129,
                                       int64_t num_groups_40231, __global
                                       unsigned char *defunc_4_map_res_mem_43919,
                                       __global unsigned char *mem_43970,
                                       __global unsigned char *mem_43973,
                                       int64_t groups_per_segment_45118,
                                       int64_t elements_per_thread_45119,
                                       int64_t virt_num_groups_45120,
                                       int64_t threads_per_segment_45122,
                                       __global
                                       unsigned char *group_res_arr_mem_45123,
                                       __global
                                       unsigned char *mainzicounter_mem_45125)
{
    #define segred_group_sizze_40230 (mainzisegred_group_sizze_40178)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45134_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45134_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45132_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45132_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45127;
    int32_t local_tid_45128;
    int64_t group_sizze_45131;
    int32_t wave_sizze_45130;
    int32_t group_tid_45129;
    
    global_tid_45127 = get_global_id(0);
    local_tid_45128 = get_local_id(0);
    group_sizze_45131 = get_local_size(0);
    wave_sizze_45130 = LOCKSTEP_WIDTH;
    group_tid_45129 = get_group_id(0);
    
    int32_t phys_tid_40184;
    
    phys_tid_40184 = global_tid_45127;
    
    __local char *red_arr_mem_45132;
    
    red_arr_mem_45132 = (__local char *) red_arr_mem_45132_backing_0;
    
    __local char *sync_arr_mem_45134;
    
    sync_arr_mem_45134 = (__local char *) sync_arr_mem_45134_backing_1;
    
    int32_t phys_group_id_45136;
    
    phys_group_id_45136 = get_group_id(0);
    for (int32_t i_45137 = 0; i_45137 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45120) - phys_group_id_45136,
                   sext_i64_i32(num_groups_40231)); i_45137++) {
        int32_t virt_group_id_45138 = phys_group_id_45136 + i_45137 *
                sext_i64_i32(num_groups_40231);
        int32_t flat_segment_id_45139 = squot32(virt_group_id_45138,
                                                sext_i64_i32(groups_per_segment_45118));
        int64_t global_tid_45140 = srem64(sext_i32_i64(virt_group_id_45138) *
                                          segred_group_sizze_40230 +
                                          sext_i32_i64(local_tid_45128),
                                          segred_group_sizze_40230 *
                                          groups_per_segment_45118);
        int64_t gtid_40175 = sext_i32_i64(flat_segment_id_45139);
        int64_t gtid_40183;
        float x_acc_45141;
        int64_t chunk_sizze_45142;
        
        chunk_sizze_45142 = smin64(elements_per_thread_45119,
                                   sdiv_up64(i32_res_29129 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45140)),
                                             threads_per_segment_45122));
        
        float x_40234;
        float x_40235;
        
        // neutral-initialise the accumulators
        {
            x_acc_45141 = 0.0F;
        }
        for (int64_t i_45146 = 0; i_45146 < chunk_sizze_45142; i_45146++) {
            gtid_40183 = sext_i32_i64(sext_i64_i32(global_tid_45140)) +
                threads_per_segment_45122 * i_45146;
            // apply map function
            {
                int32_t defunc_0_f_res_40238 = ((__global
                                                 int32_t *) mem_43970)[gtid_40175];
                int32_t index_primexp_41162 = sext_i64_i32(gtid_40183);
                bool cond_40240 = slt32(index_primexp_41162,
                                        defunc_0_f_res_40238);
                float defunc_0_f_res_40241;
                
                if (cond_40240) {
                    int64_t i_40242 = sext_i32_i64(index_primexp_41162);
                    float defunc_0_f_res_t_res_40243 = ((__global
                                                         float *) defunc_4_map_res_mem_43919)[gtid_40175 *
                                                                                              N_29115 +
                                                                                              i_40242];
                    
                    defunc_0_f_res_40241 = defunc_0_f_res_t_res_40243;
                } else {
                    defunc_0_f_res_40241 = 0.0F;
                }
                
                float defunc_0_f_res_40244 = defunc_0_f_res_40241 *
                      defunc_0_f_res_40241;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_40234 = x_acc_45141;
                }
                // load new values
                {
                    x_40235 = defunc_0_f_res_40244;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_40236 = x_40234 + x_40235;
                    
                    // store in accumulator
                    {
                        x_acc_45141 = defunc_1_op_res_40236;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_40234 = x_acc_45141;
            ((__local
              float *) red_arr_mem_45132)[sext_i32_i64(local_tid_45128)] =
                x_40234;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45147;
        int32_t skip_waves_45148;
        
        skip_waves_45148 = 1;
        
        float x_45143;
        float x_45144;
        
        offset_45147 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45128,
                      sext_i64_i32(segred_group_sizze_40230))) {
                x_45143 = ((__local
                            float *) red_arr_mem_45132)[sext_i32_i64(local_tid_45128 +
                                                        offset_45147)];
            }
        }
        offset_45147 = 1;
        while (slt32(offset_45147, wave_sizze_45130)) {
            if (slt32(local_tid_45128 + offset_45147,
                      sext_i64_i32(segred_group_sizze_40230)) &&
                ((local_tid_45128 - squot32(local_tid_45128, wave_sizze_45130) *
                  wave_sizze_45130) & (2 * offset_45147 - 1)) == 0) {
                // read array element
                {
                    x_45144 = ((volatile __local
                                float *) red_arr_mem_45132)[sext_i32_i64(local_tid_45128 +
                                                            offset_45147)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45145 = x_45143 + x_45144;
                    
                    x_45143 = defunc_1_op_res_45145;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45132)[sext_i32_i64(local_tid_45128)] =
                        x_45143;
                }
            }
            offset_45147 *= 2;
        }
        while (slt32(skip_waves_45148,
                     squot32(sext_i64_i32(segred_group_sizze_40230) +
                             wave_sizze_45130 - 1, wave_sizze_45130))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45147 = skip_waves_45148 * wave_sizze_45130;
            if (slt32(local_tid_45128 + offset_45147,
                      sext_i64_i32(segred_group_sizze_40230)) &&
                ((local_tid_45128 - squot32(local_tid_45128, wave_sizze_45130) *
                  wave_sizze_45130) == 0 && (squot32(local_tid_45128,
                                                     wave_sizze_45130) & (2 *
                                                                          skip_waves_45148 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45144 = ((__local
                                float *) red_arr_mem_45132)[sext_i32_i64(local_tid_45128 +
                                                            offset_45147)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45145 = x_45143 + x_45144;
                    
                    x_45143 = defunc_1_op_res_45145;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45132)[sext_i32_i64(local_tid_45128)] =
                        x_45143;
                }
            }
            skip_waves_45148 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45128) == 0) {
                x_acc_45141 = x_45143;
            }
        }
        if (groups_per_segment_45118 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45128 == 0) {
                    ((__global float *) mem_43973)[gtid_40175] = x_acc_45141;
                }
            }
        } else {
            int32_t old_counter_45149;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45128 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45123)[sext_i32_i64(virt_group_id_45138) *
                                                        segred_group_sizze_40230] =
                        x_acc_45141;
                    mem_fence_global();
                    old_counter_45149 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45125)[sext_i32_i64(srem32(flat_segment_id_45139,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45134)[0] =
                        old_counter_45149 == groups_per_segment_45118 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45150;
            
            is_last_group_45150 = ((__local bool *) sync_arr_mem_45134)[0];
            if (is_last_group_45150) {
                if (local_tid_45128 == 0) {
                    old_counter_45149 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45125)[sext_i32_i64(srem32(flat_segment_id_45139,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_45118));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45151 =
                            sdiv_up64(groups_per_segment_45118,
                                      segred_group_sizze_40230);
                    
                    x_40234 = 0.0F;
                    for (int64_t i_45152 = 0; i_45152 < read_per_thread_45151;
                         i_45152++) {
                        int64_t group_res_id_45153 =
                                sext_i32_i64(local_tid_45128) *
                                read_per_thread_45151 + i_45152;
                        int64_t index_of_group_res_45154 =
                                sext_i32_i64(flat_segment_id_45139) *
                                groups_per_segment_45118 + group_res_id_45153;
                        
                        if (slt64(group_res_id_45153,
                                  groups_per_segment_45118)) {
                            x_40235 = ((__global
                                        float *) group_res_arr_mem_45123)[index_of_group_res_45154 *
                                                                          segred_group_sizze_40230];
                            
                            float defunc_1_op_res_40236;
                            
                            defunc_1_op_res_40236 = x_40234 + x_40235;
                            x_40234 = defunc_1_op_res_40236;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45132)[sext_i32_i64(local_tid_45128)] =
                    x_40234;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45155;
                    int32_t skip_waves_45156;
                    
                    skip_waves_45156 = 1;
                    
                    float x_45143;
                    float x_45144;
                    
                    offset_45155 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45128,
                                  sext_i64_i32(segred_group_sizze_40230))) {
                            x_45143 = ((__local
                                        float *) red_arr_mem_45132)[sext_i32_i64(local_tid_45128 +
                                                                    offset_45155)];
                        }
                    }
                    offset_45155 = 1;
                    while (slt32(offset_45155, wave_sizze_45130)) {
                        if (slt32(local_tid_45128 + offset_45155,
                                  sext_i64_i32(segred_group_sizze_40230)) &&
                            ((local_tid_45128 - squot32(local_tid_45128,
                                                        wave_sizze_45130) *
                              wave_sizze_45130) & (2 * offset_45155 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45144 = ((volatile __local
                                            float *) red_arr_mem_45132)[sext_i32_i64(local_tid_45128 +
                                                                        offset_45155)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45145 = x_45143 + x_45144;
                                
                                x_45143 = defunc_1_op_res_45145;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45132)[sext_i32_i64(local_tid_45128)] =
                                    x_45143;
                            }
                        }
                        offset_45155 *= 2;
                    }
                    while (slt32(skip_waves_45156,
                                 squot32(sext_i64_i32(segred_group_sizze_40230) +
                                         wave_sizze_45130 - 1,
                                         wave_sizze_45130))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45155 = skip_waves_45156 * wave_sizze_45130;
                        if (slt32(local_tid_45128 + offset_45155,
                                  sext_i64_i32(segred_group_sizze_40230)) &&
                            ((local_tid_45128 - squot32(local_tid_45128,
                                                        wave_sizze_45130) *
                              wave_sizze_45130) == 0 &&
                             (squot32(local_tid_45128, wave_sizze_45130) & (2 *
                                                                            skip_waves_45156 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45144 = ((__local
                                            float *) red_arr_mem_45132)[sext_i32_i64(local_tid_45128 +
                                                                        offset_45155)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45145 = x_45143 + x_45144;
                                
                                x_45143 = defunc_1_op_res_45145;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45132)[sext_i32_i64(local_tid_45128)] =
                                    x_45143;
                            }
                        }
                        skip_waves_45156 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45128 == 0) {
                            ((__global float *) mem_43973)[gtid_40175] =
                                x_45143;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40230
}
__kernel void mainzisegred_large_40205(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_45074_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45072_backing_aligned_1,
                                       int64_t N_29117, int64_t i32_res_29129,
                                       int64_t num_groups_40217, __global
                                       unsigned char *images_mem_43123, __global
                                       unsigned char *mem_43970,
                                       int64_t groups_per_segment_45058,
                                       int64_t elements_per_thread_45059,
                                       int64_t virt_num_groups_45060,
                                       int64_t threads_per_segment_45062,
                                       __global
                                       unsigned char *group_res_arr_mem_45063,
                                       __global
                                       unsigned char *mainzicounter_mem_45065)
{
    #define segred_group_sizze_40216 (mainzisegred_group_sizze_40199)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45074_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45074_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45072_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45072_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45067;
    int32_t local_tid_45068;
    int64_t group_sizze_45071;
    int32_t wave_sizze_45070;
    int32_t group_tid_45069;
    
    global_tid_45067 = get_global_id(0);
    local_tid_45068 = get_local_id(0);
    group_sizze_45071 = get_local_size(0);
    wave_sizze_45070 = LOCKSTEP_WIDTH;
    group_tid_45069 = get_group_id(0);
    
    int32_t phys_tid_40205;
    
    phys_tid_40205 = global_tid_45067;
    
    __local char *red_arr_mem_45072;
    
    red_arr_mem_45072 = (__local char *) red_arr_mem_45072_backing_0;
    
    __local char *sync_arr_mem_45074;
    
    sync_arr_mem_45074 = (__local char *) sync_arr_mem_45074_backing_1;
    
    int32_t phys_group_id_45076;
    
    phys_group_id_45076 = get_group_id(0);
    for (int32_t i_45077 = 0; i_45077 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45060) - phys_group_id_45076,
                   sext_i64_i32(num_groups_40217)); i_45077++) {
        int32_t virt_group_id_45078 = phys_group_id_45076 + i_45077 *
                sext_i64_i32(num_groups_40217);
        int32_t flat_segment_id_45079 = squot32(virt_group_id_45078,
                                                sext_i64_i32(groups_per_segment_45058));
        int64_t global_tid_45080 = srem64(sext_i32_i64(virt_group_id_45078) *
                                          segred_group_sizze_40216 +
                                          sext_i32_i64(local_tid_45068),
                                          segred_group_sizze_40216 *
                                          groups_per_segment_45058);
        int64_t gtid_40196 = sext_i32_i64(flat_segment_id_45079);
        int64_t gtid_40204;
        int32_t x_acc_45081;
        int64_t chunk_sizze_45082;
        
        chunk_sizze_45082 = smin64(elements_per_thread_45059,
                                   sdiv_up64(i32_res_29129 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45080)),
                                             threads_per_segment_45062));
        
        int32_t x_40220;
        int32_t x_40221;
        
        // neutral-initialise the accumulators
        {
            x_acc_45081 = 0;
        }
        for (int64_t i_45086 = 0; i_45086 < chunk_sizze_45082; i_45086++) {
            gtid_40204 = sext_i32_i64(sext_i64_i32(global_tid_45080)) +
                threads_per_segment_45062 * i_45086;
            // apply map function
            {
                float x_40224 = ((__global
                                  float *) images_mem_43123)[gtid_40196 *
                                                             N_29117 +
                                                             gtid_40204];
                bool isnan_res_40225;
                
                isnan_res_40225 = futrts_isnan32(x_40224);
                
                bool cond_40226 = !isnan_res_40225;
                int32_t defunc_0_f_res_40227 = btoi_bool_i32(cond_40226);
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_40220 = x_acc_45081;
                }
                // load new values
                {
                    x_40221 = defunc_0_f_res_40227;
                }
                // apply reduction operator
                {
                    int32_t defunc_1_op_res_40222 = add32(x_40220, x_40221);
                    
                    // store in accumulator
                    {
                        x_acc_45081 = defunc_1_op_res_40222;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_40220 = x_acc_45081;
            ((__local
              int32_t *) red_arr_mem_45072)[sext_i32_i64(local_tid_45068)] =
                x_40220;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45087;
        int32_t skip_waves_45088;
        
        skip_waves_45088 = 1;
        
        int32_t x_45083;
        int32_t x_45084;
        
        offset_45087 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45068,
                      sext_i64_i32(segred_group_sizze_40216))) {
                x_45083 = ((__local
                            int32_t *) red_arr_mem_45072)[sext_i32_i64(local_tid_45068 +
                                                          offset_45087)];
            }
        }
        offset_45087 = 1;
        while (slt32(offset_45087, wave_sizze_45070)) {
            if (slt32(local_tid_45068 + offset_45087,
                      sext_i64_i32(segred_group_sizze_40216)) &&
                ((local_tid_45068 - squot32(local_tid_45068, wave_sizze_45070) *
                  wave_sizze_45070) & (2 * offset_45087 - 1)) == 0) {
                // read array element
                {
                    x_45084 = ((volatile __local
                                int32_t *) red_arr_mem_45072)[sext_i32_i64(local_tid_45068 +
                                                              offset_45087)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_45085 = add32(x_45083, x_45084);
                    
                    x_45083 = defunc_1_op_res_45085;
                }
                // write result of operation
                {
                    ((volatile __local
                      int32_t *) red_arr_mem_45072)[sext_i32_i64(local_tid_45068)] =
                        x_45083;
                }
            }
            offset_45087 *= 2;
        }
        while (slt32(skip_waves_45088,
                     squot32(sext_i64_i32(segred_group_sizze_40216) +
                             wave_sizze_45070 - 1, wave_sizze_45070))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45087 = skip_waves_45088 * wave_sizze_45070;
            if (slt32(local_tid_45068 + offset_45087,
                      sext_i64_i32(segred_group_sizze_40216)) &&
                ((local_tid_45068 - squot32(local_tid_45068, wave_sizze_45070) *
                  wave_sizze_45070) == 0 && (squot32(local_tid_45068,
                                                     wave_sizze_45070) & (2 *
                                                                          skip_waves_45088 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45084 = ((__local
                                int32_t *) red_arr_mem_45072)[sext_i32_i64(local_tid_45068 +
                                                              offset_45087)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_45085 = add32(x_45083, x_45084);
                    
                    x_45083 = defunc_1_op_res_45085;
                }
                // write result of operation
                {
                    ((__local
                      int32_t *) red_arr_mem_45072)[sext_i32_i64(local_tid_45068)] =
                        x_45083;
                }
            }
            skip_waves_45088 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45068) == 0) {
                x_acc_45081 = x_45083;
            }
        }
        if (groups_per_segment_45058 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45068 == 0) {
                    ((__global int32_t *) mem_43970)[gtid_40196] = x_acc_45081;
                }
            }
        } else {
            int32_t old_counter_45089;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45068 == 0) {
                    ((__global
                      int32_t *) group_res_arr_mem_45063)[sext_i32_i64(virt_group_id_45078) *
                                                          segred_group_sizze_40216] =
                        x_acc_45081;
                    mem_fence_global();
                    old_counter_45089 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45065)[sext_i32_i64(srem32(flat_segment_id_45079,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45074)[0] =
                        old_counter_45089 == groups_per_segment_45058 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45090;
            
            is_last_group_45090 = ((__local bool *) sync_arr_mem_45074)[0];
            if (is_last_group_45090) {
                if (local_tid_45068 == 0) {
                    old_counter_45089 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45065)[sext_i32_i64(srem32(flat_segment_id_45079,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_45058));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45091 =
                            sdiv_up64(groups_per_segment_45058,
                                      segred_group_sizze_40216);
                    
                    x_40220 = 0;
                    for (int64_t i_45092 = 0; i_45092 < read_per_thread_45091;
                         i_45092++) {
                        int64_t group_res_id_45093 =
                                sext_i32_i64(local_tid_45068) *
                                read_per_thread_45091 + i_45092;
                        int64_t index_of_group_res_45094 =
                                sext_i32_i64(flat_segment_id_45079) *
                                groups_per_segment_45058 + group_res_id_45093;
                        
                        if (slt64(group_res_id_45093,
                                  groups_per_segment_45058)) {
                            x_40221 = ((__global
                                        int32_t *) group_res_arr_mem_45063)[index_of_group_res_45094 *
                                                                            segred_group_sizze_40216];
                            
                            int32_t defunc_1_op_res_40222;
                            
                            defunc_1_op_res_40222 = add32(x_40220, x_40221);
                            x_40220 = defunc_1_op_res_40222;
                        }
                    }
                }
                ((__local
                  int32_t *) red_arr_mem_45072)[sext_i32_i64(local_tid_45068)] =
                    x_40220;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45095;
                    int32_t skip_waves_45096;
                    
                    skip_waves_45096 = 1;
                    
                    int32_t x_45083;
                    int32_t x_45084;
                    
                    offset_45095 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45068,
                                  sext_i64_i32(segred_group_sizze_40216))) {
                            x_45083 = ((__local
                                        int32_t *) red_arr_mem_45072)[sext_i32_i64(local_tid_45068 +
                                                                      offset_45095)];
                        }
                    }
                    offset_45095 = 1;
                    while (slt32(offset_45095, wave_sizze_45070)) {
                        if (slt32(local_tid_45068 + offset_45095,
                                  sext_i64_i32(segred_group_sizze_40216)) &&
                            ((local_tid_45068 - squot32(local_tid_45068,
                                                        wave_sizze_45070) *
                              wave_sizze_45070) & (2 * offset_45095 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45084 = ((volatile __local
                                            int32_t *) red_arr_mem_45072)[sext_i32_i64(local_tid_45068 +
                                                                          offset_45095)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_45085 = add32(x_45083,
                                                                      x_45084);
                                
                                x_45083 = defunc_1_op_res_45085;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_45072)[sext_i32_i64(local_tid_45068)] =
                                    x_45083;
                            }
                        }
                        offset_45095 *= 2;
                    }
                    while (slt32(skip_waves_45096,
                                 squot32(sext_i64_i32(segred_group_sizze_40216) +
                                         wave_sizze_45070 - 1,
                                         wave_sizze_45070))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45095 = skip_waves_45096 * wave_sizze_45070;
                        if (slt32(local_tid_45068 + offset_45095,
                                  sext_i64_i32(segred_group_sizze_40216)) &&
                            ((local_tid_45068 - squot32(local_tid_45068,
                                                        wave_sizze_45070) *
                              wave_sizze_45070) == 0 &&
                             (squot32(local_tid_45068, wave_sizze_45070) & (2 *
                                                                            skip_waves_45096 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45084 = ((__local
                                            int32_t *) red_arr_mem_45072)[sext_i32_i64(local_tid_45068 +
                                                                          offset_45095)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_45085 = add32(x_45083,
                                                                      x_45084);
                                
                                x_45083 = defunc_1_op_res_45085;
                            }
                            // write result of operation
                            {
                                ((__local
                                  int32_t *) red_arr_mem_45072)[sext_i32_i64(local_tid_45068)] =
                                    x_45083;
                            }
                        }
                        skip_waves_45096 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45068 == 0) {
                            ((__global int32_t *) mem_43970)[gtid_40196] =
                                x_45083;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40216
}
__kernel void mainzisegred_large_40356(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_45243_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45241_backing_aligned_1,
                                       int64_t N_29115, int64_t i32_res_29490,
                                       int64_t num_groups_40374, __global
                                       unsigned char *defunc_4_map_res_mem_43919,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43982,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43983,
                                       __global unsigned char *mem_44016,
                                       int64_t groups_per_segment_45227,
                                       int64_t elements_per_thread_45228,
                                       int64_t virt_num_groups_45229,
                                       int64_t threads_per_segment_45231,
                                       __global
                                       unsigned char *group_res_arr_mem_45232,
                                       __global
                                       unsigned char *mainzicounter_mem_45234)
{
    #define segred_group_sizze_40373 (mainzisegred_group_sizze_40350)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45243_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45243_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45241_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45241_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45236;
    int32_t local_tid_45237;
    int64_t group_sizze_45240;
    int32_t wave_sizze_45239;
    int32_t group_tid_45238;
    
    global_tid_45236 = get_global_id(0);
    local_tid_45237 = get_local_id(0);
    group_sizze_45240 = get_local_size(0);
    wave_sizze_45239 = LOCKSTEP_WIDTH;
    group_tid_45238 = get_group_id(0);
    
    int32_t phys_tid_40356;
    
    phys_tid_40356 = global_tid_45236;
    
    __local char *red_arr_mem_45241;
    
    red_arr_mem_45241 = (__local char *) red_arr_mem_45241_backing_0;
    
    __local char *sync_arr_mem_45243;
    
    sync_arr_mem_45243 = (__local char *) sync_arr_mem_45243_backing_1;
    
    int32_t phys_group_id_45245;
    
    phys_group_id_45245 = get_group_id(0);
    for (int32_t i_45246 = 0; i_45246 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45229) - phys_group_id_45245,
                   sext_i64_i32(num_groups_40374)); i_45246++) {
        int32_t virt_group_id_45247 = phys_group_id_45245 + i_45246 *
                sext_i64_i32(num_groups_40374);
        int32_t flat_segment_id_45248 = squot32(virt_group_id_45247,
                                                sext_i64_i32(groups_per_segment_45227));
        int64_t global_tid_45249 = srem64(sext_i32_i64(virt_group_id_45247) *
                                          segred_group_sizze_40373 +
                                          sext_i32_i64(local_tid_45237),
                                          segred_group_sizze_40373 *
                                          groups_per_segment_45227);
        int64_t gtid_40347 = sext_i32_i64(flat_segment_id_45248);
        int64_t gtid_40355;
        float x_acc_45250;
        int64_t chunk_sizze_45251;
        
        chunk_sizze_45251 = smin64(elements_per_thread_45228,
                                   sdiv_up64(i32_res_29490 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45249)),
                                             threads_per_segment_45231));
        
        float x_40377;
        float x_40378;
        
        // neutral-initialise the accumulators
        {
            x_acc_45250 = 0.0F;
        }
        for (int64_t i_45255 = 0; i_45255 < chunk_sizze_45251; i_45255++) {
            gtid_40355 = sext_i32_i64(sext_i64_i32(global_tid_45249)) +
                threads_per_segment_45231 * i_45255;
            // apply map function
            {
                int32_t x_40382 = ((__global
                                    int32_t *) defunc_3_map_res_mem_43982)[gtid_40347];
                int32_t index_primexp_41167 = sext_i64_i32(gtid_40355);
                bool cond_40384 = slt32(index_primexp_41167, x_40382);
                float defunc_0_f_res_40385;
                
                if (cond_40384) {
                    int32_t x_40381 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43983)[gtid_40347];
                    int32_t x_40386 = add32(x_40381, index_primexp_41167);
                    int32_t x_40387 = sub32(x_40386, x_40382);
                    int32_t i_40388 = add32(1, x_40387);
                    int64_t i_40389 = sext_i32_i64(i_40388);
                    float defunc_0_f_res_t_res_40390 = ((__global
                                                         float *) defunc_4_map_res_mem_43919)[gtid_40347 *
                                                                                              N_29115 +
                                                                                              i_40389];
                    
                    defunc_0_f_res_40385 = defunc_0_f_res_t_res_40390;
                } else {
                    defunc_0_f_res_40385 = 0.0F;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_40377 = x_acc_45250;
                }
                // load new values
                {
                    x_40378 = defunc_0_f_res_40385;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_40379 = x_40377 + x_40378;
                    
                    // store in accumulator
                    {
                        x_acc_45250 = defunc_1_op_res_40379;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_40377 = x_acc_45250;
            ((__local
              float *) red_arr_mem_45241)[sext_i32_i64(local_tid_45237)] =
                x_40377;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45256;
        int32_t skip_waves_45257;
        
        skip_waves_45257 = 1;
        
        float x_45252;
        float x_45253;
        
        offset_45256 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45237,
                      sext_i64_i32(segred_group_sizze_40373))) {
                x_45252 = ((__local
                            float *) red_arr_mem_45241)[sext_i32_i64(local_tid_45237 +
                                                        offset_45256)];
            }
        }
        offset_45256 = 1;
        while (slt32(offset_45256, wave_sizze_45239)) {
            if (slt32(local_tid_45237 + offset_45256,
                      sext_i64_i32(segred_group_sizze_40373)) &&
                ((local_tid_45237 - squot32(local_tid_45237, wave_sizze_45239) *
                  wave_sizze_45239) & (2 * offset_45256 - 1)) == 0) {
                // read array element
                {
                    x_45253 = ((volatile __local
                                float *) red_arr_mem_45241)[sext_i32_i64(local_tid_45237 +
                                                            offset_45256)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45254 = x_45252 + x_45253;
                    
                    x_45252 = defunc_1_op_res_45254;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45241)[sext_i32_i64(local_tid_45237)] =
                        x_45252;
                }
            }
            offset_45256 *= 2;
        }
        while (slt32(skip_waves_45257,
                     squot32(sext_i64_i32(segred_group_sizze_40373) +
                             wave_sizze_45239 - 1, wave_sizze_45239))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45256 = skip_waves_45257 * wave_sizze_45239;
            if (slt32(local_tid_45237 + offset_45256,
                      sext_i64_i32(segred_group_sizze_40373)) &&
                ((local_tid_45237 - squot32(local_tid_45237, wave_sizze_45239) *
                  wave_sizze_45239) == 0 && (squot32(local_tid_45237,
                                                     wave_sizze_45239) & (2 *
                                                                          skip_waves_45257 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45253 = ((__local
                                float *) red_arr_mem_45241)[sext_i32_i64(local_tid_45237 +
                                                            offset_45256)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45254 = x_45252 + x_45253;
                    
                    x_45252 = defunc_1_op_res_45254;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45241)[sext_i32_i64(local_tid_45237)] =
                        x_45252;
                }
            }
            skip_waves_45257 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45237) == 0) {
                x_acc_45250 = x_45252;
            }
        }
        if (groups_per_segment_45227 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45237 == 0) {
                    ((__global float *) mem_44016)[gtid_40347] = x_acc_45250;
                }
            }
        } else {
            int32_t old_counter_45258;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45237 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45232)[sext_i32_i64(virt_group_id_45247) *
                                                        segred_group_sizze_40373] =
                        x_acc_45250;
                    mem_fence_global();
                    old_counter_45258 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45234)[sext_i32_i64(srem32(flat_segment_id_45248,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45243)[0] =
                        old_counter_45258 == groups_per_segment_45227 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45259;
            
            is_last_group_45259 = ((__local bool *) sync_arr_mem_45243)[0];
            if (is_last_group_45259) {
                if (local_tid_45237 == 0) {
                    old_counter_45258 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45234)[sext_i32_i64(srem32(flat_segment_id_45248,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_45227));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45260 =
                            sdiv_up64(groups_per_segment_45227,
                                      segred_group_sizze_40373);
                    
                    x_40377 = 0.0F;
                    for (int64_t i_45261 = 0; i_45261 < read_per_thread_45260;
                         i_45261++) {
                        int64_t group_res_id_45262 =
                                sext_i32_i64(local_tid_45237) *
                                read_per_thread_45260 + i_45261;
                        int64_t index_of_group_res_45263 =
                                sext_i32_i64(flat_segment_id_45248) *
                                groups_per_segment_45227 + group_res_id_45262;
                        
                        if (slt64(group_res_id_45262,
                                  groups_per_segment_45227)) {
                            x_40378 = ((__global
                                        float *) group_res_arr_mem_45232)[index_of_group_res_45263 *
                                                                          segred_group_sizze_40373];
                            
                            float defunc_1_op_res_40379;
                            
                            defunc_1_op_res_40379 = x_40377 + x_40378;
                            x_40377 = defunc_1_op_res_40379;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45241)[sext_i32_i64(local_tid_45237)] =
                    x_40377;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45264;
                    int32_t skip_waves_45265;
                    
                    skip_waves_45265 = 1;
                    
                    float x_45252;
                    float x_45253;
                    
                    offset_45264 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45237,
                                  sext_i64_i32(segred_group_sizze_40373))) {
                            x_45252 = ((__local
                                        float *) red_arr_mem_45241)[sext_i32_i64(local_tid_45237 +
                                                                    offset_45264)];
                        }
                    }
                    offset_45264 = 1;
                    while (slt32(offset_45264, wave_sizze_45239)) {
                        if (slt32(local_tid_45237 + offset_45264,
                                  sext_i64_i32(segred_group_sizze_40373)) &&
                            ((local_tid_45237 - squot32(local_tid_45237,
                                                        wave_sizze_45239) *
                              wave_sizze_45239) & (2 * offset_45264 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45253 = ((volatile __local
                                            float *) red_arr_mem_45241)[sext_i32_i64(local_tid_45237 +
                                                                        offset_45264)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45254 = x_45252 + x_45253;
                                
                                x_45252 = defunc_1_op_res_45254;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45241)[sext_i32_i64(local_tid_45237)] =
                                    x_45252;
                            }
                        }
                        offset_45264 *= 2;
                    }
                    while (slt32(skip_waves_45265,
                                 squot32(sext_i64_i32(segred_group_sizze_40373) +
                                         wave_sizze_45239 - 1,
                                         wave_sizze_45239))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45264 = skip_waves_45265 * wave_sizze_45239;
                        if (slt32(local_tid_45237 + offset_45264,
                                  sext_i64_i32(segred_group_sizze_40373)) &&
                            ((local_tid_45237 - squot32(local_tid_45237,
                                                        wave_sizze_45239) *
                              wave_sizze_45239) == 0 &&
                             (squot32(local_tid_45237, wave_sizze_45239) & (2 *
                                                                            skip_waves_45265 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45253 = ((__local
                                            float *) red_arr_mem_45241)[sext_i32_i64(local_tid_45237 +
                                                                        offset_45264)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45254 = x_45252 + x_45253;
                                
                                x_45252 = defunc_1_op_res_45254;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45241)[sext_i32_i64(local_tid_45237)] =
                                    x_45252;
                            }
                        }
                        skip_waves_45265 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45237 == 0) {
                            ((__global float *) mem_44016)[gtid_40347] =
                                x_45252;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40373
}
__kernel void mainzisegred_large_40857(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_45424_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45422_backing_aligned_1,
                                       __local volatile
                                       int64_t *red_arr_mem_45420_backing_aligned_2,
                                       __local volatile
                                       int64_t *red_arr_mem_45418_backing_aligned_3,
                                       int64_t iota32_arg_29515,
                                       int64_t num_groups_41028, __global
                                       unsigned char *mem_44022, __global
                                       unsigned char *mem_44034, __global
                                       unsigned char *mem_44036, __global
                                       unsigned char *mem_44040, __global
                                       unsigned char *mem_44043, __global
                                       unsigned char *mem_44045, __global
                                       unsigned char *mem_44047,
                                       int64_t groups_per_segment_45400,
                                       int64_t elements_per_thread_45401,
                                       int64_t virt_num_groups_45402, __global
                                       unsigned char *group_res_arr_mem_45405,
                                       __global
                                       unsigned char *group_res_arr_mem_45407,
                                       __global
                                       unsigned char *group_res_arr_mem_45409,
                                       __global
                                       unsigned char *mainzicounter_mem_45411)
{
    #define segred_group_sizze_41027 (mainzisegred_group_sizze_40851)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45424_backing_3 =
                          (__local volatile
                           char *) sync_arr_mem_45424_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45422_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45422_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45420_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45420_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_45418_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45418_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45413;
    int32_t local_tid_45414;
    int64_t group_sizze_45417;
    int32_t wave_sizze_45416;
    int32_t group_tid_45415;
    
    global_tid_45413 = get_global_id(0);
    local_tid_45414 = get_local_id(0);
    group_sizze_45417 = get_local_size(0);
    wave_sizze_45416 = LOCKSTEP_WIDTH;
    group_tid_45415 = get_group_id(0);
    
    int32_t phys_tid_40857;
    
    phys_tid_40857 = global_tid_45413;
    
    __local char *red_arr_mem_45418;
    
    red_arr_mem_45418 = (__local char *) red_arr_mem_45418_backing_0;
    
    __local char *red_arr_mem_45420;
    
    red_arr_mem_45420 = (__local char *) red_arr_mem_45420_backing_1;
    
    __local char *red_arr_mem_45422;
    
    red_arr_mem_45422 = (__local char *) red_arr_mem_45422_backing_2;
    
    __local char *sync_arr_mem_45424;
    
    sync_arr_mem_45424 = (__local char *) sync_arr_mem_45424_backing_3;
    
    int32_t phys_group_id_45426;
    
    phys_group_id_45426 = get_group_id(0);
    for (int32_t i_45427 = 0; i_45427 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45402) - phys_group_id_45426,
                   sext_i64_i32(num_groups_41028)); i_45427++) {
        int32_t virt_group_id_45428 = phys_group_id_45426 + i_45427 *
                sext_i64_i32(num_groups_41028);
        int32_t flat_segment_id_45429 = squot32(virt_group_id_45428,
                                                sext_i64_i32(groups_per_segment_45400));
        int64_t global_tid_45430 = srem64(sext_i32_i64(virt_group_id_45428) *
                                          segred_group_sizze_41027 +
                                          sext_i32_i64(local_tid_45414),
                                          segred_group_sizze_41027 *
                                          groups_per_segment_45400);
        int64_t gtid_40848 = sext_i32_i64(flat_segment_id_45429);
        int64_t gtid_40856;
        bool x_acc_45431;
        int32_t x_acc_45432;
        float x_acc_45433;
        int64_t chunk_sizze_45434;
        int64_t starting_point_45435;
        
        starting_point_45435 = sext_i32_i64(sext_i64_i32(global_tid_45430)) *
            elements_per_thread_45401;
        
        int64_t remaining_elements_45436;
        
        remaining_elements_45436 = iota32_arg_29515 - starting_point_45435;
        if (sle64(remaining_elements_45436, 0) || sle64(iota32_arg_29515,
                                                        starting_point_45435)) {
            chunk_sizze_45434 = 0;
        } else {
            if (slt64(iota32_arg_29515,
                      (sext_i32_i64(sext_i64_i32(global_tid_45430)) + 1) *
                      elements_per_thread_45401)) {
                chunk_sizze_45434 = iota32_arg_29515 -
                    sext_i32_i64(sext_i64_i32(global_tid_45430)) *
                    elements_per_thread_45401;
            } else {
                chunk_sizze_45434 = elements_per_thread_45401;
            }
        }
        
        bool x_41033;
        int32_t x_41034;
        float x_41035;
        bool x_41036;
        int32_t x_41037;
        float x_41038;
        
        // neutral-initialise the accumulators
        {
            x_acc_45431 = 0;
            x_acc_45432 = -1;
            x_acc_45433 = 0.0F;
        }
        for (int64_t i_45451 = 0; i_45451 < elements_per_thread_45401;
             i_45451++) {
            gtid_40856 = sext_i32_i64(local_tid_45414) +
                (sext_i32_i64(squot32(sext_i64_i32(global_tid_45430),
                                      sext_i64_i32(segred_group_sizze_41027))) *
                 elements_per_thread_45401 + i_45451) *
                segred_group_sizze_41027;
            if (slt64(gtid_40856, iota32_arg_29515)) {
                // apply map function
                {
                    int32_t y_41047 = ((__global
                                        int32_t *) mem_44036)[gtid_40848];
                    float y_41048 = ((__global float *) mem_44034)[gtid_40848];
                    float x_41052 = ((__global float *) mem_44040)[gtid_40848 *
                                                                   iota32_arg_29515 +
                                                                   gtid_40856];
                    float x_41053 = ((__global float *) mem_44022)[gtid_40856];
                    int32_t index_primexp_41181 = sext_i64_i32(gtid_40856);
                    float defunc_0_f_res_41056 = x_41052 / y_41048;
                    bool cond_41057 = slt32(index_primexp_41181, y_41047);
                    bool isnan_res_41058;
                    
                    isnan_res_41058 = futrts_isnan32(defunc_0_f_res_41056);
                    
                    bool cond_t_res_41059 = !isnan_res_41058;
                    bool x_41060 = cond_41057 && cond_t_res_41059;
                    float abs_res_41061 = (float) fabs(defunc_0_f_res_41056);
                    bool defunc_2_f_res_t_res_41062 = x_41053 < abs_res_41061;
                    bool x_41063 = x_41060 && defunc_2_f_res_t_res_41062;
                    float defunc_1_f_res_41064;
                    
                    if (cond_41057) {
                        defunc_1_f_res_41064 = defunc_0_f_res_41056;
                    } else {
                        defunc_1_f_res_41064 = 0.0F;
                    }
                    // save map-out results
                    { }
                    // load accumulator
                    {
                        x_41033 = x_acc_45431;
                        x_41034 = x_acc_45432;
                        x_41035 = x_acc_45433;
                    }
                    // load new values
                    {
                        x_41036 = x_41063;
                        x_41037 = index_primexp_41181;
                        x_41038 = defunc_1_f_res_41064;
                    }
                    // apply reduction operator
                    {
                        bool defunc_1_op_res_41039;
                        int32_t defunc_1_op_res_41040;
                        
                        if (x_41033) {
                            defunc_1_op_res_41039 = x_41033;
                            defunc_1_op_res_41040 = x_41034;
                        } else {
                            bool x_41041 = x_41036 && x_41036;
                            bool x_41042 = !x_41036;
                            bool y_41043 = x_41033 && x_41042;
                            bool defunc_1_op_res_f_res_41044 = x_41041 ||
                                 y_41043;
                            int32_t defunc_1_op_res_f_res_41045;
                            
                            if (x_41036) {
                                defunc_1_op_res_f_res_41045 = x_41037;
                            } else {
                                defunc_1_op_res_f_res_41045 = x_41034;
                            }
                            defunc_1_op_res_41039 = defunc_1_op_res_f_res_41044;
                            defunc_1_op_res_41040 = defunc_1_op_res_f_res_41045;
                        }
                        
                        float defunc_1_op_res_41046 = x_41035 + x_41038;
                        
                        // store in accumulator
                        {
                            x_acc_45431 = defunc_1_op_res_41039;
                            x_acc_45432 = defunc_1_op_res_41040;
                            x_acc_45433 = defunc_1_op_res_41046;
                        }
                    }
                }
            }
            // to reduce current chunk, first store our result in memory
            {
                x_41033 = x_acc_45431;
                x_41034 = x_acc_45432;
                x_41035 = x_acc_45433;
                ((__local
                  bool *) red_arr_mem_45418)[sext_i32_i64(local_tid_45414)] =
                    x_41033;
                ((__local
                  int32_t *) red_arr_mem_45420)[sext_i32_i64(local_tid_45414)] =
                    x_41034;
                ((__local
                  float *) red_arr_mem_45422)[sext_i32_i64(local_tid_45414)] =
                    x_41035;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t offset_45452;
            int32_t skip_waves_45453;
            
            skip_waves_45453 = 1;
            
            bool x_45437;
            int32_t x_45438;
            float x_45439;
            bool x_45440;
            int32_t x_45441;
            float x_45442;
            
            offset_45452 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_45414,
                          sext_i64_i32(segred_group_sizze_41027))) {
                    x_45437 = ((__local
                                bool *) red_arr_mem_45418)[sext_i32_i64(local_tid_45414 +
                                                           offset_45452)];
                    x_45438 = ((__local
                                int32_t *) red_arr_mem_45420)[sext_i32_i64(local_tid_45414 +
                                                              offset_45452)];
                    x_45439 = ((__local
                                float *) red_arr_mem_45422)[sext_i32_i64(local_tid_45414 +
                                                            offset_45452)];
                }
            }
            offset_45452 = 1;
            while (slt32(offset_45452, wave_sizze_45416)) {
                if (slt32(local_tid_45414 + offset_45452,
                          sext_i64_i32(segred_group_sizze_41027)) &&
                    ((local_tid_45414 - squot32(local_tid_45414,
                                                wave_sizze_45416) *
                      wave_sizze_45416) & (2 * offset_45452 - 1)) == 0) {
                    // read array element
                    {
                        x_45440 = ((volatile __local
                                    bool *) red_arr_mem_45418)[sext_i32_i64(local_tid_45414 +
                                                               offset_45452)];
                        x_45441 = ((volatile __local
                                    int32_t *) red_arr_mem_45420)[sext_i32_i64(local_tid_45414 +
                                                                  offset_45452)];
                        x_45442 = ((volatile __local
                                    float *) red_arr_mem_45422)[sext_i32_i64(local_tid_45414 +
                                                                offset_45452)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_45443;
                        int32_t defunc_1_op_res_45444;
                        
                        if (x_45437) {
                            defunc_1_op_res_45443 = x_45437;
                            defunc_1_op_res_45444 = x_45438;
                        } else {
                            bool x_45445 = x_45440 && x_45440;
                            bool x_45446 = !x_45440;
                            bool y_45447 = x_45437 && x_45446;
                            bool defunc_1_op_res_f_res_45448 = x_45445 ||
                                 y_45447;
                            int32_t defunc_1_op_res_f_res_45449;
                            
                            if (x_45440) {
                                defunc_1_op_res_f_res_45449 = x_45441;
                            } else {
                                defunc_1_op_res_f_res_45449 = x_45438;
                            }
                            defunc_1_op_res_45443 = defunc_1_op_res_f_res_45448;
                            defunc_1_op_res_45444 = defunc_1_op_res_f_res_45449;
                        }
                        
                        float defunc_1_op_res_45450 = x_45439 + x_45442;
                        
                        x_45437 = defunc_1_op_res_45443;
                        x_45438 = defunc_1_op_res_45444;
                        x_45439 = defunc_1_op_res_45450;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          bool *) red_arr_mem_45418)[sext_i32_i64(local_tid_45414)] =
                            x_45437;
                        ((volatile __local
                          int32_t *) red_arr_mem_45420)[sext_i32_i64(local_tid_45414)] =
                            x_45438;
                        ((volatile __local
                          float *) red_arr_mem_45422)[sext_i32_i64(local_tid_45414)] =
                            x_45439;
                    }
                }
                offset_45452 *= 2;
            }
            while (slt32(skip_waves_45453,
                         squot32(sext_i64_i32(segred_group_sizze_41027) +
                                 wave_sizze_45416 - 1, wave_sizze_45416))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_45452 = skip_waves_45453 * wave_sizze_45416;
                if (slt32(local_tid_45414 + offset_45452,
                          sext_i64_i32(segred_group_sizze_41027)) &&
                    ((local_tid_45414 - squot32(local_tid_45414,
                                                wave_sizze_45416) *
                      wave_sizze_45416) == 0 && (squot32(local_tid_45414,
                                                         wave_sizze_45416) &
                                                 (2 * skip_waves_45453 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_45440 = ((__local
                                    bool *) red_arr_mem_45418)[sext_i32_i64(local_tid_45414 +
                                                               offset_45452)];
                        x_45441 = ((__local
                                    int32_t *) red_arr_mem_45420)[sext_i32_i64(local_tid_45414 +
                                                                  offset_45452)];
                        x_45442 = ((__local
                                    float *) red_arr_mem_45422)[sext_i32_i64(local_tid_45414 +
                                                                offset_45452)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_45443;
                        int32_t defunc_1_op_res_45444;
                        
                        if (x_45437) {
                            defunc_1_op_res_45443 = x_45437;
                            defunc_1_op_res_45444 = x_45438;
                        } else {
                            bool x_45445 = x_45440 && x_45440;
                            bool x_45446 = !x_45440;
                            bool y_45447 = x_45437 && x_45446;
                            bool defunc_1_op_res_f_res_45448 = x_45445 ||
                                 y_45447;
                            int32_t defunc_1_op_res_f_res_45449;
                            
                            if (x_45440) {
                                defunc_1_op_res_f_res_45449 = x_45441;
                            } else {
                                defunc_1_op_res_f_res_45449 = x_45438;
                            }
                            defunc_1_op_res_45443 = defunc_1_op_res_f_res_45448;
                            defunc_1_op_res_45444 = defunc_1_op_res_f_res_45449;
                        }
                        
                        float defunc_1_op_res_45450 = x_45439 + x_45442;
                        
                        x_45437 = defunc_1_op_res_45443;
                        x_45438 = defunc_1_op_res_45444;
                        x_45439 = defunc_1_op_res_45450;
                    }
                    // write result of operation
                    {
                        ((__local
                          bool *) red_arr_mem_45418)[sext_i32_i64(local_tid_45414)] =
                            x_45437;
                        ((__local
                          int32_t *) red_arr_mem_45420)[sext_i32_i64(local_tid_45414)] =
                            x_45438;
                        ((__local
                          float *) red_arr_mem_45422)[sext_i32_i64(local_tid_45414)] =
                            x_45439;
                    }
                }
                skip_waves_45453 *= 2;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread saves the result in accumulator
            {
                if (sext_i32_i64(local_tid_45414) == 0) {
                    x_acc_45431 = x_45437;
                    x_acc_45432 = x_45438;
                    x_acc_45433 = x_45439;
                }
            }
            // first thread keeps accumulator; others reset to neutral element
            {
                if (!(sext_i32_i64(local_tid_45414) == 0)) {
                    x_acc_45431 = 0;
                    x_acc_45432 = -1;
                    x_acc_45433 = 0.0F;
                }
            }
        }
        x_41033 = x_acc_45431;
        x_41034 = x_acc_45432;
        x_41035 = x_acc_45433;
        if (groups_per_segment_45400 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45414 == 0) {
                    ((__global bool *) mem_44043)[gtid_40848] = x_acc_45431;
                    ((__global int32_t *) mem_44045)[gtid_40848] = x_acc_45432;
                    ((__global float *) mem_44047)[gtid_40848] = x_acc_45433;
                }
            }
        } else {
            int32_t old_counter_45454;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45414 == 0) {
                    ((__global
                      bool *) group_res_arr_mem_45405)[sext_i32_i64(virt_group_id_45428) *
                                                       segred_group_sizze_41027] =
                        x_acc_45431;
                    ((__global
                      int32_t *) group_res_arr_mem_45407)[sext_i32_i64(virt_group_id_45428) *
                                                          segred_group_sizze_41027] =
                        x_acc_45432;
                    ((__global
                      float *) group_res_arr_mem_45409)[sext_i32_i64(virt_group_id_45428) *
                                                        segred_group_sizze_41027] =
                        x_acc_45433;
                    mem_fence_global();
                    old_counter_45454 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45411)[sext_i32_i64(srem32(flat_segment_id_45429,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45424)[0] =
                        old_counter_45454 == groups_per_segment_45400 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45455;
            
            is_last_group_45455 = ((__local bool *) sync_arr_mem_45424)[0];
            if (is_last_group_45455) {
                if (local_tid_45414 == 0) {
                    old_counter_45454 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45411)[sext_i32_i64(srem32(flat_segment_id_45429,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_45400));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45456 =
                            sdiv_up64(groups_per_segment_45400,
                                      segred_group_sizze_41027);
                    
                    x_41033 = 0;
                    x_41034 = -1;
                    x_41035 = 0.0F;
                    for (int64_t i_45457 = 0; i_45457 < read_per_thread_45456;
                         i_45457++) {
                        int64_t group_res_id_45458 =
                                sext_i32_i64(local_tid_45414) *
                                read_per_thread_45456 + i_45457;
                        int64_t index_of_group_res_45459 =
                                sext_i32_i64(flat_segment_id_45429) *
                                groups_per_segment_45400 + group_res_id_45458;
                        
                        if (slt64(group_res_id_45458,
                                  groups_per_segment_45400)) {
                            x_41036 = ((__global
                                        bool *) group_res_arr_mem_45405)[index_of_group_res_45459 *
                                                                         segred_group_sizze_41027];
                            x_41037 = ((__global
                                        int32_t *) group_res_arr_mem_45407)[index_of_group_res_45459 *
                                                                            segred_group_sizze_41027];
                            x_41038 = ((__global
                                        float *) group_res_arr_mem_45409)[index_of_group_res_45459 *
                                                                          segred_group_sizze_41027];
                            
                            bool defunc_1_op_res_41039;
                            int32_t defunc_1_op_res_41040;
                            
                            if (x_41033) {
                                defunc_1_op_res_41039 = x_41033;
                                defunc_1_op_res_41040 = x_41034;
                            } else {
                                bool x_41041 = x_41036 && x_41036;
                                bool x_41042 = !x_41036;
                                bool y_41043 = x_41033 && x_41042;
                                bool defunc_1_op_res_f_res_41044 = x_41041 ||
                                     y_41043;
                                int32_t defunc_1_op_res_f_res_41045;
                                
                                if (x_41036) {
                                    defunc_1_op_res_f_res_41045 = x_41037;
                                } else {
                                    defunc_1_op_res_f_res_41045 = x_41034;
                                }
                                defunc_1_op_res_41039 =
                                    defunc_1_op_res_f_res_41044;
                                defunc_1_op_res_41040 =
                                    defunc_1_op_res_f_res_41045;
                            }
                            
                            float defunc_1_op_res_41046 = x_41035 + x_41038;
                            
                            x_41033 = defunc_1_op_res_41039;
                            x_41034 = defunc_1_op_res_41040;
                            x_41035 = defunc_1_op_res_41046;
                        }
                    }
                }
                ((__local
                  bool *) red_arr_mem_45418)[sext_i32_i64(local_tid_45414)] =
                    x_41033;
                ((__local
                  int32_t *) red_arr_mem_45420)[sext_i32_i64(local_tid_45414)] =
                    x_41034;
                ((__local
                  float *) red_arr_mem_45422)[sext_i32_i64(local_tid_45414)] =
                    x_41035;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45460;
                    int32_t skip_waves_45461;
                    
                    skip_waves_45461 = 1;
                    
                    bool x_45437;
                    int32_t x_45438;
                    float x_45439;
                    bool x_45440;
                    int32_t x_45441;
                    float x_45442;
                    
                    offset_45460 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45414,
                                  sext_i64_i32(segred_group_sizze_41027))) {
                            x_45437 = ((__local
                                        bool *) red_arr_mem_45418)[sext_i32_i64(local_tid_45414 +
                                                                   offset_45460)];
                            x_45438 = ((__local
                                        int32_t *) red_arr_mem_45420)[sext_i32_i64(local_tid_45414 +
                                                                      offset_45460)];
                            x_45439 = ((__local
                                        float *) red_arr_mem_45422)[sext_i32_i64(local_tid_45414 +
                                                                    offset_45460)];
                        }
                    }
                    offset_45460 = 1;
                    while (slt32(offset_45460, wave_sizze_45416)) {
                        if (slt32(local_tid_45414 + offset_45460,
                                  sext_i64_i32(segred_group_sizze_41027)) &&
                            ((local_tid_45414 - squot32(local_tid_45414,
                                                        wave_sizze_45416) *
                              wave_sizze_45416) & (2 * offset_45460 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45440 = ((volatile __local
                                            bool *) red_arr_mem_45418)[sext_i32_i64(local_tid_45414 +
                                                                       offset_45460)];
                                x_45441 = ((volatile __local
                                            int32_t *) red_arr_mem_45420)[sext_i32_i64(local_tid_45414 +
                                                                          offset_45460)];
                                x_45442 = ((volatile __local
                                            float *) red_arr_mem_45422)[sext_i32_i64(local_tid_45414 +
                                                                        offset_45460)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_45443;
                                int32_t defunc_1_op_res_45444;
                                
                                if (x_45437) {
                                    defunc_1_op_res_45443 = x_45437;
                                    defunc_1_op_res_45444 = x_45438;
                                } else {
                                    bool x_45445 = x_45440 && x_45440;
                                    bool x_45446 = !x_45440;
                                    bool y_45447 = x_45437 && x_45446;
                                    bool defunc_1_op_res_f_res_45448 =
                                         x_45445 || y_45447;
                                    int32_t defunc_1_op_res_f_res_45449;
                                    
                                    if (x_45440) {
                                        defunc_1_op_res_f_res_45449 = x_45441;
                                    } else {
                                        defunc_1_op_res_f_res_45449 = x_45438;
                                    }
                                    defunc_1_op_res_45443 =
                                        defunc_1_op_res_f_res_45448;
                                    defunc_1_op_res_45444 =
                                        defunc_1_op_res_f_res_45449;
                                }
                                
                                float defunc_1_op_res_45450 = x_45439 + x_45442;
                                
                                x_45437 = defunc_1_op_res_45443;
                                x_45438 = defunc_1_op_res_45444;
                                x_45439 = defunc_1_op_res_45450;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_45418)[sext_i32_i64(local_tid_45414)] =
                                    x_45437;
                                ((volatile __local
                                  int32_t *) red_arr_mem_45420)[sext_i32_i64(local_tid_45414)] =
                                    x_45438;
                                ((volatile __local
                                  float *) red_arr_mem_45422)[sext_i32_i64(local_tid_45414)] =
                                    x_45439;
                            }
                        }
                        offset_45460 *= 2;
                    }
                    while (slt32(skip_waves_45461,
                                 squot32(sext_i64_i32(segred_group_sizze_41027) +
                                         wave_sizze_45416 - 1,
                                         wave_sizze_45416))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45460 = skip_waves_45461 * wave_sizze_45416;
                        if (slt32(local_tid_45414 + offset_45460,
                                  sext_i64_i32(segred_group_sizze_41027)) &&
                            ((local_tid_45414 - squot32(local_tid_45414,
                                                        wave_sizze_45416) *
                              wave_sizze_45416) == 0 &&
                             (squot32(local_tid_45414, wave_sizze_45416) & (2 *
                                                                            skip_waves_45461 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45440 = ((__local
                                            bool *) red_arr_mem_45418)[sext_i32_i64(local_tid_45414 +
                                                                       offset_45460)];
                                x_45441 = ((__local
                                            int32_t *) red_arr_mem_45420)[sext_i32_i64(local_tid_45414 +
                                                                          offset_45460)];
                                x_45442 = ((__local
                                            float *) red_arr_mem_45422)[sext_i32_i64(local_tid_45414 +
                                                                        offset_45460)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_45443;
                                int32_t defunc_1_op_res_45444;
                                
                                if (x_45437) {
                                    defunc_1_op_res_45443 = x_45437;
                                    defunc_1_op_res_45444 = x_45438;
                                } else {
                                    bool x_45445 = x_45440 && x_45440;
                                    bool x_45446 = !x_45440;
                                    bool y_45447 = x_45437 && x_45446;
                                    bool defunc_1_op_res_f_res_45448 =
                                         x_45445 || y_45447;
                                    int32_t defunc_1_op_res_f_res_45449;
                                    
                                    if (x_45440) {
                                        defunc_1_op_res_f_res_45449 = x_45441;
                                    } else {
                                        defunc_1_op_res_f_res_45449 = x_45438;
                                    }
                                    defunc_1_op_res_45443 =
                                        defunc_1_op_res_f_res_45448;
                                    defunc_1_op_res_45444 =
                                        defunc_1_op_res_f_res_45449;
                                }
                                
                                float defunc_1_op_res_45450 = x_45439 + x_45442;
                                
                                x_45437 = defunc_1_op_res_45443;
                                x_45438 = defunc_1_op_res_45444;
                                x_45439 = defunc_1_op_res_45450;
                            }
                            // write result of operation
                            {
                                ((__local
                                  bool *) red_arr_mem_45418)[sext_i32_i64(local_tid_45414)] =
                                    x_45437;
                                ((__local
                                  int32_t *) red_arr_mem_45420)[sext_i32_i64(local_tid_45414)] =
                                    x_45438;
                                ((__local
                                  float *) red_arr_mem_45422)[sext_i32_i64(local_tid_45414)] =
                                    x_45439;
                            }
                        }
                        skip_waves_45461 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45414 == 0) {
                            ((__global bool *) mem_44043)[gtid_40848] = x_45437;
                            ((__global int32_t *) mem_44045)[gtid_40848] =
                                x_45438;
                            ((__global float *) mem_44047)[gtid_40848] =
                                x_45439;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_41027
}
__kernel void mainzisegred_nonseg_40274(__global int *global_failure,
                                        __local volatile
                                        int64_t *red_arr_mem_45177_backing_aligned_0,
                                        __local volatile
                                        int64_t *sync_arr_mem_45175_backing_aligned_1,
                                        int64_t m_29116,
                                        int64_t num_groups_40269, __global
                                        unsigned char *defunc_3_map_res_mem_43982,
                                        __global unsigned char *mem_43987,
                                        __global
                                        unsigned char *mainzicounter_mem_45165,
                                        __global
                                        unsigned char *group_res_arr_mem_45167,
                                        int64_t num_threads_45169)
{
    #define segred_group_sizze_40267 (mainzisegred_group_sizze_40266)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45177_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45177_backing_aligned_0;
    __local volatile char *restrict sync_arr_mem_45175_backing_0 =
                          (__local volatile
                           char *) sync_arr_mem_45175_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45170;
    int32_t local_tid_45171;
    int64_t group_sizze_45174;
    int32_t wave_sizze_45173;
    int32_t group_tid_45172;
    
    global_tid_45170 = get_global_id(0);
    local_tid_45171 = get_local_id(0);
    group_sizze_45174 = get_local_size(0);
    wave_sizze_45173 = LOCKSTEP_WIDTH;
    group_tid_45172 = get_group_id(0);
    
    int32_t phys_tid_40274;
    
    phys_tid_40274 = global_tid_45170;
    
    __local char *sync_arr_mem_45175;
    
    sync_arr_mem_45175 = (__local char *) sync_arr_mem_45175_backing_0;
    
    __local char *red_arr_mem_45177;
    
    red_arr_mem_45177 = (__local char *) red_arr_mem_45177_backing_1;
    
    int64_t dummy_40272;
    
    dummy_40272 = 0;
    
    int64_t gtid_40273;
    
    gtid_40273 = 0;
    
    int32_t x_acc_45179;
    int64_t chunk_sizze_45180;
    
    chunk_sizze_45180 = smin64(sdiv_up64(m_29116,
                                         sext_i32_i64(sext_i64_i32(segred_group_sizze_40267 *
                                         num_groups_40269))),
                               sdiv_up64(m_29116 - sext_i32_i64(phys_tid_40274),
                                         num_threads_45169));
    
    int32_t x_29486;
    int32_t x_29487;
    
    // neutral-initialise the accumulators
    {
        x_acc_45179 = 0;
    }
    for (int64_t i_45184 = 0; i_45184 < chunk_sizze_45180; i_45184++) {
        gtid_40273 = sext_i32_i64(phys_tid_40274) + num_threads_45169 * i_45184;
        // apply map function
        {
            int32_t x_29489 = ((__global
                                int32_t *) defunc_3_map_res_mem_43982)[gtid_40273];
            
            // save map-out results
            { }
            // load accumulator
            {
                x_29486 = x_acc_45179;
            }
            // load new values
            {
                x_29487 = x_29489;
            }
            // apply reduction operator
            {
                int32_t defunc_1_op_res_29488 = smax32(x_29486, x_29487);
                
                // store in accumulator
                {
                    x_acc_45179 = defunc_1_op_res_29488;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_29486 = x_acc_45179;
        ((__local int32_t *) red_arr_mem_45177)[sext_i32_i64(local_tid_45171)] =
            x_29486;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45185;
    int32_t skip_waves_45186;
    
    skip_waves_45186 = 1;
    
    int32_t x_45181;
    int32_t x_45182;
    
    offset_45185 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45171, sext_i64_i32(segred_group_sizze_40267))) {
            x_45181 = ((__local
                        int32_t *) red_arr_mem_45177)[sext_i32_i64(local_tid_45171 +
                                                      offset_45185)];
        }
    }
    offset_45185 = 1;
    while (slt32(offset_45185, wave_sizze_45173)) {
        if (slt32(local_tid_45171 + offset_45185,
                  sext_i64_i32(segred_group_sizze_40267)) && ((local_tid_45171 -
                                                               squot32(local_tid_45171,
                                                                       wave_sizze_45173) *
                                                               wave_sizze_45173) &
                                                              (2 *
                                                               offset_45185 -
                                                               1)) == 0) {
            // read array element
            {
                x_45182 = ((volatile __local
                            int32_t *) red_arr_mem_45177)[sext_i32_i64(local_tid_45171 +
                                                          offset_45185)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_45183 = smax32(x_45181, x_45182);
                
                x_45181 = defunc_1_op_res_45183;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_45177)[sext_i32_i64(local_tid_45171)] =
                    x_45181;
            }
        }
        offset_45185 *= 2;
    }
    while (slt32(skip_waves_45186,
                 squot32(sext_i64_i32(segred_group_sizze_40267) +
                         wave_sizze_45173 - 1, wave_sizze_45173))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45185 = skip_waves_45186 * wave_sizze_45173;
        if (slt32(local_tid_45171 + offset_45185,
                  sext_i64_i32(segred_group_sizze_40267)) && ((local_tid_45171 -
                                                               squot32(local_tid_45171,
                                                                       wave_sizze_45173) *
                                                               wave_sizze_45173) ==
                                                              0 &&
                                                              (squot32(local_tid_45171,
                                                                       wave_sizze_45173) &
                                                               (2 *
                                                                skip_waves_45186 -
                                                                1)) == 0)) {
            // read array element
            {
                x_45182 = ((__local
                            int32_t *) red_arr_mem_45177)[sext_i32_i64(local_tid_45171 +
                                                          offset_45185)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_45183 = smax32(x_45181, x_45182);
                
                x_45181 = defunc_1_op_res_45183;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_45177)[sext_i32_i64(local_tid_45171)] =
                    x_45181;
            }
        }
        skip_waves_45186 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_45171) == 0) {
            x_acc_45179 = x_45181;
        }
    }
    
    int32_t old_counter_45187;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_45171 == 0) {
            ((__global
              int32_t *) group_res_arr_mem_45167)[sext_i32_i64(group_tid_45172) *
                                                  segred_group_sizze_40267] =
                x_acc_45179;
            mem_fence_global();
            old_counter_45187 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainzicounter_mem_45165)[0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_45175)[0] = old_counter_45187 ==
                num_groups_40269 - 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_45188;
    
    is_last_group_45188 = ((__local bool *) sync_arr_mem_45175)[0];
    if (is_last_group_45188) {
        if (local_tid_45171 == 0) {
            old_counter_45187 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainzicounter_mem_45165)[0],
                                                      (int) (0 -
                                                             num_groups_40269));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_45189 = sdiv_up64(num_groups_40269,
                                                      segred_group_sizze_40267);
            
            x_29486 = 0;
            for (int64_t i_45190 = 0; i_45190 < read_per_thread_45189;
                 i_45190++) {
                int64_t group_res_id_45191 = sext_i32_i64(local_tid_45171) *
                        read_per_thread_45189 + i_45190;
                int64_t index_of_group_res_45192 = group_res_id_45191;
                
                if (slt64(group_res_id_45191, num_groups_40269)) {
                    x_29487 = ((__global
                                int32_t *) group_res_arr_mem_45167)[index_of_group_res_45192 *
                                                                    segred_group_sizze_40267];
                    
                    int32_t defunc_1_op_res_29488;
                    
                    defunc_1_op_res_29488 = smax32(x_29486, x_29487);
                    x_29486 = defunc_1_op_res_29488;
                }
            }
        }
        ((__local int32_t *) red_arr_mem_45177)[sext_i32_i64(local_tid_45171)] =
            x_29486;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_45193;
            int32_t skip_waves_45194;
            
            skip_waves_45194 = 1;
            
            int32_t x_45181;
            int32_t x_45182;
            
            offset_45193 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_45171,
                          sext_i64_i32(segred_group_sizze_40267))) {
                    x_45181 = ((__local
                                int32_t *) red_arr_mem_45177)[sext_i32_i64(local_tid_45171 +
                                                              offset_45193)];
                }
            }
            offset_45193 = 1;
            while (slt32(offset_45193, wave_sizze_45173)) {
                if (slt32(local_tid_45171 + offset_45193,
                          sext_i64_i32(segred_group_sizze_40267)) &&
                    ((local_tid_45171 - squot32(local_tid_45171,
                                                wave_sizze_45173) *
                      wave_sizze_45173) & (2 * offset_45193 - 1)) == 0) {
                    // read array element
                    {
                        x_45182 = ((volatile __local
                                    int32_t *) red_arr_mem_45177)[sext_i32_i64(local_tid_45171 +
                                                                  offset_45193)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_45183 = smax32(x_45181,
                                                               x_45182);
                        
                        x_45181 = defunc_1_op_res_45183;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          int32_t *) red_arr_mem_45177)[sext_i32_i64(local_tid_45171)] =
                            x_45181;
                    }
                }
                offset_45193 *= 2;
            }
            while (slt32(skip_waves_45194,
                         squot32(sext_i64_i32(segred_group_sizze_40267) +
                                 wave_sizze_45173 - 1, wave_sizze_45173))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_45193 = skip_waves_45194 * wave_sizze_45173;
                if (slt32(local_tid_45171 + offset_45193,
                          sext_i64_i32(segred_group_sizze_40267)) &&
                    ((local_tid_45171 - squot32(local_tid_45171,
                                                wave_sizze_45173) *
                      wave_sizze_45173) == 0 && (squot32(local_tid_45171,
                                                         wave_sizze_45173) &
                                                 (2 * skip_waves_45194 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_45182 = ((__local
                                    int32_t *) red_arr_mem_45177)[sext_i32_i64(local_tid_45171 +
                                                                  offset_45193)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_45183 = smax32(x_45181,
                                                               x_45182);
                        
                        x_45181 = defunc_1_op_res_45183;
                    }
                    // write result of operation
                    {
                        ((__local
                          int32_t *) red_arr_mem_45177)[sext_i32_i64(local_tid_45171)] =
                            x_45181;
                    }
                }
                skip_waves_45194 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_45171 == 0) {
                    ((__global int32_t *) mem_43987)[0] = x_45181;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40267
}
__kernel void mainzisegred_small_38304(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44434_backing_aligned_0,
                                       int64_t N_29115, int64_t m_29116,
                                       int64_t N_29117, int64_t i32_res_29129,
                                       int64_t i32_res_29135,
                                       int64_t num_groups_38443, __global
                                       unsigned char *images_mem_43123, __global
                                       unsigned char *binop_p_mem_43132,
                                       __global unsigned char *mem_43273,
                                       __global unsigned char *mem_43278,
                                       int64_t segment_sizze_nonzzero_44427)
{
    #define segred_group_sizze_38442 (mainzisegred_group_sizze_38298)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44434_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44434_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44429;
    int32_t local_tid_44430;
    int64_t group_sizze_44433;
    int32_t wave_sizze_44432;
    int32_t group_tid_44431;
    
    global_tid_44429 = get_global_id(0);
    local_tid_44430 = get_local_id(0);
    group_sizze_44433 = get_local_size(0);
    wave_sizze_44432 = LOCKSTEP_WIDTH;
    group_tid_44431 = get_group_id(0);
    
    int32_t phys_tid_38304;
    
    phys_tid_38304 = global_tid_44429;
    
    __local char *red_arr_mem_44434;
    
    red_arr_mem_44434 = (__local char *) red_arr_mem_44434_backing_0;
    
    int32_t phys_group_id_44436;
    
    phys_group_id_44436 = get_group_id(0);
    for (int32_t i_44437 = 0; i_44437 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29116 * i32_res_29135 *
                                          i32_res_29135,
                                          squot64(segred_group_sizze_38442,
                                                  segment_sizze_nonzzero_44427))) -
                   phys_group_id_44436, sext_i64_i32(num_groups_38443));
         i_44437++) {
        int32_t virt_group_id_44438 = phys_group_id_44436 + i_44437 *
                sext_i64_i32(num_groups_38443);
        int64_t gtid_38291 = squot64(squot64(sext_i32_i64(local_tid_44430),
                                             segment_sizze_nonzzero_44427) +
                                     sext_i32_i64(virt_group_id_44438) *
                                     squot64(segred_group_sizze_38442,
                                             segment_sizze_nonzzero_44427),
                                     i32_res_29135 * i32_res_29135);
        int64_t gtid_38292 = squot64(squot64(sext_i32_i64(local_tid_44430),
                                             segment_sizze_nonzzero_44427) +
                                     sext_i32_i64(virt_group_id_44438) *
                                     squot64(segred_group_sizze_38442,
                                             segment_sizze_nonzzero_44427) -
                                     squot64(squot64(sext_i32_i64(local_tid_44430),
                                                     segment_sizze_nonzzero_44427) +
                                             sext_i32_i64(virt_group_id_44438) *
                                             squot64(segred_group_sizze_38442,
                                                     segment_sizze_nonzzero_44427),
                                             i32_res_29135 * i32_res_29135) *
                                     (i32_res_29135 * i32_res_29135),
                                     i32_res_29135);
        int64_t gtid_38293 = squot64(sext_i32_i64(local_tid_44430),
                                     segment_sizze_nonzzero_44427) +
                sext_i32_i64(virt_group_id_44438) *
                squot64(segred_group_sizze_38442,
                        segment_sizze_nonzzero_44427) -
                squot64(squot64(sext_i32_i64(local_tid_44430),
                                segment_sizze_nonzzero_44427) +
                        sext_i32_i64(virt_group_id_44438) *
                        squot64(segred_group_sizze_38442,
                                segment_sizze_nonzzero_44427), i32_res_29135 *
                        i32_res_29135) * (i32_res_29135 * i32_res_29135) -
                squot64(squot64(sext_i32_i64(local_tid_44430),
                                segment_sizze_nonzzero_44427) +
                        sext_i32_i64(virt_group_id_44438) *
                        squot64(segred_group_sizze_38442,
                                segment_sizze_nonzzero_44427) -
                        squot64(squot64(sext_i32_i64(local_tid_44430),
                                        segment_sizze_nonzzero_44427) +
                                sext_i32_i64(virt_group_id_44438) *
                                squot64(segred_group_sizze_38442,
                                        segment_sizze_nonzzero_44427),
                                i32_res_29135 * i32_res_29135) *
                        (i32_res_29135 * i32_res_29135), i32_res_29135) *
                i32_res_29135;
        int64_t gtid_38303 = srem64(sext_i32_i64(local_tid_44430),
                                    i32_res_29129);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_29129) && (((slt64(gtid_38291, m_29116) &&
                                              slt64(gtid_38292,
                                                    i32_res_29135)) &&
                                             slt64(gtid_38293,
                                                   i32_res_29135)) &&
                                            slt64(sext_i32_i64(local_tid_44430),
                                                  i32_res_29129 *
                                                  squot64(segred_group_sizze_38442,
                                                          segment_sizze_nonzzero_44427)))) {
                float x_38452 = ((__global
                                  float *) images_mem_43123)[gtid_38291 *
                                                             N_29117 +
                                                             gtid_38303];
                float x_38453 = ((__global
                                  float *) binop_p_mem_43132)[gtid_38292 *
                                                              N_29115 +
                                                              gtid_38303];
                float x_38454 = ((__global float *) mem_43273)[gtid_38293 *
                                                               N_29115 +
                                                               gtid_38303];
                float x_38455 = x_38453 * x_38454;
                bool isnan_res_38456;
                
                isnan_res_38456 = futrts_isnan32(x_38452);
                
                float y_38457;
                
                if (isnan_res_38456) {
                    y_38457 = 0.0F;
                } else {
                    y_38457 = 1.0F;
                }
                
                float defunc_2_f_res_38458 = x_38455 * y_38457;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44434)[sext_i32_i64(local_tid_44430)] =
                        defunc_2_f_res_38458;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44434)[sext_i32_i64(local_tid_44430)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_29129)) {
            // perform segmented scan to imitate reduction
            {
                float x_38446;
                float x_38447;
                float x_44439;
                float x_44440;
                bool ltid_in_bounds_44442;
                
                ltid_in_bounds_44442 = slt64(sext_i32_i64(local_tid_44430),
                                             i32_res_29129 *
                                             squot64(segred_group_sizze_38442,
                                                     segment_sizze_nonzzero_44427));
                
                int32_t skip_threads_44443;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44442) {
                        x_38447 = ((volatile __local
                                    float *) red_arr_mem_44434)[sext_i32_i64(local_tid_44430)];
                        if ((local_tid_44430 - squot32(local_tid_44430, 32) *
                             32) == 0) {
                            x_38446 = x_38447;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44443 = 1;
                    while (slt32(skip_threads_44443, 32)) {
                        if (sle32(skip_threads_44443, local_tid_44430 -
                                  squot32(local_tid_44430, 32) * 32) &&
                            ltid_in_bounds_44442) {
                            // read operands
                            {
                                x_38446 = ((volatile __local
                                            float *) red_arr_mem_44434)[sext_i32_i64(local_tid_44430) -
                                                                        sext_i32_i64(skip_threads_44443)];
                            }
                            // perform operation
                            {
                                bool inactive_44444 =
                                     slt64(srem64(sext_i32_i64(local_tid_44430),
                                                  i32_res_29129),
                                           sext_i32_i64(local_tid_44430) -
                                           sext_i32_i64(local_tid_44430 -
                                           skip_threads_44443));
                                
                                if (inactive_44444) {
                                    x_38446 = x_38447;
                                }
                                if (!inactive_44444) {
                                    float defunc_1_op_res_38448 = x_38446 +
                                          x_38447;
                                    
                                    x_38446 = defunc_1_op_res_38448;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44432, skip_threads_44443)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44443, local_tid_44430 -
                                  squot32(local_tid_44430, 32) * 32) &&
                            ltid_in_bounds_44442) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44434)[sext_i32_i64(local_tid_44430)] =
                                    x_38446;
                                x_38447 = x_38446;
                            }
                        }
                        if (sle32(wave_sizze_44432, skip_threads_44443)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44443 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44430 - squot32(local_tid_44430, 32) * 32) ==
                        31 && ltid_in_bounds_44442) {
                        ((volatile __local
                          float *) red_arr_mem_44434)[sext_i32_i64(squot32(local_tid_44430,
                                                                           32))] =
                            x_38446;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44445;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44430, 32) == 0 &&
                            ltid_in_bounds_44442) {
                            x_44440 = ((volatile __local
                                        float *) red_arr_mem_44434)[sext_i32_i64(local_tid_44430)];
                            if ((local_tid_44430 - squot32(local_tid_44430,
                                                           32) * 32) == 0) {
                                x_44439 = x_44440;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44445 = 1;
                        while (slt32(skip_threads_44445, 32)) {
                            if (sle32(skip_threads_44445, local_tid_44430 -
                                      squot32(local_tid_44430, 32) * 32) &&
                                (squot32(local_tid_44430, 32) == 0 &&
                                 ltid_in_bounds_44442)) {
                                // read operands
                                {
                                    x_44439 = ((volatile __local
                                                float *) red_arr_mem_44434)[sext_i32_i64(local_tid_44430) -
                                                                            sext_i32_i64(skip_threads_44445)];
                                }
                                // perform operation
                                {
                                    bool inactive_44446 =
                                         slt64(srem64(sext_i32_i64(local_tid_44430 *
                                                      32 + 32 - 1),
                                                      i32_res_29129),
                                               sext_i32_i64(local_tid_44430 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44430 -
                                                             skip_threads_44445) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44446) {
                                        x_44439 = x_44440;
                                    }
                                    if (!inactive_44446) {
                                        float defunc_1_op_res_44441 = x_44439 +
                                              x_44440;
                                        
                                        x_44439 = defunc_1_op_res_44441;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44432, skip_threads_44445)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44445, local_tid_44430 -
                                      squot32(local_tid_44430, 32) * 32) &&
                                (squot32(local_tid_44430, 32) == 0 &&
                                 ltid_in_bounds_44442)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44434)[sext_i32_i64(local_tid_44430)] =
                                        x_44439;
                                    x_44440 = x_44439;
                                }
                            }
                            if (sle32(wave_sizze_44432, skip_threads_44445)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44445 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44430, 32) == 0 ||
                          !ltid_in_bounds_44442)) {
                        // read operands
                        {
                            x_38447 = x_38446;
                            x_38446 = ((__local
                                        float *) red_arr_mem_44434)[sext_i32_i64(squot32(local_tid_44430,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_44447 =
                                 slt64(srem64(sext_i32_i64(local_tid_44430),
                                              i32_res_29129),
                                       sext_i32_i64(local_tid_44430) -
                                       sext_i32_i64(squot32(local_tid_44430,
                                                            32) * 32 - 1));
                            
                            if (inactive_44447) {
                                x_38446 = x_38447;
                            }
                            if (!inactive_44447) {
                                float defunc_1_op_res_38448 = x_38446 + x_38447;
                                
                                x_38446 = defunc_1_op_res_38448;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44434)[sext_i32_i64(local_tid_44430)] =
                                x_38446;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44430, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44434)[sext_i32_i64(local_tid_44430)] =
                            x_38447;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44438) *
                      squot64(segred_group_sizze_38442,
                              segment_sizze_nonzzero_44427) +
                      sext_i32_i64(local_tid_44430), m_29116 * i32_res_29135 *
                      i32_res_29135) && slt64(sext_i32_i64(local_tid_44430),
                                              squot64(segred_group_sizze_38442,
                                                      segment_sizze_nonzzero_44427))) {
                ((__global
                  float *) mem_43278)[squot64(sext_i32_i64(virt_group_id_44438) *
                                              squot64(segred_group_sizze_38442,
                                                      segment_sizze_nonzzero_44427) +
                                              sext_i32_i64(local_tid_44430),
                                              i32_res_29135 * i32_res_29135) *
                                      (i32_res_29135 * i32_res_29135) +
                                      squot64(sext_i32_i64(virt_group_id_44438) *
                                              squot64(segred_group_sizze_38442,
                                                      segment_sizze_nonzzero_44427) +
                                              sext_i32_i64(local_tid_44430) -
                                              squot64(sext_i32_i64(virt_group_id_44438) *
                                                      squot64(segred_group_sizze_38442,
                                                              segment_sizze_nonzzero_44427) +
                                                      sext_i32_i64(local_tid_44430),
                                                      i32_res_29135 *
                                                      i32_res_29135) *
                                              (i32_res_29135 * i32_res_29135),
                                              i32_res_29135) * i32_res_29135 +
                                      (sext_i32_i64(virt_group_id_44438) *
                                       squot64(segred_group_sizze_38442,
                                               segment_sizze_nonzzero_44427) +
                                       sext_i32_i64(local_tid_44430) -
                                       squot64(sext_i32_i64(virt_group_id_44438) *
                                               squot64(segred_group_sizze_38442,
                                                       segment_sizze_nonzzero_44427) +
                                               sext_i32_i64(local_tid_44430),
                                               i32_res_29135 * i32_res_29135) *
                                       (i32_res_29135 * i32_res_29135) -
                                       squot64(sext_i32_i64(virt_group_id_44438) *
                                               squot64(segred_group_sizze_38442,
                                                       segment_sizze_nonzzero_44427) +
                                               sext_i32_i64(local_tid_44430) -
                                               squot64(sext_i32_i64(virt_group_id_44438) *
                                                       squot64(segred_group_sizze_38442,
                                                               segment_sizze_nonzzero_44427) +
                                                       sext_i32_i64(local_tid_44430),
                                                       i32_res_29135 *
                                                       i32_res_29135) *
                                               (i32_res_29135 * i32_res_29135),
                                               i32_res_29135) *
                                       i32_res_29135)] = ((__local
                                                           float *) red_arr_mem_44434)[(sext_i32_i64(local_tid_44430) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_44427 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38442
}
__kernel void mainzisegred_small_39351(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44630_backing_aligned_0,
                                       int64_t N_29115, int64_t m_29116,
                                       int64_t N_29117, int64_t i32_res_29129,
                                       int64_t i32_res_29135,
                                       int64_t num_groups_39404, __global
                                       unsigned char *images_mem_43123, __global
                                       unsigned char *binop_p_mem_43132,
                                       __global unsigned char *mem_43585,
                                       int64_t segment_sizze_nonzzero_44623)
{
    #define segred_group_sizze_39403 (mainzisegred_group_sizze_39345)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44630_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44630_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44625;
    int32_t local_tid_44626;
    int64_t group_sizze_44629;
    int32_t wave_sizze_44628;
    int32_t group_tid_44627;
    
    global_tid_44625 = get_global_id(0);
    local_tid_44626 = get_local_id(0);
    group_sizze_44629 = get_local_size(0);
    wave_sizze_44628 = LOCKSTEP_WIDTH;
    group_tid_44627 = get_group_id(0);
    
    int32_t phys_tid_39351;
    
    phys_tid_39351 = global_tid_44625;
    
    __local char *red_arr_mem_44630;
    
    red_arr_mem_44630 = (__local char *) red_arr_mem_44630_backing_0;
    
    int32_t phys_group_id_44632;
    
    phys_group_id_44632 = get_group_id(0);
    for (int32_t i_44633 = 0; i_44633 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29116 * i32_res_29135,
                                          squot64(segred_group_sizze_39403,
                                                  segment_sizze_nonzzero_44623))) -
                   phys_group_id_44632, sext_i64_i32(num_groups_39404));
         i_44633++) {
        int32_t virt_group_id_44634 = phys_group_id_44632 + i_44633 *
                sext_i64_i32(num_groups_39404);
        int64_t gtid_39340 = squot64(squot64(sext_i32_i64(local_tid_44626),
                                             segment_sizze_nonzzero_44623) +
                                     sext_i32_i64(virt_group_id_44634) *
                                     squot64(segred_group_sizze_39403,
                                             segment_sizze_nonzzero_44623),
                                     i32_res_29135);
        int64_t gtid_39341 = squot64(sext_i32_i64(local_tid_44626),
                                     segment_sizze_nonzzero_44623) +
                sext_i32_i64(virt_group_id_44634) *
                squot64(segred_group_sizze_39403,
                        segment_sizze_nonzzero_44623) -
                squot64(squot64(sext_i32_i64(local_tid_44626),
                                segment_sizze_nonzzero_44623) +
                        sext_i32_i64(virt_group_id_44634) *
                        squot64(segred_group_sizze_39403,
                                segment_sizze_nonzzero_44623), i32_res_29135) *
                i32_res_29135;
        int64_t gtid_39350 = srem64(sext_i32_i64(local_tid_44626),
                                    i32_res_29129);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_29129) && ((slt64(gtid_39340, m_29116) &&
                                             slt64(gtid_39341,
                                                   i32_res_29135)) &&
                                            slt64(sext_i32_i64(local_tid_44626),
                                                  i32_res_29129 *
                                                  squot64(segred_group_sizze_39403,
                                                          segment_sizze_nonzzero_44623)))) {
                float x_39413 = ((__global
                                  float *) images_mem_43123)[gtid_39340 *
                                                             N_29117 +
                                                             gtid_39350];
                bool isnan_res_39414;
                
                isnan_res_39414 = futrts_isnan32(x_39413);
                
                float defunc_1_f_res_39415;
                
                if (isnan_res_39414) {
                    defunc_1_f_res_39415 = 0.0F;
                } else {
                    float x_39412 = ((__global
                                      float *) binop_p_mem_43132)[gtid_39341 *
                                                                  N_29115 +
                                                                  gtid_39350];
                    float defunc_1_f_res_f_res_39416 = x_39412 * x_39413;
                    
                    defunc_1_f_res_39415 = defunc_1_f_res_f_res_39416;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44630)[sext_i32_i64(local_tid_44626)] =
                        defunc_1_f_res_39415;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44630)[sext_i32_i64(local_tid_44626)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_29129)) {
            // perform segmented scan to imitate reduction
            {
                float x_39407;
                float x_39408;
                float x_44635;
                float x_44636;
                bool ltid_in_bounds_44638;
                
                ltid_in_bounds_44638 = slt64(sext_i32_i64(local_tid_44626),
                                             i32_res_29129 *
                                             squot64(segred_group_sizze_39403,
                                                     segment_sizze_nonzzero_44623));
                
                int32_t skip_threads_44639;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44638) {
                        x_39408 = ((volatile __local
                                    float *) red_arr_mem_44630)[sext_i32_i64(local_tid_44626)];
                        if ((local_tid_44626 - squot32(local_tid_44626, 32) *
                             32) == 0) {
                            x_39407 = x_39408;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44639 = 1;
                    while (slt32(skip_threads_44639, 32)) {
                        if (sle32(skip_threads_44639, local_tid_44626 -
                                  squot32(local_tid_44626, 32) * 32) &&
                            ltid_in_bounds_44638) {
                            // read operands
                            {
                                x_39407 = ((volatile __local
                                            float *) red_arr_mem_44630)[sext_i32_i64(local_tid_44626) -
                                                                        sext_i32_i64(skip_threads_44639)];
                            }
                            // perform operation
                            {
                                bool inactive_44640 =
                                     slt64(srem64(sext_i32_i64(local_tid_44626),
                                                  i32_res_29129),
                                           sext_i32_i64(local_tid_44626) -
                                           sext_i32_i64(local_tid_44626 -
                                           skip_threads_44639));
                                
                                if (inactive_44640) {
                                    x_39407 = x_39408;
                                }
                                if (!inactive_44640) {
                                    float defunc_1_op_res_39409 = x_39407 +
                                          x_39408;
                                    
                                    x_39407 = defunc_1_op_res_39409;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44628, skip_threads_44639)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44639, local_tid_44626 -
                                  squot32(local_tid_44626, 32) * 32) &&
                            ltid_in_bounds_44638) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44630)[sext_i32_i64(local_tid_44626)] =
                                    x_39407;
                                x_39408 = x_39407;
                            }
                        }
                        if (sle32(wave_sizze_44628, skip_threads_44639)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44639 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44626 - squot32(local_tid_44626, 32) * 32) ==
                        31 && ltid_in_bounds_44638) {
                        ((volatile __local
                          float *) red_arr_mem_44630)[sext_i32_i64(squot32(local_tid_44626,
                                                                           32))] =
                            x_39407;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44641;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44626, 32) == 0 &&
                            ltid_in_bounds_44638) {
                            x_44636 = ((volatile __local
                                        float *) red_arr_mem_44630)[sext_i32_i64(local_tid_44626)];
                            if ((local_tid_44626 - squot32(local_tid_44626,
                                                           32) * 32) == 0) {
                                x_44635 = x_44636;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44641 = 1;
                        while (slt32(skip_threads_44641, 32)) {
                            if (sle32(skip_threads_44641, local_tid_44626 -
                                      squot32(local_tid_44626, 32) * 32) &&
                                (squot32(local_tid_44626, 32) == 0 &&
                                 ltid_in_bounds_44638)) {
                                // read operands
                                {
                                    x_44635 = ((volatile __local
                                                float *) red_arr_mem_44630)[sext_i32_i64(local_tid_44626) -
                                                                            sext_i32_i64(skip_threads_44641)];
                                }
                                // perform operation
                                {
                                    bool inactive_44642 =
                                         slt64(srem64(sext_i32_i64(local_tid_44626 *
                                                      32 + 32 - 1),
                                                      i32_res_29129),
                                               sext_i32_i64(local_tid_44626 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44626 -
                                                             skip_threads_44641) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44642) {
                                        x_44635 = x_44636;
                                    }
                                    if (!inactive_44642) {
                                        float defunc_1_op_res_44637 = x_44635 +
                                              x_44636;
                                        
                                        x_44635 = defunc_1_op_res_44637;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44628, skip_threads_44641)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44641, local_tid_44626 -
                                      squot32(local_tid_44626, 32) * 32) &&
                                (squot32(local_tid_44626, 32) == 0 &&
                                 ltid_in_bounds_44638)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44630)[sext_i32_i64(local_tid_44626)] =
                                        x_44635;
                                    x_44636 = x_44635;
                                }
                            }
                            if (sle32(wave_sizze_44628, skip_threads_44641)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44641 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44626, 32) == 0 ||
                          !ltid_in_bounds_44638)) {
                        // read operands
                        {
                            x_39408 = x_39407;
                            x_39407 = ((__local
                                        float *) red_arr_mem_44630)[sext_i32_i64(squot32(local_tid_44626,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_44643 =
                                 slt64(srem64(sext_i32_i64(local_tid_44626),
                                              i32_res_29129),
                                       sext_i32_i64(local_tid_44626) -
                                       sext_i32_i64(squot32(local_tid_44626,
                                                            32) * 32 - 1));
                            
                            if (inactive_44643) {
                                x_39407 = x_39408;
                            }
                            if (!inactive_44643) {
                                float defunc_1_op_res_39409 = x_39407 + x_39408;
                                
                                x_39407 = defunc_1_op_res_39409;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44630)[sext_i32_i64(local_tid_44626)] =
                                x_39407;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44626, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44630)[sext_i32_i64(local_tid_44626)] =
                            x_39408;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44634) *
                      squot64(segred_group_sizze_39403,
                              segment_sizze_nonzzero_44623) +
                      sext_i32_i64(local_tid_44626), m_29116 * i32_res_29135) &&
                slt64(sext_i32_i64(local_tid_44626),
                      squot64(segred_group_sizze_39403,
                              segment_sizze_nonzzero_44623))) {
                ((__global
                  float *) mem_43585)[squot64(sext_i32_i64(virt_group_id_44634) *
                                              squot64(segred_group_sizze_39403,
                                                      segment_sizze_nonzzero_44623) +
                                              sext_i32_i64(local_tid_44626),
                                              i32_res_29135) * i32_res_29135 +
                                      (sext_i32_i64(virt_group_id_44634) *
                                       squot64(segred_group_sizze_39403,
                                               segment_sizze_nonzzero_44623) +
                                       sext_i32_i64(local_tid_44626) -
                                       squot64(sext_i32_i64(virt_group_id_44634) *
                                               squot64(segred_group_sizze_39403,
                                                       segment_sizze_nonzzero_44623) +
                                               sext_i32_i64(local_tid_44626),
                                               i32_res_29135) *
                                       i32_res_29135)] = ((__local
                                                           float *) red_arr_mem_44630)[(sext_i32_i64(local_tid_44626) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_44623 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39403
}
__kernel void mainzisegred_small_39488(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44718_backing_aligned_0,
                                       int64_t m_29116, int64_t i32_res_29135,
                                       int64_t num_groups_39537, __global
                                       unsigned char *defunc_3_map_res_mem_43370,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43591,
                                       __global unsigned char *mem_43651,
                                       int64_t segment_sizze_nonzzero_44711)
{
    #define segred_group_sizze_39536 (mainzisegred_group_sizze_39482)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44718_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44718_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44713;
    int32_t local_tid_44714;
    int64_t group_sizze_44717;
    int32_t wave_sizze_44716;
    int32_t group_tid_44715;
    
    global_tid_44713 = get_global_id(0);
    local_tid_44714 = get_local_id(0);
    group_sizze_44717 = get_local_size(0);
    wave_sizze_44716 = LOCKSTEP_WIDTH;
    group_tid_44715 = get_group_id(0);
    
    int32_t phys_tid_39488;
    
    phys_tid_39488 = global_tid_44713;
    
    __local char *red_arr_mem_44718;
    
    red_arr_mem_44718 = (__local char *) red_arr_mem_44718_backing_0;
    
    int32_t phys_group_id_44720;
    
    phys_group_id_44720 = get_group_id(0);
    for (int32_t i_44721 = 0; i_44721 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29116 * i32_res_29135,
                                          squot64(segred_group_sizze_39536,
                                                  segment_sizze_nonzzero_44711))) -
                   phys_group_id_44720, sext_i64_i32(num_groups_39537));
         i_44721++) {
        int32_t virt_group_id_44722 = phys_group_id_44720 + i_44721 *
                sext_i64_i32(num_groups_39537);
        int64_t gtid_39477 = squot64(squot64(sext_i32_i64(local_tid_44714),
                                             segment_sizze_nonzzero_44711) +
                                     sext_i32_i64(virt_group_id_44722) *
                                     squot64(segred_group_sizze_39536,
                                             segment_sizze_nonzzero_44711),
                                     i32_res_29135);
        int64_t gtid_39478 = squot64(sext_i32_i64(local_tid_44714),
                                     segment_sizze_nonzzero_44711) +
                sext_i32_i64(virt_group_id_44722) *
                squot64(segred_group_sizze_39536,
                        segment_sizze_nonzzero_44711) -
                squot64(squot64(sext_i32_i64(local_tid_44714),
                                segment_sizze_nonzzero_44711) +
                        sext_i32_i64(virt_group_id_44722) *
                        squot64(segred_group_sizze_39536,
                                segment_sizze_nonzzero_44711), i32_res_29135) *
                i32_res_29135;
        int64_t gtid_39487 = srem64(sext_i32_i64(local_tid_44714),
                                    i32_res_29135);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_29135) && ((slt64(gtid_39477, m_29116) &&
                                             slt64(gtid_39478,
                                                   i32_res_29135)) &&
                                            slt64(sext_i32_i64(local_tid_44714),
                                                  i32_res_29135 *
                                                  squot64(segred_group_sizze_39536,
                                                          segment_sizze_nonzzero_44711)))) {
                float x_39546 = ((__global
                                  float *) defunc_3_map_res_mem_43591)[gtid_39477 *
                                                                       i32_res_29135 +
                                                                       gtid_39487];
                float x_39547 = ((__global
                                  float *) defunc_3_map_res_mem_43370)[gtid_39477 *
                                                                       (i32_res_29135 *
                                                                        i32_res_29135) +
                                                                       gtid_39478 *
                                                                       i32_res_29135 +
                                                                       gtid_39487];
                float defunc_1_f_res_39548 = x_39546 * x_39547;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44718)[sext_i32_i64(local_tid_44714)] =
                        defunc_1_f_res_39548;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44718)[sext_i32_i64(local_tid_44714)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_29135)) {
            // perform segmented scan to imitate reduction
            {
                float x_39540;
                float x_39541;
                float x_44723;
                float x_44724;
                bool ltid_in_bounds_44726;
                
                ltid_in_bounds_44726 = slt64(sext_i32_i64(local_tid_44714),
                                             i32_res_29135 *
                                             squot64(segred_group_sizze_39536,
                                                     segment_sizze_nonzzero_44711));
                
                int32_t skip_threads_44727;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44726) {
                        x_39541 = ((volatile __local
                                    float *) red_arr_mem_44718)[sext_i32_i64(local_tid_44714)];
                        if ((local_tid_44714 - squot32(local_tid_44714, 32) *
                             32) == 0) {
                            x_39540 = x_39541;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44727 = 1;
                    while (slt32(skip_threads_44727, 32)) {
                        if (sle32(skip_threads_44727, local_tid_44714 -
                                  squot32(local_tid_44714, 32) * 32) &&
                            ltid_in_bounds_44726) {
                            // read operands
                            {
                                x_39540 = ((volatile __local
                                            float *) red_arr_mem_44718)[sext_i32_i64(local_tid_44714) -
                                                                        sext_i32_i64(skip_threads_44727)];
                            }
                            // perform operation
                            {
                                bool inactive_44728 =
                                     slt64(srem64(sext_i32_i64(local_tid_44714),
                                                  i32_res_29135),
                                           sext_i32_i64(local_tid_44714) -
                                           sext_i32_i64(local_tid_44714 -
                                           skip_threads_44727));
                                
                                if (inactive_44728) {
                                    x_39540 = x_39541;
                                }
                                if (!inactive_44728) {
                                    float defunc_1_op_res_39542 = x_39540 +
                                          x_39541;
                                    
                                    x_39540 = defunc_1_op_res_39542;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44716, skip_threads_44727)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44727, local_tid_44714 -
                                  squot32(local_tid_44714, 32) * 32) &&
                            ltid_in_bounds_44726) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44718)[sext_i32_i64(local_tid_44714)] =
                                    x_39540;
                                x_39541 = x_39540;
                            }
                        }
                        if (sle32(wave_sizze_44716, skip_threads_44727)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44727 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44714 - squot32(local_tid_44714, 32) * 32) ==
                        31 && ltid_in_bounds_44726) {
                        ((volatile __local
                          float *) red_arr_mem_44718)[sext_i32_i64(squot32(local_tid_44714,
                                                                           32))] =
                            x_39540;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44729;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44714, 32) == 0 &&
                            ltid_in_bounds_44726) {
                            x_44724 = ((volatile __local
                                        float *) red_arr_mem_44718)[sext_i32_i64(local_tid_44714)];
                            if ((local_tid_44714 - squot32(local_tid_44714,
                                                           32) * 32) == 0) {
                                x_44723 = x_44724;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44729 = 1;
                        while (slt32(skip_threads_44729, 32)) {
                            if (sle32(skip_threads_44729, local_tid_44714 -
                                      squot32(local_tid_44714, 32) * 32) &&
                                (squot32(local_tid_44714, 32) == 0 &&
                                 ltid_in_bounds_44726)) {
                                // read operands
                                {
                                    x_44723 = ((volatile __local
                                                float *) red_arr_mem_44718)[sext_i32_i64(local_tid_44714) -
                                                                            sext_i32_i64(skip_threads_44729)];
                                }
                                // perform operation
                                {
                                    bool inactive_44730 =
                                         slt64(srem64(sext_i32_i64(local_tid_44714 *
                                                      32 + 32 - 1),
                                                      i32_res_29135),
                                               sext_i32_i64(local_tid_44714 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44714 -
                                                             skip_threads_44729) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44730) {
                                        x_44723 = x_44724;
                                    }
                                    if (!inactive_44730) {
                                        float defunc_1_op_res_44725 = x_44723 +
                                              x_44724;
                                        
                                        x_44723 = defunc_1_op_res_44725;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44716, skip_threads_44729)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44729, local_tid_44714 -
                                      squot32(local_tid_44714, 32) * 32) &&
                                (squot32(local_tid_44714, 32) == 0 &&
                                 ltid_in_bounds_44726)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44718)[sext_i32_i64(local_tid_44714)] =
                                        x_44723;
                                    x_44724 = x_44723;
                                }
                            }
                            if (sle32(wave_sizze_44716, skip_threads_44729)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44729 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44714, 32) == 0 ||
                          !ltid_in_bounds_44726)) {
                        // read operands
                        {
                            x_39541 = x_39540;
                            x_39540 = ((__local
                                        float *) red_arr_mem_44718)[sext_i32_i64(squot32(local_tid_44714,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_44731 =
                                 slt64(srem64(sext_i32_i64(local_tid_44714),
                                              i32_res_29135),
                                       sext_i32_i64(local_tid_44714) -
                                       sext_i32_i64(squot32(local_tid_44714,
                                                            32) * 32 - 1));
                            
                            if (inactive_44731) {
                                x_39540 = x_39541;
                            }
                            if (!inactive_44731) {
                                float defunc_1_op_res_39542 = x_39540 + x_39541;
                                
                                x_39540 = defunc_1_op_res_39542;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44718)[sext_i32_i64(local_tid_44714)] =
                                x_39540;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44714, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44718)[sext_i32_i64(local_tid_44714)] =
                            x_39541;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44722) *
                      squot64(segred_group_sizze_39536,
                              segment_sizze_nonzzero_44711) +
                      sext_i32_i64(local_tid_44714), m_29116 * i32_res_29135) &&
                slt64(sext_i32_i64(local_tid_44714),
                      squot64(segred_group_sizze_39536,
                              segment_sizze_nonzzero_44711))) {
                ((__global
                  float *) mem_43651)[squot64(sext_i32_i64(virt_group_id_44722) *
                                              squot64(segred_group_sizze_39536,
                                                      segment_sizze_nonzzero_44711) +
                                              sext_i32_i64(local_tid_44714),
                                              i32_res_29135) * i32_res_29135 +
                                      (sext_i32_i64(virt_group_id_44722) *
                                       squot64(segred_group_sizze_39536,
                                               segment_sizze_nonzzero_44711) +
                                       sext_i32_i64(local_tid_44714) -
                                       squot64(sext_i32_i64(virt_group_id_44722) *
                                               squot64(segred_group_sizze_39536,
                                                       segment_sizze_nonzzero_44711) +
                                               sext_i32_i64(local_tid_44714),
                                               i32_res_29135) *
                                       i32_res_29135)] = ((__local
                                                           float *) red_arr_mem_44718)[(sext_i32_i64(local_tid_44714) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_44711 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39536
}
__kernel void mainzisegred_small_39618(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44850_backing_aligned_0,
                                       int64_t N_29115, int64_t m_29116,
                                       int64_t i32_res_29135,
                                       int64_t num_groups_39665, __global
                                       unsigned char *mem_43139, __global
                                       unsigned char *defunc_4_map_res_mem_43657,
                                       __global unsigned char *mem_43875,
                                       int64_t segment_sizze_nonzzero_44843)
{
    #define segred_group_sizze_39664 (mainzisegred_group_sizze_39612)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44850_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44850_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44845;
    int32_t local_tid_44846;
    int64_t group_sizze_44849;
    int32_t wave_sizze_44848;
    int32_t group_tid_44847;
    
    global_tid_44845 = get_global_id(0);
    local_tid_44846 = get_local_id(0);
    group_sizze_44849 = get_local_size(0);
    wave_sizze_44848 = LOCKSTEP_WIDTH;
    group_tid_44847 = get_group_id(0);
    
    int32_t phys_tid_39618;
    
    phys_tid_39618 = global_tid_44845;
    
    __local char *red_arr_mem_44850;
    
    red_arr_mem_44850 = (__local char *) red_arr_mem_44850_backing_0;
    
    int32_t phys_group_id_44852;
    
    phys_group_id_44852 = get_group_id(0);
    for (int32_t i_44853 = 0; i_44853 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29116 * N_29115,
                                          squot64(segred_group_sizze_39664,
                                                  segment_sizze_nonzzero_44843))) -
                   phys_group_id_44852, sext_i64_i32(num_groups_39665));
         i_44853++) {
        int32_t virt_group_id_44854 = phys_group_id_44852 + i_44853 *
                sext_i64_i32(num_groups_39665);
        int64_t gtid_39607 = squot64(squot64(sext_i32_i64(local_tid_44846),
                                             segment_sizze_nonzzero_44843) +
                                     sext_i32_i64(virt_group_id_44854) *
                                     squot64(segred_group_sizze_39664,
                                             segment_sizze_nonzzero_44843),
                                     N_29115);
        int64_t gtid_39608 = squot64(sext_i32_i64(local_tid_44846),
                                     segment_sizze_nonzzero_44843) +
                sext_i32_i64(virt_group_id_44854) *
                squot64(segred_group_sizze_39664,
                        segment_sizze_nonzzero_44843) -
                squot64(squot64(sext_i32_i64(local_tid_44846),
                                segment_sizze_nonzzero_44843) +
                        sext_i32_i64(virt_group_id_44854) *
                        squot64(segred_group_sizze_39664,
                                segment_sizze_nonzzero_44843), N_29115) *
                N_29115;
        int64_t gtid_39617 = srem64(sext_i32_i64(local_tid_44846),
                                    i32_res_29135);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_29135) && ((slt64(gtid_39607, m_29116) &&
                                             slt64(gtid_39608, N_29115)) &&
                                            slt64(sext_i32_i64(local_tid_44846),
                                                  i32_res_29135 *
                                                  squot64(segred_group_sizze_39664,
                                                          segment_sizze_nonzzero_44843)))) {
                float x_39673 = ((__global
                                  float *) defunc_4_map_res_mem_43657)[gtid_39607 *
                                                                       i32_res_29135 +
                                                                       gtid_39617];
                float x_39674 = ((__global float *) mem_43139)[gtid_39608 *
                                                               i32_res_29135 +
                                                               gtid_39617];
                float defunc_1_f_res_39675 = x_39673 * x_39674;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44850)[sext_i32_i64(local_tid_44846)] =
                        defunc_1_f_res_39675;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44850)[sext_i32_i64(local_tid_44846)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_29135)) {
            // perform segmented scan to imitate reduction
            {
                float x_39668;
                float x_39669;
                float x_44855;
                float x_44856;
                bool ltid_in_bounds_44858;
                
                ltid_in_bounds_44858 = slt64(sext_i32_i64(local_tid_44846),
                                             i32_res_29135 *
                                             squot64(segred_group_sizze_39664,
                                                     segment_sizze_nonzzero_44843));
                
                int32_t skip_threads_44859;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44858) {
                        x_39669 = ((volatile __local
                                    float *) red_arr_mem_44850)[sext_i32_i64(local_tid_44846)];
                        if ((local_tid_44846 - squot32(local_tid_44846, 32) *
                             32) == 0) {
                            x_39668 = x_39669;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44859 = 1;
                    while (slt32(skip_threads_44859, 32)) {
                        if (sle32(skip_threads_44859, local_tid_44846 -
                                  squot32(local_tid_44846, 32) * 32) &&
                            ltid_in_bounds_44858) {
                            // read operands
                            {
                                x_39668 = ((volatile __local
                                            float *) red_arr_mem_44850)[sext_i32_i64(local_tid_44846) -
                                                                        sext_i32_i64(skip_threads_44859)];
                            }
                            // perform operation
                            {
                                bool inactive_44860 =
                                     slt64(srem64(sext_i32_i64(local_tid_44846),
                                                  i32_res_29135),
                                           sext_i32_i64(local_tid_44846) -
                                           sext_i32_i64(local_tid_44846 -
                                           skip_threads_44859));
                                
                                if (inactive_44860) {
                                    x_39668 = x_39669;
                                }
                                if (!inactive_44860) {
                                    float defunc_1_op_res_39670 = x_39668 +
                                          x_39669;
                                    
                                    x_39668 = defunc_1_op_res_39670;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44848, skip_threads_44859)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44859, local_tid_44846 -
                                  squot32(local_tid_44846, 32) * 32) &&
                            ltid_in_bounds_44858) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44850)[sext_i32_i64(local_tid_44846)] =
                                    x_39668;
                                x_39669 = x_39668;
                            }
                        }
                        if (sle32(wave_sizze_44848, skip_threads_44859)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44859 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44846 - squot32(local_tid_44846, 32) * 32) ==
                        31 && ltid_in_bounds_44858) {
                        ((volatile __local
                          float *) red_arr_mem_44850)[sext_i32_i64(squot32(local_tid_44846,
                                                                           32))] =
                            x_39668;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44861;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44846, 32) == 0 &&
                            ltid_in_bounds_44858) {
                            x_44856 = ((volatile __local
                                        float *) red_arr_mem_44850)[sext_i32_i64(local_tid_44846)];
                            if ((local_tid_44846 - squot32(local_tid_44846,
                                                           32) * 32) == 0) {
                                x_44855 = x_44856;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44861 = 1;
                        while (slt32(skip_threads_44861, 32)) {
                            if (sle32(skip_threads_44861, local_tid_44846 -
                                      squot32(local_tid_44846, 32) * 32) &&
                                (squot32(local_tid_44846, 32) == 0 &&
                                 ltid_in_bounds_44858)) {
                                // read operands
                                {
                                    x_44855 = ((volatile __local
                                                float *) red_arr_mem_44850)[sext_i32_i64(local_tid_44846) -
                                                                            sext_i32_i64(skip_threads_44861)];
                                }
                                // perform operation
                                {
                                    bool inactive_44862 =
                                         slt64(srem64(sext_i32_i64(local_tid_44846 *
                                                      32 + 32 - 1),
                                                      i32_res_29135),
                                               sext_i32_i64(local_tid_44846 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44846 -
                                                             skip_threads_44861) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44862) {
                                        x_44855 = x_44856;
                                    }
                                    if (!inactive_44862) {
                                        float defunc_1_op_res_44857 = x_44855 +
                                              x_44856;
                                        
                                        x_44855 = defunc_1_op_res_44857;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44848, skip_threads_44861)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44861, local_tid_44846 -
                                      squot32(local_tid_44846, 32) * 32) &&
                                (squot32(local_tid_44846, 32) == 0 &&
                                 ltid_in_bounds_44858)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44850)[sext_i32_i64(local_tid_44846)] =
                                        x_44855;
                                    x_44856 = x_44855;
                                }
                            }
                            if (sle32(wave_sizze_44848, skip_threads_44861)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44861 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44846, 32) == 0 ||
                          !ltid_in_bounds_44858)) {
                        // read operands
                        {
                            x_39669 = x_39668;
                            x_39668 = ((__local
                                        float *) red_arr_mem_44850)[sext_i32_i64(squot32(local_tid_44846,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_44863 =
                                 slt64(srem64(sext_i32_i64(local_tid_44846),
                                              i32_res_29135),
                                       sext_i32_i64(local_tid_44846) -
                                       sext_i32_i64(squot32(local_tid_44846,
                                                            32) * 32 - 1));
                            
                            if (inactive_44863) {
                                x_39668 = x_39669;
                            }
                            if (!inactive_44863) {
                                float defunc_1_op_res_39670 = x_39668 + x_39669;
                                
                                x_39668 = defunc_1_op_res_39670;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44850)[sext_i32_i64(local_tid_44846)] =
                                x_39668;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44846, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44850)[sext_i32_i64(local_tid_44846)] =
                            x_39669;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44854) *
                      squot64(segred_group_sizze_39664,
                              segment_sizze_nonzzero_44843) +
                      sext_i32_i64(local_tid_44846), m_29116 * N_29115) &&
                slt64(sext_i32_i64(local_tid_44846),
                      squot64(segred_group_sizze_39664,
                              segment_sizze_nonzzero_44843))) {
                ((__global
                  float *) mem_43875)[squot64(sext_i32_i64(virt_group_id_44854) *
                                              squot64(segred_group_sizze_39664,
                                                      segment_sizze_nonzzero_44843) +
                                              sext_i32_i64(local_tid_44846),
                                              N_29115) * N_29115 +
                                      (sext_i32_i64(virt_group_id_44854) *
                                       squot64(segred_group_sizze_39664,
                                               segment_sizze_nonzzero_44843) +
                                       sext_i32_i64(local_tid_44846) -
                                       squot64(sext_i32_i64(virt_group_id_44854) *
                                               squot64(segred_group_sizze_39664,
                                                       segment_sizze_nonzzero_44843) +
                                               sext_i32_i64(local_tid_44846),
                                               N_29115) * N_29115)] = ((__local
                                                                        float *) red_arr_mem_44850)[(sext_i32_i64(local_tid_44846) +
                                                                                                     1) *
                                                                                                    segment_sizze_nonzzero_44843 -
                                                                                                    1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39664
}
__kernel void mainzisegred_small_40184(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_45104_backing_aligned_0,
                                       int64_t N_29115, int64_t m_29116,
                                       int64_t i32_res_29129,
                                       int64_t num_groups_40231, __global
                                       unsigned char *defunc_4_map_res_mem_43919,
                                       __global unsigned char *mem_43970,
                                       __global unsigned char *mem_43973,
                                       int64_t segment_sizze_nonzzero_45097)
{
    #define segred_group_sizze_40230 (mainzisegred_group_sizze_40178)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45104_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45104_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45099;
    int32_t local_tid_45100;
    int64_t group_sizze_45103;
    int32_t wave_sizze_45102;
    int32_t group_tid_45101;
    
    global_tid_45099 = get_global_id(0);
    local_tid_45100 = get_local_id(0);
    group_sizze_45103 = get_local_size(0);
    wave_sizze_45102 = LOCKSTEP_WIDTH;
    group_tid_45101 = get_group_id(0);
    
    int32_t phys_tid_40184;
    
    phys_tid_40184 = global_tid_45099;
    
    __local char *red_arr_mem_45104;
    
    red_arr_mem_45104 = (__local char *) red_arr_mem_45104_backing_0;
    
    int32_t phys_group_id_45106;
    
    phys_group_id_45106 = get_group_id(0);
    for (int32_t i_45107 = 0; i_45107 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29116,
                                          squot64(segred_group_sizze_40230,
                                                  segment_sizze_nonzzero_45097))) -
                   phys_group_id_45106, sext_i64_i32(num_groups_40231));
         i_45107++) {
        int32_t virt_group_id_45108 = phys_group_id_45106 + i_45107 *
                sext_i64_i32(num_groups_40231);
        int64_t gtid_40175 = squot64(sext_i32_i64(local_tid_45100),
                                     segment_sizze_nonzzero_45097) +
                sext_i32_i64(virt_group_id_45108) *
                squot64(segred_group_sizze_40230, segment_sizze_nonzzero_45097);
        int64_t gtid_40183 = srem64(sext_i32_i64(local_tid_45100),
                                    i32_res_29129);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_29129) && (slt64(gtid_40175, m_29116) &&
                                            slt64(sext_i32_i64(local_tid_45100),
                                                  i32_res_29129 *
                                                  squot64(segred_group_sizze_40230,
                                                          segment_sizze_nonzzero_45097)))) {
                int32_t defunc_0_f_res_40238 = ((__global
                                                 int32_t *) mem_43970)[gtid_40175];
                int32_t index_primexp_41162 = sext_i64_i32(gtid_40183);
                bool cond_40240 = slt32(index_primexp_41162,
                                        defunc_0_f_res_40238);
                float defunc_0_f_res_40241;
                
                if (cond_40240) {
                    int64_t i_40242 = sext_i32_i64(index_primexp_41162);
                    float defunc_0_f_res_t_res_40243 = ((__global
                                                         float *) defunc_4_map_res_mem_43919)[gtid_40175 *
                                                                                              N_29115 +
                                                                                              i_40242];
                    
                    defunc_0_f_res_40241 = defunc_0_f_res_t_res_40243;
                } else {
                    defunc_0_f_res_40241 = 0.0F;
                }
                
                float defunc_0_f_res_40244 = defunc_0_f_res_40241 *
                      defunc_0_f_res_40241;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45104)[sext_i32_i64(local_tid_45100)] =
                        defunc_0_f_res_40244;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45104)[sext_i32_i64(local_tid_45100)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_29129)) {
            // perform segmented scan to imitate reduction
            {
                float x_40234;
                float x_40235;
                float x_45109;
                float x_45110;
                bool ltid_in_bounds_45112;
                
                ltid_in_bounds_45112 = slt64(sext_i32_i64(local_tid_45100),
                                             i32_res_29129 *
                                             squot64(segred_group_sizze_40230,
                                                     segment_sizze_nonzzero_45097));
                
                int32_t skip_threads_45113;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45112) {
                        x_40235 = ((volatile __local
                                    float *) red_arr_mem_45104)[sext_i32_i64(local_tid_45100)];
                        if ((local_tid_45100 - squot32(local_tid_45100, 32) *
                             32) == 0) {
                            x_40234 = x_40235;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45113 = 1;
                    while (slt32(skip_threads_45113, 32)) {
                        if (sle32(skip_threads_45113, local_tid_45100 -
                                  squot32(local_tid_45100, 32) * 32) &&
                            ltid_in_bounds_45112) {
                            // read operands
                            {
                                x_40234 = ((volatile __local
                                            float *) red_arr_mem_45104)[sext_i32_i64(local_tid_45100) -
                                                                        sext_i32_i64(skip_threads_45113)];
                            }
                            // perform operation
                            {
                                bool inactive_45114 =
                                     slt64(srem64(sext_i32_i64(local_tid_45100),
                                                  i32_res_29129),
                                           sext_i32_i64(local_tid_45100) -
                                           sext_i32_i64(local_tid_45100 -
                                           skip_threads_45113));
                                
                                if (inactive_45114) {
                                    x_40234 = x_40235;
                                }
                                if (!inactive_45114) {
                                    float defunc_1_op_res_40236 = x_40234 +
                                          x_40235;
                                    
                                    x_40234 = defunc_1_op_res_40236;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45102, skip_threads_45113)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45113, local_tid_45100 -
                                  squot32(local_tid_45100, 32) * 32) &&
                            ltid_in_bounds_45112) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45104)[sext_i32_i64(local_tid_45100)] =
                                    x_40234;
                                x_40235 = x_40234;
                            }
                        }
                        if (sle32(wave_sizze_45102, skip_threads_45113)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45113 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45100 - squot32(local_tid_45100, 32) * 32) ==
                        31 && ltid_in_bounds_45112) {
                        ((volatile __local
                          float *) red_arr_mem_45104)[sext_i32_i64(squot32(local_tid_45100,
                                                                           32))] =
                            x_40234;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45115;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45100, 32) == 0 &&
                            ltid_in_bounds_45112) {
                            x_45110 = ((volatile __local
                                        float *) red_arr_mem_45104)[sext_i32_i64(local_tid_45100)];
                            if ((local_tid_45100 - squot32(local_tid_45100,
                                                           32) * 32) == 0) {
                                x_45109 = x_45110;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45115 = 1;
                        while (slt32(skip_threads_45115, 32)) {
                            if (sle32(skip_threads_45115, local_tid_45100 -
                                      squot32(local_tid_45100, 32) * 32) &&
                                (squot32(local_tid_45100, 32) == 0 &&
                                 ltid_in_bounds_45112)) {
                                // read operands
                                {
                                    x_45109 = ((volatile __local
                                                float *) red_arr_mem_45104)[sext_i32_i64(local_tid_45100) -
                                                                            sext_i32_i64(skip_threads_45115)];
                                }
                                // perform operation
                                {
                                    bool inactive_45116 =
                                         slt64(srem64(sext_i32_i64(local_tid_45100 *
                                                      32 + 32 - 1),
                                                      i32_res_29129),
                                               sext_i32_i64(local_tid_45100 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45100 -
                                                             skip_threads_45115) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45116) {
                                        x_45109 = x_45110;
                                    }
                                    if (!inactive_45116) {
                                        float defunc_1_op_res_45111 = x_45109 +
                                              x_45110;
                                        
                                        x_45109 = defunc_1_op_res_45111;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45102, skip_threads_45115)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45115, local_tid_45100 -
                                      squot32(local_tid_45100, 32) * 32) &&
                                (squot32(local_tid_45100, 32) == 0 &&
                                 ltid_in_bounds_45112)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45104)[sext_i32_i64(local_tid_45100)] =
                                        x_45109;
                                    x_45110 = x_45109;
                                }
                            }
                            if (sle32(wave_sizze_45102, skip_threads_45115)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45115 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45100, 32) == 0 ||
                          !ltid_in_bounds_45112)) {
                        // read operands
                        {
                            x_40235 = x_40234;
                            x_40234 = ((__local
                                        float *) red_arr_mem_45104)[sext_i32_i64(squot32(local_tid_45100,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45117 =
                                 slt64(srem64(sext_i32_i64(local_tid_45100),
                                              i32_res_29129),
                                       sext_i32_i64(local_tid_45100) -
                                       sext_i32_i64(squot32(local_tid_45100,
                                                            32) * 32 - 1));
                            
                            if (inactive_45117) {
                                x_40234 = x_40235;
                            }
                            if (!inactive_45117) {
                                float defunc_1_op_res_40236 = x_40234 + x_40235;
                                
                                x_40234 = defunc_1_op_res_40236;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45104)[sext_i32_i64(local_tid_45100)] =
                                x_40234;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45100, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45104)[sext_i32_i64(local_tid_45100)] =
                            x_40235;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45108) *
                      squot64(segred_group_sizze_40230,
                              segment_sizze_nonzzero_45097) +
                      sext_i32_i64(local_tid_45100), m_29116) &&
                slt64(sext_i32_i64(local_tid_45100),
                      squot64(segred_group_sizze_40230,
                              segment_sizze_nonzzero_45097))) {
                ((__global
                  float *) mem_43973)[sext_i32_i64(virt_group_id_45108) *
                                      squot64(segred_group_sizze_40230,
                                              segment_sizze_nonzzero_45097) +
                                      sext_i32_i64(local_tid_45100)] = ((__local
                                                                         float *) red_arr_mem_45104)[(sext_i32_i64(local_tid_45100) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45097 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40230
}
__kernel void mainzisegred_small_40205(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_45044_backing_aligned_0,
                                       int64_t m_29116, int64_t N_29117,
                                       int64_t i32_res_29129,
                                       int64_t num_groups_40217, __global
                                       unsigned char *images_mem_43123, __global
                                       unsigned char *mem_43970,
                                       int64_t segment_sizze_nonzzero_45037)
{
    #define segred_group_sizze_40216 (mainzisegred_group_sizze_40199)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45044_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45044_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45039;
    int32_t local_tid_45040;
    int64_t group_sizze_45043;
    int32_t wave_sizze_45042;
    int32_t group_tid_45041;
    
    global_tid_45039 = get_global_id(0);
    local_tid_45040 = get_local_id(0);
    group_sizze_45043 = get_local_size(0);
    wave_sizze_45042 = LOCKSTEP_WIDTH;
    group_tid_45041 = get_group_id(0);
    
    int32_t phys_tid_40205;
    
    phys_tid_40205 = global_tid_45039;
    
    __local char *red_arr_mem_45044;
    
    red_arr_mem_45044 = (__local char *) red_arr_mem_45044_backing_0;
    
    int32_t phys_group_id_45046;
    
    phys_group_id_45046 = get_group_id(0);
    for (int32_t i_45047 = 0; i_45047 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29116,
                                          squot64(segred_group_sizze_40216,
                                                  segment_sizze_nonzzero_45037))) -
                   phys_group_id_45046, sext_i64_i32(num_groups_40217));
         i_45047++) {
        int32_t virt_group_id_45048 = phys_group_id_45046 + i_45047 *
                sext_i64_i32(num_groups_40217);
        int64_t gtid_40196 = squot64(sext_i32_i64(local_tid_45040),
                                     segment_sizze_nonzzero_45037) +
                sext_i32_i64(virt_group_id_45048) *
                squot64(segred_group_sizze_40216, segment_sizze_nonzzero_45037);
        int64_t gtid_40204 = srem64(sext_i32_i64(local_tid_45040),
                                    i32_res_29129);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_29129) && (slt64(gtid_40196, m_29116) &&
                                            slt64(sext_i32_i64(local_tid_45040),
                                                  i32_res_29129 *
                                                  squot64(segred_group_sizze_40216,
                                                          segment_sizze_nonzzero_45037)))) {
                float x_40224 = ((__global
                                  float *) images_mem_43123)[gtid_40196 *
                                                             N_29117 +
                                                             gtid_40204];
                bool isnan_res_40225;
                
                isnan_res_40225 = futrts_isnan32(x_40224);
                
                bool cond_40226 = !isnan_res_40225;
                int32_t defunc_0_f_res_40227 = btoi_bool_i32(cond_40226);
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      int32_t *) red_arr_mem_45044)[sext_i32_i64(local_tid_45040)] =
                        defunc_0_f_res_40227;
                }
            } else {
                ((__local
                  int32_t *) red_arr_mem_45044)[sext_i32_i64(local_tid_45040)] =
                    0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_29129)) {
            // perform segmented scan to imitate reduction
            {
                int32_t x_40220;
                int32_t x_40221;
                int32_t x_45049;
                int32_t x_45050;
                bool ltid_in_bounds_45052;
                
                ltid_in_bounds_45052 = slt64(sext_i32_i64(local_tid_45040),
                                             i32_res_29129 *
                                             squot64(segred_group_sizze_40216,
                                                     segment_sizze_nonzzero_45037));
                
                int32_t skip_threads_45053;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45052) {
                        x_40221 = ((volatile __local
                                    int32_t *) red_arr_mem_45044)[sext_i32_i64(local_tid_45040)];
                        if ((local_tid_45040 - squot32(local_tid_45040, 32) *
                             32) == 0) {
                            x_40220 = x_40221;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45053 = 1;
                    while (slt32(skip_threads_45053, 32)) {
                        if (sle32(skip_threads_45053, local_tid_45040 -
                                  squot32(local_tid_45040, 32) * 32) &&
                            ltid_in_bounds_45052) {
                            // read operands
                            {
                                x_40220 = ((volatile __local
                                            int32_t *) red_arr_mem_45044)[sext_i32_i64(local_tid_45040) -
                                                                          sext_i32_i64(skip_threads_45053)];
                            }
                            // perform operation
                            {
                                bool inactive_45054 =
                                     slt64(srem64(sext_i32_i64(local_tid_45040),
                                                  i32_res_29129),
                                           sext_i32_i64(local_tid_45040) -
                                           sext_i32_i64(local_tid_45040 -
                                           skip_threads_45053));
                                
                                if (inactive_45054) {
                                    x_40220 = x_40221;
                                }
                                if (!inactive_45054) {
                                    int32_t defunc_1_op_res_40222 =
                                            add32(x_40220, x_40221);
                                    
                                    x_40220 = defunc_1_op_res_40222;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45042, skip_threads_45053)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45053, local_tid_45040 -
                                  squot32(local_tid_45040, 32) * 32) &&
                            ltid_in_bounds_45052) {
                            // write result
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_45044)[sext_i32_i64(local_tid_45040)] =
                                    x_40220;
                                x_40221 = x_40220;
                            }
                        }
                        if (sle32(wave_sizze_45042, skip_threads_45053)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45053 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45040 - squot32(local_tid_45040, 32) * 32) ==
                        31 && ltid_in_bounds_45052) {
                        ((volatile __local
                          int32_t *) red_arr_mem_45044)[sext_i32_i64(squot32(local_tid_45040,
                                                                             32))] =
                            x_40220;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45055;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45040, 32) == 0 &&
                            ltid_in_bounds_45052) {
                            x_45050 = ((volatile __local
                                        int32_t *) red_arr_mem_45044)[sext_i32_i64(local_tid_45040)];
                            if ((local_tid_45040 - squot32(local_tid_45040,
                                                           32) * 32) == 0) {
                                x_45049 = x_45050;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45055 = 1;
                        while (slt32(skip_threads_45055, 32)) {
                            if (sle32(skip_threads_45055, local_tid_45040 -
                                      squot32(local_tid_45040, 32) * 32) &&
                                (squot32(local_tid_45040, 32) == 0 &&
                                 ltid_in_bounds_45052)) {
                                // read operands
                                {
                                    x_45049 = ((volatile __local
                                                int32_t *) red_arr_mem_45044)[sext_i32_i64(local_tid_45040) -
                                                                              sext_i32_i64(skip_threads_45055)];
                                }
                                // perform operation
                                {
                                    bool inactive_45056 =
                                         slt64(srem64(sext_i32_i64(local_tid_45040 *
                                                      32 + 32 - 1),
                                                      i32_res_29129),
                                               sext_i32_i64(local_tid_45040 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45040 -
                                                             skip_threads_45055) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45056) {
                                        x_45049 = x_45050;
                                    }
                                    if (!inactive_45056) {
                                        int32_t defunc_1_op_res_45051 =
                                                add32(x_45049, x_45050);
                                        
                                        x_45049 = defunc_1_op_res_45051;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45042, skip_threads_45055)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45055, local_tid_45040 -
                                      squot32(local_tid_45040, 32) * 32) &&
                                (squot32(local_tid_45040, 32) == 0 &&
                                 ltid_in_bounds_45052)) {
                                // write result
                                {
                                    ((volatile __local
                                      int32_t *) red_arr_mem_45044)[sext_i32_i64(local_tid_45040)] =
                                        x_45049;
                                    x_45050 = x_45049;
                                }
                            }
                            if (sle32(wave_sizze_45042, skip_threads_45055)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45055 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45040, 32) == 0 ||
                          !ltid_in_bounds_45052)) {
                        // read operands
                        {
                            x_40221 = x_40220;
                            x_40220 = ((__local
                                        int32_t *) red_arr_mem_45044)[sext_i32_i64(squot32(local_tid_45040,
                                                                                           32)) -
                                                                      1];
                        }
                        // perform operation
                        {
                            bool inactive_45057 =
                                 slt64(srem64(sext_i32_i64(local_tid_45040),
                                              i32_res_29129),
                                       sext_i32_i64(local_tid_45040) -
                                       sext_i32_i64(squot32(local_tid_45040,
                                                            32) * 32 - 1));
                            
                            if (inactive_45057) {
                                x_40220 = x_40221;
                            }
                            if (!inactive_45057) {
                                int32_t defunc_1_op_res_40222 = add32(x_40220,
                                                                      x_40221);
                                
                                x_40220 = defunc_1_op_res_40222;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              int32_t *) red_arr_mem_45044)[sext_i32_i64(local_tid_45040)] =
                                x_40220;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45040, 32) == 0) {
                        ((__local
                          int32_t *) red_arr_mem_45044)[sext_i32_i64(local_tid_45040)] =
                            x_40221;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45048) *
                      squot64(segred_group_sizze_40216,
                              segment_sizze_nonzzero_45037) +
                      sext_i32_i64(local_tid_45040), m_29116) &&
                slt64(sext_i32_i64(local_tid_45040),
                      squot64(segred_group_sizze_40216,
                              segment_sizze_nonzzero_45037))) {
                ((__global
                  int32_t *) mem_43970)[sext_i32_i64(virt_group_id_45048) *
                                        squot64(segred_group_sizze_40216,
                                                segment_sizze_nonzzero_45037) +
                                        sext_i32_i64(local_tid_45040)] =
                    ((__local
                      int32_t *) red_arr_mem_45044)[(sext_i32_i64(local_tid_45040) +
                                                     1) *
                                                    segment_sizze_nonzzero_45037 -
                                                    1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40216
}
__kernel void mainzisegred_small_40356(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_45213_backing_aligned_0,
                                       int64_t N_29115, int64_t m_29116,
                                       int64_t i32_res_29490,
                                       int64_t num_groups_40374, __global
                                       unsigned char *defunc_4_map_res_mem_43919,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43982,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43983,
                                       __global unsigned char *mem_44016,
                                       int64_t segment_sizze_nonzzero_45206)
{
    #define segred_group_sizze_40373 (mainzisegred_group_sizze_40350)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45213_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45213_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45208;
    int32_t local_tid_45209;
    int64_t group_sizze_45212;
    int32_t wave_sizze_45211;
    int32_t group_tid_45210;
    
    global_tid_45208 = get_global_id(0);
    local_tid_45209 = get_local_id(0);
    group_sizze_45212 = get_local_size(0);
    wave_sizze_45211 = LOCKSTEP_WIDTH;
    group_tid_45210 = get_group_id(0);
    
    int32_t phys_tid_40356;
    
    phys_tid_40356 = global_tid_45208;
    
    __local char *red_arr_mem_45213;
    
    red_arr_mem_45213 = (__local char *) red_arr_mem_45213_backing_0;
    
    int32_t phys_group_id_45215;
    
    phys_group_id_45215 = get_group_id(0);
    for (int32_t i_45216 = 0; i_45216 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29116,
                                          squot64(segred_group_sizze_40373,
                                                  segment_sizze_nonzzero_45206))) -
                   phys_group_id_45215, sext_i64_i32(num_groups_40374));
         i_45216++) {
        int32_t virt_group_id_45217 = phys_group_id_45215 + i_45216 *
                sext_i64_i32(num_groups_40374);
        int64_t gtid_40347 = squot64(sext_i32_i64(local_tid_45209),
                                     segment_sizze_nonzzero_45206) +
                sext_i32_i64(virt_group_id_45217) *
                squot64(segred_group_sizze_40373, segment_sizze_nonzzero_45206);
        int64_t gtid_40355 = srem64(sext_i32_i64(local_tid_45209),
                                    i32_res_29490);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_29490) && (slt64(gtid_40347, m_29116) &&
                                            slt64(sext_i32_i64(local_tid_45209),
                                                  i32_res_29490 *
                                                  squot64(segred_group_sizze_40373,
                                                          segment_sizze_nonzzero_45206)))) {
                int32_t x_40382 = ((__global
                                    int32_t *) defunc_3_map_res_mem_43982)[gtid_40347];
                int32_t index_primexp_41167 = sext_i64_i32(gtid_40355);
                bool cond_40384 = slt32(index_primexp_41167, x_40382);
                float defunc_0_f_res_40385;
                
                if (cond_40384) {
                    int32_t x_40381 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43983)[gtid_40347];
                    int32_t x_40386 = add32(x_40381, index_primexp_41167);
                    int32_t x_40387 = sub32(x_40386, x_40382);
                    int32_t i_40388 = add32(1, x_40387);
                    int64_t i_40389 = sext_i32_i64(i_40388);
                    float defunc_0_f_res_t_res_40390 = ((__global
                                                         float *) defunc_4_map_res_mem_43919)[gtid_40347 *
                                                                                              N_29115 +
                                                                                              i_40389];
                    
                    defunc_0_f_res_40385 = defunc_0_f_res_t_res_40390;
                } else {
                    defunc_0_f_res_40385 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45213)[sext_i32_i64(local_tid_45209)] =
                        defunc_0_f_res_40385;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45213)[sext_i32_i64(local_tid_45209)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_29490)) {
            // perform segmented scan to imitate reduction
            {
                float x_40377;
                float x_40378;
                float x_45218;
                float x_45219;
                bool ltid_in_bounds_45221;
                
                ltid_in_bounds_45221 = slt64(sext_i32_i64(local_tid_45209),
                                             i32_res_29490 *
                                             squot64(segred_group_sizze_40373,
                                                     segment_sizze_nonzzero_45206));
                
                int32_t skip_threads_45222;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45221) {
                        x_40378 = ((volatile __local
                                    float *) red_arr_mem_45213)[sext_i32_i64(local_tid_45209)];
                        if ((local_tid_45209 - squot32(local_tid_45209, 32) *
                             32) == 0) {
                            x_40377 = x_40378;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45222 = 1;
                    while (slt32(skip_threads_45222, 32)) {
                        if (sle32(skip_threads_45222, local_tid_45209 -
                                  squot32(local_tid_45209, 32) * 32) &&
                            ltid_in_bounds_45221) {
                            // read operands
                            {
                                x_40377 = ((volatile __local
                                            float *) red_arr_mem_45213)[sext_i32_i64(local_tid_45209) -
                                                                        sext_i32_i64(skip_threads_45222)];
                            }
                            // perform operation
                            {
                                bool inactive_45223 =
                                     slt64(srem64(sext_i32_i64(local_tid_45209),
                                                  i32_res_29490),
                                           sext_i32_i64(local_tid_45209) -
                                           sext_i32_i64(local_tid_45209 -
                                           skip_threads_45222));
                                
                                if (inactive_45223) {
                                    x_40377 = x_40378;
                                }
                                if (!inactive_45223) {
                                    float defunc_1_op_res_40379 = x_40377 +
                                          x_40378;
                                    
                                    x_40377 = defunc_1_op_res_40379;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45211, skip_threads_45222)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45222, local_tid_45209 -
                                  squot32(local_tid_45209, 32) * 32) &&
                            ltid_in_bounds_45221) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45213)[sext_i32_i64(local_tid_45209)] =
                                    x_40377;
                                x_40378 = x_40377;
                            }
                        }
                        if (sle32(wave_sizze_45211, skip_threads_45222)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45222 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45209 - squot32(local_tid_45209, 32) * 32) ==
                        31 && ltid_in_bounds_45221) {
                        ((volatile __local
                          float *) red_arr_mem_45213)[sext_i32_i64(squot32(local_tid_45209,
                                                                           32))] =
                            x_40377;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45224;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45209, 32) == 0 &&
                            ltid_in_bounds_45221) {
                            x_45219 = ((volatile __local
                                        float *) red_arr_mem_45213)[sext_i32_i64(local_tid_45209)];
                            if ((local_tid_45209 - squot32(local_tid_45209,
                                                           32) * 32) == 0) {
                                x_45218 = x_45219;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45224 = 1;
                        while (slt32(skip_threads_45224, 32)) {
                            if (sle32(skip_threads_45224, local_tid_45209 -
                                      squot32(local_tid_45209, 32) * 32) &&
                                (squot32(local_tid_45209, 32) == 0 &&
                                 ltid_in_bounds_45221)) {
                                // read operands
                                {
                                    x_45218 = ((volatile __local
                                                float *) red_arr_mem_45213)[sext_i32_i64(local_tid_45209) -
                                                                            sext_i32_i64(skip_threads_45224)];
                                }
                                // perform operation
                                {
                                    bool inactive_45225 =
                                         slt64(srem64(sext_i32_i64(local_tid_45209 *
                                                      32 + 32 - 1),
                                                      i32_res_29490),
                                               sext_i32_i64(local_tid_45209 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45209 -
                                                             skip_threads_45224) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45225) {
                                        x_45218 = x_45219;
                                    }
                                    if (!inactive_45225) {
                                        float defunc_1_op_res_45220 = x_45218 +
                                              x_45219;
                                        
                                        x_45218 = defunc_1_op_res_45220;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45211, skip_threads_45224)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45224, local_tid_45209 -
                                      squot32(local_tid_45209, 32) * 32) &&
                                (squot32(local_tid_45209, 32) == 0 &&
                                 ltid_in_bounds_45221)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45213)[sext_i32_i64(local_tid_45209)] =
                                        x_45218;
                                    x_45219 = x_45218;
                                }
                            }
                            if (sle32(wave_sizze_45211, skip_threads_45224)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45224 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45209, 32) == 0 ||
                          !ltid_in_bounds_45221)) {
                        // read operands
                        {
                            x_40378 = x_40377;
                            x_40377 = ((__local
                                        float *) red_arr_mem_45213)[sext_i32_i64(squot32(local_tid_45209,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45226 =
                                 slt64(srem64(sext_i32_i64(local_tid_45209),
                                              i32_res_29490),
                                       sext_i32_i64(local_tid_45209) -
                                       sext_i32_i64(squot32(local_tid_45209,
                                                            32) * 32 - 1));
                            
                            if (inactive_45226) {
                                x_40377 = x_40378;
                            }
                            if (!inactive_45226) {
                                float defunc_1_op_res_40379 = x_40377 + x_40378;
                                
                                x_40377 = defunc_1_op_res_40379;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45213)[sext_i32_i64(local_tid_45209)] =
                                x_40377;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45209, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45213)[sext_i32_i64(local_tid_45209)] =
                            x_40378;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45217) *
                      squot64(segred_group_sizze_40373,
                              segment_sizze_nonzzero_45206) +
                      sext_i32_i64(local_tid_45209), m_29116) &&
                slt64(sext_i32_i64(local_tid_45209),
                      squot64(segred_group_sizze_40373,
                              segment_sizze_nonzzero_45206))) {
                ((__global
                  float *) mem_44016)[sext_i32_i64(virt_group_id_45217) *
                                      squot64(segred_group_sizze_40373,
                                              segment_sizze_nonzzero_45206) +
                                      sext_i32_i64(local_tid_45209)] = ((__local
                                                                         float *) red_arr_mem_45213)[(sext_i32_i64(local_tid_45209) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45206 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40373
}
__kernel void mainzisegred_small_40857(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_45375_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45373_backing_aligned_1,
                                       __local volatile
                                       int64_t *red_arr_mem_45371_backing_aligned_2,
                                       int64_t m_29116,
                                       int64_t iota32_arg_29515,
                                       int64_t num_groups_41028, __global
                                       unsigned char *mem_44022, __global
                                       unsigned char *mem_44034, __global
                                       unsigned char *mem_44036, __global
                                       unsigned char *mem_44040, __global
                                       unsigned char *mem_44043, __global
                                       unsigned char *mem_44045, __global
                                       unsigned char *mem_44047,
                                       int64_t segment_sizze_nonzzero_45364)
{
    #define segred_group_sizze_41027 (mainzisegred_group_sizze_40851)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45375_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45375_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45373_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45373_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45371_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45371_backing_aligned_2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45366;
    int32_t local_tid_45367;
    int64_t group_sizze_45370;
    int32_t wave_sizze_45369;
    int32_t group_tid_45368;
    
    global_tid_45366 = get_global_id(0);
    local_tid_45367 = get_local_id(0);
    group_sizze_45370 = get_local_size(0);
    wave_sizze_45369 = LOCKSTEP_WIDTH;
    group_tid_45368 = get_group_id(0);
    
    int32_t phys_tid_40857;
    
    phys_tid_40857 = global_tid_45366;
    
    __local char *red_arr_mem_45371;
    
    red_arr_mem_45371 = (__local char *) red_arr_mem_45371_backing_0;
    
    __local char *red_arr_mem_45373;
    
    red_arr_mem_45373 = (__local char *) red_arr_mem_45373_backing_1;
    
    __local char *red_arr_mem_45375;
    
    red_arr_mem_45375 = (__local char *) red_arr_mem_45375_backing_2;
    
    int32_t phys_group_id_45377;
    
    phys_group_id_45377 = get_group_id(0);
    for (int32_t i_45378 = 0; i_45378 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_29116,
                                          squot64(segred_group_sizze_41027,
                                                  segment_sizze_nonzzero_45364))) -
                   phys_group_id_45377, sext_i64_i32(num_groups_41028));
         i_45378++) {
        int32_t virt_group_id_45379 = phys_group_id_45377 + i_45378 *
                sext_i64_i32(num_groups_41028);
        int64_t gtid_40848 = squot64(sext_i32_i64(local_tid_45367),
                                     segment_sizze_nonzzero_45364) +
                sext_i32_i64(virt_group_id_45379) *
                squot64(segred_group_sizze_41027, segment_sizze_nonzzero_45364);
        int64_t gtid_40856 = srem64(sext_i32_i64(local_tid_45367),
                                    iota32_arg_29515);
        
        // apply map function if in bounds
        {
            if (slt64(0, iota32_arg_29515) && (slt64(gtid_40848, m_29116) &&
                                               slt64(sext_i32_i64(local_tid_45367),
                                                     iota32_arg_29515 *
                                                     squot64(segred_group_sizze_41027,
                                                             segment_sizze_nonzzero_45364)))) {
                int32_t y_41047 = ((__global int32_t *) mem_44036)[gtid_40848];
                float y_41048 = ((__global float *) mem_44034)[gtid_40848];
                float x_41052 = ((__global float *) mem_44040)[gtid_40848 *
                                                               iota32_arg_29515 +
                                                               gtid_40856];
                float x_41053 = ((__global float *) mem_44022)[gtid_40856];
                int32_t index_primexp_41181 = sext_i64_i32(gtid_40856);
                float defunc_0_f_res_41056 = x_41052 / y_41048;
                bool cond_41057 = slt32(index_primexp_41181, y_41047);
                bool isnan_res_41058;
                
                isnan_res_41058 = futrts_isnan32(defunc_0_f_res_41056);
                
                bool cond_t_res_41059 = !isnan_res_41058;
                bool x_41060 = cond_41057 && cond_t_res_41059;
                float abs_res_41061 = (float) fabs(defunc_0_f_res_41056);
                bool defunc_2_f_res_t_res_41062 = x_41053 < abs_res_41061;
                bool x_41063 = x_41060 && defunc_2_f_res_t_res_41062;
                float defunc_1_f_res_41064;
                
                if (cond_41057) {
                    defunc_1_f_res_41064 = defunc_0_f_res_41056;
                } else {
                    defunc_1_f_res_41064 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      bool *) red_arr_mem_45371)[sext_i32_i64(local_tid_45367)] =
                        x_41063;
                    ((__local
                      int32_t *) red_arr_mem_45373)[sext_i32_i64(local_tid_45367)] =
                        index_primexp_41181;
                    ((__local
                      float *) red_arr_mem_45375)[sext_i32_i64(local_tid_45367)] =
                        defunc_1_f_res_41064;
                }
            } else {
                ((__local
                  bool *) red_arr_mem_45371)[sext_i32_i64(local_tid_45367)] = 0;
                ((__local
                  int32_t *) red_arr_mem_45373)[sext_i32_i64(local_tid_45367)] =
                    -1;
                ((__local
                  float *) red_arr_mem_45375)[sext_i32_i64(local_tid_45367)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, iota32_arg_29515)) {
            // perform segmented scan to imitate reduction
            {
                bool x_41033;
                int32_t x_41034;
                float x_41035;
                bool x_41036;
                int32_t x_41037;
                float x_41038;
                bool x_45380;
                int32_t x_45381;
                float x_45382;
                bool x_45383;
                int32_t x_45384;
                float x_45385;
                bool ltid_in_bounds_45394;
                
                ltid_in_bounds_45394 = slt64(sext_i32_i64(local_tid_45367),
                                             iota32_arg_29515 *
                                             squot64(segred_group_sizze_41027,
                                                     segment_sizze_nonzzero_45364));
                
                int32_t skip_threads_45395;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45394) {
                        x_41036 = ((volatile __local
                                    bool *) red_arr_mem_45371)[sext_i32_i64(local_tid_45367)];
                        x_41037 = ((volatile __local
                                    int32_t *) red_arr_mem_45373)[sext_i32_i64(local_tid_45367)];
                        x_41038 = ((volatile __local
                                    float *) red_arr_mem_45375)[sext_i32_i64(local_tid_45367)];
                        if ((local_tid_45367 - squot32(local_tid_45367, 32) *
                             32) == 0) {
                            x_41033 = x_41036;
                            x_41034 = x_41037;
                            x_41035 = x_41038;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45395 = 1;
                    while (slt32(skip_threads_45395, 32)) {
                        if (sle32(skip_threads_45395, local_tid_45367 -
                                  squot32(local_tid_45367, 32) * 32) &&
                            ltid_in_bounds_45394) {
                            // read operands
                            {
                                x_41033 = ((volatile __local
                                            bool *) red_arr_mem_45371)[sext_i32_i64(local_tid_45367) -
                                                                       sext_i32_i64(skip_threads_45395)];
                                x_41034 = ((volatile __local
                                            int32_t *) red_arr_mem_45373)[sext_i32_i64(local_tid_45367) -
                                                                          sext_i32_i64(skip_threads_45395)];
                                x_41035 = ((volatile __local
                                            float *) red_arr_mem_45375)[sext_i32_i64(local_tid_45367) -
                                                                        sext_i32_i64(skip_threads_45395)];
                            }
                            // perform operation
                            {
                                bool inactive_45396 =
                                     slt64(srem64(sext_i32_i64(local_tid_45367),
                                                  iota32_arg_29515),
                                           sext_i32_i64(local_tid_45367) -
                                           sext_i32_i64(local_tid_45367 -
                                           skip_threads_45395));
                                
                                if (inactive_45396) {
                                    x_41033 = x_41036;
                                    x_41034 = x_41037;
                                    x_41035 = x_41038;
                                }
                                if (!inactive_45396) {
                                    bool defunc_1_op_res_41039;
                                    int32_t defunc_1_op_res_41040;
                                    
                                    if (x_41033) {
                                        defunc_1_op_res_41039 = x_41033;
                                        defunc_1_op_res_41040 = x_41034;
                                    } else {
                                        bool x_41041 = x_41036 && x_41036;
                                        bool x_41042 = !x_41036;
                                        bool y_41043 = x_41033 && x_41042;
                                        bool defunc_1_op_res_f_res_41044 =
                                             x_41041 || y_41043;
                                        int32_t defunc_1_op_res_f_res_41045;
                                        
                                        if (x_41036) {
                                            defunc_1_op_res_f_res_41045 =
                                                x_41037;
                                        } else {
                                            defunc_1_op_res_f_res_41045 =
                                                x_41034;
                                        }
                                        defunc_1_op_res_41039 =
                                            defunc_1_op_res_f_res_41044;
                                        defunc_1_op_res_41040 =
                                            defunc_1_op_res_f_res_41045;
                                    }
                                    
                                    float defunc_1_op_res_41046 = x_41035 +
                                          x_41038;
                                    
                                    x_41033 = defunc_1_op_res_41039;
                                    x_41034 = defunc_1_op_res_41040;
                                    x_41035 = defunc_1_op_res_41046;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45369, skip_threads_45395)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45395, local_tid_45367 -
                                  squot32(local_tid_45367, 32) * 32) &&
                            ltid_in_bounds_45394) {
                            // write result
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_45371)[sext_i32_i64(local_tid_45367)] =
                                    x_41033;
                                x_41036 = x_41033;
                                ((volatile __local
                                  int32_t *) red_arr_mem_45373)[sext_i32_i64(local_tid_45367)] =
                                    x_41034;
                                x_41037 = x_41034;
                                ((volatile __local
                                  float *) red_arr_mem_45375)[sext_i32_i64(local_tid_45367)] =
                                    x_41035;
                                x_41038 = x_41035;
                            }
                        }
                        if (sle32(wave_sizze_45369, skip_threads_45395)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45395 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45367 - squot32(local_tid_45367, 32) * 32) ==
                        31 && ltid_in_bounds_45394) {
                        ((volatile __local
                          bool *) red_arr_mem_45371)[sext_i32_i64(squot32(local_tid_45367,
                                                                          32))] =
                            x_41033;
                        ((volatile __local
                          int32_t *) red_arr_mem_45373)[sext_i32_i64(squot32(local_tid_45367,
                                                                             32))] =
                            x_41034;
                        ((volatile __local
                          float *) red_arr_mem_45375)[sext_i32_i64(squot32(local_tid_45367,
                                                                           32))] =
                            x_41035;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45397;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45367, 32) == 0 &&
                            ltid_in_bounds_45394) {
                            x_45383 = ((volatile __local
                                        bool *) red_arr_mem_45371)[sext_i32_i64(local_tid_45367)];
                            x_45384 = ((volatile __local
                                        int32_t *) red_arr_mem_45373)[sext_i32_i64(local_tid_45367)];
                            x_45385 = ((volatile __local
                                        float *) red_arr_mem_45375)[sext_i32_i64(local_tid_45367)];
                            if ((local_tid_45367 - squot32(local_tid_45367,
                                                           32) * 32) == 0) {
                                x_45380 = x_45383;
                                x_45381 = x_45384;
                                x_45382 = x_45385;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45397 = 1;
                        while (slt32(skip_threads_45397, 32)) {
                            if (sle32(skip_threads_45397, local_tid_45367 -
                                      squot32(local_tid_45367, 32) * 32) &&
                                (squot32(local_tid_45367, 32) == 0 &&
                                 ltid_in_bounds_45394)) {
                                // read operands
                                {
                                    x_45380 = ((volatile __local
                                                bool *) red_arr_mem_45371)[sext_i32_i64(local_tid_45367) -
                                                                           sext_i32_i64(skip_threads_45397)];
                                    x_45381 = ((volatile __local
                                                int32_t *) red_arr_mem_45373)[sext_i32_i64(local_tid_45367) -
                                                                              sext_i32_i64(skip_threads_45397)];
                                    x_45382 = ((volatile __local
                                                float *) red_arr_mem_45375)[sext_i32_i64(local_tid_45367) -
                                                                            sext_i32_i64(skip_threads_45397)];
                                }
                                // perform operation
                                {
                                    bool inactive_45398 =
                                         slt64(srem64(sext_i32_i64(local_tid_45367 *
                                                      32 + 32 - 1),
                                                      iota32_arg_29515),
                                               sext_i32_i64(local_tid_45367 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45367 -
                                                             skip_threads_45397) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45398) {
                                        x_45380 = x_45383;
                                        x_45381 = x_45384;
                                        x_45382 = x_45385;
                                    }
                                    if (!inactive_45398) {
                                        bool defunc_1_op_res_45386;
                                        int32_t defunc_1_op_res_45387;
                                        
                                        if (x_45380) {
                                            defunc_1_op_res_45386 = x_45380;
                                            defunc_1_op_res_45387 = x_45381;
                                        } else {
                                            bool x_45388 = x_45383 && x_45383;
                                            bool x_45389 = !x_45383;
                                            bool y_45390 = x_45380 && x_45389;
                                            bool defunc_1_op_res_f_res_45391 =
                                                 x_45388 || y_45390;
                                            int32_t defunc_1_op_res_f_res_45392;
                                            
                                            if (x_45383) {
                                                defunc_1_op_res_f_res_45392 =
                                                    x_45384;
                                            } else {
                                                defunc_1_op_res_f_res_45392 =
                                                    x_45381;
                                            }
                                            defunc_1_op_res_45386 =
                                                defunc_1_op_res_f_res_45391;
                                            defunc_1_op_res_45387 =
                                                defunc_1_op_res_f_res_45392;
                                        }
                                        
                                        float defunc_1_op_res_45393 = x_45382 +
                                              x_45385;
                                        
                                        x_45380 = defunc_1_op_res_45386;
                                        x_45381 = defunc_1_op_res_45387;
                                        x_45382 = defunc_1_op_res_45393;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45369, skip_threads_45397)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45397, local_tid_45367 -
                                      squot32(local_tid_45367, 32) * 32) &&
                                (squot32(local_tid_45367, 32) == 0 &&
                                 ltid_in_bounds_45394)) {
                                // write result
                                {
                                    ((volatile __local
                                      bool *) red_arr_mem_45371)[sext_i32_i64(local_tid_45367)] =
                                        x_45380;
                                    x_45383 = x_45380;
                                    ((volatile __local
                                      int32_t *) red_arr_mem_45373)[sext_i32_i64(local_tid_45367)] =
                                        x_45381;
                                    x_45384 = x_45381;
                                    ((volatile __local
                                      float *) red_arr_mem_45375)[sext_i32_i64(local_tid_45367)] =
                                        x_45382;
                                    x_45385 = x_45382;
                                }
                            }
                            if (sle32(wave_sizze_45369, skip_threads_45397)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45397 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45367, 32) == 0 ||
                          !ltid_in_bounds_45394)) {
                        // read operands
                        {
                            x_41036 = x_41033;
                            x_41037 = x_41034;
                            x_41038 = x_41035;
                            x_41033 = ((__local
                                        bool *) red_arr_mem_45371)[sext_i32_i64(squot32(local_tid_45367,
                                                                                        32)) -
                                                                   1];
                            x_41034 = ((__local
                                        int32_t *) red_arr_mem_45373)[sext_i32_i64(squot32(local_tid_45367,
                                                                                           32)) -
                                                                      1];
                            x_41035 = ((__local
                                        float *) red_arr_mem_45375)[sext_i32_i64(squot32(local_tid_45367,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45399 =
                                 slt64(srem64(sext_i32_i64(local_tid_45367),
                                              iota32_arg_29515),
                                       sext_i32_i64(local_tid_45367) -
                                       sext_i32_i64(squot32(local_tid_45367,
                                                            32) * 32 - 1));
                            
                            if (inactive_45399) {
                                x_41033 = x_41036;
                                x_41034 = x_41037;
                                x_41035 = x_41038;
                            }
                            if (!inactive_45399) {
                                bool defunc_1_op_res_41039;
                                int32_t defunc_1_op_res_41040;
                                
                                if (x_41033) {
                                    defunc_1_op_res_41039 = x_41033;
                                    defunc_1_op_res_41040 = x_41034;
                                } else {
                                    bool x_41041 = x_41036 && x_41036;
                                    bool x_41042 = !x_41036;
                                    bool y_41043 = x_41033 && x_41042;
                                    bool defunc_1_op_res_f_res_41044 =
                                         x_41041 || y_41043;
                                    int32_t defunc_1_op_res_f_res_41045;
                                    
                                    if (x_41036) {
                                        defunc_1_op_res_f_res_41045 = x_41037;
                                    } else {
                                        defunc_1_op_res_f_res_41045 = x_41034;
                                    }
                                    defunc_1_op_res_41039 =
                                        defunc_1_op_res_f_res_41044;
                                    defunc_1_op_res_41040 =
                                        defunc_1_op_res_f_res_41045;
                                }
                                
                                float defunc_1_op_res_41046 = x_41035 + x_41038;
                                
                                x_41033 = defunc_1_op_res_41039;
                                x_41034 = defunc_1_op_res_41040;
                                x_41035 = defunc_1_op_res_41046;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              bool *) red_arr_mem_45371)[sext_i32_i64(local_tid_45367)] =
                                x_41033;
                            ((__local
                              int32_t *) red_arr_mem_45373)[sext_i32_i64(local_tid_45367)] =
                                x_41034;
                            ((__local
                              float *) red_arr_mem_45375)[sext_i32_i64(local_tid_45367)] =
                                x_41035;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45367, 32) == 0) {
                        ((__local
                          bool *) red_arr_mem_45371)[sext_i32_i64(local_tid_45367)] =
                            x_41036;
                        ((__local
                          int32_t *) red_arr_mem_45373)[sext_i32_i64(local_tid_45367)] =
                            x_41037;
                        ((__local
                          float *) red_arr_mem_45375)[sext_i32_i64(local_tid_45367)] =
                            x_41038;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45379) *
                      squot64(segred_group_sizze_41027,
                              segment_sizze_nonzzero_45364) +
                      sext_i32_i64(local_tid_45367), m_29116) &&
                slt64(sext_i32_i64(local_tid_45367),
                      squot64(segred_group_sizze_41027,
                              segment_sizze_nonzzero_45364))) {
                ((__global
                  bool *) mem_44043)[sext_i32_i64(virt_group_id_45379) *
                                     squot64(segred_group_sizze_41027,
                                             segment_sizze_nonzzero_45364) +
                                     sext_i32_i64(local_tid_45367)] = ((__local
                                                                        bool *) red_arr_mem_45371)[(sext_i32_i64(local_tid_45367) +
                                                                                                    1) *
                                                                                                   segment_sizze_nonzzero_45364 -
                                                                                                   1];
                ((__global
                  int32_t *) mem_44045)[sext_i32_i64(virt_group_id_45379) *
                                        squot64(segred_group_sizze_41027,
                                                segment_sizze_nonzzero_45364) +
                                        sext_i32_i64(local_tid_45367)] =
                    ((__local
                      int32_t *) red_arr_mem_45373)[(sext_i32_i64(local_tid_45367) +
                                                     1) *
                                                    segment_sizze_nonzzero_45364 -
                                                    1];
                ((__global
                  float *) mem_44047)[sext_i32_i64(virt_group_id_45379) *
                                      squot64(segred_group_sizze_41027,
                                              segment_sizze_nonzzero_45364) +
                                      sext_i32_i64(local_tid_45367)] = ((__local
                                                                         float *) red_arr_mem_45375)[(sext_i32_i64(local_tid_45367) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45364 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_41027
}
__kernel void mainDetailedzicopy_44543(int64_t m_27773, int64_t i32_res_27925,
                                       int64_t ctx_param_ext_43322,
                                       int64_t ctx_param_ext_43323,
                                       int64_t ctx_param_ext_43325, __global
                                       unsigned char *mem_param_43327, __global
                                       unsigned char *mem_43332)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_44543;
    int32_t copy_ltid_44544;
    int32_t copy_gid_44545;
    
    copy_gtid_44543 = get_global_id(0);
    copy_ltid_44544 = get_local_id(0);
    copy_gid_44545 = get_group_id(0);
    if (slt64(sext_i32_i64(copy_gtid_44543), m_27773 * i32_res_27925)) {
        ((__global float *) mem_43332)[(sext_i32_i64(copy_gtid_44543) -
                                        squot64(sext_i32_i64(copy_gtid_44543),
                                                i32_res_27925) *
                                        i32_res_27925) * m_27773 +
                                       squot64(sext_i32_i64(copy_gtid_44543),
                                               i32_res_27925)] = ((__global
                                                                   float *) mem_param_43327)[ctx_param_ext_43322 +
                                                                                             (squot64(sext_i32_i64(copy_gtid_44543),
                                                                                                      i32_res_27925) *
                                                                                              ctx_param_ext_43323 +
                                                                                              (sext_i32_i64(copy_gtid_44543) -
                                                                                               squot64(sext_i32_i64(copy_gtid_44543),
                                                                                                       i32_res_27925) *
                                                                                               i32_res_27925) *
                                                                                              ctx_param_ext_43325)];
    }
    
  error_0:
    return;
}
__kernel void mainDetailedziscan_stage1_31956(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_44973_backing_aligned_0,
                                              int64_t N_27772, int64_t m_27773,
                                              int64_t N_27774, __global
                                              unsigned char *images_mem_43123,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_43881,
                                              __global unsigned char *mem_43910,
                                              __global unsigned char *mem_43913,
                                              int32_t num_threads_44967)
{
    #define segscan_group_sizze_31973 (mainDetailedzisegscan_group_sizze_31950)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44973_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44973_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44968;
    int32_t local_tid_44969;
    int64_t group_sizze_44972;
    int32_t wave_sizze_44971;
    int32_t group_tid_44970;
    
    global_tid_44968 = get_global_id(0);
    local_tid_44969 = get_local_id(0);
    group_sizze_44972 = get_local_size(0);
    wave_sizze_44971 = LOCKSTEP_WIDTH;
    group_tid_44970 = get_group_id(0);
    
    int32_t phys_tid_31956;
    
    phys_tid_31956 = global_tid_44968;
    
    __local char *scan_arr_mem_44973;
    
    scan_arr_mem_44973 = (__local char *) scan_arr_mem_44973_backing_0;
    
    int64_t x_31978;
    int64_t x_31979;
    
    x_31978 = 0;
    for (int64_t j_44975 = 0; j_44975 < sdiv_up64(m_27773 * N_27772,
                                                  sext_i32_i64(num_threads_44967));
         j_44975++) {
        int64_t chunk_offset_44976 = segscan_group_sizze_31973 * j_44975 +
                sext_i32_i64(group_tid_44970) * (segscan_group_sizze_31973 *
                                                 sdiv_up64(m_27773 * N_27772,
                                                           sext_i32_i64(num_threads_44967)));
        int64_t flat_idx_44977 = chunk_offset_44976 +
                sext_i32_i64(local_tid_44969);
        int64_t gtid_31947 = squot64(flat_idx_44977, N_27772);
        int64_t gtid_31955 = flat_idx_44977 - squot64(flat_idx_44977, N_27772) *
                N_27772;
        
        // threads in bounds read input
        {
            if (slt64(gtid_31947, m_27773) && slt64(gtid_31955, N_27772)) {
                float x_31983 = ((__global
                                  float *) images_mem_43123)[gtid_31947 *
                                                             N_27774 +
                                                             gtid_31955];
                bool isnan_res_31985;
                
                isnan_res_31985 = futrts_isnan32(x_31983);
                
                bool cond_31986 = !isnan_res_31985;
                float defunc_0_f_res_31987;
                
                if (cond_31986) {
                    float x_31984 = ((__global
                                      float *) defunc_3_map_res_mem_43881)[gtid_31947 *
                                                                           N_27772 +
                                                                           gtid_31955];
                    float defunc_0_f_res_t_res_31988 = x_31983 - x_31984;
                    
                    defunc_0_f_res_31987 = defunc_0_f_res_t_res_31988;
                } else {
                    defunc_0_f_res_31987 = NAN;
                }
                
                bool isnan_res_31989;
                
                isnan_res_31989 = futrts_isnan32(defunc_0_f_res_31987);
                
                bool defunc_0_p_res_31990 = !isnan_res_31989;
                int64_t defunc_0_f_res_31991 =
                        btoi_bool_i64(defunc_0_p_res_31990);
                
                // write to-scan values to parameters
                {
                    x_31979 = defunc_0_f_res_31991;
                }
                // write mapped values results to global memory
                {
                    ((__global float *) mem_43913)[gtid_31947 * N_27772 +
                                                   gtid_31955] =
                        defunc_0_f_res_31987;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_31947, m_27773) && slt64(gtid_31955,
                                                          N_27772))) {
                    x_31979 = 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_31980 = add64(x_31978, x_31979);
                
                ((__local
                  int64_t *) scan_arr_mem_44973)[sext_i32_i64(local_tid_44969)] =
                    defunc_1_op_res_31980;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_44978;
            int64_t x_44979;
            int64_t x_44981;
            int64_t x_44982;
            bool ltid_in_bounds_44984;
            
            ltid_in_bounds_44984 = slt64(sext_i32_i64(local_tid_44969),
                                         segscan_group_sizze_31973);
            
            int32_t skip_threads_44985;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_44984) {
                    x_44979 = ((volatile __local
                                int64_t *) scan_arr_mem_44973)[sext_i32_i64(local_tid_44969)];
                    if ((local_tid_44969 - squot32(local_tid_44969, 32) * 32) ==
                        0) {
                        x_44978 = x_44979;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_44985 = 1;
                while (slt32(skip_threads_44985, 32)) {
                    if (sle32(skip_threads_44985, local_tid_44969 -
                              squot32(local_tid_44969, 32) * 32) &&
                        ltid_in_bounds_44984) {
                        // read operands
                        {
                            x_44978 = ((volatile __local
                                        int64_t *) scan_arr_mem_44973)[sext_i32_i64(local_tid_44969) -
                                                                       sext_i32_i64(skip_threads_44985)];
                        }
                        // perform operation
                        {
                            bool inactive_44986 =
                                 slt64(srem64(sext_i32_i64(local_tid_44969) +
                                              chunk_offset_44976, N_27772),
                                       sext_i32_i64(local_tid_44969) +
                                       chunk_offset_44976 -
                                       (sext_i32_i64(local_tid_44969 -
                                        skip_threads_44985) +
                                        chunk_offset_44976));
                            
                            if (inactive_44986) {
                                x_44978 = x_44979;
                            }
                            if (!inactive_44986) {
                                int64_t defunc_1_op_res_44980 = add64(x_44978,
                                                                      x_44979);
                                
                                x_44978 = defunc_1_op_res_44980;
                            }
                        }
                    }
                    if (sle32(wave_sizze_44971, skip_threads_44985)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_44985, local_tid_44969 -
                              squot32(local_tid_44969, 32) * 32) &&
                        ltid_in_bounds_44984) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_44973)[sext_i32_i64(local_tid_44969)] =
                                x_44978;
                            x_44979 = x_44978;
                        }
                    }
                    if (sle32(wave_sizze_44971, skip_threads_44985)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_44985 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_44969 - squot32(local_tid_44969, 32) * 32) ==
                    31 && ltid_in_bounds_44984) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_44973)[sext_i32_i64(squot32(local_tid_44969,
                                                                          32))] =
                        x_44978;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_44987;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_44969, 32) == 0 &&
                        ltid_in_bounds_44984) {
                        x_44982 = ((volatile __local
                                    int64_t *) scan_arr_mem_44973)[sext_i32_i64(local_tid_44969)];
                        if ((local_tid_44969 - squot32(local_tid_44969, 32) *
                             32) == 0) {
                            x_44981 = x_44982;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44987 = 1;
                    while (slt32(skip_threads_44987, 32)) {
                        if (sle32(skip_threads_44987, local_tid_44969 -
                                  squot32(local_tid_44969, 32) * 32) &&
                            (squot32(local_tid_44969, 32) == 0 &&
                             ltid_in_bounds_44984)) {
                            // read operands
                            {
                                x_44981 = ((volatile __local
                                            int64_t *) scan_arr_mem_44973)[sext_i32_i64(local_tid_44969) -
                                                                           sext_i32_i64(skip_threads_44987)];
                            }
                            // perform operation
                            {
                                bool inactive_44988 =
                                     slt64(srem64(sext_i32_i64(local_tid_44969 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_44976, N_27772),
                                           sext_i32_i64(local_tid_44969 * 32 +
                                           32 - 1) + chunk_offset_44976 -
                                           (sext_i32_i64((local_tid_44969 -
                                                          skip_threads_44987) *
                                            32 + 32 - 1) + chunk_offset_44976));
                                
                                if (inactive_44988) {
                                    x_44981 = x_44982;
                                }
                                if (!inactive_44988) {
                                    int64_t defunc_1_op_res_44983 =
                                            add64(x_44981, x_44982);
                                    
                                    x_44981 = defunc_1_op_res_44983;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44971, skip_threads_44987)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44987, local_tid_44969 -
                                  squot32(local_tid_44969, 32) * 32) &&
                            (squot32(local_tid_44969, 32) == 0 &&
                             ltid_in_bounds_44984)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_44973)[sext_i32_i64(local_tid_44969)] =
                                    x_44981;
                                x_44982 = x_44981;
                            }
                        }
                        if (sle32(wave_sizze_44971, skip_threads_44987)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44987 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_44969, 32) == 0 ||
                      !ltid_in_bounds_44984)) {
                    // read operands
                    {
                        x_44979 = x_44978;
                        x_44978 = ((__local
                                    int64_t *) scan_arr_mem_44973)[sext_i32_i64(squot32(local_tid_44969,
                                                                                        32)) -
                                                                   1];
                    }
                    // perform operation
                    {
                        bool inactive_44989 =
                             slt64(srem64(sext_i32_i64(local_tid_44969) +
                                          chunk_offset_44976, N_27772),
                                   sext_i32_i64(local_tid_44969) +
                                   chunk_offset_44976 -
                                   (sext_i32_i64(squot32(local_tid_44969, 32) *
                                    32 - 1) + chunk_offset_44976));
                        
                        if (inactive_44989) {
                            x_44978 = x_44979;
                        }
                        if (!inactive_44989) {
                            int64_t defunc_1_op_res_44980 = add64(x_44978,
                                                                  x_44979);
                            
                            x_44978 = defunc_1_op_res_44980;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_44973)[sext_i32_i64(local_tid_44969)] =
                            x_44978;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_44969, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_44973)[sext_i32_i64(local_tid_44969)] =
                        x_44979;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_31947, m_27773) && slt64(gtid_31955, N_27772)) {
                    ((__global int64_t *) mem_43910)[gtid_31947 * N_27772 +
                                                     gtid_31955] = ((__local
                                                                     int64_t *) scan_arr_mem_44973)[sext_i32_i64(local_tid_44969)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_44990 = slt64(srem64(chunk_offset_44976 +
                                                          segscan_group_sizze_31973,
                                                          N_27772),
                                                   chunk_offset_44976 +
                                                   segscan_group_sizze_31973 -
                                                   (chunk_offset_44976 +
                                                    segscan_group_sizze_31973 -
                                                    1));
                bool should_load_carry_44991 = local_tid_44969 == 0 &&
                     !crosses_segment_44990;
                
                if (should_load_carry_44991) {
                    x_31978 = ((__local
                                int64_t *) scan_arr_mem_44973)[segscan_group_sizze_31973 -
                                                               1];
                }
                if (!should_load_carry_44991) {
                    x_31978 = 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_31973
}
__kernel void mainDetailedziscan_stage1_33611(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_45360_backing_aligned_0,
                                              int64_t N_27772, int64_t m_27773,
                                              int64_t iota32_arg_28172, __global
                                              unsigned char *defunc_4_map_res_mem_43919,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_43982,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_43983,
                                              __global
                                              unsigned char *defunc_0_f_res_mem_44017,
                                              __global unsigned char *mem_44091,
                                              __global unsigned char *mem_44095,
                                              int32_t num_threads_45354)
{
    #define segscan_group_sizze_33689 (mainDetailedzisegscan_group_sizze_33605)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45360_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45360_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45355;
    int32_t local_tid_45356;
    int64_t group_sizze_45359;
    int32_t wave_sizze_45358;
    int32_t group_tid_45357;
    
    global_tid_45355 = get_global_id(0);
    local_tid_45356 = get_local_id(0);
    group_sizze_45359 = get_local_size(0);
    wave_sizze_45358 = LOCKSTEP_WIDTH;
    group_tid_45357 = get_group_id(0);
    
    int32_t phys_tid_33611;
    
    phys_tid_33611 = global_tid_45355;
    
    __local char *scan_arr_mem_45360;
    
    scan_arr_mem_45360 = (__local char *) scan_arr_mem_45360_backing_0;
    
    float x_33693;
    float x_33694;
    
    x_33693 = 0.0F;
    for (int64_t j_45362 = 0; j_45362 < sdiv_up64(m_27773 * iota32_arg_28172,
                                                  sext_i32_i64(num_threads_45354));
         j_45362++) {
        int64_t chunk_offset_45363 = segscan_group_sizze_33689 * j_45362 +
                sext_i32_i64(group_tid_45357) * (segscan_group_sizze_33689 *
                                                 sdiv_up64(m_27773 *
                                                           iota32_arg_28172,
                                                           sext_i32_i64(num_threads_45354)));
        int64_t flat_idx_45364 = chunk_offset_45363 +
                sext_i32_i64(local_tid_45356);
        int64_t gtid_33602 = squot64(flat_idx_45364, iota32_arg_28172);
        int64_t gtid_33610 = flat_idx_45364 - squot64(flat_idx_45364,
                                                      iota32_arg_28172) *
                iota32_arg_28172;
        
        // threads in bounds read input
        {
            if (slt64(gtid_33602, m_27773) && slt64(gtid_33610,
                                                    iota32_arg_28172)) {
                int32_t y_33700 = ((__global int32_t *) mem_44091)[gtid_33602];
                int32_t index_primexp_41186 = sext_i64_i32(gtid_33610);
                bool cond_33703 = sle32(y_33700, index_primexp_41186);
                float defunc_0_f_res_33704;
                
                if (cond_33703) {
                    defunc_0_f_res_33704 = 0.0F;
                } else {
                    int32_t x_33696 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43983)[gtid_33602];
                    int32_t x_33697 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43982)[gtid_33602];
                    float x_33698 = ((__global
                                      float *) defunc_0_f_res_mem_44017)[gtid_33602];
                    bool cond_33705 = index_primexp_41186 == 0;
                    float defunc_0_f_res_f_res_33706;
                    
                    if (cond_33705) {
                        defunc_0_f_res_f_res_33706 = x_33698;
                    } else {
                        int32_t i_33707 = add32(x_33696, index_primexp_41186);
                        int64_t i_33708 = sext_i32_i64(i_33707);
                        float x_33709 = ((__global
                                          float *) defunc_4_map_res_mem_43919)[gtid_33602 *
                                                                               N_27772 +
                                                                               i_33708];
                        int32_t x_33710 = sub32(x_33696, x_33697);
                        int32_t i_33711 = add32(x_33710, index_primexp_41186);
                        int64_t i_33712 = sext_i32_i64(i_33711);
                        float y_33713 = ((__global
                                          float *) defunc_4_map_res_mem_43919)[gtid_33602 *
                                                                               N_27772 +
                                                                               i_33712];
                        float defunc_0_f_res_f_res_f_res_33714 = x_33709 -
                              y_33713;
                        
                        defunc_0_f_res_f_res_33706 =
                            defunc_0_f_res_f_res_f_res_33714;
                    }
                    defunc_0_f_res_33704 = defunc_0_f_res_f_res_33706;
                }
                // write to-scan values to parameters
                {
                    x_33694 = defunc_0_f_res_33704;
                }
                // write mapped values results to global memory
                { }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_33602, m_27773) && slt64(gtid_33610,
                                                          iota32_arg_28172))) {
                    x_33694 = 0.0F;
                }
            }
            // combine with carry and write to local memory
            {
                float defunc_1_op_res_33695 = x_33693 + x_33694;
                
                ((__local
                  float *) scan_arr_mem_45360)[sext_i32_i64(local_tid_45356)] =
                    defunc_1_op_res_33695;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float x_45365;
            float x_45366;
            float x_45368;
            float x_45369;
            bool ltid_in_bounds_45371;
            
            ltid_in_bounds_45371 = slt64(sext_i32_i64(local_tid_45356),
                                         segscan_group_sizze_33689);
            
            int32_t skip_threads_45372;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_45371) {
                    x_45366 = ((volatile __local
                                float *) scan_arr_mem_45360)[sext_i32_i64(local_tid_45356)];
                    if ((local_tid_45356 - squot32(local_tid_45356, 32) * 32) ==
                        0) {
                        x_45365 = x_45366;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_45372 = 1;
                while (slt32(skip_threads_45372, 32)) {
                    if (sle32(skip_threads_45372, local_tid_45356 -
                              squot32(local_tid_45356, 32) * 32) &&
                        ltid_in_bounds_45371) {
                        // read operands
                        {
                            x_45365 = ((volatile __local
                                        float *) scan_arr_mem_45360)[sext_i32_i64(local_tid_45356) -
                                                                     sext_i32_i64(skip_threads_45372)];
                        }
                        // perform operation
                        {
                            bool inactive_45373 =
                                 slt64(srem64(sext_i32_i64(local_tid_45356) +
                                              chunk_offset_45363,
                                              iota32_arg_28172),
                                       sext_i32_i64(local_tid_45356) +
                                       chunk_offset_45363 -
                                       (sext_i32_i64(local_tid_45356 -
                                        skip_threads_45372) +
                                        chunk_offset_45363));
                            
                            if (inactive_45373) {
                                x_45365 = x_45366;
                            }
                            if (!inactive_45373) {
                                float defunc_1_op_res_45367 = x_45365 + x_45366;
                                
                                x_45365 = defunc_1_op_res_45367;
                            }
                        }
                    }
                    if (sle32(wave_sizze_45358, skip_threads_45372)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_45372, local_tid_45356 -
                              squot32(local_tid_45356, 32) * 32) &&
                        ltid_in_bounds_45371) {
                        // write result
                        {
                            ((volatile __local
                              float *) scan_arr_mem_45360)[sext_i32_i64(local_tid_45356)] =
                                x_45365;
                            x_45366 = x_45365;
                        }
                    }
                    if (sle32(wave_sizze_45358, skip_threads_45372)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_45372 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_45356 - squot32(local_tid_45356, 32) * 32) ==
                    31 && ltid_in_bounds_45371) {
                    ((volatile __local
                      float *) scan_arr_mem_45360)[sext_i32_i64(squot32(local_tid_45356,
                                                                        32))] =
                        x_45365;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_45374;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_45356, 32) == 0 &&
                        ltid_in_bounds_45371) {
                        x_45369 = ((volatile __local
                                    float *) scan_arr_mem_45360)[sext_i32_i64(local_tid_45356)];
                        if ((local_tid_45356 - squot32(local_tid_45356, 32) *
                             32) == 0) {
                            x_45368 = x_45369;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45374 = 1;
                    while (slt32(skip_threads_45374, 32)) {
                        if (sle32(skip_threads_45374, local_tid_45356 -
                                  squot32(local_tid_45356, 32) * 32) &&
                            (squot32(local_tid_45356, 32) == 0 &&
                             ltid_in_bounds_45371)) {
                            // read operands
                            {
                                x_45368 = ((volatile __local
                                            float *) scan_arr_mem_45360)[sext_i32_i64(local_tid_45356) -
                                                                         sext_i32_i64(skip_threads_45374)];
                            }
                            // perform operation
                            {
                                bool inactive_45375 =
                                     slt64(srem64(sext_i32_i64(local_tid_45356 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_45363,
                                                  iota32_arg_28172),
                                           sext_i32_i64(local_tid_45356 * 32 +
                                           32 - 1) + chunk_offset_45363 -
                                           (sext_i32_i64((local_tid_45356 -
                                                          skip_threads_45374) *
                                            32 + 32 - 1) + chunk_offset_45363));
                                
                                if (inactive_45375) {
                                    x_45368 = x_45369;
                                }
                                if (!inactive_45375) {
                                    float defunc_1_op_res_45370 = x_45368 +
                                          x_45369;
                                    
                                    x_45368 = defunc_1_op_res_45370;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45358, skip_threads_45374)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45374, local_tid_45356 -
                                  squot32(local_tid_45356, 32) * 32) &&
                            (squot32(local_tid_45356, 32) == 0 &&
                             ltid_in_bounds_45371)) {
                            // write result
                            {
                                ((volatile __local
                                  float *) scan_arr_mem_45360)[sext_i32_i64(local_tid_45356)] =
                                    x_45368;
                                x_45369 = x_45368;
                            }
                        }
                        if (sle32(wave_sizze_45358, skip_threads_45374)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45374 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_45356, 32) == 0 ||
                      !ltid_in_bounds_45371)) {
                    // read operands
                    {
                        x_45366 = x_45365;
                        x_45365 = ((__local
                                    float *) scan_arr_mem_45360)[sext_i32_i64(squot32(local_tid_45356,
                                                                                      32)) -
                                                                 1];
                    }
                    // perform operation
                    {
                        bool inactive_45376 =
                             slt64(srem64(sext_i32_i64(local_tid_45356) +
                                          chunk_offset_45363, iota32_arg_28172),
                                   sext_i32_i64(local_tid_45356) +
                                   chunk_offset_45363 -
                                   (sext_i32_i64(squot32(local_tid_45356, 32) *
                                    32 - 1) + chunk_offset_45363));
                        
                        if (inactive_45376) {
                            x_45365 = x_45366;
                        }
                        if (!inactive_45376) {
                            float defunc_1_op_res_45367 = x_45365 + x_45366;
                            
                            x_45365 = defunc_1_op_res_45367;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          float *) scan_arr_mem_45360)[sext_i32_i64(local_tid_45356)] =
                            x_45365;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_45356, 32) == 0) {
                    ((__local
                      float *) scan_arr_mem_45360)[sext_i32_i64(local_tid_45356)] =
                        x_45366;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_33602, m_27773) && slt64(gtid_33610,
                                                        iota32_arg_28172)) {
                    ((__global float *) mem_44095)[gtid_33602 *
                                                   iota32_arg_28172 +
                                                   gtid_33610] = ((__local
                                                                   float *) scan_arr_mem_45360)[sext_i32_i64(local_tid_45356)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_45377 = slt64(srem64(chunk_offset_45363 +
                                                          segscan_group_sizze_33689,
                                                          iota32_arg_28172),
                                                   chunk_offset_45363 +
                                                   segscan_group_sizze_33689 -
                                                   (chunk_offset_45363 +
                                                    segscan_group_sizze_33689 -
                                                    1));
                bool should_load_carry_45378 = local_tid_45356 == 0 &&
                     !crosses_segment_45377;
                
                if (should_load_carry_45378) {
                    x_33693 = ((__local
                                float *) scan_arr_mem_45360)[segscan_group_sizze_33689 -
                                                             1];
                }
                if (!should_load_carry_45378) {
                    x_33693 = 0.0F;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_33689
}
__kernel void mainDetailedziscan_stage2_31956(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_44997_backing_aligned_0,
                                              int64_t N_27772, int64_t m_27773,
                                              __global unsigned char *mem_43910,
                                              int64_t stage1_num_groups_44966,
                                              int32_t num_threads_44967)
{
    #define segscan_group_sizze_31973 (mainDetailedzisegscan_group_sizze_31950)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44997_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44997_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44992;
    int32_t local_tid_44993;
    int64_t group_sizze_44996;
    int32_t wave_sizze_44995;
    int32_t group_tid_44994;
    
    global_tid_44992 = get_global_id(0);
    local_tid_44993 = get_local_id(0);
    group_sizze_44996 = get_local_size(0);
    wave_sizze_44995 = LOCKSTEP_WIDTH;
    group_tid_44994 = get_group_id(0);
    
    int32_t phys_tid_31956;
    
    phys_tid_31956 = global_tid_44992;
    
    __local char *scan_arr_mem_44997;
    
    scan_arr_mem_44997 = (__local char *) scan_arr_mem_44997_backing_0;
    
    int64_t flat_idx_44999;
    
    flat_idx_44999 = (sext_i32_i64(local_tid_44993) + 1) *
        (segscan_group_sizze_31973 * sdiv_up64(m_27773 * N_27772,
                                               sext_i32_i64(num_threads_44967))) -
        1;
    
    int64_t gtid_31947;
    
    gtid_31947 = squot64(flat_idx_44999, N_27772);
    
    int64_t gtid_31955;
    
    gtid_31955 = flat_idx_44999 - squot64(flat_idx_44999, N_27772) * N_27772;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_31947, m_27773) && slt64(gtid_31955, N_27772)) {
            ((__local
              int64_t *) scan_arr_mem_44997)[sext_i32_i64(local_tid_44993)] =
                ((__global int64_t *) mem_43910)[gtid_31947 * N_27772 +
                                                 gtid_31955];
        } else {
            ((__local
              int64_t *) scan_arr_mem_44997)[sext_i32_i64(local_tid_44993)] = 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_31978;
    int64_t x_31979;
    int64_t x_45000;
    int64_t x_45001;
    bool ltid_in_bounds_45003;
    
    ltid_in_bounds_45003 = slt64(sext_i32_i64(local_tid_44993),
                                 stage1_num_groups_44966);
    
    int32_t skip_threads_45004;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45003) {
            x_31979 = ((volatile __local
                        int64_t *) scan_arr_mem_44997)[sext_i32_i64(local_tid_44993)];
            if ((local_tid_44993 - squot32(local_tid_44993, 32) * 32) == 0) {
                x_31978 = x_31979;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45004 = 1;
        while (slt32(skip_threads_45004, 32)) {
            if (sle32(skip_threads_45004, local_tid_44993 -
                      squot32(local_tid_44993, 32) * 32) &&
                ltid_in_bounds_45003) {
                // read operands
                {
                    x_31978 = ((volatile __local
                                int64_t *) scan_arr_mem_44997)[sext_i32_i64(local_tid_44993) -
                                                               sext_i32_i64(skip_threads_45004)];
                }
                // perform operation
                {
                    bool inactive_45005 =
                         slt64(srem64((sext_i32_i64(local_tid_44993) + 1) *
                                      (segscan_group_sizze_31973 *
                                       sdiv_up64(m_27773 * N_27772,
                                                 sext_i32_i64(num_threads_44967))) -
                                      1, N_27772),
                               (sext_i32_i64(local_tid_44993) + 1) *
                               (segscan_group_sizze_31973 * sdiv_up64(m_27773 *
                                                                      N_27772,
                                                                      sext_i32_i64(num_threads_44967))) -
                               1 - ((sext_i32_i64(local_tid_44993 -
                                     skip_threads_45004) + 1) *
                                    (segscan_group_sizze_31973 *
                                     sdiv_up64(m_27773 * N_27772,
                                               sext_i32_i64(num_threads_44967))) -
                                    1));
                    
                    if (inactive_45005) {
                        x_31978 = x_31979;
                    }
                    if (!inactive_45005) {
                        int64_t defunc_1_op_res_31980 = add64(x_31978, x_31979);
                        
                        x_31978 = defunc_1_op_res_31980;
                    }
                }
            }
            if (sle32(wave_sizze_44995, skip_threads_45004)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45004, local_tid_44993 -
                      squot32(local_tid_44993, 32) * 32) &&
                ltid_in_bounds_45003) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_44997)[sext_i32_i64(local_tid_44993)] =
                        x_31978;
                    x_31979 = x_31978;
                }
            }
            if (sle32(wave_sizze_44995, skip_threads_45004)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45004 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44993 - squot32(local_tid_44993, 32) * 32) == 31 &&
            ltid_in_bounds_45003) {
            ((volatile __local
              int64_t *) scan_arr_mem_44997)[sext_i32_i64(squot32(local_tid_44993,
                                                                  32))] =
                x_31978;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45006;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44993, 32) == 0 && ltid_in_bounds_45003) {
                x_45001 = ((volatile __local
                            int64_t *) scan_arr_mem_44997)[sext_i32_i64(local_tid_44993)];
                if ((local_tid_44993 - squot32(local_tid_44993, 32) * 32) ==
                    0) {
                    x_45000 = x_45001;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45006 = 1;
            while (slt32(skip_threads_45006, 32)) {
                if (sle32(skip_threads_45006, local_tid_44993 -
                          squot32(local_tid_44993, 32) * 32) &&
                    (squot32(local_tid_44993, 32) == 0 &&
                     ltid_in_bounds_45003)) {
                    // read operands
                    {
                        x_45000 = ((volatile __local
                                    int64_t *) scan_arr_mem_44997)[sext_i32_i64(local_tid_44993) -
                                                                   sext_i32_i64(skip_threads_45006)];
                    }
                    // perform operation
                    {
                        bool inactive_45007 =
                             slt64(srem64((sext_i32_i64(local_tid_44993 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_31973 *
                                           sdiv_up64(m_27773 * N_27772,
                                                     sext_i32_i64(num_threads_44967))) -
                                          1, N_27772),
                                   (sext_i32_i64(local_tid_44993 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_31973 *
                                               sdiv_up64(m_27773 * N_27772,
                                                         sext_i32_i64(num_threads_44967))) -
                                   1 - ((sext_i32_i64((local_tid_44993 -
                                                       skip_threads_45006) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_31973 *
                                         sdiv_up64(m_27773 * N_27772,
                                                   sext_i32_i64(num_threads_44967))) -
                                        1));
                        
                        if (inactive_45007) {
                            x_45000 = x_45001;
                        }
                        if (!inactive_45007) {
                            int64_t defunc_1_op_res_45002 = add64(x_45000,
                                                                  x_45001);
                            
                            x_45000 = defunc_1_op_res_45002;
                        }
                    }
                }
                if (sle32(wave_sizze_44995, skip_threads_45006)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45006, local_tid_44993 -
                          squot32(local_tid_44993, 32) * 32) &&
                    (squot32(local_tid_44993, 32) == 0 &&
                     ltid_in_bounds_45003)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_44997)[sext_i32_i64(local_tid_44993)] =
                            x_45000;
                        x_45001 = x_45000;
                    }
                }
                if (sle32(wave_sizze_44995, skip_threads_45006)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45006 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44993, 32) == 0 || !ltid_in_bounds_45003)) {
            // read operands
            {
                x_31979 = x_31978;
                x_31978 = ((__local
                            int64_t *) scan_arr_mem_44997)[sext_i32_i64(squot32(local_tid_44993,
                                                                                32)) -
                                                           1];
            }
            // perform operation
            {
                bool inactive_45008 =
                     slt64(srem64((sext_i32_i64(local_tid_44993) + 1) *
                                  (segscan_group_sizze_31973 *
                                   sdiv_up64(m_27773 * N_27772,
                                             sext_i32_i64(num_threads_44967))) -
                                  1, N_27772), (sext_i32_i64(local_tid_44993) +
                                                1) *
                           (segscan_group_sizze_31973 * sdiv_up64(m_27773 *
                                                                  N_27772,
                                                                  sext_i32_i64(num_threads_44967))) -
                           1 - ((sext_i32_i64(squot32(local_tid_44993, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_31973 *
                                                 sdiv_up64(m_27773 * N_27772,
                                                           sext_i32_i64(num_threads_44967))) -
                                1));
                
                if (inactive_45008) {
                    x_31978 = x_31979;
                }
                if (!inactive_45008) {
                    int64_t defunc_1_op_res_31980 = add64(x_31978, x_31979);
                    
                    x_31978 = defunc_1_op_res_31980;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_44997)[sext_i32_i64(local_tid_44993)] =
                    x_31978;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44993, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_44997)[sext_i32_i64(local_tid_44993)] =
                x_31979;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_31947, m_27773) && slt64(gtid_31955, N_27772)) {
            ((__global int64_t *) mem_43910)[gtid_31947 * N_27772 +
                                             gtid_31955] = ((__local
                                                             int64_t *) scan_arr_mem_44997)[sext_i32_i64(local_tid_44993)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_31973
}
__kernel void mainDetailedziscan_stage2_33611(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_45384_backing_aligned_0,
                                              int64_t m_27773,
                                              int64_t iota32_arg_28172, __global
                                              unsigned char *mem_44095,
                                              int64_t stage1_num_groups_45353,
                                              int32_t num_threads_45354)
{
    #define segscan_group_sizze_33689 (mainDetailedzisegscan_group_sizze_33605)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45384_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45384_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45379;
    int32_t local_tid_45380;
    int64_t group_sizze_45383;
    int32_t wave_sizze_45382;
    int32_t group_tid_45381;
    
    global_tid_45379 = get_global_id(0);
    local_tid_45380 = get_local_id(0);
    group_sizze_45383 = get_local_size(0);
    wave_sizze_45382 = LOCKSTEP_WIDTH;
    group_tid_45381 = get_group_id(0);
    
    int32_t phys_tid_33611;
    
    phys_tid_33611 = global_tid_45379;
    
    __local char *scan_arr_mem_45384;
    
    scan_arr_mem_45384 = (__local char *) scan_arr_mem_45384_backing_0;
    
    int64_t flat_idx_45386;
    
    flat_idx_45386 = (sext_i32_i64(local_tid_45380) + 1) *
        (segscan_group_sizze_33689 * sdiv_up64(m_27773 * iota32_arg_28172,
                                               sext_i32_i64(num_threads_45354))) -
        1;
    
    int64_t gtid_33602;
    
    gtid_33602 = squot64(flat_idx_45386, iota32_arg_28172);
    
    int64_t gtid_33610;
    
    gtid_33610 = flat_idx_45386 - squot64(flat_idx_45386, iota32_arg_28172) *
        iota32_arg_28172;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_33602, m_27773) && slt64(gtid_33610, iota32_arg_28172)) {
            ((__local
              float *) scan_arr_mem_45384)[sext_i32_i64(local_tid_45380)] =
                ((__global float *) mem_44095)[gtid_33602 * iota32_arg_28172 +
                                               gtid_33610];
        } else {
            ((__local
              float *) scan_arr_mem_45384)[sext_i32_i64(local_tid_45380)] =
                0.0F;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float x_33693;
    float x_33694;
    float x_45387;
    float x_45388;
    bool ltid_in_bounds_45390;
    
    ltid_in_bounds_45390 = slt64(sext_i32_i64(local_tid_45380),
                                 stage1_num_groups_45353);
    
    int32_t skip_threads_45391;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45390) {
            x_33694 = ((volatile __local
                        float *) scan_arr_mem_45384)[sext_i32_i64(local_tid_45380)];
            if ((local_tid_45380 - squot32(local_tid_45380, 32) * 32) == 0) {
                x_33693 = x_33694;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45391 = 1;
        while (slt32(skip_threads_45391, 32)) {
            if (sle32(skip_threads_45391, local_tid_45380 -
                      squot32(local_tid_45380, 32) * 32) &&
                ltid_in_bounds_45390) {
                // read operands
                {
                    x_33693 = ((volatile __local
                                float *) scan_arr_mem_45384)[sext_i32_i64(local_tid_45380) -
                                                             sext_i32_i64(skip_threads_45391)];
                }
                // perform operation
                {
                    bool inactive_45392 =
                         slt64(srem64((sext_i32_i64(local_tid_45380) + 1) *
                                      (segscan_group_sizze_33689 *
                                       sdiv_up64(m_27773 * iota32_arg_28172,
                                                 sext_i32_i64(num_threads_45354))) -
                                      1, iota32_arg_28172),
                               (sext_i32_i64(local_tid_45380) + 1) *
                               (segscan_group_sizze_33689 * sdiv_up64(m_27773 *
                                                                      iota32_arg_28172,
                                                                      sext_i32_i64(num_threads_45354))) -
                               1 - ((sext_i32_i64(local_tid_45380 -
                                     skip_threads_45391) + 1) *
                                    (segscan_group_sizze_33689 *
                                     sdiv_up64(m_27773 * iota32_arg_28172,
                                               sext_i32_i64(num_threads_45354))) -
                                    1));
                    
                    if (inactive_45392) {
                        x_33693 = x_33694;
                    }
                    if (!inactive_45392) {
                        float defunc_1_op_res_33695 = x_33693 + x_33694;
                        
                        x_33693 = defunc_1_op_res_33695;
                    }
                }
            }
            if (sle32(wave_sizze_45382, skip_threads_45391)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45391, local_tid_45380 -
                      squot32(local_tid_45380, 32) * 32) &&
                ltid_in_bounds_45390) {
                // write result
                {
                    ((volatile __local
                      float *) scan_arr_mem_45384)[sext_i32_i64(local_tid_45380)] =
                        x_33693;
                    x_33694 = x_33693;
                }
            }
            if (sle32(wave_sizze_45382, skip_threads_45391)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45391 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45380 - squot32(local_tid_45380, 32) * 32) == 31 &&
            ltid_in_bounds_45390) {
            ((volatile __local
              float *) scan_arr_mem_45384)[sext_i32_i64(squot32(local_tid_45380,
                                                                32))] = x_33693;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45393;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45380, 32) == 0 && ltid_in_bounds_45390) {
                x_45388 = ((volatile __local
                            float *) scan_arr_mem_45384)[sext_i32_i64(local_tid_45380)];
                if ((local_tid_45380 - squot32(local_tid_45380, 32) * 32) ==
                    0) {
                    x_45387 = x_45388;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45393 = 1;
            while (slt32(skip_threads_45393, 32)) {
                if (sle32(skip_threads_45393, local_tid_45380 -
                          squot32(local_tid_45380, 32) * 32) &&
                    (squot32(local_tid_45380, 32) == 0 &&
                     ltid_in_bounds_45390)) {
                    // read operands
                    {
                        x_45387 = ((volatile __local
                                    float *) scan_arr_mem_45384)[sext_i32_i64(local_tid_45380) -
                                                                 sext_i32_i64(skip_threads_45393)];
                    }
                    // perform operation
                    {
                        bool inactive_45394 =
                             slt64(srem64((sext_i32_i64(local_tid_45380 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_33689 *
                                           sdiv_up64(m_27773 * iota32_arg_28172,
                                                     sext_i32_i64(num_threads_45354))) -
                                          1, iota32_arg_28172),
                                   (sext_i32_i64(local_tid_45380 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_33689 *
                                               sdiv_up64(m_27773 *
                                                         iota32_arg_28172,
                                                         sext_i32_i64(num_threads_45354))) -
                                   1 - ((sext_i32_i64((local_tid_45380 -
                                                       skip_threads_45393) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_33689 *
                                         sdiv_up64(m_27773 * iota32_arg_28172,
                                                   sext_i32_i64(num_threads_45354))) -
                                        1));
                        
                        if (inactive_45394) {
                            x_45387 = x_45388;
                        }
                        if (!inactive_45394) {
                            float defunc_1_op_res_45389 = x_45387 + x_45388;
                            
                            x_45387 = defunc_1_op_res_45389;
                        }
                    }
                }
                if (sle32(wave_sizze_45382, skip_threads_45393)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45393, local_tid_45380 -
                          squot32(local_tid_45380, 32) * 32) &&
                    (squot32(local_tid_45380, 32) == 0 &&
                     ltid_in_bounds_45390)) {
                    // write result
                    {
                        ((volatile __local
                          float *) scan_arr_mem_45384)[sext_i32_i64(local_tid_45380)] =
                            x_45387;
                        x_45388 = x_45387;
                    }
                }
                if (sle32(wave_sizze_45382, skip_threads_45393)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45393 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45380, 32) == 0 || !ltid_in_bounds_45390)) {
            // read operands
            {
                x_33694 = x_33693;
                x_33693 = ((__local
                            float *) scan_arr_mem_45384)[sext_i32_i64(squot32(local_tid_45380,
                                                                              32)) -
                                                         1];
            }
            // perform operation
            {
                bool inactive_45395 =
                     slt64(srem64((sext_i32_i64(local_tid_45380) + 1) *
                                  (segscan_group_sizze_33689 *
                                   sdiv_up64(m_27773 * iota32_arg_28172,
                                             sext_i32_i64(num_threads_45354))) -
                                  1, iota32_arg_28172),
                           (sext_i32_i64(local_tid_45380) + 1) *
                           (segscan_group_sizze_33689 * sdiv_up64(m_27773 *
                                                                  iota32_arg_28172,
                                                                  sext_i32_i64(num_threads_45354))) -
                           1 - ((sext_i32_i64(squot32(local_tid_45380, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_33689 *
                                                 sdiv_up64(m_27773 *
                                                           iota32_arg_28172,
                                                           sext_i32_i64(num_threads_45354))) -
                                1));
                
                if (inactive_45395) {
                    x_33693 = x_33694;
                }
                if (!inactive_45395) {
                    float defunc_1_op_res_33695 = x_33693 + x_33694;
                    
                    x_33693 = defunc_1_op_res_33695;
                }
            }
            // write final result
            {
                ((__local
                  float *) scan_arr_mem_45384)[sext_i32_i64(local_tid_45380)] =
                    x_33693;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45380, 32) == 0) {
            ((__local
              float *) scan_arr_mem_45384)[sext_i32_i64(local_tid_45380)] =
                x_33694;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_33602, m_27773) && slt64(gtid_33610, iota32_arg_28172)) {
            ((__global float *) mem_44095)[gtid_33602 * iota32_arg_28172 +
                                           gtid_33610] = ((__local
                                                           float *) scan_arr_mem_45384)[sext_i32_i64(local_tid_45380)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_33689
}
__kernel void mainDetailedziscan_stage3_31956(__global int *global_failure,
                                              int64_t N_27772, int64_t m_27773,
                                              int64_t num_groups_31974, __global
                                              unsigned char *mem_43910,
                                              int32_t num_threads_44967,
                                              int32_t required_groups_45009)
{
    #define segscan_group_sizze_31973 (mainDetailedzisegscan_group_sizze_31950)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45010;
    int32_t local_tid_45011;
    int64_t group_sizze_45014;
    int32_t wave_sizze_45013;
    int32_t group_tid_45012;
    
    global_tid_45010 = get_global_id(0);
    local_tid_45011 = get_local_id(0);
    group_sizze_45014 = get_local_size(0);
    wave_sizze_45013 = LOCKSTEP_WIDTH;
    group_tid_45012 = get_group_id(0);
    
    int32_t phys_tid_31956;
    
    phys_tid_31956 = global_tid_45010;
    
    int32_t phys_group_id_45015;
    
    phys_group_id_45015 = get_group_id(0);
    for (int32_t i_45016 = 0; i_45016 < sdiv_up32(required_groups_45009 -
                                                  phys_group_id_45015,
                                                  sext_i64_i32(num_groups_31974));
         i_45016++) {
        int32_t virt_group_id_45017 = phys_group_id_45015 + i_45016 *
                sext_i64_i32(num_groups_31974);
        int64_t flat_idx_45018 = sext_i32_i64(virt_group_id_45017) *
                segscan_group_sizze_31973 + sext_i32_i64(local_tid_45011);
        int64_t gtid_31947 = squot64(flat_idx_45018, N_27772);
        int64_t gtid_31955 = flat_idx_45018 - squot64(flat_idx_45018, N_27772) *
                N_27772;
        int64_t orig_group_45019 = squot64(flat_idx_45018,
                                           segscan_group_sizze_31973 *
                                           sdiv_up64(m_27773 * N_27772,
                                                     sext_i32_i64(num_threads_44967)));
        int64_t carry_in_flat_idx_45020 = orig_group_45019 *
                (segscan_group_sizze_31973 * sdiv_up64(m_27773 * N_27772,
                                                       sext_i32_i64(num_threads_44967))) -
                1;
        
        if (slt64(gtid_31947, m_27773) && slt64(gtid_31955, N_27772)) {
            if (!(orig_group_45019 == 0 || (flat_idx_45018 ==
                                            (orig_group_45019 + 1) *
                                            (segscan_group_sizze_31973 *
                                             sdiv_up64(m_27773 * N_27772,
                                                       sext_i32_i64(num_threads_44967))) -
                                            1 || slt64(srem64(flat_idx_45018,
                                                              N_27772),
                                                       flat_idx_45018 -
                                                       carry_in_flat_idx_45020)))) {
                int64_t x_31978;
                int64_t x_31979;
                
                x_31978 = ((__global
                            int64_t *) mem_43910)[squot64(carry_in_flat_idx_45020,
                                                          N_27772) * N_27772 +
                                                  (carry_in_flat_idx_45020 -
                                                   squot64(carry_in_flat_idx_45020,
                                                           N_27772) * N_27772)];
                x_31979 = ((__global int64_t *) mem_43910)[gtid_31947 *
                                                           N_27772 +
                                                           gtid_31955];
                
                int64_t defunc_1_op_res_31980;
                
                defunc_1_op_res_31980 = add64(x_31978, x_31979);
                x_31978 = defunc_1_op_res_31980;
                ((__global int64_t *) mem_43910)[gtid_31947 * N_27772 +
                                                 gtid_31955] = x_31978;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_31973
}
__kernel void mainDetailedziscan_stage3_33611(__global int *global_failure,
                                              int64_t m_27773,
                                              int64_t iota32_arg_28172,
                                              int64_t num_groups_33690, __global
                                              unsigned char *mem_44095,
                                              int32_t num_threads_45354,
                                              int32_t required_groups_45396)
{
    #define segscan_group_sizze_33689 (mainDetailedzisegscan_group_sizze_33605)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45397;
    int32_t local_tid_45398;
    int64_t group_sizze_45401;
    int32_t wave_sizze_45400;
    int32_t group_tid_45399;
    
    global_tid_45397 = get_global_id(0);
    local_tid_45398 = get_local_id(0);
    group_sizze_45401 = get_local_size(0);
    wave_sizze_45400 = LOCKSTEP_WIDTH;
    group_tid_45399 = get_group_id(0);
    
    int32_t phys_tid_33611;
    
    phys_tid_33611 = global_tid_45397;
    
    int32_t phys_group_id_45402;
    
    phys_group_id_45402 = get_group_id(0);
    for (int32_t i_45403 = 0; i_45403 < sdiv_up32(required_groups_45396 -
                                                  phys_group_id_45402,
                                                  sext_i64_i32(num_groups_33690));
         i_45403++) {
        int32_t virt_group_id_45404 = phys_group_id_45402 + i_45403 *
                sext_i64_i32(num_groups_33690);
        int64_t flat_idx_45405 = sext_i32_i64(virt_group_id_45404) *
                segscan_group_sizze_33689 + sext_i32_i64(local_tid_45398);
        int64_t gtid_33602 = squot64(flat_idx_45405, iota32_arg_28172);
        int64_t gtid_33610 = flat_idx_45405 - squot64(flat_idx_45405,
                                                      iota32_arg_28172) *
                iota32_arg_28172;
        int64_t orig_group_45406 = squot64(flat_idx_45405,
                                           segscan_group_sizze_33689 *
                                           sdiv_up64(m_27773 * iota32_arg_28172,
                                                     sext_i32_i64(num_threads_45354)));
        int64_t carry_in_flat_idx_45407 = orig_group_45406 *
                (segscan_group_sizze_33689 * sdiv_up64(m_27773 *
                                                       iota32_arg_28172,
                                                       sext_i32_i64(num_threads_45354))) -
                1;
        
        if (slt64(gtid_33602, m_27773) && slt64(gtid_33610, iota32_arg_28172)) {
            if (!(orig_group_45406 == 0 || (flat_idx_45405 ==
                                            (orig_group_45406 + 1) *
                                            (segscan_group_sizze_33689 *
                                             sdiv_up64(m_27773 *
                                                       iota32_arg_28172,
                                                       sext_i32_i64(num_threads_45354))) -
                                            1 || slt64(srem64(flat_idx_45405,
                                                              iota32_arg_28172),
                                                       flat_idx_45405 -
                                                       carry_in_flat_idx_45407)))) {
                float x_33693;
                float x_33694;
                
                x_33693 = ((__global
                            float *) mem_44095)[squot64(carry_in_flat_idx_45407,
                                                        iota32_arg_28172) *
                                                iota32_arg_28172 +
                                                (carry_in_flat_idx_45407 -
                                                 squot64(carry_in_flat_idx_45407,
                                                         iota32_arg_28172) *
                                                 iota32_arg_28172)];
                x_33694 = ((__global float *) mem_44095)[gtid_33602 *
                                                         iota32_arg_28172 +
                                                         gtid_33610];
                
                float defunc_1_op_res_33695;
                
                defunc_1_op_res_33695 = x_33693 + x_33694;
                x_33693 = defunc_1_op_res_33695;
                ((__global float *) mem_44095)[gtid_33602 * iota32_arg_28172 +
                                               gtid_33610] = x_33693;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_33689
}
__kernel void mainDetailedzisegmap_29879(__global int *global_failure,
                                         int64_t N_27772, float freq_27778,
                                         int64_t i32_res_27792, __global
                                         unsigned char *mappingindices_mem_43122,
                                         __global unsigned char *mem_43127)
{
    #define segmap_group_sizze_29952 (mainDetailedzisegmap_group_sizze_29882)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44374;
    int32_t local_tid_44375;
    int64_t group_sizze_44378;
    int32_t wave_sizze_44377;
    int32_t group_tid_44376;
    
    global_tid_44374 = get_global_id(0);
    local_tid_44375 = get_local_id(0);
    group_sizze_44378 = get_local_size(0);
    wave_sizze_44377 = LOCKSTEP_WIDTH;
    group_tid_44376 = get_group_id(0);
    
    int32_t phys_tid_29879;
    
    phys_tid_29879 = global_tid_44374;
    
    int64_t gtid_29877;
    
    gtid_29877 = squot64(sext_i32_i64(group_tid_44376) *
                         segmap_group_sizze_29952 +
                         sext_i32_i64(local_tid_44375), N_27772);
    
    int64_t gtid_29878;
    
    gtid_29878 = sext_i32_i64(group_tid_44376) * segmap_group_sizze_29952 +
        sext_i32_i64(local_tid_44375) - squot64(sext_i32_i64(group_tid_44376) *
                                                segmap_group_sizze_29952 +
                                                sext_i32_i64(local_tid_44375),
                                                N_27772) * N_27772;
    if (slt64(gtid_29877, i32_res_27792) && slt64(gtid_29878, N_27772)) {
        int32_t index_primexp_41117 = sext_i64_i32(gtid_29877);
        bool index_primexp_41114 = index_primexp_41117 == 0;
        float defunc_0_f_res_29958;
        
        if (index_primexp_41114) {
            defunc_0_f_res_29958 = 1.0F;
        } else {
            int32_t x_29957 = ((__global
                                int32_t *) mappingindices_mem_43122)[gtid_29878];
            bool cond_29959 = index_primexp_41117 == 1;
            float defunc_0_f_res_f_res_29960;
            
            if (cond_29959) {
                float i32_res_29961 = sitofp_i32_f32(x_29957);
                
                defunc_0_f_res_f_res_29960 = i32_res_29961;
            } else {
                int32_t r32_arg_29962 = sdiv32(index_primexp_41117, 2);
                float i32_res_29963 = sitofp_i32_f32(r32_arg_29962);
                float i32_res_29964 = sitofp_i32_f32(x_29957);
                float x_29965 = 6.2831855F * i32_res_29963;
                float x_29966 = i32_res_29964 * x_29965;
                float angle_29967 = x_29966 / freq_27778;
                int32_t x_29968 = smod32(index_primexp_41117, 2);
                bool cond_29969 = x_29968 == 0;
                float defunc_0_f_res_f_res_f_res_29970;
                
                if (cond_29969) {
                    float sin_res_29971;
                    
                    sin_res_29971 = futrts_sin32(angle_29967);
                    defunc_0_f_res_f_res_f_res_29970 = sin_res_29971;
                } else {
                    float cos_res_29972;
                    
                    cos_res_29972 = futrts_cos32(angle_29967);
                    defunc_0_f_res_f_res_f_res_29970 = cos_res_29972;
                }
                defunc_0_f_res_f_res_29960 = defunc_0_f_res_f_res_f_res_29970;
            }
            defunc_0_f_res_29958 = defunc_0_f_res_f_res_29960;
        }
        ((__global float *) mem_43127)[gtid_29877 * N_27772 + gtid_29878] =
            defunc_0_f_res_29958;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_29952
}
__kernel void mainDetailedzisegmap_30057(__global int *global_failure,
                                         int64_t N_27772, float freq_27778,
                                         int64_t i32_res_27792, __global
                                         unsigned char *mappingindices_mem_43122,
                                         __global unsigned char *mem_43131)
{
    #define segmap_group_sizze_30126 (mainDetailedzisegmap_group_sizze_30060)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44379;
    int32_t local_tid_44380;
    int64_t group_sizze_44383;
    int32_t wave_sizze_44382;
    int32_t group_tid_44381;
    
    global_tid_44379 = get_global_id(0);
    local_tid_44380 = get_local_id(0);
    group_sizze_44383 = get_local_size(0);
    wave_sizze_44382 = LOCKSTEP_WIDTH;
    group_tid_44381 = get_group_id(0);
    
    int32_t phys_tid_30057;
    
    phys_tid_30057 = global_tid_44379;
    
    int64_t gtid_30055;
    
    gtid_30055 = squot64(sext_i32_i64(group_tid_44381) *
                         segmap_group_sizze_30126 +
                         sext_i32_i64(local_tid_44380), N_27772);
    
    int64_t gtid_30056;
    
    gtid_30056 = sext_i32_i64(group_tid_44381) * segmap_group_sizze_30126 +
        sext_i32_i64(local_tid_44380) - squot64(sext_i32_i64(group_tid_44381) *
                                                segmap_group_sizze_30126 +
                                                sext_i32_i64(local_tid_44380),
                                                N_27772) * N_27772;
    if (slt64(gtid_30055, i32_res_27792) && slt64(gtid_30056, N_27772)) {
        int32_t index_primexp_41126 = sext_i64_i32(gtid_30055);
        bool index_primexp_41123 = index_primexp_41126 == 0;
        float defunc_0_f_res_30132;
        
        if (index_primexp_41123) {
            defunc_0_f_res_30132 = 1.0F;
        } else {
            int32_t x_30131 = ((__global
                                int32_t *) mappingindices_mem_43122)[gtid_30056];
            int32_t i_30133 = add32(1, index_primexp_41126);
            int32_t r32_arg_30134 = sdiv32(i_30133, 2);
            float i32_res_30135 = sitofp_i32_f32(r32_arg_30134);
            float i32_res_30136 = sitofp_i32_f32(x_30131);
            float x_30137 = 6.2831855F * i32_res_30135;
            float x_30138 = i32_res_30136 * x_30137;
            float angle_30139 = x_30138 / freq_27778;
            int32_t x_30140 = smod32(i_30133, 2);
            bool cond_30141 = x_30140 == 0;
            float defunc_0_f_res_f_res_30142;
            
            if (cond_30141) {
                float sin_res_30143;
                
                sin_res_30143 = futrts_sin32(angle_30139);
                defunc_0_f_res_f_res_30142 = sin_res_30143;
            } else {
                float cos_res_30144;
                
                cos_res_30144 = futrts_cos32(angle_30139);
                defunc_0_f_res_f_res_30142 = cos_res_30144;
            }
            defunc_0_f_res_30132 = defunc_0_f_res_f_res_30142;
        }
        ((__global float *) mem_43131)[gtid_30055 * N_27772 + gtid_30056] =
            defunc_0_f_res_30132;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30126
}
__kernel void mainDetailedzisegmap_30185(__global int *global_failure,
                                         int64_t N_27772, int64_t i32_res_27792,
                                         float i32_res_27857, __global
                                         unsigned char *mem_43135, __global
                                         unsigned char *mem_43139)
{
    #define segmap_group_sizze_30209 (mainDetailedzisegmap_group_sizze_30188)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44384;
    int32_t local_tid_44385;
    int64_t group_sizze_44388;
    int32_t wave_sizze_44387;
    int32_t group_tid_44386;
    
    global_tid_44384 = get_global_id(0);
    local_tid_44385 = get_local_id(0);
    group_sizze_44388 = get_local_size(0);
    wave_sizze_44387 = LOCKSTEP_WIDTH;
    group_tid_44386 = get_group_id(0);
    
    int32_t phys_tid_30185;
    
    phys_tid_30185 = global_tid_44384;
    
    int64_t gtid_30183;
    
    gtid_30183 = squot64(sext_i32_i64(group_tid_44386) *
                         segmap_group_sizze_30209 +
                         sext_i32_i64(local_tid_44385), i32_res_27792);
    
    int64_t gtid_30184;
    
    gtid_30184 = sext_i32_i64(group_tid_44386) * segmap_group_sizze_30209 +
        sext_i32_i64(local_tid_44385) - squot64(sext_i32_i64(group_tid_44386) *
                                                segmap_group_sizze_30209 +
                                                sext_i32_i64(local_tid_44385),
                                                i32_res_27792) * i32_res_27792;
    if (slt64(gtid_30183, N_27772) && slt64(gtid_30184, i32_res_27792)) {
        float x_30212 = ((__global float *) mem_43135)[gtid_30183 *
                                                       i32_res_27792 +
                                                       gtid_30184];
        float defunc_0_f_res_30213 = i32_res_27857 + x_30212;
        
        ((__global float *) mem_43139)[gtid_30183 * i32_res_27792 +
                                       gtid_30184] = defunc_0_f_res_30213;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30209
}
__kernel void mainDetailedzisegmap_30218(__global int *global_failure,
                                         int64_t N_27772, int64_t m_27773,
                                         int32_t n_27777, int32_t k2p2zq_27790,
                                         int64_t i32_res_27792,
                                         int64_t num_groups_30243, __global
                                         unsigned char *binop_p_mem_43132,
                                         __global unsigned char *mem_43139,
                                         __global unsigned char *mem_43142,
                                         __global unsigned char *mem_43146,
                                         __global unsigned char *mem_43188)
{
    #define segmap_group_sizze_30242 (mainDetailedzisegmap_group_sizze_30220)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44392;
    int32_t local_tid_44393;
    int64_t group_sizze_44396;
    int32_t wave_sizze_44395;
    int32_t group_tid_44394;
    
    global_tid_44392 = get_global_id(0);
    local_tid_44393 = get_local_id(0);
    group_sizze_44396 = get_local_size(0);
    wave_sizze_44395 = LOCKSTEP_WIDTH;
    group_tid_44394 = get_group_id(0);
    
    int32_t phys_tid_30218;
    
    phys_tid_30218 = global_tid_44392;
    
    int32_t phys_group_id_44397;
    
    phys_group_id_44397 = get_group_id(0);
    for (int32_t i_44398 = 0; i_44398 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27773, segmap_group_sizze_30242)) -
                   phys_group_id_44397, sext_i64_i32(num_groups_30243));
         i_44398++) {
        int32_t virt_group_id_44399 = phys_group_id_44397 + i_44398 *
                sext_i64_i32(num_groups_30243);
        int64_t gtid_30217 = sext_i32_i64(virt_group_id_44399) *
                segmap_group_sizze_30242 + sext_i32_i64(local_tid_44393);
        
        if (slt64(gtid_30217, m_27773)) {
            for (int32_t i_43104 = 0; i_43104 < k2p2zq_27790; i_43104++) {
                int64_t i_43052 = sext_i32_i64(i_43104);
                
                for (int32_t i_43103 = 0; i_43103 < k2p2zq_27790; i_43103++) {
                    int64_t i_43056 = sext_i32_i64(i_43103);
                    float defunc_2_reduce_res_30251;
                    float redout_43058 = 0.0F;
                    
                    for (int32_t i_43102 = 0; i_43102 < n_27777; i_43102++) {
                        int64_t i_43059 = sext_i32_i64(i_43102);
                        float x_30255 = ((__global float *) mem_43142)[i_43059 *
                                                                       m_27773 +
                                                                       gtid_30217];
                        float x_30256 = ((__global
                                          float *) binop_p_mem_43132)[i_43052 *
                                                                      N_27772 +
                                                                      i_43059];
                        float x_30257 = ((__global float *) mem_43139)[i_43059 *
                                                                       i32_res_27792 +
                                                                       i_43056];
                        float x_30258 = x_30256 * x_30257;
                        bool isnan_res_30259;
                        
                        isnan_res_30259 = futrts_isnan32(x_30255);
                        
                        float y_30260;
                        
                        if (isnan_res_30259) {
                            y_30260 = 0.0F;
                        } else {
                            y_30260 = 1.0F;
                        }
                        
                        float defunc_2_f_res_30261 = x_30258 * y_30260;
                        float defunc_1_op_res_30254 = defunc_2_f_res_30261 +
                              redout_43058;
                        float redout_tmp_44402 = defunc_1_op_res_30254;
                        
                        redout_43058 = redout_tmp_44402;
                    }
                    defunc_2_reduce_res_30251 = redout_43058;
                    ((__global float *) mem_43146)[phys_tid_30218 + (i_43052 *
                                                                     (num_groups_30243 *
                                                                      segmap_group_sizze_30242 *
                                                                      i32_res_27792) +
                                                                     i_43056 *
                                                                     (num_groups_30243 *
                                                                      segmap_group_sizze_30242))] =
                        defunc_2_reduce_res_30251;
                }
            }
            for (int64_t i_44403 = 0; i_44403 < i32_res_27792; i_44403++) {
                for (int64_t i_44404 = 0; i_44404 < i32_res_27792; i_44404++) {
                    ((__global float *) mem_43188)[i_44403 * (m_27773 *
                                                              i32_res_27792) +
                                                   i_44404 * m_27773 +
                                                   gtid_30217] = ((__global
                                                                   float *) mem_43146)[phys_tid_30218 +
                                                                                       (i_44403 *
                                                                                        (num_groups_30243 *
                                                                                         segmap_group_sizze_30242 *
                                                                                         i32_res_27792) +
                                                                                        i_44404 *
                                                                                        (num_groups_30243 *
                                                                                         segmap_group_sizze_30242))];
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30242
}
__kernel void mainDetailedzisegmap_30264(__global int *global_failure,
                                         int64_t m_27773, int64_t N_27774,
                                         int32_t n_27777, int32_t k2p2zq_27790,
                                         int64_t i32_res_27792,
                                         int64_t num_groups_30420, __global
                                         unsigned char *images_mem_43123,
                                         __global unsigned char *mem_43135,
                                         __global unsigned char *mem_43139,
                                         __global unsigned char *mem_43191,
                                         __global unsigned char *mem_43207)
{
    #define segmap_group_sizze_30419 (mainDetailedzisegmap_group_sizze_30267)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44405;
    int32_t local_tid_44406;
    int64_t group_sizze_44409;
    int32_t wave_sizze_44408;
    int32_t group_tid_44407;
    
    global_tid_44405 = get_global_id(0);
    local_tid_44406 = get_local_id(0);
    group_sizze_44409 = get_local_size(0);
    wave_sizze_44408 = LOCKSTEP_WIDTH;
    group_tid_44407 = get_group_id(0);
    
    int32_t phys_tid_30264;
    
    phys_tid_30264 = global_tid_44405;
    
    int32_t phys_group_id_44410;
    
    phys_group_id_44410 = get_group_id(0);
    for (int32_t i_44411 = 0; i_44411 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27773 * i32_res_27792,
                                          segmap_group_sizze_30419)) -
                   phys_group_id_44410, sext_i64_i32(num_groups_30420));
         i_44411++) {
        int32_t virt_group_id_44412 = phys_group_id_44410 + i_44411 *
                sext_i64_i32(num_groups_30420);
        int64_t gtid_30262 = squot64(sext_i32_i64(virt_group_id_44412) *
                                     segmap_group_sizze_30419 +
                                     sext_i32_i64(local_tid_44406),
                                     i32_res_27792);
        int64_t gtid_30263 = sext_i32_i64(virt_group_id_44412) *
                segmap_group_sizze_30419 + sext_i32_i64(local_tid_44406) -
                squot64(sext_i32_i64(virt_group_id_44412) *
                        segmap_group_sizze_30419 +
                        sext_i32_i64(local_tid_44406), i32_res_27792) *
                i32_res_27792;
        
        if (slt64(gtid_30262, m_27773) && slt64(gtid_30263, i32_res_27792)) {
            for (int32_t i_43106 = 0; i_43106 < k2p2zq_27790; i_43106++) {
                int64_t i_43062 = sext_i32_i64(i_43106);
                float defunc_2_reduce_res_30431;
                float redout_43064 = 0.0F;
                
                for (int32_t i_43105 = 0; i_43105 < n_27777; i_43105++) {
                    int64_t i_43065 = sext_i32_i64(i_43105);
                    float x_30435 = ((__global
                                      float *) images_mem_43123)[gtid_30262 *
                                                                 N_27774 +
                                                                 i_43065];
                    float x_30436 = ((__global float *) mem_43135)[i_43065 *
                                                                   i32_res_27792 +
                                                                   gtid_30263];
                    float x_30437 = ((__global float *) mem_43139)[i_43065 *
                                                                   i32_res_27792 +
                                                                   i_43062];
                    float x_30438 = x_30436 * x_30437;
                    bool isnan_res_30439;
                    
                    isnan_res_30439 = futrts_isnan32(x_30435);
                    
                    float y_30440;
                    
                    if (isnan_res_30439) {
                        y_30440 = 0.0F;
                    } else {
                        y_30440 = 1.0F;
                    }
                    
                    float defunc_2_f_res_30441 = x_30438 * y_30440;
                    float defunc_1_op_res_30434 = defunc_2_f_res_30441 +
                          redout_43064;
                    float redout_tmp_44414 = defunc_1_op_res_30434;
                    
                    redout_43064 = redout_tmp_44414;
                }
                defunc_2_reduce_res_30431 = redout_43064;
                ((__global float *) mem_43191)[phys_tid_30264 + i_43062 *
                                               (num_groups_30420 *
                                                segmap_group_sizze_30419)] =
                    defunc_2_reduce_res_30431;
            }
            for (int64_t i_44415 = 0; i_44415 < i32_res_27792; i_44415++) {
                ((__global float *) mem_43207)[i_44415 * (i32_res_27792 *
                                                          m_27773) +
                                               gtid_30262 * i32_res_27792 +
                                               gtid_30263] = ((__global
                                                               float *) mem_43191)[phys_tid_30264 +
                                                                                   i_44415 *
                                                                                   (num_groups_30420 *
                                                                                    segmap_group_sizze_30419)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30419
}
__kernel void mainDetailedzisegmap_30748(__global int *global_failure,
                                         int64_t m_27773, int64_t i32_res_27792,
                                         int64_t i32_res_27925,
                                         int64_t i32_res_27940, int64_t x_27941,
                                         int64_t j_m_i_27944,
                                         int64_t gauss_jordan_res_r_ixfn_43359,
                                         int64_t gauss_jordan_res_r_ixfn_43360,
                                         int64_t gauss_jordan_res_r_ixfn_43362,
                                         __global
                                         unsigned char *gauss_jordan_res_r_mem_43364,
                                         __global unsigned char *mem_43369)
{
    #define segmap_group_sizze_31299 (mainDetailedzisegmap_group_sizze_30752)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44571;
    int32_t local_tid_44572;
    int64_t group_sizze_44575;
    int32_t wave_sizze_44574;
    int32_t group_tid_44573;
    
    global_tid_44571 = get_global_id(0);
    local_tid_44572 = get_local_id(0);
    group_sizze_44575 = get_local_size(0);
    wave_sizze_44574 = LOCKSTEP_WIDTH;
    group_tid_44573 = get_group_id(0);
    
    int32_t phys_tid_30748;
    
    phys_tid_30748 = global_tid_44571;
    
    int64_t gtid_30745;
    
    gtid_30745 = squot64(sext_i32_i64(group_tid_44573) *
                         segmap_group_sizze_31299 +
                         sext_i32_i64(local_tid_44572), i32_res_27792 *
                         j_m_i_27944);
    
    int64_t gtid_slice_30743;
    
    gtid_slice_30743 = squot64(sext_i32_i64(group_tid_44573) *
                               segmap_group_sizze_31299 +
                               sext_i32_i64(local_tid_44572) -
                               squot64(sext_i32_i64(group_tid_44573) *
                                       segmap_group_sizze_31299 +
                                       sext_i32_i64(local_tid_44572),
                                       i32_res_27792 * j_m_i_27944) *
                               (i32_res_27792 * j_m_i_27944), j_m_i_27944);
    
    int64_t gtid_slice_30744;
    
    gtid_slice_30744 = sext_i32_i64(group_tid_44573) *
        segmap_group_sizze_31299 + sext_i32_i64(local_tid_44572) -
        squot64(sext_i32_i64(group_tid_44573) * segmap_group_sizze_31299 +
                sext_i32_i64(local_tid_44572), i32_res_27792 * j_m_i_27944) *
        (i32_res_27792 * j_m_i_27944) - squot64(sext_i32_i64(group_tid_44573) *
                                                segmap_group_sizze_31299 +
                                                sext_i32_i64(local_tid_44572) -
                                                squot64(sext_i32_i64(group_tid_44573) *
                                                        segmap_group_sizze_31299 +
                                                        sext_i32_i64(local_tid_44572),
                                                        i32_res_27792 *
                                                        j_m_i_27944) *
                                                (i32_res_27792 * j_m_i_27944),
                                                j_m_i_27944) * j_m_i_27944;
    if ((slt64(gtid_30745, m_27773) && slt64(gtid_slice_30743,
                                             i32_res_27792)) &&
        slt64(gtid_slice_30744, j_m_i_27944)) {
        int64_t slice_31303 = i32_res_27792 + gtid_slice_30744;
        int64_t binop_x_41195 = x_27941 * gtid_30745;
        int64_t binop_y_41196 = i32_res_27940 * gtid_slice_30743;
        int64_t binop_x_41197 = binop_x_41195 + binop_y_41196;
        int64_t binop_x_41198 = slice_31303 + binop_x_41197;
        int64_t new_index_41199 = squot64(binop_x_41198, i32_res_27925);
        int64_t binop_y_41211 = i32_res_27925 * new_index_41199;
        int64_t new_index_41212 = binop_x_41198 - binop_y_41211;
        float v_31304 = ((__global
                          float *) gauss_jordan_res_r_mem_43364)[gauss_jordan_res_r_ixfn_43359 +
                                                                 (new_index_41199 *
                                                                  gauss_jordan_res_r_ixfn_43360 +
                                                                  new_index_41212 *
                                                                  gauss_jordan_res_r_ixfn_43362)];
        
        ((__global float *) mem_43369)[gtid_30745 * (j_m_i_27944 *
                                                     i32_res_27792) +
                                       gtid_slice_30743 * j_m_i_27944 +
                                       gtid_slice_30744] = v_31304;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31299
}
__kernel void mainDetailedzisegmap_30914(__global int *global_failure,
                                         int64_t m_27773, int64_t i32_res_27925,
                                         int64_t ctx_param_ext_43322,
                                         int64_t ctx_param_ext_43323,
                                         int64_t ctx_param_ext_43325, __global
                                         unsigned char *mem_param_43327,
                                         __global unsigned char *mem_43347)
{
    #define segmap_group_sizze_31287 (mainDetailedzisegmap_group_sizze_30917)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44565;
    int32_t local_tid_44566;
    int64_t group_sizze_44569;
    int32_t wave_sizze_44568;
    int32_t group_tid_44567;
    
    global_tid_44565 = get_global_id(0);
    local_tid_44566 = get_local_id(0);
    group_sizze_44569 = get_local_size(0);
    wave_sizze_44568 = LOCKSTEP_WIDTH;
    group_tid_44567 = get_group_id(0);
    
    int32_t phys_tid_30914;
    
    phys_tid_30914 = global_tid_44565;
    
    int64_t gtid_30912;
    
    gtid_30912 = squot64(sext_i32_i64(group_tid_44567) *
                         segmap_group_sizze_31287 +
                         sext_i32_i64(local_tid_44566), i32_res_27925);
    
    int64_t gtid_30913;
    
    gtid_30913 = sext_i32_i64(group_tid_44567) * segmap_group_sizze_31287 +
        sext_i32_i64(local_tid_44566) - squot64(sext_i32_i64(group_tid_44567) *
                                                segmap_group_sizze_31287 +
                                                sext_i32_i64(local_tid_44566),
                                                i32_res_27925) * i32_res_27925;
    if (slt64(gtid_30912, m_27773) && slt64(gtid_30913, i32_res_27925)) {
        float write_value_31293 = ((__global float *) mem_43347)[gtid_30912 *
                                                                 i32_res_27925 +
                                                                 gtid_30913];
        
        if ((sle64(0, gtid_30912) && slt64(gtid_30912, m_27773)) && (sle64(0,
                                                                           gtid_30913) &&
                                                                     slt64(gtid_30913,
                                                                           i32_res_27925))) {
            ((__global float *) mem_param_43327)[ctx_param_ext_43322 +
                                                 (gtid_30912 *
                                                  ctx_param_ext_43323 +
                                                  gtid_30913 *
                                                  ctx_param_ext_43325)] =
                write_value_31293;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31287
}
__kernel void mainDetailedzisegmap_30968(__global int *global_failure,
                                         int64_t m_27773, int32_t k2p2zq_27790,
                                         int32_t m_27923, int64_t i32_res_27925,
                                         int32_t i_31190, int64_t i32_res_31192,
                                         int64_t ctx_param_ext_43322,
                                         int64_t ctx_param_ext_43323,
                                         int64_t ctx_param_ext_43325, __global
                                         unsigned char *mem_param_43327,
                                         __global unsigned char *mem_43343,
                                         __global unsigned char *mem_43347)
{
    #define segmap_group_sizze_31253 (mainDetailedzisegmap_group_sizze_30971)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44560;
    int32_t local_tid_44561;
    int64_t group_sizze_44564;
    int32_t wave_sizze_44563;
    int32_t group_tid_44562;
    
    global_tid_44560 = get_global_id(0);
    local_tid_44561 = get_local_id(0);
    group_sizze_44564 = get_local_size(0);
    wave_sizze_44563 = LOCKSTEP_WIDTH;
    group_tid_44562 = get_group_id(0);
    
    int32_t phys_tid_30968;
    
    phys_tid_30968 = global_tid_44560;
    
    int64_t gtid_30966;
    
    gtid_30966 = squot64(sext_i32_i64(group_tid_44562) *
                         segmap_group_sizze_31253 +
                         sext_i32_i64(local_tid_44561), i32_res_27925);
    
    int64_t gtid_30967;
    
    gtid_30967 = sext_i32_i64(group_tid_44562) * segmap_group_sizze_31253 +
        sext_i32_i64(local_tid_44561) - squot64(sext_i32_i64(group_tid_44562) *
                                                segmap_group_sizze_31253 +
                                                sext_i32_i64(local_tid_44561),
                                                i32_res_27925) * i32_res_27925;
    if (slt64(gtid_30966, m_27773) && slt64(gtid_30967, i32_res_27925)) {
        bool cond_31258 = ((__global bool *) mem_43343)[gtid_30966];
        int32_t defunc_0_f_res_31260 = sext_i64_i32(gtid_30967);
        int32_t defunc_0_f_res_31261 = sdiv32(defunc_0_f_res_31260, m_27923);
        int32_t defunc_0_f_res_31262 = smod32(defunc_0_f_res_31260, m_27923);
        float defunc_0_f_res_31263;
        
        if (cond_31258) {
            int32_t x_31264 = mul32(m_27923, defunc_0_f_res_31261);
            int32_t i32_arg_31265 = add32(defunc_0_f_res_31262, x_31264);
            int64_t i32_res_31266 = sext_i32_i64(i32_arg_31265);
            float defunc_0_f_res_t_res_31267 = ((__global
                                                 float *) mem_param_43327)[ctx_param_ext_43322 +
                                                                           (gtid_30966 *
                                                                            ctx_param_ext_43323 +
                                                                            i32_res_31266 *
                                                                            ctx_param_ext_43325)];
            
            defunc_0_f_res_31263 = defunc_0_f_res_t_res_31267;
        } else {
            float v1_31257 = ((__global
                               float *) mem_param_43327)[ctx_param_ext_43322 +
                                                         (gtid_30966 *
                                                          ctx_param_ext_43323 +
                                                          i32_res_31192 *
                                                          ctx_param_ext_43325)];
            int64_t i32_res_31268 = sext_i32_i64(defunc_0_f_res_31262);
            float x_31269 = ((__global
                              float *) mem_param_43327)[ctx_param_ext_43322 +
                                                        (gtid_30966 *
                                                         ctx_param_ext_43323 +
                                                         i32_res_31268 *
                                                         ctx_param_ext_43325)];
            float x_31270 = x_31269 / v1_31257;
            int32_t y_31271 = sub32(k2p2zq_27790, 1);
            bool cond_31272 = slt32(defunc_0_f_res_31261, y_31271);
            float defunc_0_f_res_f_res_31273;
            
            if (cond_31272) {
                int32_t x_31274 = add32(1, defunc_0_f_res_31261);
                int32_t x_31275 = mul32(m_27923, x_31274);
                int32_t i32_arg_31276 = add32(defunc_0_f_res_31262, x_31275);
                int64_t i32_res_31277 = sext_i32_i64(i32_arg_31276);
                float x_31278 = ((__global
                                  float *) mem_param_43327)[ctx_param_ext_43322 +
                                                            (gtid_30966 *
                                                             ctx_param_ext_43323 +
                                                             i32_res_31277 *
                                                             ctx_param_ext_43325)];
                int32_t i32_arg_31279 = add32(i_31190, x_31275);
                int64_t i32_res_31280 = sext_i32_i64(i32_arg_31279);
                float x_31281 = ((__global
                                  float *) mem_param_43327)[ctx_param_ext_43322 +
                                                            (gtid_30966 *
                                                             ctx_param_ext_43323 +
                                                             i32_res_31280 *
                                                             ctx_param_ext_43325)];
                float y_31282 = x_31270 * x_31281;
                float defunc_0_f_res_f_res_t_res_31283 = x_31278 - y_31282;
                
                defunc_0_f_res_f_res_31273 = defunc_0_f_res_f_res_t_res_31283;
            } else {
                defunc_0_f_res_f_res_31273 = x_31270;
            }
            defunc_0_f_res_31263 = defunc_0_f_res_f_res_31273;
        }
        ((__global float *) mem_43347)[gtid_30966 * i32_res_27925 +
                                       gtid_30967] = defunc_0_f_res_31263;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31253
}
__kernel void mainDetailedzisegmap_31036(__global int *global_failure,
                                         int64_t m_27773, int64_t i32_res_31192,
                                         int64_t ctx_param_ext_43322,
                                         int64_t ctx_param_ext_43323,
                                         int64_t ctx_param_ext_43325, __global
                                         unsigned char *mem_param_43327,
                                         __global unsigned char *mem_43343)
{
    #define segmap_group_sizze_31237 (mainDetailedzisegmap_group_sizze_31038)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44555;
    int32_t local_tid_44556;
    int64_t group_sizze_44559;
    int32_t wave_sizze_44558;
    int32_t group_tid_44557;
    
    global_tid_44555 = get_global_id(0);
    local_tid_44556 = get_local_id(0);
    group_sizze_44559 = get_local_size(0);
    wave_sizze_44558 = LOCKSTEP_WIDTH;
    group_tid_44557 = get_group_id(0);
    
    int32_t phys_tid_31036;
    
    phys_tid_31036 = global_tid_44555;
    
    int64_t gtid_31035;
    
    gtid_31035 = sext_i32_i64(group_tid_44557) * segmap_group_sizze_31237 +
        sext_i32_i64(local_tid_44556);
    if (slt64(gtid_31035, m_27773)) {
        float v1_31242 = ((__global
                           float *) mem_param_43327)[ctx_param_ext_43322 +
                                                     (gtid_31035 *
                                                      ctx_param_ext_43323 +
                                                      i32_res_31192 *
                                                      ctx_param_ext_43325)];
        bool cond_31243 = v1_31242 == 0.0F;
        
        ((__global bool *) mem_43343)[gtid_31035] = cond_31243;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31237
}
__kernel void mainDetailedzisegmap_31129(__global int *global_failure,
                                         int64_t m_27773, int32_t k2p2zq_27790,
                                         int64_t i32_res_27792, int32_t m_27923,
                                         int64_t i32_res_27925, __global
                                         unsigned char *defunc_3_map_res_mem_43291,
                                         __global unsigned char *mem_43319)
{
    #define segmap_group_sizze_31173 (mainDetailedzisegmap_group_sizze_31132)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44522;
    int32_t local_tid_44523;
    int64_t group_sizze_44526;
    int32_t wave_sizze_44525;
    int32_t group_tid_44524;
    
    global_tid_44522 = get_global_id(0);
    local_tid_44523 = get_local_id(0);
    group_sizze_44526 = get_local_size(0);
    wave_sizze_44525 = LOCKSTEP_WIDTH;
    group_tid_44524 = get_group_id(0);
    
    int32_t phys_tid_31129;
    
    phys_tid_31129 = global_tid_44522;
    
    int64_t gtid_31127;
    
    gtid_31127 = squot64(sext_i32_i64(group_tid_44524) *
                         segmap_group_sizze_31173 +
                         sext_i32_i64(local_tid_44523), i32_res_27925);
    
    int64_t gtid_31128;
    
    gtid_31128 = sext_i32_i64(group_tid_44524) * segmap_group_sizze_31173 +
        sext_i32_i64(local_tid_44523) - squot64(sext_i32_i64(group_tid_44524) *
                                                segmap_group_sizze_31173 +
                                                sext_i32_i64(local_tid_44523),
                                                i32_res_27925) * i32_res_27925;
    if (slt64(gtid_31127, m_27773) && slt64(gtid_31128, i32_res_27925)) {
        int32_t index_primexp_41138 = sext_i64_i32(gtid_31128);
        int32_t defunc_0_f_res_31178 = sdiv32(index_primexp_41138, m_27923);
        int32_t defunc_0_f_res_31179 = smod32(index_primexp_41138, m_27923);
        bool cond_31180 = slt32(defunc_0_f_res_31179, k2p2zq_27790);
        float defunc_0_f_res_31181;
        
        if (cond_31180) {
            int64_t i_31182 = sext_i32_i64(defunc_0_f_res_31178);
            int64_t j_31183 = sext_i32_i64(defunc_0_f_res_31179);
            float defunc_0_f_res_t_res_31184 = ((__global
                                                 float *) defunc_3_map_res_mem_43291)[gtid_31127 *
                                                                                      (i32_res_27792 *
                                                                                       i32_res_27792) +
                                                                                      i_31182 *
                                                                                      i32_res_27792 +
                                                                                      j_31183];
            
            defunc_0_f_res_31181 = defunc_0_f_res_t_res_31184;
        } else {
            int32_t y_31185 = add32(k2p2zq_27790, defunc_0_f_res_31178);
            bool cond_31186 = defunc_0_f_res_31179 == y_31185;
            float defunc_0_f_res_f_res_31187;
            
            if (cond_31186) {
                defunc_0_f_res_f_res_31187 = 1.0F;
            } else {
                defunc_0_f_res_f_res_31187 = 0.0F;
            }
            defunc_0_f_res_31181 = defunc_0_f_res_f_res_31187;
        }
        ((__global float *) mem_43319)[gtid_31127 * i32_res_27925 +
                                       gtid_31128] = defunc_0_f_res_31181;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31173
}
__kernel void mainDetailedzisegmap_31310(__global int *global_failure,
                                         int64_t N_27772, int64_t m_27773,
                                         int32_t n_27777, int32_t k2p2zq_27790,
                                         int64_t i32_res_27792,
                                         int64_t num_groups_31331, __global
                                         unsigned char *binop_p_mem_43132,
                                         __global unsigned char *mem_43373,
                                         __global unsigned char *mem_43376,
                                         __global unsigned char *mem_43391)
{
    #define segmap_group_sizze_31330 (mainDetailedzisegmap_group_sizze_31312)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44579;
    int32_t local_tid_44580;
    int64_t group_sizze_44583;
    int32_t wave_sizze_44582;
    int32_t group_tid_44581;
    
    global_tid_44579 = get_global_id(0);
    local_tid_44580 = get_local_id(0);
    group_sizze_44583 = get_local_size(0);
    wave_sizze_44582 = LOCKSTEP_WIDTH;
    group_tid_44581 = get_group_id(0);
    
    int32_t phys_tid_31310;
    
    phys_tid_31310 = global_tid_44579;
    
    int32_t phys_group_id_44584;
    
    phys_group_id_44584 = get_group_id(0);
    for (int32_t i_44585 = 0; i_44585 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27773, segmap_group_sizze_31330)) -
                   phys_group_id_44584, sext_i64_i32(num_groups_31331));
         i_44585++) {
        int32_t virt_group_id_44586 = phys_group_id_44584 + i_44585 *
                sext_i64_i32(num_groups_31331);
        int64_t gtid_31309 = sext_i32_i64(virt_group_id_44586) *
                segmap_group_sizze_31330 + sext_i32_i64(local_tid_44580);
        
        if (slt64(gtid_31309, m_27773)) {
            for (int32_t i_43108 = 0; i_43108 < k2p2zq_27790; i_43108++) {
                int64_t i_43068 = sext_i32_i64(i_43108);
                float defunc_2_reduce_res_31337;
                float redout_43070 = 0.0F;
                
                for (int32_t i_43107 = 0; i_43107 < n_27777; i_43107++) {
                    int64_t i_43071 = sext_i32_i64(i_43107);
                    float x_31342 = ((__global float *) mem_43373)[i_43071 *
                                                                   m_27773 +
                                                                   gtid_31309];
                    bool isnan_res_31343;
                    
                    isnan_res_31343 = futrts_isnan32(x_31342);
                    
                    float defunc_1_f_res_31344;
                    
                    if (isnan_res_31343) {
                        defunc_1_f_res_31344 = 0.0F;
                    } else {
                        float x_31341 = ((__global
                                          float *) binop_p_mem_43132)[i_43068 *
                                                                      N_27772 +
                                                                      i_43071];
                        float defunc_1_f_res_f_res_31345 = x_31341 * x_31342;
                        
                        defunc_1_f_res_31344 = defunc_1_f_res_f_res_31345;
                    }
                    
                    float defunc_1_op_res_31340 = defunc_1_f_res_31344 +
                          redout_43070;
                    float redout_tmp_44588 = defunc_1_op_res_31340;
                    
                    redout_43070 = redout_tmp_44588;
                }
                defunc_2_reduce_res_31337 = redout_43070;
                ((__global float *) mem_43376)[phys_tid_31310 + i_43068 *
                                               (num_groups_31331 *
                                                segmap_group_sizze_31330)] =
                    defunc_2_reduce_res_31337;
            }
            for (int64_t i_44589 = 0; i_44589 < i32_res_27792; i_44589++) {
                ((__global float *) mem_43391)[i_44589 * m_27773 + gtid_31309] =
                    ((__global float *) mem_43376)[phys_tid_31310 + i_44589 *
                                                   (num_groups_31331 *
                                                    segmap_group_sizze_31330)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31330
}
__kernel void mainDetailedzisegmap_31451(__global int *global_failure,
                                         int64_t m_27773, int32_t k2p2zq_27790,
                                         int64_t i32_res_27792,
                                         int64_t num_groups_31471, __global
                                         unsigned char *mem_43595, __global
                                         unsigned char *mem_43598, __global
                                         unsigned char *mem_43601, __global
                                         unsigned char *mem_43616)
{
    #define segmap_group_sizze_31470 (mainDetailedzisegmap_group_sizze_31453)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44711;
    int32_t local_tid_44712;
    int64_t group_sizze_44715;
    int32_t wave_sizze_44714;
    int32_t group_tid_44713;
    
    global_tid_44711 = get_global_id(0);
    local_tid_44712 = get_local_id(0);
    group_sizze_44715 = get_local_size(0);
    wave_sizze_44714 = LOCKSTEP_WIDTH;
    group_tid_44713 = get_group_id(0);
    
    int32_t phys_tid_31451;
    
    phys_tid_31451 = global_tid_44711;
    
    int32_t phys_group_id_44716;
    
    phys_group_id_44716 = get_group_id(0);
    for (int32_t i_44717 = 0; i_44717 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27773, segmap_group_sizze_31470)) -
                   phys_group_id_44716, sext_i64_i32(num_groups_31471));
         i_44717++) {
        int32_t virt_group_id_44718 = phys_group_id_44716 + i_44717 *
                sext_i64_i32(num_groups_31471);
        int64_t gtid_31450 = sext_i32_i64(virt_group_id_44718) *
                segmap_group_sizze_31470 + sext_i32_i64(local_tid_44712);
        
        if (slt64(gtid_31450, m_27773)) {
            for (int32_t i_43110 = 0; i_43110 < k2p2zq_27790; i_43110++) {
                int64_t i_43074 = sext_i32_i64(i_43110);
                float defunc_0_f_res_31478;
                float redout_43076 = 0.0F;
                
                for (int32_t i_43109 = 0; i_43109 < k2p2zq_27790; i_43109++) {
                    int64_t i_43077 = sext_i32_i64(i_43109);
                    float x_31482 = ((__global float *) mem_43598)[i_43077 *
                                                                   m_27773 +
                                                                   gtid_31450];
                    float x_31483 = ((__global float *) mem_43595)[i_43074 *
                                                                   (m_27773 *
                                                                    i32_res_27792) +
                                                                   i_43077 *
                                                                   m_27773 +
                                                                   gtid_31450];
                    float defunc_1_f_res_31484 = x_31482 * x_31483;
                    float defunc_1_op_res_31481 = defunc_1_f_res_31484 +
                          redout_43076;
                    float redout_tmp_44720 = defunc_1_op_res_31481;
                    
                    redout_43076 = redout_tmp_44720;
                }
                defunc_0_f_res_31478 = redout_43076;
                ((__global float *) mem_43601)[phys_tid_31451 + i_43074 *
                                               (num_groups_31471 *
                                                segmap_group_sizze_31470)] =
                    defunc_0_f_res_31478;
            }
            for (int64_t i_44721 = 0; i_44721 < i32_res_27792; i_44721++) {
                ((__global float *) mem_43616)[i_44721 * m_27773 + gtid_31450] =
                    ((__global float *) mem_43601)[phys_tid_31451 + i_44721 *
                                                   (num_groups_31471 *
                                                    segmap_group_sizze_31470)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31470
}
__kernel void mainDetailedzisegmap_31583(__global int *global_failure,
                                         int64_t N_27772, int64_t m_27773,
                                         int32_t k2p2zq_27790,
                                         int64_t i32_res_27792,
                                         int64_t num_groups_31602, __global
                                         unsigned char *mem_43139, __global
                                         unsigned char *mem_43660, __global
                                         unsigned char *mem_43663, __global
                                         unsigned char *mem_43678)
{
    #define segmap_group_sizze_31601 (mainDetailedzisegmap_group_sizze_31585)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44799;
    int32_t local_tid_44800;
    int64_t group_sizze_44803;
    int32_t wave_sizze_44802;
    int32_t group_tid_44801;
    
    global_tid_44799 = get_global_id(0);
    local_tid_44800 = get_local_id(0);
    group_sizze_44803 = get_local_size(0);
    wave_sizze_44802 = LOCKSTEP_WIDTH;
    group_tid_44801 = get_group_id(0);
    
    int32_t phys_tid_31583;
    
    phys_tid_31583 = global_tid_44799;
    
    int32_t phys_group_id_44804;
    
    phys_group_id_44804 = get_group_id(0);
    for (int32_t i_44805 = 0; i_44805 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27773, segmap_group_sizze_31601)) -
                   phys_group_id_44804, sext_i64_i32(num_groups_31602));
         i_44805++) {
        int32_t virt_group_id_44806 = phys_group_id_44804 + i_44805 *
                sext_i64_i32(num_groups_31602);
        int64_t gtid_31582 = sext_i32_i64(virt_group_id_44806) *
                segmap_group_sizze_31601 + sext_i32_i64(local_tid_44800);
        
        if (slt64(gtid_31582, m_27773)) {
            for (int64_t i_43084 = 0; i_43084 < N_27772; i_43084++) {
                float defunc_0_f_res_31608;
                float redout_43086 = 0.0F;
                
                for (int32_t i_43113 = 0; i_43113 < k2p2zq_27790; i_43113++) {
                    int64_t i_43087 = sext_i32_i64(i_43113);
                    float x_31612 = ((__global float *) mem_43660)[i_43087 *
                                                                   m_27773 +
                                                                   gtid_31582];
                    float x_31613 = ((__global float *) mem_43139)[i_43084 *
                                                                   i32_res_27792 +
                                                                   i_43087];
                    float defunc_1_f_res_31614 = x_31612 * x_31613;
                    float defunc_1_op_res_31611 = defunc_1_f_res_31614 +
                          redout_43086;
                    float redout_tmp_44808 = defunc_1_op_res_31611;
                    
                    redout_43086 = redout_tmp_44808;
                }
                defunc_0_f_res_31608 = redout_43086;
                ((__global float *) mem_43663)[phys_tid_31583 + i_43084 *
                                               (num_groups_31602 *
                                                segmap_group_sizze_31601)] =
                    defunc_0_f_res_31608;
            }
            for (int64_t i_44809 = 0; i_44809 < N_27772; i_44809++) {
                ((__global float *) mem_43678)[i_44809 * m_27773 + gtid_31582] =
                    ((__global float *) mem_43663)[phys_tid_31583 + i_44809 *
                                                   (num_groups_31602 *
                                                    segmap_group_sizze_31601)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31601
}
__kernel void mainDetailedzisegmap_31863(__global int *global_failure,
                                         int64_t N_27772, int64_t m_27773,
                                         __global unsigned char *mem_43884,
                                         __global unsigned char *mem_43887,
                                         __global unsigned char *mem_43910,
                                         __global unsigned char *mem_43913)
{
    #define segmap_group_sizze_32029 (mainDetailedzisegmap_group_sizze_31866)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45026;
    int32_t local_tid_45027;
    int64_t group_sizze_45030;
    int32_t wave_sizze_45029;
    int32_t group_tid_45028;
    
    global_tid_45026 = get_global_id(0);
    local_tid_45027 = get_local_id(0);
    group_sizze_45030 = get_local_size(0);
    wave_sizze_45029 = LOCKSTEP_WIDTH;
    group_tid_45028 = get_group_id(0);
    
    int32_t phys_tid_31863;
    
    phys_tid_31863 = global_tid_45026;
    
    int64_t gtid_31861;
    
    gtid_31861 = squot64(sext_i32_i64(group_tid_45028) *
                         segmap_group_sizze_32029 +
                         sext_i32_i64(local_tid_45027), N_27772);
    
    int64_t gtid_31862;
    
    gtid_31862 = sext_i32_i64(group_tid_45028) * segmap_group_sizze_32029 +
        sext_i32_i64(local_tid_45027) - squot64(sext_i32_i64(group_tid_45028) *
                                                segmap_group_sizze_32029 +
                                                sext_i32_i64(local_tid_45027),
                                                N_27772) * N_27772;
    if (slt64(gtid_31861, m_27773) && slt64(gtid_31862, N_27772)) {
        float x_32037 = ((__global float *) mem_43913)[gtid_31861 * N_27772 +
                                                       gtid_31862];
        int32_t index_primexp_41154 = sext_i64_i32(gtid_31862);
        bool isnan_res_32040;
        
        isnan_res_32040 = futrts_isnan32(x_32037);
        
        bool defunc_0_p_res_32041 = !isnan_res_32040;
        int64_t defunc_1_f_res_32042;
        
        if (defunc_0_p_res_32041) {
            int64_t x_32038 = ((__global int64_t *) mem_43910)[gtid_31861 *
                                                               N_27772 +
                                                               gtid_31862];
            int64_t defunc_1_f_res_t_res_32043 = sub64(x_32038, 1);
            
            defunc_1_f_res_32042 = defunc_1_f_res_t_res_32043;
        } else {
            defunc_1_f_res_32042 = -1;
        }
        if ((sle64(0, gtid_31861) && slt64(gtid_31861, m_27773)) && (sle64(0,
                                                                           defunc_1_f_res_32042) &&
                                                                     slt64(defunc_1_f_res_32042,
                                                                           N_27772))) {
            ((__global int32_t *) mem_43887)[gtid_31861 * N_27772 +
                                             defunc_1_f_res_32042] =
                index_primexp_41154;
        }
        if ((sle64(0, gtid_31861) && slt64(gtid_31861, m_27773)) && (sle64(0,
                                                                           defunc_1_f_res_32042) &&
                                                                     slt64(defunc_1_f_res_32042,
                                                                           N_27772))) {
            ((__global float *) mem_43884)[gtid_31861 * N_27772 +
                                           defunc_1_f_res_32042] = x_32037;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32029
}
__kernel void mainDetailedzisegmap_31939(__global int *global_failure,
                                         int64_t N_27772, int64_t m_27773,
                                         int64_t i_28052, __global
                                         unsigned char *mem_43910, __global
                                         unsigned char *mem_43916)
{
    #define segmap_group_sizze_31993 (mainDetailedzisegmap_group_sizze_31941)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45021;
    int32_t local_tid_45022;
    int64_t group_sizze_45025;
    int32_t wave_sizze_45024;
    int32_t group_tid_45023;
    
    global_tid_45021 = get_global_id(0);
    local_tid_45022 = get_local_id(0);
    group_sizze_45025 = get_local_size(0);
    wave_sizze_45024 = LOCKSTEP_WIDTH;
    group_tid_45023 = get_group_id(0);
    
    int32_t phys_tid_31939;
    
    phys_tid_31939 = global_tid_45021;
    
    int64_t gtid_31938;
    
    gtid_31938 = sext_i32_i64(group_tid_45023) * segmap_group_sizze_31993 +
        sext_i32_i64(local_tid_45022);
    if (slt64(gtid_31938, m_27773)) {
        int64_t last_res_31997 = ((__global int64_t *) mem_43910)[gtid_31938 *
                                                                  N_27772 +
                                                                  i_28052];
        int32_t defunc_0_f_res_31998 = sext_i64_i32(last_res_31997);
        
        ((__global int32_t *) mem_43916)[gtid_31938] = defunc_0_f_res_31998;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31993
}
__kernel void mainDetailedzisegmap_32190(__global int *global_failure,
                                         int64_t m_27773, float hfrac_27779,
                                         int32_t k2p2_27788, __global
                                         unsigned char *mem_43970, __global
                                         unsigned char *mem_43973, __global
                                         unsigned char *mem_43976, __global
                                         unsigned char *mem_43978)
{
    #define segmap_group_sizze_32275 (mainDetailedzisegmap_group_sizze_32192)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45181;
    int32_t local_tid_45182;
    int64_t group_sizze_45185;
    int32_t wave_sizze_45184;
    int32_t group_tid_45183;
    
    global_tid_45181 = get_global_id(0);
    local_tid_45182 = get_local_id(0);
    group_sizze_45185 = get_local_size(0);
    wave_sizze_45184 = LOCKSTEP_WIDTH;
    group_tid_45183 = get_group_id(0);
    
    int32_t phys_tid_32190;
    
    phys_tid_32190 = global_tid_45181;
    
    int64_t gtid_32189;
    
    gtid_32189 = sext_i32_i64(group_tid_45183) * segmap_group_sizze_32275 +
        sext_i32_i64(local_tid_45182);
    if (slt64(gtid_32189, m_27773)) {
        int32_t defunc_0_f_res_32279 = ((__global
                                         int32_t *) mem_43970)[gtid_32189];
        float defunc_0_f_res_32280 = ((__global float *) mem_43973)[gtid_32189];
        int32_t r32_arg_32281 = sub32(defunc_0_f_res_32279, k2p2_27788);
        float i32_res_32282 = sitofp_i32_f32(r32_arg_32281);
        float sqrt_arg_32283 = defunc_0_f_res_32280 / i32_res_32282;
        float sqrt_res_32284;
        
        sqrt_res_32284 = futrts_sqrt32(sqrt_arg_32283);
        
        float i32_res_32285 = sitofp_i32_f32(defunc_0_f_res_32279);
        float t32_arg_32286 = hfrac_27779 * i32_res_32285;
        int32_t f32_res_32287 = fptosi_f32_i32(t32_arg_32286);
        
        ((__global int32_t *) mem_43976)[gtid_32189] = f32_res_32287;
        ((__global float *) mem_43978)[gtid_32189] = sqrt_res_32284;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32275
}
__kernel void mainDetailedzisegmap_32461(__global int *global_failure,
                                         float lam_27780,
                                         int64_t iota32_arg_28172,
                                         int32_t x_28177, float i32_res_28185,
                                         __global
                                         unsigned char *mappingindices_mem_43122,
                                         __global unsigned char *mem_44020,
                                         __global unsigned char *mem_44022)
{
    #define segmap_group_sizze_32480 (mainDetailedzisegmap_group_sizze_32463)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45291;
    int32_t local_tid_45292;
    int64_t group_sizze_45295;
    int32_t wave_sizze_45294;
    int32_t group_tid_45293;
    
    global_tid_45291 = get_global_id(0);
    local_tid_45292 = get_local_id(0);
    group_sizze_45295 = get_local_size(0);
    wave_sizze_45294 = LOCKSTEP_WIDTH;
    group_tid_45293 = get_group_id(0);
    
    int32_t phys_tid_32461;
    
    phys_tid_32461 = global_tid_45291;
    
    int64_t gtid_32460;
    
    gtid_32460 = sext_i32_i64(group_tid_45293) * segmap_group_sizze_32480 +
        sext_i32_i64(local_tid_45292);
    if (slt64(gtid_32460, iota32_arg_28172)) {
        int32_t defunc_0_f_res_32485 = sext_i64_i32(gtid_32460);
        int32_t t_32486 = add32(x_28177, defunc_0_f_res_32485);
        int32_t i_32487 = sub32(t_32486, 1);
        int64_t i_32488 = sext_i32_i64(i_32487);
        int32_t time_32489 = ((__global
                               int32_t *) mappingindices_mem_43122)[i_32488];
        float i32_res_32490 = sitofp_i32_f32(time_32489);
        float logplus_arg_32491 = i32_res_32490 / i32_res_28185;
        bool cond_32492 = 2.7182817F < logplus_arg_32491;
        float logplus_res_32493;
        
        if (cond_32492) {
            float log_res_32494;
            
            log_res_32494 = futrts_log32(logplus_arg_32491);
            logplus_res_32493 = log_res_32494;
        } else {
            logplus_res_32493 = 1.0F;
        }
        
        float sqrt_res_32495;
        
        sqrt_res_32495 = futrts_sqrt32(logplus_res_32493);
        
        float defunc_0_f_res_32496 = lam_27780 * sqrt_res_32495;
        
        ((__global int32_t *) mem_44020)[gtid_32460] = defunc_0_f_res_32485;
        ((__global float *) mem_44022)[gtid_32460] = defunc_0_f_res_32496;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32480
}
__kernel void mainDetailedzisegmap_32712(__global int *global_failure,
                                         int failure_is_an_option, __global
                                         int64_t *global_failure_args,
                                         int64_t m_27773,
                                         int64_t iota32_arg_28172,
                                         int64_t distance_28204,
                                         int64_t segmap_usable_groups_32945,
                                         __global
                                         unsigned char *defunc_4_map_res_mem_43918,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43983,
                                         __global unsigned char *mem_44025,
                                         __global unsigned char *mem_44032,
                                         __global unsigned char *mem_44043,
                                         __global unsigned char *mem_44063)
{
    #define segmap_group_sizze_32944 (mainDetailedzisegmap_group_sizze_32714)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45306;
    int32_t local_tid_45307;
    int64_t group_sizze_45310;
    int32_t wave_sizze_45309;
    int32_t group_tid_45308;
    
    global_tid_45306 = get_global_id(0);
    local_tid_45307 = get_local_id(0);
    group_sizze_45310 = get_local_size(0);
    wave_sizze_45309 = LOCKSTEP_WIDTH;
    group_tid_45308 = get_group_id(0);
    
    int32_t phys_tid_32712;
    
    phys_tid_32712 = global_tid_45306;
    
    int64_t gtid_32711;
    
    gtid_32711 = sext_i32_i64(group_tid_45308) * segmap_group_sizze_32944 +
        sext_i32_i64(local_tid_45307);
    if (slt64(gtid_32711, m_27773)) {
        int32_t x_32947 = ((__global
                            int32_t *) defunc_4_map_res_mem_43918)[gtid_32711];
        int32_t x_32948 = ((__global
                            int32_t *) defunc_3_map_res_mem_43983)[gtid_32711];
        int32_t y_32949 = ((__global int32_t *) mem_44025)[gtid_32711];
        
        for (int64_t i_45311 = 0; i_45311 < iota32_arg_28172; i_45311++) {
            ((__global float *) mem_44043)[phys_tid_32712 + i_45311 *
                                           (segmap_usable_groups_32945 *
                                            segmap_group_sizze_32944)] =
                ((__global float *) mem_44032)[gtid_32711 + i_45311 * m_27773];
        }
        for (int64_t i_32952 = 0; i_32952 < distance_28204; i_32952++) {
            int64_t index_primexp_32954 = add64(1, i_32952);
            bool cond_32955 = slt64(0, index_primexp_32954);
            bool loop_cond_32956;
            
            if (cond_32955) {
                bool x_32957 = sle64(0, index_primexp_32954);
                bool y_32958 = slt64(index_primexp_32954, iota32_arg_28172);
                bool bounds_check_32959 = x_32957 && y_32958;
                bool index_certs_32960;
                
                if (!bounds_check_32959) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 2) ==
                            -1) {
                            global_failure_args[0] = index_primexp_32954;
                            global_failure_args[1] = iota32_arg_28172;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_2_lifted_gt_arg_32961 = ((__global
                                                       float *) mem_44043)[phys_tid_32712 +
                                                                           index_primexp_32954 *
                                                                           (segmap_usable_groups_32945 *
                                                                            segmap_group_sizze_32944)];
                bool y_32962 = slt64(i_32952, iota32_arg_28172);
                bool index_certs_32963;
                
                if (!y_32962) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 3) ==
                            -1) {
                            global_failure_args[0] = i_32952;
                            global_failure_args[1] = iota32_arg_28172;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_1_lifted_gt_arg_32964 = ((__global
                                                       float *) mem_44043)[phys_tid_32712 +
                                                                           i_32952 *
                                                                           (segmap_usable_groups_32945 *
                                                                            segmap_group_sizze_32944)];
                bool defunc_1_zlze_res_32965 = defunc_1_lifted_gt_arg_32964 <=
                     defunc_2_lifted_gt_arg_32961;
                bool defunc_2_lifted_gt_res_32966 = !defunc_1_zlze_res_32965;
                
                loop_cond_32956 = defunc_2_lifted_gt_res_32966;
            } else {
                loop_cond_32956 = 0;
            }
            
            bool xszq_32967;
            int64_t xszq_32968;
            bool loop_while_32970;
            int64_t j_32971;
            
            loop_while_32970 = loop_cond_32956;
            j_32971 = index_primexp_32954;
            while (loop_while_32970) {
                int64_t loopres_32973 = sub64(j_32971, 1);
                bool x_32974 = sle64(0, j_32971);
                bool y_32975 = slt64(j_32971, iota32_arg_28172);
                bool bounds_check_32976 = x_32974 && y_32975;
                bool index_certs_32977;
                
                if (!bounds_check_32976) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 4) ==
                            -1) {
                            global_failure_args[0] = j_32971;
                            global_failure_args[1] = iota32_arg_28172;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_32978 = ((__global
                                         float *) mem_44043)[phys_tid_32712 +
                                                             j_32971 *
                                                             (segmap_usable_groups_32945 *
                                                              segmap_group_sizze_32944)];
                bool x_32979 = sle64(0, loopres_32973);
                bool y_32980 = slt64(loopres_32973, iota32_arg_28172);
                bool bounds_check_32981 = x_32979 && y_32980;
                bool index_certs_32982;
                
                if (!bounds_check_32981) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 5) ==
                            -1) {
                            global_failure_args[0] = loopres_32973;
                            global_failure_args[1] = iota32_arg_28172;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_32983 = ((__global
                                         float *) mem_44043)[phys_tid_32712 +
                                                             loopres_32973 *
                                                             (segmap_usable_groups_32945 *
                                                              segmap_group_sizze_32944)];
                
                ((__global float *) mem_44043)[phys_tid_32712 + j_32971 *
                                               (segmap_usable_groups_32945 *
                                                segmap_group_sizze_32944)] =
                    copy_arg_32983;
                ((__global float *) mem_44043)[phys_tid_32712 + loopres_32973 *
                                               (segmap_usable_groups_32945 *
                                                segmap_group_sizze_32944)] =
                    copy_arg_32978;
                
                bool cond_32986 = slt64(0, loopres_32973);
                bool loop_cond_32987;
                
                if (cond_32986) {
                    bool index_certs_32988;
                    
                    if (!bounds_check_32981) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          6) == -1) {
                                global_failure_args[0] = loopres_32973;
                                global_failure_args[1] = iota32_arg_28172;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_2_lifted_gt_arg_32989 = ((__global
                                                           float *) mem_44043)[phys_tid_32712 +
                                                                               loopres_32973 *
                                                                               (segmap_usable_groups_32945 *
                                                                                segmap_group_sizze_32944)];
                    int64_t i_32990 = sub64(loopres_32973, 1);
                    bool x_32991 = sle64(0, i_32990);
                    bool y_32992 = slt64(i_32990, iota32_arg_28172);
                    bool bounds_check_32993 = x_32991 && y_32992;
                    bool index_certs_32994;
                    
                    if (!bounds_check_32993) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          7) == -1) {
                                global_failure_args[0] = i_32990;
                                global_failure_args[1] = iota32_arg_28172;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_1_lifted_gt_arg_32995 = ((__global
                                                           float *) mem_44043)[phys_tid_32712 +
                                                                               i_32990 *
                                                                               (segmap_usable_groups_32945 *
                                                                                segmap_group_sizze_32944)];
                    bool defunc_1_zlze_res_32996 =
                         defunc_1_lifted_gt_arg_32995 <=
                         defunc_2_lifted_gt_arg_32989;
                    bool defunc_2_lifted_gt_res_32997 =
                         !defunc_1_zlze_res_32996;
                    
                    loop_cond_32987 = defunc_2_lifted_gt_res_32997;
                } else {
                    loop_cond_32987 = 0;
                }
                
                bool loop_while_tmp_45313 = loop_cond_32987;
                int64_t j_tmp_45314 = loopres_32973;
                
                loop_while_32970 = loop_while_tmp_45313;
                j_32971 = j_tmp_45314;
            }
            xszq_32967 = loop_while_32970;
            xszq_32968 = j_32971;
        }
        
        int32_t i_32998 = sdiv32(y_32949, 2);
        int32_t j_32999 = sub32(i_32998, 1);
        bool cond_33000 = x_32947 == x_32948;
        float defunc_0_f_res_33001;
        
        if (cond_33000) {
            defunc_0_f_res_33001 = 0.0F;
        } else {
            int32_t x_33002 = smod32(y_32949, 2);
            bool cond_33003 = x_33002 == 0;
            float defunc_0_f_res_f_res_33004;
            
            if (cond_33003) {
                int64_t j_33005 = sext_i32_i64(j_32999);
                bool x_33006 = sle64(0, j_33005);
                bool y_33007 = slt64(j_33005, iota32_arg_28172);
                bool bounds_check_33008 = x_33006 && y_33007;
                bool index_certs_33009;
                
                if (!bounds_check_33008) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 8) ==
                            -1) {
                            global_failure_args[0] = j_33005;
                            global_failure_args[1] = iota32_arg_28172;
                            ;
                        }
                        return;
                    }
                }
                
                float x_33010 = ((__global float *) mem_44043)[phys_tid_32712 +
                                                               j_33005 *
                                                               (segmap_usable_groups_32945 *
                                                                segmap_group_sizze_32944)];
                int64_t i_33011 = sext_i32_i64(i_32998);
                bool x_33012 = sle64(0, i_33011);
                bool y_33013 = slt64(i_33011, iota32_arg_28172);
                bool bounds_check_33014 = x_33012 && y_33013;
                bool index_certs_33015;
                
                if (!bounds_check_33014) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 9) ==
                            -1) {
                            global_failure_args[0] = i_33011;
                            global_failure_args[1] = iota32_arg_28172;
                            ;
                        }
                        return;
                    }
                }
                
                float y_33016 = ((__global float *) mem_44043)[phys_tid_32712 +
                                                               i_33011 *
                                                               (segmap_usable_groups_32945 *
                                                                segmap_group_sizze_32944)];
                float x_33017 = x_33010 + y_33016;
                float defunc_0_f_res_f_res_t_res_33018 = x_33017 / 2.0F;
                
                defunc_0_f_res_f_res_33004 = defunc_0_f_res_f_res_t_res_33018;
            } else {
                int64_t i_33019 = sext_i32_i64(i_32998);
                bool x_33020 = sle64(0, i_33019);
                bool y_33021 = slt64(i_33019, iota32_arg_28172);
                bool bounds_check_33022 = x_33020 && y_33021;
                bool index_certs_33023;
                
                if (!bounds_check_33022) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 10) ==
                            -1) {
                            global_failure_args[0] = i_33019;
                            global_failure_args[1] = iota32_arg_28172;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_0_f_res_f_res_f_res_33024 = ((__global
                                                           float *) mem_44043)[phys_tid_32712 +
                                                                               i_33019 *
                                                                               (segmap_usable_groups_32945 *
                                                                                segmap_group_sizze_32944)];
                
                defunc_0_f_res_f_res_33004 = defunc_0_f_res_f_res_f_res_33024;
            }
            defunc_0_f_res_33001 = defunc_0_f_res_f_res_33004;
        }
        ((__global float *) mem_44063)[gtid_32711] = defunc_0_f_res_33001;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32944
}
__kernel void mainDetailedzisegmap_32833(__global int *global_failure,
                                         int failure_is_an_option, __global
                                         int64_t *global_failure_args,
                                         int64_t N_27772, int64_t m_27773,
                                         int64_t iota32_arg_28172, __global
                                         unsigned char *defunc_4_map_res_mem_43919,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43983,
                                         __global unsigned char *mem_44025,
                                         __global unsigned char *mem_44029)
{
    #define segmap_group_sizze_32915 (mainDetailedzisegmap_group_sizze_32836)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45301;
    int32_t local_tid_45302;
    int64_t group_sizze_45305;
    int32_t wave_sizze_45304;
    int32_t group_tid_45303;
    
    global_tid_45301 = get_global_id(0);
    local_tid_45302 = get_local_id(0);
    group_sizze_45305 = get_local_size(0);
    wave_sizze_45304 = LOCKSTEP_WIDTH;
    group_tid_45303 = get_group_id(0);
    
    int32_t phys_tid_32833;
    
    phys_tid_32833 = global_tid_45301;
    
    int64_t gtid_32831;
    
    gtid_32831 = squot64(sext_i32_i64(group_tid_45303) *
                         segmap_group_sizze_32915 +
                         sext_i32_i64(local_tid_45302), iota32_arg_28172);
    
    int64_t gtid_32832;
    
    gtid_32832 = sext_i32_i64(group_tid_45303) * segmap_group_sizze_32915 +
        sext_i32_i64(local_tid_45302) - squot64(sext_i32_i64(group_tid_45303) *
                                                segmap_group_sizze_32915 +
                                                sext_i32_i64(local_tid_45302),
                                                iota32_arg_28172) *
        iota32_arg_28172;
    if (slt64(gtid_32831, m_27773) && slt64(gtid_32832, iota32_arg_28172)) {
        int32_t x_32918 = ((__global
                            int32_t *) defunc_3_map_res_mem_43983)[gtid_32831];
        int32_t y_32920 = ((__global int32_t *) mem_44025)[gtid_32831];
        int32_t index_primexp_41172 = sext_i64_i32(gtid_32832);
        bool cond_32922 = slt32(index_primexp_41172, y_32920);
        bool cond_32923;
        
        if (cond_32922) {
            int32_t i_32924 = add32(x_32918, index_primexp_41172);
            int64_t i_32925 = sext_i32_i64(i_32924);
            bool x_32926 = sle64(0, i_32925);
            bool y_32927 = slt64(i_32925, N_27772);
            bool bounds_check_32928 = x_32926 && y_32927;
            bool index_certs_32929;
            
            if (!bounds_check_32928) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 0) ==
                        -1) {
                        global_failure_args[0] = i_32925;
                        global_failure_args[1] = N_27772;
                        ;
                    }
                    return;
                }
            }
            
            float isnan_arg_32930 = ((__global
                                      float *) defunc_4_map_res_mem_43919)[gtid_32831 *
                                                                           N_27772 +
                                                                           i_32925];
            bool isnan_res_32931;
            
            isnan_res_32931 = futrts_isnan32(isnan_arg_32930);
            
            bool cond_t_res_32932 = !isnan_res_32931;
            
            cond_32923 = cond_t_res_32932;
        } else {
            cond_32923 = 0;
        }
        
        float defunc_0_f_res_32933;
        
        if (cond_32923) {
            int32_t i_32934 = add32(x_32918, index_primexp_41172);
            int64_t i_32935 = sext_i32_i64(i_32934);
            bool x_32936 = sle64(0, i_32935);
            bool y_32937 = slt64(i_32935, N_27772);
            bool bounds_check_32938 = x_32936 && y_32937;
            bool index_certs_32939;
            
            if (!bounds_check_32938) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 1) ==
                        -1) {
                        global_failure_args[0] = i_32935;
                        global_failure_args[1] = N_27772;
                        ;
                    }
                    return;
                }
            }
            
            float defunc_0_f_res_t_res_32940 = ((__global
                                                 float *) defunc_4_map_res_mem_43919)[gtid_32831 *
                                                                                      N_27772 +
                                                                                      i_32935];
            
            defunc_0_f_res_32933 = defunc_0_f_res_t_res_32940;
        } else {
            defunc_0_f_res_32933 = INFINITY;
        }
        ((__global float *) mem_44029)[gtid_32831 * iota32_arg_28172 +
                                       gtid_32832] = defunc_0_f_res_32933;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32915
}
__kernel void mainDetailedzisegmap_32891(__global int *global_failure,
                                         int64_t m_27773, __global
                                         unsigned char *defunc_4_map_res_mem_43918,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43983,
                                         __global unsigned char *mem_44025)
{
    #define segmap_group_sizze_32900 (mainDetailedzisegmap_group_sizze_32893)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45296;
    int32_t local_tid_45297;
    int64_t group_sizze_45300;
    int32_t wave_sizze_45299;
    int32_t group_tid_45298;
    
    global_tid_45296 = get_global_id(0);
    local_tid_45297 = get_local_id(0);
    group_sizze_45300 = get_local_size(0);
    wave_sizze_45299 = LOCKSTEP_WIDTH;
    group_tid_45298 = get_group_id(0);
    
    int32_t phys_tid_32891;
    
    phys_tid_32891 = global_tid_45296;
    
    int64_t gtid_32890;
    
    gtid_32890 = sext_i32_i64(group_tid_45298) * segmap_group_sizze_32900 +
        sext_i32_i64(local_tid_45297);
    if (slt64(gtid_32890, m_27773)) {
        int32_t x_32903 = ((__global
                            int32_t *) defunc_4_map_res_mem_43918)[gtid_32890];
        int32_t x_32904 = ((__global
                            int32_t *) defunc_3_map_res_mem_43983)[gtid_32890];
        int32_t y_32905 = sub32(x_32903, x_32904);
        
        ((__global int32_t *) mem_44025)[gtid_32890] = y_32905;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32900
}
__kernel void mainDetailedzisegmap_33435(__global int *global_failure,
                                         int64_t N_27772, int64_t m_27773,
                                         int32_t n_27777,
                                         int64_t iota32_arg_28172, __global
                                         unsigned char *defunc_4_map_res_mem_43920,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43983,
                                         __global unsigned char *mem_44066,
                                         __global unsigned char *mem_44091,
                                         __global unsigned char *mem_44105)
{
    #define segmap_group_sizze_33834 (mainDetailedzisegmap_group_sizze_33438)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45516;
    int32_t local_tid_45517;
    int64_t group_sizze_45520;
    int32_t wave_sizze_45519;
    int32_t group_tid_45518;
    
    global_tid_45516 = get_global_id(0);
    local_tid_45517 = get_local_id(0);
    group_sizze_45520 = get_local_size(0);
    wave_sizze_45519 = LOCKSTEP_WIDTH;
    group_tid_45518 = get_group_id(0);
    
    int32_t phys_tid_33435;
    
    phys_tid_33435 = global_tid_45516;
    
    int64_t gtid_33433;
    
    gtid_33433 = squot64(sext_i32_i64(group_tid_45518) *
                         segmap_group_sizze_33834 +
                         sext_i32_i64(local_tid_45517), iota32_arg_28172);
    
    int64_t gtid_33434;
    
    gtid_33434 = sext_i32_i64(group_tid_45518) * segmap_group_sizze_33834 +
        sext_i32_i64(local_tid_45517) - squot64(sext_i32_i64(group_tid_45518) *
                                                segmap_group_sizze_33834 +
                                                sext_i32_i64(local_tid_45517),
                                                iota32_arg_28172) *
        iota32_arg_28172;
    if (slt64(gtid_33433, m_27773) && slt64(gtid_33434, iota32_arg_28172)) {
        int32_t y_33839 = ((__global int32_t *) mem_44091)[gtid_33433];
        int32_t index_primexp_41192 = sext_i64_i32(gtid_33434);
        float write_value_33843 = ((__global float *) mem_44105)[gtid_33433 *
                                                                 iota32_arg_28172 +
                                                                 gtid_33434];
        bool cond_33844 = slt32(index_primexp_41192, y_33839);
        int32_t defunc_0_f_res_33845;
        
        if (cond_33844) {
            int32_t x_33837 = ((__global
                                int32_t *) defunc_3_map_res_mem_43983)[gtid_33433];
            int32_t i_33846 = add32(x_33837, index_primexp_41192);
            int64_t i_33847 = sext_i32_i64(i_33846);
            int32_t x_33848 = ((__global
                                int32_t *) defunc_4_map_res_mem_43920)[gtid_33433 *
                                                                       N_27772 +
                                                                       i_33847];
            int32_t defunc_0_f_res_t_res_33849 = sub32(x_33848, n_27777);
            
            defunc_0_f_res_33845 = defunc_0_f_res_t_res_33849;
        } else {
            defunc_0_f_res_33845 = -1;
        }
        
        int64_t defunc_0_f_res_33850 = sext_i32_i64(defunc_0_f_res_33845);
        
        if ((sle64(0, gtid_33433) && slt64(gtid_33433, m_27773)) && (sle64(0,
                                                                           defunc_0_f_res_33850) &&
                                                                     slt64(defunc_0_f_res_33850,
                                                                           iota32_arg_28172))) {
            ((__global float *) mem_44066)[gtid_33433 * iota32_arg_28172 +
                                           defunc_0_f_res_33850] =
                write_value_33843;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33834
}
__kernel void mainDetailedzisegmap_33488(__global int *global_failure,
                                         int64_t N_27772, int64_t m_27773,
                                         int32_t n_27777, __global
                                         unsigned char *defunc_4_map_res_mem_43920,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43983,
                                         __global unsigned char *mem_44091,
                                         __global unsigned char *mem_44102,
                                         __global unsigned char *mem_44108,
                                         __global unsigned char *mem_44110,
                                         __global unsigned char *mem_44113,
                                         __global unsigned char *mem_44115)
{
    #define segmap_group_sizze_33790 (mainDetailedzisegmap_group_sizze_33490)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45511;
    int32_t local_tid_45512;
    int64_t group_sizze_45515;
    int32_t wave_sizze_45514;
    int32_t group_tid_45513;
    
    global_tid_45511 = get_global_id(0);
    local_tid_45512 = get_local_id(0);
    group_sizze_45515 = get_local_size(0);
    wave_sizze_45514 = LOCKSTEP_WIDTH;
    group_tid_45513 = get_group_id(0);
    
    int32_t phys_tid_33488;
    
    phys_tid_33488 = global_tid_45511;
    
    int64_t gtid_33487;
    
    gtid_33487 = sext_i32_i64(group_tid_45513) * segmap_group_sizze_33790 +
        sext_i32_i64(local_tid_45512);
    if (slt64(gtid_33487, m_27773)) {
        int32_t x_33794 = ((__global
                            int32_t *) defunc_3_map_res_mem_43983)[gtid_33487];
        int32_t y_33796 = ((__global int32_t *) mem_44091)[gtid_33487];
        bool defunc_0_f_res_33797 = ((__global bool *) mem_44108)[gtid_33487];
        bool cond_33800 = y_33796 == 0;
        float defunc_0_f_res_33801;
        
        if (cond_33800) {
            defunc_0_f_res_33801 = 0.0F;
        } else {
            float defunc_0_f_res_33799 = ((__global
                                           float *) mem_44102)[gtid_33487];
            float i32_res_33802 = sitofp_i32_f32(y_33796);
            float defunc_0_f_res_f_res_33803 = defunc_0_f_res_33799 /
                  i32_res_33802;
            
            defunc_0_f_res_33801 = defunc_0_f_res_f_res_33803;
        }
        
        bool cond_33804 = !defunc_0_f_res_33797;
        int32_t fst_breakzq_33805;
        
        if (cond_33804) {
            fst_breakzq_33805 = -1;
        } else {
            int32_t defunc_0_f_res_33798 = ((__global
                                             int32_t *) mem_44110)[gtid_33487];
            bool cond_33806 = slt32(defunc_0_f_res_33798, y_33796);
            int32_t adjustValInds_res_33807;
            
            if (cond_33806) {
                int32_t i_33808 = add32(x_33794, defunc_0_f_res_33798);
                int64_t i_33809 = sext_i32_i64(i_33808);
                int32_t x_33810 = ((__global
                                    int32_t *) defunc_4_map_res_mem_43920)[gtid_33487 *
                                                                           N_27772 +
                                                                           i_33809];
                int32_t adjustValInds_res_t_res_33811 = sub32(x_33810, n_27777);
                
                adjustValInds_res_33807 = adjustValInds_res_t_res_33811;
            } else {
                adjustValInds_res_33807 = -1;
            }
            fst_breakzq_33805 = adjustValInds_res_33807;
        }
        
        bool cond_33812 = sle32(x_33794, 5);
        bool cond_f_res_33813 = sle32(y_33796, 5);
        bool x_33814 = !cond_33812;
        bool y_33815 = cond_f_res_33813 && x_33814;
        bool cond_33816 = cond_33812 || y_33815;
        int32_t fst_breakzq_33817;
        
        if (cond_33816) {
            fst_breakzq_33817 = -2;
        } else {
            fst_breakzq_33817 = fst_breakzq_33805;
        }
        ((__global int32_t *) mem_44113)[gtid_33487] = fst_breakzq_33817;
        ((__global float *) mem_44115)[gtid_33487] = defunc_0_f_res_33801;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33790
}
__kernel void mainDetailedzisegmap_33523(__global int *global_failure,
                                         int64_t m_27773, __global
                                         unsigned char *mem_44098, __global
                                         unsigned char *mem_44100, __global
                                         unsigned char *mem_44108, __global
                                         unsigned char *mem_44110)
{
    #define segmap_group_sizze_33767 (mainDetailedzisegmap_group_sizze_33525)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45506;
    int32_t local_tid_45507;
    int64_t group_sizze_45510;
    int32_t wave_sizze_45509;
    int32_t group_tid_45508;
    
    global_tid_45506 = get_global_id(0);
    local_tid_45507 = get_local_id(0);
    group_sizze_45510 = get_local_size(0);
    wave_sizze_45509 = LOCKSTEP_WIDTH;
    group_tid_45508 = get_group_id(0);
    
    int32_t phys_tid_33523;
    
    phys_tid_33523 = global_tid_45506;
    
    int64_t gtid_33522;
    
    gtid_33522 = sext_i32_i64(group_tid_45508) * segmap_group_sizze_33767 +
        sext_i32_i64(local_tid_45507);
    if (slt64(gtid_33522, m_27773)) {
        bool acc0_33773 = ((__global bool *) mem_44098)[gtid_33522];
        bool x_33778 = acc0_33773 && acc0_33773;
        int32_t defunc_1_op_res_f_res_33782;
        
        if (acc0_33773) {
            int32_t acc0_33774 = ((__global int32_t *) mem_44100)[gtid_33522];
            
            defunc_1_op_res_f_res_33782 = acc0_33774;
        } else {
            defunc_1_op_res_f_res_33782 = -1;
        }
        ((__global bool *) mem_44108)[gtid_33522] = x_33778;
        ((__global int32_t *) mem_44110)[gtid_33522] =
            defunc_1_op_res_f_res_33782;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33767
}
__kernel void mainDetailedzisegmap_33644(__global int *global_failure,
                                         int64_t m_27773,
                                         int64_t num_groups_33667, __global
                                         unsigned char *defunc_4_map_res_mem_43918,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43983,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43984,
                                         __global unsigned char *mem_44089,
                                         __global unsigned char *mem_44091)
{
    #define segmap_group_sizze_33666 (mainDetailedzisegmap_group_sizze_33646)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45344;
    int32_t local_tid_45345;
    int64_t group_sizze_45348;
    int32_t wave_sizze_45347;
    int32_t group_tid_45346;
    
    global_tid_45344 = get_global_id(0);
    local_tid_45345 = get_local_id(0);
    group_sizze_45348 = get_local_size(0);
    wave_sizze_45347 = LOCKSTEP_WIDTH;
    group_tid_45346 = get_group_id(0);
    
    int32_t phys_tid_33644;
    
    phys_tid_33644 = global_tid_45344;
    
    int32_t phys_group_id_45349;
    
    phys_group_id_45349 = get_group_id(0);
    for (int32_t i_45350 = 0; i_45350 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27773, segmap_group_sizze_33666)) -
                   phys_group_id_45349, sext_i64_i32(num_groups_33667));
         i_45350++) {
        int32_t virt_group_id_45351 = phys_group_id_45349 + i_45350 *
                sext_i64_i32(num_groups_33667);
        int64_t gtid_33643 = sext_i32_i64(virt_group_id_45351) *
                segmap_group_sizze_33666 + sext_i32_i64(local_tid_45345);
        
        if (slt64(gtid_33643, m_27773)) {
            int32_t x_33673 = ((__global
                                int32_t *) defunc_4_map_res_mem_43918)[gtid_33643];
            int32_t x_33674 = ((__global
                                int32_t *) defunc_3_map_res_mem_43983)[gtid_33643];
            float x_33675 = ((__global
                              float *) defunc_3_map_res_mem_43984)[gtid_33643];
            int32_t y_33676 = sub32(x_33673, x_33674);
            float i32_res_33677 = sitofp_i32_f32(x_33674);
            float sqrt_res_33678;
            
            sqrt_res_33678 = futrts_sqrt32(i32_res_33677);
            
            float y_33679 = x_33675 * sqrt_res_33678;
            
            ((__global float *) mem_44089)[gtid_33643] = y_33679;
            ((__global int32_t *) mem_44091)[gtid_33643] = y_33676;
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33666
}
__kernel void mainDetailedzisegmap_intragroup_30568(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43305_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43295_backing_aligned_1,
                                                    int32_t k2p2zq_27790,
                                                    int64_t i32_res_27792,
                                                    int32_t m_27923,
                                                    int64_t i32_res_27925,
                                                    int64_t i32_res_27940,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43291,
                                                    __global
                                                    unsigned char *mem_43315)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43305_backing_1 = (__local volatile
                                                           char *) mem_43305_backing_aligned_0;
    __local volatile char *restrict mem_43295_backing_0 = (__local volatile
                                                           char *) mem_43295_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44514;
    int32_t local_tid_44515;
    int64_t group_sizze_44518;
    int32_t wave_sizze_44517;
    int32_t group_tid_44516;
    
    global_tid_44514 = get_global_id(0);
    local_tid_44515 = get_local_id(0);
    group_sizze_44518 = get_local_size(0);
    wave_sizze_44517 = LOCKSTEP_WIDTH;
    group_tid_44516 = get_group_id(0);
    
    int32_t phys_tid_30568;
    
    phys_tid_30568 = group_tid_44516;
    
    int32_t ltid_pre_44519;
    
    ltid_pre_44519 = local_tid_44515;
    
    int64_t gtid_30523;
    
    gtid_30523 = sext_i32_i64(group_tid_44516);
    
    __local char *mem_43295;
    
    mem_43295 = (__local char *) mem_43295_backing_0;
    
    int64_t gtid_30526 = sext_i32_i64(ltid_pre_44519);
    int32_t phys_tid_30527 = local_tid_44515;
    int32_t index_primexp_41131 = sext_i64_i32(gtid_30526);
    int32_t defunc_0_f_res_30693 = sdiv32(index_primexp_41131, m_27923);
    int32_t defunc_0_f_res_30694 = smod32(index_primexp_41131, m_27923);
    bool cond_30695 = slt32(defunc_0_f_res_30694, k2p2zq_27790);
    float defunc_0_f_res_30696;
    
    if (cond_30695) {
        int64_t i_30697 = sext_i32_i64(defunc_0_f_res_30693);
        int64_t j_30698 = sext_i32_i64(defunc_0_f_res_30694);
        float defunc_0_f_res_t_res_30699 = ((__global
                                             float *) defunc_3_map_res_mem_43291)[gtid_30523 *
                                                                                  (i32_res_27792 *
                                                                                   i32_res_27792) +
                                                                                  i_30697 *
                                                                                  i32_res_27792 +
                                                                                  j_30698];
        
        defunc_0_f_res_30696 = defunc_0_f_res_t_res_30699;
    } else {
        int32_t y_30700 = add32(k2p2zq_27790, defunc_0_f_res_30693);
        bool cond_30701 = defunc_0_f_res_30694 == y_30700;
        float defunc_0_f_res_f_res_30702;
        
        if (cond_30701) {
            defunc_0_f_res_f_res_30702 = 1.0F;
        } else {
            defunc_0_f_res_f_res_30702 = 0.0F;
        }
        defunc_0_f_res_30696 = defunc_0_f_res_f_res_30702;
    }
    ((__local float *) mem_43295)[gtid_30526] = defunc_0_f_res_30696;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43305;
    
    mem_43305 = (__local char *) mem_43305_backing_1;
    for (int32_t i_30704 = 0; i_30704 < k2p2zq_27790; i_30704++) {
        int64_t i32_res_30706 = sext_i32_i64(i_30704);
        float v1_30707 = ((__local float *) mem_43295)[i32_res_30706];
        bool cond_30708 = v1_30707 == 0.0F;
        int64_t gtid_30539 = sext_i32_i64(ltid_pre_44519);
        int32_t phys_tid_30540 = local_tid_44515;
        int32_t defunc_0_f_res_30711 = sext_i64_i32(gtid_30539);
        int32_t defunc_0_f_res_30712 = sdiv32(defunc_0_f_res_30711, m_27923);
        int32_t defunc_0_f_res_30713 = smod32(defunc_0_f_res_30711, m_27923);
        float defunc_0_f_res_30714;
        
        if (cond_30708) {
            int32_t x_30715 = mul32(m_27923, defunc_0_f_res_30712);
            int32_t i32_arg_30716 = add32(defunc_0_f_res_30713, x_30715);
            int64_t i32_res_30717 = sext_i32_i64(i32_arg_30716);
            float defunc_0_f_res_t_res_30718 = ((__local
                                                 float *) mem_43295)[i32_res_30717];
            
            defunc_0_f_res_30714 = defunc_0_f_res_t_res_30718;
        } else {
            int64_t i32_res_30719 = sext_i32_i64(defunc_0_f_res_30713);
            float x_30720 = ((__local float *) mem_43295)[i32_res_30719];
            float x_30721 = x_30720 / v1_30707;
            int32_t y_30722 = sub32(k2p2zq_27790, 1);
            bool cond_30723 = slt32(defunc_0_f_res_30712, y_30722);
            float defunc_0_f_res_f_res_30724;
            
            if (cond_30723) {
                int32_t x_30725 = add32(1, defunc_0_f_res_30712);
                int32_t x_30726 = mul32(m_27923, x_30725);
                int32_t i32_arg_30727 = add32(defunc_0_f_res_30713, x_30726);
                int64_t i32_res_30728 = sext_i32_i64(i32_arg_30727);
                float x_30729 = ((__local float *) mem_43295)[i32_res_30728];
                int32_t i32_arg_30730 = add32(i_30704, x_30726);
                int64_t i32_res_30731 = sext_i32_i64(i32_arg_30730);
                float x_30732 = ((__local float *) mem_43295)[i32_res_30731];
                float y_30733 = x_30721 * x_30732;
                float defunc_0_f_res_f_res_t_res_30734 = x_30729 - y_30733;
                
                defunc_0_f_res_f_res_30724 = defunc_0_f_res_f_res_t_res_30734;
            } else {
                defunc_0_f_res_f_res_30724 = x_30721;
            }
            defunc_0_f_res_30714 = defunc_0_f_res_f_res_30724;
        }
        ((__local float *) mem_43305)[gtid_30539] = defunc_0_f_res_30714;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_30566 = sext_i32_i64(ltid_pre_44519);
        int32_t phys_tid_30567 = local_tid_44515;
        float write_value_30737 = ((__local float *) mem_43305)[write_i_30566];
        
        if (sle64(0, write_i_30566) && slt64(write_i_30566, i32_res_27925)) {
            ((__local float *) mem_43295)[write_i_30566] = write_value_30737;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    for (int64_t i_44521 = 0; i_44521 < sdiv_up64(i32_res_27792 *
                                                  i32_res_27792 -
                                                  sext_i32_i64(local_tid_44515),
                                                  i32_res_27925); i_44521++) {
        ((__global float *) mem_43315)[gtid_30523 * (i32_res_27792 *
                                                     i32_res_27792) +
                                       squot64(i_44521 * i32_res_27925 +
                                               sext_i32_i64(local_tid_44515),
                                               i32_res_27792) * i32_res_27792 +
                                       (i_44521 * i32_res_27925 +
                                        sext_i32_i64(local_tid_44515) -
                                        squot64(i_44521 * i32_res_27925 +
                                                sext_i32_i64(local_tid_44515),
                                                i32_res_27792) *
                                        i32_res_27792)] = ((__local
                                                            float *) mem_43295)[i32_res_27792 +
                                                                                (squot64(i_44521 *
                                                                                         i32_res_27925 +
                                                                                         sext_i32_i64(local_tid_44515),
                                                                                         i32_res_27792) *
                                                                                 i32_res_27940 +
                                                                                 (i_44521 *
                                                                                  i32_res_27925 +
                                                                                  sext_i32_i64(local_tid_44515) -
                                                                                  squot64(i_44521 *
                                                                                          i32_res_27925 +
                                                                                          sext_i32_i64(local_tid_44515),
                                                                                          i32_res_27792) *
                                                                                  i32_res_27792))];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_3:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_30795(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43336_backing_aligned_0,
                                                    int64_t m_27773,
                                                    int32_t k2p2zq_27790,
                                                    int32_t m_27923,
                                                    int64_t i32_res_27925,
                                                    int32_t i_31190,
                                                    int64_t i32_res_31192,
                                                    int64_t ctx_param_ext_43322,
                                                    int64_t ctx_param_ext_43323,
                                                    int64_t ctx_param_ext_43325,
                                                    __global
                                                    unsigned char *mem_param_43327,
                                                    __global
                                                    unsigned char *mem_43332,
                                                    __global
                                                    unsigned char *mem_43340)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43336_backing_0 = (__local volatile
                                                           char *) mem_43336_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44548;
    int32_t local_tid_44549;
    int64_t group_sizze_44552;
    int32_t wave_sizze_44551;
    int32_t group_tid_44550;
    
    global_tid_44548 = get_global_id(0);
    local_tid_44549 = get_local_id(0);
    group_sizze_44552 = get_local_size(0);
    wave_sizze_44551 = LOCKSTEP_WIDTH;
    group_tid_44550 = get_group_id(0);
    
    int32_t phys_tid_30795;
    
    phys_tid_30795 = group_tid_44550;
    
    int32_t ltid_pre_44553;
    
    ltid_pre_44553 = local_tid_44549;
    
    int64_t gtid_30763;
    
    gtid_30763 = sext_i32_i64(group_tid_44550);
    
    float v1_31205 = ((__global float *) mem_param_43327)[ctx_param_ext_43322 +
                                                          (gtid_30763 *
                                                           ctx_param_ext_43323 +
                                                           i32_res_31192 *
                                                           ctx_param_ext_43325)];
    bool cond_31206 = v1_31205 == 0.0F;
    __local char *mem_43336;
    
    mem_43336 = (__local char *) mem_43336_backing_0;
    
    int64_t gtid_30766 = sext_i32_i64(ltid_pre_44553);
    int32_t phys_tid_30767 = local_tid_44549;
    int32_t defunc_0_f_res_31209 = sext_i64_i32(gtid_30766);
    int32_t defunc_0_f_res_31210 = sdiv32(defunc_0_f_res_31209, m_27923);
    int32_t defunc_0_f_res_31211 = smod32(defunc_0_f_res_31209, m_27923);
    float defunc_0_f_res_31212;
    
    if (cond_31206) {
        int32_t x_31213 = mul32(m_27923, defunc_0_f_res_31210);
        int32_t i32_arg_31214 = add32(defunc_0_f_res_31211, x_31213);
        int64_t i32_res_31215 = sext_i32_i64(i32_arg_31214);
        float defunc_0_f_res_t_res_31216 = ((__global
                                             float *) mem_param_43327)[ctx_param_ext_43322 +
                                                                       (gtid_30763 *
                                                                        ctx_param_ext_43323 +
                                                                        i32_res_31215 *
                                                                        ctx_param_ext_43325)];
        
        defunc_0_f_res_31212 = defunc_0_f_res_t_res_31216;
    } else {
        int64_t i32_res_31217 = sext_i32_i64(defunc_0_f_res_31211);
        float x_31218 = ((__global
                          float *) mem_param_43327)[ctx_param_ext_43322 +
                                                    (gtid_30763 *
                                                     ctx_param_ext_43323 +
                                                     i32_res_31217 *
                                                     ctx_param_ext_43325)];
        float x_31219 = x_31218 / v1_31205;
        int32_t y_31220 = sub32(k2p2zq_27790, 1);
        bool cond_31221 = slt32(defunc_0_f_res_31210, y_31220);
        float defunc_0_f_res_f_res_31222;
        
        if (cond_31221) {
            int32_t x_31223 = add32(1, defunc_0_f_res_31210);
            int32_t x_31224 = mul32(m_27923, x_31223);
            int32_t i32_arg_31225 = add32(defunc_0_f_res_31211, x_31224);
            int64_t i32_res_31226 = sext_i32_i64(i32_arg_31225);
            float x_31227 = ((__global
                              float *) mem_param_43327)[ctx_param_ext_43322 +
                                                        (gtid_30763 *
                                                         ctx_param_ext_43323 +
                                                         i32_res_31226 *
                                                         ctx_param_ext_43325)];
            int32_t i32_arg_31228 = add32(i_31190, x_31224);
            int64_t i32_res_31229 = sext_i32_i64(i32_arg_31228);
            float x_31230 = ((__global
                              float *) mem_param_43327)[ctx_param_ext_43322 +
                                                        (gtid_30763 *
                                                         ctx_param_ext_43323 +
                                                         i32_res_31229 *
                                                         ctx_param_ext_43325)];
            float y_31231 = x_31219 * x_31230;
            float defunc_0_f_res_f_res_t_res_31232 = x_31227 - y_31231;
            
            defunc_0_f_res_f_res_31222 = defunc_0_f_res_f_res_t_res_31232;
        } else {
            defunc_0_f_res_f_res_31222 = x_31219;
        }
        defunc_0_f_res_31212 = defunc_0_f_res_f_res_31222;
    }
    ((__local float *) mem_43336)[gtid_30766] = defunc_0_f_res_31212;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_30793 = sext_i32_i64(ltid_pre_44553);
    int32_t phys_tid_30794 = local_tid_44549;
    float write_value_31235 = ((__local float *) mem_43336)[write_i_30793];
    
    if (sle64(0, write_i_30793) && slt64(write_i_30793, i32_res_27925)) {
        ((__global float *) mem_43332)[gtid_30763 + write_i_30793 * m_27773] =
            write_value_31235;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44549 == 0) {
        for (int64_t i_44554 = 0; i_44554 < i32_res_27925; i_44554++) {
            ((__global float *) mem_43340)[gtid_30763 * i32_res_27925 +
                                           i_44554] = ((__global
                                                        float *) mem_43332)[gtid_30763 +
                                                                            i_44554 *
                                                                            m_27773];
        }
    }
    
  error_2:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_31746(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43897_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43895_backing_aligned_1,
                                                    __local volatile
                                                    int64_t *mem_43893_backing_aligned_2,
                                                    __local volatile
                                                    int64_t *mem_43891_backing_aligned_3,
                                                    int64_t N_27772,
                                                    int64_t N_27774,
                                                    int64_t i_28052, __global
                                                    unsigned char *images_mem_43123,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43881,
                                                    __global
                                                    unsigned char *mem_43900,
                                                    __global
                                                    unsigned char *mem_43903,
                                                    __global
                                                    unsigned char *mem_43906)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43897_backing_3 = (__local volatile
                                                           char *) mem_43897_backing_aligned_0;
    __local volatile char *restrict mem_43895_backing_2 = (__local volatile
                                                           char *) mem_43895_backing_aligned_1;
    __local volatile char *restrict mem_43893_backing_1 = (__local volatile
                                                           char *) mem_43893_backing_aligned_2;
    __local volatile char *restrict mem_43891_backing_0 = (__local volatile
                                                           char *) mem_43891_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44948;
    int32_t local_tid_44949;
    int64_t group_sizze_44952;
    int32_t wave_sizze_44951;
    int32_t group_tid_44950;
    
    global_tid_44948 = get_global_id(0);
    local_tid_44949 = get_local_id(0);
    group_sizze_44952 = get_local_size(0);
    wave_sizze_44951 = LOCKSTEP_WIDTH;
    group_tid_44950 = get_group_id(0);
    
    int32_t phys_tid_31746;
    
    phys_tid_31746 = group_tid_44950;
    
    int32_t ltid_pre_44953;
    
    ltid_pre_44953 = local_tid_44949;
    
    int64_t gtid_31739;
    
    gtid_31739 = sext_i32_i64(group_tid_44950);
    
    __local char *mem_43891;
    
    mem_43891 = (__local char *) mem_43891_backing_0;
    
    __local char *mem_43893;
    
    mem_43893 = (__local char *) mem_43893_backing_1;
    
    int64_t gtid_31742 = sext_i32_i64(ltid_pre_44953);
    int32_t phys_tid_31743 = local_tid_44949;
    float x_31835 = ((__global float *) images_mem_43123)[gtid_31739 * N_27774 +
                                                          gtid_31742];
    bool isnan_res_31837;
    
    isnan_res_31837 = futrts_isnan32(x_31835);
    
    bool cond_31838 = !isnan_res_31837;
    float defunc_0_f_res_31839;
    
    if (cond_31838) {
        float x_31836 = ((__global
                          float *) defunc_3_map_res_mem_43881)[gtid_31739 *
                                                               N_27772 +
                                                               gtid_31742];
        float defunc_0_f_res_t_res_31840 = x_31835 - x_31836;
        
        defunc_0_f_res_31839 = defunc_0_f_res_t_res_31840;
    } else {
        defunc_0_f_res_31839 = NAN;
    }
    
    bool isnan_res_31841;
    
    isnan_res_31841 = futrts_isnan32(defunc_0_f_res_31839);
    
    bool defunc_0_p_res_31842 = !isnan_res_31841;
    int64_t defunc_0_f_res_31843 = btoi_bool_i64(defunc_0_p_res_31842);
    
    ((__local int64_t *) mem_43891)[gtid_31742] = defunc_0_f_res_31843;
    ((__local float *) mem_43893)[gtid_31742] = defunc_0_f_res_31839;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_44954;
    
    dims_flat_44954 = N_27772;
    
    int64_t x_31832;
    int64_t x_31833;
    int64_t x_44956;
    int64_t x_44957;
    bool ltid_in_bounds_44959;
    
    ltid_in_bounds_44959 = slt64(sext_i32_i64(local_tid_44949), N_27772);
    
    int32_t skip_threads_44960;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44959) {
            x_31833 = ((volatile __local
                        int64_t *) mem_43891)[sext_i32_i64(local_tid_44949)];
            if ((local_tid_44949 - squot32(local_tid_44949, 32) * 32) == 0) {
                x_31832 = x_31833;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44960 = 1;
        while (slt32(skip_threads_44960, 32)) {
            if (sle32(skip_threads_44960, local_tid_44949 -
                      squot32(local_tid_44949, 32) * 32) &&
                ltid_in_bounds_44959) {
                // read operands
                {
                    x_31832 = ((volatile __local
                                int64_t *) mem_43891)[sext_i32_i64(local_tid_44949) -
                                                      sext_i32_i64(skip_threads_44960)];
                }
                // perform operation
                {
                    bool inactive_44961 =
                         slt64(srem64(sext_i32_i64(local_tid_44949), N_27772),
                               sext_i32_i64(local_tid_44949) -
                               sext_i32_i64(local_tid_44949 -
                               skip_threads_44960));
                    
                    if (inactive_44961) {
                        x_31832 = x_31833;
                    }
                    if (!inactive_44961) {
                        int64_t defunc_1_op_res_31834 = add64(x_31832, x_31833);
                        
                        x_31832 = defunc_1_op_res_31834;
                    }
                }
            }
            if (sle32(wave_sizze_44951, skip_threads_44960)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44960, local_tid_44949 -
                      squot32(local_tid_44949, 32) * 32) &&
                ltid_in_bounds_44959) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_43891)[sext_i32_i64(local_tid_44949)] =
                        x_31832;
                    x_31833 = x_31832;
                }
            }
            if (sle32(wave_sizze_44951, skip_threads_44960)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44960 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44949 - squot32(local_tid_44949, 32) * 32) == 31 &&
            ltid_in_bounds_44959) {
            ((volatile __local
              int64_t *) mem_43891)[sext_i32_i64(squot32(local_tid_44949,
                                                         32))] = x_31832;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44962;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44949, 32) == 0 && ltid_in_bounds_44959) {
                x_44957 = ((volatile __local
                            int64_t *) mem_43891)[sext_i32_i64(local_tid_44949)];
                if ((local_tid_44949 - squot32(local_tid_44949, 32) * 32) ==
                    0) {
                    x_44956 = x_44957;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44962 = 1;
            while (slt32(skip_threads_44962, 32)) {
                if (sle32(skip_threads_44962, local_tid_44949 -
                          squot32(local_tid_44949, 32) * 32) &&
                    (squot32(local_tid_44949, 32) == 0 &&
                     ltid_in_bounds_44959)) {
                    // read operands
                    {
                        x_44956 = ((volatile __local
                                    int64_t *) mem_43891)[sext_i32_i64(local_tid_44949) -
                                                          sext_i32_i64(skip_threads_44962)];
                    }
                    // perform operation
                    {
                        bool inactive_44963 =
                             slt64(srem64(sext_i32_i64(local_tid_44949 * 32 +
                                          32 - 1), N_27772),
                                   sext_i32_i64(local_tid_44949 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_44949 -
                                                 skip_threads_44962) * 32 + 32 -
                                   1));
                        
                        if (inactive_44963) {
                            x_44956 = x_44957;
                        }
                        if (!inactive_44963) {
                            int64_t defunc_1_op_res_44958 = add64(x_44956,
                                                                  x_44957);
                            
                            x_44956 = defunc_1_op_res_44958;
                        }
                    }
                }
                if (sle32(wave_sizze_44951, skip_threads_44962)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44962, local_tid_44949 -
                          squot32(local_tid_44949, 32) * 32) &&
                    (squot32(local_tid_44949, 32) == 0 &&
                     ltid_in_bounds_44959)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_43891)[sext_i32_i64(local_tid_44949)] =
                            x_44956;
                        x_44957 = x_44956;
                    }
                }
                if (sle32(wave_sizze_44951, skip_threads_44962)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44962 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44949, 32) == 0 || !ltid_in_bounds_44959)) {
            // read operands
            {
                x_31833 = x_31832;
                x_31832 = ((__local
                            int64_t *) mem_43891)[sext_i32_i64(squot32(local_tid_44949,
                                                                       32)) -
                                                  1];
            }
            // perform operation
            {
                bool inactive_44964 =
                     slt64(srem64(sext_i32_i64(local_tid_44949), N_27772),
                           sext_i32_i64(local_tid_44949) -
                           sext_i32_i64(squot32(local_tid_44949, 32) * 32 - 1));
                
                if (inactive_44964) {
                    x_31832 = x_31833;
                }
                if (!inactive_44964) {
                    int64_t defunc_1_op_res_31834 = add64(x_31832, x_31833);
                    
                    x_31832 = defunc_1_op_res_31834;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_43891)[sext_i32_i64(local_tid_44949)] =
                    x_31832;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44949, 32) == 0) {
            ((__local int64_t *) mem_43891)[sext_i32_i64(local_tid_44949)] =
                x_31833;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_31844 = ((__local int64_t *) mem_43891)[i_28052];
    int32_t defunc_0_f_res_31845 = sext_i64_i32(last_res_31844);
    __local char *mem_43895;
    
    mem_43895 = (__local char *) mem_43895_backing_2;
    ((__local float *) mem_43895)[sext_i32_i64(local_tid_44949)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43897;
    
    mem_43897 = (__local char *) mem_43897_backing_3;
    ((__local int32_t *) mem_43897)[sext_i32_i64(local_tid_44949)] = 0;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_31744 = sext_i32_i64(ltid_pre_44953);
    int32_t phys_tid_31745 = local_tid_44949;
    float x_31850 = ((__local float *) mem_43893)[write_i_31744];
    int32_t index_primexp_41151 = sext_i64_i32(write_i_31744);
    bool isnan_res_31853;
    
    isnan_res_31853 = futrts_isnan32(x_31850);
    
    bool defunc_0_p_res_31854 = !isnan_res_31853;
    int64_t defunc_1_f_res_31855;
    
    if (defunc_0_p_res_31854) {
        int64_t x_31851 = ((__local int64_t *) mem_43891)[write_i_31744];
        int64_t defunc_1_f_res_t_res_31856 = sub64(x_31851, 1);
        
        defunc_1_f_res_31855 = defunc_1_f_res_t_res_31856;
    } else {
        defunc_1_f_res_31855 = -1;
    }
    if (sle64(0, defunc_1_f_res_31855) && slt64(defunc_1_f_res_31855,
                                                N_27772)) {
        ((__local int32_t *) mem_43897)[defunc_1_f_res_31855] =
            index_primexp_41151;
    }
    if (sle64(0, defunc_1_f_res_31855) && slt64(defunc_1_f_res_31855,
                                                N_27772)) {
        ((__local float *) mem_43895)[defunc_1_f_res_31855] = x_31850;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44949 == 0) {
        ((__global int32_t *) mem_43900)[gtid_31739] = defunc_0_f_res_31845;
    }
    ((__global float *) mem_43903)[gtid_31739 * N_27772 +
                                   sext_i32_i64(local_tid_44949)] = ((__local
                                                                      float *) mem_43895)[sext_i32_i64(local_tid_44949)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global int32_t *) mem_43906)[gtid_31739 * N_27772 +
                                     sext_i32_i64(local_tid_44949)] = ((__local
                                                                        int32_t *) mem_43897)[sext_i32_i64(local_tid_44949)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_32086(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *red_arr_mem_45057_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *red_arr_mem_45053_backing_aligned_1,
                                                    int64_t N_27772,
                                                    int64_t N_27774,
                                                    float hfrac_27779,
                                                    int64_t i32_res_27786,
                                                    int32_t k2p2_27788, __global
                                                    unsigned char *images_mem_43123,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_43919,
                                                    __global
                                                    unsigned char *mem_43963,
                                                    __global
                                                    unsigned char *mem_43965,
                                                    __global
                                                    unsigned char *mem_43967)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45057_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45057_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45053_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45053_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45047;
    int32_t local_tid_45048;
    int64_t group_sizze_45051;
    int32_t wave_sizze_45050;
    int32_t group_tid_45049;
    
    global_tid_45047 = get_global_id(0);
    local_tid_45048 = get_local_id(0);
    group_sizze_45051 = get_local_size(0);
    wave_sizze_45050 = LOCKSTEP_WIDTH;
    group_tid_45049 = get_group_id(0);
    
    int32_t phys_tid_32086;
    
    phys_tid_32086 = group_tid_45049;
    
    int32_t ltid_pre_45052;
    
    ltid_pre_45052 = local_tid_45048;
    
    int64_t gtid_32079;
    
    gtid_32079 = sext_i32_i64(group_tid_45049);
    
    int32_t defunc_0_f_res_32163;
    int64_t gtid_32082 = sext_i32_i64(ltid_pre_45052);
    int32_t phys_tid_32083 = local_tid_45048;
    __local char *red_arr_mem_45053;
    
    red_arr_mem_45053 = (__local char *) red_arr_mem_45053_backing_0;
    
    float x_32167;
    
    x_32167 = ((__global float *) images_mem_43123)[gtid_32079 * N_27774 +
                                                    gtid_32082];
    
    bool isnan_res_32168;
    
    isnan_res_32168 = futrts_isnan32(x_32167);
    
    bool cond_32169 = !isnan_res_32168;
    int32_t defunc_0_f_res_32170 = btoi_bool_i32(cond_32169);
    
    ((__local int32_t *) red_arr_mem_45053)[gtid_32082] = defunc_0_f_res_32170;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45055;
    int32_t skip_waves_45056;
    
    skip_waves_45056 = 1;
    
    int32_t x_32164;
    int32_t x_32165;
    
    offset_45055 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45048, sext_i64_i32(i32_res_27786))) {
            x_32164 = ((__local
                        int32_t *) red_arr_mem_45053)[sext_i32_i64(local_tid_45048 +
                                                      offset_45055)];
        }
    }
    offset_45055 = 1;
    while (slt32(offset_45055, wave_sizze_45050)) {
        if (slt32(local_tid_45048 + offset_45055,
                  sext_i64_i32(i32_res_27786)) && ((local_tid_45048 -
                                                    squot32(local_tid_45048,
                                                            wave_sizze_45050) *
                                                    wave_sizze_45050) & (2 *
                                                                         offset_45055 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_32165 = ((volatile __local
                            int32_t *) red_arr_mem_45053)[sext_i32_i64(local_tid_45048 +
                                                          offset_45055)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_32166 = add32(x_32164, x_32165);
                
                x_32164 = defunc_1_op_res_32166;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_45053)[sext_i32_i64(local_tid_45048)] =
                    x_32164;
            }
        }
        offset_45055 *= 2;
    }
    while (slt32(skip_waves_45056, squot32(sext_i64_i32(i32_res_27786) +
                                           wave_sizze_45050 - 1,
                                           wave_sizze_45050))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45055 = skip_waves_45056 * wave_sizze_45050;
        if (slt32(local_tid_45048 + offset_45055,
                  sext_i64_i32(i32_res_27786)) && ((local_tid_45048 -
                                                    squot32(local_tid_45048,
                                                            wave_sizze_45050) *
                                                    wave_sizze_45050) == 0 &&
                                                   (squot32(local_tid_45048,
                                                            wave_sizze_45050) &
                                                    (2 * skip_waves_45056 -
                                                     1)) == 0)) {
            // read array element
            {
                x_32165 = ((__local
                            int32_t *) red_arr_mem_45053)[sext_i32_i64(local_tid_45048 +
                                                          offset_45055)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_32166 = add32(x_32164, x_32165);
                
                x_32164 = defunc_1_op_res_32166;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_45053)[sext_i32_i64(local_tid_45048)] =
                    x_32164;
            }
        }
        skip_waves_45056 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_32163 = ((__local int32_t *) red_arr_mem_45053)[0];
    
    float defunc_0_f_res_32171;
    int64_t gtid_32084 = sext_i32_i64(ltid_pre_45052);
    int32_t phys_tid_32085 = local_tid_45048;
    __local char *red_arr_mem_45057;
    
    red_arr_mem_45057 = (__local char *) red_arr_mem_45057_backing_1;
    
    int32_t index_primexp_41159;
    
    index_primexp_41159 = sext_i64_i32(gtid_32084);
    
    bool cond_32176 = slt32(index_primexp_41159, defunc_0_f_res_32163);
    float defunc_0_f_res_32177;
    
    if (cond_32176) {
        int64_t i_32178 = sext_i32_i64(index_primexp_41159);
        float defunc_0_f_res_t_res_32179 = ((__global
                                             float *) defunc_4_map_res_mem_43919)[gtid_32079 *
                                                                                  N_27772 +
                                                                                  i_32178];
        
        defunc_0_f_res_32177 = defunc_0_f_res_t_res_32179;
    } else {
        defunc_0_f_res_32177 = 0.0F;
    }
    
    float defunc_0_f_res_32180 = defunc_0_f_res_32177 * defunc_0_f_res_32177;
    
    ((__local float *) red_arr_mem_45057)[gtid_32084] = defunc_0_f_res_32180;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45059;
    int32_t skip_waves_45060;
    
    skip_waves_45060 = 1;
    
    float x_32172;
    float x_32173;
    
    offset_45059 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45048, sext_i64_i32(i32_res_27786))) {
            x_32172 = ((__local
                        float *) red_arr_mem_45057)[sext_i32_i64(local_tid_45048 +
                                                    offset_45059)];
        }
    }
    offset_45059 = 1;
    while (slt32(offset_45059, wave_sizze_45050)) {
        if (slt32(local_tid_45048 + offset_45059,
                  sext_i64_i32(i32_res_27786)) && ((local_tid_45048 -
                                                    squot32(local_tid_45048,
                                                            wave_sizze_45050) *
                                                    wave_sizze_45050) & (2 *
                                                                         offset_45059 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_32173 = ((volatile __local
                            float *) red_arr_mem_45057)[sext_i32_i64(local_tid_45048 +
                                                        offset_45059)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_32174 = x_32172 + x_32173;
                
                x_32172 = defunc_1_op_res_32174;
            }
            // write result of operation
            {
                ((volatile __local
                  float *) red_arr_mem_45057)[sext_i32_i64(local_tid_45048)] =
                    x_32172;
            }
        }
        offset_45059 *= 2;
    }
    while (slt32(skip_waves_45060, squot32(sext_i64_i32(i32_res_27786) +
                                           wave_sizze_45050 - 1,
                                           wave_sizze_45050))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45059 = skip_waves_45060 * wave_sizze_45050;
        if (slt32(local_tid_45048 + offset_45059,
                  sext_i64_i32(i32_res_27786)) && ((local_tid_45048 -
                                                    squot32(local_tid_45048,
                                                            wave_sizze_45050) *
                                                    wave_sizze_45050) == 0 &&
                                                   (squot32(local_tid_45048,
                                                            wave_sizze_45050) &
                                                    (2 * skip_waves_45060 -
                                                     1)) == 0)) {
            // read array element
            {
                x_32173 = ((__local
                            float *) red_arr_mem_45057)[sext_i32_i64(local_tid_45048 +
                                                        offset_45059)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_32174 = x_32172 + x_32173;
                
                x_32172 = defunc_1_op_res_32174;
            }
            // write result of operation
            {
                ((__local
                  float *) red_arr_mem_45057)[sext_i32_i64(local_tid_45048)] =
                    x_32172;
            }
        }
        skip_waves_45060 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_32171 = ((__local float *) red_arr_mem_45057)[0];
    
    int32_t r32_arg_32181 = sub32(defunc_0_f_res_32163, k2p2_27788);
    float i32_res_32182 = sitofp_i32_f32(r32_arg_32181);
    float sqrt_arg_32183 = defunc_0_f_res_32171 / i32_res_32182;
    float sqrt_res_32184;
    
    sqrt_res_32184 = futrts_sqrt32(sqrt_arg_32183);
    
    float i32_res_32185 = sitofp_i32_f32(defunc_0_f_res_32163);
    float t32_arg_32186 = hfrac_27779 * i32_res_32185;
    int32_t f32_res_32187 = fptosi_f32_i32(t32_arg_32186);
    
    if (local_tid_45048 == 0) {
        ((__global int32_t *) mem_43963)[gtid_32079] = f32_res_32187;
    }
    if (local_tid_45048 == 0) {
        ((__global int32_t *) mem_43965)[gtid_32079] = defunc_0_f_res_32163;
    }
    if (local_tid_45048 == 0) {
        ((__global float *) mem_43967)[gtid_32079] = sqrt_res_32184;
    }
    
  error_4:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_33066(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_44075_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *red_arr_mem_45340_backing_aligned_1,
                                                    __local volatile
                                                    int64_t *red_arr_mem_45338_backing_aligned_2,
                                                    __local volatile
                                                    int64_t *red_arr_mem_45336_backing_aligned_3,
                                                    __local volatile
                                                    int64_t *mem_44073_backing_aligned_4,
                                                    __local volatile
                                                    int64_t *mem_44070_backing_aligned_5,
                                                    int64_t N_27772,
                                                    int32_t n_27777,
                                                    int64_t iota32_arg_28172,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_43918,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_43919,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_43920,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43982,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43983,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43984,
                                                    __global
                                                    unsigned char *defunc_0_f_res_mem_44017,
                                                    __global
                                                    unsigned char *mem_44022,
                                                    __global
                                                    unsigned char *mem_44079,
                                                    __global
                                                    unsigned char *mem_44082,
                                                    __global
                                                    unsigned char *mem_44084,
                                                    __global
                                                    unsigned char *mem_44086)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44075_backing_5 = (__local volatile
                                                           char *) mem_44075_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45340_backing_4 =
                          (__local volatile
                           char *) red_arr_mem_45340_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45338_backing_3 =
                          (__local volatile
                           char *) red_arr_mem_45338_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_45336_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45336_backing_aligned_3;
    __local volatile char *restrict mem_44073_backing_1 = (__local volatile
                                                           char *) mem_44073_backing_aligned_4;
    __local volatile char *restrict mem_44070_backing_0 = (__local volatile
                                                           char *) mem_44070_backing_aligned_5;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45319;
    int32_t local_tid_45320;
    int64_t group_sizze_45323;
    int32_t wave_sizze_45322;
    int32_t group_tid_45321;
    
    global_tid_45319 = get_global_id(0);
    local_tid_45320 = get_local_id(0);
    group_sizze_45323 = get_local_size(0);
    wave_sizze_45322 = LOCKSTEP_WIDTH;
    group_tid_45321 = get_group_id(0);
    
    int32_t phys_tid_33066;
    
    phys_tid_33066 = group_tid_45321;
    
    int32_t ltid_pre_45324;
    
    ltid_pre_45324 = local_tid_45320;
    
    int64_t gtid_33057;
    
    gtid_33057 = sext_i32_i64(group_tid_45321);
    
    int32_t x_33318;
    
    x_33318 = ((__global int32_t *) defunc_4_map_res_mem_43918)[gtid_33057];
    
    int32_t x_33319 = ((__global
                        int32_t *) defunc_3_map_res_mem_43983)[gtid_33057];
    float x_33320 = ((__global float *) defunc_3_map_res_mem_43984)[gtid_33057];
    int32_t x_33321 = ((__global
                        int32_t *) defunc_3_map_res_mem_43982)[gtid_33057];
    float x_33322 = ((__global float *) defunc_0_f_res_mem_44017)[gtid_33057];
    int32_t y_33325 = sub32(x_33318, x_33319);
    float i32_res_33326 = sitofp_i32_f32(x_33319);
    float sqrt_res_33327;
    
    sqrt_res_33327 = futrts_sqrt32(i32_res_33326);
    
    float y_33328 = x_33320 * sqrt_res_33327;
    __local char *mem_44070;
    
    mem_44070 = (__local char *) mem_44070_backing_0;
    
    int64_t gtid_33060 = sext_i32_i64(ltid_pre_45324);
    int32_t phys_tid_33061 = local_tid_45320;
    int32_t index_primexp_41177 = sext_i64_i32(gtid_33060);
    bool cond_33341 = sle32(y_33325, index_primexp_41177);
    float defunc_0_f_res_33342;
    
    if (cond_33341) {
        defunc_0_f_res_33342 = 0.0F;
    } else {
        bool cond_33343 = index_primexp_41177 == 0;
        float defunc_0_f_res_f_res_33344;
        
        if (cond_33343) {
            defunc_0_f_res_f_res_33344 = x_33322;
        } else {
            int32_t i_33345 = add32(x_33319, index_primexp_41177);
            int64_t i_33346 = sext_i32_i64(i_33345);
            float x_33347 = ((__global
                              float *) defunc_4_map_res_mem_43919)[gtid_33057 *
                                                                   N_27772 +
                                                                   i_33346];
            int32_t x_33348 = sub32(x_33319, x_33321);
            int32_t i_33349 = add32(x_33348, index_primexp_41177);
            int64_t i_33350 = sext_i32_i64(i_33349);
            float y_33351 = ((__global
                              float *) defunc_4_map_res_mem_43919)[gtid_33057 *
                                                                   N_27772 +
                                                                   i_33350];
            float defunc_0_f_res_f_res_f_res_33352 = x_33347 - y_33351;
            
            defunc_0_f_res_f_res_33344 = defunc_0_f_res_f_res_f_res_33352;
        }
        defunc_0_f_res_33342 = defunc_0_f_res_f_res_33344;
    }
    ((__local float *) mem_44070)[gtid_33060] = defunc_0_f_res_33342;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_45325;
    
    dims_flat_45325 = iota32_arg_28172;
    
    float x_33337;
    float x_33338;
    float x_45327;
    float x_45328;
    bool ltid_in_bounds_45330;
    
    ltid_in_bounds_45330 = slt64(sext_i32_i64(local_tid_45320),
                                 iota32_arg_28172);
    
    int32_t skip_threads_45331;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45330) {
            x_33338 = ((volatile __local
                        float *) mem_44070)[sext_i32_i64(local_tid_45320)];
            if ((local_tid_45320 - squot32(local_tid_45320, 32) * 32) == 0) {
                x_33337 = x_33338;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45331 = 1;
        while (slt32(skip_threads_45331, 32)) {
            if (sle32(skip_threads_45331, local_tid_45320 -
                      squot32(local_tid_45320, 32) * 32) &&
                ltid_in_bounds_45330) {
                // read operands
                {
                    x_33337 = ((volatile __local
                                float *) mem_44070)[sext_i32_i64(local_tid_45320) -
                                                    sext_i32_i64(skip_threads_45331)];
                }
                // perform operation
                {
                    bool inactive_45332 =
                         slt64(srem64(sext_i32_i64(local_tid_45320),
                                      iota32_arg_28172),
                               sext_i32_i64(local_tid_45320) -
                               sext_i32_i64(local_tid_45320 -
                               skip_threads_45331));
                    
                    if (inactive_45332) {
                        x_33337 = x_33338;
                    }
                    if (!inactive_45332) {
                        float defunc_1_op_res_33339 = x_33337 + x_33338;
                        
                        x_33337 = defunc_1_op_res_33339;
                    }
                }
            }
            if (sle32(wave_sizze_45322, skip_threads_45331)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45331, local_tid_45320 -
                      squot32(local_tid_45320, 32) * 32) &&
                ltid_in_bounds_45330) {
                // write result
                {
                    ((volatile __local
                      float *) mem_44070)[sext_i32_i64(local_tid_45320)] =
                        x_33337;
                    x_33338 = x_33337;
                }
            }
            if (sle32(wave_sizze_45322, skip_threads_45331)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45331 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45320 - squot32(local_tid_45320, 32) * 32) == 31 &&
            ltid_in_bounds_45330) {
            ((volatile __local
              float *) mem_44070)[sext_i32_i64(squot32(local_tid_45320, 32))] =
                x_33337;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45333;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45320, 32) == 0 && ltid_in_bounds_45330) {
                x_45328 = ((volatile __local
                            float *) mem_44070)[sext_i32_i64(local_tid_45320)];
                if ((local_tid_45320 - squot32(local_tid_45320, 32) * 32) ==
                    0) {
                    x_45327 = x_45328;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45333 = 1;
            while (slt32(skip_threads_45333, 32)) {
                if (sle32(skip_threads_45333, local_tid_45320 -
                          squot32(local_tid_45320, 32) * 32) &&
                    (squot32(local_tid_45320, 32) == 0 &&
                     ltid_in_bounds_45330)) {
                    // read operands
                    {
                        x_45327 = ((volatile __local
                                    float *) mem_44070)[sext_i32_i64(local_tid_45320) -
                                                        sext_i32_i64(skip_threads_45333)];
                    }
                    // perform operation
                    {
                        bool inactive_45334 =
                             slt64(srem64(sext_i32_i64(local_tid_45320 * 32 +
                                          32 - 1), iota32_arg_28172),
                                   sext_i32_i64(local_tid_45320 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_45320 -
                                                 skip_threads_45333) * 32 + 32 -
                                   1));
                        
                        if (inactive_45334) {
                            x_45327 = x_45328;
                        }
                        if (!inactive_45334) {
                            float defunc_1_op_res_45329 = x_45327 + x_45328;
                            
                            x_45327 = defunc_1_op_res_45329;
                        }
                    }
                }
                if (sle32(wave_sizze_45322, skip_threads_45333)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45333, local_tid_45320 -
                          squot32(local_tid_45320, 32) * 32) &&
                    (squot32(local_tid_45320, 32) == 0 &&
                     ltid_in_bounds_45330)) {
                    // write result
                    {
                        ((volatile __local
                          float *) mem_44070)[sext_i32_i64(local_tid_45320)] =
                            x_45327;
                        x_45328 = x_45327;
                    }
                }
                if (sle32(wave_sizze_45322, skip_threads_45333)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45333 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45320, 32) == 0 || !ltid_in_bounds_45330)) {
            // read operands
            {
                x_33338 = x_33337;
                x_33337 = ((__local
                            float *) mem_44070)[sext_i32_i64(squot32(local_tid_45320,
                                                                     32)) - 1];
            }
            // perform operation
            {
                bool inactive_45335 =
                     slt64(srem64(sext_i32_i64(local_tid_45320),
                                  iota32_arg_28172),
                           sext_i32_i64(local_tid_45320) -
                           sext_i32_i64(squot32(local_tid_45320, 32) * 32 - 1));
                
                if (inactive_45335) {
                    x_33337 = x_33338;
                }
                if (!inactive_45335) {
                    float defunc_1_op_res_33339 = x_33337 + x_33338;
                    
                    x_33337 = defunc_1_op_res_33339;
                }
            }
            // write final result
            {
                ((__local float *) mem_44070)[sext_i32_i64(local_tid_45320)] =
                    x_33337;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45320, 32) == 0) {
            ((__local float *) mem_44070)[sext_i32_i64(local_tid_45320)] =
                x_33338;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44073;
    
    mem_44073 = (__local char *) mem_44073_backing_1;
    
    bool acc0_33358;
    int32_t acc0_33359;
    float acc0_33360;
    int64_t gtid_33062 = sext_i32_i64(ltid_pre_45324);
    int32_t phys_tid_33063 = local_tid_45320;
    __local char *red_arr_mem_45336;
    
    red_arr_mem_45336 = (__local char *) red_arr_mem_45336_backing_2;
    
    __local char *red_arr_mem_45338;
    
    red_arr_mem_45338 = (__local char *) red_arr_mem_45338_backing_3;
    
    __local char *red_arr_mem_45340;
    
    red_arr_mem_45340 = (__local char *) red_arr_mem_45340_backing_4;
    
    float x_33376;
    
    x_33376 = ((__local float *) mem_44070)[gtid_33062];
    
    float x_33377 = ((__global float *) mem_44022)[gtid_33062];
    int32_t index_primexp_41180 = sext_i64_i32(gtid_33062);
    float defunc_0_f_res_33380 = x_33376 / y_33328;
    bool cond_33381 = slt32(index_primexp_41180, y_33325);
    bool isnan_res_33382;
    
    isnan_res_33382 = futrts_isnan32(defunc_0_f_res_33380);
    
    bool cond_t_res_33383 = !isnan_res_33382;
    bool x_33384 = cond_33381 && cond_t_res_33383;
    float abs_res_33385 = (float) fabs(defunc_0_f_res_33380);
    bool defunc_2_f_res_t_res_33386 = x_33377 < abs_res_33385;
    bool x_33387 = x_33384 && defunc_2_f_res_t_res_33386;
    float defunc_1_f_res_33388;
    
    if (cond_33381) {
        defunc_1_f_res_33388 = defunc_0_f_res_33380;
    } else {
        defunc_1_f_res_33388 = 0.0F;
    }
    ((__local bool *) red_arr_mem_45336)[gtid_33062] = x_33387;
    ((__local int32_t *) red_arr_mem_45338)[gtid_33062] = index_primexp_41180;
    ((__local float *) red_arr_mem_45340)[gtid_33062] = defunc_1_f_res_33388;
    ((__local float *) mem_44073)[gtid_33062] = defunc_0_f_res_33380;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45342;
    int32_t skip_waves_45343;
    
    skip_waves_45343 = 1;
    
    bool x_33362;
    int32_t x_33363;
    float x_33364;
    bool x_33365;
    int32_t x_33366;
    float x_33367;
    
    offset_45342 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45320, sext_i64_i32(iota32_arg_28172))) {
            x_33362 = ((__local
                        bool *) red_arr_mem_45336)[sext_i32_i64(local_tid_45320 +
                                                   offset_45342)];
            x_33363 = ((__local
                        int32_t *) red_arr_mem_45338)[sext_i32_i64(local_tid_45320 +
                                                      offset_45342)];
            x_33364 = ((__local
                        float *) red_arr_mem_45340)[sext_i32_i64(local_tid_45320 +
                                                    offset_45342)];
        }
    }
    offset_45342 = 1;
    while (slt32(offset_45342, wave_sizze_45322)) {
        if (slt32(local_tid_45320 + offset_45342,
                  sext_i64_i32(iota32_arg_28172)) && ((local_tid_45320 -
                                                       squot32(local_tid_45320,
                                                               wave_sizze_45322) *
                                                       wave_sizze_45322) & (2 *
                                                                            offset_45342 -
                                                                            1)) ==
            0) {
            // read array element
            {
                x_33365 = ((volatile __local
                            bool *) red_arr_mem_45336)[sext_i32_i64(local_tid_45320 +
                                                       offset_45342)];
                x_33366 = ((volatile __local
                            int32_t *) red_arr_mem_45338)[sext_i32_i64(local_tid_45320 +
                                                          offset_45342)];
                x_33367 = ((volatile __local
                            float *) red_arr_mem_45340)[sext_i32_i64(local_tid_45320 +
                                                        offset_45342)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_33368;
                int32_t defunc_1_op_res_33369;
                
                if (x_33362) {
                    defunc_1_op_res_33368 = x_33362;
                    defunc_1_op_res_33369 = x_33363;
                } else {
                    bool x_33370 = x_33365 && x_33365;
                    bool x_33371 = !x_33365;
                    bool y_33372 = x_33362 && x_33371;
                    bool defunc_1_op_res_f_res_33373 = x_33370 || y_33372;
                    int32_t defunc_1_op_res_f_res_33374;
                    
                    if (x_33365) {
                        defunc_1_op_res_f_res_33374 = x_33366;
                    } else {
                        defunc_1_op_res_f_res_33374 = x_33363;
                    }
                    defunc_1_op_res_33368 = defunc_1_op_res_f_res_33373;
                    defunc_1_op_res_33369 = defunc_1_op_res_f_res_33374;
                }
                
                float defunc_1_op_res_33375 = x_33364 + x_33367;
                
                x_33362 = defunc_1_op_res_33368;
                x_33363 = defunc_1_op_res_33369;
                x_33364 = defunc_1_op_res_33375;
            }
            // write result of operation
            {
                ((volatile __local
                  bool *) red_arr_mem_45336)[sext_i32_i64(local_tid_45320)] =
                    x_33362;
                ((volatile __local
                  int32_t *) red_arr_mem_45338)[sext_i32_i64(local_tid_45320)] =
                    x_33363;
                ((volatile __local
                  float *) red_arr_mem_45340)[sext_i32_i64(local_tid_45320)] =
                    x_33364;
            }
        }
        offset_45342 *= 2;
    }
    while (slt32(skip_waves_45343, squot32(sext_i64_i32(iota32_arg_28172) +
                                           wave_sizze_45322 - 1,
                                           wave_sizze_45322))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45342 = skip_waves_45343 * wave_sizze_45322;
        if (slt32(local_tid_45320 + offset_45342,
                  sext_i64_i32(iota32_arg_28172)) && ((local_tid_45320 -
                                                       squot32(local_tid_45320,
                                                               wave_sizze_45322) *
                                                       wave_sizze_45322) == 0 &&
                                                      (squot32(local_tid_45320,
                                                               wave_sizze_45322) &
                                                       (2 * skip_waves_45343 -
                                                        1)) == 0)) {
            // read array element
            {
                x_33365 = ((__local
                            bool *) red_arr_mem_45336)[sext_i32_i64(local_tid_45320 +
                                                       offset_45342)];
                x_33366 = ((__local
                            int32_t *) red_arr_mem_45338)[sext_i32_i64(local_tid_45320 +
                                                          offset_45342)];
                x_33367 = ((__local
                            float *) red_arr_mem_45340)[sext_i32_i64(local_tid_45320 +
                                                        offset_45342)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_33368;
                int32_t defunc_1_op_res_33369;
                
                if (x_33362) {
                    defunc_1_op_res_33368 = x_33362;
                    defunc_1_op_res_33369 = x_33363;
                } else {
                    bool x_33370 = x_33365 && x_33365;
                    bool x_33371 = !x_33365;
                    bool y_33372 = x_33362 && x_33371;
                    bool defunc_1_op_res_f_res_33373 = x_33370 || y_33372;
                    int32_t defunc_1_op_res_f_res_33374;
                    
                    if (x_33365) {
                        defunc_1_op_res_f_res_33374 = x_33366;
                    } else {
                        defunc_1_op_res_f_res_33374 = x_33363;
                    }
                    defunc_1_op_res_33368 = defunc_1_op_res_f_res_33373;
                    defunc_1_op_res_33369 = defunc_1_op_res_f_res_33374;
                }
                
                float defunc_1_op_res_33375 = x_33364 + x_33367;
                
                x_33362 = defunc_1_op_res_33368;
                x_33363 = defunc_1_op_res_33369;
                x_33364 = defunc_1_op_res_33375;
            }
            // write result of operation
            {
                ((__local
                  bool *) red_arr_mem_45336)[sext_i32_i64(local_tid_45320)] =
                    x_33362;
                ((__local
                  int32_t *) red_arr_mem_45338)[sext_i32_i64(local_tid_45320)] =
                    x_33363;
                ((__local
                  float *) red_arr_mem_45340)[sext_i32_i64(local_tid_45320)] =
                    x_33364;
            }
        }
        skip_waves_45343 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    acc0_33358 = ((__local bool *) red_arr_mem_45336)[0];
    acc0_33359 = ((__local int32_t *) red_arr_mem_45338)[0];
    acc0_33360 = ((__local float *) red_arr_mem_45340)[0];
    
    bool x_33391 = acc0_33358 && acc0_33358;
    int32_t defunc_1_op_res_f_res_33395;
    
    if (acc0_33358) {
        defunc_1_op_res_f_res_33395 = acc0_33359;
    } else {
        defunc_1_op_res_f_res_33395 = -1;
    }
    
    bool cond_33402 = y_33325 == 0;
    float defunc_0_f_res_33403;
    
    if (cond_33402) {
        defunc_0_f_res_33403 = 0.0F;
    } else {
        float i32_res_33404 = sitofp_i32_f32(y_33325);
        float defunc_0_f_res_f_res_33405 = acc0_33360 / i32_res_33404;
        
        defunc_0_f_res_33403 = defunc_0_f_res_f_res_33405;
    }
    
    bool cond_33406 = !x_33391;
    int32_t fst_breakzq_33407;
    
    if (cond_33406) {
        fst_breakzq_33407 = -1;
    } else {
        bool cond_33408 = slt32(defunc_1_op_res_f_res_33395, y_33325);
        int32_t adjustValInds_res_33409;
        
        if (cond_33408) {
            int32_t i_33410 = add32(x_33319, defunc_1_op_res_f_res_33395);
            int64_t i_33411 = sext_i32_i64(i_33410);
            int32_t x_33412 = ((__global
                                int32_t *) defunc_4_map_res_mem_43920)[gtid_33057 *
                                                                       N_27772 +
                                                                       i_33411];
            int32_t adjustValInds_res_t_res_33413 = sub32(x_33412, n_27777);
            
            adjustValInds_res_33409 = adjustValInds_res_t_res_33413;
        } else {
            adjustValInds_res_33409 = -1;
        }
        fst_breakzq_33407 = adjustValInds_res_33409;
    }
    
    bool cond_33414 = sle32(x_33319, 5);
    bool cond_f_res_33415 = sle32(y_33325, 5);
    bool x_33416 = !cond_33414;
    bool y_33417 = cond_f_res_33415 && x_33416;
    bool cond_33418 = cond_33414 || y_33417;
    int32_t fst_breakzq_33419;
    
    if (cond_33418) {
        fst_breakzq_33419 = -2;
    } else {
        fst_breakzq_33419 = fst_breakzq_33407;
    }
    
    __local char *mem_44075;
    
    mem_44075 = (__local char *) mem_44075_backing_5;
    ((__local float *) mem_44075)[sext_i32_i64(local_tid_45320)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_33064 = sext_i32_i64(ltid_pre_45324);
    int32_t phys_tid_33065 = local_tid_45320;
    int32_t index_primexp_41183 = sext_i64_i32(write_i_33064);
    float write_value_33423 = ((__local float *) mem_44073)[write_i_33064];
    bool cond_33424 = slt32(index_primexp_41183, y_33325);
    int32_t defunc_0_f_res_33425;
    
    if (cond_33424) {
        int32_t i_33426 = add32(x_33319, index_primexp_41183);
        int64_t i_33427 = sext_i32_i64(i_33426);
        int32_t x_33428 = ((__global
                            int32_t *) defunc_4_map_res_mem_43920)[gtid_33057 *
                                                                   N_27772 +
                                                                   i_33427];
        int32_t defunc_0_f_res_t_res_33429 = sub32(x_33428, n_27777);
        
        defunc_0_f_res_33425 = defunc_0_f_res_t_res_33429;
    } else {
        defunc_0_f_res_33425 = -1;
    }
    
    int64_t defunc_0_f_res_33430 = sext_i32_i64(defunc_0_f_res_33425);
    
    if (sle64(0, defunc_0_f_res_33430) && slt64(defunc_0_f_res_33430,
                                                iota32_arg_28172)) {
        ((__local float *) mem_44075)[defunc_0_f_res_33430] = write_value_33423;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global float *) mem_44079)[gtid_33057 * iota32_arg_28172 +
                                   sext_i32_i64(local_tid_45320)] = ((__local
                                                                      float *) mem_44075)[sext_i32_i64(local_tid_45320)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global float *) mem_44082)[gtid_33057 * iota32_arg_28172 +
                                   sext_i32_i64(local_tid_45320)] = ((__local
                                                                      float *) mem_44073)[sext_i32_i64(local_tid_45320)];
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_45320 == 0) {
        ((__global int32_t *) mem_44084)[gtid_33057] = fst_breakzq_33419;
    }
    if (local_tid_45320 == 0) {
        ((__global float *) mem_44086)[gtid_33057] = defunc_0_f_res_33403;
    }
    
  error_4:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_41294(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43222_backing_aligned_0,
                                                    int64_t m_27773,
                                                    int32_t n_27777,
                                                    int64_t i32_res_27792,
                                                    int64_t Ty_41282,
                                                    int64_t Tx_41283,
                                                    int64_t gridDim_x_41284,
                                                    int64_t gridDim_y_41285,
                                                    int64_t group_sizze_41289,
                                                    int64_t count_shmem_41290,
                                                    __global
                                                    unsigned char *mem_43135,
                                                    __global
                                                    unsigned char *mem_43139,
                                                    __global
                                                    unsigned char *mem_43210,
                                                    __global
                                                    unsigned char *mem_43270)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43222_backing_0 = (__local volatile
                                                           char *) mem_43222_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44416;
    int32_t local_tid_44417;
    int64_t group_sizze_44420;
    int32_t wave_sizze_44419;
    int32_t group_tid_44418;
    
    global_tid_44416 = get_global_id(0);
    local_tid_44417 = get_local_id(0);
    group_sizze_44420 = get_local_size(0);
    wave_sizze_44419 = LOCKSTEP_WIDTH;
    group_tid_44418 = get_group_id(0);
    
    int32_t gid_flat_41294;
    
    gid_flat_41294 = group_tid_44418;
    
    int32_t ltid_pre_44421;
    
    ltid_pre_44421 = squot32(local_tid_44417, sext_i64_i32(Ty_41282) *
                             sext_i64_i32(Tx_41283));
    
    int32_t ltid_pre_44422;
    
    ltid_pre_44422 = squot32(local_tid_44417 - squot32(local_tid_44417,
                                                       sext_i64_i32(Ty_41282) *
                                                       sext_i64_i32(Tx_41283)) *
                             (sext_i64_i32(Ty_41282) * sext_i64_i32(Tx_41283)),
                             sext_i64_i32(Tx_41283));
    
    int32_t ltid_pre_44423;
    
    ltid_pre_44423 = local_tid_44417 - squot32(local_tid_44417,
                                               sext_i64_i32(Ty_41282) *
                                               sext_i64_i32(Tx_41283)) *
        (sext_i64_i32(Ty_41282) * sext_i64_i32(Tx_41283)) -
        squot32(local_tid_44417 - squot32(local_tid_44417,
                                          sext_i64_i32(Ty_41282) *
                                          sext_i64_i32(Tx_41283)) *
                (sext_i64_i32(Ty_41282) * sext_i64_i32(Tx_41283)),
                sext_i64_i32(Tx_41283)) * sext_i64_i32(Tx_41283);
    
    int32_t ltid_pre_44424;
    
    ltid_pre_44424 = squot32(local_tid_44417, sext_i64_i32(Tx_41283));
    
    int32_t ltid_pre_44425;
    
    ltid_pre_44425 = local_tid_44417 - squot32(local_tid_44417,
                                               sext_i64_i32(Tx_41283)) *
        sext_i64_i32(Tx_41283);
    
    int32_t ltid_pre_44426;
    
    ltid_pre_44426 = local_tid_44417;
    
    int64_t gid_zz_41293;
    
    gid_zz_41293 = squot64(sext_i32_i64(group_tid_44418), gridDim_y_41285 *
                           gridDim_x_41284);
    
    int64_t gid_y_41292;
    
    gid_y_41292 = squot64(sext_i32_i64(group_tid_44418) -
                          squot64(sext_i32_i64(group_tid_44418),
                                  gridDim_y_41285 * gridDim_x_41284) *
                          (gridDim_y_41285 * gridDim_x_41284), gridDim_x_41284);
    
    int64_t gid_x_41291;
    
    gid_x_41291 = sext_i32_i64(group_tid_44418) -
        squot64(sext_i32_i64(group_tid_44418), gridDim_y_41285 *
                gridDim_x_41284) * (gridDim_y_41285 * gridDim_x_41284) -
        squot64(sext_i32_i64(group_tid_44418) -
                squot64(sext_i32_i64(group_tid_44418), gridDim_y_41285 *
                        gridDim_x_41284) * (gridDim_y_41285 * gridDim_x_41284),
                gridDim_x_41284) * gridDim_x_41284;
    
    int64_t ii_41295;
    
    ii_41295 = 30 * gid_zz_41293;
    
    int64_t jj1_41296 = Ty_41282 * gid_y_41292;
    int64_t jj2_41297 = Tx_41283 * gid_x_41291;
    float mem_43220[30];
    int64_t ltid_y_41300 = sext_i32_i64(ltid_pre_44424);
    int64_t ltid_x_41298 = sext_i32_i64(ltid_pre_44425);
    int32_t ltid_flat_41299 = local_tid_44417;
    float mem_43214[30];
    
    for (int32_t i_43033 = 0; i_43033 < 30; i_43033++) {
        int64_t i_41308 = sext_i32_i64(i_43033);
        
        mem_43214[i_41308] = 0.0F;
    }
    for (int64_t i_44428 = 0; i_44428 < 30; i_44428++) {
        mem_43220[i_44428] = mem_43214[i_44428];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43222;
    
    mem_43222 = (__local char *) mem_43222_backing_0;
    
    float loop_mem_43252[30];
    float mem_param_43223[30];
    
    for (int32_t i_1 = 0; i_1 < 30; i_1++)
        mem_param_43223[i_1] = mem_43220[i_1];
    for (int32_t i_43035 = 0; i_43035 < n_27777; i_43035++) {
        int64_t i_41313 = sext_i32_i64(i_43035);
        
        for (int64_t i_41316 = 0; i_41316 < count_shmem_41290; i_41316++) {
            int64_t offs_41329 = group_sizze_41289 * i_41316;
            int64_t ltid_41319 = sext_i32_i64(ltid_pre_44426);
            int32_t ltid_flat_41318 = local_tid_44417;
            int64_t loc_ind_41330 = ltid_41319 + offs_41329;
            int64_t gtid_41331 = ii_41295 + loc_ind_41330;
            bool cond_41332 = slt64(gtid_41331, m_27773);
            float y_elem_41333;
            
            if (cond_41332) {
                float Y_elem_41335 = ((__global float *) mem_43210)[i_41313 *
                                                                    m_27773 +
                                                                    gtid_41331];
                
                y_elem_41333 = Y_elem_41335;
            } else {
                y_elem_41333 = 0.0F;
            }
            
            bool cond_41337 = slt64(loc_ind_41330, 30);
            int64_t y_loc_ind_41338;
            
            if (cond_41337) {
                y_loc_ind_41338 = loc_ind_41330;
            } else {
                y_loc_ind_41338 = -1;
            }
            if (sle64(0, y_loc_ind_41338) && slt64(y_loc_ind_41338, 30)) {
                ((__local float *) mem_43222)[y_loc_ind_41338] = y_elem_41333;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
        
        float mem_43251[30];
        int64_t ltid_y_41344 = sext_i32_i64(ltid_pre_44424);
        int64_t ltid_x_41342 = sext_i32_i64(ltid_pre_44425);
        int32_t ltid_flat_41343 = local_tid_44417;
        int64_t gtid_41371 = jj1_41296 + ltid_y_41344;
        int64_t gtid_41372 = jj2_41297 + ltid_x_41342;
        bool binop_x_41374 = slt64(gtid_41371, i32_res_27792);
        bool binop_y_41375 = slt64(gtid_41372, i32_res_27792);
        bool cond_41376 = binop_x_41374 && binop_y_41375;
        float mem_44124[30];
        
        if (cond_41376) {
            float x_41379 = ((__global float *) mem_43135)[i_41313 *
                                                           i32_res_27792 +
                                                           gtid_41371];
            float x_41381 = ((__global float *) mem_43139)[i_41313 *
                                                           i32_res_27792 +
                                                           gtid_41372];
            
            for (int32_t i_43034 = 0; i_43034 < 30; i_43034++) {
                int64_t i_41383 = sext_i32_i64(i_43034);
                int64_t gtid_41385 = ii_41295 + i_41383;
                bool cond_41386 = slt64(gtid_41385, m_27773);
                
                if (cond_41386) {
                    float inp_reg_var2zz_41388 = ((__local
                                                   float *) mem_43222)[i_41383];
                    float res_reg_var2zz_41389 = mem_param_43223[i_41383];
                    float x_41393 = x_41379 * x_41381;
                    bool isnan_res_41394;
                    
                    isnan_res_41394 = futrts_isnan32(inp_reg_var2zz_41388);
                    
                    float y_41395;
                    
                    if (isnan_res_41394) {
                        y_41395 = 0.0F;
                    } else {
                        y_41395 = 1.0F;
                    }
                    
                    float defunc_2_f_res_41396 = x_41393 * y_41395;
                    float defunc_1_op_res_41400 = res_reg_var2zz_41389 +
                          defunc_2_f_res_41396;
                    
                    mem_param_43223[i_41383] = defunc_1_op_res_41400;
                }
            }
            for (int64_t i_44434 = 0; i_44434 < 30; i_44434++) {
                mem_44124[i_44434] = mem_param_43223[i_44434];
            }
        } else {
            for (int64_t i_44435 = 0; i_44435 < 30; i_44435++) {
                mem_44124[i_44435] = mem_param_43223[i_44435];
            }
        }
        for (int64_t i_44436 = 0; i_44436 < 30; i_44436++) {
            mem_43251[i_44436] = mem_44124[i_44436];
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44429[30];
        
        for (int32_t i_2 = 0; i_2 < 30; i_2++)
            mem_param_tmp_44429[i_2] = mem_43251[i_2];
        for (int32_t i_3 = 0; i_3 < 30; i_3++)
            mem_param_43223[i_3] = mem_param_tmp_44429[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 30; i_4++)
        loop_mem_43252[i_4] = mem_param_43223[i_4];
    
    float mem_43266[30 * 1 * 1];
    int64_t ltid_zz_41409 = sext_i32_i64(ltid_pre_44421);
    int64_t ltid_y_41408 = sext_i32_i64(ltid_pre_44422);
    int64_t ltid_x_41406 = sext_i32_i64(ltid_pre_44423);
    int32_t ltid_flat_41407 = local_tid_44417;
    float mem_43260[30 * 1 * 1];
    
    for (int32_t i_43037 = 0; i_43037 < 30; i_43037++) {
        int64_t i_41418 = sext_i32_i64(i_43037);
        
        for (int64_t i_44438 = 0; i_44438 < 1; i_44438++) {
            mem_43260[i_41418 + i_44438] = loop_mem_43252[i_41418 + i_44438];
        }
    }
    for (int64_t i_44439 = 0; i_44439 < 30; i_44439++) {
        for (int64_t i_44440 = 0; i_44440 < 1; i_44440++) {
            for (int64_t i_44441 = 0; i_44441 < 1; i_44441++) {
                mem_43266[i_44439 + i_44440 + i_44441] = mem_43260[i_44439 +
                                                                   i_44440 +
                                                                   i_44441];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t reg_tile_i_44442 = squot64(sext_i32_i64(local_tid_44417), Ty_41282 *
                                       Tx_41283);
    int64_t reg_tile_i_44443 = squot64(sext_i32_i64(local_tid_44417) -
                                       squot64(sext_i32_i64(local_tid_44417),
                                               Ty_41282 * Tx_41283) *
                                       (Ty_41282 * Tx_41283), Tx_41283);
    int64_t reg_tile_i_44444 = sext_i32_i64(local_tid_44417) -
            squot64(sext_i32_i64(local_tid_44417), Ty_41282 * Tx_41283) *
            (Ty_41282 * Tx_41283) - squot64(sext_i32_i64(local_tid_44417) -
                                            squot64(sext_i32_i64(local_tid_44417),
                                                    Ty_41282 * Tx_41283) *
                                            (Ty_41282 * Tx_41283), Tx_41283) *
            Tx_41283;
    int64_t tile_dim_start_44445 = 30 * (gid_zz_41293 + reg_tile_i_44442);
    int64_t tile_dim_start_44446 = Ty_41282 * gid_y_41292 + reg_tile_i_44443;
    int64_t tile_dim_start_44447 = Tx_41283 * gid_x_41291 + reg_tile_i_44444;
    
    for (int64_t nest_i_44448 = 0; nest_i_44448 < 30; nest_i_44448++) {
        for (int64_t nest_i_44449 = 0; nest_i_44449 < 1; nest_i_44449++) {
            for (int64_t nest_i_44450 = 0; nest_i_44450 < 1; nest_i_44450++) {
                if ((slt64(tile_dim_start_44445 + nest_i_44448, m_27773) &&
                     slt64(tile_dim_start_44446 + nest_i_44449,
                           i32_res_27792)) && slt64(tile_dim_start_44447 +
                                                    nest_i_44450,
                                                    i32_res_27792)) {
                    ((__global float *) mem_43270)[(tile_dim_start_44445 +
                                                    nest_i_44448) *
                                                   (i32_res_27792 *
                                                    i32_res_27792) +
                                                   (tile_dim_start_44446 +
                                                    nest_i_44449) *
                                                   i32_res_27792 +
                                                   (tile_dim_start_44447 +
                                                    nest_i_44450)] =
                        mem_43266[nest_i_44448 + nest_i_44449 + nest_i_44450];
                }
            }
        }
    }
    
  error_4:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_41447(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43409_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43407_backing_aligned_1,
                                                    int64_t m_27773,
                                                    int64_t N_27774,
                                                    int64_t i32_res_27786,
                                                    int64_t i32_res_27792,
                                                    int64_t gridDim_x_41441,
                                                    int64_t full_tiles_41472,
                                                    int64_t kk_41679, __global
                                                    unsigned char *images_mem_43123,
                                                    __global
                                                    unsigned char *mem_43135,
                                                    __global
                                                    unsigned char *mem_43581)
{
    #define Ty_41428 (mainDetailedziTy_41425)
    #define Ry_41429 (mainDetailedziRy_41427)
    #define Tx_41430 (mainDetailedziTx_41424)
    #define Rx_41431 (mainDetailedziRx_41426)
    #define Tk_41432 (mainDetailedziTk_41423)
    #define tk_div_tx_41433 (sdiv_up64(mainDetailedziTk_41423, mainDetailedziTx_41424))
    #define tk_div_ty_41434 (sdiv_up64(mainDetailedziTk_41423, mainDetailedziTy_41425))
    #define TxRx_41435 (mainDetailedziTx_41424 * mainDetailedziRx_41426)
    #define TyRy_41436 (mainDetailedziTy_41425 * mainDetailedziRy_41427)
    #define a_loc_szz_41438 (mainDetailedziTk_41423 * (mainDetailedziTy_41425 * mainDetailedziRy_41427))
    #define b_loc_szz_41440 (mainDetailedziRx_41426 * (mainDetailedziTx_41424 * mainDetailedziTk_41423))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43409_backing_1 = (__local volatile
                                                           char *) mem_43409_backing_aligned_0;
    __local volatile char *restrict mem_43407_backing_0 = (__local volatile
                                                           char *) mem_43407_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44590;
    int32_t local_tid_44591;
    int64_t group_sizze_44594;
    int32_t wave_sizze_44593;
    int32_t group_tid_44592;
    
    global_tid_44590 = get_global_id(0);
    local_tid_44591 = get_local_id(0);
    group_sizze_44594 = get_local_size(0);
    wave_sizze_44593 = LOCKSTEP_WIDTH;
    group_tid_44592 = get_group_id(0);
    
    int32_t gid_flat_41447;
    
    gid_flat_41447 = group_tid_44592;
    
    int32_t ltid_pre_44595;
    
    ltid_pre_44595 = squot32(local_tid_44591, sext_i64_i32(Tx_41430));
    
    int32_t ltid_pre_44596;
    
    ltid_pre_44596 = local_tid_44591 - squot32(local_tid_44591,
                                               sext_i64_i32(Tx_41430)) *
        sext_i64_i32(Tx_41430);
    
    int64_t gid_y_41446;
    
    gid_y_41446 = squot64(sext_i32_i64(group_tid_44592), gridDim_x_41441);
    
    int64_t gid_x_41445;
    
    gid_x_41445 = sext_i32_i64(group_tid_44592) -
        squot64(sext_i32_i64(group_tid_44592), gridDim_x_41441) *
        gridDim_x_41441;
    
    int64_t iii_41448;
    
    iii_41448 = TyRy_41436 * gid_y_41446;
    
    int64_t jjj_41449 = TxRx_41435 * gid_x_41445;
    float mem_43405[Ry_41429 * Rx_41431];
    int64_t ltid_y_41452 = sext_i32_i64(ltid_pre_44595);
    int64_t ltid_x_41450 = sext_i32_i64(ltid_pre_44596);
    int32_t ltid_flat_41451 = local_tid_44591;
    float mem_43396[Ry_41429 * Rx_41431];
    
    for (int64_t i_41463 = 0; i_41463 < Ry_41429; i_41463++) {
        for (int64_t i_41466 = 0; i_41466 < Rx_41431; i_41466++) {
            mem_43396[i_41463 * Rx_41431 + i_41466] = 0.0F;
        }
    }
    for (int64_t i_44599 = 0; i_44599 < Ry_41429; i_44599++) {
        for (int64_t i_44600 = 0; i_44600 < Rx_41431; i_44600++) {
            mem_43405[i_44599 * Rx_41431 + i_44600] = mem_43396[i_44599 *
                                                                Rx_41431 +
                                                                i_44600];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43407;
    
    mem_43407 = (__local char *) mem_43407_backing_0;
    
    __local char *mem_43409;
    
    mem_43409 = (__local char *) mem_43409_backing_1;
    
    float mem_43480[Ry_41429];
    float mem_43484[Rx_41431];
    float loop_mem_43496[Ry_41429 * Rx_41431];
    float mem_param_43410[Ry_41429 * Rx_41431];
    
    for (int32_t i_2 = 0; i_2 < Ry_41429 * Rx_41431; i_2++)
        mem_param_43410[i_2] = mem_43405[i_2];
    for (int64_t i_41473 = 0; i_41473 < full_tiles_41472; i_41473++) {
        int64_t kk_41477 = Tk_41432 * i_41473;
        
        for (int64_t i_41478 = 0; i_41478 < Ry_41429; i_41478++) {
            int64_t binop_y_41501 = Ty_41428 * i_41478;
            
            for (int64_t i_41480 = 0; i_41480 < tk_div_tx_41433; i_41480++) {
                int64_t binop_y_41499 = Tx_41430 * i_41480;
                int64_t ltid_x_41482 = sext_i32_i64(ltid_pre_44595);
                int64_t ltid_y_41483 = sext_i32_i64(ltid_pre_44596);
                int32_t ltid_flat_41484 = local_tid_44591;
                int64_t k_41500 = ltid_y_41483 + binop_y_41499;
                int64_t i_41502 = ltid_x_41482 + binop_y_41501;
                int64_t gtid_41503 = iii_41448 + i_41502;
                int64_t A_col_idx_41504 = kk_41477 + k_41500;
                bool cond_41505 = slt64(gtid_41503, m_27773);
                float A_elem_41506;
                
                if (cond_41505) {
                    float A_elem_41508 = ((__global
                                           float *) images_mem_43123)[gtid_41503 *
                                                                      N_27774 +
                                                                      A_col_idx_41504];
                    
                    A_elem_41506 = A_elem_41508;
                } else {
                    A_elem_41506 = 0.0F;
                }
                
                bool cond_41510 = slt64(k_41500, Tk_41432);
                int64_t a_loc_ind_41511;
                
                if (cond_41510) {
                    int64_t binop_y_41512 = Tk_41432 * i_41502;
                    int64_t loc_fi_41513 = k_41500 + binop_y_41512;
                    
                    a_loc_ind_41511 = loc_fi_41513;
                } else {
                    a_loc_ind_41511 = -1;
                }
                if (sle64(0, a_loc_ind_41511) && slt64(a_loc_ind_41511,
                                                       a_loc_szz_41438)) {
                    ((__local float *) mem_43407)[a_loc_ind_41511] =
                        A_elem_41506;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_41518 = 0; i_41518 < tk_div_ty_41434; i_41518++) {
            int64_t binop_y_41539 = Ty_41428 * i_41518;
            
            for (int64_t i_41520 = 0; i_41520 < Rx_41431; i_41520++) {
                int64_t binop_y_41541 = Tx_41430 * i_41520;
                int64_t ltid_x_41522 = sext_i32_i64(ltid_pre_44595);
                int64_t ltid_y_41523 = sext_i32_i64(ltid_pre_44596);
                int32_t ltid_flat_41524 = local_tid_44591;
                int64_t k_41540 = ltid_x_41522 + binop_y_41539;
                int64_t j_41542 = ltid_y_41523 + binop_y_41541;
                int64_t gtid_41543 = jjj_41449 + j_41542;
                int64_t B_row_idx_41544 = kk_41477 + k_41540;
                bool cond_41545 = slt64(gtid_41543, i32_res_27792);
                float B_elem_41546;
                
                if (cond_41545) {
                    float B_elem_41548 = ((__global
                                           float *) mem_43135)[B_row_idx_41544 *
                                                               i32_res_27792 +
                                                               gtid_41543];
                    
                    B_elem_41546 = B_elem_41548;
                } else {
                    B_elem_41546 = 0.0F;
                }
                
                bool cond_41550 = slt64(k_41540, Tk_41432);
                int64_t b_loc_ind_41551;
                
                if (cond_41550) {
                    int64_t binop_y_41552 = TxRx_41435 * k_41540;
                    int64_t loc_fi_41553 = j_41542 + binop_y_41552;
                    
                    b_loc_ind_41551 = loc_fi_41553;
                } else {
                    b_loc_ind_41551 = -1;
                }
                if (sle64(0, b_loc_ind_41551) && slt64(b_loc_ind_41551,
                                                       b_loc_szz_41440)) {
                    ((__local float *) mem_43409)[b_loc_ind_41551] =
                        B_elem_41546;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_43495[Ry_41429 * Rx_41431];
        float mem_param_43467[Ry_41429 * Rx_41431];
        
        for (int32_t i_3 = 0; i_3 < Ry_41429 * Rx_41431; i_3++)
            mem_param_43467[i_3] = mem_param_43410[i_3];
        for (int64_t i_41558 = 0; i_41558 < Tk_41432; i_41558++) {
            int64_t binop_y_41597 = TxRx_41435 * i_41558;
            int64_t ltid_y_41562 = sext_i32_i64(ltid_pre_44595);
            int64_t ltid_x_41560 = sext_i32_i64(ltid_pre_44596);
            int32_t ltid_flat_41561 = local_tid_44591;
            float mem_43470[Ry_41429];
            float mem_43472[Rx_41431];
            int64_t binop_x_41588 = Ry_41429 * ltid_y_41562;
            
            for (int64_t i_41586 = 0; i_41586 < Ry_41429; i_41586++) {
                int64_t binop_x_41589 = i_41586 + binop_x_41588;
                int64_t binop_y_41590 = Tk_41432 * binop_x_41589;
                int64_t a_loc_ind_41591 = i_41558 + binop_y_41590;
                
                for (int64_t i_44612 = 0; i_44612 < 1; i_44612++) {
                    mem_43470[i_41586 + i_44612] = ((__local
                                                     float *) mem_43407)[a_loc_ind_41591 +
                                                                         i_44612];
                }
            }
            
            int64_t binop_y_41599 = Rx_41431 * ltid_x_41560;
            
            for (int64_t i_41595 = 0; i_41595 < Rx_41431; i_41595++) {
                int64_t binop_x_41598 = i_41595 + binop_y_41597;
                int64_t b_loc_ind_41600 = binop_x_41598 + binop_y_41599;
                
                for (int64_t i_44614 = 0; i_44614 < 1; i_44614++) {
                    mem_43472[i_41595 + i_44614] = ((__local
                                                     float *) mem_43409)[b_loc_ind_41600 +
                                                                         i_44614];
                }
            }
            for (int64_t i_44615 = 0; i_44615 < Ry_41429; i_44615++) {
                mem_43480[i_44615] = mem_43470[i_44615];
            }
            for (int64_t i_44616 = 0; i_44616 < Rx_41431; i_44616++) {
                mem_43484[i_44616] = mem_43472[i_44616];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_43494[Ry_41429 * Rx_41431];
            int64_t ltid_y_41607 = sext_i32_i64(ltid_pre_44595);
            int64_t ltid_x_41605 = sext_i32_i64(ltid_pre_44596);
            int32_t ltid_flat_41606 = local_tid_44591;
            int64_t binop_y_41650 = Ry_41429 * ltid_y_41607;
            int64_t binop_y_41654 = Rx_41431 * ltid_x_41605;
            
            for (int64_t i_41644 = 0; i_41644 < Ry_41429; i_41644++) {
                int64_t binop_x_41649 = iii_41448 + i_41644;
                int64_t cmpop_x_41651 = binop_x_41649 + binop_y_41650;
                bool binop_x_41652 = slt64(cmpop_x_41651, m_27773);
                
                for (int64_t i_41647 = 0; i_41647 < Rx_41431; i_41647++) {
                    int64_t binop_x_41653 = jjj_41449 + i_41647;
                    int64_t cmpop_x_41655 = binop_x_41653 + binop_y_41654;
                    bool binop_y_41656 = slt64(cmpop_x_41655, i32_res_27792);
                    bool cond_41657 = binop_x_41652 && binop_y_41656;
                    
                    if (cond_41657) {
                        float a_41659 = mem_43480[i_41644];
                        float c_41661 = mem_param_43467[i_41644 * Rx_41431 +
                                                        i_41647];
                        bool isnan_res_41664;
                        
                        isnan_res_41664 = futrts_isnan32(a_41659);
                        
                        float defunc_1_f_res_41665;
                        
                        if (isnan_res_41664) {
                            defunc_1_f_res_41665 = 0.0F;
                        } else {
                            float b_41660 = mem_43484[i_41647];
                            float defunc_1_f_res_f_res_41666 = a_41659 *
                                  b_41660;
                            
                            defunc_1_f_res_41665 = defunc_1_f_res_f_res_41666;
                        }
                        
                        float defunc_1_op_res_41670 = c_41661 +
                              defunc_1_f_res_41665;
                        
                        mem_param_43467[i_41644 * Rx_41431 + i_41647] =
                            defunc_1_op_res_41670;
                    }
                }
            }
            for (int64_t i_44619 = 0; i_44619 < Ry_41429; i_44619++) {
                for (int64_t i_44620 = 0; i_44620 < Rx_41431; i_44620++) {
                    mem_43494[i_44619 * Rx_41431 + i_44620] =
                        mem_param_43467[i_44619 * Rx_41431 + i_44620];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44609[Ry_41429 * Rx_41431];
            
            for (int32_t i_4 = 0; i_4 < Ry_41429 * Rx_41431; i_4++)
                mem_param_tmp_44609[i_4] = mem_43494[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_41429 * Rx_41431; i_5++)
                mem_param_43467[i_5] = mem_param_tmp_44609[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_41429 * Rx_41431; i_6++)
            loop_mem_43495[i_6] = mem_param_43467[i_6];
        
        float mem_param_tmp_44601[Ry_41429 * Rx_41431];
        
        for (int32_t i_7 = 0; i_7 < Ry_41429 * Rx_41431; i_7++)
            mem_param_tmp_44601[i_7] = loop_mem_43495[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_41429 * Rx_41431; i_8++)
            mem_param_43410[i_8] = mem_param_tmp_44601[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_41429 * Rx_41431; i_9++)
        loop_mem_43496[i_9] = mem_param_43410[i_9];
    for (int64_t i_41680 = 0; i_41680 < Ry_41429; i_41680++) {
        int64_t binop_y_41705 = Ty_41428 * i_41680;
        
        for (int64_t i_41682 = 0; i_41682 < tk_div_tx_41433; i_41682++) {
            int64_t binop_y_41703 = Tx_41430 * i_41682;
            int64_t ltid_x_41684 = sext_i32_i64(ltid_pre_44595);
            int64_t ltid_y_41685 = sext_i32_i64(ltid_pre_44596);
            int32_t ltid_flat_41686 = local_tid_44591;
            int64_t k_41704 = ltid_y_41685 + binop_y_41703;
            int64_t i_41706 = ltid_x_41684 + binop_y_41705;
            int64_t gtid_41707 = iii_41448 + i_41706;
            int64_t A_col_idx_41708 = kk_41679 + k_41704;
            bool binop_x_41709 = slt64(gtid_41707, m_27773);
            bool binop_y_41710 = slt64(A_col_idx_41708, i32_res_27786);
            bool cond_41711 = binop_x_41709 && binop_y_41710;
            float A_elem_41712;
            
            if (cond_41711) {
                float A_elem_41714 = ((__global
                                       float *) images_mem_43123)[gtid_41707 *
                                                                  N_27774 +
                                                                  A_col_idx_41708];
                
                A_elem_41712 = A_elem_41714;
            } else {
                A_elem_41712 = 0.0F;
            }
            
            bool cond_41716 = slt64(k_41704, Tk_41432);
            int64_t a_loc_ind_41717;
            
            if (cond_41716) {
                int64_t binop_y_41718 = Tk_41432 * i_41706;
                int64_t loc_fi_41719 = k_41704 + binop_y_41718;
                
                a_loc_ind_41717 = loc_fi_41719;
            } else {
                a_loc_ind_41717 = -1;
            }
            if (sle64(0, a_loc_ind_41717) && slt64(a_loc_ind_41717,
                                                   a_loc_szz_41438)) {
                ((__local float *) mem_43407)[a_loc_ind_41717] = A_elem_41712;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_41724 = 0; i_41724 < tk_div_ty_41434; i_41724++) {
        int64_t binop_y_41747 = Ty_41428 * i_41724;
        
        for (int64_t i_41726 = 0; i_41726 < Rx_41431; i_41726++) {
            int64_t binop_y_41749 = Tx_41430 * i_41726;
            int64_t ltid_x_41728 = sext_i32_i64(ltid_pre_44595);
            int64_t ltid_y_41729 = sext_i32_i64(ltid_pre_44596);
            int32_t ltid_flat_41730 = local_tid_44591;
            int64_t k_41748 = ltid_x_41728 + binop_y_41747;
            int64_t j_41750 = ltid_y_41729 + binop_y_41749;
            int64_t gtid_41751 = jjj_41449 + j_41750;
            int64_t B_row_idx_41752 = kk_41679 + k_41748;
            bool binop_x_41753 = slt64(gtid_41751, i32_res_27792);
            bool binop_y_41754 = slt64(B_row_idx_41752, i32_res_27786);
            bool cond_41755 = binop_x_41753 && binop_y_41754;
            float B_elem_41756;
            
            if (cond_41755) {
                float B_elem_41758 = ((__global
                                       float *) mem_43135)[B_row_idx_41752 *
                                                           i32_res_27792 +
                                                           gtid_41751];
                
                B_elem_41756 = B_elem_41758;
            } else {
                B_elem_41756 = 0.0F;
            }
            
            bool cond_41760 = slt64(k_41748, Tk_41432);
            int64_t b_loc_ind_41761;
            
            if (cond_41760) {
                int64_t binop_y_41762 = TxRx_41435 * k_41748;
                int64_t loc_fi_41763 = j_41750 + binop_y_41762;
                
                b_loc_ind_41761 = loc_fi_41763;
            } else {
                b_loc_ind_41761 = -1;
            }
            if (sle64(0, b_loc_ind_41761) && slt64(b_loc_ind_41761,
                                                   b_loc_szz_41440)) {
                ((__local float *) mem_43409)[b_loc_ind_41761] = B_elem_41756;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_43562[Ry_41429];
    float mem_43566[Rx_41431];
    float mem_43576[Ry_41429 * Rx_41431];
    float loop_mem_43578[Ry_41429 * Rx_41431];
    float mem_param_43549[Ry_41429 * Rx_41431];
    
    for (int32_t i_10 = 0; i_10 < Ry_41429 * Rx_41431; i_10++)
        mem_param_43549[i_10] = loop_mem_43496[i_10];
    for (int64_t i_41768 = 0; i_41768 < Tk_41432; i_41768++) {
        int64_t cmpop_x_41770 = kk_41679 + i_41768;
        bool cond_41771 = slt64(cmpop_x_41770, i32_res_27786);
        float mem_44142[Ry_41429 * Rx_41431];
        
        if (cond_41771) {
            int64_t binop_y_41809 = TxRx_41435 * i_41768;
            int64_t bytes_43551 = 4 * Ry_41429;
            int64_t bytes_43553 = 4 * Rx_41431;
            int64_t ltid_y_41774 = sext_i32_i64(ltid_pre_44595);
            int64_t ltid_x_41772 = sext_i32_i64(ltid_pre_44596);
            int32_t ltid_flat_41773 = local_tid_44591;
            float mem_43552[Ry_41429];
            float mem_43554[Rx_41431];
            int64_t binop_x_41800 = Ry_41429 * ltid_y_41774;
            
            for (int64_t i_41798 = 0; i_41798 < Ry_41429; i_41798++) {
                int64_t binop_x_41801 = i_41798 + binop_x_41800;
                int64_t binop_y_41802 = Tk_41432 * binop_x_41801;
                int64_t a_loc_ind_41803 = i_41768 + binop_y_41802;
                
                for (int64_t i_44628 = 0; i_44628 < 1; i_44628++) {
                    mem_43552[i_41798 + i_44628] = ((__local
                                                     float *) mem_43407)[a_loc_ind_41803 +
                                                                         i_44628];
                }
            }
            
            int64_t binop_y_41811 = Rx_41431 * ltid_x_41772;
            
            for (int64_t i_41807 = 0; i_41807 < Rx_41431; i_41807++) {
                int64_t binop_x_41810 = i_41807 + binop_y_41809;
                int64_t b_loc_ind_41812 = binop_x_41810 + binop_y_41811;
                
                for (int64_t i_44630 = 0; i_44630 < 1; i_44630++) {
                    mem_43554[i_41807 + i_44630] = ((__local
                                                     float *) mem_43409)[b_loc_ind_41812 +
                                                                         i_44630];
                }
            }
            for (int64_t i_44631 = 0; i_44631 < Ry_41429; i_44631++) {
                mem_43562[i_44631] = mem_43552[i_44631];
            }
            for (int64_t i_44632 = 0; i_44632 < Rx_41431; i_44632++) {
                mem_43566[i_44632] = mem_43554[i_44632];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_41819 = sext_i32_i64(ltid_pre_44595);
            int64_t ltid_x_41817 = sext_i32_i64(ltid_pre_44596);
            int32_t ltid_flat_41818 = local_tid_44591;
            int64_t binop_y_41862 = Ry_41429 * ltid_y_41819;
            int64_t binop_y_41866 = Rx_41431 * ltid_x_41817;
            
            for (int64_t i_41856 = 0; i_41856 < Ry_41429; i_41856++) {
                int64_t binop_x_41861 = iii_41448 + i_41856;
                int64_t cmpop_x_41863 = binop_x_41861 + binop_y_41862;
                bool binop_x_41864 = slt64(cmpop_x_41863, m_27773);
                
                for (int64_t i_41859 = 0; i_41859 < Rx_41431; i_41859++) {
                    int64_t binop_x_41865 = jjj_41449 + i_41859;
                    int64_t cmpop_x_41867 = binop_x_41865 + binop_y_41866;
                    bool binop_y_41868 = slt64(cmpop_x_41867, i32_res_27792);
                    bool cond_41869 = binop_x_41864 && binop_y_41868;
                    
                    if (cond_41869) {
                        float a_41871 = mem_43562[i_41856];
                        float c_41873 = mem_param_43549[i_41856 * Rx_41431 +
                                                        i_41859];
                        bool isnan_res_41876;
                        
                        isnan_res_41876 = futrts_isnan32(a_41871);
                        
                        float defunc_1_f_res_41877;
                        
                        if (isnan_res_41876) {
                            defunc_1_f_res_41877 = 0.0F;
                        } else {
                            float b_41872 = mem_43566[i_41859];
                            float defunc_1_f_res_f_res_41878 = a_41871 *
                                  b_41872;
                            
                            defunc_1_f_res_41877 = defunc_1_f_res_f_res_41878;
                        }
                        
                        float defunc_1_op_res_41882 = c_41873 +
                              defunc_1_f_res_41877;
                        
                        mem_param_43549[i_41856 * Rx_41431 + i_41859] =
                            defunc_1_op_res_41882;
                    }
                }
            }
            for (int64_t i_44635 = 0; i_44635 < Ry_41429; i_44635++) {
                for (int64_t i_44636 = 0; i_44636 < Rx_41431; i_44636++) {
                    mem_43576[i_44635 * Rx_41431 + i_44636] =
                        mem_param_43549[i_44635 * Rx_41431 + i_44636];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44637 = 0; i_44637 < Ry_41429; i_44637++) {
                for (int64_t i_44638 = 0; i_44638 < Rx_41431; i_44638++) {
                    mem_44142[i_44637 * Rx_41431 + i_44638] =
                        mem_43576[i_44637 * Rx_41431 + i_44638];
                }
            }
        } else {
            for (int64_t i_44639 = 0; i_44639 < Ry_41429; i_44639++) {
                for (int64_t i_44640 = 0; i_44640 < Rx_41431; i_44640++) {
                    mem_44142[i_44639 * Rx_41431 + i_44640] =
                        mem_param_43549[i_44639 * Rx_41431 + i_44640];
                }
            }
        }
        
        float mem_param_tmp_44625[Ry_41429 * Rx_41431];
        
        for (int32_t i_11 = 0; i_11 < Ry_41429 * Rx_41431; i_11++)
            mem_param_tmp_44625[i_11] = mem_44142[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_41429 * Rx_41431; i_12++)
            mem_param_43549[i_12] = mem_param_tmp_44625[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_41429 * Rx_41431; i_13++)
        loop_mem_43578[i_13] = mem_param_43549[i_13];
    
    int64_t reg_tile_i_44641 = squot64(sext_i32_i64(local_tid_44591), Tx_41430);
    int64_t reg_tile_i_44642 = sext_i32_i64(local_tid_44591) -
            squot64(sext_i32_i64(local_tid_44591), Tx_41430) * Tx_41430;
    int64_t tile_dim_start_44643 = Ry_41429 * (Ty_41428 * gid_y_41446 +
                                               reg_tile_i_44641);
    int64_t tile_dim_start_44644 = Rx_41431 * (Tx_41430 * gid_x_41445 +
                                               reg_tile_i_44642);
    
    for (int64_t nest_i_44645 = 0; nest_i_44645 < Ry_41429; nest_i_44645++) {
        for (int64_t nest_i_44646 = 0; nest_i_44646 < Rx_41431;
             nest_i_44646++) {
            if (slt64(tile_dim_start_44643 + nest_i_44645, m_27773) &&
                slt64(tile_dim_start_44644 + nest_i_44646, i32_res_27792)) {
                ((__global float *) mem_43581)[(tile_dim_start_44643 +
                                                nest_i_44645) * i32_res_27792 +
                                               (tile_dim_start_44644 +
                                                nest_i_44646)] =
                    loop_mem_43578[nest_i_44645 * Rx_41431 + nest_i_44646];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_41428
    #undef Ry_41429
    #undef Tx_41430
    #undef Rx_41431
    #undef Tk_41432
    #undef tk_div_tx_41433
    #undef tk_div_ty_41434
    #undef TxRx_41435
    #undef TyRy_41436
    #undef a_loc_szz_41438
    #undef b_loc_szz_41440
}
__kernel void mainDetailedzisegmap_intragroup_41896(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43639_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43630_backing_aligned_1,
                                                    int64_t m_27773,
                                                    int64_t i32_res_27792,
                                                    int64_t num_groups_y_41894,
                                                    int64_t num_whole_tiles_41912,
                                                    int64_t residual_input_42039,
                                                    unsigned char cond_42040,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43591,
                                                    __global
                                                    unsigned char *mem_43620,
                                                    __global
                                                    unsigned char *mem_43647)
{
    #define tile_sizze_41891 (mainDetailedzitile_sizze_41890)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43639_backing_5 = (__local volatile
                                                           char *) mem_43639_backing_aligned_0;
    __local volatile char *restrict mem_43630_backing_0 = (__local volatile
                                                           char *) mem_43630_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44722;
    int32_t local_tid_44723;
    int64_t group_sizze_44726;
    int32_t wave_sizze_44725;
    int32_t group_tid_44724;
    
    global_tid_44722 = get_global_id(0);
    local_tid_44723 = get_local_id(0);
    group_sizze_44726 = get_local_size(0);
    wave_sizze_44725 = LOCKSTEP_WIDTH;
    group_tid_44724 = get_group_id(0);
    
    int32_t gid_flat_41896;
    
    gid_flat_41896 = group_tid_44724;
    
    int32_t ltid_pre_44727;
    
    ltid_pre_44727 = squot32(local_tid_44723, sext_i64_i32(tile_sizze_41891));
    
    int32_t ltid_pre_44728;
    
    ltid_pre_44728 = local_tid_44723 - squot32(local_tid_44723,
                                               sext_i64_i32(tile_sizze_41891)) *
        sext_i64_i32(tile_sizze_41891);
    
    int64_t gid_x_41888;
    
    gid_x_41888 = squot64(sext_i32_i64(group_tid_44724), num_groups_y_41894);
    
    int64_t gid_y_41889;
    
    gid_y_41889 = sext_i32_i64(group_tid_44724) -
        squot64(sext_i32_i64(group_tid_44724), num_groups_y_41894) *
        num_groups_y_41894;
    
    float mem_43625[1];
    int64_t ltid_x_41913 = sext_i32_i64(ltid_pre_44727);
    int64_t ltid_y_41914 = sext_i32_i64(ltid_pre_44728);
    int32_t ltid_flat_41915 = local_tid_44723;
    
    if (slt64(ltid_x_41913, tile_sizze_41891) && slt64(ltid_y_41914,
                                                       tile_sizze_41891)) {
        mem_43625[0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_41998 = gid_x_41888 * tile_sizze_41891;
    int64_t binop_x_42013 = gid_y_41889 * tile_sizze_41891;
    __local char *mem_43630;
    
    mem_43630 = (__local char *) mem_43630_backing_0;
    
    float accs_mem_43635[1];
    float mem_param_43626[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43626[i_1] = mem_43625[i_1];
    for (int64_t tile_id_41924 = 0; tile_id_41924 < num_whole_tiles_41912;
         tile_id_41924++) {
        int64_t binop_x_41996 = tile_sizze_41891 * tile_id_41924;
        int64_t ltid_x_41925 = sext_i32_i64(ltid_pre_44727);
        int64_t ltid_y_41926 = sext_i32_i64(ltid_pre_44728);
        int32_t ltid_flat_41927 = local_tid_44723;
        int64_t j_41997 = ltid_y_41926 + binop_x_41996;
        int64_t gtid_41999 = ltid_x_41925 + binop_x_41998;
        bool binop_x_42004 = slt64(j_41997, i32_res_27792);
        bool binop_y_42005 = slt64(gtid_41999, m_27773);
        bool cond_42006 = binop_x_42004 && binop_y_42005;
        float pre_42007;
        
        if (cond_42006) {
            float x_42008 = ((__global
                              float *) defunc_3_map_res_mem_43591)[gtid_41999 *
                                                                   i32_res_27792 +
                                                                   j_41997];
            
            pre_42007 = x_42008;
        } else {
            pre_42007 = 0.0F;
        }
        ((__local float *) mem_43630)[ltid_x_41925 * tile_sizze_41891 +
                                      ltid_y_41926] = pre_42007;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43634[1];
        int64_t ltid_x_41957 = sext_i32_i64(ltid_pre_44727);
        int64_t ltid_y_41958 = sext_i32_i64(ltid_pre_44728);
        int32_t ltid_flat_41959 = local_tid_44723;
        int64_t gtid_42012 = ltid_x_41957 + binop_x_41998;
        int64_t gtid_42014 = ltid_y_41958 + binop_x_42013;
        float acc_42017 = mem_param_43626[0];
        bool binop_x_42021 = slt64(gtid_42012, m_27773);
        bool binop_y_42022 = slt64(gtid_42014, i32_res_27792);
        bool cond_42023 = binop_x_42021 && binop_y_42022;
        float acc_42024;
        
        if (cond_42023) {
            float x_42025;
            float redout_43078 = acc_42017;
            
            for (int64_t i_43079 = 0; i_43079 < tile_sizze_41891; i_43079++) {
                float x_42029 = ((__local float *) mem_43630)[ltid_x_41957 *
                                                              tile_sizze_41891 +
                                                              i_43079];
                int64_t slice_43111 = binop_x_41996 + i_43079;
                float x_42030 = ((__global float *) mem_43620)[slice_43111 *
                                                               (i32_res_27792 *
                                                                m_27773) +
                                                               gtid_42012 *
                                                               i32_res_27792 +
                                                               gtid_42014];
                float defunc_1_f_res_42031 = x_42029 * x_42030;
                float defunc_1_op_res_42028 = defunc_1_f_res_42031 +
                      redout_43078;
                float redout_tmp_44731 = defunc_1_op_res_42028;
                
                redout_43078 = redout_tmp_44731;
            }
            x_42025 = redout_43078;
            acc_42024 = x_42025;
        } else {
            acc_42024 = acc_42017;
        }
        mem_43634[0] = acc_42024;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44729[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44729[i_2] = mem_43634[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43626[i_3] = mem_param_tmp_44729[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43635[i_4] = mem_param_43626[i_4];
    
    __local char *mem_43639;
    
    mem_43639 = (__local char *) mem_43639_backing_5;
    
    float mem_43643[1];
    float mem_44156[1];
    
    if (cond_42040) {
        mem_44156[0] = accs_mem_43635[0];
    } else {
        int64_t binop_x_42113 = tile_sizze_41891 * num_whole_tiles_41912;
        int64_t ltid_x_42041 = sext_i32_i64(ltid_pre_44727);
        int64_t ltid_y_42042 = sext_i32_i64(ltid_pre_44728);
        int32_t ltid_flat_42043 = local_tid_44723;
        int64_t j_42114 = ltid_y_42042 + binop_x_42113;
        int64_t gtid_42116 = binop_x_41998 + ltid_x_42041;
        bool binop_x_42121 = slt64(j_42114, i32_res_27792);
        bool binop_y_42122 = slt64(gtid_42116, m_27773);
        bool cond_42123 = binop_x_42121 && binop_y_42122;
        float pre_42124;
        
        if (cond_42123) {
            float x_42125 = ((__global
                              float *) defunc_3_map_res_mem_43591)[gtid_42116 *
                                                                   i32_res_27792 +
                                                                   j_42114];
            
            pre_42124 = x_42125;
        } else {
            pre_42124 = 0.0F;
        }
        ((__local float *) mem_43639)[ltid_x_42041 * tile_sizze_41891 +
                                      ltid_y_42042] = pre_42124;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_x_42074 = sext_i32_i64(ltid_pre_44727);
        int64_t ltid_y_42075 = sext_i32_i64(ltid_pre_44728);
        int32_t ltid_flat_42076 = local_tid_44723;
        int64_t gtid_42130 = binop_x_41998 + ltid_x_42074;
        int64_t gtid_42132 = binop_x_42013 + ltid_y_42075;
        float acc_42135 = accs_mem_43635[0];
        bool binop_x_42139 = slt64(gtid_42130, m_27773);
        bool binop_y_42140 = slt64(gtid_42132, i32_res_27792);
        bool cond_42141 = binop_x_42139 && binop_y_42140;
        float acc_42142;
        
        if (cond_42141) {
            float x_42143;
            float redout_43080 = acc_42135;
            
            for (int64_t i_43081 = 0; i_43081 < residual_input_42039;
                 i_43081++) {
                float x_42147 = ((__local float *) mem_43639)[ltid_x_42074 *
                                                              tile_sizze_41891 +
                                                              i_43081];
                int64_t slice_43112 = binop_x_42113 + i_43081;
                float x_42148 = ((__global float *) mem_43620)[slice_43112 *
                                                               (i32_res_27792 *
                                                                m_27773) +
                                                               gtid_42130 *
                                                               i32_res_27792 +
                                                               gtid_42132];
                float defunc_1_f_res_42149 = x_42147 * x_42148;
                float defunc_1_op_res_42146 = defunc_1_f_res_42149 +
                      redout_43080;
                float redout_tmp_44732 = defunc_1_op_res_42146;
                
                redout_43080 = redout_tmp_44732;
            }
            x_42143 = redout_43080;
            acc_42142 = x_42143;
        } else {
            acc_42142 = acc_42135;
        }
        mem_43643[0] = acc_42142;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44156[0] = mem_43643[0];
    }
    
    int64_t thread_out_index_44733 = gid_x_41888 * tile_sizze_41891 +
            sext_i32_i64(ltid_pre_44727);
    int64_t thread_out_index_44734 = gid_y_41889 * tile_sizze_41891 +
            sext_i32_i64(ltid_pre_44728);
    
    if (slt64(thread_out_index_44733, m_27773) && slt64(thread_out_index_44734,
                                                        i32_res_27792)) {
        ((__global float *) mem_43647)[thread_out_index_44733 * i32_res_27792 +
                                       thread_out_index_44734] = mem_44156[0];
    }
    
  error_5:
    return;
    #undef tile_sizze_41891
}
__kernel void mainDetailedzisegmap_intragroup_42188(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43699_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43697_backing_aligned_1,
                                                    int64_t N_27772,
                                                    int64_t m_27773,
                                                    int64_t i32_res_27792,
                                                    int64_t gridDim_x_42182,
                                                    int64_t full_tiles_42213,
                                                    int64_t kk_42416, __global
                                                    unsigned char *defunc_4_map_res_mem_43657,
                                                    __global
                                                    unsigned char *mem_43681,
                                                    __global
                                                    unsigned char *mem_43871)
{
    #define Ty_42169 (mainDetailedziTy_42166)
    #define Ry_42170 (mainDetailedziRy_42168)
    #define Tx_42171 (mainDetailedziTx_42165)
    #define Rx_42172 (mainDetailedziRx_42167)
    #define Tk_42173 (mainDetailedziTk_42164)
    #define tk_div_tx_42174 (sdiv_up64(mainDetailedziTk_42164, mainDetailedziTx_42165))
    #define tk_div_ty_42175 (sdiv_up64(mainDetailedziTk_42164, mainDetailedziTy_42166))
    #define TxRx_42176 (mainDetailedziTx_42165 * mainDetailedziRx_42167)
    #define TyRy_42177 (mainDetailedziTy_42166 * mainDetailedziRy_42168)
    #define a_loc_szz_42179 (mainDetailedziTk_42164 * (mainDetailedziTy_42166 * mainDetailedziRy_42168))
    #define b_loc_szz_42181 (mainDetailedziRx_42167 * (mainDetailedziTx_42165 * mainDetailedziTk_42164))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43699_backing_1 = (__local volatile
                                                           char *) mem_43699_backing_aligned_0;
    __local volatile char *restrict mem_43697_backing_0 = (__local volatile
                                                           char *) mem_43697_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44810;
    int32_t local_tid_44811;
    int64_t group_sizze_44814;
    int32_t wave_sizze_44813;
    int32_t group_tid_44812;
    
    global_tid_44810 = get_global_id(0);
    local_tid_44811 = get_local_id(0);
    group_sizze_44814 = get_local_size(0);
    wave_sizze_44813 = LOCKSTEP_WIDTH;
    group_tid_44812 = get_group_id(0);
    
    int32_t gid_flat_42188;
    
    gid_flat_42188 = group_tid_44812;
    
    int32_t ltid_pre_44815;
    
    ltid_pre_44815 = squot32(local_tid_44811, sext_i64_i32(Tx_42171));
    
    int32_t ltid_pre_44816;
    
    ltid_pre_44816 = local_tid_44811 - squot32(local_tid_44811,
                                               sext_i64_i32(Tx_42171)) *
        sext_i64_i32(Tx_42171);
    
    int64_t gid_y_42187;
    
    gid_y_42187 = squot64(sext_i32_i64(group_tid_44812), gridDim_x_42182);
    
    int64_t gid_x_42186;
    
    gid_x_42186 = sext_i32_i64(group_tid_44812) -
        squot64(sext_i32_i64(group_tid_44812), gridDim_x_42182) *
        gridDim_x_42182;
    
    int64_t iii_42189;
    
    iii_42189 = TyRy_42177 * gid_y_42187;
    
    int64_t jjj_42190 = TxRx_42176 * gid_x_42186;
    float mem_43695[Ry_42170 * Rx_42172];
    int64_t ltid_y_42193 = sext_i32_i64(ltid_pre_44815);
    int64_t ltid_x_42191 = sext_i32_i64(ltid_pre_44816);
    int32_t ltid_flat_42192 = local_tid_44811;
    float mem_43686[Ry_42170 * Rx_42172];
    
    for (int64_t i_42204 = 0; i_42204 < Ry_42170; i_42204++) {
        for (int64_t i_42207 = 0; i_42207 < Rx_42172; i_42207++) {
            mem_43686[i_42204 * Rx_42172 + i_42207] = 0.0F;
        }
    }
    for (int64_t i_44819 = 0; i_44819 < Ry_42170; i_44819++) {
        for (int64_t i_44820 = 0; i_44820 < Rx_42172; i_44820++) {
            mem_43695[i_44819 * Rx_42172 + i_44820] = mem_43686[i_44819 *
                                                                Rx_42172 +
                                                                i_44820];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43697;
    
    mem_43697 = (__local char *) mem_43697_backing_0;
    
    __local char *mem_43699;
    
    mem_43699 = (__local char *) mem_43699_backing_1;
    
    float mem_43770[Ry_42170];
    float mem_43774[Rx_42172];
    float loop_mem_43786[Ry_42170 * Rx_42172];
    float mem_param_43700[Ry_42170 * Rx_42172];
    
    for (int32_t i_2 = 0; i_2 < Ry_42170 * Rx_42172; i_2++)
        mem_param_43700[i_2] = mem_43695[i_2];
    for (int64_t i_42214 = 0; i_42214 < full_tiles_42213; i_42214++) {
        int64_t kk_42218 = Tk_42173 * i_42214;
        
        for (int64_t i_42219 = 0; i_42219 < Ry_42170; i_42219++) {
            int64_t binop_y_42242 = Ty_42169 * i_42219;
            
            for (int64_t i_42221 = 0; i_42221 < tk_div_tx_42174; i_42221++) {
                int64_t binop_y_42240 = Tx_42171 * i_42221;
                int64_t ltid_x_42223 = sext_i32_i64(ltid_pre_44815);
                int64_t ltid_y_42224 = sext_i32_i64(ltid_pre_44816);
                int32_t ltid_flat_42225 = local_tid_44811;
                int64_t k_42241 = ltid_y_42224 + binop_y_42240;
                int64_t i_42243 = ltid_x_42223 + binop_y_42242;
                int64_t gtid_42244 = iii_42189 + i_42243;
                int64_t A_col_idx_42245 = kk_42218 + k_42241;
                bool cond_42246 = slt64(gtid_42244, m_27773);
                float A_elem_42247;
                
                if (cond_42246) {
                    float A_elem_42249 = ((__global
                                           float *) defunc_4_map_res_mem_43657)[gtid_42244 *
                                                                                i32_res_27792 +
                                                                                A_col_idx_42245];
                    
                    A_elem_42247 = A_elem_42249;
                } else {
                    A_elem_42247 = 0.0F;
                }
                
                bool cond_42251 = slt64(k_42241, Tk_42173);
                int64_t a_loc_ind_42252;
                
                if (cond_42251) {
                    int64_t binop_y_42253 = Tk_42173 * i_42243;
                    int64_t loc_fi_42254 = k_42241 + binop_y_42253;
                    
                    a_loc_ind_42252 = loc_fi_42254;
                } else {
                    a_loc_ind_42252 = -1;
                }
                if (sle64(0, a_loc_ind_42252) && slt64(a_loc_ind_42252,
                                                       a_loc_szz_42179)) {
                    ((__local float *) mem_43697)[a_loc_ind_42252] =
                        A_elem_42247;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_42259 = 0; i_42259 < tk_div_ty_42175; i_42259++) {
            int64_t binop_y_42280 = Ty_42169 * i_42259;
            
            for (int64_t i_42261 = 0; i_42261 < Rx_42172; i_42261++) {
                int64_t binop_y_42282 = Tx_42171 * i_42261;
                int64_t ltid_x_42263 = sext_i32_i64(ltid_pre_44815);
                int64_t ltid_y_42264 = sext_i32_i64(ltid_pre_44816);
                int32_t ltid_flat_42265 = local_tid_44811;
                int64_t k_42281 = ltid_x_42263 + binop_y_42280;
                int64_t j_42283 = ltid_y_42264 + binop_y_42282;
                int64_t gtid_42284 = jjj_42190 + j_42283;
                int64_t B_row_idx_42285 = kk_42218 + k_42281;
                bool cond_42286 = slt64(gtid_42284, N_27772);
                float B_elem_42287;
                
                if (cond_42286) {
                    float B_elem_42289 = ((__global
                                           float *) mem_43681)[B_row_idx_42285 *
                                                               N_27772 +
                                                               gtid_42284];
                    
                    B_elem_42287 = B_elem_42289;
                } else {
                    B_elem_42287 = 0.0F;
                }
                
                bool cond_42291 = slt64(k_42281, Tk_42173);
                int64_t b_loc_ind_42292;
                
                if (cond_42291) {
                    int64_t binop_y_42293 = TxRx_42176 * k_42281;
                    int64_t loc_fi_42294 = j_42283 + binop_y_42293;
                    
                    b_loc_ind_42292 = loc_fi_42294;
                } else {
                    b_loc_ind_42292 = -1;
                }
                if (sle64(0, b_loc_ind_42292) && slt64(b_loc_ind_42292,
                                                       b_loc_szz_42181)) {
                    ((__local float *) mem_43699)[b_loc_ind_42292] =
                        B_elem_42287;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_43785[Ry_42170 * Rx_42172];
        float mem_param_43757[Ry_42170 * Rx_42172];
        
        for (int32_t i_3 = 0; i_3 < Ry_42170 * Rx_42172; i_3++)
            mem_param_43757[i_3] = mem_param_43700[i_3];
        for (int64_t i_42299 = 0; i_42299 < Tk_42173; i_42299++) {
            int64_t binop_y_42338 = TxRx_42176 * i_42299;
            int64_t ltid_y_42303 = sext_i32_i64(ltid_pre_44815);
            int64_t ltid_x_42301 = sext_i32_i64(ltid_pre_44816);
            int32_t ltid_flat_42302 = local_tid_44811;
            float mem_43760[Ry_42170];
            float mem_43762[Rx_42172];
            int64_t binop_x_42329 = Ry_42170 * ltid_y_42303;
            
            for (int64_t i_42327 = 0; i_42327 < Ry_42170; i_42327++) {
                int64_t binop_x_42330 = i_42327 + binop_x_42329;
                int64_t binop_y_42331 = Tk_42173 * binop_x_42330;
                int64_t a_loc_ind_42332 = i_42299 + binop_y_42331;
                
                for (int64_t i_44832 = 0; i_44832 < 1; i_44832++) {
                    mem_43760[i_42327 + i_44832] = ((__local
                                                     float *) mem_43697)[a_loc_ind_42332 +
                                                                         i_44832];
                }
            }
            
            int64_t binop_y_42340 = Rx_42172 * ltid_x_42301;
            
            for (int64_t i_42336 = 0; i_42336 < Rx_42172; i_42336++) {
                int64_t binop_x_42339 = i_42336 + binop_y_42338;
                int64_t b_loc_ind_42341 = binop_x_42339 + binop_y_42340;
                
                for (int64_t i_44834 = 0; i_44834 < 1; i_44834++) {
                    mem_43762[i_42336 + i_44834] = ((__local
                                                     float *) mem_43699)[b_loc_ind_42341 +
                                                                         i_44834];
                }
            }
            for (int64_t i_44835 = 0; i_44835 < Ry_42170; i_44835++) {
                mem_43770[i_44835] = mem_43760[i_44835];
            }
            for (int64_t i_44836 = 0; i_44836 < Rx_42172; i_44836++) {
                mem_43774[i_44836] = mem_43762[i_44836];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_43784[Ry_42170 * Rx_42172];
            int64_t ltid_y_42348 = sext_i32_i64(ltid_pre_44815);
            int64_t ltid_x_42346 = sext_i32_i64(ltid_pre_44816);
            int32_t ltid_flat_42347 = local_tid_44811;
            int64_t binop_y_42389 = Ry_42170 * ltid_y_42348;
            int64_t binop_y_42393 = Rx_42172 * ltid_x_42346;
            
            for (int64_t i_42383 = 0; i_42383 < Ry_42170; i_42383++) {
                int64_t binop_x_42388 = iii_42189 + i_42383;
                int64_t cmpop_x_42390 = binop_x_42388 + binop_y_42389;
                bool binop_x_42391 = slt64(cmpop_x_42390, m_27773);
                
                for (int64_t i_42386 = 0; i_42386 < Rx_42172; i_42386++) {
                    int64_t binop_x_42392 = jjj_42190 + i_42386;
                    int64_t cmpop_x_42394 = binop_x_42392 + binop_y_42393;
                    bool binop_y_42395 = slt64(cmpop_x_42394, N_27772);
                    bool cond_42396 = binop_x_42391 && binop_y_42395;
                    
                    if (cond_42396) {
                        float a_42398 = mem_43770[i_42383];
                        float b_42399 = mem_43774[i_42386];
                        float c_42400 = mem_param_43757[i_42383 * Rx_42172 +
                                                        i_42386];
                        float defunc_1_f_res_42403 = a_42398 * b_42399;
                        float defunc_1_op_res_42407 = c_42400 +
                              defunc_1_f_res_42403;
                        
                        mem_param_43757[i_42383 * Rx_42172 + i_42386] =
                            defunc_1_op_res_42407;
                    }
                }
            }
            for (int64_t i_44839 = 0; i_44839 < Ry_42170; i_44839++) {
                for (int64_t i_44840 = 0; i_44840 < Rx_42172; i_44840++) {
                    mem_43784[i_44839 * Rx_42172 + i_44840] =
                        mem_param_43757[i_44839 * Rx_42172 + i_44840];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44829[Ry_42170 * Rx_42172];
            
            for (int32_t i_4 = 0; i_4 < Ry_42170 * Rx_42172; i_4++)
                mem_param_tmp_44829[i_4] = mem_43784[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_42170 * Rx_42172; i_5++)
                mem_param_43757[i_5] = mem_param_tmp_44829[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_42170 * Rx_42172; i_6++)
            loop_mem_43785[i_6] = mem_param_43757[i_6];
        
        float mem_param_tmp_44821[Ry_42170 * Rx_42172];
        
        for (int32_t i_7 = 0; i_7 < Ry_42170 * Rx_42172; i_7++)
            mem_param_tmp_44821[i_7] = loop_mem_43785[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_42170 * Rx_42172; i_8++)
            mem_param_43700[i_8] = mem_param_tmp_44821[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_42170 * Rx_42172; i_9++)
        loop_mem_43786[i_9] = mem_param_43700[i_9];
    for (int64_t i_42417 = 0; i_42417 < Ry_42170; i_42417++) {
        int64_t binop_y_42442 = Ty_42169 * i_42417;
        
        for (int64_t i_42419 = 0; i_42419 < tk_div_tx_42174; i_42419++) {
            int64_t binop_y_42440 = Tx_42171 * i_42419;
            int64_t ltid_x_42421 = sext_i32_i64(ltid_pre_44815);
            int64_t ltid_y_42422 = sext_i32_i64(ltid_pre_44816);
            int32_t ltid_flat_42423 = local_tid_44811;
            int64_t k_42441 = ltid_y_42422 + binop_y_42440;
            int64_t i_42443 = ltid_x_42421 + binop_y_42442;
            int64_t gtid_42444 = iii_42189 + i_42443;
            int64_t A_col_idx_42445 = kk_42416 + k_42441;
            bool binop_x_42446 = slt64(gtid_42444, m_27773);
            bool binop_y_42447 = slt64(A_col_idx_42445, i32_res_27792);
            bool cond_42448 = binop_x_42446 && binop_y_42447;
            float A_elem_42449;
            
            if (cond_42448) {
                float A_elem_42451 = ((__global
                                       float *) defunc_4_map_res_mem_43657)[gtid_42444 *
                                                                            i32_res_27792 +
                                                                            A_col_idx_42445];
                
                A_elem_42449 = A_elem_42451;
            } else {
                A_elem_42449 = 0.0F;
            }
            
            bool cond_42453 = slt64(k_42441, Tk_42173);
            int64_t a_loc_ind_42454;
            
            if (cond_42453) {
                int64_t binop_y_42455 = Tk_42173 * i_42443;
                int64_t loc_fi_42456 = k_42441 + binop_y_42455;
                
                a_loc_ind_42454 = loc_fi_42456;
            } else {
                a_loc_ind_42454 = -1;
            }
            if (sle64(0, a_loc_ind_42454) && slt64(a_loc_ind_42454,
                                                   a_loc_szz_42179)) {
                ((__local float *) mem_43697)[a_loc_ind_42454] = A_elem_42449;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_42461 = 0; i_42461 < tk_div_ty_42175; i_42461++) {
        int64_t binop_y_42484 = Ty_42169 * i_42461;
        
        for (int64_t i_42463 = 0; i_42463 < Rx_42172; i_42463++) {
            int64_t binop_y_42486 = Tx_42171 * i_42463;
            int64_t ltid_x_42465 = sext_i32_i64(ltid_pre_44815);
            int64_t ltid_y_42466 = sext_i32_i64(ltid_pre_44816);
            int32_t ltid_flat_42467 = local_tid_44811;
            int64_t k_42485 = ltid_x_42465 + binop_y_42484;
            int64_t j_42487 = ltid_y_42466 + binop_y_42486;
            int64_t gtid_42488 = jjj_42190 + j_42487;
            int64_t B_row_idx_42489 = kk_42416 + k_42485;
            bool binop_x_42490 = slt64(gtid_42488, N_27772);
            bool binop_y_42491 = slt64(B_row_idx_42489, i32_res_27792);
            bool cond_42492 = binop_x_42490 && binop_y_42491;
            float B_elem_42493;
            
            if (cond_42492) {
                float B_elem_42495 = ((__global
                                       float *) mem_43681)[B_row_idx_42489 *
                                                           N_27772 +
                                                           gtid_42488];
                
                B_elem_42493 = B_elem_42495;
            } else {
                B_elem_42493 = 0.0F;
            }
            
            bool cond_42497 = slt64(k_42485, Tk_42173);
            int64_t b_loc_ind_42498;
            
            if (cond_42497) {
                int64_t binop_y_42499 = TxRx_42176 * k_42485;
                int64_t loc_fi_42500 = j_42487 + binop_y_42499;
                
                b_loc_ind_42498 = loc_fi_42500;
            } else {
                b_loc_ind_42498 = -1;
            }
            if (sle64(0, b_loc_ind_42498) && slt64(b_loc_ind_42498,
                                                   b_loc_szz_42181)) {
                ((__local float *) mem_43699)[b_loc_ind_42498] = B_elem_42493;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_43852[Ry_42170];
    float mem_43856[Rx_42172];
    float mem_43866[Ry_42170 * Rx_42172];
    float loop_mem_43868[Ry_42170 * Rx_42172];
    float mem_param_43839[Ry_42170 * Rx_42172];
    
    for (int32_t i_10 = 0; i_10 < Ry_42170 * Rx_42172; i_10++)
        mem_param_43839[i_10] = loop_mem_43786[i_10];
    for (int64_t i_42505 = 0; i_42505 < Tk_42173; i_42505++) {
        int64_t cmpop_x_42507 = kk_42416 + i_42505;
        bool cond_42508 = slt64(cmpop_x_42507, i32_res_27792);
        float mem_44172[Ry_42170 * Rx_42172];
        
        if (cond_42508) {
            int64_t binop_y_42546 = TxRx_42176 * i_42505;
            int64_t bytes_43841 = 4 * Ry_42170;
            int64_t bytes_43843 = 4 * Rx_42172;
            int64_t ltid_y_42511 = sext_i32_i64(ltid_pre_44815);
            int64_t ltid_x_42509 = sext_i32_i64(ltid_pre_44816);
            int32_t ltid_flat_42510 = local_tid_44811;
            float mem_43842[Ry_42170];
            float mem_43844[Rx_42172];
            int64_t binop_x_42537 = Ry_42170 * ltid_y_42511;
            
            for (int64_t i_42535 = 0; i_42535 < Ry_42170; i_42535++) {
                int64_t binop_x_42538 = i_42535 + binop_x_42537;
                int64_t binop_y_42539 = Tk_42173 * binop_x_42538;
                int64_t a_loc_ind_42540 = i_42505 + binop_y_42539;
                
                for (int64_t i_44848 = 0; i_44848 < 1; i_44848++) {
                    mem_43842[i_42535 + i_44848] = ((__local
                                                     float *) mem_43697)[a_loc_ind_42540 +
                                                                         i_44848];
                }
            }
            
            int64_t binop_y_42548 = Rx_42172 * ltid_x_42509;
            
            for (int64_t i_42544 = 0; i_42544 < Rx_42172; i_42544++) {
                int64_t binop_x_42547 = i_42544 + binop_y_42546;
                int64_t b_loc_ind_42549 = binop_x_42547 + binop_y_42548;
                
                for (int64_t i_44850 = 0; i_44850 < 1; i_44850++) {
                    mem_43844[i_42544 + i_44850] = ((__local
                                                     float *) mem_43699)[b_loc_ind_42549 +
                                                                         i_44850];
                }
            }
            for (int64_t i_44851 = 0; i_44851 < Ry_42170; i_44851++) {
                mem_43852[i_44851] = mem_43842[i_44851];
            }
            for (int64_t i_44852 = 0; i_44852 < Rx_42172; i_44852++) {
                mem_43856[i_44852] = mem_43844[i_44852];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_42556 = sext_i32_i64(ltid_pre_44815);
            int64_t ltid_x_42554 = sext_i32_i64(ltid_pre_44816);
            int32_t ltid_flat_42555 = local_tid_44811;
            int64_t binop_y_42597 = Ry_42170 * ltid_y_42556;
            int64_t binop_y_42601 = Rx_42172 * ltid_x_42554;
            
            for (int64_t i_42591 = 0; i_42591 < Ry_42170; i_42591++) {
                int64_t binop_x_42596 = iii_42189 + i_42591;
                int64_t cmpop_x_42598 = binop_x_42596 + binop_y_42597;
                bool binop_x_42599 = slt64(cmpop_x_42598, m_27773);
                
                for (int64_t i_42594 = 0; i_42594 < Rx_42172; i_42594++) {
                    int64_t binop_x_42600 = jjj_42190 + i_42594;
                    int64_t cmpop_x_42602 = binop_x_42600 + binop_y_42601;
                    bool binop_y_42603 = slt64(cmpop_x_42602, N_27772);
                    bool cond_42604 = binop_x_42599 && binop_y_42603;
                    
                    if (cond_42604) {
                        float a_42606 = mem_43852[i_42591];
                        float b_42607 = mem_43856[i_42594];
                        float c_42608 = mem_param_43839[i_42591 * Rx_42172 +
                                                        i_42594];
                        float defunc_1_f_res_42611 = a_42606 * b_42607;
                        float defunc_1_op_res_42615 = c_42608 +
                              defunc_1_f_res_42611;
                        
                        mem_param_43839[i_42591 * Rx_42172 + i_42594] =
                            defunc_1_op_res_42615;
                    }
                }
            }
            for (int64_t i_44855 = 0; i_44855 < Ry_42170; i_44855++) {
                for (int64_t i_44856 = 0; i_44856 < Rx_42172; i_44856++) {
                    mem_43866[i_44855 * Rx_42172 + i_44856] =
                        mem_param_43839[i_44855 * Rx_42172 + i_44856];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44857 = 0; i_44857 < Ry_42170; i_44857++) {
                for (int64_t i_44858 = 0; i_44858 < Rx_42172; i_44858++) {
                    mem_44172[i_44857 * Rx_42172 + i_44858] =
                        mem_43866[i_44857 * Rx_42172 + i_44858];
                }
            }
        } else {
            for (int64_t i_44859 = 0; i_44859 < Ry_42170; i_44859++) {
                for (int64_t i_44860 = 0; i_44860 < Rx_42172; i_44860++) {
                    mem_44172[i_44859 * Rx_42172 + i_44860] =
                        mem_param_43839[i_44859 * Rx_42172 + i_44860];
                }
            }
        }
        
        float mem_param_tmp_44845[Ry_42170 * Rx_42172];
        
        for (int32_t i_11 = 0; i_11 < Ry_42170 * Rx_42172; i_11++)
            mem_param_tmp_44845[i_11] = mem_44172[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_42170 * Rx_42172; i_12++)
            mem_param_43839[i_12] = mem_param_tmp_44845[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_42170 * Rx_42172; i_13++)
        loop_mem_43868[i_13] = mem_param_43839[i_13];
    
    int64_t reg_tile_i_44861 = squot64(sext_i32_i64(local_tid_44811), Tx_42171);
    int64_t reg_tile_i_44862 = sext_i32_i64(local_tid_44811) -
            squot64(sext_i32_i64(local_tid_44811), Tx_42171) * Tx_42171;
    int64_t tile_dim_start_44863 = Ry_42170 * (Ty_42169 * gid_y_42187 +
                                               reg_tile_i_44861);
    int64_t tile_dim_start_44864 = Rx_42172 * (Tx_42171 * gid_x_42186 +
                                               reg_tile_i_44862);
    
    for (int64_t nest_i_44865 = 0; nest_i_44865 < Ry_42170; nest_i_44865++) {
        for (int64_t nest_i_44866 = 0; nest_i_44866 < Rx_42172;
             nest_i_44866++) {
            if (slt64(tile_dim_start_44863 + nest_i_44865, m_27773) &&
                slt64(tile_dim_start_44864 + nest_i_44866, N_27772)) {
                ((__global float *) mem_43871)[(tile_dim_start_44863 +
                                                nest_i_44865) * N_27772 +
                                               (tile_dim_start_44864 +
                                                nest_i_44866)] =
                    loop_mem_43868[nest_i_44865 * Rx_42172 + nest_i_44866];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_42169
    #undef Ry_42170
    #undef Tx_42171
    #undef Rx_42172
    #undef Tk_42173
    #undef tk_div_tx_42174
    #undef tk_div_ty_42175
    #undef TxRx_42176
    #undef TyRy_42177
    #undef a_loc_szz_42179
    #undef b_loc_szz_42181
}
__kernel void mainDetailedzisegmap_intragroup_42622(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43941_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43934_backing_aligned_1,
                                                    int64_t m_27773,
                                                    int32_t n_27777,
                                                    float hfrac_27779,
                                                    int64_t i32_res_27786,
                                                    int32_t k2p2_27788,
                                                    int64_t num_whole_tiles_42630,
                                                    int64_t residual_input_42751,
                                                    unsigned char cond_42752,
                                                    __global
                                                    unsigned char *mem_43923,
                                                    __global
                                                    unsigned char *mem_43926,
                                                    __global
                                                    unsigned char *mem_43954,
                                                    __global
                                                    unsigned char *mem_43956,
                                                    __global
                                                    unsigned char *mem_43958)
{
    #define segmap_group_sizze_32121 (mainDetailedzisegmap_group_sizze_32090)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43941_backing_5 = (__local volatile
                                                           char *) mem_43941_backing_aligned_0;
    __local volatile char *restrict mem_43934_backing_0 = (__local volatile
                                                           char *) mem_43934_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45034;
    int32_t local_tid_45035;
    int64_t group_sizze_45038;
    int32_t wave_sizze_45037;
    int32_t group_tid_45036;
    
    global_tid_45034 = get_global_id(0);
    local_tid_45035 = get_local_id(0);
    group_sizze_45038 = get_local_size(0);
    wave_sizze_45037 = LOCKSTEP_WIDTH;
    group_tid_45036 = get_group_id(0);
    
    int32_t gid_flat_42622;
    
    gid_flat_42622 = group_tid_45036;
    
    int32_t ltid_pre_45039;
    
    ltid_pre_45039 = local_tid_45035;
    
    int64_t gid_42621;
    
    gid_42621 = sext_i32_i64(group_tid_45036);
    
    float mem_43930[1];
    int64_t ltid_42631 = sext_i32_i64(ltid_pre_45039);
    int32_t ltid_flat_42632 = local_tid_45035;
    
    mem_43930[0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_42717 = segmap_group_sizze_32121 * gid_42621;
    __local char *mem_43934;
    
    mem_43934 = (__local char *) mem_43934_backing_0;
    
    float accs_mem_43938[1];
    float mem_param_43931[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43931[i_1] = mem_43930[i_1];
    for (int64_t tile_id_42638 = 0; tile_id_42638 < num_whole_tiles_42630;
         tile_id_42638++) {
        int64_t binop_x_42699 = segmap_group_sizze_32121 * tile_id_42638;
        int64_t ltid_42639 = sext_i32_i64(ltid_pre_45039);
        int32_t ltid_flat_42640 = local_tid_45035;
        int64_t j_42700 = ltid_42639 + binop_x_42699;
        bool cond_42712 = slt64(j_42700, i32_res_27786);
        int32_t pre_42713;
        
        if (cond_42712) {
            int32_t index_primexp_43046 = sext_i64_i32(j_42700);
            
            pre_42713 = index_primexp_43046;
        } else {
            pre_42713 = 0;
        }
        ((__local int32_t *) mem_43934)[ltid_42639] = pre_42713;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43937[1];
        int64_t ltid_42666 = sext_i32_i64(ltid_pre_45039);
        int32_t ltid_flat_42667 = local_tid_45035;
        int64_t gtid_42718 = ltid_42666 + binop_x_42717;
        int32_t defunc_0_f_res_42720;
        int32_t redout_43088 = 0;
        
        for (int32_t i_43114 = 0; i_43114 < n_27777; i_43114++) {
            int64_t i_43089 = sext_i32_i64(i_43114);
            float x_42724 = ((__global float *) mem_43923)[i_43089 * m_27773 +
                                                           gtid_42718];
            bool isnan_res_42725;
            
            isnan_res_42725 = futrts_isnan32(x_42724);
            
            bool cond_42726 = !isnan_res_42725;
            int32_t defunc_0_f_res_42727 = btoi_bool_i32(cond_42726);
            int32_t defunc_1_op_res_42723 = add32(defunc_0_f_res_42727,
                                                  redout_43088);
            int32_t redout_tmp_45042 = defunc_1_op_res_42723;
            
            redout_43088 = redout_tmp_45042;
        }
        defunc_0_f_res_42720 = redout_43088;
        
        float acc_42728 = mem_param_43931[0];
        bool cond_42729 = slt64(gtid_42718, m_27773);
        float acc_42730;
        
        if (cond_42729) {
            float x_42731;
            float redout_43090 = acc_42728;
            
            for (int64_t i_43091 = 0; i_43091 < segmap_group_sizze_32121;
                 i_43091++) {
                int32_t x_42735 = ((__local int32_t *) mem_43934)[i_43091];
                bool cond_42736 = slt32(x_42735, defunc_0_f_res_42720);
                float defunc_0_f_res_42737;
                
                if (cond_42736) {
                    int64_t i_42738 = sext_i32_i64(x_42735);
                    float defunc_0_f_res_t_res_42739 = ((__global
                                                         float *) mem_43926)[i_42738 *
                                                                             m_27773 +
                                                                             gtid_42718];
                    
                    defunc_0_f_res_42737 = defunc_0_f_res_t_res_42739;
                } else {
                    defunc_0_f_res_42737 = 0.0F;
                }
                
                float defunc_0_f_res_42740 = defunc_0_f_res_42737 *
                      defunc_0_f_res_42737;
                float defunc_1_op_res_42734 = defunc_0_f_res_42740 +
                      redout_43090;
                float redout_tmp_45043 = defunc_1_op_res_42734;
                
                redout_43090 = redout_tmp_45043;
            }
            x_42731 = redout_43090;
            acc_42730 = x_42731;
        } else {
            acc_42730 = acc_42728;
        }
        mem_43937[0] = acc_42730;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45040[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_45040[i_2] = mem_43937[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43931[i_3] = mem_param_tmp_45040[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43938[i_4] = mem_param_43931[i_4];
    
    __local char *mem_43941;
    
    mem_43941 = (__local char *) mem_43941_backing_5;
    
    float mem_43944[1];
    float mem_44185[1];
    
    if (cond_42752) {
        mem_44185[0] = accs_mem_43938[0];
    } else {
        int64_t binop_x_42762 = segmap_group_sizze_32121 *
                num_whole_tiles_42630;
        int64_t ltid_42753 = sext_i32_i64(ltid_pre_45039);
        int32_t ltid_flat_42754 = local_tid_45035;
        int64_t j_42763 = ltid_42753 + binop_x_42762;
        bool cond_42775 = slt64(j_42763, i32_res_27786);
        int32_t pre_42776;
        
        if (cond_42775) {
            int32_t index_primexp_43047 = sext_i64_i32(j_42763);
            
            pre_42776 = index_primexp_43047;
        } else {
            pre_42776 = 0;
        }
        ((__local int32_t *) mem_43941)[ltid_42753] = pre_42776;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_42781 = sext_i32_i64(ltid_pre_45039);
        int32_t ltid_flat_42782 = local_tid_45035;
        int64_t gtid_42789 = binop_x_42717 + ltid_42781;
        int32_t defunc_0_f_res_42791;
        int32_t redout_43092 = 0;
        
        for (int32_t i_43115 = 0; i_43115 < n_27777; i_43115++) {
            int64_t i_43093 = sext_i32_i64(i_43115);
            float x_42795 = ((__global float *) mem_43923)[i_43093 * m_27773 +
                                                           gtid_42789];
            bool isnan_res_42796;
            
            isnan_res_42796 = futrts_isnan32(x_42795);
            
            bool cond_42797 = !isnan_res_42796;
            int32_t defunc_0_f_res_42798 = btoi_bool_i32(cond_42797);
            int32_t defunc_1_op_res_42794 = add32(defunc_0_f_res_42798,
                                                  redout_43092);
            int32_t redout_tmp_45044 = defunc_1_op_res_42794;
            
            redout_43092 = redout_tmp_45044;
        }
        defunc_0_f_res_42791 = redout_43092;
        
        float acc_42799 = accs_mem_43938[0];
        bool cond_42800 = slt64(gtid_42789, m_27773);
        float acc_42801;
        
        if (cond_42800) {
            float x_42802;
            float redout_43094 = acc_42799;
            
            for (int64_t i_43095 = 0; i_43095 < residual_input_42751;
                 i_43095++) {
                int32_t x_42806 = ((__local int32_t *) mem_43941)[i_43095];
                bool cond_42807 = slt32(x_42806, defunc_0_f_res_42791);
                float defunc_0_f_res_42808;
                
                if (cond_42807) {
                    int64_t i_42809 = sext_i32_i64(x_42806);
                    float defunc_0_f_res_t_res_42810 = ((__global
                                                         float *) mem_43926)[i_42809 *
                                                                             m_27773 +
                                                                             gtid_42789];
                    
                    defunc_0_f_res_42808 = defunc_0_f_res_t_res_42810;
                } else {
                    defunc_0_f_res_42808 = 0.0F;
                }
                
                float defunc_0_f_res_42811 = defunc_0_f_res_42808 *
                      defunc_0_f_res_42808;
                float defunc_1_op_res_42805 = defunc_0_f_res_42811 +
                      redout_43094;
                float redout_tmp_45045 = defunc_1_op_res_42805;
                
                redout_43094 = redout_tmp_45045;
            }
            x_42802 = redout_43094;
            acc_42801 = x_42802;
        } else {
            acc_42801 = acc_42799;
        }
        mem_43944[0] = acc_42801;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44185[0] = mem_43944[0];
    }
    
    int32_t mem_43948[1];
    int32_t mem_43950[1];
    float mem_43952[1];
    int64_t ltid_42814 = sext_i32_i64(ltid_pre_45039);
    int32_t ltid_flat_42815 = local_tid_45035;
    int64_t gtid_42825 = binop_x_42717 + ltid_42814;
    bool cond_42827 = slt64(gtid_42825, m_27773);
    int32_t postlude_42828;
    int32_t postlude_42829;
    float postlude_42830;
    
    if (cond_42827) {
        float defunc_0_f_res_42826 = mem_44185[0];
        int32_t defunc_0_f_res_42832;
        int32_t redout_43096 = 0;
        
        for (int32_t i_43116 = 0; i_43116 < n_27777; i_43116++) {
            int64_t i_43097 = sext_i32_i64(i_43116);
            float x_42836 = ((__global float *) mem_43923)[i_43097 * m_27773 +
                                                           gtid_42825];
            bool isnan_res_42837;
            
            isnan_res_42837 = futrts_isnan32(x_42836);
            
            bool cond_42838 = !isnan_res_42837;
            int32_t defunc_0_f_res_42839 = btoi_bool_i32(cond_42838);
            int32_t defunc_1_op_res_42835 = add32(defunc_0_f_res_42839,
                                                  redout_43096);
            int32_t redout_tmp_45046 = defunc_1_op_res_42835;
            
            redout_43096 = redout_tmp_45046;
        }
        defunc_0_f_res_42832 = redout_43096;
        
        int32_t r32_arg_42840 = sub32(defunc_0_f_res_42832, k2p2_27788);
        float i32_res_42841 = sitofp_i32_f32(r32_arg_42840);
        float sqrt_arg_42842 = defunc_0_f_res_42826 / i32_res_42841;
        float sqrt_res_42843;
        
        sqrt_res_42843 = futrts_sqrt32(sqrt_arg_42842);
        
        float i32_res_42844 = sitofp_i32_f32(defunc_0_f_res_42832);
        float t32_arg_42845 = hfrac_27779 * i32_res_42844;
        int32_t f32_res_42846 = fptosi_f32_i32(t32_arg_42845);
        
        postlude_42828 = f32_res_42846;
        postlude_42829 = defunc_0_f_res_42832;
        postlude_42830 = sqrt_res_42843;
    } else {
        postlude_42828 = 0;
        postlude_42829 = 0;
        postlude_42830 = 0.0F;
    }
    mem_43948[0] = postlude_42828;
    mem_43950[0] = postlude_42829;
    mem_43952[0] = postlude_42830;
    barrier(CLK_LOCAL_MEM_FENCE);
    if (slt64(sext_i32_i64(local_tid_45035) + segmap_group_sizze_32121 *
              sext_i32_i64(group_tid_45036), m_27773)) {
        ((__global int32_t *) mem_43954)[sext_i32_i64(local_tid_45035) +
                                         segmap_group_sizze_32121 *
                                         sext_i32_i64(group_tid_45036)] =
            mem_43948[0];
    }
    if (slt64(sext_i32_i64(local_tid_45035) + segmap_group_sizze_32121 *
              sext_i32_i64(group_tid_45036), m_27773)) {
        ((__global int32_t *) mem_43956)[sext_i32_i64(local_tid_45035) +
                                         segmap_group_sizze_32121 *
                                         sext_i32_i64(group_tid_45036)] =
            mem_43950[0];
    }
    if (slt64(sext_i32_i64(local_tid_45035) + segmap_group_sizze_32121 *
              sext_i32_i64(group_tid_45036), m_27773)) {
        ((__global float *) mem_43958)[sext_i32_i64(local_tid_45035) +
                                       segmap_group_sizze_32121 *
                                       sext_i32_i64(group_tid_45036)] =
            mem_43952[0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_32121
}
__kernel void mainDetailedzisegmap_intragroup_42854(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_44007_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_44000_backing_aligned_1,
                                                    int64_t N_27772,
                                                    int64_t m_27773,
                                                    int64_t i32_res_28147,
                                                    int64_t num_whole_tiles_42874,
                                                    int64_t residual_input_42973,
                                                    unsigned char cond_42974,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_43919,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43982,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43983,
                                                    __global
                                                    unsigned char *mem_44013)
{
    #define segmap_group_sizze_32358 (mainDetailedzisegmap_group_sizze_32339)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44007_backing_5 = (__local volatile
                                                           char *) mem_44007_backing_aligned_0;
    __local volatile char *restrict mem_44000_backing_0 = (__local volatile
                                                           char *) mem_44000_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45220;
    int32_t local_tid_45221;
    int64_t group_sizze_45224;
    int32_t wave_sizze_45223;
    int32_t group_tid_45222;
    
    global_tid_45220 = get_global_id(0);
    local_tid_45221 = get_local_id(0);
    group_sizze_45224 = get_local_size(0);
    wave_sizze_45223 = LOCKSTEP_WIDTH;
    group_tid_45222 = get_group_id(0);
    
    int32_t gid_flat_42854;
    
    gid_flat_42854 = group_tid_45222;
    
    int32_t ltid_pre_45225;
    
    ltid_pre_45225 = local_tid_45221;
    
    int64_t gid_42853;
    
    gid_42853 = sext_i32_i64(group_tid_45222);
    
    int64_t binop_x_42863;
    
    binop_x_42863 = segmap_group_sizze_32358 * gid_42853;
    
    int32_t mem_43991[1];
    int32_t mem_43993[1];
    int64_t ltid_42855 = sext_i32_i64(ltid_pre_45225);
    int32_t ltid_flat_42856 = local_tid_45221;
    int64_t gtid_42864 = ltid_42855 + binop_x_42863;
    bool cond_42865 = slt64(gtid_42864, m_27773);
    int32_t pre_42866;
    int32_t pre_42867;
    
    if (cond_42865) {
        int32_t x_42868 = ((__global
                            int32_t *) defunc_3_map_res_mem_43983)[gtid_42864];
        int32_t x_42869 = ((__global
                            int32_t *) defunc_3_map_res_mem_43982)[gtid_42864];
        
        pre_42866 = x_42868;
        pre_42867 = x_42869;
    } else {
        pre_42866 = 0;
        pre_42867 = 0;
    }
    mem_43991[0] = pre_42866;
    mem_43993[0] = pre_42867;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_43996[1];
    int64_t ltid_42875 = sext_i32_i64(ltid_pre_45225);
    int32_t ltid_flat_42876 = local_tid_45221;
    
    mem_43996[0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44000;
    
    mem_44000 = (__local char *) mem_44000_backing_0;
    
    float accs_mem_44004[1];
    float mem_param_43997[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43997[i_1] = mem_43996[i_1];
    for (int64_t tile_id_42882 = 0; tile_id_42882 < num_whole_tiles_42874;
         tile_id_42882++) {
        int64_t binop_x_42931 = segmap_group_sizze_32358 * tile_id_42882;
        int64_t ltid_42883 = sext_i32_i64(ltid_pre_45225);
        int32_t ltid_flat_42884 = local_tid_45221;
        int64_t j_42932 = ltid_42883 + binop_x_42931;
        bool cond_42937 = slt64(j_42932, i32_res_28147);
        int32_t pre_42938;
        
        if (cond_42937) {
            int32_t index_primexp_43048 = sext_i64_i32(j_42932);
            int32_t tile_elem_42939 = index_primexp_43048;
            
            pre_42938 = tile_elem_42939;
        } else {
            pre_42938 = 0;
        }
        ((__local int32_t *) mem_44000)[ltid_42883] = pre_42938;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_44003[1];
        int64_t ltid_42903 = sext_i32_i64(ltid_pre_45225);
        int32_t ltid_flat_42904 = local_tid_45221;
        int64_t gtid_42943 = binop_x_42863 + ltid_42903;
        float acc_42946 = mem_param_43997[0];
        bool cond_42947 = slt64(gtid_42943, m_27773);
        float acc_42948;
        
        if (cond_42947) {
            int32_t x_42944 = mem_43991[0];
            int32_t x_42945 = mem_43993[0];
            float x_42949;
            float redout_43098 = acc_42946;
            
            for (int64_t i_43099 = 0; i_43099 < segmap_group_sizze_32358;
                 i_43099++) {
                int32_t x_42953 = ((__local int32_t *) mem_44000)[i_43099];
                bool cond_42954 = slt32(x_42953, x_42945);
                float defunc_0_f_res_42955;
                
                if (cond_42954) {
                    int32_t x_42956 = add32(x_42944, x_42953);
                    int32_t x_42957 = sub32(x_42956, x_42945);
                    int32_t i_42958 = add32(1, x_42957);
                    int64_t i_42959 = sext_i32_i64(i_42958);
                    float defunc_0_f_res_t_res_42960 = ((__global
                                                         float *) defunc_4_map_res_mem_43919)[gtid_42943 *
                                                                                              N_27772 +
                                                                                              i_42959];
                    
                    defunc_0_f_res_42955 = defunc_0_f_res_t_res_42960;
                } else {
                    defunc_0_f_res_42955 = 0.0F;
                }
                
                float defunc_1_op_res_42952 = defunc_0_f_res_42955 +
                      redout_43098;
                float redout_tmp_45228 = defunc_1_op_res_42952;
                
                redout_43098 = redout_tmp_45228;
            }
            x_42949 = redout_43098;
            acc_42948 = x_42949;
        } else {
            acc_42948 = acc_42946;
        }
        mem_44003[0] = acc_42948;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45226[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_45226[i_2] = mem_44003[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43997[i_3] = mem_param_tmp_45226[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_44004[i_4] = mem_param_43997[i_4];
    
    __local char *mem_44007;
    
    mem_44007 = (__local char *) mem_44007_backing_5;
    
    float mem_44010[1];
    float mem_44194[1];
    
    if (cond_42974) {
        mem_44194[0] = accs_mem_44004[0];
    } else {
        int64_t binop_x_42984 = segmap_group_sizze_32358 *
                num_whole_tiles_42874;
        int64_t ltid_42975 = sext_i32_i64(ltid_pre_45225);
        int32_t ltid_flat_42976 = local_tid_45221;
        int64_t j_42985 = ltid_42975 + binop_x_42984;
        bool cond_42990 = slt64(j_42985, i32_res_28147);
        int32_t pre_42991;
        
        if (cond_42990) {
            int32_t index_primexp_43049 = sext_i64_i32(j_42985);
            int32_t tile_elem_42992 = index_primexp_43049;
            
            pre_42991 = tile_elem_42992;
        } else {
            pre_42991 = 0;
        }
        ((__local int32_t *) mem_44007)[ltid_42975] = pre_42991;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_42996 = sext_i32_i64(ltid_pre_45225);
        int32_t ltid_flat_42997 = local_tid_45221;
        int64_t gtid_43004 = binop_x_42863 + ltid_42996;
        float acc_43007 = accs_mem_44004[0];
        bool cond_43008 = slt64(gtid_43004, m_27773);
        float acc_43009;
        
        if (cond_43008) {
            int32_t x_43005 = mem_43991[0];
            int32_t x_43006 = mem_43993[0];
            float x_43010;
            float redout_43100 = acc_43007;
            
            for (int64_t i_43101 = 0; i_43101 < residual_input_42973;
                 i_43101++) {
                int32_t x_43014 = ((__local int32_t *) mem_44007)[i_43101];
                bool cond_43015 = slt32(x_43014, x_43006);
                float defunc_0_f_res_43016;
                
                if (cond_43015) {
                    int32_t x_43017 = add32(x_43005, x_43014);
                    int32_t x_43018 = sub32(x_43017, x_43006);
                    int32_t i_43019 = add32(1, x_43018);
                    int64_t i_43020 = sext_i32_i64(i_43019);
                    float defunc_0_f_res_t_res_43021 = ((__global
                                                         float *) defunc_4_map_res_mem_43919)[gtid_43004 *
                                                                                              N_27772 +
                                                                                              i_43020];
                    
                    defunc_0_f_res_43016 = defunc_0_f_res_t_res_43021;
                } else {
                    defunc_0_f_res_43016 = 0.0F;
                }
                
                float defunc_1_op_res_43013 = defunc_0_f_res_43016 +
                      redout_43100;
                float redout_tmp_45229 = defunc_1_op_res_43013;
                
                redout_43100 = redout_tmp_45229;
            }
            x_43010 = redout_43100;
            acc_43009 = x_43010;
        } else {
            acc_43009 = acc_43007;
        }
        mem_44010[0] = acc_43009;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44194[0] = mem_44010[0];
    }
    if (slt64(sext_i32_i64(local_tid_45221) + segmap_group_sizze_32358 *
              sext_i32_i64(group_tid_45222), m_27773)) {
        ((__global float *) mem_44013)[sext_i32_i64(local_tid_45221) +
                                       segmap_group_sizze_32358 *
                                       sext_i32_i64(group_tid_45222)] =
            mem_44194[0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_32358
}
__kernel void mainDetailedzisegred_large_30333(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44488_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44486_backing_aligned_1,
                                               int64_t N_27772, int64_t N_27774,
                                               int64_t i32_res_27786,
                                               int64_t i32_res_27792,
                                               int64_t num_groups_30472,
                                               __global
                                               unsigned char *images_mem_43123,
                                               __global
                                               unsigned char *binop_p_mem_43132,
                                               __global
                                               unsigned char *mem_43273,
                                               __global
                                               unsigned char *mem_43278,
                                               int64_t groups_per_segment_44472,
                                               int64_t elements_per_thread_44473,
                                               int64_t virt_num_groups_44474,
                                               int64_t threads_per_segment_44476,
                                               __global
                                               unsigned char *group_res_arr_mem_44477,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44479)
{
    #define segred_group_sizze_30471 (mainDetailedzisegred_group_sizze_30327)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44488_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44488_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44486_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44486_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44481;
    int32_t local_tid_44482;
    int64_t group_sizze_44485;
    int32_t wave_sizze_44484;
    int32_t group_tid_44483;
    
    global_tid_44481 = get_global_id(0);
    local_tid_44482 = get_local_id(0);
    group_sizze_44485 = get_local_size(0);
    wave_sizze_44484 = LOCKSTEP_WIDTH;
    group_tid_44483 = get_group_id(0);
    
    int32_t phys_tid_30333;
    
    phys_tid_30333 = global_tid_44481;
    
    __local char *red_arr_mem_44486;
    
    red_arr_mem_44486 = (__local char *) red_arr_mem_44486_backing_0;
    
    __local char *sync_arr_mem_44488;
    
    sync_arr_mem_44488 = (__local char *) sync_arr_mem_44488_backing_1;
    
    int32_t phys_group_id_44490;
    
    phys_group_id_44490 = get_group_id(0);
    for (int32_t i_44491 = 0; i_44491 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44474) - phys_group_id_44490,
                   sext_i64_i32(num_groups_30472)); i_44491++) {
        int32_t virt_group_id_44492 = phys_group_id_44490 + i_44491 *
                sext_i64_i32(num_groups_30472);
        int32_t flat_segment_id_44493 = squot32(virt_group_id_44492,
                                                sext_i64_i32(groups_per_segment_44472));
        int64_t global_tid_44494 = srem64(sext_i32_i64(virt_group_id_44492) *
                                          segred_group_sizze_30471 +
                                          sext_i32_i64(local_tid_44482),
                                          segred_group_sizze_30471 *
                                          groups_per_segment_44472);
        int64_t gtid_30320 = squot64(sext_i32_i64(flat_segment_id_44493),
                                     i32_res_27792 * i32_res_27792);
        int64_t gtid_30321 = squot64(sext_i32_i64(flat_segment_id_44493) -
                                     squot64(sext_i32_i64(flat_segment_id_44493),
                                             i32_res_27792 * i32_res_27792) *
                                     (i32_res_27792 * i32_res_27792),
                                     i32_res_27792);
        int64_t gtid_30322 = sext_i32_i64(flat_segment_id_44493) -
                squot64(sext_i32_i64(flat_segment_id_44493), i32_res_27792 *
                        i32_res_27792) * (i32_res_27792 * i32_res_27792) -
                squot64(sext_i32_i64(flat_segment_id_44493) -
                        squot64(sext_i32_i64(flat_segment_id_44493),
                                i32_res_27792 * i32_res_27792) *
                        (i32_res_27792 * i32_res_27792), i32_res_27792) *
                i32_res_27792;
        int64_t gtid_30332;
        float x_acc_44495;
        int64_t chunk_sizze_44496;
        
        chunk_sizze_44496 = smin64(elements_per_thread_44473,
                                   sdiv_up64(i32_res_27786 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44494)),
                                             threads_per_segment_44476));
        
        float x_30475;
        float x_30476;
        
        // neutral-initialise the accumulators
        {
            x_acc_44495 = 0.0F;
        }
        for (int64_t i_44500 = 0; i_44500 < chunk_sizze_44496; i_44500++) {
            gtid_30332 = sext_i32_i64(sext_i64_i32(global_tid_44494)) +
                threads_per_segment_44476 * i_44500;
            // apply map function
            {
                float x_30481 = ((__global
                                  float *) images_mem_43123)[gtid_30320 *
                                                             N_27774 +
                                                             gtid_30332];
                float x_30482 = ((__global
                                  float *) binop_p_mem_43132)[gtid_30321 *
                                                              N_27772 +
                                                              gtid_30332];
                float x_30483 = ((__global float *) mem_43273)[gtid_30322 *
                                                               N_27772 +
                                                               gtid_30332];
                float x_30484 = x_30482 * x_30483;
                bool isnan_res_30485;
                
                isnan_res_30485 = futrts_isnan32(x_30481);
                
                float y_30486;
                
                if (isnan_res_30485) {
                    y_30486 = 0.0F;
                } else {
                    y_30486 = 1.0F;
                }
                
                float defunc_2_f_res_30487 = x_30484 * y_30486;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_30475 = x_acc_44495;
                }
                // load new values
                {
                    x_30476 = defunc_2_f_res_30487;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_30477 = x_30475 + x_30476;
                    
                    // store in accumulator
                    {
                        x_acc_44495 = defunc_1_op_res_30477;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_30475 = x_acc_44495;
            ((__local
              float *) red_arr_mem_44486)[sext_i32_i64(local_tid_44482)] =
                x_30475;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44501;
        int32_t skip_waves_44502;
        
        skip_waves_44502 = 1;
        
        float x_44497;
        float x_44498;
        
        offset_44501 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44482,
                      sext_i64_i32(segred_group_sizze_30471))) {
                x_44497 = ((__local
                            float *) red_arr_mem_44486)[sext_i32_i64(local_tid_44482 +
                                                        offset_44501)];
            }
        }
        offset_44501 = 1;
        while (slt32(offset_44501, wave_sizze_44484)) {
            if (slt32(local_tid_44482 + offset_44501,
                      sext_i64_i32(segred_group_sizze_30471)) &&
                ((local_tid_44482 - squot32(local_tid_44482, wave_sizze_44484) *
                  wave_sizze_44484) & (2 * offset_44501 - 1)) == 0) {
                // read array element
                {
                    x_44498 = ((volatile __local
                                float *) red_arr_mem_44486)[sext_i32_i64(local_tid_44482 +
                                                            offset_44501)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44499 = x_44497 + x_44498;
                    
                    x_44497 = defunc_1_op_res_44499;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44486)[sext_i32_i64(local_tid_44482)] =
                        x_44497;
                }
            }
            offset_44501 *= 2;
        }
        while (slt32(skip_waves_44502,
                     squot32(sext_i64_i32(segred_group_sizze_30471) +
                             wave_sizze_44484 - 1, wave_sizze_44484))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44501 = skip_waves_44502 * wave_sizze_44484;
            if (slt32(local_tid_44482 + offset_44501,
                      sext_i64_i32(segred_group_sizze_30471)) &&
                ((local_tid_44482 - squot32(local_tid_44482, wave_sizze_44484) *
                  wave_sizze_44484) == 0 && (squot32(local_tid_44482,
                                                     wave_sizze_44484) & (2 *
                                                                          skip_waves_44502 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44498 = ((__local
                                float *) red_arr_mem_44486)[sext_i32_i64(local_tid_44482 +
                                                            offset_44501)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44499 = x_44497 + x_44498;
                    
                    x_44497 = defunc_1_op_res_44499;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44486)[sext_i32_i64(local_tid_44482)] =
                        x_44497;
                }
            }
            skip_waves_44502 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44482) == 0) {
                x_acc_44495 = x_44497;
            }
        }
        if (groups_per_segment_44472 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44482 == 0) {
                    ((__global float *) mem_43278)[gtid_30320 * (i32_res_27792 *
                                                                 i32_res_27792) +
                                                   gtid_30321 * i32_res_27792 +
                                                   gtid_30322] = x_acc_44495;
                }
            }
        } else {
            int32_t old_counter_44503;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44482 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44477)[sext_i32_i64(virt_group_id_44492) *
                                                        segred_group_sizze_30471] =
                        x_acc_44495;
                    mem_fence_global();
                    old_counter_44503 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44479)[sext_i32_i64(srem32(flat_segment_id_44493,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44488)[0] =
                        old_counter_44503 == groups_per_segment_44472 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44504;
            
            is_last_group_44504 = ((__local bool *) sync_arr_mem_44488)[0];
            if (is_last_group_44504) {
                if (local_tid_44482 == 0) {
                    old_counter_44503 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44479)[sext_i32_i64(srem32(flat_segment_id_44493,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_44472));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44505 =
                            sdiv_up64(groups_per_segment_44472,
                                      segred_group_sizze_30471);
                    
                    x_30475 = 0.0F;
                    for (int64_t i_44506 = 0; i_44506 < read_per_thread_44505;
                         i_44506++) {
                        int64_t group_res_id_44507 =
                                sext_i32_i64(local_tid_44482) *
                                read_per_thread_44505 + i_44506;
                        int64_t index_of_group_res_44508 =
                                sext_i32_i64(flat_segment_id_44493) *
                                groups_per_segment_44472 + group_res_id_44507;
                        
                        if (slt64(group_res_id_44507,
                                  groups_per_segment_44472)) {
                            x_30476 = ((__global
                                        float *) group_res_arr_mem_44477)[index_of_group_res_44508 *
                                                                          segred_group_sizze_30471];
                            
                            float defunc_1_op_res_30477;
                            
                            defunc_1_op_res_30477 = x_30475 + x_30476;
                            x_30475 = defunc_1_op_res_30477;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44486)[sext_i32_i64(local_tid_44482)] =
                    x_30475;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44509;
                    int32_t skip_waves_44510;
                    
                    skip_waves_44510 = 1;
                    
                    float x_44497;
                    float x_44498;
                    
                    offset_44509 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44482,
                                  sext_i64_i32(segred_group_sizze_30471))) {
                            x_44497 = ((__local
                                        float *) red_arr_mem_44486)[sext_i32_i64(local_tid_44482 +
                                                                    offset_44509)];
                        }
                    }
                    offset_44509 = 1;
                    while (slt32(offset_44509, wave_sizze_44484)) {
                        if (slt32(local_tid_44482 + offset_44509,
                                  sext_i64_i32(segred_group_sizze_30471)) &&
                            ((local_tid_44482 - squot32(local_tid_44482,
                                                        wave_sizze_44484) *
                              wave_sizze_44484) & (2 * offset_44509 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44498 = ((volatile __local
                                            float *) red_arr_mem_44486)[sext_i32_i64(local_tid_44482 +
                                                                        offset_44509)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44499 = x_44497 + x_44498;
                                
                                x_44497 = defunc_1_op_res_44499;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44486)[sext_i32_i64(local_tid_44482)] =
                                    x_44497;
                            }
                        }
                        offset_44509 *= 2;
                    }
                    while (slt32(skip_waves_44510,
                                 squot32(sext_i64_i32(segred_group_sizze_30471) +
                                         wave_sizze_44484 - 1,
                                         wave_sizze_44484))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44509 = skip_waves_44510 * wave_sizze_44484;
                        if (slt32(local_tid_44482 + offset_44509,
                                  sext_i64_i32(segred_group_sizze_30471)) &&
                            ((local_tid_44482 - squot32(local_tid_44482,
                                                        wave_sizze_44484) *
                              wave_sizze_44484) == 0 &&
                             (squot32(local_tid_44482, wave_sizze_44484) & (2 *
                                                                            skip_waves_44510 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44498 = ((__local
                                            float *) red_arr_mem_44486)[sext_i32_i64(local_tid_44482 +
                                                                        offset_44509)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44499 = x_44497 + x_44498;
                                
                                x_44497 = defunc_1_op_res_44499;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44486)[sext_i32_i64(local_tid_44482)] =
                                    x_44497;
                            }
                        }
                        skip_waves_44510 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44482 == 0) {
                            ((__global float *) mem_43278)[gtid_30320 *
                                                           (i32_res_27792 *
                                                            i32_res_27792) +
                                                           gtid_30321 *
                                                           i32_res_27792 +
                                                           gtid_30322] =
                                x_44497;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_30471
}
__kernel void mainDetailedzisegred_large_31380(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44684_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44682_backing_aligned_1,
                                               int64_t N_27772, int64_t N_27774,
                                               int64_t i32_res_27786,
                                               int64_t i32_res_27792,
                                               int64_t num_groups_31433,
                                               __global
                                               unsigned char *images_mem_43123,
                                               __global
                                               unsigned char *binop_p_mem_43132,
                                               __global
                                               unsigned char *mem_43585,
                                               int64_t groups_per_segment_44668,
                                               int64_t elements_per_thread_44669,
                                               int64_t virt_num_groups_44670,
                                               int64_t threads_per_segment_44672,
                                               __global
                                               unsigned char *group_res_arr_mem_44673,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44675)
{
    #define segred_group_sizze_31432 (mainDetailedzisegred_group_sizze_31374)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44684_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44684_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44682_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44682_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44677;
    int32_t local_tid_44678;
    int64_t group_sizze_44681;
    int32_t wave_sizze_44680;
    int32_t group_tid_44679;
    
    global_tid_44677 = get_global_id(0);
    local_tid_44678 = get_local_id(0);
    group_sizze_44681 = get_local_size(0);
    wave_sizze_44680 = LOCKSTEP_WIDTH;
    group_tid_44679 = get_group_id(0);
    
    int32_t phys_tid_31380;
    
    phys_tid_31380 = global_tid_44677;
    
    __local char *red_arr_mem_44682;
    
    red_arr_mem_44682 = (__local char *) red_arr_mem_44682_backing_0;
    
    __local char *sync_arr_mem_44684;
    
    sync_arr_mem_44684 = (__local char *) sync_arr_mem_44684_backing_1;
    
    int32_t phys_group_id_44686;
    
    phys_group_id_44686 = get_group_id(0);
    for (int32_t i_44687 = 0; i_44687 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44670) - phys_group_id_44686,
                   sext_i64_i32(num_groups_31433)); i_44687++) {
        int32_t virt_group_id_44688 = phys_group_id_44686 + i_44687 *
                sext_i64_i32(num_groups_31433);
        int32_t flat_segment_id_44689 = squot32(virt_group_id_44688,
                                                sext_i64_i32(groups_per_segment_44668));
        int64_t global_tid_44690 = srem64(sext_i32_i64(virt_group_id_44688) *
                                          segred_group_sizze_31432 +
                                          sext_i32_i64(local_tid_44678),
                                          segred_group_sizze_31432 *
                                          groups_per_segment_44668);
        int64_t gtid_31369 = squot64(sext_i32_i64(flat_segment_id_44689),
                                     i32_res_27792);
        int64_t gtid_31370 = sext_i32_i64(flat_segment_id_44689) -
                squot64(sext_i32_i64(flat_segment_id_44689), i32_res_27792) *
                i32_res_27792;
        int64_t gtid_31379;
        float x_acc_44691;
        int64_t chunk_sizze_44692;
        
        chunk_sizze_44692 = smin64(elements_per_thread_44669,
                                   sdiv_up64(i32_res_27786 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44690)),
                                             threads_per_segment_44672));
        
        float x_31436;
        float x_31437;
        
        // neutral-initialise the accumulators
        {
            x_acc_44691 = 0.0F;
        }
        for (int64_t i_44696 = 0; i_44696 < chunk_sizze_44692; i_44696++) {
            gtid_31379 = sext_i32_i64(sext_i64_i32(global_tid_44690)) +
                threads_per_segment_44672 * i_44696;
            // apply map function
            {
                float x_31442 = ((__global
                                  float *) images_mem_43123)[gtid_31369 *
                                                             N_27774 +
                                                             gtid_31379];
                bool isnan_res_31443;
                
                isnan_res_31443 = futrts_isnan32(x_31442);
                
                float defunc_1_f_res_31444;
                
                if (isnan_res_31443) {
                    defunc_1_f_res_31444 = 0.0F;
                } else {
                    float x_31441 = ((__global
                                      float *) binop_p_mem_43132)[gtid_31370 *
                                                                  N_27772 +
                                                                  gtid_31379];
                    float defunc_1_f_res_f_res_31445 = x_31441 * x_31442;
                    
                    defunc_1_f_res_31444 = defunc_1_f_res_f_res_31445;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_31436 = x_acc_44691;
                }
                // load new values
                {
                    x_31437 = defunc_1_f_res_31444;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_31438 = x_31436 + x_31437;
                    
                    // store in accumulator
                    {
                        x_acc_44691 = defunc_1_op_res_31438;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_31436 = x_acc_44691;
            ((__local
              float *) red_arr_mem_44682)[sext_i32_i64(local_tid_44678)] =
                x_31436;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44697;
        int32_t skip_waves_44698;
        
        skip_waves_44698 = 1;
        
        float x_44693;
        float x_44694;
        
        offset_44697 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44678,
                      sext_i64_i32(segred_group_sizze_31432))) {
                x_44693 = ((__local
                            float *) red_arr_mem_44682)[sext_i32_i64(local_tid_44678 +
                                                        offset_44697)];
            }
        }
        offset_44697 = 1;
        while (slt32(offset_44697, wave_sizze_44680)) {
            if (slt32(local_tid_44678 + offset_44697,
                      sext_i64_i32(segred_group_sizze_31432)) &&
                ((local_tid_44678 - squot32(local_tid_44678, wave_sizze_44680) *
                  wave_sizze_44680) & (2 * offset_44697 - 1)) == 0) {
                // read array element
                {
                    x_44694 = ((volatile __local
                                float *) red_arr_mem_44682)[sext_i32_i64(local_tid_44678 +
                                                            offset_44697)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44695 = x_44693 + x_44694;
                    
                    x_44693 = defunc_1_op_res_44695;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44682)[sext_i32_i64(local_tid_44678)] =
                        x_44693;
                }
            }
            offset_44697 *= 2;
        }
        while (slt32(skip_waves_44698,
                     squot32(sext_i64_i32(segred_group_sizze_31432) +
                             wave_sizze_44680 - 1, wave_sizze_44680))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44697 = skip_waves_44698 * wave_sizze_44680;
            if (slt32(local_tid_44678 + offset_44697,
                      sext_i64_i32(segred_group_sizze_31432)) &&
                ((local_tid_44678 - squot32(local_tid_44678, wave_sizze_44680) *
                  wave_sizze_44680) == 0 && (squot32(local_tid_44678,
                                                     wave_sizze_44680) & (2 *
                                                                          skip_waves_44698 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44694 = ((__local
                                float *) red_arr_mem_44682)[sext_i32_i64(local_tid_44678 +
                                                            offset_44697)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44695 = x_44693 + x_44694;
                    
                    x_44693 = defunc_1_op_res_44695;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44682)[sext_i32_i64(local_tid_44678)] =
                        x_44693;
                }
            }
            skip_waves_44698 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44678) == 0) {
                x_acc_44691 = x_44693;
            }
        }
        if (groups_per_segment_44668 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44678 == 0) {
                    ((__global float *) mem_43585)[gtid_31369 * i32_res_27792 +
                                                   gtid_31370] = x_acc_44691;
                }
            }
        } else {
            int32_t old_counter_44699;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44678 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44673)[sext_i32_i64(virt_group_id_44688) *
                                                        segred_group_sizze_31432] =
                        x_acc_44691;
                    mem_fence_global();
                    old_counter_44699 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44675)[sext_i32_i64(srem32(flat_segment_id_44689,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44684)[0] =
                        old_counter_44699 == groups_per_segment_44668 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44700;
            
            is_last_group_44700 = ((__local bool *) sync_arr_mem_44684)[0];
            if (is_last_group_44700) {
                if (local_tid_44678 == 0) {
                    old_counter_44699 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44675)[sext_i32_i64(srem32(flat_segment_id_44689,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_44668));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44701 =
                            sdiv_up64(groups_per_segment_44668,
                                      segred_group_sizze_31432);
                    
                    x_31436 = 0.0F;
                    for (int64_t i_44702 = 0; i_44702 < read_per_thread_44701;
                         i_44702++) {
                        int64_t group_res_id_44703 =
                                sext_i32_i64(local_tid_44678) *
                                read_per_thread_44701 + i_44702;
                        int64_t index_of_group_res_44704 =
                                sext_i32_i64(flat_segment_id_44689) *
                                groups_per_segment_44668 + group_res_id_44703;
                        
                        if (slt64(group_res_id_44703,
                                  groups_per_segment_44668)) {
                            x_31437 = ((__global
                                        float *) group_res_arr_mem_44673)[index_of_group_res_44704 *
                                                                          segred_group_sizze_31432];
                            
                            float defunc_1_op_res_31438;
                            
                            defunc_1_op_res_31438 = x_31436 + x_31437;
                            x_31436 = defunc_1_op_res_31438;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44682)[sext_i32_i64(local_tid_44678)] =
                    x_31436;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44705;
                    int32_t skip_waves_44706;
                    
                    skip_waves_44706 = 1;
                    
                    float x_44693;
                    float x_44694;
                    
                    offset_44705 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44678,
                                  sext_i64_i32(segred_group_sizze_31432))) {
                            x_44693 = ((__local
                                        float *) red_arr_mem_44682)[sext_i32_i64(local_tid_44678 +
                                                                    offset_44705)];
                        }
                    }
                    offset_44705 = 1;
                    while (slt32(offset_44705, wave_sizze_44680)) {
                        if (slt32(local_tid_44678 + offset_44705,
                                  sext_i64_i32(segred_group_sizze_31432)) &&
                            ((local_tid_44678 - squot32(local_tid_44678,
                                                        wave_sizze_44680) *
                              wave_sizze_44680) & (2 * offset_44705 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44694 = ((volatile __local
                                            float *) red_arr_mem_44682)[sext_i32_i64(local_tid_44678 +
                                                                        offset_44705)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44695 = x_44693 + x_44694;
                                
                                x_44693 = defunc_1_op_res_44695;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44682)[sext_i32_i64(local_tid_44678)] =
                                    x_44693;
                            }
                        }
                        offset_44705 *= 2;
                    }
                    while (slt32(skip_waves_44706,
                                 squot32(sext_i64_i32(segred_group_sizze_31432) +
                                         wave_sizze_44680 - 1,
                                         wave_sizze_44680))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44705 = skip_waves_44706 * wave_sizze_44680;
                        if (slt32(local_tid_44678 + offset_44705,
                                  sext_i64_i32(segred_group_sizze_31432)) &&
                            ((local_tid_44678 - squot32(local_tid_44678,
                                                        wave_sizze_44680) *
                              wave_sizze_44680) == 0 &&
                             (squot32(local_tid_44678, wave_sizze_44680) & (2 *
                                                                            skip_waves_44706 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44694 = ((__local
                                            float *) red_arr_mem_44682)[sext_i32_i64(local_tid_44678 +
                                                                        offset_44705)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44695 = x_44693 + x_44694;
                                
                                x_44693 = defunc_1_op_res_44695;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44682)[sext_i32_i64(local_tid_44678)] =
                                    x_44693;
                            }
                        }
                        skip_waves_44706 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44678 == 0) {
                            ((__global float *) mem_43585)[gtid_31369 *
                                                           i32_res_27792 +
                                                           gtid_31370] =
                                x_44693;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31432
}
__kernel void mainDetailedzisegred_large_31517(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44772_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44770_backing_aligned_1,
                                               int64_t i32_res_27792,
                                               int64_t num_groups_31566,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43370,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43591,
                                               __global
                                               unsigned char *mem_43651,
                                               int64_t groups_per_segment_44756,
                                               int64_t elements_per_thread_44757,
                                               int64_t virt_num_groups_44758,
                                               int64_t threads_per_segment_44760,
                                               __global
                                               unsigned char *group_res_arr_mem_44761,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44763)
{
    #define segred_group_sizze_31565 (mainDetailedzisegred_group_sizze_31511)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44772_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44772_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44770_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44770_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44765;
    int32_t local_tid_44766;
    int64_t group_sizze_44769;
    int32_t wave_sizze_44768;
    int32_t group_tid_44767;
    
    global_tid_44765 = get_global_id(0);
    local_tid_44766 = get_local_id(0);
    group_sizze_44769 = get_local_size(0);
    wave_sizze_44768 = LOCKSTEP_WIDTH;
    group_tid_44767 = get_group_id(0);
    
    int32_t phys_tid_31517;
    
    phys_tid_31517 = global_tid_44765;
    
    __local char *red_arr_mem_44770;
    
    red_arr_mem_44770 = (__local char *) red_arr_mem_44770_backing_0;
    
    __local char *sync_arr_mem_44772;
    
    sync_arr_mem_44772 = (__local char *) sync_arr_mem_44772_backing_1;
    
    int32_t phys_group_id_44774;
    
    phys_group_id_44774 = get_group_id(0);
    for (int32_t i_44775 = 0; i_44775 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44758) - phys_group_id_44774,
                   sext_i64_i32(num_groups_31566)); i_44775++) {
        int32_t virt_group_id_44776 = phys_group_id_44774 + i_44775 *
                sext_i64_i32(num_groups_31566);
        int32_t flat_segment_id_44777 = squot32(virt_group_id_44776,
                                                sext_i64_i32(groups_per_segment_44756));
        int64_t global_tid_44778 = srem64(sext_i32_i64(virt_group_id_44776) *
                                          segred_group_sizze_31565 +
                                          sext_i32_i64(local_tid_44766),
                                          segred_group_sizze_31565 *
                                          groups_per_segment_44756);
        int64_t gtid_31506 = squot64(sext_i32_i64(flat_segment_id_44777),
                                     i32_res_27792);
        int64_t gtid_31507 = sext_i32_i64(flat_segment_id_44777) -
                squot64(sext_i32_i64(flat_segment_id_44777), i32_res_27792) *
                i32_res_27792;
        int64_t gtid_31516;
        float x_acc_44779;
        int64_t chunk_sizze_44780;
        
        chunk_sizze_44780 = smin64(elements_per_thread_44757,
                                   sdiv_up64(i32_res_27792 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44778)),
                                             threads_per_segment_44760));
        
        float x_31569;
        float x_31570;
        
        // neutral-initialise the accumulators
        {
            x_acc_44779 = 0.0F;
        }
        for (int64_t i_44784 = 0; i_44784 < chunk_sizze_44780; i_44784++) {
            gtid_31516 = sext_i32_i64(sext_i64_i32(global_tid_44778)) +
                threads_per_segment_44760 * i_44784;
            // apply map function
            {
                float x_31575 = ((__global
                                  float *) defunc_3_map_res_mem_43591)[gtid_31506 *
                                                                       i32_res_27792 +
                                                                       gtid_31516];
                float x_31576 = ((__global
                                  float *) defunc_3_map_res_mem_43370)[gtid_31506 *
                                                                       (i32_res_27792 *
                                                                        i32_res_27792) +
                                                                       gtid_31507 *
                                                                       i32_res_27792 +
                                                                       gtid_31516];
                float defunc_1_f_res_31577 = x_31575 * x_31576;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_31569 = x_acc_44779;
                }
                // load new values
                {
                    x_31570 = defunc_1_f_res_31577;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_31571 = x_31569 + x_31570;
                    
                    // store in accumulator
                    {
                        x_acc_44779 = defunc_1_op_res_31571;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_31569 = x_acc_44779;
            ((__local
              float *) red_arr_mem_44770)[sext_i32_i64(local_tid_44766)] =
                x_31569;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44785;
        int32_t skip_waves_44786;
        
        skip_waves_44786 = 1;
        
        float x_44781;
        float x_44782;
        
        offset_44785 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44766,
                      sext_i64_i32(segred_group_sizze_31565))) {
                x_44781 = ((__local
                            float *) red_arr_mem_44770)[sext_i32_i64(local_tid_44766 +
                                                        offset_44785)];
            }
        }
        offset_44785 = 1;
        while (slt32(offset_44785, wave_sizze_44768)) {
            if (slt32(local_tid_44766 + offset_44785,
                      sext_i64_i32(segred_group_sizze_31565)) &&
                ((local_tid_44766 - squot32(local_tid_44766, wave_sizze_44768) *
                  wave_sizze_44768) & (2 * offset_44785 - 1)) == 0) {
                // read array element
                {
                    x_44782 = ((volatile __local
                                float *) red_arr_mem_44770)[sext_i32_i64(local_tid_44766 +
                                                            offset_44785)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44783 = x_44781 + x_44782;
                    
                    x_44781 = defunc_1_op_res_44783;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44770)[sext_i32_i64(local_tid_44766)] =
                        x_44781;
                }
            }
            offset_44785 *= 2;
        }
        while (slt32(skip_waves_44786,
                     squot32(sext_i64_i32(segred_group_sizze_31565) +
                             wave_sizze_44768 - 1, wave_sizze_44768))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44785 = skip_waves_44786 * wave_sizze_44768;
            if (slt32(local_tid_44766 + offset_44785,
                      sext_i64_i32(segred_group_sizze_31565)) &&
                ((local_tid_44766 - squot32(local_tid_44766, wave_sizze_44768) *
                  wave_sizze_44768) == 0 && (squot32(local_tid_44766,
                                                     wave_sizze_44768) & (2 *
                                                                          skip_waves_44786 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44782 = ((__local
                                float *) red_arr_mem_44770)[sext_i32_i64(local_tid_44766 +
                                                            offset_44785)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44783 = x_44781 + x_44782;
                    
                    x_44781 = defunc_1_op_res_44783;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44770)[sext_i32_i64(local_tid_44766)] =
                        x_44781;
                }
            }
            skip_waves_44786 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44766) == 0) {
                x_acc_44779 = x_44781;
            }
        }
        if (groups_per_segment_44756 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44766 == 0) {
                    ((__global float *) mem_43651)[gtid_31506 * i32_res_27792 +
                                                   gtid_31507] = x_acc_44779;
                }
            }
        } else {
            int32_t old_counter_44787;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44766 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44761)[sext_i32_i64(virt_group_id_44776) *
                                                        segred_group_sizze_31565] =
                        x_acc_44779;
                    mem_fence_global();
                    old_counter_44787 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44763)[sext_i32_i64(srem32(flat_segment_id_44777,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44772)[0] =
                        old_counter_44787 == groups_per_segment_44756 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44788;
            
            is_last_group_44788 = ((__local bool *) sync_arr_mem_44772)[0];
            if (is_last_group_44788) {
                if (local_tid_44766 == 0) {
                    old_counter_44787 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44763)[sext_i32_i64(srem32(flat_segment_id_44777,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_44756));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44789 =
                            sdiv_up64(groups_per_segment_44756,
                                      segred_group_sizze_31565);
                    
                    x_31569 = 0.0F;
                    for (int64_t i_44790 = 0; i_44790 < read_per_thread_44789;
                         i_44790++) {
                        int64_t group_res_id_44791 =
                                sext_i32_i64(local_tid_44766) *
                                read_per_thread_44789 + i_44790;
                        int64_t index_of_group_res_44792 =
                                sext_i32_i64(flat_segment_id_44777) *
                                groups_per_segment_44756 + group_res_id_44791;
                        
                        if (slt64(group_res_id_44791,
                                  groups_per_segment_44756)) {
                            x_31570 = ((__global
                                        float *) group_res_arr_mem_44761)[index_of_group_res_44792 *
                                                                          segred_group_sizze_31565];
                            
                            float defunc_1_op_res_31571;
                            
                            defunc_1_op_res_31571 = x_31569 + x_31570;
                            x_31569 = defunc_1_op_res_31571;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44770)[sext_i32_i64(local_tid_44766)] =
                    x_31569;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44793;
                    int32_t skip_waves_44794;
                    
                    skip_waves_44794 = 1;
                    
                    float x_44781;
                    float x_44782;
                    
                    offset_44793 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44766,
                                  sext_i64_i32(segred_group_sizze_31565))) {
                            x_44781 = ((__local
                                        float *) red_arr_mem_44770)[sext_i32_i64(local_tid_44766 +
                                                                    offset_44793)];
                        }
                    }
                    offset_44793 = 1;
                    while (slt32(offset_44793, wave_sizze_44768)) {
                        if (slt32(local_tid_44766 + offset_44793,
                                  sext_i64_i32(segred_group_sizze_31565)) &&
                            ((local_tid_44766 - squot32(local_tid_44766,
                                                        wave_sizze_44768) *
                              wave_sizze_44768) & (2 * offset_44793 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44782 = ((volatile __local
                                            float *) red_arr_mem_44770)[sext_i32_i64(local_tid_44766 +
                                                                        offset_44793)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44783 = x_44781 + x_44782;
                                
                                x_44781 = defunc_1_op_res_44783;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44770)[sext_i32_i64(local_tid_44766)] =
                                    x_44781;
                            }
                        }
                        offset_44793 *= 2;
                    }
                    while (slt32(skip_waves_44794,
                                 squot32(sext_i64_i32(segred_group_sizze_31565) +
                                         wave_sizze_44768 - 1,
                                         wave_sizze_44768))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44793 = skip_waves_44794 * wave_sizze_44768;
                        if (slt32(local_tid_44766 + offset_44793,
                                  sext_i64_i32(segred_group_sizze_31565)) &&
                            ((local_tid_44766 - squot32(local_tid_44766,
                                                        wave_sizze_44768) *
                              wave_sizze_44768) == 0 &&
                             (squot32(local_tid_44766, wave_sizze_44768) & (2 *
                                                                            skip_waves_44794 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44782 = ((__local
                                            float *) red_arr_mem_44770)[sext_i32_i64(local_tid_44766 +
                                                                        offset_44793)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44783 = x_44781 + x_44782;
                                
                                x_44781 = defunc_1_op_res_44783;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44770)[sext_i32_i64(local_tid_44766)] =
                                    x_44781;
                            }
                        }
                        skip_waves_44794 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44766 == 0) {
                            ((__global float *) mem_43651)[gtid_31506 *
                                                           i32_res_27792 +
                                                           gtid_31507] =
                                x_44781;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31565
}
__kernel void mainDetailedzisegred_large_31647(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44904_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44902_backing_aligned_1,
                                               int64_t N_27772,
                                               int64_t i32_res_27792,
                                               int64_t num_groups_31694,
                                               __global
                                               unsigned char *mem_43139,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43657,
                                               __global
                                               unsigned char *mem_43875,
                                               int64_t groups_per_segment_44888,
                                               int64_t elements_per_thread_44889,
                                               int64_t virt_num_groups_44890,
                                               int64_t threads_per_segment_44892,
                                               __global
                                               unsigned char *group_res_arr_mem_44893,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44895)
{
    #define segred_group_sizze_31693 (mainDetailedzisegred_group_sizze_31641)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44904_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44904_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44902_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44902_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44897;
    int32_t local_tid_44898;
    int64_t group_sizze_44901;
    int32_t wave_sizze_44900;
    int32_t group_tid_44899;
    
    global_tid_44897 = get_global_id(0);
    local_tid_44898 = get_local_id(0);
    group_sizze_44901 = get_local_size(0);
    wave_sizze_44900 = LOCKSTEP_WIDTH;
    group_tid_44899 = get_group_id(0);
    
    int32_t phys_tid_31647;
    
    phys_tid_31647 = global_tid_44897;
    
    __local char *red_arr_mem_44902;
    
    red_arr_mem_44902 = (__local char *) red_arr_mem_44902_backing_0;
    
    __local char *sync_arr_mem_44904;
    
    sync_arr_mem_44904 = (__local char *) sync_arr_mem_44904_backing_1;
    
    int32_t phys_group_id_44906;
    
    phys_group_id_44906 = get_group_id(0);
    for (int32_t i_44907 = 0; i_44907 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44890) - phys_group_id_44906,
                   sext_i64_i32(num_groups_31694)); i_44907++) {
        int32_t virt_group_id_44908 = phys_group_id_44906 + i_44907 *
                sext_i64_i32(num_groups_31694);
        int32_t flat_segment_id_44909 = squot32(virt_group_id_44908,
                                                sext_i64_i32(groups_per_segment_44888));
        int64_t global_tid_44910 = srem64(sext_i32_i64(virt_group_id_44908) *
                                          segred_group_sizze_31693 +
                                          sext_i32_i64(local_tid_44898),
                                          segred_group_sizze_31693 *
                                          groups_per_segment_44888);
        int64_t gtid_31636 = squot64(sext_i32_i64(flat_segment_id_44909),
                                     N_27772);
        int64_t gtid_31637 = sext_i32_i64(flat_segment_id_44909) -
                squot64(sext_i32_i64(flat_segment_id_44909), N_27772) * N_27772;
        int64_t gtid_31646;
        float x_acc_44911;
        int64_t chunk_sizze_44912;
        
        chunk_sizze_44912 = smin64(elements_per_thread_44889,
                                   sdiv_up64(i32_res_27792 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44910)),
                                             threads_per_segment_44892));
        
        float x_31697;
        float x_31698;
        
        // neutral-initialise the accumulators
        {
            x_acc_44911 = 0.0F;
        }
        for (int64_t i_44916 = 0; i_44916 < chunk_sizze_44912; i_44916++) {
            gtid_31646 = sext_i32_i64(sext_i64_i32(global_tid_44910)) +
                threads_per_segment_44892 * i_44916;
            // apply map function
            {
                float x_31702 = ((__global
                                  float *) defunc_4_map_res_mem_43657)[gtid_31636 *
                                                                       i32_res_27792 +
                                                                       gtid_31646];
                float x_31703 = ((__global float *) mem_43139)[gtid_31637 *
                                                               i32_res_27792 +
                                                               gtid_31646];
                float defunc_1_f_res_31704 = x_31702 * x_31703;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_31697 = x_acc_44911;
                }
                // load new values
                {
                    x_31698 = defunc_1_f_res_31704;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_31699 = x_31697 + x_31698;
                    
                    // store in accumulator
                    {
                        x_acc_44911 = defunc_1_op_res_31699;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_31697 = x_acc_44911;
            ((__local
              float *) red_arr_mem_44902)[sext_i32_i64(local_tid_44898)] =
                x_31697;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44917;
        int32_t skip_waves_44918;
        
        skip_waves_44918 = 1;
        
        float x_44913;
        float x_44914;
        
        offset_44917 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44898,
                      sext_i64_i32(segred_group_sizze_31693))) {
                x_44913 = ((__local
                            float *) red_arr_mem_44902)[sext_i32_i64(local_tid_44898 +
                                                        offset_44917)];
            }
        }
        offset_44917 = 1;
        while (slt32(offset_44917, wave_sizze_44900)) {
            if (slt32(local_tid_44898 + offset_44917,
                      sext_i64_i32(segred_group_sizze_31693)) &&
                ((local_tid_44898 - squot32(local_tid_44898, wave_sizze_44900) *
                  wave_sizze_44900) & (2 * offset_44917 - 1)) == 0) {
                // read array element
                {
                    x_44914 = ((volatile __local
                                float *) red_arr_mem_44902)[sext_i32_i64(local_tid_44898 +
                                                            offset_44917)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44915 = x_44913 + x_44914;
                    
                    x_44913 = defunc_1_op_res_44915;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44902)[sext_i32_i64(local_tid_44898)] =
                        x_44913;
                }
            }
            offset_44917 *= 2;
        }
        while (slt32(skip_waves_44918,
                     squot32(sext_i64_i32(segred_group_sizze_31693) +
                             wave_sizze_44900 - 1, wave_sizze_44900))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44917 = skip_waves_44918 * wave_sizze_44900;
            if (slt32(local_tid_44898 + offset_44917,
                      sext_i64_i32(segred_group_sizze_31693)) &&
                ((local_tid_44898 - squot32(local_tid_44898, wave_sizze_44900) *
                  wave_sizze_44900) == 0 && (squot32(local_tid_44898,
                                                     wave_sizze_44900) & (2 *
                                                                          skip_waves_44918 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44914 = ((__local
                                float *) red_arr_mem_44902)[sext_i32_i64(local_tid_44898 +
                                                            offset_44917)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44915 = x_44913 + x_44914;
                    
                    x_44913 = defunc_1_op_res_44915;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44902)[sext_i32_i64(local_tid_44898)] =
                        x_44913;
                }
            }
            skip_waves_44918 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44898) == 0) {
                x_acc_44911 = x_44913;
            }
        }
        if (groups_per_segment_44888 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44898 == 0) {
                    ((__global float *) mem_43875)[gtid_31636 * N_27772 +
                                                   gtid_31637] = x_acc_44911;
                }
            }
        } else {
            int32_t old_counter_44919;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44898 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44893)[sext_i32_i64(virt_group_id_44908) *
                                                        segred_group_sizze_31693] =
                        x_acc_44911;
                    mem_fence_global();
                    old_counter_44919 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44895)[sext_i32_i64(srem32(flat_segment_id_44909,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44904)[0] =
                        old_counter_44919 == groups_per_segment_44888 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44920;
            
            is_last_group_44920 = ((__local bool *) sync_arr_mem_44904)[0];
            if (is_last_group_44920) {
                if (local_tid_44898 == 0) {
                    old_counter_44919 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44895)[sext_i32_i64(srem32(flat_segment_id_44909,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_44888));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44921 =
                            sdiv_up64(groups_per_segment_44888,
                                      segred_group_sizze_31693);
                    
                    x_31697 = 0.0F;
                    for (int64_t i_44922 = 0; i_44922 < read_per_thread_44921;
                         i_44922++) {
                        int64_t group_res_id_44923 =
                                sext_i32_i64(local_tid_44898) *
                                read_per_thread_44921 + i_44922;
                        int64_t index_of_group_res_44924 =
                                sext_i32_i64(flat_segment_id_44909) *
                                groups_per_segment_44888 + group_res_id_44923;
                        
                        if (slt64(group_res_id_44923,
                                  groups_per_segment_44888)) {
                            x_31698 = ((__global
                                        float *) group_res_arr_mem_44893)[index_of_group_res_44924 *
                                                                          segred_group_sizze_31693];
                            
                            float defunc_1_op_res_31699;
                            
                            defunc_1_op_res_31699 = x_31697 + x_31698;
                            x_31697 = defunc_1_op_res_31699;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44902)[sext_i32_i64(local_tid_44898)] =
                    x_31697;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44925;
                    int32_t skip_waves_44926;
                    
                    skip_waves_44926 = 1;
                    
                    float x_44913;
                    float x_44914;
                    
                    offset_44925 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44898,
                                  sext_i64_i32(segred_group_sizze_31693))) {
                            x_44913 = ((__local
                                        float *) red_arr_mem_44902)[sext_i32_i64(local_tid_44898 +
                                                                    offset_44925)];
                        }
                    }
                    offset_44925 = 1;
                    while (slt32(offset_44925, wave_sizze_44900)) {
                        if (slt32(local_tid_44898 + offset_44925,
                                  sext_i64_i32(segred_group_sizze_31693)) &&
                            ((local_tid_44898 - squot32(local_tid_44898,
                                                        wave_sizze_44900) *
                              wave_sizze_44900) & (2 * offset_44925 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44914 = ((volatile __local
                                            float *) red_arr_mem_44902)[sext_i32_i64(local_tid_44898 +
                                                                        offset_44925)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44915 = x_44913 + x_44914;
                                
                                x_44913 = defunc_1_op_res_44915;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44902)[sext_i32_i64(local_tid_44898)] =
                                    x_44913;
                            }
                        }
                        offset_44925 *= 2;
                    }
                    while (slt32(skip_waves_44926,
                                 squot32(sext_i64_i32(segred_group_sizze_31693) +
                                         wave_sizze_44900 - 1,
                                         wave_sizze_44900))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44925 = skip_waves_44926 * wave_sizze_44900;
                        if (slt32(local_tid_44898 + offset_44925,
                                  sext_i64_i32(segred_group_sizze_31693)) &&
                            ((local_tid_44898 - squot32(local_tid_44898,
                                                        wave_sizze_44900) *
                              wave_sizze_44900) == 0 &&
                             (squot32(local_tid_44898, wave_sizze_44900) & (2 *
                                                                            skip_waves_44926 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44914 = ((__local
                                            float *) red_arr_mem_44902)[sext_i32_i64(local_tid_44898 +
                                                                        offset_44925)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44915 = x_44913 + x_44914;
                                
                                x_44913 = defunc_1_op_res_44915;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44902)[sext_i32_i64(local_tid_44898)] =
                                    x_44913;
                            }
                        }
                        skip_waves_44926 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44898 == 0) {
                            ((__global float *) mem_43875)[gtid_31636 *
                                                           N_27772 +
                                                           gtid_31637] =
                                x_44913;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31693
}
__kernel void mainDetailedzisegred_large_32213(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_45158_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45156_backing_aligned_1,
                                               int64_t N_27772,
                                               int64_t i32_res_27786,
                                               int64_t num_groups_32260,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43919,
                                               __global
                                               unsigned char *mem_43970,
                                               __global
                                               unsigned char *mem_43973,
                                               int64_t groups_per_segment_45142,
                                               int64_t elements_per_thread_45143,
                                               int64_t virt_num_groups_45144,
                                               int64_t threads_per_segment_45146,
                                               __global
                                               unsigned char *group_res_arr_mem_45147,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_45149)
{
    #define segred_group_sizze_32259 (mainDetailedzisegred_group_sizze_32207)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45158_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45158_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45156_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45156_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45151;
    int32_t local_tid_45152;
    int64_t group_sizze_45155;
    int32_t wave_sizze_45154;
    int32_t group_tid_45153;
    
    global_tid_45151 = get_global_id(0);
    local_tid_45152 = get_local_id(0);
    group_sizze_45155 = get_local_size(0);
    wave_sizze_45154 = LOCKSTEP_WIDTH;
    group_tid_45153 = get_group_id(0);
    
    int32_t phys_tid_32213;
    
    phys_tid_32213 = global_tid_45151;
    
    __local char *red_arr_mem_45156;
    
    red_arr_mem_45156 = (__local char *) red_arr_mem_45156_backing_0;
    
    __local char *sync_arr_mem_45158;
    
    sync_arr_mem_45158 = (__local char *) sync_arr_mem_45158_backing_1;
    
    int32_t phys_group_id_45160;
    
    phys_group_id_45160 = get_group_id(0);
    for (int32_t i_45161 = 0; i_45161 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45144) - phys_group_id_45160,
                   sext_i64_i32(num_groups_32260)); i_45161++) {
        int32_t virt_group_id_45162 = phys_group_id_45160 + i_45161 *
                sext_i64_i32(num_groups_32260);
        int32_t flat_segment_id_45163 = squot32(virt_group_id_45162,
                                                sext_i64_i32(groups_per_segment_45142));
        int64_t global_tid_45164 = srem64(sext_i32_i64(virt_group_id_45162) *
                                          segred_group_sizze_32259 +
                                          sext_i32_i64(local_tid_45152),
                                          segred_group_sizze_32259 *
                                          groups_per_segment_45142);
        int64_t gtid_32204 = sext_i32_i64(flat_segment_id_45163);
        int64_t gtid_32212;
        float x_acc_45165;
        int64_t chunk_sizze_45166;
        
        chunk_sizze_45166 = smin64(elements_per_thread_45143,
                                   sdiv_up64(i32_res_27786 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45164)),
                                             threads_per_segment_45146));
        
        float x_32263;
        float x_32264;
        
        // neutral-initialise the accumulators
        {
            x_acc_45165 = 0.0F;
        }
        for (int64_t i_45170 = 0; i_45170 < chunk_sizze_45166; i_45170++) {
            gtid_32212 = sext_i32_i64(sext_i64_i32(global_tid_45164)) +
                threads_per_segment_45146 * i_45170;
            // apply map function
            {
                int32_t defunc_0_f_res_32267 = ((__global
                                                 int32_t *) mem_43970)[gtid_32204];
                int32_t index_primexp_41162 = sext_i64_i32(gtid_32212);
                bool cond_32269 = slt32(index_primexp_41162,
                                        defunc_0_f_res_32267);
                float defunc_0_f_res_32270;
                
                if (cond_32269) {
                    int64_t i_32271 = sext_i32_i64(index_primexp_41162);
                    float defunc_0_f_res_t_res_32272 = ((__global
                                                         float *) defunc_4_map_res_mem_43919)[gtid_32204 *
                                                                                              N_27772 +
                                                                                              i_32271];
                    
                    defunc_0_f_res_32270 = defunc_0_f_res_t_res_32272;
                } else {
                    defunc_0_f_res_32270 = 0.0F;
                }
                
                float defunc_0_f_res_32273 = defunc_0_f_res_32270 *
                      defunc_0_f_res_32270;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_32263 = x_acc_45165;
                }
                // load new values
                {
                    x_32264 = defunc_0_f_res_32273;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_32265 = x_32263 + x_32264;
                    
                    // store in accumulator
                    {
                        x_acc_45165 = defunc_1_op_res_32265;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_32263 = x_acc_45165;
            ((__local
              float *) red_arr_mem_45156)[sext_i32_i64(local_tid_45152)] =
                x_32263;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45171;
        int32_t skip_waves_45172;
        
        skip_waves_45172 = 1;
        
        float x_45167;
        float x_45168;
        
        offset_45171 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45152,
                      sext_i64_i32(segred_group_sizze_32259))) {
                x_45167 = ((__local
                            float *) red_arr_mem_45156)[sext_i32_i64(local_tid_45152 +
                                                        offset_45171)];
            }
        }
        offset_45171 = 1;
        while (slt32(offset_45171, wave_sizze_45154)) {
            if (slt32(local_tid_45152 + offset_45171,
                      sext_i64_i32(segred_group_sizze_32259)) &&
                ((local_tid_45152 - squot32(local_tid_45152, wave_sizze_45154) *
                  wave_sizze_45154) & (2 * offset_45171 - 1)) == 0) {
                // read array element
                {
                    x_45168 = ((volatile __local
                                float *) red_arr_mem_45156)[sext_i32_i64(local_tid_45152 +
                                                            offset_45171)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45169 = x_45167 + x_45168;
                    
                    x_45167 = defunc_1_op_res_45169;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45156)[sext_i32_i64(local_tid_45152)] =
                        x_45167;
                }
            }
            offset_45171 *= 2;
        }
        while (slt32(skip_waves_45172,
                     squot32(sext_i64_i32(segred_group_sizze_32259) +
                             wave_sizze_45154 - 1, wave_sizze_45154))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45171 = skip_waves_45172 * wave_sizze_45154;
            if (slt32(local_tid_45152 + offset_45171,
                      sext_i64_i32(segred_group_sizze_32259)) &&
                ((local_tid_45152 - squot32(local_tid_45152, wave_sizze_45154) *
                  wave_sizze_45154) == 0 && (squot32(local_tid_45152,
                                                     wave_sizze_45154) & (2 *
                                                                          skip_waves_45172 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45168 = ((__local
                                float *) red_arr_mem_45156)[sext_i32_i64(local_tid_45152 +
                                                            offset_45171)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45169 = x_45167 + x_45168;
                    
                    x_45167 = defunc_1_op_res_45169;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45156)[sext_i32_i64(local_tid_45152)] =
                        x_45167;
                }
            }
            skip_waves_45172 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45152) == 0) {
                x_acc_45165 = x_45167;
            }
        }
        if (groups_per_segment_45142 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45152 == 0) {
                    ((__global float *) mem_43973)[gtid_32204] = x_acc_45165;
                }
            }
        } else {
            int32_t old_counter_45173;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45152 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45147)[sext_i32_i64(virt_group_id_45162) *
                                                        segred_group_sizze_32259] =
                        x_acc_45165;
                    mem_fence_global();
                    old_counter_45173 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45149)[sext_i32_i64(srem32(flat_segment_id_45163,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45158)[0] =
                        old_counter_45173 == groups_per_segment_45142 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45174;
            
            is_last_group_45174 = ((__local bool *) sync_arr_mem_45158)[0];
            if (is_last_group_45174) {
                if (local_tid_45152 == 0) {
                    old_counter_45173 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45149)[sext_i32_i64(srem32(flat_segment_id_45163,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_45142));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45175 =
                            sdiv_up64(groups_per_segment_45142,
                                      segred_group_sizze_32259);
                    
                    x_32263 = 0.0F;
                    for (int64_t i_45176 = 0; i_45176 < read_per_thread_45175;
                         i_45176++) {
                        int64_t group_res_id_45177 =
                                sext_i32_i64(local_tid_45152) *
                                read_per_thread_45175 + i_45176;
                        int64_t index_of_group_res_45178 =
                                sext_i32_i64(flat_segment_id_45163) *
                                groups_per_segment_45142 + group_res_id_45177;
                        
                        if (slt64(group_res_id_45177,
                                  groups_per_segment_45142)) {
                            x_32264 = ((__global
                                        float *) group_res_arr_mem_45147)[index_of_group_res_45178 *
                                                                          segred_group_sizze_32259];
                            
                            float defunc_1_op_res_32265;
                            
                            defunc_1_op_res_32265 = x_32263 + x_32264;
                            x_32263 = defunc_1_op_res_32265;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45156)[sext_i32_i64(local_tid_45152)] =
                    x_32263;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45179;
                    int32_t skip_waves_45180;
                    
                    skip_waves_45180 = 1;
                    
                    float x_45167;
                    float x_45168;
                    
                    offset_45179 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45152,
                                  sext_i64_i32(segred_group_sizze_32259))) {
                            x_45167 = ((__local
                                        float *) red_arr_mem_45156)[sext_i32_i64(local_tid_45152 +
                                                                    offset_45179)];
                        }
                    }
                    offset_45179 = 1;
                    while (slt32(offset_45179, wave_sizze_45154)) {
                        if (slt32(local_tid_45152 + offset_45179,
                                  sext_i64_i32(segred_group_sizze_32259)) &&
                            ((local_tid_45152 - squot32(local_tid_45152,
                                                        wave_sizze_45154) *
                              wave_sizze_45154) & (2 * offset_45179 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45168 = ((volatile __local
                                            float *) red_arr_mem_45156)[sext_i32_i64(local_tid_45152 +
                                                                        offset_45179)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45169 = x_45167 + x_45168;
                                
                                x_45167 = defunc_1_op_res_45169;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45156)[sext_i32_i64(local_tid_45152)] =
                                    x_45167;
                            }
                        }
                        offset_45179 *= 2;
                    }
                    while (slt32(skip_waves_45180,
                                 squot32(sext_i64_i32(segred_group_sizze_32259) +
                                         wave_sizze_45154 - 1,
                                         wave_sizze_45154))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45179 = skip_waves_45180 * wave_sizze_45154;
                        if (slt32(local_tid_45152 + offset_45179,
                                  sext_i64_i32(segred_group_sizze_32259)) &&
                            ((local_tid_45152 - squot32(local_tid_45152,
                                                        wave_sizze_45154) *
                              wave_sizze_45154) == 0 &&
                             (squot32(local_tid_45152, wave_sizze_45154) & (2 *
                                                                            skip_waves_45180 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45168 = ((__local
                                            float *) red_arr_mem_45156)[sext_i32_i64(local_tid_45152 +
                                                                        offset_45179)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45169 = x_45167 + x_45168;
                                
                                x_45167 = defunc_1_op_res_45169;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45156)[sext_i32_i64(local_tid_45152)] =
                                    x_45167;
                            }
                        }
                        skip_waves_45180 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45152 == 0) {
                            ((__global float *) mem_43973)[gtid_32204] =
                                x_45167;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32259
}
__kernel void mainDetailedzisegred_large_32234(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_45098_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45096_backing_aligned_1,
                                               int64_t N_27774,
                                               int64_t i32_res_27786,
                                               int64_t num_groups_32246,
                                               __global
                                               unsigned char *images_mem_43123,
                                               __global
                                               unsigned char *mem_43970,
                                               int64_t groups_per_segment_45082,
                                               int64_t elements_per_thread_45083,
                                               int64_t virt_num_groups_45084,
                                               int64_t threads_per_segment_45086,
                                               __global
                                               unsigned char *group_res_arr_mem_45087,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_45089)
{
    #define segred_group_sizze_32245 (mainDetailedzisegred_group_sizze_32228)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45098_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45098_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45096_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45096_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45091;
    int32_t local_tid_45092;
    int64_t group_sizze_45095;
    int32_t wave_sizze_45094;
    int32_t group_tid_45093;
    
    global_tid_45091 = get_global_id(0);
    local_tid_45092 = get_local_id(0);
    group_sizze_45095 = get_local_size(0);
    wave_sizze_45094 = LOCKSTEP_WIDTH;
    group_tid_45093 = get_group_id(0);
    
    int32_t phys_tid_32234;
    
    phys_tid_32234 = global_tid_45091;
    
    __local char *red_arr_mem_45096;
    
    red_arr_mem_45096 = (__local char *) red_arr_mem_45096_backing_0;
    
    __local char *sync_arr_mem_45098;
    
    sync_arr_mem_45098 = (__local char *) sync_arr_mem_45098_backing_1;
    
    int32_t phys_group_id_45100;
    
    phys_group_id_45100 = get_group_id(0);
    for (int32_t i_45101 = 0; i_45101 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45084) - phys_group_id_45100,
                   sext_i64_i32(num_groups_32246)); i_45101++) {
        int32_t virt_group_id_45102 = phys_group_id_45100 + i_45101 *
                sext_i64_i32(num_groups_32246);
        int32_t flat_segment_id_45103 = squot32(virt_group_id_45102,
                                                sext_i64_i32(groups_per_segment_45082));
        int64_t global_tid_45104 = srem64(sext_i32_i64(virt_group_id_45102) *
                                          segred_group_sizze_32245 +
                                          sext_i32_i64(local_tid_45092),
                                          segred_group_sizze_32245 *
                                          groups_per_segment_45082);
        int64_t gtid_32225 = sext_i32_i64(flat_segment_id_45103);
        int64_t gtid_32233;
        int32_t x_acc_45105;
        int64_t chunk_sizze_45106;
        
        chunk_sizze_45106 = smin64(elements_per_thread_45083,
                                   sdiv_up64(i32_res_27786 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45104)),
                                             threads_per_segment_45086));
        
        int32_t x_32249;
        int32_t x_32250;
        
        // neutral-initialise the accumulators
        {
            x_acc_45105 = 0;
        }
        for (int64_t i_45110 = 0; i_45110 < chunk_sizze_45106; i_45110++) {
            gtid_32233 = sext_i32_i64(sext_i64_i32(global_tid_45104)) +
                threads_per_segment_45086 * i_45110;
            // apply map function
            {
                float x_32253 = ((__global
                                  float *) images_mem_43123)[gtid_32225 *
                                                             N_27774 +
                                                             gtid_32233];
                bool isnan_res_32254;
                
                isnan_res_32254 = futrts_isnan32(x_32253);
                
                bool cond_32255 = !isnan_res_32254;
                int32_t defunc_0_f_res_32256 = btoi_bool_i32(cond_32255);
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_32249 = x_acc_45105;
                }
                // load new values
                {
                    x_32250 = defunc_0_f_res_32256;
                }
                // apply reduction operator
                {
                    int32_t defunc_1_op_res_32251 = add32(x_32249, x_32250);
                    
                    // store in accumulator
                    {
                        x_acc_45105 = defunc_1_op_res_32251;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_32249 = x_acc_45105;
            ((__local
              int32_t *) red_arr_mem_45096)[sext_i32_i64(local_tid_45092)] =
                x_32249;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45111;
        int32_t skip_waves_45112;
        
        skip_waves_45112 = 1;
        
        int32_t x_45107;
        int32_t x_45108;
        
        offset_45111 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45092,
                      sext_i64_i32(segred_group_sizze_32245))) {
                x_45107 = ((__local
                            int32_t *) red_arr_mem_45096)[sext_i32_i64(local_tid_45092 +
                                                          offset_45111)];
            }
        }
        offset_45111 = 1;
        while (slt32(offset_45111, wave_sizze_45094)) {
            if (slt32(local_tid_45092 + offset_45111,
                      sext_i64_i32(segred_group_sizze_32245)) &&
                ((local_tid_45092 - squot32(local_tid_45092, wave_sizze_45094) *
                  wave_sizze_45094) & (2 * offset_45111 - 1)) == 0) {
                // read array element
                {
                    x_45108 = ((volatile __local
                                int32_t *) red_arr_mem_45096)[sext_i32_i64(local_tid_45092 +
                                                              offset_45111)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_45109 = add32(x_45107, x_45108);
                    
                    x_45107 = defunc_1_op_res_45109;
                }
                // write result of operation
                {
                    ((volatile __local
                      int32_t *) red_arr_mem_45096)[sext_i32_i64(local_tid_45092)] =
                        x_45107;
                }
            }
            offset_45111 *= 2;
        }
        while (slt32(skip_waves_45112,
                     squot32(sext_i64_i32(segred_group_sizze_32245) +
                             wave_sizze_45094 - 1, wave_sizze_45094))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45111 = skip_waves_45112 * wave_sizze_45094;
            if (slt32(local_tid_45092 + offset_45111,
                      sext_i64_i32(segred_group_sizze_32245)) &&
                ((local_tid_45092 - squot32(local_tid_45092, wave_sizze_45094) *
                  wave_sizze_45094) == 0 && (squot32(local_tid_45092,
                                                     wave_sizze_45094) & (2 *
                                                                          skip_waves_45112 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45108 = ((__local
                                int32_t *) red_arr_mem_45096)[sext_i32_i64(local_tid_45092 +
                                                              offset_45111)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_45109 = add32(x_45107, x_45108);
                    
                    x_45107 = defunc_1_op_res_45109;
                }
                // write result of operation
                {
                    ((__local
                      int32_t *) red_arr_mem_45096)[sext_i32_i64(local_tid_45092)] =
                        x_45107;
                }
            }
            skip_waves_45112 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45092) == 0) {
                x_acc_45105 = x_45107;
            }
        }
        if (groups_per_segment_45082 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45092 == 0) {
                    ((__global int32_t *) mem_43970)[gtid_32225] = x_acc_45105;
                }
            }
        } else {
            int32_t old_counter_45113;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45092 == 0) {
                    ((__global
                      int32_t *) group_res_arr_mem_45087)[sext_i32_i64(virt_group_id_45102) *
                                                          segred_group_sizze_32245] =
                        x_acc_45105;
                    mem_fence_global();
                    old_counter_45113 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45089)[sext_i32_i64(srem32(flat_segment_id_45103,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45098)[0] =
                        old_counter_45113 == groups_per_segment_45082 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45114;
            
            is_last_group_45114 = ((__local bool *) sync_arr_mem_45098)[0];
            if (is_last_group_45114) {
                if (local_tid_45092 == 0) {
                    old_counter_45113 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45089)[sext_i32_i64(srem32(flat_segment_id_45103,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_45082));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45115 =
                            sdiv_up64(groups_per_segment_45082,
                                      segred_group_sizze_32245);
                    
                    x_32249 = 0;
                    for (int64_t i_45116 = 0; i_45116 < read_per_thread_45115;
                         i_45116++) {
                        int64_t group_res_id_45117 =
                                sext_i32_i64(local_tid_45092) *
                                read_per_thread_45115 + i_45116;
                        int64_t index_of_group_res_45118 =
                                sext_i32_i64(flat_segment_id_45103) *
                                groups_per_segment_45082 + group_res_id_45117;
                        
                        if (slt64(group_res_id_45117,
                                  groups_per_segment_45082)) {
                            x_32250 = ((__global
                                        int32_t *) group_res_arr_mem_45087)[index_of_group_res_45118 *
                                                                            segred_group_sizze_32245];
                            
                            int32_t defunc_1_op_res_32251;
                            
                            defunc_1_op_res_32251 = add32(x_32249, x_32250);
                            x_32249 = defunc_1_op_res_32251;
                        }
                    }
                }
                ((__local
                  int32_t *) red_arr_mem_45096)[sext_i32_i64(local_tid_45092)] =
                    x_32249;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45119;
                    int32_t skip_waves_45120;
                    
                    skip_waves_45120 = 1;
                    
                    int32_t x_45107;
                    int32_t x_45108;
                    
                    offset_45119 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45092,
                                  sext_i64_i32(segred_group_sizze_32245))) {
                            x_45107 = ((__local
                                        int32_t *) red_arr_mem_45096)[sext_i32_i64(local_tid_45092 +
                                                                      offset_45119)];
                        }
                    }
                    offset_45119 = 1;
                    while (slt32(offset_45119, wave_sizze_45094)) {
                        if (slt32(local_tid_45092 + offset_45119,
                                  sext_i64_i32(segred_group_sizze_32245)) &&
                            ((local_tid_45092 - squot32(local_tid_45092,
                                                        wave_sizze_45094) *
                              wave_sizze_45094) & (2 * offset_45119 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45108 = ((volatile __local
                                            int32_t *) red_arr_mem_45096)[sext_i32_i64(local_tid_45092 +
                                                                          offset_45119)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_45109 = add32(x_45107,
                                                                      x_45108);
                                
                                x_45107 = defunc_1_op_res_45109;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_45096)[sext_i32_i64(local_tid_45092)] =
                                    x_45107;
                            }
                        }
                        offset_45119 *= 2;
                    }
                    while (slt32(skip_waves_45120,
                                 squot32(sext_i64_i32(segred_group_sizze_32245) +
                                         wave_sizze_45094 - 1,
                                         wave_sizze_45094))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45119 = skip_waves_45120 * wave_sizze_45094;
                        if (slt32(local_tid_45092 + offset_45119,
                                  sext_i64_i32(segred_group_sizze_32245)) &&
                            ((local_tid_45092 - squot32(local_tid_45092,
                                                        wave_sizze_45094) *
                              wave_sizze_45094) == 0 &&
                             (squot32(local_tid_45092, wave_sizze_45094) & (2 *
                                                                            skip_waves_45120 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45108 = ((__local
                                            int32_t *) red_arr_mem_45096)[sext_i32_i64(local_tid_45092 +
                                                                          offset_45119)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_45109 = add32(x_45107,
                                                                      x_45108);
                                
                                x_45107 = defunc_1_op_res_45109;
                            }
                            // write result of operation
                            {
                                ((__local
                                  int32_t *) red_arr_mem_45096)[sext_i32_i64(local_tid_45092)] =
                                    x_45107;
                            }
                        }
                        skip_waves_45120 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45092 == 0) {
                            ((__global int32_t *) mem_43970)[gtid_32225] =
                                x_45107;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32245
}
__kernel void mainDetailedzisegred_large_32385(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_45267_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45265_backing_aligned_1,
                                               int64_t N_27772,
                                               int64_t i32_res_28147,
                                               int64_t num_groups_32403,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43919,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43982,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43983,
                                               __global
                                               unsigned char *mem_44016,
                                               int64_t groups_per_segment_45251,
                                               int64_t elements_per_thread_45252,
                                               int64_t virt_num_groups_45253,
                                               int64_t threads_per_segment_45255,
                                               __global
                                               unsigned char *group_res_arr_mem_45256,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_45258)
{
    #define segred_group_sizze_32402 (mainDetailedzisegred_group_sizze_32379)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45267_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45267_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45265_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45265_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45260;
    int32_t local_tid_45261;
    int64_t group_sizze_45264;
    int32_t wave_sizze_45263;
    int32_t group_tid_45262;
    
    global_tid_45260 = get_global_id(0);
    local_tid_45261 = get_local_id(0);
    group_sizze_45264 = get_local_size(0);
    wave_sizze_45263 = LOCKSTEP_WIDTH;
    group_tid_45262 = get_group_id(0);
    
    int32_t phys_tid_32385;
    
    phys_tid_32385 = global_tid_45260;
    
    __local char *red_arr_mem_45265;
    
    red_arr_mem_45265 = (__local char *) red_arr_mem_45265_backing_0;
    
    __local char *sync_arr_mem_45267;
    
    sync_arr_mem_45267 = (__local char *) sync_arr_mem_45267_backing_1;
    
    int32_t phys_group_id_45269;
    
    phys_group_id_45269 = get_group_id(0);
    for (int32_t i_45270 = 0; i_45270 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45253) - phys_group_id_45269,
                   sext_i64_i32(num_groups_32403)); i_45270++) {
        int32_t virt_group_id_45271 = phys_group_id_45269 + i_45270 *
                sext_i64_i32(num_groups_32403);
        int32_t flat_segment_id_45272 = squot32(virt_group_id_45271,
                                                sext_i64_i32(groups_per_segment_45251));
        int64_t global_tid_45273 = srem64(sext_i32_i64(virt_group_id_45271) *
                                          segred_group_sizze_32402 +
                                          sext_i32_i64(local_tid_45261),
                                          segred_group_sizze_32402 *
                                          groups_per_segment_45251);
        int64_t gtid_32376 = sext_i32_i64(flat_segment_id_45272);
        int64_t gtid_32384;
        float x_acc_45274;
        int64_t chunk_sizze_45275;
        
        chunk_sizze_45275 = smin64(elements_per_thread_45252,
                                   sdiv_up64(i32_res_28147 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45273)),
                                             threads_per_segment_45255));
        
        float x_32406;
        float x_32407;
        
        // neutral-initialise the accumulators
        {
            x_acc_45274 = 0.0F;
        }
        for (int64_t i_45279 = 0; i_45279 < chunk_sizze_45275; i_45279++) {
            gtid_32384 = sext_i32_i64(sext_i64_i32(global_tid_45273)) +
                threads_per_segment_45255 * i_45279;
            // apply map function
            {
                int32_t x_32411 = ((__global
                                    int32_t *) defunc_3_map_res_mem_43982)[gtid_32376];
                int32_t index_primexp_41167 = sext_i64_i32(gtid_32384);
                bool cond_32413 = slt32(index_primexp_41167, x_32411);
                float defunc_0_f_res_32414;
                
                if (cond_32413) {
                    int32_t x_32410 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43983)[gtid_32376];
                    int32_t x_32415 = add32(x_32410, index_primexp_41167);
                    int32_t x_32416 = sub32(x_32415, x_32411);
                    int32_t i_32417 = add32(1, x_32416);
                    int64_t i_32418 = sext_i32_i64(i_32417);
                    float defunc_0_f_res_t_res_32419 = ((__global
                                                         float *) defunc_4_map_res_mem_43919)[gtid_32376 *
                                                                                              N_27772 +
                                                                                              i_32418];
                    
                    defunc_0_f_res_32414 = defunc_0_f_res_t_res_32419;
                } else {
                    defunc_0_f_res_32414 = 0.0F;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_32406 = x_acc_45274;
                }
                // load new values
                {
                    x_32407 = defunc_0_f_res_32414;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_32408 = x_32406 + x_32407;
                    
                    // store in accumulator
                    {
                        x_acc_45274 = defunc_1_op_res_32408;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_32406 = x_acc_45274;
            ((__local
              float *) red_arr_mem_45265)[sext_i32_i64(local_tid_45261)] =
                x_32406;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45280;
        int32_t skip_waves_45281;
        
        skip_waves_45281 = 1;
        
        float x_45276;
        float x_45277;
        
        offset_45280 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45261,
                      sext_i64_i32(segred_group_sizze_32402))) {
                x_45276 = ((__local
                            float *) red_arr_mem_45265)[sext_i32_i64(local_tid_45261 +
                                                        offset_45280)];
            }
        }
        offset_45280 = 1;
        while (slt32(offset_45280, wave_sizze_45263)) {
            if (slt32(local_tid_45261 + offset_45280,
                      sext_i64_i32(segred_group_sizze_32402)) &&
                ((local_tid_45261 - squot32(local_tid_45261, wave_sizze_45263) *
                  wave_sizze_45263) & (2 * offset_45280 - 1)) == 0) {
                // read array element
                {
                    x_45277 = ((volatile __local
                                float *) red_arr_mem_45265)[sext_i32_i64(local_tid_45261 +
                                                            offset_45280)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45278 = x_45276 + x_45277;
                    
                    x_45276 = defunc_1_op_res_45278;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45265)[sext_i32_i64(local_tid_45261)] =
                        x_45276;
                }
            }
            offset_45280 *= 2;
        }
        while (slt32(skip_waves_45281,
                     squot32(sext_i64_i32(segred_group_sizze_32402) +
                             wave_sizze_45263 - 1, wave_sizze_45263))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45280 = skip_waves_45281 * wave_sizze_45263;
            if (slt32(local_tid_45261 + offset_45280,
                      sext_i64_i32(segred_group_sizze_32402)) &&
                ((local_tid_45261 - squot32(local_tid_45261, wave_sizze_45263) *
                  wave_sizze_45263) == 0 && (squot32(local_tid_45261,
                                                     wave_sizze_45263) & (2 *
                                                                          skip_waves_45281 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45277 = ((__local
                                float *) red_arr_mem_45265)[sext_i32_i64(local_tid_45261 +
                                                            offset_45280)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45278 = x_45276 + x_45277;
                    
                    x_45276 = defunc_1_op_res_45278;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45265)[sext_i32_i64(local_tid_45261)] =
                        x_45276;
                }
            }
            skip_waves_45281 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45261) == 0) {
                x_acc_45274 = x_45276;
            }
        }
        if (groups_per_segment_45251 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45261 == 0) {
                    ((__global float *) mem_44016)[gtid_32376] = x_acc_45274;
                }
            }
        } else {
            int32_t old_counter_45282;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45261 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45256)[sext_i32_i64(virt_group_id_45271) *
                                                        segred_group_sizze_32402] =
                        x_acc_45274;
                    mem_fence_global();
                    old_counter_45282 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45258)[sext_i32_i64(srem32(flat_segment_id_45272,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45267)[0] =
                        old_counter_45282 == groups_per_segment_45251 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45283;
            
            is_last_group_45283 = ((__local bool *) sync_arr_mem_45267)[0];
            if (is_last_group_45283) {
                if (local_tid_45261 == 0) {
                    old_counter_45282 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45258)[sext_i32_i64(srem32(flat_segment_id_45272,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_45251));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45284 =
                            sdiv_up64(groups_per_segment_45251,
                                      segred_group_sizze_32402);
                    
                    x_32406 = 0.0F;
                    for (int64_t i_45285 = 0; i_45285 < read_per_thread_45284;
                         i_45285++) {
                        int64_t group_res_id_45286 =
                                sext_i32_i64(local_tid_45261) *
                                read_per_thread_45284 + i_45285;
                        int64_t index_of_group_res_45287 =
                                sext_i32_i64(flat_segment_id_45272) *
                                groups_per_segment_45251 + group_res_id_45286;
                        
                        if (slt64(group_res_id_45286,
                                  groups_per_segment_45251)) {
                            x_32407 = ((__global
                                        float *) group_res_arr_mem_45256)[index_of_group_res_45287 *
                                                                          segred_group_sizze_32402];
                            
                            float defunc_1_op_res_32408;
                            
                            defunc_1_op_res_32408 = x_32406 + x_32407;
                            x_32406 = defunc_1_op_res_32408;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45265)[sext_i32_i64(local_tid_45261)] =
                    x_32406;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45288;
                    int32_t skip_waves_45289;
                    
                    skip_waves_45289 = 1;
                    
                    float x_45276;
                    float x_45277;
                    
                    offset_45288 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45261,
                                  sext_i64_i32(segred_group_sizze_32402))) {
                            x_45276 = ((__local
                                        float *) red_arr_mem_45265)[sext_i32_i64(local_tid_45261 +
                                                                    offset_45288)];
                        }
                    }
                    offset_45288 = 1;
                    while (slt32(offset_45288, wave_sizze_45263)) {
                        if (slt32(local_tid_45261 + offset_45288,
                                  sext_i64_i32(segred_group_sizze_32402)) &&
                            ((local_tid_45261 - squot32(local_tid_45261,
                                                        wave_sizze_45263) *
                              wave_sizze_45263) & (2 * offset_45288 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45277 = ((volatile __local
                                            float *) red_arr_mem_45265)[sext_i32_i64(local_tid_45261 +
                                                                        offset_45288)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45278 = x_45276 + x_45277;
                                
                                x_45276 = defunc_1_op_res_45278;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45265)[sext_i32_i64(local_tid_45261)] =
                                    x_45276;
                            }
                        }
                        offset_45288 *= 2;
                    }
                    while (slt32(skip_waves_45289,
                                 squot32(sext_i64_i32(segred_group_sizze_32402) +
                                         wave_sizze_45263 - 1,
                                         wave_sizze_45263))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45288 = skip_waves_45289 * wave_sizze_45263;
                        if (slt32(local_tid_45261 + offset_45288,
                                  sext_i64_i32(segred_group_sizze_32402)) &&
                            ((local_tid_45261 - squot32(local_tid_45261,
                                                        wave_sizze_45263) *
                              wave_sizze_45263) == 0 &&
                             (squot32(local_tid_45261, wave_sizze_45263) & (2 *
                                                                            skip_waves_45289 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45277 = ((__local
                                            float *) red_arr_mem_45265)[sext_i32_i64(local_tid_45261 +
                                                                        offset_45288)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45278 = x_45276 + x_45277;
                                
                                x_45276 = defunc_1_op_res_45278;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45265)[sext_i32_i64(local_tid_45261)] =
                                    x_45276;
                            }
                        }
                        skip_waves_45289 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45261 == 0) {
                            ((__global float *) mem_44016)[gtid_32376] =
                                x_45276;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32402
}
__kernel void mainDetailedzisegred_large_33557(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_45468_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45466_backing_aligned_1,
                                               __local volatile
                                               int64_t *red_arr_mem_45464_backing_aligned_2,
                                               __local volatile
                                               int64_t *red_arr_mem_45462_backing_aligned_3,
                                               int64_t iota32_arg_28172,
                                               int64_t num_groups_33728,
                                               __global
                                               unsigned char *mem_44022,
                                               __global
                                               unsigned char *mem_44089,
                                               __global
                                               unsigned char *mem_44091,
                                               __global
                                               unsigned char *mem_44095,
                                               __global
                                               unsigned char *mem_44098,
                                               __global
                                               unsigned char *mem_44100,
                                               __global
                                               unsigned char *mem_44102,
                                               __global
                                               unsigned char *mem_44105,
                                               int64_t groups_per_segment_45444,
                                               int64_t elements_per_thread_45445,
                                               int64_t virt_num_groups_45446,
                                               __global
                                               unsigned char *group_res_arr_mem_45449,
                                               __global
                                               unsigned char *group_res_arr_mem_45451,
                                               __global
                                               unsigned char *group_res_arr_mem_45453,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_45455)
{
    #define segred_group_sizze_33727 (mainDetailedzisegred_group_sizze_33551)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45468_backing_3 =
                          (__local volatile
                           char *) sync_arr_mem_45468_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45466_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45466_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45464_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45464_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_45462_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45462_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45457;
    int32_t local_tid_45458;
    int64_t group_sizze_45461;
    int32_t wave_sizze_45460;
    int32_t group_tid_45459;
    
    global_tid_45457 = get_global_id(0);
    local_tid_45458 = get_local_id(0);
    group_sizze_45461 = get_local_size(0);
    wave_sizze_45460 = LOCKSTEP_WIDTH;
    group_tid_45459 = get_group_id(0);
    
    int32_t phys_tid_33557;
    
    phys_tid_33557 = global_tid_45457;
    
    __local char *red_arr_mem_45462;
    
    red_arr_mem_45462 = (__local char *) red_arr_mem_45462_backing_0;
    
    __local char *red_arr_mem_45464;
    
    red_arr_mem_45464 = (__local char *) red_arr_mem_45464_backing_1;
    
    __local char *red_arr_mem_45466;
    
    red_arr_mem_45466 = (__local char *) red_arr_mem_45466_backing_2;
    
    __local char *sync_arr_mem_45468;
    
    sync_arr_mem_45468 = (__local char *) sync_arr_mem_45468_backing_3;
    
    int32_t phys_group_id_45470;
    
    phys_group_id_45470 = get_group_id(0);
    for (int32_t i_45471 = 0; i_45471 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45446) - phys_group_id_45470,
                   sext_i64_i32(num_groups_33728)); i_45471++) {
        int32_t virt_group_id_45472 = phys_group_id_45470 + i_45471 *
                sext_i64_i32(num_groups_33728);
        int32_t flat_segment_id_45473 = squot32(virt_group_id_45472,
                                                sext_i64_i32(groups_per_segment_45444));
        int64_t global_tid_45474 = srem64(sext_i32_i64(virt_group_id_45472) *
                                          segred_group_sizze_33727 +
                                          sext_i32_i64(local_tid_45458),
                                          segred_group_sizze_33727 *
                                          groups_per_segment_45444);
        int64_t gtid_33548 = sext_i32_i64(flat_segment_id_45473);
        int64_t gtid_33556;
        bool x_acc_45475;
        int32_t x_acc_45476;
        float x_acc_45477;
        int64_t chunk_sizze_45478;
        int64_t starting_point_45479;
        
        starting_point_45479 = sext_i32_i64(sext_i64_i32(global_tid_45474)) *
            elements_per_thread_45445;
        
        int64_t remaining_elements_45480;
        
        remaining_elements_45480 = iota32_arg_28172 - starting_point_45479;
        if (sle64(remaining_elements_45480, 0) || sle64(iota32_arg_28172,
                                                        starting_point_45479)) {
            chunk_sizze_45478 = 0;
        } else {
            if (slt64(iota32_arg_28172,
                      (sext_i32_i64(sext_i64_i32(global_tid_45474)) + 1) *
                      elements_per_thread_45445)) {
                chunk_sizze_45478 = iota32_arg_28172 -
                    sext_i32_i64(sext_i64_i32(global_tid_45474)) *
                    elements_per_thread_45445;
            } else {
                chunk_sizze_45478 = elements_per_thread_45445;
            }
        }
        
        bool x_33734;
        int32_t x_33735;
        float x_33736;
        bool x_33737;
        int32_t x_33738;
        float x_33739;
        
        // neutral-initialise the accumulators
        {
            x_acc_45475 = 0;
            x_acc_45476 = -1;
            x_acc_45477 = 0.0F;
        }
        for (int64_t i_45495 = 0; i_45495 < elements_per_thread_45445;
             i_45495++) {
            gtid_33556 = sext_i32_i64(local_tid_45458) +
                (sext_i32_i64(squot32(sext_i64_i32(global_tid_45474),
                                      sext_i64_i32(segred_group_sizze_33727))) *
                 elements_per_thread_45445 + i_45495) *
                segred_group_sizze_33727;
            if (slt64(gtid_33556, iota32_arg_28172)) {
                // apply map function
                {
                    int32_t y_33748 = ((__global
                                        int32_t *) mem_44091)[gtid_33548];
                    float y_33749 = ((__global float *) mem_44089)[gtid_33548];
                    float x_33753 = ((__global float *) mem_44095)[gtid_33548 *
                                                                   iota32_arg_28172 +
                                                                   gtid_33556];
                    float x_33754 = ((__global float *) mem_44022)[gtid_33556];
                    int32_t index_primexp_41189 = sext_i64_i32(gtid_33556);
                    float defunc_0_f_res_33757 = x_33753 / y_33749;
                    bool cond_33758 = slt32(index_primexp_41189, y_33748);
                    bool isnan_res_33759;
                    
                    isnan_res_33759 = futrts_isnan32(defunc_0_f_res_33757);
                    
                    bool cond_t_res_33760 = !isnan_res_33759;
                    bool x_33761 = cond_33758 && cond_t_res_33760;
                    float abs_res_33762 = (float) fabs(defunc_0_f_res_33757);
                    bool defunc_2_f_res_t_res_33763 = x_33754 < abs_res_33762;
                    bool x_33764 = x_33761 && defunc_2_f_res_t_res_33763;
                    float defunc_1_f_res_33765;
                    
                    if (cond_33758) {
                        defunc_1_f_res_33765 = defunc_0_f_res_33757;
                    } else {
                        defunc_1_f_res_33765 = 0.0F;
                    }
                    // save map-out results
                    {
                        ((__global float *) mem_44105)[gtid_33548 *
                                                       iota32_arg_28172 +
                                                       gtid_33556] =
                            defunc_0_f_res_33757;
                    }
                    // load accumulator
                    {
                        x_33734 = x_acc_45475;
                        x_33735 = x_acc_45476;
                        x_33736 = x_acc_45477;
                    }
                    // load new values
                    {
                        x_33737 = x_33764;
                        x_33738 = index_primexp_41189;
                        x_33739 = defunc_1_f_res_33765;
                    }
                    // apply reduction operator
                    {
                        bool defunc_1_op_res_33740;
                        int32_t defunc_1_op_res_33741;
                        
                        if (x_33734) {
                            defunc_1_op_res_33740 = x_33734;
                            defunc_1_op_res_33741 = x_33735;
                        } else {
                            bool x_33742 = x_33737 && x_33737;
                            bool x_33743 = !x_33737;
                            bool y_33744 = x_33734 && x_33743;
                            bool defunc_1_op_res_f_res_33745 = x_33742 ||
                                 y_33744;
                            int32_t defunc_1_op_res_f_res_33746;
                            
                            if (x_33737) {
                                defunc_1_op_res_f_res_33746 = x_33738;
                            } else {
                                defunc_1_op_res_f_res_33746 = x_33735;
                            }
                            defunc_1_op_res_33740 = defunc_1_op_res_f_res_33745;
                            defunc_1_op_res_33741 = defunc_1_op_res_f_res_33746;
                        }
                        
                        float defunc_1_op_res_33747 = x_33736 + x_33739;
                        
                        // store in accumulator
                        {
                            x_acc_45475 = defunc_1_op_res_33740;
                            x_acc_45476 = defunc_1_op_res_33741;
                            x_acc_45477 = defunc_1_op_res_33747;
                        }
                    }
                }
            }
            // to reduce current chunk, first store our result in memory
            {
                x_33734 = x_acc_45475;
                x_33735 = x_acc_45476;
                x_33736 = x_acc_45477;
                ((__local
                  bool *) red_arr_mem_45462)[sext_i32_i64(local_tid_45458)] =
                    x_33734;
                ((__local
                  int32_t *) red_arr_mem_45464)[sext_i32_i64(local_tid_45458)] =
                    x_33735;
                ((__local
                  float *) red_arr_mem_45466)[sext_i32_i64(local_tid_45458)] =
                    x_33736;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t offset_45496;
            int32_t skip_waves_45497;
            
            skip_waves_45497 = 1;
            
            bool x_45481;
            int32_t x_45482;
            float x_45483;
            bool x_45484;
            int32_t x_45485;
            float x_45486;
            
            offset_45496 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_45458,
                          sext_i64_i32(segred_group_sizze_33727))) {
                    x_45481 = ((__local
                                bool *) red_arr_mem_45462)[sext_i32_i64(local_tid_45458 +
                                                           offset_45496)];
                    x_45482 = ((__local
                                int32_t *) red_arr_mem_45464)[sext_i32_i64(local_tid_45458 +
                                                              offset_45496)];
                    x_45483 = ((__local
                                float *) red_arr_mem_45466)[sext_i32_i64(local_tid_45458 +
                                                            offset_45496)];
                }
            }
            offset_45496 = 1;
            while (slt32(offset_45496, wave_sizze_45460)) {
                if (slt32(local_tid_45458 + offset_45496,
                          sext_i64_i32(segred_group_sizze_33727)) &&
                    ((local_tid_45458 - squot32(local_tid_45458,
                                                wave_sizze_45460) *
                      wave_sizze_45460) & (2 * offset_45496 - 1)) == 0) {
                    // read array element
                    {
                        x_45484 = ((volatile __local
                                    bool *) red_arr_mem_45462)[sext_i32_i64(local_tid_45458 +
                                                               offset_45496)];
                        x_45485 = ((volatile __local
                                    int32_t *) red_arr_mem_45464)[sext_i32_i64(local_tid_45458 +
                                                                  offset_45496)];
                        x_45486 = ((volatile __local
                                    float *) red_arr_mem_45466)[sext_i32_i64(local_tid_45458 +
                                                                offset_45496)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_45487;
                        int32_t defunc_1_op_res_45488;
                        
                        if (x_45481) {
                            defunc_1_op_res_45487 = x_45481;
                            defunc_1_op_res_45488 = x_45482;
                        } else {
                            bool x_45489 = x_45484 && x_45484;
                            bool x_45490 = !x_45484;
                            bool y_45491 = x_45481 && x_45490;
                            bool defunc_1_op_res_f_res_45492 = x_45489 ||
                                 y_45491;
                            int32_t defunc_1_op_res_f_res_45493;
                            
                            if (x_45484) {
                                defunc_1_op_res_f_res_45493 = x_45485;
                            } else {
                                defunc_1_op_res_f_res_45493 = x_45482;
                            }
                            defunc_1_op_res_45487 = defunc_1_op_res_f_res_45492;
                            defunc_1_op_res_45488 = defunc_1_op_res_f_res_45493;
                        }
                        
                        float defunc_1_op_res_45494 = x_45483 + x_45486;
                        
                        x_45481 = defunc_1_op_res_45487;
                        x_45482 = defunc_1_op_res_45488;
                        x_45483 = defunc_1_op_res_45494;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          bool *) red_arr_mem_45462)[sext_i32_i64(local_tid_45458)] =
                            x_45481;
                        ((volatile __local
                          int32_t *) red_arr_mem_45464)[sext_i32_i64(local_tid_45458)] =
                            x_45482;
                        ((volatile __local
                          float *) red_arr_mem_45466)[sext_i32_i64(local_tid_45458)] =
                            x_45483;
                    }
                }
                offset_45496 *= 2;
            }
            while (slt32(skip_waves_45497,
                         squot32(sext_i64_i32(segred_group_sizze_33727) +
                                 wave_sizze_45460 - 1, wave_sizze_45460))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_45496 = skip_waves_45497 * wave_sizze_45460;
                if (slt32(local_tid_45458 + offset_45496,
                          sext_i64_i32(segred_group_sizze_33727)) &&
                    ((local_tid_45458 - squot32(local_tid_45458,
                                                wave_sizze_45460) *
                      wave_sizze_45460) == 0 && (squot32(local_tid_45458,
                                                         wave_sizze_45460) &
                                                 (2 * skip_waves_45497 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_45484 = ((__local
                                    bool *) red_arr_mem_45462)[sext_i32_i64(local_tid_45458 +
                                                               offset_45496)];
                        x_45485 = ((__local
                                    int32_t *) red_arr_mem_45464)[sext_i32_i64(local_tid_45458 +
                                                                  offset_45496)];
                        x_45486 = ((__local
                                    float *) red_arr_mem_45466)[sext_i32_i64(local_tid_45458 +
                                                                offset_45496)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_45487;
                        int32_t defunc_1_op_res_45488;
                        
                        if (x_45481) {
                            defunc_1_op_res_45487 = x_45481;
                            defunc_1_op_res_45488 = x_45482;
                        } else {
                            bool x_45489 = x_45484 && x_45484;
                            bool x_45490 = !x_45484;
                            bool y_45491 = x_45481 && x_45490;
                            bool defunc_1_op_res_f_res_45492 = x_45489 ||
                                 y_45491;
                            int32_t defunc_1_op_res_f_res_45493;
                            
                            if (x_45484) {
                                defunc_1_op_res_f_res_45493 = x_45485;
                            } else {
                                defunc_1_op_res_f_res_45493 = x_45482;
                            }
                            defunc_1_op_res_45487 = defunc_1_op_res_f_res_45492;
                            defunc_1_op_res_45488 = defunc_1_op_res_f_res_45493;
                        }
                        
                        float defunc_1_op_res_45494 = x_45483 + x_45486;
                        
                        x_45481 = defunc_1_op_res_45487;
                        x_45482 = defunc_1_op_res_45488;
                        x_45483 = defunc_1_op_res_45494;
                    }
                    // write result of operation
                    {
                        ((__local
                          bool *) red_arr_mem_45462)[sext_i32_i64(local_tid_45458)] =
                            x_45481;
                        ((__local
                          int32_t *) red_arr_mem_45464)[sext_i32_i64(local_tid_45458)] =
                            x_45482;
                        ((__local
                          float *) red_arr_mem_45466)[sext_i32_i64(local_tid_45458)] =
                            x_45483;
                    }
                }
                skip_waves_45497 *= 2;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread saves the result in accumulator
            {
                if (sext_i32_i64(local_tid_45458) == 0) {
                    x_acc_45475 = x_45481;
                    x_acc_45476 = x_45482;
                    x_acc_45477 = x_45483;
                }
            }
            // first thread keeps accumulator; others reset to neutral element
            {
                if (!(sext_i32_i64(local_tid_45458) == 0)) {
                    x_acc_45475 = 0;
                    x_acc_45476 = -1;
                    x_acc_45477 = 0.0F;
                }
            }
        }
        x_33734 = x_acc_45475;
        x_33735 = x_acc_45476;
        x_33736 = x_acc_45477;
        if (groups_per_segment_45444 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45458 == 0) {
                    ((__global bool *) mem_44098)[gtid_33548] = x_acc_45475;
                    ((__global int32_t *) mem_44100)[gtid_33548] = x_acc_45476;
                    ((__global float *) mem_44102)[gtid_33548] = x_acc_45477;
                }
            }
        } else {
            int32_t old_counter_45498;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45458 == 0) {
                    ((__global
                      bool *) group_res_arr_mem_45449)[sext_i32_i64(virt_group_id_45472) *
                                                       segred_group_sizze_33727] =
                        x_acc_45475;
                    ((__global
                      int32_t *) group_res_arr_mem_45451)[sext_i32_i64(virt_group_id_45472) *
                                                          segred_group_sizze_33727] =
                        x_acc_45476;
                    ((__global
                      float *) group_res_arr_mem_45453)[sext_i32_i64(virt_group_id_45472) *
                                                        segred_group_sizze_33727] =
                        x_acc_45477;
                    mem_fence_global();
                    old_counter_45498 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45455)[sext_i32_i64(srem32(flat_segment_id_45473,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45468)[0] =
                        old_counter_45498 == groups_per_segment_45444 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45499;
            
            is_last_group_45499 = ((__local bool *) sync_arr_mem_45468)[0];
            if (is_last_group_45499) {
                if (local_tid_45458 == 0) {
                    old_counter_45498 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45455)[sext_i32_i64(srem32(flat_segment_id_45473,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_45444));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45500 =
                            sdiv_up64(groups_per_segment_45444,
                                      segred_group_sizze_33727);
                    
                    x_33734 = 0;
                    x_33735 = -1;
                    x_33736 = 0.0F;
                    for (int64_t i_45501 = 0; i_45501 < read_per_thread_45500;
                         i_45501++) {
                        int64_t group_res_id_45502 =
                                sext_i32_i64(local_tid_45458) *
                                read_per_thread_45500 + i_45501;
                        int64_t index_of_group_res_45503 =
                                sext_i32_i64(flat_segment_id_45473) *
                                groups_per_segment_45444 + group_res_id_45502;
                        
                        if (slt64(group_res_id_45502,
                                  groups_per_segment_45444)) {
                            x_33737 = ((__global
                                        bool *) group_res_arr_mem_45449)[index_of_group_res_45503 *
                                                                         segred_group_sizze_33727];
                            x_33738 = ((__global
                                        int32_t *) group_res_arr_mem_45451)[index_of_group_res_45503 *
                                                                            segred_group_sizze_33727];
                            x_33739 = ((__global
                                        float *) group_res_arr_mem_45453)[index_of_group_res_45503 *
                                                                          segred_group_sizze_33727];
                            
                            bool defunc_1_op_res_33740;
                            int32_t defunc_1_op_res_33741;
                            
                            if (x_33734) {
                                defunc_1_op_res_33740 = x_33734;
                                defunc_1_op_res_33741 = x_33735;
                            } else {
                                bool x_33742 = x_33737 && x_33737;
                                bool x_33743 = !x_33737;
                                bool y_33744 = x_33734 && x_33743;
                                bool defunc_1_op_res_f_res_33745 = x_33742 ||
                                     y_33744;
                                int32_t defunc_1_op_res_f_res_33746;
                                
                                if (x_33737) {
                                    defunc_1_op_res_f_res_33746 = x_33738;
                                } else {
                                    defunc_1_op_res_f_res_33746 = x_33735;
                                }
                                defunc_1_op_res_33740 =
                                    defunc_1_op_res_f_res_33745;
                                defunc_1_op_res_33741 =
                                    defunc_1_op_res_f_res_33746;
                            }
                            
                            float defunc_1_op_res_33747 = x_33736 + x_33739;
                            
                            x_33734 = defunc_1_op_res_33740;
                            x_33735 = defunc_1_op_res_33741;
                            x_33736 = defunc_1_op_res_33747;
                        }
                    }
                }
                ((__local
                  bool *) red_arr_mem_45462)[sext_i32_i64(local_tid_45458)] =
                    x_33734;
                ((__local
                  int32_t *) red_arr_mem_45464)[sext_i32_i64(local_tid_45458)] =
                    x_33735;
                ((__local
                  float *) red_arr_mem_45466)[sext_i32_i64(local_tid_45458)] =
                    x_33736;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45504;
                    int32_t skip_waves_45505;
                    
                    skip_waves_45505 = 1;
                    
                    bool x_45481;
                    int32_t x_45482;
                    float x_45483;
                    bool x_45484;
                    int32_t x_45485;
                    float x_45486;
                    
                    offset_45504 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45458,
                                  sext_i64_i32(segred_group_sizze_33727))) {
                            x_45481 = ((__local
                                        bool *) red_arr_mem_45462)[sext_i32_i64(local_tid_45458 +
                                                                   offset_45504)];
                            x_45482 = ((__local
                                        int32_t *) red_arr_mem_45464)[sext_i32_i64(local_tid_45458 +
                                                                      offset_45504)];
                            x_45483 = ((__local
                                        float *) red_arr_mem_45466)[sext_i32_i64(local_tid_45458 +
                                                                    offset_45504)];
                        }
                    }
                    offset_45504 = 1;
                    while (slt32(offset_45504, wave_sizze_45460)) {
                        if (slt32(local_tid_45458 + offset_45504,
                                  sext_i64_i32(segred_group_sizze_33727)) &&
                            ((local_tid_45458 - squot32(local_tid_45458,
                                                        wave_sizze_45460) *
                              wave_sizze_45460) & (2 * offset_45504 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45484 = ((volatile __local
                                            bool *) red_arr_mem_45462)[sext_i32_i64(local_tid_45458 +
                                                                       offset_45504)];
                                x_45485 = ((volatile __local
                                            int32_t *) red_arr_mem_45464)[sext_i32_i64(local_tid_45458 +
                                                                          offset_45504)];
                                x_45486 = ((volatile __local
                                            float *) red_arr_mem_45466)[sext_i32_i64(local_tid_45458 +
                                                                        offset_45504)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_45487;
                                int32_t defunc_1_op_res_45488;
                                
                                if (x_45481) {
                                    defunc_1_op_res_45487 = x_45481;
                                    defunc_1_op_res_45488 = x_45482;
                                } else {
                                    bool x_45489 = x_45484 && x_45484;
                                    bool x_45490 = !x_45484;
                                    bool y_45491 = x_45481 && x_45490;
                                    bool defunc_1_op_res_f_res_45492 =
                                         x_45489 || y_45491;
                                    int32_t defunc_1_op_res_f_res_45493;
                                    
                                    if (x_45484) {
                                        defunc_1_op_res_f_res_45493 = x_45485;
                                    } else {
                                        defunc_1_op_res_f_res_45493 = x_45482;
                                    }
                                    defunc_1_op_res_45487 =
                                        defunc_1_op_res_f_res_45492;
                                    defunc_1_op_res_45488 =
                                        defunc_1_op_res_f_res_45493;
                                }
                                
                                float defunc_1_op_res_45494 = x_45483 + x_45486;
                                
                                x_45481 = defunc_1_op_res_45487;
                                x_45482 = defunc_1_op_res_45488;
                                x_45483 = defunc_1_op_res_45494;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_45462)[sext_i32_i64(local_tid_45458)] =
                                    x_45481;
                                ((volatile __local
                                  int32_t *) red_arr_mem_45464)[sext_i32_i64(local_tid_45458)] =
                                    x_45482;
                                ((volatile __local
                                  float *) red_arr_mem_45466)[sext_i32_i64(local_tid_45458)] =
                                    x_45483;
                            }
                        }
                        offset_45504 *= 2;
                    }
                    while (slt32(skip_waves_45505,
                                 squot32(sext_i64_i32(segred_group_sizze_33727) +
                                         wave_sizze_45460 - 1,
                                         wave_sizze_45460))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45504 = skip_waves_45505 * wave_sizze_45460;
                        if (slt32(local_tid_45458 + offset_45504,
                                  sext_i64_i32(segred_group_sizze_33727)) &&
                            ((local_tid_45458 - squot32(local_tid_45458,
                                                        wave_sizze_45460) *
                              wave_sizze_45460) == 0 &&
                             (squot32(local_tid_45458, wave_sizze_45460) & (2 *
                                                                            skip_waves_45505 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45484 = ((__local
                                            bool *) red_arr_mem_45462)[sext_i32_i64(local_tid_45458 +
                                                                       offset_45504)];
                                x_45485 = ((__local
                                            int32_t *) red_arr_mem_45464)[sext_i32_i64(local_tid_45458 +
                                                                          offset_45504)];
                                x_45486 = ((__local
                                            float *) red_arr_mem_45466)[sext_i32_i64(local_tid_45458 +
                                                                        offset_45504)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_45487;
                                int32_t defunc_1_op_res_45488;
                                
                                if (x_45481) {
                                    defunc_1_op_res_45487 = x_45481;
                                    defunc_1_op_res_45488 = x_45482;
                                } else {
                                    bool x_45489 = x_45484 && x_45484;
                                    bool x_45490 = !x_45484;
                                    bool y_45491 = x_45481 && x_45490;
                                    bool defunc_1_op_res_f_res_45492 =
                                         x_45489 || y_45491;
                                    int32_t defunc_1_op_res_f_res_45493;
                                    
                                    if (x_45484) {
                                        defunc_1_op_res_f_res_45493 = x_45485;
                                    } else {
                                        defunc_1_op_res_f_res_45493 = x_45482;
                                    }
                                    defunc_1_op_res_45487 =
                                        defunc_1_op_res_f_res_45492;
                                    defunc_1_op_res_45488 =
                                        defunc_1_op_res_f_res_45493;
                                }
                                
                                float defunc_1_op_res_45494 = x_45483 + x_45486;
                                
                                x_45481 = defunc_1_op_res_45487;
                                x_45482 = defunc_1_op_res_45488;
                                x_45483 = defunc_1_op_res_45494;
                            }
                            // write result of operation
                            {
                                ((__local
                                  bool *) red_arr_mem_45462)[sext_i32_i64(local_tid_45458)] =
                                    x_45481;
                                ((__local
                                  int32_t *) red_arr_mem_45464)[sext_i32_i64(local_tid_45458)] =
                                    x_45482;
                                ((__local
                                  float *) red_arr_mem_45466)[sext_i32_i64(local_tid_45458)] =
                                    x_45483;
                            }
                        }
                        skip_waves_45505 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45458 == 0) {
                            ((__global bool *) mem_44098)[gtid_33548] = x_45481;
                            ((__global int32_t *) mem_44100)[gtid_33548] =
                                x_45482;
                            ((__global float *) mem_44102)[gtid_33548] =
                                x_45483;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33727
}
__kernel void mainDetailedzisegred_nonseg_32303(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_45201_backing_aligned_0,
                                                __local volatile
                                                int64_t *sync_arr_mem_45199_backing_aligned_1,
                                                int64_t m_27773,
                                                int64_t num_groups_32298,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43982,
                                                __global
                                                unsigned char *mem_43987,
                                                __global
                                                unsigned char *mainDetailedzicounter_mem_45189,
                                                __global
                                                unsigned char *group_res_arr_mem_45191,
                                                int64_t num_threads_45193)
{
    #define segred_group_sizze_32296 (mainDetailedzisegred_group_sizze_32295)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45201_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45201_backing_aligned_0;
    __local volatile char *restrict sync_arr_mem_45199_backing_0 =
                          (__local volatile
                           char *) sync_arr_mem_45199_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45194;
    int32_t local_tid_45195;
    int64_t group_sizze_45198;
    int32_t wave_sizze_45197;
    int32_t group_tid_45196;
    
    global_tid_45194 = get_global_id(0);
    local_tid_45195 = get_local_id(0);
    group_sizze_45198 = get_local_size(0);
    wave_sizze_45197 = LOCKSTEP_WIDTH;
    group_tid_45196 = get_group_id(0);
    
    int32_t phys_tid_32303;
    
    phys_tid_32303 = global_tid_45194;
    
    __local char *sync_arr_mem_45199;
    
    sync_arr_mem_45199 = (__local char *) sync_arr_mem_45199_backing_0;
    
    __local char *red_arr_mem_45201;
    
    red_arr_mem_45201 = (__local char *) red_arr_mem_45201_backing_1;
    
    int64_t dummy_32301;
    
    dummy_32301 = 0;
    
    int64_t gtid_32302;
    
    gtid_32302 = 0;
    
    int32_t x_acc_45203;
    int64_t chunk_sizze_45204;
    
    chunk_sizze_45204 = smin64(sdiv_up64(m_27773,
                                         sext_i32_i64(sext_i64_i32(segred_group_sizze_32296 *
                                         num_groups_32298))),
                               sdiv_up64(m_27773 - sext_i32_i64(phys_tid_32303),
                                         num_threads_45193));
    
    int32_t x_28143;
    int32_t x_28144;
    
    // neutral-initialise the accumulators
    {
        x_acc_45203 = 0;
    }
    for (int64_t i_45208 = 0; i_45208 < chunk_sizze_45204; i_45208++) {
        gtid_32302 = sext_i32_i64(phys_tid_32303) + num_threads_45193 * i_45208;
        // apply map function
        {
            int32_t x_28146 = ((__global
                                int32_t *) defunc_3_map_res_mem_43982)[gtid_32302];
            
            // save map-out results
            { }
            // load accumulator
            {
                x_28143 = x_acc_45203;
            }
            // load new values
            {
                x_28144 = x_28146;
            }
            // apply reduction operator
            {
                int32_t defunc_1_op_res_28145 = smax32(x_28143, x_28144);
                
                // store in accumulator
                {
                    x_acc_45203 = defunc_1_op_res_28145;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_28143 = x_acc_45203;
        ((__local int32_t *) red_arr_mem_45201)[sext_i32_i64(local_tid_45195)] =
            x_28143;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45209;
    int32_t skip_waves_45210;
    
    skip_waves_45210 = 1;
    
    int32_t x_45205;
    int32_t x_45206;
    
    offset_45209 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45195, sext_i64_i32(segred_group_sizze_32296))) {
            x_45205 = ((__local
                        int32_t *) red_arr_mem_45201)[sext_i32_i64(local_tid_45195 +
                                                      offset_45209)];
        }
    }
    offset_45209 = 1;
    while (slt32(offset_45209, wave_sizze_45197)) {
        if (slt32(local_tid_45195 + offset_45209,
                  sext_i64_i32(segred_group_sizze_32296)) && ((local_tid_45195 -
                                                               squot32(local_tid_45195,
                                                                       wave_sizze_45197) *
                                                               wave_sizze_45197) &
                                                              (2 *
                                                               offset_45209 -
                                                               1)) == 0) {
            // read array element
            {
                x_45206 = ((volatile __local
                            int32_t *) red_arr_mem_45201)[sext_i32_i64(local_tid_45195 +
                                                          offset_45209)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_45207 = smax32(x_45205, x_45206);
                
                x_45205 = defunc_1_op_res_45207;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_45201)[sext_i32_i64(local_tid_45195)] =
                    x_45205;
            }
        }
        offset_45209 *= 2;
    }
    while (slt32(skip_waves_45210,
                 squot32(sext_i64_i32(segred_group_sizze_32296) +
                         wave_sizze_45197 - 1, wave_sizze_45197))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45209 = skip_waves_45210 * wave_sizze_45197;
        if (slt32(local_tid_45195 + offset_45209,
                  sext_i64_i32(segred_group_sizze_32296)) && ((local_tid_45195 -
                                                               squot32(local_tid_45195,
                                                                       wave_sizze_45197) *
                                                               wave_sizze_45197) ==
                                                              0 &&
                                                              (squot32(local_tid_45195,
                                                                       wave_sizze_45197) &
                                                               (2 *
                                                                skip_waves_45210 -
                                                                1)) == 0)) {
            // read array element
            {
                x_45206 = ((__local
                            int32_t *) red_arr_mem_45201)[sext_i32_i64(local_tid_45195 +
                                                          offset_45209)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_45207 = smax32(x_45205, x_45206);
                
                x_45205 = defunc_1_op_res_45207;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_45201)[sext_i32_i64(local_tid_45195)] =
                    x_45205;
            }
        }
        skip_waves_45210 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_45195) == 0) {
            x_acc_45203 = x_45205;
        }
    }
    
    int32_t old_counter_45211;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_45195 == 0) {
            ((__global
              int32_t *) group_res_arr_mem_45191)[sext_i32_i64(group_tid_45196) *
                                                  segred_group_sizze_32296] =
                x_acc_45203;
            mem_fence_global();
            old_counter_45211 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainDetailedzicounter_mem_45189)[0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_45199)[0] = old_counter_45211 ==
                num_groups_32298 - 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_45212;
    
    is_last_group_45212 = ((__local bool *) sync_arr_mem_45199)[0];
    if (is_last_group_45212) {
        if (local_tid_45195 == 0) {
            old_counter_45211 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainDetailedzicounter_mem_45189)[0],
                                                      (int) (0 -
                                                             num_groups_32298));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_45213 = sdiv_up64(num_groups_32298,
                                                      segred_group_sizze_32296);
            
            x_28143 = 0;
            for (int64_t i_45214 = 0; i_45214 < read_per_thread_45213;
                 i_45214++) {
                int64_t group_res_id_45215 = sext_i32_i64(local_tid_45195) *
                        read_per_thread_45213 + i_45214;
                int64_t index_of_group_res_45216 = group_res_id_45215;
                
                if (slt64(group_res_id_45215, num_groups_32298)) {
                    x_28144 = ((__global
                                int32_t *) group_res_arr_mem_45191)[index_of_group_res_45216 *
                                                                    segred_group_sizze_32296];
                    
                    int32_t defunc_1_op_res_28145;
                    
                    defunc_1_op_res_28145 = smax32(x_28143, x_28144);
                    x_28143 = defunc_1_op_res_28145;
                }
            }
        }
        ((__local int32_t *) red_arr_mem_45201)[sext_i32_i64(local_tid_45195)] =
            x_28143;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_45217;
            int32_t skip_waves_45218;
            
            skip_waves_45218 = 1;
            
            int32_t x_45205;
            int32_t x_45206;
            
            offset_45217 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_45195,
                          sext_i64_i32(segred_group_sizze_32296))) {
                    x_45205 = ((__local
                                int32_t *) red_arr_mem_45201)[sext_i32_i64(local_tid_45195 +
                                                              offset_45217)];
                }
            }
            offset_45217 = 1;
            while (slt32(offset_45217, wave_sizze_45197)) {
                if (slt32(local_tid_45195 + offset_45217,
                          sext_i64_i32(segred_group_sizze_32296)) &&
                    ((local_tid_45195 - squot32(local_tid_45195,
                                                wave_sizze_45197) *
                      wave_sizze_45197) & (2 * offset_45217 - 1)) == 0) {
                    // read array element
                    {
                        x_45206 = ((volatile __local
                                    int32_t *) red_arr_mem_45201)[sext_i32_i64(local_tid_45195 +
                                                                  offset_45217)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_45207 = smax32(x_45205,
                                                               x_45206);
                        
                        x_45205 = defunc_1_op_res_45207;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          int32_t *) red_arr_mem_45201)[sext_i32_i64(local_tid_45195)] =
                            x_45205;
                    }
                }
                offset_45217 *= 2;
            }
            while (slt32(skip_waves_45218,
                         squot32(sext_i64_i32(segred_group_sizze_32296) +
                                 wave_sizze_45197 - 1, wave_sizze_45197))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_45217 = skip_waves_45218 * wave_sizze_45197;
                if (slt32(local_tid_45195 + offset_45217,
                          sext_i64_i32(segred_group_sizze_32296)) &&
                    ((local_tid_45195 - squot32(local_tid_45195,
                                                wave_sizze_45197) *
                      wave_sizze_45197) == 0 && (squot32(local_tid_45195,
                                                         wave_sizze_45197) &
                                                 (2 * skip_waves_45218 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_45206 = ((__local
                                    int32_t *) red_arr_mem_45201)[sext_i32_i64(local_tid_45195 +
                                                                  offset_45217)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_45207 = smax32(x_45205,
                                                               x_45206);
                        
                        x_45205 = defunc_1_op_res_45207;
                    }
                    // write result of operation
                    {
                        ((__local
                          int32_t *) red_arr_mem_45201)[sext_i32_i64(local_tid_45195)] =
                            x_45205;
                    }
                }
                skip_waves_45218 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_45195 == 0) {
                    ((__global int32_t *) mem_43987)[0] = x_45205;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32296
}
__kernel void mainDetailedzisegred_small_30333(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44458_backing_aligned_0,
                                               int64_t N_27772, int64_t m_27773,
                                               int64_t N_27774,
                                               int64_t i32_res_27786,
                                               int64_t i32_res_27792,
                                               int64_t num_groups_30472,
                                               __global
                                               unsigned char *images_mem_43123,
                                               __global
                                               unsigned char *binop_p_mem_43132,
                                               __global
                                               unsigned char *mem_43273,
                                               __global
                                               unsigned char *mem_43278,
                                               int64_t segment_sizze_nonzzero_44451)
{
    #define segred_group_sizze_30471 (mainDetailedzisegred_group_sizze_30327)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44458_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44458_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44453;
    int32_t local_tid_44454;
    int64_t group_sizze_44457;
    int32_t wave_sizze_44456;
    int32_t group_tid_44455;
    
    global_tid_44453 = get_global_id(0);
    local_tid_44454 = get_local_id(0);
    group_sizze_44457 = get_local_size(0);
    wave_sizze_44456 = LOCKSTEP_WIDTH;
    group_tid_44455 = get_group_id(0);
    
    int32_t phys_tid_30333;
    
    phys_tid_30333 = global_tid_44453;
    
    __local char *red_arr_mem_44458;
    
    red_arr_mem_44458 = (__local char *) red_arr_mem_44458_backing_0;
    
    int32_t phys_group_id_44460;
    
    phys_group_id_44460 = get_group_id(0);
    for (int32_t i_44461 = 0; i_44461 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27773 * i32_res_27792 *
                                          i32_res_27792,
                                          squot64(segred_group_sizze_30471,
                                                  segment_sizze_nonzzero_44451))) -
                   phys_group_id_44460, sext_i64_i32(num_groups_30472));
         i_44461++) {
        int32_t virt_group_id_44462 = phys_group_id_44460 + i_44461 *
                sext_i64_i32(num_groups_30472);
        int64_t gtid_30320 = squot64(squot64(sext_i32_i64(local_tid_44454),
                                             segment_sizze_nonzzero_44451) +
                                     sext_i32_i64(virt_group_id_44462) *
                                     squot64(segred_group_sizze_30471,
                                             segment_sizze_nonzzero_44451),
                                     i32_res_27792 * i32_res_27792);
        int64_t gtid_30321 = squot64(squot64(sext_i32_i64(local_tid_44454),
                                             segment_sizze_nonzzero_44451) +
                                     sext_i32_i64(virt_group_id_44462) *
                                     squot64(segred_group_sizze_30471,
                                             segment_sizze_nonzzero_44451) -
                                     squot64(squot64(sext_i32_i64(local_tid_44454),
                                                     segment_sizze_nonzzero_44451) +
                                             sext_i32_i64(virt_group_id_44462) *
                                             squot64(segred_group_sizze_30471,
                                                     segment_sizze_nonzzero_44451),
                                             i32_res_27792 * i32_res_27792) *
                                     (i32_res_27792 * i32_res_27792),
                                     i32_res_27792);
        int64_t gtid_30322 = squot64(sext_i32_i64(local_tid_44454),
                                     segment_sizze_nonzzero_44451) +
                sext_i32_i64(virt_group_id_44462) *
                squot64(segred_group_sizze_30471,
                        segment_sizze_nonzzero_44451) -
                squot64(squot64(sext_i32_i64(local_tid_44454),
                                segment_sizze_nonzzero_44451) +
                        sext_i32_i64(virt_group_id_44462) *
                        squot64(segred_group_sizze_30471,
                                segment_sizze_nonzzero_44451), i32_res_27792 *
                        i32_res_27792) * (i32_res_27792 * i32_res_27792) -
                squot64(squot64(sext_i32_i64(local_tid_44454),
                                segment_sizze_nonzzero_44451) +
                        sext_i32_i64(virt_group_id_44462) *
                        squot64(segred_group_sizze_30471,
                                segment_sizze_nonzzero_44451) -
                        squot64(squot64(sext_i32_i64(local_tid_44454),
                                        segment_sizze_nonzzero_44451) +
                                sext_i32_i64(virt_group_id_44462) *
                                squot64(segred_group_sizze_30471,
                                        segment_sizze_nonzzero_44451),
                                i32_res_27792 * i32_res_27792) *
                        (i32_res_27792 * i32_res_27792), i32_res_27792) *
                i32_res_27792;
        int64_t gtid_30332 = srem64(sext_i32_i64(local_tid_44454),
                                    i32_res_27786);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_27786) && (((slt64(gtid_30320, m_27773) &&
                                              slt64(gtid_30321,
                                                    i32_res_27792)) &&
                                             slt64(gtid_30322,
                                                   i32_res_27792)) &&
                                            slt64(sext_i32_i64(local_tid_44454),
                                                  i32_res_27786 *
                                                  squot64(segred_group_sizze_30471,
                                                          segment_sizze_nonzzero_44451)))) {
                float x_30481 = ((__global
                                  float *) images_mem_43123)[gtid_30320 *
                                                             N_27774 +
                                                             gtid_30332];
                float x_30482 = ((__global
                                  float *) binop_p_mem_43132)[gtid_30321 *
                                                              N_27772 +
                                                              gtid_30332];
                float x_30483 = ((__global float *) mem_43273)[gtid_30322 *
                                                               N_27772 +
                                                               gtid_30332];
                float x_30484 = x_30482 * x_30483;
                bool isnan_res_30485;
                
                isnan_res_30485 = futrts_isnan32(x_30481);
                
                float y_30486;
                
                if (isnan_res_30485) {
                    y_30486 = 0.0F;
                } else {
                    y_30486 = 1.0F;
                }
                
                float defunc_2_f_res_30487 = x_30484 * y_30486;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44458)[sext_i32_i64(local_tid_44454)] =
                        defunc_2_f_res_30487;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44458)[sext_i32_i64(local_tid_44454)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_27786)) {
            // perform segmented scan to imitate reduction
            {
                float x_30475;
                float x_30476;
                float x_44463;
                float x_44464;
                bool ltid_in_bounds_44466;
                
                ltid_in_bounds_44466 = slt64(sext_i32_i64(local_tid_44454),
                                             i32_res_27786 *
                                             squot64(segred_group_sizze_30471,
                                                     segment_sizze_nonzzero_44451));
                
                int32_t skip_threads_44467;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44466) {
                        x_30476 = ((volatile __local
                                    float *) red_arr_mem_44458)[sext_i32_i64(local_tid_44454)];
                        if ((local_tid_44454 - squot32(local_tid_44454, 32) *
                             32) == 0) {
                            x_30475 = x_30476;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44467 = 1;
                    while (slt32(skip_threads_44467, 32)) {
                        if (sle32(skip_threads_44467, local_tid_44454 -
                                  squot32(local_tid_44454, 32) * 32) &&
                            ltid_in_bounds_44466) {
                            // read operands
                            {
                                x_30475 = ((volatile __local
                                            float *) red_arr_mem_44458)[sext_i32_i64(local_tid_44454) -
                                                                        sext_i32_i64(skip_threads_44467)];
                            }
                            // perform operation
                            {
                                bool inactive_44468 =
                                     slt64(srem64(sext_i32_i64(local_tid_44454),
                                                  i32_res_27786),
                                           sext_i32_i64(local_tid_44454) -
                                           sext_i32_i64(local_tid_44454 -
                                           skip_threads_44467));
                                
                                if (inactive_44468) {
                                    x_30475 = x_30476;
                                }
                                if (!inactive_44468) {
                                    float defunc_1_op_res_30477 = x_30475 +
                                          x_30476;
                                    
                                    x_30475 = defunc_1_op_res_30477;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44456, skip_threads_44467)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44467, local_tid_44454 -
                                  squot32(local_tid_44454, 32) * 32) &&
                            ltid_in_bounds_44466) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44458)[sext_i32_i64(local_tid_44454)] =
                                    x_30475;
                                x_30476 = x_30475;
                            }
                        }
                        if (sle32(wave_sizze_44456, skip_threads_44467)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44467 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44454 - squot32(local_tid_44454, 32) * 32) ==
                        31 && ltid_in_bounds_44466) {
                        ((volatile __local
                          float *) red_arr_mem_44458)[sext_i32_i64(squot32(local_tid_44454,
                                                                           32))] =
                            x_30475;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44469;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44454, 32) == 0 &&
                            ltid_in_bounds_44466) {
                            x_44464 = ((volatile __local
                                        float *) red_arr_mem_44458)[sext_i32_i64(local_tid_44454)];
                            if ((local_tid_44454 - squot32(local_tid_44454,
                                                           32) * 32) == 0) {
                                x_44463 = x_44464;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44469 = 1;
                        while (slt32(skip_threads_44469, 32)) {
                            if (sle32(skip_threads_44469, local_tid_44454 -
                                      squot32(local_tid_44454, 32) * 32) &&
                                (squot32(local_tid_44454, 32) == 0 &&
                                 ltid_in_bounds_44466)) {
                                // read operands
                                {
                                    x_44463 = ((volatile __local
                                                float *) red_arr_mem_44458)[sext_i32_i64(local_tid_44454) -
                                                                            sext_i32_i64(skip_threads_44469)];
                                }
                                // perform operation
                                {
                                    bool inactive_44470 =
                                         slt64(srem64(sext_i32_i64(local_tid_44454 *
                                                      32 + 32 - 1),
                                                      i32_res_27786),
                                               sext_i32_i64(local_tid_44454 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44454 -
                                                             skip_threads_44469) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44470) {
                                        x_44463 = x_44464;
                                    }
                                    if (!inactive_44470) {
                                        float defunc_1_op_res_44465 = x_44463 +
                                              x_44464;
                                        
                                        x_44463 = defunc_1_op_res_44465;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44456, skip_threads_44469)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44469, local_tid_44454 -
                                      squot32(local_tid_44454, 32) * 32) &&
                                (squot32(local_tid_44454, 32) == 0 &&
                                 ltid_in_bounds_44466)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44458)[sext_i32_i64(local_tid_44454)] =
                                        x_44463;
                                    x_44464 = x_44463;
                                }
                            }
                            if (sle32(wave_sizze_44456, skip_threads_44469)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44469 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44454, 32) == 0 ||
                          !ltid_in_bounds_44466)) {
                        // read operands
                        {
                            x_30476 = x_30475;
                            x_30475 = ((__local
                                        float *) red_arr_mem_44458)[sext_i32_i64(squot32(local_tid_44454,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_44471 =
                                 slt64(srem64(sext_i32_i64(local_tid_44454),
                                              i32_res_27786),
                                       sext_i32_i64(local_tid_44454) -
                                       sext_i32_i64(squot32(local_tid_44454,
                                                            32) * 32 - 1));
                            
                            if (inactive_44471) {
                                x_30475 = x_30476;
                            }
                            if (!inactive_44471) {
                                float defunc_1_op_res_30477 = x_30475 + x_30476;
                                
                                x_30475 = defunc_1_op_res_30477;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44458)[sext_i32_i64(local_tid_44454)] =
                                x_30475;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44454, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44458)[sext_i32_i64(local_tid_44454)] =
                            x_30476;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44462) *
                      squot64(segred_group_sizze_30471,
                              segment_sizze_nonzzero_44451) +
                      sext_i32_i64(local_tid_44454), m_27773 * i32_res_27792 *
                      i32_res_27792) && slt64(sext_i32_i64(local_tid_44454),
                                              squot64(segred_group_sizze_30471,
                                                      segment_sizze_nonzzero_44451))) {
                ((__global
                  float *) mem_43278)[squot64(sext_i32_i64(virt_group_id_44462) *
                                              squot64(segred_group_sizze_30471,
                                                      segment_sizze_nonzzero_44451) +
                                              sext_i32_i64(local_tid_44454),
                                              i32_res_27792 * i32_res_27792) *
                                      (i32_res_27792 * i32_res_27792) +
                                      squot64(sext_i32_i64(virt_group_id_44462) *
                                              squot64(segred_group_sizze_30471,
                                                      segment_sizze_nonzzero_44451) +
                                              sext_i32_i64(local_tid_44454) -
                                              squot64(sext_i32_i64(virt_group_id_44462) *
                                                      squot64(segred_group_sizze_30471,
                                                              segment_sizze_nonzzero_44451) +
                                                      sext_i32_i64(local_tid_44454),
                                                      i32_res_27792 *
                                                      i32_res_27792) *
                                              (i32_res_27792 * i32_res_27792),
                                              i32_res_27792) * i32_res_27792 +
                                      (sext_i32_i64(virt_group_id_44462) *
                                       squot64(segred_group_sizze_30471,
                                               segment_sizze_nonzzero_44451) +
                                       sext_i32_i64(local_tid_44454) -
                                       squot64(sext_i32_i64(virt_group_id_44462) *
                                               squot64(segred_group_sizze_30471,
                                                       segment_sizze_nonzzero_44451) +
                                               sext_i32_i64(local_tid_44454),
                                               i32_res_27792 * i32_res_27792) *
                                       (i32_res_27792 * i32_res_27792) -
                                       squot64(sext_i32_i64(virt_group_id_44462) *
                                               squot64(segred_group_sizze_30471,
                                                       segment_sizze_nonzzero_44451) +
                                               sext_i32_i64(local_tid_44454) -
                                               squot64(sext_i32_i64(virt_group_id_44462) *
                                                       squot64(segred_group_sizze_30471,
                                                               segment_sizze_nonzzero_44451) +
                                                       sext_i32_i64(local_tid_44454),
                                                       i32_res_27792 *
                                                       i32_res_27792) *
                                               (i32_res_27792 * i32_res_27792),
                                               i32_res_27792) *
                                       i32_res_27792)] = ((__local
                                                           float *) red_arr_mem_44458)[(sext_i32_i64(local_tid_44454) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_44451 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_30471
}
__kernel void mainDetailedzisegred_small_31380(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44654_backing_aligned_0,
                                               int64_t N_27772, int64_t m_27773,
                                               int64_t N_27774,
                                               int64_t i32_res_27786,
                                               int64_t i32_res_27792,
                                               int64_t num_groups_31433,
                                               __global
                                               unsigned char *images_mem_43123,
                                               __global
                                               unsigned char *binop_p_mem_43132,
                                               __global
                                               unsigned char *mem_43585,
                                               int64_t segment_sizze_nonzzero_44647)
{
    #define segred_group_sizze_31432 (mainDetailedzisegred_group_sizze_31374)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44654_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44654_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44649;
    int32_t local_tid_44650;
    int64_t group_sizze_44653;
    int32_t wave_sizze_44652;
    int32_t group_tid_44651;
    
    global_tid_44649 = get_global_id(0);
    local_tid_44650 = get_local_id(0);
    group_sizze_44653 = get_local_size(0);
    wave_sizze_44652 = LOCKSTEP_WIDTH;
    group_tid_44651 = get_group_id(0);
    
    int32_t phys_tid_31380;
    
    phys_tid_31380 = global_tid_44649;
    
    __local char *red_arr_mem_44654;
    
    red_arr_mem_44654 = (__local char *) red_arr_mem_44654_backing_0;
    
    int32_t phys_group_id_44656;
    
    phys_group_id_44656 = get_group_id(0);
    for (int32_t i_44657 = 0; i_44657 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27773 * i32_res_27792,
                                          squot64(segred_group_sizze_31432,
                                                  segment_sizze_nonzzero_44647))) -
                   phys_group_id_44656, sext_i64_i32(num_groups_31433));
         i_44657++) {
        int32_t virt_group_id_44658 = phys_group_id_44656 + i_44657 *
                sext_i64_i32(num_groups_31433);
        int64_t gtid_31369 = squot64(squot64(sext_i32_i64(local_tid_44650),
                                             segment_sizze_nonzzero_44647) +
                                     sext_i32_i64(virt_group_id_44658) *
                                     squot64(segred_group_sizze_31432,
                                             segment_sizze_nonzzero_44647),
                                     i32_res_27792);
        int64_t gtid_31370 = squot64(sext_i32_i64(local_tid_44650),
                                     segment_sizze_nonzzero_44647) +
                sext_i32_i64(virt_group_id_44658) *
                squot64(segred_group_sizze_31432,
                        segment_sizze_nonzzero_44647) -
                squot64(squot64(sext_i32_i64(local_tid_44650),
                                segment_sizze_nonzzero_44647) +
                        sext_i32_i64(virt_group_id_44658) *
                        squot64(segred_group_sizze_31432,
                                segment_sizze_nonzzero_44647), i32_res_27792) *
                i32_res_27792;
        int64_t gtid_31379 = srem64(sext_i32_i64(local_tid_44650),
                                    i32_res_27786);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_27786) && ((slt64(gtid_31369, m_27773) &&
                                             slt64(gtid_31370,
                                                   i32_res_27792)) &&
                                            slt64(sext_i32_i64(local_tid_44650),
                                                  i32_res_27786 *
                                                  squot64(segred_group_sizze_31432,
                                                          segment_sizze_nonzzero_44647)))) {
                float x_31442 = ((__global
                                  float *) images_mem_43123)[gtid_31369 *
                                                             N_27774 +
                                                             gtid_31379];
                bool isnan_res_31443;
                
                isnan_res_31443 = futrts_isnan32(x_31442);
                
                float defunc_1_f_res_31444;
                
                if (isnan_res_31443) {
                    defunc_1_f_res_31444 = 0.0F;
                } else {
                    float x_31441 = ((__global
                                      float *) binop_p_mem_43132)[gtid_31370 *
                                                                  N_27772 +
                                                                  gtid_31379];
                    float defunc_1_f_res_f_res_31445 = x_31441 * x_31442;
                    
                    defunc_1_f_res_31444 = defunc_1_f_res_f_res_31445;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44654)[sext_i32_i64(local_tid_44650)] =
                        defunc_1_f_res_31444;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44654)[sext_i32_i64(local_tid_44650)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_27786)) {
            // perform segmented scan to imitate reduction
            {
                float x_31436;
                float x_31437;
                float x_44659;
                float x_44660;
                bool ltid_in_bounds_44662;
                
                ltid_in_bounds_44662 = slt64(sext_i32_i64(local_tid_44650),
                                             i32_res_27786 *
                                             squot64(segred_group_sizze_31432,
                                                     segment_sizze_nonzzero_44647));
                
                int32_t skip_threads_44663;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44662) {
                        x_31437 = ((volatile __local
                                    float *) red_arr_mem_44654)[sext_i32_i64(local_tid_44650)];
                        if ((local_tid_44650 - squot32(local_tid_44650, 32) *
                             32) == 0) {
                            x_31436 = x_31437;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44663 = 1;
                    while (slt32(skip_threads_44663, 32)) {
                        if (sle32(skip_threads_44663, local_tid_44650 -
                                  squot32(local_tid_44650, 32) * 32) &&
                            ltid_in_bounds_44662) {
                            // read operands
                            {
                                x_31436 = ((volatile __local
                                            float *) red_arr_mem_44654)[sext_i32_i64(local_tid_44650) -
                                                                        sext_i32_i64(skip_threads_44663)];
                            }
                            // perform operation
                            {
                                bool inactive_44664 =
                                     slt64(srem64(sext_i32_i64(local_tid_44650),
                                                  i32_res_27786),
                                           sext_i32_i64(local_tid_44650) -
                                           sext_i32_i64(local_tid_44650 -
                                           skip_threads_44663));
                                
                                if (inactive_44664) {
                                    x_31436 = x_31437;
                                }
                                if (!inactive_44664) {
                                    float defunc_1_op_res_31438 = x_31436 +
                                          x_31437;
                                    
                                    x_31436 = defunc_1_op_res_31438;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44652, skip_threads_44663)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44663, local_tid_44650 -
                                  squot32(local_tid_44650, 32) * 32) &&
                            ltid_in_bounds_44662) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44654)[sext_i32_i64(local_tid_44650)] =
                                    x_31436;
                                x_31437 = x_31436;
                            }
                        }
                        if (sle32(wave_sizze_44652, skip_threads_44663)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44663 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44650 - squot32(local_tid_44650, 32) * 32) ==
                        31 && ltid_in_bounds_44662) {
                        ((volatile __local
                          float *) red_arr_mem_44654)[sext_i32_i64(squot32(local_tid_44650,
                                                                           32))] =
                            x_31436;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44665;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44650, 32) == 0 &&
                            ltid_in_bounds_44662) {
                            x_44660 = ((volatile __local
                                        float *) red_arr_mem_44654)[sext_i32_i64(local_tid_44650)];
                            if ((local_tid_44650 - squot32(local_tid_44650,
                                                           32) * 32) == 0) {
                                x_44659 = x_44660;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44665 = 1;
                        while (slt32(skip_threads_44665, 32)) {
                            if (sle32(skip_threads_44665, local_tid_44650 -
                                      squot32(local_tid_44650, 32) * 32) &&
                                (squot32(local_tid_44650, 32) == 0 &&
                                 ltid_in_bounds_44662)) {
                                // read operands
                                {
                                    x_44659 = ((volatile __local
                                                float *) red_arr_mem_44654)[sext_i32_i64(local_tid_44650) -
                                                                            sext_i32_i64(skip_threads_44665)];
                                }
                                // perform operation
                                {
                                    bool inactive_44666 =
                                         slt64(srem64(sext_i32_i64(local_tid_44650 *
                                                      32 + 32 - 1),
                                                      i32_res_27786),
                                               sext_i32_i64(local_tid_44650 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44650 -
                                                             skip_threads_44665) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44666) {
                                        x_44659 = x_44660;
                                    }
                                    if (!inactive_44666) {
                                        float defunc_1_op_res_44661 = x_44659 +
                                              x_44660;
                                        
                                        x_44659 = defunc_1_op_res_44661;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44652, skip_threads_44665)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44665, local_tid_44650 -
                                      squot32(local_tid_44650, 32) * 32) &&
                                (squot32(local_tid_44650, 32) == 0 &&
                                 ltid_in_bounds_44662)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44654)[sext_i32_i64(local_tid_44650)] =
                                        x_44659;
                                    x_44660 = x_44659;
                                }
                            }
                            if (sle32(wave_sizze_44652, skip_threads_44665)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44665 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44650, 32) == 0 ||
                          !ltid_in_bounds_44662)) {
                        // read operands
                        {
                            x_31437 = x_31436;
                            x_31436 = ((__local
                                        float *) red_arr_mem_44654)[sext_i32_i64(squot32(local_tid_44650,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_44667 =
                                 slt64(srem64(sext_i32_i64(local_tid_44650),
                                              i32_res_27786),
                                       sext_i32_i64(local_tid_44650) -
                                       sext_i32_i64(squot32(local_tid_44650,
                                                            32) * 32 - 1));
                            
                            if (inactive_44667) {
                                x_31436 = x_31437;
                            }
                            if (!inactive_44667) {
                                float defunc_1_op_res_31438 = x_31436 + x_31437;
                                
                                x_31436 = defunc_1_op_res_31438;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44654)[sext_i32_i64(local_tid_44650)] =
                                x_31436;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44650, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44654)[sext_i32_i64(local_tid_44650)] =
                            x_31437;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44658) *
                      squot64(segred_group_sizze_31432,
                              segment_sizze_nonzzero_44647) +
                      sext_i32_i64(local_tid_44650), m_27773 * i32_res_27792) &&
                slt64(sext_i32_i64(local_tid_44650),
                      squot64(segred_group_sizze_31432,
                              segment_sizze_nonzzero_44647))) {
                ((__global
                  float *) mem_43585)[squot64(sext_i32_i64(virt_group_id_44658) *
                                              squot64(segred_group_sizze_31432,
                                                      segment_sizze_nonzzero_44647) +
                                              sext_i32_i64(local_tid_44650),
                                              i32_res_27792) * i32_res_27792 +
                                      (sext_i32_i64(virt_group_id_44658) *
                                       squot64(segred_group_sizze_31432,
                                               segment_sizze_nonzzero_44647) +
                                       sext_i32_i64(local_tid_44650) -
                                       squot64(sext_i32_i64(virt_group_id_44658) *
                                               squot64(segred_group_sizze_31432,
                                                       segment_sizze_nonzzero_44647) +
                                               sext_i32_i64(local_tid_44650),
                                               i32_res_27792) *
                                       i32_res_27792)] = ((__local
                                                           float *) red_arr_mem_44654)[(sext_i32_i64(local_tid_44650) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_44647 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31432
}
__kernel void mainDetailedzisegred_small_31517(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44742_backing_aligned_0,
                                               int64_t m_27773,
                                               int64_t i32_res_27792,
                                               int64_t num_groups_31566,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43370,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43591,
                                               __global
                                               unsigned char *mem_43651,
                                               int64_t segment_sizze_nonzzero_44735)
{
    #define segred_group_sizze_31565 (mainDetailedzisegred_group_sizze_31511)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44742_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44742_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44737;
    int32_t local_tid_44738;
    int64_t group_sizze_44741;
    int32_t wave_sizze_44740;
    int32_t group_tid_44739;
    
    global_tid_44737 = get_global_id(0);
    local_tid_44738 = get_local_id(0);
    group_sizze_44741 = get_local_size(0);
    wave_sizze_44740 = LOCKSTEP_WIDTH;
    group_tid_44739 = get_group_id(0);
    
    int32_t phys_tid_31517;
    
    phys_tid_31517 = global_tid_44737;
    
    __local char *red_arr_mem_44742;
    
    red_arr_mem_44742 = (__local char *) red_arr_mem_44742_backing_0;
    
    int32_t phys_group_id_44744;
    
    phys_group_id_44744 = get_group_id(0);
    for (int32_t i_44745 = 0; i_44745 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27773 * i32_res_27792,
                                          squot64(segred_group_sizze_31565,
                                                  segment_sizze_nonzzero_44735))) -
                   phys_group_id_44744, sext_i64_i32(num_groups_31566));
         i_44745++) {
        int32_t virt_group_id_44746 = phys_group_id_44744 + i_44745 *
                sext_i64_i32(num_groups_31566);
        int64_t gtid_31506 = squot64(squot64(sext_i32_i64(local_tid_44738),
                                             segment_sizze_nonzzero_44735) +
                                     sext_i32_i64(virt_group_id_44746) *
                                     squot64(segred_group_sizze_31565,
                                             segment_sizze_nonzzero_44735),
                                     i32_res_27792);
        int64_t gtid_31507 = squot64(sext_i32_i64(local_tid_44738),
                                     segment_sizze_nonzzero_44735) +
                sext_i32_i64(virt_group_id_44746) *
                squot64(segred_group_sizze_31565,
                        segment_sizze_nonzzero_44735) -
                squot64(squot64(sext_i32_i64(local_tid_44738),
                                segment_sizze_nonzzero_44735) +
                        sext_i32_i64(virt_group_id_44746) *
                        squot64(segred_group_sizze_31565,
                                segment_sizze_nonzzero_44735), i32_res_27792) *
                i32_res_27792;
        int64_t gtid_31516 = srem64(sext_i32_i64(local_tid_44738),
                                    i32_res_27792);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_27792) && ((slt64(gtid_31506, m_27773) &&
                                             slt64(gtid_31507,
                                                   i32_res_27792)) &&
                                            slt64(sext_i32_i64(local_tid_44738),
                                                  i32_res_27792 *
                                                  squot64(segred_group_sizze_31565,
                                                          segment_sizze_nonzzero_44735)))) {
                float x_31575 = ((__global
                                  float *) defunc_3_map_res_mem_43591)[gtid_31506 *
                                                                       i32_res_27792 +
                                                                       gtid_31516];
                float x_31576 = ((__global
                                  float *) defunc_3_map_res_mem_43370)[gtid_31506 *
                                                                       (i32_res_27792 *
                                                                        i32_res_27792) +
                                                                       gtid_31507 *
                                                                       i32_res_27792 +
                                                                       gtid_31516];
                float defunc_1_f_res_31577 = x_31575 * x_31576;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44742)[sext_i32_i64(local_tid_44738)] =
                        defunc_1_f_res_31577;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44742)[sext_i32_i64(local_tid_44738)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_27792)) {
            // perform segmented scan to imitate reduction
            {
                float x_31569;
                float x_31570;
                float x_44747;
                float x_44748;
                bool ltid_in_bounds_44750;
                
                ltid_in_bounds_44750 = slt64(sext_i32_i64(local_tid_44738),
                                             i32_res_27792 *
                                             squot64(segred_group_sizze_31565,
                                                     segment_sizze_nonzzero_44735));
                
                int32_t skip_threads_44751;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44750) {
                        x_31570 = ((volatile __local
                                    float *) red_arr_mem_44742)[sext_i32_i64(local_tid_44738)];
                        if ((local_tid_44738 - squot32(local_tid_44738, 32) *
                             32) == 0) {
                            x_31569 = x_31570;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44751 = 1;
                    while (slt32(skip_threads_44751, 32)) {
                        if (sle32(skip_threads_44751, local_tid_44738 -
                                  squot32(local_tid_44738, 32) * 32) &&
                            ltid_in_bounds_44750) {
                            // read operands
                            {
                                x_31569 = ((volatile __local
                                            float *) red_arr_mem_44742)[sext_i32_i64(local_tid_44738) -
                                                                        sext_i32_i64(skip_threads_44751)];
                            }
                            // perform operation
                            {
                                bool inactive_44752 =
                                     slt64(srem64(sext_i32_i64(local_tid_44738),
                                                  i32_res_27792),
                                           sext_i32_i64(local_tid_44738) -
                                           sext_i32_i64(local_tid_44738 -
                                           skip_threads_44751));
                                
                                if (inactive_44752) {
                                    x_31569 = x_31570;
                                }
                                if (!inactive_44752) {
                                    float defunc_1_op_res_31571 = x_31569 +
                                          x_31570;
                                    
                                    x_31569 = defunc_1_op_res_31571;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44740, skip_threads_44751)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44751, local_tid_44738 -
                                  squot32(local_tid_44738, 32) * 32) &&
                            ltid_in_bounds_44750) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44742)[sext_i32_i64(local_tid_44738)] =
                                    x_31569;
                                x_31570 = x_31569;
                            }
                        }
                        if (sle32(wave_sizze_44740, skip_threads_44751)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44751 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44738 - squot32(local_tid_44738, 32) * 32) ==
                        31 && ltid_in_bounds_44750) {
                        ((volatile __local
                          float *) red_arr_mem_44742)[sext_i32_i64(squot32(local_tid_44738,
                                                                           32))] =
                            x_31569;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44753;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44738, 32) == 0 &&
                            ltid_in_bounds_44750) {
                            x_44748 = ((volatile __local
                                        float *) red_arr_mem_44742)[sext_i32_i64(local_tid_44738)];
                            if ((local_tid_44738 - squot32(local_tid_44738,
                                                           32) * 32) == 0) {
                                x_44747 = x_44748;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44753 = 1;
                        while (slt32(skip_threads_44753, 32)) {
                            if (sle32(skip_threads_44753, local_tid_44738 -
                                      squot32(local_tid_44738, 32) * 32) &&
                                (squot32(local_tid_44738, 32) == 0 &&
                                 ltid_in_bounds_44750)) {
                                // read operands
                                {
                                    x_44747 = ((volatile __local
                                                float *) red_arr_mem_44742)[sext_i32_i64(local_tid_44738) -
                                                                            sext_i32_i64(skip_threads_44753)];
                                }
                                // perform operation
                                {
                                    bool inactive_44754 =
                                         slt64(srem64(sext_i32_i64(local_tid_44738 *
                                                      32 + 32 - 1),
                                                      i32_res_27792),
                                               sext_i32_i64(local_tid_44738 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44738 -
                                                             skip_threads_44753) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44754) {
                                        x_44747 = x_44748;
                                    }
                                    if (!inactive_44754) {
                                        float defunc_1_op_res_44749 = x_44747 +
                                              x_44748;
                                        
                                        x_44747 = defunc_1_op_res_44749;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44740, skip_threads_44753)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44753, local_tid_44738 -
                                      squot32(local_tid_44738, 32) * 32) &&
                                (squot32(local_tid_44738, 32) == 0 &&
                                 ltid_in_bounds_44750)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44742)[sext_i32_i64(local_tid_44738)] =
                                        x_44747;
                                    x_44748 = x_44747;
                                }
                            }
                            if (sle32(wave_sizze_44740, skip_threads_44753)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44753 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44738, 32) == 0 ||
                          !ltid_in_bounds_44750)) {
                        // read operands
                        {
                            x_31570 = x_31569;
                            x_31569 = ((__local
                                        float *) red_arr_mem_44742)[sext_i32_i64(squot32(local_tid_44738,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_44755 =
                                 slt64(srem64(sext_i32_i64(local_tid_44738),
                                              i32_res_27792),
                                       sext_i32_i64(local_tid_44738) -
                                       sext_i32_i64(squot32(local_tid_44738,
                                                            32) * 32 - 1));
                            
                            if (inactive_44755) {
                                x_31569 = x_31570;
                            }
                            if (!inactive_44755) {
                                float defunc_1_op_res_31571 = x_31569 + x_31570;
                                
                                x_31569 = defunc_1_op_res_31571;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44742)[sext_i32_i64(local_tid_44738)] =
                                x_31569;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44738, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44742)[sext_i32_i64(local_tid_44738)] =
                            x_31570;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44746) *
                      squot64(segred_group_sizze_31565,
                              segment_sizze_nonzzero_44735) +
                      sext_i32_i64(local_tid_44738), m_27773 * i32_res_27792) &&
                slt64(sext_i32_i64(local_tid_44738),
                      squot64(segred_group_sizze_31565,
                              segment_sizze_nonzzero_44735))) {
                ((__global
                  float *) mem_43651)[squot64(sext_i32_i64(virt_group_id_44746) *
                                              squot64(segred_group_sizze_31565,
                                                      segment_sizze_nonzzero_44735) +
                                              sext_i32_i64(local_tid_44738),
                                              i32_res_27792) * i32_res_27792 +
                                      (sext_i32_i64(virt_group_id_44746) *
                                       squot64(segred_group_sizze_31565,
                                               segment_sizze_nonzzero_44735) +
                                       sext_i32_i64(local_tid_44738) -
                                       squot64(sext_i32_i64(virt_group_id_44746) *
                                               squot64(segred_group_sizze_31565,
                                                       segment_sizze_nonzzero_44735) +
                                               sext_i32_i64(local_tid_44738),
                                               i32_res_27792) *
                                       i32_res_27792)] = ((__local
                                                           float *) red_arr_mem_44742)[(sext_i32_i64(local_tid_44738) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_44735 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31565
}
__kernel void mainDetailedzisegred_small_31647(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44874_backing_aligned_0,
                                               int64_t N_27772, int64_t m_27773,
                                               int64_t i32_res_27792,
                                               int64_t num_groups_31694,
                                               __global
                                               unsigned char *mem_43139,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43657,
                                               __global
                                               unsigned char *mem_43875,
                                               int64_t segment_sizze_nonzzero_44867)
{
    #define segred_group_sizze_31693 (mainDetailedzisegred_group_sizze_31641)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44874_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44874_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44869;
    int32_t local_tid_44870;
    int64_t group_sizze_44873;
    int32_t wave_sizze_44872;
    int32_t group_tid_44871;
    
    global_tid_44869 = get_global_id(0);
    local_tid_44870 = get_local_id(0);
    group_sizze_44873 = get_local_size(0);
    wave_sizze_44872 = LOCKSTEP_WIDTH;
    group_tid_44871 = get_group_id(0);
    
    int32_t phys_tid_31647;
    
    phys_tid_31647 = global_tid_44869;
    
    __local char *red_arr_mem_44874;
    
    red_arr_mem_44874 = (__local char *) red_arr_mem_44874_backing_0;
    
    int32_t phys_group_id_44876;
    
    phys_group_id_44876 = get_group_id(0);
    for (int32_t i_44877 = 0; i_44877 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27773 * N_27772,
                                          squot64(segred_group_sizze_31693,
                                                  segment_sizze_nonzzero_44867))) -
                   phys_group_id_44876, sext_i64_i32(num_groups_31694));
         i_44877++) {
        int32_t virt_group_id_44878 = phys_group_id_44876 + i_44877 *
                sext_i64_i32(num_groups_31694);
        int64_t gtid_31636 = squot64(squot64(sext_i32_i64(local_tid_44870),
                                             segment_sizze_nonzzero_44867) +
                                     sext_i32_i64(virt_group_id_44878) *
                                     squot64(segred_group_sizze_31693,
                                             segment_sizze_nonzzero_44867),
                                     N_27772);
        int64_t gtid_31637 = squot64(sext_i32_i64(local_tid_44870),
                                     segment_sizze_nonzzero_44867) +
                sext_i32_i64(virt_group_id_44878) *
                squot64(segred_group_sizze_31693,
                        segment_sizze_nonzzero_44867) -
                squot64(squot64(sext_i32_i64(local_tid_44870),
                                segment_sizze_nonzzero_44867) +
                        sext_i32_i64(virt_group_id_44878) *
                        squot64(segred_group_sizze_31693,
                                segment_sizze_nonzzero_44867), N_27772) *
                N_27772;
        int64_t gtid_31646 = srem64(sext_i32_i64(local_tid_44870),
                                    i32_res_27792);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_27792) && ((slt64(gtid_31636, m_27773) &&
                                             slt64(gtid_31637, N_27772)) &&
                                            slt64(sext_i32_i64(local_tid_44870),
                                                  i32_res_27792 *
                                                  squot64(segred_group_sizze_31693,
                                                          segment_sizze_nonzzero_44867)))) {
                float x_31702 = ((__global
                                  float *) defunc_4_map_res_mem_43657)[gtid_31636 *
                                                                       i32_res_27792 +
                                                                       gtid_31646];
                float x_31703 = ((__global float *) mem_43139)[gtid_31637 *
                                                               i32_res_27792 +
                                                               gtid_31646];
                float defunc_1_f_res_31704 = x_31702 * x_31703;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44874)[sext_i32_i64(local_tid_44870)] =
                        defunc_1_f_res_31704;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44874)[sext_i32_i64(local_tid_44870)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_27792)) {
            // perform segmented scan to imitate reduction
            {
                float x_31697;
                float x_31698;
                float x_44879;
                float x_44880;
                bool ltid_in_bounds_44882;
                
                ltid_in_bounds_44882 = slt64(sext_i32_i64(local_tid_44870),
                                             i32_res_27792 *
                                             squot64(segred_group_sizze_31693,
                                                     segment_sizze_nonzzero_44867));
                
                int32_t skip_threads_44883;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44882) {
                        x_31698 = ((volatile __local
                                    float *) red_arr_mem_44874)[sext_i32_i64(local_tid_44870)];
                        if ((local_tid_44870 - squot32(local_tid_44870, 32) *
                             32) == 0) {
                            x_31697 = x_31698;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44883 = 1;
                    while (slt32(skip_threads_44883, 32)) {
                        if (sle32(skip_threads_44883, local_tid_44870 -
                                  squot32(local_tid_44870, 32) * 32) &&
                            ltid_in_bounds_44882) {
                            // read operands
                            {
                                x_31697 = ((volatile __local
                                            float *) red_arr_mem_44874)[sext_i32_i64(local_tid_44870) -
                                                                        sext_i32_i64(skip_threads_44883)];
                            }
                            // perform operation
                            {
                                bool inactive_44884 =
                                     slt64(srem64(sext_i32_i64(local_tid_44870),
                                                  i32_res_27792),
                                           sext_i32_i64(local_tid_44870) -
                                           sext_i32_i64(local_tid_44870 -
                                           skip_threads_44883));
                                
                                if (inactive_44884) {
                                    x_31697 = x_31698;
                                }
                                if (!inactive_44884) {
                                    float defunc_1_op_res_31699 = x_31697 +
                                          x_31698;
                                    
                                    x_31697 = defunc_1_op_res_31699;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44872, skip_threads_44883)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44883, local_tid_44870 -
                                  squot32(local_tid_44870, 32) * 32) &&
                            ltid_in_bounds_44882) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44874)[sext_i32_i64(local_tid_44870)] =
                                    x_31697;
                                x_31698 = x_31697;
                            }
                        }
                        if (sle32(wave_sizze_44872, skip_threads_44883)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44883 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44870 - squot32(local_tid_44870, 32) * 32) ==
                        31 && ltid_in_bounds_44882) {
                        ((volatile __local
                          float *) red_arr_mem_44874)[sext_i32_i64(squot32(local_tid_44870,
                                                                           32))] =
                            x_31697;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44885;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44870, 32) == 0 &&
                            ltid_in_bounds_44882) {
                            x_44880 = ((volatile __local
                                        float *) red_arr_mem_44874)[sext_i32_i64(local_tid_44870)];
                            if ((local_tid_44870 - squot32(local_tid_44870,
                                                           32) * 32) == 0) {
                                x_44879 = x_44880;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44885 = 1;
                        while (slt32(skip_threads_44885, 32)) {
                            if (sle32(skip_threads_44885, local_tid_44870 -
                                      squot32(local_tid_44870, 32) * 32) &&
                                (squot32(local_tid_44870, 32) == 0 &&
                                 ltid_in_bounds_44882)) {
                                // read operands
                                {
                                    x_44879 = ((volatile __local
                                                float *) red_arr_mem_44874)[sext_i32_i64(local_tid_44870) -
                                                                            sext_i32_i64(skip_threads_44885)];
                                }
                                // perform operation
                                {
                                    bool inactive_44886 =
                                         slt64(srem64(sext_i32_i64(local_tid_44870 *
                                                      32 + 32 - 1),
                                                      i32_res_27792),
                                               sext_i32_i64(local_tid_44870 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44870 -
                                                             skip_threads_44885) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44886) {
                                        x_44879 = x_44880;
                                    }
                                    if (!inactive_44886) {
                                        float defunc_1_op_res_44881 = x_44879 +
                                              x_44880;
                                        
                                        x_44879 = defunc_1_op_res_44881;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44872, skip_threads_44885)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44885, local_tid_44870 -
                                      squot32(local_tid_44870, 32) * 32) &&
                                (squot32(local_tid_44870, 32) == 0 &&
                                 ltid_in_bounds_44882)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44874)[sext_i32_i64(local_tid_44870)] =
                                        x_44879;
                                    x_44880 = x_44879;
                                }
                            }
                            if (sle32(wave_sizze_44872, skip_threads_44885)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44885 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44870, 32) == 0 ||
                          !ltid_in_bounds_44882)) {
                        // read operands
                        {
                            x_31698 = x_31697;
                            x_31697 = ((__local
                                        float *) red_arr_mem_44874)[sext_i32_i64(squot32(local_tid_44870,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_44887 =
                                 slt64(srem64(sext_i32_i64(local_tid_44870),
                                              i32_res_27792),
                                       sext_i32_i64(local_tid_44870) -
                                       sext_i32_i64(squot32(local_tid_44870,
                                                            32) * 32 - 1));
                            
                            if (inactive_44887) {
                                x_31697 = x_31698;
                            }
                            if (!inactive_44887) {
                                float defunc_1_op_res_31699 = x_31697 + x_31698;
                                
                                x_31697 = defunc_1_op_res_31699;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44874)[sext_i32_i64(local_tid_44870)] =
                                x_31697;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44870, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44874)[sext_i32_i64(local_tid_44870)] =
                            x_31698;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44878) *
                      squot64(segred_group_sizze_31693,
                              segment_sizze_nonzzero_44867) +
                      sext_i32_i64(local_tid_44870), m_27773 * N_27772) &&
                slt64(sext_i32_i64(local_tid_44870),
                      squot64(segred_group_sizze_31693,
                              segment_sizze_nonzzero_44867))) {
                ((__global
                  float *) mem_43875)[squot64(sext_i32_i64(virt_group_id_44878) *
                                              squot64(segred_group_sizze_31693,
                                                      segment_sizze_nonzzero_44867) +
                                              sext_i32_i64(local_tid_44870),
                                              N_27772) * N_27772 +
                                      (sext_i32_i64(virt_group_id_44878) *
                                       squot64(segred_group_sizze_31693,
                                               segment_sizze_nonzzero_44867) +
                                       sext_i32_i64(local_tid_44870) -
                                       squot64(sext_i32_i64(virt_group_id_44878) *
                                               squot64(segred_group_sizze_31693,
                                                       segment_sizze_nonzzero_44867) +
                                               sext_i32_i64(local_tid_44870),
                                               N_27772) * N_27772)] = ((__local
                                                                        float *) red_arr_mem_44874)[(sext_i32_i64(local_tid_44870) +
                                                                                                     1) *
                                                                                                    segment_sizze_nonzzero_44867 -
                                                                                                    1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31693
}
__kernel void mainDetailedzisegred_small_32213(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_45128_backing_aligned_0,
                                               int64_t N_27772, int64_t m_27773,
                                               int64_t i32_res_27786,
                                               int64_t num_groups_32260,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43919,
                                               __global
                                               unsigned char *mem_43970,
                                               __global
                                               unsigned char *mem_43973,
                                               int64_t segment_sizze_nonzzero_45121)
{
    #define segred_group_sizze_32259 (mainDetailedzisegred_group_sizze_32207)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45128_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45128_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45123;
    int32_t local_tid_45124;
    int64_t group_sizze_45127;
    int32_t wave_sizze_45126;
    int32_t group_tid_45125;
    
    global_tid_45123 = get_global_id(0);
    local_tid_45124 = get_local_id(0);
    group_sizze_45127 = get_local_size(0);
    wave_sizze_45126 = LOCKSTEP_WIDTH;
    group_tid_45125 = get_group_id(0);
    
    int32_t phys_tid_32213;
    
    phys_tid_32213 = global_tid_45123;
    
    __local char *red_arr_mem_45128;
    
    red_arr_mem_45128 = (__local char *) red_arr_mem_45128_backing_0;
    
    int32_t phys_group_id_45130;
    
    phys_group_id_45130 = get_group_id(0);
    for (int32_t i_45131 = 0; i_45131 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27773,
                                          squot64(segred_group_sizze_32259,
                                                  segment_sizze_nonzzero_45121))) -
                   phys_group_id_45130, sext_i64_i32(num_groups_32260));
         i_45131++) {
        int32_t virt_group_id_45132 = phys_group_id_45130 + i_45131 *
                sext_i64_i32(num_groups_32260);
        int64_t gtid_32204 = squot64(sext_i32_i64(local_tid_45124),
                                     segment_sizze_nonzzero_45121) +
                sext_i32_i64(virt_group_id_45132) *
                squot64(segred_group_sizze_32259, segment_sizze_nonzzero_45121);
        int64_t gtid_32212 = srem64(sext_i32_i64(local_tid_45124),
                                    i32_res_27786);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_27786) && (slt64(gtid_32204, m_27773) &&
                                            slt64(sext_i32_i64(local_tid_45124),
                                                  i32_res_27786 *
                                                  squot64(segred_group_sizze_32259,
                                                          segment_sizze_nonzzero_45121)))) {
                int32_t defunc_0_f_res_32267 = ((__global
                                                 int32_t *) mem_43970)[gtid_32204];
                int32_t index_primexp_41162 = sext_i64_i32(gtid_32212);
                bool cond_32269 = slt32(index_primexp_41162,
                                        defunc_0_f_res_32267);
                float defunc_0_f_res_32270;
                
                if (cond_32269) {
                    int64_t i_32271 = sext_i32_i64(index_primexp_41162);
                    float defunc_0_f_res_t_res_32272 = ((__global
                                                         float *) defunc_4_map_res_mem_43919)[gtid_32204 *
                                                                                              N_27772 +
                                                                                              i_32271];
                    
                    defunc_0_f_res_32270 = defunc_0_f_res_t_res_32272;
                } else {
                    defunc_0_f_res_32270 = 0.0F;
                }
                
                float defunc_0_f_res_32273 = defunc_0_f_res_32270 *
                      defunc_0_f_res_32270;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45128)[sext_i32_i64(local_tid_45124)] =
                        defunc_0_f_res_32273;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45128)[sext_i32_i64(local_tid_45124)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_27786)) {
            // perform segmented scan to imitate reduction
            {
                float x_32263;
                float x_32264;
                float x_45133;
                float x_45134;
                bool ltid_in_bounds_45136;
                
                ltid_in_bounds_45136 = slt64(sext_i32_i64(local_tid_45124),
                                             i32_res_27786 *
                                             squot64(segred_group_sizze_32259,
                                                     segment_sizze_nonzzero_45121));
                
                int32_t skip_threads_45137;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45136) {
                        x_32264 = ((volatile __local
                                    float *) red_arr_mem_45128)[sext_i32_i64(local_tid_45124)];
                        if ((local_tid_45124 - squot32(local_tid_45124, 32) *
                             32) == 0) {
                            x_32263 = x_32264;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45137 = 1;
                    while (slt32(skip_threads_45137, 32)) {
                        if (sle32(skip_threads_45137, local_tid_45124 -
                                  squot32(local_tid_45124, 32) * 32) &&
                            ltid_in_bounds_45136) {
                            // read operands
                            {
                                x_32263 = ((volatile __local
                                            float *) red_arr_mem_45128)[sext_i32_i64(local_tid_45124) -
                                                                        sext_i32_i64(skip_threads_45137)];
                            }
                            // perform operation
                            {
                                bool inactive_45138 =
                                     slt64(srem64(sext_i32_i64(local_tid_45124),
                                                  i32_res_27786),
                                           sext_i32_i64(local_tid_45124) -
                                           sext_i32_i64(local_tid_45124 -
                                           skip_threads_45137));
                                
                                if (inactive_45138) {
                                    x_32263 = x_32264;
                                }
                                if (!inactive_45138) {
                                    float defunc_1_op_res_32265 = x_32263 +
                                          x_32264;
                                    
                                    x_32263 = defunc_1_op_res_32265;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45126, skip_threads_45137)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45137, local_tid_45124 -
                                  squot32(local_tid_45124, 32) * 32) &&
                            ltid_in_bounds_45136) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45128)[sext_i32_i64(local_tid_45124)] =
                                    x_32263;
                                x_32264 = x_32263;
                            }
                        }
                        if (sle32(wave_sizze_45126, skip_threads_45137)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45137 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45124 - squot32(local_tid_45124, 32) * 32) ==
                        31 && ltid_in_bounds_45136) {
                        ((volatile __local
                          float *) red_arr_mem_45128)[sext_i32_i64(squot32(local_tid_45124,
                                                                           32))] =
                            x_32263;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45139;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45124, 32) == 0 &&
                            ltid_in_bounds_45136) {
                            x_45134 = ((volatile __local
                                        float *) red_arr_mem_45128)[sext_i32_i64(local_tid_45124)];
                            if ((local_tid_45124 - squot32(local_tid_45124,
                                                           32) * 32) == 0) {
                                x_45133 = x_45134;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45139 = 1;
                        while (slt32(skip_threads_45139, 32)) {
                            if (sle32(skip_threads_45139, local_tid_45124 -
                                      squot32(local_tid_45124, 32) * 32) &&
                                (squot32(local_tid_45124, 32) == 0 &&
                                 ltid_in_bounds_45136)) {
                                // read operands
                                {
                                    x_45133 = ((volatile __local
                                                float *) red_arr_mem_45128)[sext_i32_i64(local_tid_45124) -
                                                                            sext_i32_i64(skip_threads_45139)];
                                }
                                // perform operation
                                {
                                    bool inactive_45140 =
                                         slt64(srem64(sext_i32_i64(local_tid_45124 *
                                                      32 + 32 - 1),
                                                      i32_res_27786),
                                               sext_i32_i64(local_tid_45124 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45124 -
                                                             skip_threads_45139) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45140) {
                                        x_45133 = x_45134;
                                    }
                                    if (!inactive_45140) {
                                        float defunc_1_op_res_45135 = x_45133 +
                                              x_45134;
                                        
                                        x_45133 = defunc_1_op_res_45135;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45126, skip_threads_45139)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45139, local_tid_45124 -
                                      squot32(local_tid_45124, 32) * 32) &&
                                (squot32(local_tid_45124, 32) == 0 &&
                                 ltid_in_bounds_45136)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45128)[sext_i32_i64(local_tid_45124)] =
                                        x_45133;
                                    x_45134 = x_45133;
                                }
                            }
                            if (sle32(wave_sizze_45126, skip_threads_45139)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45139 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45124, 32) == 0 ||
                          !ltid_in_bounds_45136)) {
                        // read operands
                        {
                            x_32264 = x_32263;
                            x_32263 = ((__local
                                        float *) red_arr_mem_45128)[sext_i32_i64(squot32(local_tid_45124,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45141 =
                                 slt64(srem64(sext_i32_i64(local_tid_45124),
                                              i32_res_27786),
                                       sext_i32_i64(local_tid_45124) -
                                       sext_i32_i64(squot32(local_tid_45124,
                                                            32) * 32 - 1));
                            
                            if (inactive_45141) {
                                x_32263 = x_32264;
                            }
                            if (!inactive_45141) {
                                float defunc_1_op_res_32265 = x_32263 + x_32264;
                                
                                x_32263 = defunc_1_op_res_32265;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45128)[sext_i32_i64(local_tid_45124)] =
                                x_32263;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45124, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45128)[sext_i32_i64(local_tid_45124)] =
                            x_32264;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45132) *
                      squot64(segred_group_sizze_32259,
                              segment_sizze_nonzzero_45121) +
                      sext_i32_i64(local_tid_45124), m_27773) &&
                slt64(sext_i32_i64(local_tid_45124),
                      squot64(segred_group_sizze_32259,
                              segment_sizze_nonzzero_45121))) {
                ((__global
                  float *) mem_43973)[sext_i32_i64(virt_group_id_45132) *
                                      squot64(segred_group_sizze_32259,
                                              segment_sizze_nonzzero_45121) +
                                      sext_i32_i64(local_tid_45124)] = ((__local
                                                                         float *) red_arr_mem_45128)[(sext_i32_i64(local_tid_45124) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45121 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32259
}
__kernel void mainDetailedzisegred_small_32234(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_45068_backing_aligned_0,
                                               int64_t m_27773, int64_t N_27774,
                                               int64_t i32_res_27786,
                                               int64_t num_groups_32246,
                                               __global
                                               unsigned char *images_mem_43123,
                                               __global
                                               unsigned char *mem_43970,
                                               int64_t segment_sizze_nonzzero_45061)
{
    #define segred_group_sizze_32245 (mainDetailedzisegred_group_sizze_32228)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45068_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45068_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45063;
    int32_t local_tid_45064;
    int64_t group_sizze_45067;
    int32_t wave_sizze_45066;
    int32_t group_tid_45065;
    
    global_tid_45063 = get_global_id(0);
    local_tid_45064 = get_local_id(0);
    group_sizze_45067 = get_local_size(0);
    wave_sizze_45066 = LOCKSTEP_WIDTH;
    group_tid_45065 = get_group_id(0);
    
    int32_t phys_tid_32234;
    
    phys_tid_32234 = global_tid_45063;
    
    __local char *red_arr_mem_45068;
    
    red_arr_mem_45068 = (__local char *) red_arr_mem_45068_backing_0;
    
    int32_t phys_group_id_45070;
    
    phys_group_id_45070 = get_group_id(0);
    for (int32_t i_45071 = 0; i_45071 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27773,
                                          squot64(segred_group_sizze_32245,
                                                  segment_sizze_nonzzero_45061))) -
                   phys_group_id_45070, sext_i64_i32(num_groups_32246));
         i_45071++) {
        int32_t virt_group_id_45072 = phys_group_id_45070 + i_45071 *
                sext_i64_i32(num_groups_32246);
        int64_t gtid_32225 = squot64(sext_i32_i64(local_tid_45064),
                                     segment_sizze_nonzzero_45061) +
                sext_i32_i64(virt_group_id_45072) *
                squot64(segred_group_sizze_32245, segment_sizze_nonzzero_45061);
        int64_t gtid_32233 = srem64(sext_i32_i64(local_tid_45064),
                                    i32_res_27786);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_27786) && (slt64(gtid_32225, m_27773) &&
                                            slt64(sext_i32_i64(local_tid_45064),
                                                  i32_res_27786 *
                                                  squot64(segred_group_sizze_32245,
                                                          segment_sizze_nonzzero_45061)))) {
                float x_32253 = ((__global
                                  float *) images_mem_43123)[gtid_32225 *
                                                             N_27774 +
                                                             gtid_32233];
                bool isnan_res_32254;
                
                isnan_res_32254 = futrts_isnan32(x_32253);
                
                bool cond_32255 = !isnan_res_32254;
                int32_t defunc_0_f_res_32256 = btoi_bool_i32(cond_32255);
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      int32_t *) red_arr_mem_45068)[sext_i32_i64(local_tid_45064)] =
                        defunc_0_f_res_32256;
                }
            } else {
                ((__local
                  int32_t *) red_arr_mem_45068)[sext_i32_i64(local_tid_45064)] =
                    0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_27786)) {
            // perform segmented scan to imitate reduction
            {
                int32_t x_32249;
                int32_t x_32250;
                int32_t x_45073;
                int32_t x_45074;
                bool ltid_in_bounds_45076;
                
                ltid_in_bounds_45076 = slt64(sext_i32_i64(local_tid_45064),
                                             i32_res_27786 *
                                             squot64(segred_group_sizze_32245,
                                                     segment_sizze_nonzzero_45061));
                
                int32_t skip_threads_45077;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45076) {
                        x_32250 = ((volatile __local
                                    int32_t *) red_arr_mem_45068)[sext_i32_i64(local_tid_45064)];
                        if ((local_tid_45064 - squot32(local_tid_45064, 32) *
                             32) == 0) {
                            x_32249 = x_32250;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45077 = 1;
                    while (slt32(skip_threads_45077, 32)) {
                        if (sle32(skip_threads_45077, local_tid_45064 -
                                  squot32(local_tid_45064, 32) * 32) &&
                            ltid_in_bounds_45076) {
                            // read operands
                            {
                                x_32249 = ((volatile __local
                                            int32_t *) red_arr_mem_45068)[sext_i32_i64(local_tid_45064) -
                                                                          sext_i32_i64(skip_threads_45077)];
                            }
                            // perform operation
                            {
                                bool inactive_45078 =
                                     slt64(srem64(sext_i32_i64(local_tid_45064),
                                                  i32_res_27786),
                                           sext_i32_i64(local_tid_45064) -
                                           sext_i32_i64(local_tid_45064 -
                                           skip_threads_45077));
                                
                                if (inactive_45078) {
                                    x_32249 = x_32250;
                                }
                                if (!inactive_45078) {
                                    int32_t defunc_1_op_res_32251 =
                                            add32(x_32249, x_32250);
                                    
                                    x_32249 = defunc_1_op_res_32251;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45066, skip_threads_45077)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45077, local_tid_45064 -
                                  squot32(local_tid_45064, 32) * 32) &&
                            ltid_in_bounds_45076) {
                            // write result
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_45068)[sext_i32_i64(local_tid_45064)] =
                                    x_32249;
                                x_32250 = x_32249;
                            }
                        }
                        if (sle32(wave_sizze_45066, skip_threads_45077)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45077 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45064 - squot32(local_tid_45064, 32) * 32) ==
                        31 && ltid_in_bounds_45076) {
                        ((volatile __local
                          int32_t *) red_arr_mem_45068)[sext_i32_i64(squot32(local_tid_45064,
                                                                             32))] =
                            x_32249;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45079;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45064, 32) == 0 &&
                            ltid_in_bounds_45076) {
                            x_45074 = ((volatile __local
                                        int32_t *) red_arr_mem_45068)[sext_i32_i64(local_tid_45064)];
                            if ((local_tid_45064 - squot32(local_tid_45064,
                                                           32) * 32) == 0) {
                                x_45073 = x_45074;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45079 = 1;
                        while (slt32(skip_threads_45079, 32)) {
                            if (sle32(skip_threads_45079, local_tid_45064 -
                                      squot32(local_tid_45064, 32) * 32) &&
                                (squot32(local_tid_45064, 32) == 0 &&
                                 ltid_in_bounds_45076)) {
                                // read operands
                                {
                                    x_45073 = ((volatile __local
                                                int32_t *) red_arr_mem_45068)[sext_i32_i64(local_tid_45064) -
                                                                              sext_i32_i64(skip_threads_45079)];
                                }
                                // perform operation
                                {
                                    bool inactive_45080 =
                                         slt64(srem64(sext_i32_i64(local_tid_45064 *
                                                      32 + 32 - 1),
                                                      i32_res_27786),
                                               sext_i32_i64(local_tid_45064 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45064 -
                                                             skip_threads_45079) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45080) {
                                        x_45073 = x_45074;
                                    }
                                    if (!inactive_45080) {
                                        int32_t defunc_1_op_res_45075 =
                                                add32(x_45073, x_45074);
                                        
                                        x_45073 = defunc_1_op_res_45075;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45066, skip_threads_45079)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45079, local_tid_45064 -
                                      squot32(local_tid_45064, 32) * 32) &&
                                (squot32(local_tid_45064, 32) == 0 &&
                                 ltid_in_bounds_45076)) {
                                // write result
                                {
                                    ((volatile __local
                                      int32_t *) red_arr_mem_45068)[sext_i32_i64(local_tid_45064)] =
                                        x_45073;
                                    x_45074 = x_45073;
                                }
                            }
                            if (sle32(wave_sizze_45066, skip_threads_45079)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45079 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45064, 32) == 0 ||
                          !ltid_in_bounds_45076)) {
                        // read operands
                        {
                            x_32250 = x_32249;
                            x_32249 = ((__local
                                        int32_t *) red_arr_mem_45068)[sext_i32_i64(squot32(local_tid_45064,
                                                                                           32)) -
                                                                      1];
                        }
                        // perform operation
                        {
                            bool inactive_45081 =
                                 slt64(srem64(sext_i32_i64(local_tid_45064),
                                              i32_res_27786),
                                       sext_i32_i64(local_tid_45064) -
                                       sext_i32_i64(squot32(local_tid_45064,
                                                            32) * 32 - 1));
                            
                            if (inactive_45081) {
                                x_32249 = x_32250;
                            }
                            if (!inactive_45081) {
                                int32_t defunc_1_op_res_32251 = add32(x_32249,
                                                                      x_32250);
                                
                                x_32249 = defunc_1_op_res_32251;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              int32_t *) red_arr_mem_45068)[sext_i32_i64(local_tid_45064)] =
                                x_32249;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45064, 32) == 0) {
                        ((__local
                          int32_t *) red_arr_mem_45068)[sext_i32_i64(local_tid_45064)] =
                            x_32250;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45072) *
                      squot64(segred_group_sizze_32245,
                              segment_sizze_nonzzero_45061) +
                      sext_i32_i64(local_tid_45064), m_27773) &&
                slt64(sext_i32_i64(local_tid_45064),
                      squot64(segred_group_sizze_32245,
                              segment_sizze_nonzzero_45061))) {
                ((__global
                  int32_t *) mem_43970)[sext_i32_i64(virt_group_id_45072) *
                                        squot64(segred_group_sizze_32245,
                                                segment_sizze_nonzzero_45061) +
                                        sext_i32_i64(local_tid_45064)] =
                    ((__local
                      int32_t *) red_arr_mem_45068)[(sext_i32_i64(local_tid_45064) +
                                                     1) *
                                                    segment_sizze_nonzzero_45061 -
                                                    1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32245
}
__kernel void mainDetailedzisegred_small_32385(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_45237_backing_aligned_0,
                                               int64_t N_27772, int64_t m_27773,
                                               int64_t i32_res_28147,
                                               int64_t num_groups_32403,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43919,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43982,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43983,
                                               __global
                                               unsigned char *mem_44016,
                                               int64_t segment_sizze_nonzzero_45230)
{
    #define segred_group_sizze_32402 (mainDetailedzisegred_group_sizze_32379)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45237_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45237_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45232;
    int32_t local_tid_45233;
    int64_t group_sizze_45236;
    int32_t wave_sizze_45235;
    int32_t group_tid_45234;
    
    global_tid_45232 = get_global_id(0);
    local_tid_45233 = get_local_id(0);
    group_sizze_45236 = get_local_size(0);
    wave_sizze_45235 = LOCKSTEP_WIDTH;
    group_tid_45234 = get_group_id(0);
    
    int32_t phys_tid_32385;
    
    phys_tid_32385 = global_tid_45232;
    
    __local char *red_arr_mem_45237;
    
    red_arr_mem_45237 = (__local char *) red_arr_mem_45237_backing_0;
    
    int32_t phys_group_id_45239;
    
    phys_group_id_45239 = get_group_id(0);
    for (int32_t i_45240 = 0; i_45240 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27773,
                                          squot64(segred_group_sizze_32402,
                                                  segment_sizze_nonzzero_45230))) -
                   phys_group_id_45239, sext_i64_i32(num_groups_32403));
         i_45240++) {
        int32_t virt_group_id_45241 = phys_group_id_45239 + i_45240 *
                sext_i64_i32(num_groups_32403);
        int64_t gtid_32376 = squot64(sext_i32_i64(local_tid_45233),
                                     segment_sizze_nonzzero_45230) +
                sext_i32_i64(virt_group_id_45241) *
                squot64(segred_group_sizze_32402, segment_sizze_nonzzero_45230);
        int64_t gtid_32384 = srem64(sext_i32_i64(local_tid_45233),
                                    i32_res_28147);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_28147) && (slt64(gtid_32376, m_27773) &&
                                            slt64(sext_i32_i64(local_tid_45233),
                                                  i32_res_28147 *
                                                  squot64(segred_group_sizze_32402,
                                                          segment_sizze_nonzzero_45230)))) {
                int32_t x_32411 = ((__global
                                    int32_t *) defunc_3_map_res_mem_43982)[gtid_32376];
                int32_t index_primexp_41167 = sext_i64_i32(gtid_32384);
                bool cond_32413 = slt32(index_primexp_41167, x_32411);
                float defunc_0_f_res_32414;
                
                if (cond_32413) {
                    int32_t x_32410 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43983)[gtid_32376];
                    int32_t x_32415 = add32(x_32410, index_primexp_41167);
                    int32_t x_32416 = sub32(x_32415, x_32411);
                    int32_t i_32417 = add32(1, x_32416);
                    int64_t i_32418 = sext_i32_i64(i_32417);
                    float defunc_0_f_res_t_res_32419 = ((__global
                                                         float *) defunc_4_map_res_mem_43919)[gtid_32376 *
                                                                                              N_27772 +
                                                                                              i_32418];
                    
                    defunc_0_f_res_32414 = defunc_0_f_res_t_res_32419;
                } else {
                    defunc_0_f_res_32414 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45237)[sext_i32_i64(local_tid_45233)] =
                        defunc_0_f_res_32414;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45237)[sext_i32_i64(local_tid_45233)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_28147)) {
            // perform segmented scan to imitate reduction
            {
                float x_32406;
                float x_32407;
                float x_45242;
                float x_45243;
                bool ltid_in_bounds_45245;
                
                ltid_in_bounds_45245 = slt64(sext_i32_i64(local_tid_45233),
                                             i32_res_28147 *
                                             squot64(segred_group_sizze_32402,
                                                     segment_sizze_nonzzero_45230));
                
                int32_t skip_threads_45246;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45245) {
                        x_32407 = ((volatile __local
                                    float *) red_arr_mem_45237)[sext_i32_i64(local_tid_45233)];
                        if ((local_tid_45233 - squot32(local_tid_45233, 32) *
                             32) == 0) {
                            x_32406 = x_32407;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45246 = 1;
                    while (slt32(skip_threads_45246, 32)) {
                        if (sle32(skip_threads_45246, local_tid_45233 -
                                  squot32(local_tid_45233, 32) * 32) &&
                            ltid_in_bounds_45245) {
                            // read operands
                            {
                                x_32406 = ((volatile __local
                                            float *) red_arr_mem_45237)[sext_i32_i64(local_tid_45233) -
                                                                        sext_i32_i64(skip_threads_45246)];
                            }
                            // perform operation
                            {
                                bool inactive_45247 =
                                     slt64(srem64(sext_i32_i64(local_tid_45233),
                                                  i32_res_28147),
                                           sext_i32_i64(local_tid_45233) -
                                           sext_i32_i64(local_tid_45233 -
                                           skip_threads_45246));
                                
                                if (inactive_45247) {
                                    x_32406 = x_32407;
                                }
                                if (!inactive_45247) {
                                    float defunc_1_op_res_32408 = x_32406 +
                                          x_32407;
                                    
                                    x_32406 = defunc_1_op_res_32408;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45235, skip_threads_45246)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45246, local_tid_45233 -
                                  squot32(local_tid_45233, 32) * 32) &&
                            ltid_in_bounds_45245) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45237)[sext_i32_i64(local_tid_45233)] =
                                    x_32406;
                                x_32407 = x_32406;
                            }
                        }
                        if (sle32(wave_sizze_45235, skip_threads_45246)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45246 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45233 - squot32(local_tid_45233, 32) * 32) ==
                        31 && ltid_in_bounds_45245) {
                        ((volatile __local
                          float *) red_arr_mem_45237)[sext_i32_i64(squot32(local_tid_45233,
                                                                           32))] =
                            x_32406;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45248;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45233, 32) == 0 &&
                            ltid_in_bounds_45245) {
                            x_45243 = ((volatile __local
                                        float *) red_arr_mem_45237)[sext_i32_i64(local_tid_45233)];
                            if ((local_tid_45233 - squot32(local_tid_45233,
                                                           32) * 32) == 0) {
                                x_45242 = x_45243;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45248 = 1;
                        while (slt32(skip_threads_45248, 32)) {
                            if (sle32(skip_threads_45248, local_tid_45233 -
                                      squot32(local_tid_45233, 32) * 32) &&
                                (squot32(local_tid_45233, 32) == 0 &&
                                 ltid_in_bounds_45245)) {
                                // read operands
                                {
                                    x_45242 = ((volatile __local
                                                float *) red_arr_mem_45237)[sext_i32_i64(local_tid_45233) -
                                                                            sext_i32_i64(skip_threads_45248)];
                                }
                                // perform operation
                                {
                                    bool inactive_45249 =
                                         slt64(srem64(sext_i32_i64(local_tid_45233 *
                                                      32 + 32 - 1),
                                                      i32_res_28147),
                                               sext_i32_i64(local_tid_45233 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45233 -
                                                             skip_threads_45248) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45249) {
                                        x_45242 = x_45243;
                                    }
                                    if (!inactive_45249) {
                                        float defunc_1_op_res_45244 = x_45242 +
                                              x_45243;
                                        
                                        x_45242 = defunc_1_op_res_45244;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45235, skip_threads_45248)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45248, local_tid_45233 -
                                      squot32(local_tid_45233, 32) * 32) &&
                                (squot32(local_tid_45233, 32) == 0 &&
                                 ltid_in_bounds_45245)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45237)[sext_i32_i64(local_tid_45233)] =
                                        x_45242;
                                    x_45243 = x_45242;
                                }
                            }
                            if (sle32(wave_sizze_45235, skip_threads_45248)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45248 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45233, 32) == 0 ||
                          !ltid_in_bounds_45245)) {
                        // read operands
                        {
                            x_32407 = x_32406;
                            x_32406 = ((__local
                                        float *) red_arr_mem_45237)[sext_i32_i64(squot32(local_tid_45233,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45250 =
                                 slt64(srem64(sext_i32_i64(local_tid_45233),
                                              i32_res_28147),
                                       sext_i32_i64(local_tid_45233) -
                                       sext_i32_i64(squot32(local_tid_45233,
                                                            32) * 32 - 1));
                            
                            if (inactive_45250) {
                                x_32406 = x_32407;
                            }
                            if (!inactive_45250) {
                                float defunc_1_op_res_32408 = x_32406 + x_32407;
                                
                                x_32406 = defunc_1_op_res_32408;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45237)[sext_i32_i64(local_tid_45233)] =
                                x_32406;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45233, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45237)[sext_i32_i64(local_tid_45233)] =
                            x_32407;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45241) *
                      squot64(segred_group_sizze_32402,
                              segment_sizze_nonzzero_45230) +
                      sext_i32_i64(local_tid_45233), m_27773) &&
                slt64(sext_i32_i64(local_tid_45233),
                      squot64(segred_group_sizze_32402,
                              segment_sizze_nonzzero_45230))) {
                ((__global
                  float *) mem_44016)[sext_i32_i64(virt_group_id_45241) *
                                      squot64(segred_group_sizze_32402,
                                              segment_sizze_nonzzero_45230) +
                                      sext_i32_i64(local_tid_45233)] = ((__local
                                                                         float *) red_arr_mem_45237)[(sext_i32_i64(local_tid_45233) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45230 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32402
}
__kernel void mainDetailedzisegred_small_33557(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_45419_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45417_backing_aligned_1,
                                               __local volatile
                                               int64_t *red_arr_mem_45415_backing_aligned_2,
                                               int64_t m_27773,
                                               int64_t iota32_arg_28172,
                                               int64_t num_groups_33728,
                                               __global
                                               unsigned char *mem_44022,
                                               __global
                                               unsigned char *mem_44089,
                                               __global
                                               unsigned char *mem_44091,
                                               __global
                                               unsigned char *mem_44095,
                                               __global
                                               unsigned char *mem_44098,
                                               __global
                                               unsigned char *mem_44100,
                                               __global
                                               unsigned char *mem_44102,
                                               __global
                                               unsigned char *mem_44105,
                                               int64_t segment_sizze_nonzzero_45408)
{
    #define segred_group_sizze_33727 (mainDetailedzisegred_group_sizze_33551)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45419_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45419_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45417_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45417_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45415_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45415_backing_aligned_2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45410;
    int32_t local_tid_45411;
    int64_t group_sizze_45414;
    int32_t wave_sizze_45413;
    int32_t group_tid_45412;
    
    global_tid_45410 = get_global_id(0);
    local_tid_45411 = get_local_id(0);
    group_sizze_45414 = get_local_size(0);
    wave_sizze_45413 = LOCKSTEP_WIDTH;
    group_tid_45412 = get_group_id(0);
    
    int32_t phys_tid_33557;
    
    phys_tid_33557 = global_tid_45410;
    
    __local char *red_arr_mem_45415;
    
    red_arr_mem_45415 = (__local char *) red_arr_mem_45415_backing_0;
    
    __local char *red_arr_mem_45417;
    
    red_arr_mem_45417 = (__local char *) red_arr_mem_45417_backing_1;
    
    __local char *red_arr_mem_45419;
    
    red_arr_mem_45419 = (__local char *) red_arr_mem_45419_backing_2;
    
    int32_t phys_group_id_45421;
    
    phys_group_id_45421 = get_group_id(0);
    for (int32_t i_45422 = 0; i_45422 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27773,
                                          squot64(segred_group_sizze_33727,
                                                  segment_sizze_nonzzero_45408))) -
                   phys_group_id_45421, sext_i64_i32(num_groups_33728));
         i_45422++) {
        int32_t virt_group_id_45423 = phys_group_id_45421 + i_45422 *
                sext_i64_i32(num_groups_33728);
        int64_t gtid_33548 = squot64(sext_i32_i64(local_tid_45411),
                                     segment_sizze_nonzzero_45408) +
                sext_i32_i64(virt_group_id_45423) *
                squot64(segred_group_sizze_33727, segment_sizze_nonzzero_45408);
        int64_t gtid_33556 = srem64(sext_i32_i64(local_tid_45411),
                                    iota32_arg_28172);
        
        // apply map function if in bounds
        {
            if (slt64(0, iota32_arg_28172) && (slt64(gtid_33548, m_27773) &&
                                               slt64(sext_i32_i64(local_tid_45411),
                                                     iota32_arg_28172 *
                                                     squot64(segred_group_sizze_33727,
                                                             segment_sizze_nonzzero_45408)))) {
                int32_t y_33748 = ((__global int32_t *) mem_44091)[gtid_33548];
                float y_33749 = ((__global float *) mem_44089)[gtid_33548];
                float x_33753 = ((__global float *) mem_44095)[gtid_33548 *
                                                               iota32_arg_28172 +
                                                               gtid_33556];
                float x_33754 = ((__global float *) mem_44022)[gtid_33556];
                int32_t index_primexp_41189 = sext_i64_i32(gtid_33556);
                float defunc_0_f_res_33757 = x_33753 / y_33749;
                bool cond_33758 = slt32(index_primexp_41189, y_33748);
                bool isnan_res_33759;
                
                isnan_res_33759 = futrts_isnan32(defunc_0_f_res_33757);
                
                bool cond_t_res_33760 = !isnan_res_33759;
                bool x_33761 = cond_33758 && cond_t_res_33760;
                float abs_res_33762 = (float) fabs(defunc_0_f_res_33757);
                bool defunc_2_f_res_t_res_33763 = x_33754 < abs_res_33762;
                bool x_33764 = x_33761 && defunc_2_f_res_t_res_33763;
                float defunc_1_f_res_33765;
                
                if (cond_33758) {
                    defunc_1_f_res_33765 = defunc_0_f_res_33757;
                } else {
                    defunc_1_f_res_33765 = 0.0F;
                }
                // save map-out results
                {
                    ((__global float *) mem_44105)[gtid_33548 *
                                                   iota32_arg_28172 +
                                                   gtid_33556] =
                        defunc_0_f_res_33757;
                }
                // save results to be reduced
                {
                    ((__local
                      bool *) red_arr_mem_45415)[sext_i32_i64(local_tid_45411)] =
                        x_33764;
                    ((__local
                      int32_t *) red_arr_mem_45417)[sext_i32_i64(local_tid_45411)] =
                        index_primexp_41189;
                    ((__local
                      float *) red_arr_mem_45419)[sext_i32_i64(local_tid_45411)] =
                        defunc_1_f_res_33765;
                }
            } else {
                ((__local
                  bool *) red_arr_mem_45415)[sext_i32_i64(local_tid_45411)] = 0;
                ((__local
                  int32_t *) red_arr_mem_45417)[sext_i32_i64(local_tid_45411)] =
                    -1;
                ((__local
                  float *) red_arr_mem_45419)[sext_i32_i64(local_tid_45411)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, iota32_arg_28172)) {
            // perform segmented scan to imitate reduction
            {
                bool x_33734;
                int32_t x_33735;
                float x_33736;
                bool x_33737;
                int32_t x_33738;
                float x_33739;
                bool x_45424;
                int32_t x_45425;
                float x_45426;
                bool x_45427;
                int32_t x_45428;
                float x_45429;
                bool ltid_in_bounds_45438;
                
                ltid_in_bounds_45438 = slt64(sext_i32_i64(local_tid_45411),
                                             iota32_arg_28172 *
                                             squot64(segred_group_sizze_33727,
                                                     segment_sizze_nonzzero_45408));
                
                int32_t skip_threads_45439;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45438) {
                        x_33737 = ((volatile __local
                                    bool *) red_arr_mem_45415)[sext_i32_i64(local_tid_45411)];
                        x_33738 = ((volatile __local
                                    int32_t *) red_arr_mem_45417)[sext_i32_i64(local_tid_45411)];
                        x_33739 = ((volatile __local
                                    float *) red_arr_mem_45419)[sext_i32_i64(local_tid_45411)];
                        if ((local_tid_45411 - squot32(local_tid_45411, 32) *
                             32) == 0) {
                            x_33734 = x_33737;
                            x_33735 = x_33738;
                            x_33736 = x_33739;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45439 = 1;
                    while (slt32(skip_threads_45439, 32)) {
                        if (sle32(skip_threads_45439, local_tid_45411 -
                                  squot32(local_tid_45411, 32) * 32) &&
                            ltid_in_bounds_45438) {
                            // read operands
                            {
                                x_33734 = ((volatile __local
                                            bool *) red_arr_mem_45415)[sext_i32_i64(local_tid_45411) -
                                                                       sext_i32_i64(skip_threads_45439)];
                                x_33735 = ((volatile __local
                                            int32_t *) red_arr_mem_45417)[sext_i32_i64(local_tid_45411) -
                                                                          sext_i32_i64(skip_threads_45439)];
                                x_33736 = ((volatile __local
                                            float *) red_arr_mem_45419)[sext_i32_i64(local_tid_45411) -
                                                                        sext_i32_i64(skip_threads_45439)];
                            }
                            // perform operation
                            {
                                bool inactive_45440 =
                                     slt64(srem64(sext_i32_i64(local_tid_45411),
                                                  iota32_arg_28172),
                                           sext_i32_i64(local_tid_45411) -
                                           sext_i32_i64(local_tid_45411 -
                                           skip_threads_45439));
                                
                                if (inactive_45440) {
                                    x_33734 = x_33737;
                                    x_33735 = x_33738;
                                    x_33736 = x_33739;
                                }
                                if (!inactive_45440) {
                                    bool defunc_1_op_res_33740;
                                    int32_t defunc_1_op_res_33741;
                                    
                                    if (x_33734) {
                                        defunc_1_op_res_33740 = x_33734;
                                        defunc_1_op_res_33741 = x_33735;
                                    } else {
                                        bool x_33742 = x_33737 && x_33737;
                                        bool x_33743 = !x_33737;
                                        bool y_33744 = x_33734 && x_33743;
                                        bool defunc_1_op_res_f_res_33745 =
                                             x_33742 || y_33744;
                                        int32_t defunc_1_op_res_f_res_33746;
                                        
                                        if (x_33737) {
                                            defunc_1_op_res_f_res_33746 =
                                                x_33738;
                                        } else {
                                            defunc_1_op_res_f_res_33746 =
                                                x_33735;
                                        }
                                        defunc_1_op_res_33740 =
                                            defunc_1_op_res_f_res_33745;
                                        defunc_1_op_res_33741 =
                                            defunc_1_op_res_f_res_33746;
                                    }
                                    
                                    float defunc_1_op_res_33747 = x_33736 +
                                          x_33739;
                                    
                                    x_33734 = defunc_1_op_res_33740;
                                    x_33735 = defunc_1_op_res_33741;
                                    x_33736 = defunc_1_op_res_33747;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45413, skip_threads_45439)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45439, local_tid_45411 -
                                  squot32(local_tid_45411, 32) * 32) &&
                            ltid_in_bounds_45438) {
                            // write result
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_45415)[sext_i32_i64(local_tid_45411)] =
                                    x_33734;
                                x_33737 = x_33734;
                                ((volatile __local
                                  int32_t *) red_arr_mem_45417)[sext_i32_i64(local_tid_45411)] =
                                    x_33735;
                                x_33738 = x_33735;
                                ((volatile __local
                                  float *) red_arr_mem_45419)[sext_i32_i64(local_tid_45411)] =
                                    x_33736;
                                x_33739 = x_33736;
                            }
                        }
                        if (sle32(wave_sizze_45413, skip_threads_45439)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45439 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45411 - squot32(local_tid_45411, 32) * 32) ==
                        31 && ltid_in_bounds_45438) {
                        ((volatile __local
                          bool *) red_arr_mem_45415)[sext_i32_i64(squot32(local_tid_45411,
                                                                          32))] =
                            x_33734;
                        ((volatile __local
                          int32_t *) red_arr_mem_45417)[sext_i32_i64(squot32(local_tid_45411,
                                                                             32))] =
                            x_33735;
                        ((volatile __local
                          float *) red_arr_mem_45419)[sext_i32_i64(squot32(local_tid_45411,
                                                                           32))] =
                            x_33736;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45441;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45411, 32) == 0 &&
                            ltid_in_bounds_45438) {
                            x_45427 = ((volatile __local
                                        bool *) red_arr_mem_45415)[sext_i32_i64(local_tid_45411)];
                            x_45428 = ((volatile __local
                                        int32_t *) red_arr_mem_45417)[sext_i32_i64(local_tid_45411)];
                            x_45429 = ((volatile __local
                                        float *) red_arr_mem_45419)[sext_i32_i64(local_tid_45411)];
                            if ((local_tid_45411 - squot32(local_tid_45411,
                                                           32) * 32) == 0) {
                                x_45424 = x_45427;
                                x_45425 = x_45428;
                                x_45426 = x_45429;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45441 = 1;
                        while (slt32(skip_threads_45441, 32)) {
                            if (sle32(skip_threads_45441, local_tid_45411 -
                                      squot32(local_tid_45411, 32) * 32) &&
                                (squot32(local_tid_45411, 32) == 0 &&
                                 ltid_in_bounds_45438)) {
                                // read operands
                                {
                                    x_45424 = ((volatile __local
                                                bool *) red_arr_mem_45415)[sext_i32_i64(local_tid_45411) -
                                                                           sext_i32_i64(skip_threads_45441)];
                                    x_45425 = ((volatile __local
                                                int32_t *) red_arr_mem_45417)[sext_i32_i64(local_tid_45411) -
                                                                              sext_i32_i64(skip_threads_45441)];
                                    x_45426 = ((volatile __local
                                                float *) red_arr_mem_45419)[sext_i32_i64(local_tid_45411) -
                                                                            sext_i32_i64(skip_threads_45441)];
                                }
                                // perform operation
                                {
                                    bool inactive_45442 =
                                         slt64(srem64(sext_i32_i64(local_tid_45411 *
                                                      32 + 32 - 1),
                                                      iota32_arg_28172),
                                               sext_i32_i64(local_tid_45411 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45411 -
                                                             skip_threads_45441) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45442) {
                                        x_45424 = x_45427;
                                        x_45425 = x_45428;
                                        x_45426 = x_45429;
                                    }
                                    if (!inactive_45442) {
                                        bool defunc_1_op_res_45430;
                                        int32_t defunc_1_op_res_45431;
                                        
                                        if (x_45424) {
                                            defunc_1_op_res_45430 = x_45424;
                                            defunc_1_op_res_45431 = x_45425;
                                        } else {
                                            bool x_45432 = x_45427 && x_45427;
                                            bool x_45433 = !x_45427;
                                            bool y_45434 = x_45424 && x_45433;
                                            bool defunc_1_op_res_f_res_45435 =
                                                 x_45432 || y_45434;
                                            int32_t defunc_1_op_res_f_res_45436;
                                            
                                            if (x_45427) {
                                                defunc_1_op_res_f_res_45436 =
                                                    x_45428;
                                            } else {
                                                defunc_1_op_res_f_res_45436 =
                                                    x_45425;
                                            }
                                            defunc_1_op_res_45430 =
                                                defunc_1_op_res_f_res_45435;
                                            defunc_1_op_res_45431 =
                                                defunc_1_op_res_f_res_45436;
                                        }
                                        
                                        float defunc_1_op_res_45437 = x_45426 +
                                              x_45429;
                                        
                                        x_45424 = defunc_1_op_res_45430;
                                        x_45425 = defunc_1_op_res_45431;
                                        x_45426 = defunc_1_op_res_45437;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45413, skip_threads_45441)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45441, local_tid_45411 -
                                      squot32(local_tid_45411, 32) * 32) &&
                                (squot32(local_tid_45411, 32) == 0 &&
                                 ltid_in_bounds_45438)) {
                                // write result
                                {
                                    ((volatile __local
                                      bool *) red_arr_mem_45415)[sext_i32_i64(local_tid_45411)] =
                                        x_45424;
                                    x_45427 = x_45424;
                                    ((volatile __local
                                      int32_t *) red_arr_mem_45417)[sext_i32_i64(local_tid_45411)] =
                                        x_45425;
                                    x_45428 = x_45425;
                                    ((volatile __local
                                      float *) red_arr_mem_45419)[sext_i32_i64(local_tid_45411)] =
                                        x_45426;
                                    x_45429 = x_45426;
                                }
                            }
                            if (sle32(wave_sizze_45413, skip_threads_45441)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45441 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45411, 32) == 0 ||
                          !ltid_in_bounds_45438)) {
                        // read operands
                        {
                            x_33737 = x_33734;
                            x_33738 = x_33735;
                            x_33739 = x_33736;
                            x_33734 = ((__local
                                        bool *) red_arr_mem_45415)[sext_i32_i64(squot32(local_tid_45411,
                                                                                        32)) -
                                                                   1];
                            x_33735 = ((__local
                                        int32_t *) red_arr_mem_45417)[sext_i32_i64(squot32(local_tid_45411,
                                                                                           32)) -
                                                                      1];
                            x_33736 = ((__local
                                        float *) red_arr_mem_45419)[sext_i32_i64(squot32(local_tid_45411,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45443 =
                                 slt64(srem64(sext_i32_i64(local_tid_45411),
                                              iota32_arg_28172),
                                       sext_i32_i64(local_tid_45411) -
                                       sext_i32_i64(squot32(local_tid_45411,
                                                            32) * 32 - 1));
                            
                            if (inactive_45443) {
                                x_33734 = x_33737;
                                x_33735 = x_33738;
                                x_33736 = x_33739;
                            }
                            if (!inactive_45443) {
                                bool defunc_1_op_res_33740;
                                int32_t defunc_1_op_res_33741;
                                
                                if (x_33734) {
                                    defunc_1_op_res_33740 = x_33734;
                                    defunc_1_op_res_33741 = x_33735;
                                } else {
                                    bool x_33742 = x_33737 && x_33737;
                                    bool x_33743 = !x_33737;
                                    bool y_33744 = x_33734 && x_33743;
                                    bool defunc_1_op_res_f_res_33745 =
                                         x_33742 || y_33744;
                                    int32_t defunc_1_op_res_f_res_33746;
                                    
                                    if (x_33737) {
                                        defunc_1_op_res_f_res_33746 = x_33738;
                                    } else {
                                        defunc_1_op_res_f_res_33746 = x_33735;
                                    }
                                    defunc_1_op_res_33740 =
                                        defunc_1_op_res_f_res_33745;
                                    defunc_1_op_res_33741 =
                                        defunc_1_op_res_f_res_33746;
                                }
                                
                                float defunc_1_op_res_33747 = x_33736 + x_33739;
                                
                                x_33734 = defunc_1_op_res_33740;
                                x_33735 = defunc_1_op_res_33741;
                                x_33736 = defunc_1_op_res_33747;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              bool *) red_arr_mem_45415)[sext_i32_i64(local_tid_45411)] =
                                x_33734;
                            ((__local
                              int32_t *) red_arr_mem_45417)[sext_i32_i64(local_tid_45411)] =
                                x_33735;
                            ((__local
                              float *) red_arr_mem_45419)[sext_i32_i64(local_tid_45411)] =
                                x_33736;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45411, 32) == 0) {
                        ((__local
                          bool *) red_arr_mem_45415)[sext_i32_i64(local_tid_45411)] =
                            x_33737;
                        ((__local
                          int32_t *) red_arr_mem_45417)[sext_i32_i64(local_tid_45411)] =
                            x_33738;
                        ((__local
                          float *) red_arr_mem_45419)[sext_i32_i64(local_tid_45411)] =
                            x_33739;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45423) *
                      squot64(segred_group_sizze_33727,
                              segment_sizze_nonzzero_45408) +
                      sext_i32_i64(local_tid_45411), m_27773) &&
                slt64(sext_i32_i64(local_tid_45411),
                      squot64(segred_group_sizze_33727,
                              segment_sizze_nonzzero_45408))) {
                ((__global
                  bool *) mem_44098)[sext_i32_i64(virt_group_id_45423) *
                                     squot64(segred_group_sizze_33727,
                                             segment_sizze_nonzzero_45408) +
                                     sext_i32_i64(local_tid_45411)] = ((__local
                                                                        bool *) red_arr_mem_45415)[(sext_i32_i64(local_tid_45411) +
                                                                                                    1) *
                                                                                                   segment_sizze_nonzzero_45408 -
                                                                                                   1];
                ((__global
                  int32_t *) mem_44100)[sext_i32_i64(virt_group_id_45423) *
                                        squot64(segred_group_sizze_33727,
                                                segment_sizze_nonzzero_45408) +
                                        sext_i32_i64(local_tid_45411)] =
                    ((__local
                      int32_t *) red_arr_mem_45417)[(sext_i32_i64(local_tid_45411) +
                                                     1) *
                                                    segment_sizze_nonzzero_45408 -
                                                    1];
                ((__global
                  float *) mem_44102)[sext_i32_i64(virt_group_id_45423) *
                                      squot64(segred_group_sizze_33727,
                                              segment_sizze_nonzzero_45408) +
                                      sext_i32_i64(local_tid_45411)] = ((__local
                                                                         float *) red_arr_mem_45419)[(sext_i32_i64(local_tid_45411) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45408 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33727
}
__kernel void mainMagnitudezicopy_44521(int64_t m_28474, int64_t i32_res_28626,
                                        int64_t ctx_param_ext_43322,
                                        int64_t ctx_param_ext_43323,
                                        int64_t ctx_param_ext_43325, __global
                                        unsigned char *mem_param_43327, __global
                                        unsigned char *mem_43332)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_44521;
    int32_t copy_ltid_44522;
    int32_t copy_gid_44523;
    
    copy_gtid_44521 = get_global_id(0);
    copy_ltid_44522 = get_local_id(0);
    copy_gid_44523 = get_group_id(0);
    if (slt64(sext_i32_i64(copy_gtid_44521), m_28474 * i32_res_28626)) {
        ((__global float *) mem_43332)[(sext_i32_i64(copy_gtid_44521) -
                                        squot64(sext_i32_i64(copy_gtid_44521),
                                                i32_res_28626) *
                                        i32_res_28626) * m_28474 +
                                       squot64(sext_i32_i64(copy_gtid_44521),
                                               i32_res_28626)] = ((__global
                                                                   float *) mem_param_43327)[ctx_param_ext_43322 +
                                                                                             (squot64(sext_i32_i64(copy_gtid_44521),
                                                                                                      i32_res_28626) *
                                                                                              ctx_param_ext_43323 +
                                                                                              (sext_i32_i64(copy_gtid_44521) -
                                                                                               squot64(sext_i32_i64(copy_gtid_44521),
                                                                                                       i32_res_28626) *
                                                                                               i32_res_28626) *
                                                                                              ctx_param_ext_43325)];
    }
    
  error_0:
    return;
}
__kernel void mainMagnitudeziscan_stage1_36021(__global int *global_failure,
                                               __local volatile
                                               int64_t *scan_arr_mem_44951_backing_aligned_0,
                                               int64_t N_28473, int64_t m_28474,
                                               int64_t N_28475, __global
                                               unsigned char *images_mem_43123,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43881,
                                               __global
                                               unsigned char *mem_43910,
                                               __global
                                               unsigned char *mem_43913,
                                               int32_t num_threads_44945)
{
    #define segscan_group_sizze_36038 (mainMagnitudezisegscan_group_sizze_36015)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44951_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44951_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44946;
    int32_t local_tid_44947;
    int64_t group_sizze_44950;
    int32_t wave_sizze_44949;
    int32_t group_tid_44948;
    
    global_tid_44946 = get_global_id(0);
    local_tid_44947 = get_local_id(0);
    group_sizze_44950 = get_local_size(0);
    wave_sizze_44949 = LOCKSTEP_WIDTH;
    group_tid_44948 = get_group_id(0);
    
    int32_t phys_tid_36021;
    
    phys_tid_36021 = global_tid_44946;
    
    __local char *scan_arr_mem_44951;
    
    scan_arr_mem_44951 = (__local char *) scan_arr_mem_44951_backing_0;
    
    int64_t x_36043;
    int64_t x_36044;
    
    x_36043 = 0;
    for (int64_t j_44953 = 0; j_44953 < sdiv_up64(m_28474 * N_28473,
                                                  sext_i32_i64(num_threads_44945));
         j_44953++) {
        int64_t chunk_offset_44954 = segscan_group_sizze_36038 * j_44953 +
                sext_i32_i64(group_tid_44948) * (segscan_group_sizze_36038 *
                                                 sdiv_up64(m_28474 * N_28473,
                                                           sext_i32_i64(num_threads_44945)));
        int64_t flat_idx_44955 = chunk_offset_44954 +
                sext_i32_i64(local_tid_44947);
        int64_t gtid_36012 = squot64(flat_idx_44955, N_28473);
        int64_t gtid_36020 = flat_idx_44955 - squot64(flat_idx_44955, N_28473) *
                N_28473;
        
        // threads in bounds read input
        {
            if (slt64(gtid_36012, m_28474) && slt64(gtid_36020, N_28473)) {
                float x_36048 = ((__global
                                  float *) images_mem_43123)[gtid_36012 *
                                                             N_28475 +
                                                             gtid_36020];
                bool isnan_res_36050;
                
                isnan_res_36050 = futrts_isnan32(x_36048);
                
                bool cond_36051 = !isnan_res_36050;
                float defunc_0_f_res_36052;
                
                if (cond_36051) {
                    float x_36049 = ((__global
                                      float *) defunc_3_map_res_mem_43881)[gtid_36012 *
                                                                           N_28473 +
                                                                           gtid_36020];
                    float defunc_0_f_res_t_res_36053 = x_36048 - x_36049;
                    
                    defunc_0_f_res_36052 = defunc_0_f_res_t_res_36053;
                } else {
                    defunc_0_f_res_36052 = NAN;
                }
                
                bool isnan_res_36054;
                
                isnan_res_36054 = futrts_isnan32(defunc_0_f_res_36052);
                
                bool defunc_0_p_res_36055 = !isnan_res_36054;
                int64_t defunc_0_f_res_36056 =
                        btoi_bool_i64(defunc_0_p_res_36055);
                
                // write to-scan values to parameters
                {
                    x_36044 = defunc_0_f_res_36056;
                }
                // write mapped values results to global memory
                {
                    ((__global float *) mem_43913)[gtid_36012 * N_28473 +
                                                   gtid_36020] =
                        defunc_0_f_res_36052;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_36012, m_28474) && slt64(gtid_36020,
                                                          N_28473))) {
                    x_36044 = 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_36045 = add64(x_36043, x_36044);
                
                ((__local
                  int64_t *) scan_arr_mem_44951)[sext_i32_i64(local_tid_44947)] =
                    defunc_1_op_res_36045;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_44956;
            int64_t x_44957;
            int64_t x_44959;
            int64_t x_44960;
            bool ltid_in_bounds_44962;
            
            ltid_in_bounds_44962 = slt64(sext_i32_i64(local_tid_44947),
                                         segscan_group_sizze_36038);
            
            int32_t skip_threads_44963;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_44962) {
                    x_44957 = ((volatile __local
                                int64_t *) scan_arr_mem_44951)[sext_i32_i64(local_tid_44947)];
                    if ((local_tid_44947 - squot32(local_tid_44947, 32) * 32) ==
                        0) {
                        x_44956 = x_44957;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_44963 = 1;
                while (slt32(skip_threads_44963, 32)) {
                    if (sle32(skip_threads_44963, local_tid_44947 -
                              squot32(local_tid_44947, 32) * 32) &&
                        ltid_in_bounds_44962) {
                        // read operands
                        {
                            x_44956 = ((volatile __local
                                        int64_t *) scan_arr_mem_44951)[sext_i32_i64(local_tid_44947) -
                                                                       sext_i32_i64(skip_threads_44963)];
                        }
                        // perform operation
                        {
                            bool inactive_44964 =
                                 slt64(srem64(sext_i32_i64(local_tid_44947) +
                                              chunk_offset_44954, N_28473),
                                       sext_i32_i64(local_tid_44947) +
                                       chunk_offset_44954 -
                                       (sext_i32_i64(local_tid_44947 -
                                        skip_threads_44963) +
                                        chunk_offset_44954));
                            
                            if (inactive_44964) {
                                x_44956 = x_44957;
                            }
                            if (!inactive_44964) {
                                int64_t defunc_1_op_res_44958 = add64(x_44956,
                                                                      x_44957);
                                
                                x_44956 = defunc_1_op_res_44958;
                            }
                        }
                    }
                    if (sle32(wave_sizze_44949, skip_threads_44963)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_44963, local_tid_44947 -
                              squot32(local_tid_44947, 32) * 32) &&
                        ltid_in_bounds_44962) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_44951)[sext_i32_i64(local_tid_44947)] =
                                x_44956;
                            x_44957 = x_44956;
                        }
                    }
                    if (sle32(wave_sizze_44949, skip_threads_44963)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_44963 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_44947 - squot32(local_tid_44947, 32) * 32) ==
                    31 && ltid_in_bounds_44962) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_44951)[sext_i32_i64(squot32(local_tid_44947,
                                                                          32))] =
                        x_44956;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_44965;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_44947, 32) == 0 &&
                        ltid_in_bounds_44962) {
                        x_44960 = ((volatile __local
                                    int64_t *) scan_arr_mem_44951)[sext_i32_i64(local_tid_44947)];
                        if ((local_tid_44947 - squot32(local_tid_44947, 32) *
                             32) == 0) {
                            x_44959 = x_44960;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44965 = 1;
                    while (slt32(skip_threads_44965, 32)) {
                        if (sle32(skip_threads_44965, local_tid_44947 -
                                  squot32(local_tid_44947, 32) * 32) &&
                            (squot32(local_tid_44947, 32) == 0 &&
                             ltid_in_bounds_44962)) {
                            // read operands
                            {
                                x_44959 = ((volatile __local
                                            int64_t *) scan_arr_mem_44951)[sext_i32_i64(local_tid_44947) -
                                                                           sext_i32_i64(skip_threads_44965)];
                            }
                            // perform operation
                            {
                                bool inactive_44966 =
                                     slt64(srem64(sext_i32_i64(local_tid_44947 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_44954, N_28473),
                                           sext_i32_i64(local_tid_44947 * 32 +
                                           32 - 1) + chunk_offset_44954 -
                                           (sext_i32_i64((local_tid_44947 -
                                                          skip_threads_44965) *
                                            32 + 32 - 1) + chunk_offset_44954));
                                
                                if (inactive_44966) {
                                    x_44959 = x_44960;
                                }
                                if (!inactive_44966) {
                                    int64_t defunc_1_op_res_44961 =
                                            add64(x_44959, x_44960);
                                    
                                    x_44959 = defunc_1_op_res_44961;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44949, skip_threads_44965)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44965, local_tid_44947 -
                                  squot32(local_tid_44947, 32) * 32) &&
                            (squot32(local_tid_44947, 32) == 0 &&
                             ltid_in_bounds_44962)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_44951)[sext_i32_i64(local_tid_44947)] =
                                    x_44959;
                                x_44960 = x_44959;
                            }
                        }
                        if (sle32(wave_sizze_44949, skip_threads_44965)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44965 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_44947, 32) == 0 ||
                      !ltid_in_bounds_44962)) {
                    // read operands
                    {
                        x_44957 = x_44956;
                        x_44956 = ((__local
                                    int64_t *) scan_arr_mem_44951)[sext_i32_i64(squot32(local_tid_44947,
                                                                                        32)) -
                                                                   1];
                    }
                    // perform operation
                    {
                        bool inactive_44967 =
                             slt64(srem64(sext_i32_i64(local_tid_44947) +
                                          chunk_offset_44954, N_28473),
                                   sext_i32_i64(local_tid_44947) +
                                   chunk_offset_44954 -
                                   (sext_i32_i64(squot32(local_tid_44947, 32) *
                                    32 - 1) + chunk_offset_44954));
                        
                        if (inactive_44967) {
                            x_44956 = x_44957;
                        }
                        if (!inactive_44967) {
                            int64_t defunc_1_op_res_44958 = add64(x_44956,
                                                                  x_44957);
                            
                            x_44956 = defunc_1_op_res_44958;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_44951)[sext_i32_i64(local_tid_44947)] =
                            x_44956;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_44947, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_44951)[sext_i32_i64(local_tid_44947)] =
                        x_44957;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_36012, m_28474) && slt64(gtid_36020, N_28473)) {
                    ((__global int64_t *) mem_43910)[gtid_36012 * N_28473 +
                                                     gtid_36020] = ((__local
                                                                     int64_t *) scan_arr_mem_44951)[sext_i32_i64(local_tid_44947)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_44968 = slt64(srem64(chunk_offset_44954 +
                                                          segscan_group_sizze_36038,
                                                          N_28473),
                                                   chunk_offset_44954 +
                                                   segscan_group_sizze_36038 -
                                                   (chunk_offset_44954 +
                                                    segscan_group_sizze_36038 -
                                                    1));
                bool should_load_carry_44969 = local_tid_44947 == 0 &&
                     !crosses_segment_44968;
                
                if (should_load_carry_44969) {
                    x_36043 = ((__local
                                int64_t *) scan_arr_mem_44951)[segscan_group_sizze_36038 -
                                                               1];
                }
                if (!should_load_carry_44969) {
                    x_36043 = 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_36038
}
__kernel void mainMagnitudeziscan_stage1_37563(__global int *global_failure,
                                               __local volatile
                                               int64_t *scan_arr_mem_45338_backing_aligned_0,
                                               int64_t N_28473, int64_t m_28474,
                                               int64_t iota32_arg_28873,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43919,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43982,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43983,
                                               __global
                                               unsigned char *defunc_0_f_res_mem_44017,
                                               __global
                                               unsigned char *mem_44077,
                                               __global
                                               unsigned char *mem_44081,
                                               int32_t num_threads_45332)
{
    #define segscan_group_sizze_37641 (mainMagnitudezisegscan_group_sizze_37557)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45338_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45338_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45333;
    int32_t local_tid_45334;
    int64_t group_sizze_45337;
    int32_t wave_sizze_45336;
    int32_t group_tid_45335;
    
    global_tid_45333 = get_global_id(0);
    local_tid_45334 = get_local_id(0);
    group_sizze_45337 = get_local_size(0);
    wave_sizze_45336 = LOCKSTEP_WIDTH;
    group_tid_45335 = get_group_id(0);
    
    int32_t phys_tid_37563;
    
    phys_tid_37563 = global_tid_45333;
    
    __local char *scan_arr_mem_45338;
    
    scan_arr_mem_45338 = (__local char *) scan_arr_mem_45338_backing_0;
    
    float x_37645;
    float x_37646;
    
    x_37645 = 0.0F;
    for (int64_t j_45340 = 0; j_45340 < sdiv_up64(m_28474 * iota32_arg_28873,
                                                  sext_i32_i64(num_threads_45332));
         j_45340++) {
        int64_t chunk_offset_45341 = segscan_group_sizze_37641 * j_45340 +
                sext_i32_i64(group_tid_45335) * (segscan_group_sizze_37641 *
                                                 sdiv_up64(m_28474 *
                                                           iota32_arg_28873,
                                                           sext_i32_i64(num_threads_45332)));
        int64_t flat_idx_45342 = chunk_offset_45341 +
                sext_i32_i64(local_tid_45334);
        int64_t gtid_37554 = squot64(flat_idx_45342, iota32_arg_28873);
        int64_t gtid_37562 = flat_idx_45342 - squot64(flat_idx_45342,
                                                      iota32_arg_28873) *
                iota32_arg_28873;
        
        // threads in bounds read input
        {
            if (slt64(gtid_37554, m_28474) && slt64(gtid_37562,
                                                    iota32_arg_28873)) {
                int32_t y_37652 = ((__global int32_t *) mem_44077)[gtid_37554];
                int32_t index_primexp_41183 = sext_i64_i32(gtid_37562);
                bool cond_37655 = sle32(y_37652, index_primexp_41183);
                float defunc_0_f_res_37656;
                
                if (cond_37655) {
                    defunc_0_f_res_37656 = 0.0F;
                } else {
                    int32_t x_37648 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43983)[gtid_37554];
                    int32_t x_37649 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43982)[gtid_37554];
                    float x_37650 = ((__global
                                      float *) defunc_0_f_res_mem_44017)[gtid_37554];
                    bool cond_37657 = index_primexp_41183 == 0;
                    float defunc_0_f_res_f_res_37658;
                    
                    if (cond_37657) {
                        defunc_0_f_res_f_res_37658 = x_37650;
                    } else {
                        int32_t i_37659 = add32(x_37648, index_primexp_41183);
                        int64_t i_37660 = sext_i32_i64(i_37659);
                        float x_37661 = ((__global
                                          float *) defunc_4_map_res_mem_43919)[gtid_37554 *
                                                                               N_28473 +
                                                                               i_37660];
                        int32_t x_37662 = sub32(x_37648, x_37649);
                        int32_t i_37663 = add32(x_37662, index_primexp_41183);
                        int64_t i_37664 = sext_i32_i64(i_37663);
                        float y_37665 = ((__global
                                          float *) defunc_4_map_res_mem_43919)[gtid_37554 *
                                                                               N_28473 +
                                                                               i_37664];
                        float defunc_0_f_res_f_res_f_res_37666 = x_37661 -
                              y_37665;
                        
                        defunc_0_f_res_f_res_37658 =
                            defunc_0_f_res_f_res_f_res_37666;
                    }
                    defunc_0_f_res_37656 = defunc_0_f_res_f_res_37658;
                }
                // write to-scan values to parameters
                {
                    x_37646 = defunc_0_f_res_37656;
                }
                // write mapped values results to global memory
                { }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_37554, m_28474) && slt64(gtid_37562,
                                                          iota32_arg_28873))) {
                    x_37646 = 0.0F;
                }
            }
            // combine with carry and write to local memory
            {
                float defunc_1_op_res_37647 = x_37645 + x_37646;
                
                ((__local
                  float *) scan_arr_mem_45338)[sext_i32_i64(local_tid_45334)] =
                    defunc_1_op_res_37647;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float x_45343;
            float x_45344;
            float x_45346;
            float x_45347;
            bool ltid_in_bounds_45349;
            
            ltid_in_bounds_45349 = slt64(sext_i32_i64(local_tid_45334),
                                         segscan_group_sizze_37641);
            
            int32_t skip_threads_45350;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_45349) {
                    x_45344 = ((volatile __local
                                float *) scan_arr_mem_45338)[sext_i32_i64(local_tid_45334)];
                    if ((local_tid_45334 - squot32(local_tid_45334, 32) * 32) ==
                        0) {
                        x_45343 = x_45344;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_45350 = 1;
                while (slt32(skip_threads_45350, 32)) {
                    if (sle32(skip_threads_45350, local_tid_45334 -
                              squot32(local_tid_45334, 32) * 32) &&
                        ltid_in_bounds_45349) {
                        // read operands
                        {
                            x_45343 = ((volatile __local
                                        float *) scan_arr_mem_45338)[sext_i32_i64(local_tid_45334) -
                                                                     sext_i32_i64(skip_threads_45350)];
                        }
                        // perform operation
                        {
                            bool inactive_45351 =
                                 slt64(srem64(sext_i32_i64(local_tid_45334) +
                                              chunk_offset_45341,
                                              iota32_arg_28873),
                                       sext_i32_i64(local_tid_45334) +
                                       chunk_offset_45341 -
                                       (sext_i32_i64(local_tid_45334 -
                                        skip_threads_45350) +
                                        chunk_offset_45341));
                            
                            if (inactive_45351) {
                                x_45343 = x_45344;
                            }
                            if (!inactive_45351) {
                                float defunc_1_op_res_45345 = x_45343 + x_45344;
                                
                                x_45343 = defunc_1_op_res_45345;
                            }
                        }
                    }
                    if (sle32(wave_sizze_45336, skip_threads_45350)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_45350, local_tid_45334 -
                              squot32(local_tid_45334, 32) * 32) &&
                        ltid_in_bounds_45349) {
                        // write result
                        {
                            ((volatile __local
                              float *) scan_arr_mem_45338)[sext_i32_i64(local_tid_45334)] =
                                x_45343;
                            x_45344 = x_45343;
                        }
                    }
                    if (sle32(wave_sizze_45336, skip_threads_45350)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_45350 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_45334 - squot32(local_tid_45334, 32) * 32) ==
                    31 && ltid_in_bounds_45349) {
                    ((volatile __local
                      float *) scan_arr_mem_45338)[sext_i32_i64(squot32(local_tid_45334,
                                                                        32))] =
                        x_45343;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_45352;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_45334, 32) == 0 &&
                        ltid_in_bounds_45349) {
                        x_45347 = ((volatile __local
                                    float *) scan_arr_mem_45338)[sext_i32_i64(local_tid_45334)];
                        if ((local_tid_45334 - squot32(local_tid_45334, 32) *
                             32) == 0) {
                            x_45346 = x_45347;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45352 = 1;
                    while (slt32(skip_threads_45352, 32)) {
                        if (sle32(skip_threads_45352, local_tid_45334 -
                                  squot32(local_tid_45334, 32) * 32) &&
                            (squot32(local_tid_45334, 32) == 0 &&
                             ltid_in_bounds_45349)) {
                            // read operands
                            {
                                x_45346 = ((volatile __local
                                            float *) scan_arr_mem_45338)[sext_i32_i64(local_tid_45334) -
                                                                         sext_i32_i64(skip_threads_45352)];
                            }
                            // perform operation
                            {
                                bool inactive_45353 =
                                     slt64(srem64(sext_i32_i64(local_tid_45334 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_45341,
                                                  iota32_arg_28873),
                                           sext_i32_i64(local_tid_45334 * 32 +
                                           32 - 1) + chunk_offset_45341 -
                                           (sext_i32_i64((local_tid_45334 -
                                                          skip_threads_45352) *
                                            32 + 32 - 1) + chunk_offset_45341));
                                
                                if (inactive_45353) {
                                    x_45346 = x_45347;
                                }
                                if (!inactive_45353) {
                                    float defunc_1_op_res_45348 = x_45346 +
                                          x_45347;
                                    
                                    x_45346 = defunc_1_op_res_45348;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45336, skip_threads_45352)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45352, local_tid_45334 -
                                  squot32(local_tid_45334, 32) * 32) &&
                            (squot32(local_tid_45334, 32) == 0 &&
                             ltid_in_bounds_45349)) {
                            // write result
                            {
                                ((volatile __local
                                  float *) scan_arr_mem_45338)[sext_i32_i64(local_tid_45334)] =
                                    x_45346;
                                x_45347 = x_45346;
                            }
                        }
                        if (sle32(wave_sizze_45336, skip_threads_45352)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45352 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_45334, 32) == 0 ||
                      !ltid_in_bounds_45349)) {
                    // read operands
                    {
                        x_45344 = x_45343;
                        x_45343 = ((__local
                                    float *) scan_arr_mem_45338)[sext_i32_i64(squot32(local_tid_45334,
                                                                                      32)) -
                                                                 1];
                    }
                    // perform operation
                    {
                        bool inactive_45354 =
                             slt64(srem64(sext_i32_i64(local_tid_45334) +
                                          chunk_offset_45341, iota32_arg_28873),
                                   sext_i32_i64(local_tid_45334) +
                                   chunk_offset_45341 -
                                   (sext_i32_i64(squot32(local_tid_45334, 32) *
                                    32 - 1) + chunk_offset_45341));
                        
                        if (inactive_45354) {
                            x_45343 = x_45344;
                        }
                        if (!inactive_45354) {
                            float defunc_1_op_res_45345 = x_45343 + x_45344;
                            
                            x_45343 = defunc_1_op_res_45345;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          float *) scan_arr_mem_45338)[sext_i32_i64(local_tid_45334)] =
                            x_45343;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_45334, 32) == 0) {
                    ((__local
                      float *) scan_arr_mem_45338)[sext_i32_i64(local_tid_45334)] =
                        x_45344;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_37554, m_28474) && slt64(gtid_37562,
                                                        iota32_arg_28873)) {
                    ((__global float *) mem_44081)[gtid_37554 *
                                                   iota32_arg_28873 +
                                                   gtid_37562] = ((__local
                                                                   float *) scan_arr_mem_45338)[sext_i32_i64(local_tid_45334)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_45355 = slt64(srem64(chunk_offset_45341 +
                                                          segscan_group_sizze_37641,
                                                          iota32_arg_28873),
                                                   chunk_offset_45341 +
                                                   segscan_group_sizze_37641 -
                                                   (chunk_offset_45341 +
                                                    segscan_group_sizze_37641 -
                                                    1));
                bool should_load_carry_45356 = local_tid_45334 == 0 &&
                     !crosses_segment_45355;
                
                if (should_load_carry_45356) {
                    x_37645 = ((__local
                                float *) scan_arr_mem_45338)[segscan_group_sizze_37641 -
                                                             1];
                }
                if (!should_load_carry_45356) {
                    x_37645 = 0.0F;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_37641
}
__kernel void mainMagnitudeziscan_stage2_36021(__global int *global_failure,
                                               __local volatile
                                               int64_t *scan_arr_mem_44975_backing_aligned_0,
                                               int64_t N_28473, int64_t m_28474,
                                               __global
                                               unsigned char *mem_43910,
                                               int64_t stage1_num_groups_44944,
                                               int32_t num_threads_44945)
{
    #define segscan_group_sizze_36038 (mainMagnitudezisegscan_group_sizze_36015)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44975_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44975_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44970;
    int32_t local_tid_44971;
    int64_t group_sizze_44974;
    int32_t wave_sizze_44973;
    int32_t group_tid_44972;
    
    global_tid_44970 = get_global_id(0);
    local_tid_44971 = get_local_id(0);
    group_sizze_44974 = get_local_size(0);
    wave_sizze_44973 = LOCKSTEP_WIDTH;
    group_tid_44972 = get_group_id(0);
    
    int32_t phys_tid_36021;
    
    phys_tid_36021 = global_tid_44970;
    
    __local char *scan_arr_mem_44975;
    
    scan_arr_mem_44975 = (__local char *) scan_arr_mem_44975_backing_0;
    
    int64_t flat_idx_44977;
    
    flat_idx_44977 = (sext_i32_i64(local_tid_44971) + 1) *
        (segscan_group_sizze_36038 * sdiv_up64(m_28474 * N_28473,
                                               sext_i32_i64(num_threads_44945))) -
        1;
    
    int64_t gtid_36012;
    
    gtid_36012 = squot64(flat_idx_44977, N_28473);
    
    int64_t gtid_36020;
    
    gtid_36020 = flat_idx_44977 - squot64(flat_idx_44977, N_28473) * N_28473;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_36012, m_28474) && slt64(gtid_36020, N_28473)) {
            ((__local
              int64_t *) scan_arr_mem_44975)[sext_i32_i64(local_tid_44971)] =
                ((__global int64_t *) mem_43910)[gtid_36012 * N_28473 +
                                                 gtid_36020];
        } else {
            ((__local
              int64_t *) scan_arr_mem_44975)[sext_i32_i64(local_tid_44971)] = 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_36043;
    int64_t x_36044;
    int64_t x_44978;
    int64_t x_44979;
    bool ltid_in_bounds_44981;
    
    ltid_in_bounds_44981 = slt64(sext_i32_i64(local_tid_44971),
                                 stage1_num_groups_44944);
    
    int32_t skip_threads_44982;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44981) {
            x_36044 = ((volatile __local
                        int64_t *) scan_arr_mem_44975)[sext_i32_i64(local_tid_44971)];
            if ((local_tid_44971 - squot32(local_tid_44971, 32) * 32) == 0) {
                x_36043 = x_36044;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44982 = 1;
        while (slt32(skip_threads_44982, 32)) {
            if (sle32(skip_threads_44982, local_tid_44971 -
                      squot32(local_tid_44971, 32) * 32) &&
                ltid_in_bounds_44981) {
                // read operands
                {
                    x_36043 = ((volatile __local
                                int64_t *) scan_arr_mem_44975)[sext_i32_i64(local_tid_44971) -
                                                               sext_i32_i64(skip_threads_44982)];
                }
                // perform operation
                {
                    bool inactive_44983 =
                         slt64(srem64((sext_i32_i64(local_tid_44971) + 1) *
                                      (segscan_group_sizze_36038 *
                                       sdiv_up64(m_28474 * N_28473,
                                                 sext_i32_i64(num_threads_44945))) -
                                      1, N_28473),
                               (sext_i32_i64(local_tid_44971) + 1) *
                               (segscan_group_sizze_36038 * sdiv_up64(m_28474 *
                                                                      N_28473,
                                                                      sext_i32_i64(num_threads_44945))) -
                               1 - ((sext_i32_i64(local_tid_44971 -
                                     skip_threads_44982) + 1) *
                                    (segscan_group_sizze_36038 *
                                     sdiv_up64(m_28474 * N_28473,
                                               sext_i32_i64(num_threads_44945))) -
                                    1));
                    
                    if (inactive_44983) {
                        x_36043 = x_36044;
                    }
                    if (!inactive_44983) {
                        int64_t defunc_1_op_res_36045 = add64(x_36043, x_36044);
                        
                        x_36043 = defunc_1_op_res_36045;
                    }
                }
            }
            if (sle32(wave_sizze_44973, skip_threads_44982)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44982, local_tid_44971 -
                      squot32(local_tid_44971, 32) * 32) &&
                ltid_in_bounds_44981) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_44975)[sext_i32_i64(local_tid_44971)] =
                        x_36043;
                    x_36044 = x_36043;
                }
            }
            if (sle32(wave_sizze_44973, skip_threads_44982)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44982 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44971 - squot32(local_tid_44971, 32) * 32) == 31 &&
            ltid_in_bounds_44981) {
            ((volatile __local
              int64_t *) scan_arr_mem_44975)[sext_i32_i64(squot32(local_tid_44971,
                                                                  32))] =
                x_36043;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44984;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44971, 32) == 0 && ltid_in_bounds_44981) {
                x_44979 = ((volatile __local
                            int64_t *) scan_arr_mem_44975)[sext_i32_i64(local_tid_44971)];
                if ((local_tid_44971 - squot32(local_tid_44971, 32) * 32) ==
                    0) {
                    x_44978 = x_44979;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44984 = 1;
            while (slt32(skip_threads_44984, 32)) {
                if (sle32(skip_threads_44984, local_tid_44971 -
                          squot32(local_tid_44971, 32) * 32) &&
                    (squot32(local_tid_44971, 32) == 0 &&
                     ltid_in_bounds_44981)) {
                    // read operands
                    {
                        x_44978 = ((volatile __local
                                    int64_t *) scan_arr_mem_44975)[sext_i32_i64(local_tid_44971) -
                                                                   sext_i32_i64(skip_threads_44984)];
                    }
                    // perform operation
                    {
                        bool inactive_44985 =
                             slt64(srem64((sext_i32_i64(local_tid_44971 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_36038 *
                                           sdiv_up64(m_28474 * N_28473,
                                                     sext_i32_i64(num_threads_44945))) -
                                          1, N_28473),
                                   (sext_i32_i64(local_tid_44971 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_36038 *
                                               sdiv_up64(m_28474 * N_28473,
                                                         sext_i32_i64(num_threads_44945))) -
                                   1 - ((sext_i32_i64((local_tid_44971 -
                                                       skip_threads_44984) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_36038 *
                                         sdiv_up64(m_28474 * N_28473,
                                                   sext_i32_i64(num_threads_44945))) -
                                        1));
                        
                        if (inactive_44985) {
                            x_44978 = x_44979;
                        }
                        if (!inactive_44985) {
                            int64_t defunc_1_op_res_44980 = add64(x_44978,
                                                                  x_44979);
                            
                            x_44978 = defunc_1_op_res_44980;
                        }
                    }
                }
                if (sle32(wave_sizze_44973, skip_threads_44984)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44984, local_tid_44971 -
                          squot32(local_tid_44971, 32) * 32) &&
                    (squot32(local_tid_44971, 32) == 0 &&
                     ltid_in_bounds_44981)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_44975)[sext_i32_i64(local_tid_44971)] =
                            x_44978;
                        x_44979 = x_44978;
                    }
                }
                if (sle32(wave_sizze_44973, skip_threads_44984)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44984 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44971, 32) == 0 || !ltid_in_bounds_44981)) {
            // read operands
            {
                x_36044 = x_36043;
                x_36043 = ((__local
                            int64_t *) scan_arr_mem_44975)[sext_i32_i64(squot32(local_tid_44971,
                                                                                32)) -
                                                           1];
            }
            // perform operation
            {
                bool inactive_44986 =
                     slt64(srem64((sext_i32_i64(local_tid_44971) + 1) *
                                  (segscan_group_sizze_36038 *
                                   sdiv_up64(m_28474 * N_28473,
                                             sext_i32_i64(num_threads_44945))) -
                                  1, N_28473), (sext_i32_i64(local_tid_44971) +
                                                1) *
                           (segscan_group_sizze_36038 * sdiv_up64(m_28474 *
                                                                  N_28473,
                                                                  sext_i32_i64(num_threads_44945))) -
                           1 - ((sext_i32_i64(squot32(local_tid_44971, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_36038 *
                                                 sdiv_up64(m_28474 * N_28473,
                                                           sext_i32_i64(num_threads_44945))) -
                                1));
                
                if (inactive_44986) {
                    x_36043 = x_36044;
                }
                if (!inactive_44986) {
                    int64_t defunc_1_op_res_36045 = add64(x_36043, x_36044);
                    
                    x_36043 = defunc_1_op_res_36045;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_44975)[sext_i32_i64(local_tid_44971)] =
                    x_36043;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44971, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_44975)[sext_i32_i64(local_tid_44971)] =
                x_36044;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_36012, m_28474) && slt64(gtid_36020, N_28473)) {
            ((__global int64_t *) mem_43910)[gtid_36012 * N_28473 +
                                             gtid_36020] = ((__local
                                                             int64_t *) scan_arr_mem_44975)[sext_i32_i64(local_tid_44971)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_36038
}
__kernel void mainMagnitudeziscan_stage2_37563(__global int *global_failure,
                                               __local volatile
                                               int64_t *scan_arr_mem_45362_backing_aligned_0,
                                               int64_t m_28474,
                                               int64_t iota32_arg_28873,
                                               __global
                                               unsigned char *mem_44081,
                                               int64_t stage1_num_groups_45331,
                                               int32_t num_threads_45332)
{
    #define segscan_group_sizze_37641 (mainMagnitudezisegscan_group_sizze_37557)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45362_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45362_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45357;
    int32_t local_tid_45358;
    int64_t group_sizze_45361;
    int32_t wave_sizze_45360;
    int32_t group_tid_45359;
    
    global_tid_45357 = get_global_id(0);
    local_tid_45358 = get_local_id(0);
    group_sizze_45361 = get_local_size(0);
    wave_sizze_45360 = LOCKSTEP_WIDTH;
    group_tid_45359 = get_group_id(0);
    
    int32_t phys_tid_37563;
    
    phys_tid_37563 = global_tid_45357;
    
    __local char *scan_arr_mem_45362;
    
    scan_arr_mem_45362 = (__local char *) scan_arr_mem_45362_backing_0;
    
    int64_t flat_idx_45364;
    
    flat_idx_45364 = (sext_i32_i64(local_tid_45358) + 1) *
        (segscan_group_sizze_37641 * sdiv_up64(m_28474 * iota32_arg_28873,
                                               sext_i32_i64(num_threads_45332))) -
        1;
    
    int64_t gtid_37554;
    
    gtid_37554 = squot64(flat_idx_45364, iota32_arg_28873);
    
    int64_t gtid_37562;
    
    gtid_37562 = flat_idx_45364 - squot64(flat_idx_45364, iota32_arg_28873) *
        iota32_arg_28873;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_37554, m_28474) && slt64(gtid_37562, iota32_arg_28873)) {
            ((__local
              float *) scan_arr_mem_45362)[sext_i32_i64(local_tid_45358)] =
                ((__global float *) mem_44081)[gtid_37554 * iota32_arg_28873 +
                                               gtid_37562];
        } else {
            ((__local
              float *) scan_arr_mem_45362)[sext_i32_i64(local_tid_45358)] =
                0.0F;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float x_37645;
    float x_37646;
    float x_45365;
    float x_45366;
    bool ltid_in_bounds_45368;
    
    ltid_in_bounds_45368 = slt64(sext_i32_i64(local_tid_45358),
                                 stage1_num_groups_45331);
    
    int32_t skip_threads_45369;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45368) {
            x_37646 = ((volatile __local
                        float *) scan_arr_mem_45362)[sext_i32_i64(local_tid_45358)];
            if ((local_tid_45358 - squot32(local_tid_45358, 32) * 32) == 0) {
                x_37645 = x_37646;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45369 = 1;
        while (slt32(skip_threads_45369, 32)) {
            if (sle32(skip_threads_45369, local_tid_45358 -
                      squot32(local_tid_45358, 32) * 32) &&
                ltid_in_bounds_45368) {
                // read operands
                {
                    x_37645 = ((volatile __local
                                float *) scan_arr_mem_45362)[sext_i32_i64(local_tid_45358) -
                                                             sext_i32_i64(skip_threads_45369)];
                }
                // perform operation
                {
                    bool inactive_45370 =
                         slt64(srem64((sext_i32_i64(local_tid_45358) + 1) *
                                      (segscan_group_sizze_37641 *
                                       sdiv_up64(m_28474 * iota32_arg_28873,
                                                 sext_i32_i64(num_threads_45332))) -
                                      1, iota32_arg_28873),
                               (sext_i32_i64(local_tid_45358) + 1) *
                               (segscan_group_sizze_37641 * sdiv_up64(m_28474 *
                                                                      iota32_arg_28873,
                                                                      sext_i32_i64(num_threads_45332))) -
                               1 - ((sext_i32_i64(local_tid_45358 -
                                     skip_threads_45369) + 1) *
                                    (segscan_group_sizze_37641 *
                                     sdiv_up64(m_28474 * iota32_arg_28873,
                                               sext_i32_i64(num_threads_45332))) -
                                    1));
                    
                    if (inactive_45370) {
                        x_37645 = x_37646;
                    }
                    if (!inactive_45370) {
                        float defunc_1_op_res_37647 = x_37645 + x_37646;
                        
                        x_37645 = defunc_1_op_res_37647;
                    }
                }
            }
            if (sle32(wave_sizze_45360, skip_threads_45369)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45369, local_tid_45358 -
                      squot32(local_tid_45358, 32) * 32) &&
                ltid_in_bounds_45368) {
                // write result
                {
                    ((volatile __local
                      float *) scan_arr_mem_45362)[sext_i32_i64(local_tid_45358)] =
                        x_37645;
                    x_37646 = x_37645;
                }
            }
            if (sle32(wave_sizze_45360, skip_threads_45369)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45369 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45358 - squot32(local_tid_45358, 32) * 32) == 31 &&
            ltid_in_bounds_45368) {
            ((volatile __local
              float *) scan_arr_mem_45362)[sext_i32_i64(squot32(local_tid_45358,
                                                                32))] = x_37645;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45371;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45358, 32) == 0 && ltid_in_bounds_45368) {
                x_45366 = ((volatile __local
                            float *) scan_arr_mem_45362)[sext_i32_i64(local_tid_45358)];
                if ((local_tid_45358 - squot32(local_tid_45358, 32) * 32) ==
                    0) {
                    x_45365 = x_45366;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45371 = 1;
            while (slt32(skip_threads_45371, 32)) {
                if (sle32(skip_threads_45371, local_tid_45358 -
                          squot32(local_tid_45358, 32) * 32) &&
                    (squot32(local_tid_45358, 32) == 0 &&
                     ltid_in_bounds_45368)) {
                    // read operands
                    {
                        x_45365 = ((volatile __local
                                    float *) scan_arr_mem_45362)[sext_i32_i64(local_tid_45358) -
                                                                 sext_i32_i64(skip_threads_45371)];
                    }
                    // perform operation
                    {
                        bool inactive_45372 =
                             slt64(srem64((sext_i32_i64(local_tid_45358 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_37641 *
                                           sdiv_up64(m_28474 * iota32_arg_28873,
                                                     sext_i32_i64(num_threads_45332))) -
                                          1, iota32_arg_28873),
                                   (sext_i32_i64(local_tid_45358 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_37641 *
                                               sdiv_up64(m_28474 *
                                                         iota32_arg_28873,
                                                         sext_i32_i64(num_threads_45332))) -
                                   1 - ((sext_i32_i64((local_tid_45358 -
                                                       skip_threads_45371) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_37641 *
                                         sdiv_up64(m_28474 * iota32_arg_28873,
                                                   sext_i32_i64(num_threads_45332))) -
                                        1));
                        
                        if (inactive_45372) {
                            x_45365 = x_45366;
                        }
                        if (!inactive_45372) {
                            float defunc_1_op_res_45367 = x_45365 + x_45366;
                            
                            x_45365 = defunc_1_op_res_45367;
                        }
                    }
                }
                if (sle32(wave_sizze_45360, skip_threads_45371)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45371, local_tid_45358 -
                          squot32(local_tid_45358, 32) * 32) &&
                    (squot32(local_tid_45358, 32) == 0 &&
                     ltid_in_bounds_45368)) {
                    // write result
                    {
                        ((volatile __local
                          float *) scan_arr_mem_45362)[sext_i32_i64(local_tid_45358)] =
                            x_45365;
                        x_45366 = x_45365;
                    }
                }
                if (sle32(wave_sizze_45360, skip_threads_45371)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45371 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45358, 32) == 0 || !ltid_in_bounds_45368)) {
            // read operands
            {
                x_37646 = x_37645;
                x_37645 = ((__local
                            float *) scan_arr_mem_45362)[sext_i32_i64(squot32(local_tid_45358,
                                                                              32)) -
                                                         1];
            }
            // perform operation
            {
                bool inactive_45373 =
                     slt64(srem64((sext_i32_i64(local_tid_45358) + 1) *
                                  (segscan_group_sizze_37641 *
                                   sdiv_up64(m_28474 * iota32_arg_28873,
                                             sext_i32_i64(num_threads_45332))) -
                                  1, iota32_arg_28873),
                           (sext_i32_i64(local_tid_45358) + 1) *
                           (segscan_group_sizze_37641 * sdiv_up64(m_28474 *
                                                                  iota32_arg_28873,
                                                                  sext_i32_i64(num_threads_45332))) -
                           1 - ((sext_i32_i64(squot32(local_tid_45358, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_37641 *
                                                 sdiv_up64(m_28474 *
                                                           iota32_arg_28873,
                                                           sext_i32_i64(num_threads_45332))) -
                                1));
                
                if (inactive_45373) {
                    x_37645 = x_37646;
                }
                if (!inactive_45373) {
                    float defunc_1_op_res_37647 = x_37645 + x_37646;
                    
                    x_37645 = defunc_1_op_res_37647;
                }
            }
            // write final result
            {
                ((__local
                  float *) scan_arr_mem_45362)[sext_i32_i64(local_tid_45358)] =
                    x_37645;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45358, 32) == 0) {
            ((__local
              float *) scan_arr_mem_45362)[sext_i32_i64(local_tid_45358)] =
                x_37646;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_37554, m_28474) && slt64(gtid_37562, iota32_arg_28873)) {
            ((__global float *) mem_44081)[gtid_37554 * iota32_arg_28873 +
                                           gtid_37562] = ((__local
                                                           float *) scan_arr_mem_45362)[sext_i32_i64(local_tid_45358)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_37641
}
__kernel void mainMagnitudeziscan_stage3_36021(__global int *global_failure,
                                               int64_t N_28473, int64_t m_28474,
                                               int64_t num_groups_36039,
                                               __global
                                               unsigned char *mem_43910,
                                               int32_t num_threads_44945,
                                               int32_t required_groups_44987)
{
    #define segscan_group_sizze_36038 (mainMagnitudezisegscan_group_sizze_36015)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44988;
    int32_t local_tid_44989;
    int64_t group_sizze_44992;
    int32_t wave_sizze_44991;
    int32_t group_tid_44990;
    
    global_tid_44988 = get_global_id(0);
    local_tid_44989 = get_local_id(0);
    group_sizze_44992 = get_local_size(0);
    wave_sizze_44991 = LOCKSTEP_WIDTH;
    group_tid_44990 = get_group_id(0);
    
    int32_t phys_tid_36021;
    
    phys_tid_36021 = global_tid_44988;
    
    int32_t phys_group_id_44993;
    
    phys_group_id_44993 = get_group_id(0);
    for (int32_t i_44994 = 0; i_44994 < sdiv_up32(required_groups_44987 -
                                                  phys_group_id_44993,
                                                  sext_i64_i32(num_groups_36039));
         i_44994++) {
        int32_t virt_group_id_44995 = phys_group_id_44993 + i_44994 *
                sext_i64_i32(num_groups_36039);
        int64_t flat_idx_44996 = sext_i32_i64(virt_group_id_44995) *
                segscan_group_sizze_36038 + sext_i32_i64(local_tid_44989);
        int64_t gtid_36012 = squot64(flat_idx_44996, N_28473);
        int64_t gtid_36020 = flat_idx_44996 - squot64(flat_idx_44996, N_28473) *
                N_28473;
        int64_t orig_group_44997 = squot64(flat_idx_44996,
                                           segscan_group_sizze_36038 *
                                           sdiv_up64(m_28474 * N_28473,
                                                     sext_i32_i64(num_threads_44945)));
        int64_t carry_in_flat_idx_44998 = orig_group_44997 *
                (segscan_group_sizze_36038 * sdiv_up64(m_28474 * N_28473,
                                                       sext_i32_i64(num_threads_44945))) -
                1;
        
        if (slt64(gtid_36012, m_28474) && slt64(gtid_36020, N_28473)) {
            if (!(orig_group_44997 == 0 || (flat_idx_44996 ==
                                            (orig_group_44997 + 1) *
                                            (segscan_group_sizze_36038 *
                                             sdiv_up64(m_28474 * N_28473,
                                                       sext_i32_i64(num_threads_44945))) -
                                            1 || slt64(srem64(flat_idx_44996,
                                                              N_28473),
                                                       flat_idx_44996 -
                                                       carry_in_flat_idx_44998)))) {
                int64_t x_36043;
                int64_t x_36044;
                
                x_36043 = ((__global
                            int64_t *) mem_43910)[squot64(carry_in_flat_idx_44998,
                                                          N_28473) * N_28473 +
                                                  (carry_in_flat_idx_44998 -
                                                   squot64(carry_in_flat_idx_44998,
                                                           N_28473) * N_28473)];
                x_36044 = ((__global int64_t *) mem_43910)[gtid_36012 *
                                                           N_28473 +
                                                           gtid_36020];
                
                int64_t defunc_1_op_res_36045;
                
                defunc_1_op_res_36045 = add64(x_36043, x_36044);
                x_36043 = defunc_1_op_res_36045;
                ((__global int64_t *) mem_43910)[gtid_36012 * N_28473 +
                                                 gtid_36020] = x_36043;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_36038
}
__kernel void mainMagnitudeziscan_stage3_37563(__global int *global_failure,
                                               int64_t m_28474,
                                               int64_t iota32_arg_28873,
                                               int64_t num_groups_37642,
                                               __global
                                               unsigned char *mem_44081,
                                               int32_t num_threads_45332,
                                               int32_t required_groups_45374)
{
    #define segscan_group_sizze_37641 (mainMagnitudezisegscan_group_sizze_37557)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45375;
    int32_t local_tid_45376;
    int64_t group_sizze_45379;
    int32_t wave_sizze_45378;
    int32_t group_tid_45377;
    
    global_tid_45375 = get_global_id(0);
    local_tid_45376 = get_local_id(0);
    group_sizze_45379 = get_local_size(0);
    wave_sizze_45378 = LOCKSTEP_WIDTH;
    group_tid_45377 = get_group_id(0);
    
    int32_t phys_tid_37563;
    
    phys_tid_37563 = global_tid_45375;
    
    int32_t phys_group_id_45380;
    
    phys_group_id_45380 = get_group_id(0);
    for (int32_t i_45381 = 0; i_45381 < sdiv_up32(required_groups_45374 -
                                                  phys_group_id_45380,
                                                  sext_i64_i32(num_groups_37642));
         i_45381++) {
        int32_t virt_group_id_45382 = phys_group_id_45380 + i_45381 *
                sext_i64_i32(num_groups_37642);
        int64_t flat_idx_45383 = sext_i32_i64(virt_group_id_45382) *
                segscan_group_sizze_37641 + sext_i32_i64(local_tid_45376);
        int64_t gtid_37554 = squot64(flat_idx_45383, iota32_arg_28873);
        int64_t gtid_37562 = flat_idx_45383 - squot64(flat_idx_45383,
                                                      iota32_arg_28873) *
                iota32_arg_28873;
        int64_t orig_group_45384 = squot64(flat_idx_45383,
                                           segscan_group_sizze_37641 *
                                           sdiv_up64(m_28474 * iota32_arg_28873,
                                                     sext_i32_i64(num_threads_45332)));
        int64_t carry_in_flat_idx_45385 = orig_group_45384 *
                (segscan_group_sizze_37641 * sdiv_up64(m_28474 *
                                                       iota32_arg_28873,
                                                       sext_i32_i64(num_threads_45332))) -
                1;
        
        if (slt64(gtid_37554, m_28474) && slt64(gtid_37562, iota32_arg_28873)) {
            if (!(orig_group_45384 == 0 || (flat_idx_45383 ==
                                            (orig_group_45384 + 1) *
                                            (segscan_group_sizze_37641 *
                                             sdiv_up64(m_28474 *
                                                       iota32_arg_28873,
                                                       sext_i32_i64(num_threads_45332))) -
                                            1 || slt64(srem64(flat_idx_45383,
                                                              iota32_arg_28873),
                                                       flat_idx_45383 -
                                                       carry_in_flat_idx_45385)))) {
                float x_37645;
                float x_37646;
                
                x_37645 = ((__global
                            float *) mem_44081)[squot64(carry_in_flat_idx_45385,
                                                        iota32_arg_28873) *
                                                iota32_arg_28873 +
                                                (carry_in_flat_idx_45385 -
                                                 squot64(carry_in_flat_idx_45385,
                                                         iota32_arg_28873) *
                                                 iota32_arg_28873)];
                x_37646 = ((__global float *) mem_44081)[gtid_37554 *
                                                         iota32_arg_28873 +
                                                         gtid_37562];
                
                float defunc_1_op_res_37647;
                
                defunc_1_op_res_37647 = x_37645 + x_37646;
                x_37645 = defunc_1_op_res_37647;
                ((__global float *) mem_44081)[gtid_37554 * iota32_arg_28873 +
                                               gtid_37562] = x_37645;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_37641
}
__kernel void mainMagnitudezisegmap_33944(__global int *global_failure,
                                          int64_t N_28473, float freq_28479,
                                          int64_t i32_res_28493, __global
                                          unsigned char *mappingindices_mem_43122,
                                          __global unsigned char *mem_43127)
{
    #define segmap_group_sizze_34017 (mainMagnitudezisegmap_group_sizze_33947)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44352;
    int32_t local_tid_44353;
    int64_t group_sizze_44356;
    int32_t wave_sizze_44355;
    int32_t group_tid_44354;
    
    global_tid_44352 = get_global_id(0);
    local_tid_44353 = get_local_id(0);
    group_sizze_44356 = get_local_size(0);
    wave_sizze_44355 = LOCKSTEP_WIDTH;
    group_tid_44354 = get_group_id(0);
    
    int32_t phys_tid_33944;
    
    phys_tid_33944 = global_tid_44352;
    
    int64_t gtid_33942;
    
    gtid_33942 = squot64(sext_i32_i64(group_tid_44354) *
                         segmap_group_sizze_34017 +
                         sext_i32_i64(local_tid_44353), N_28473);
    
    int64_t gtid_33943;
    
    gtid_33943 = sext_i32_i64(group_tid_44354) * segmap_group_sizze_34017 +
        sext_i32_i64(local_tid_44353) - squot64(sext_i32_i64(group_tid_44354) *
                                                segmap_group_sizze_34017 +
                                                sext_i32_i64(local_tid_44353),
                                                N_28473) * N_28473;
    if (slt64(gtid_33942, i32_res_28493) && slt64(gtid_33943, N_28473)) {
        int32_t index_primexp_41117 = sext_i64_i32(gtid_33942);
        bool index_primexp_41114 = index_primexp_41117 == 0;
        float defunc_0_f_res_34023;
        
        if (index_primexp_41114) {
            defunc_0_f_res_34023 = 1.0F;
        } else {
            int32_t x_34022 = ((__global
                                int32_t *) mappingindices_mem_43122)[gtid_33943];
            bool cond_34024 = index_primexp_41117 == 1;
            float defunc_0_f_res_f_res_34025;
            
            if (cond_34024) {
                float i32_res_34026 = sitofp_i32_f32(x_34022);
                
                defunc_0_f_res_f_res_34025 = i32_res_34026;
            } else {
                int32_t r32_arg_34027 = sdiv32(index_primexp_41117, 2);
                float i32_res_34028 = sitofp_i32_f32(r32_arg_34027);
                float i32_res_34029 = sitofp_i32_f32(x_34022);
                float x_34030 = 6.2831855F * i32_res_34028;
                float x_34031 = i32_res_34029 * x_34030;
                float angle_34032 = x_34031 / freq_28479;
                int32_t x_34033 = smod32(index_primexp_41117, 2);
                bool cond_34034 = x_34033 == 0;
                float defunc_0_f_res_f_res_f_res_34035;
                
                if (cond_34034) {
                    float sin_res_34036;
                    
                    sin_res_34036 = futrts_sin32(angle_34032);
                    defunc_0_f_res_f_res_f_res_34035 = sin_res_34036;
                } else {
                    float cos_res_34037;
                    
                    cos_res_34037 = futrts_cos32(angle_34032);
                    defunc_0_f_res_f_res_f_res_34035 = cos_res_34037;
                }
                defunc_0_f_res_f_res_34025 = defunc_0_f_res_f_res_f_res_34035;
            }
            defunc_0_f_res_34023 = defunc_0_f_res_f_res_34025;
        }
        ((__global float *) mem_43127)[gtid_33942 * N_28473 + gtid_33943] =
            defunc_0_f_res_34023;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34017
}
__kernel void mainMagnitudezisegmap_34122(__global int *global_failure,
                                          int64_t N_28473, float freq_28479,
                                          int64_t i32_res_28493, __global
                                          unsigned char *mappingindices_mem_43122,
                                          __global unsigned char *mem_43131)
{
    #define segmap_group_sizze_34191 (mainMagnitudezisegmap_group_sizze_34125)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44357;
    int32_t local_tid_44358;
    int64_t group_sizze_44361;
    int32_t wave_sizze_44360;
    int32_t group_tid_44359;
    
    global_tid_44357 = get_global_id(0);
    local_tid_44358 = get_local_id(0);
    group_sizze_44361 = get_local_size(0);
    wave_sizze_44360 = LOCKSTEP_WIDTH;
    group_tid_44359 = get_group_id(0);
    
    int32_t phys_tid_34122;
    
    phys_tid_34122 = global_tid_44357;
    
    int64_t gtid_34120;
    
    gtid_34120 = squot64(sext_i32_i64(group_tid_44359) *
                         segmap_group_sizze_34191 +
                         sext_i32_i64(local_tid_44358), N_28473);
    
    int64_t gtid_34121;
    
    gtid_34121 = sext_i32_i64(group_tid_44359) * segmap_group_sizze_34191 +
        sext_i32_i64(local_tid_44358) - squot64(sext_i32_i64(group_tid_44359) *
                                                segmap_group_sizze_34191 +
                                                sext_i32_i64(local_tid_44358),
                                                N_28473) * N_28473;
    if (slt64(gtid_34120, i32_res_28493) && slt64(gtid_34121, N_28473)) {
        int32_t index_primexp_41126 = sext_i64_i32(gtid_34120);
        bool index_primexp_41123 = index_primexp_41126 == 0;
        float defunc_0_f_res_34197;
        
        if (index_primexp_41123) {
            defunc_0_f_res_34197 = 1.0F;
        } else {
            int32_t x_34196 = ((__global
                                int32_t *) mappingindices_mem_43122)[gtid_34121];
            int32_t i_34198 = add32(1, index_primexp_41126);
            int32_t r32_arg_34199 = sdiv32(i_34198, 2);
            float i32_res_34200 = sitofp_i32_f32(r32_arg_34199);
            float i32_res_34201 = sitofp_i32_f32(x_34196);
            float x_34202 = 6.2831855F * i32_res_34200;
            float x_34203 = i32_res_34201 * x_34202;
            float angle_34204 = x_34203 / freq_28479;
            int32_t x_34205 = smod32(i_34198, 2);
            bool cond_34206 = x_34205 == 0;
            float defunc_0_f_res_f_res_34207;
            
            if (cond_34206) {
                float sin_res_34208;
                
                sin_res_34208 = futrts_sin32(angle_34204);
                defunc_0_f_res_f_res_34207 = sin_res_34208;
            } else {
                float cos_res_34209;
                
                cos_res_34209 = futrts_cos32(angle_34204);
                defunc_0_f_res_f_res_34207 = cos_res_34209;
            }
            defunc_0_f_res_34197 = defunc_0_f_res_f_res_34207;
        }
        ((__global float *) mem_43131)[gtid_34120 * N_28473 + gtid_34121] =
            defunc_0_f_res_34197;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34191
}
__kernel void mainMagnitudezisegmap_34250(__global int *global_failure,
                                          int64_t N_28473,
                                          int64_t i32_res_28493,
                                          float i32_res_28558, __global
                                          unsigned char *mem_43135, __global
                                          unsigned char *mem_43139)
{
    #define segmap_group_sizze_34274 (mainMagnitudezisegmap_group_sizze_34253)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44362;
    int32_t local_tid_44363;
    int64_t group_sizze_44366;
    int32_t wave_sizze_44365;
    int32_t group_tid_44364;
    
    global_tid_44362 = get_global_id(0);
    local_tid_44363 = get_local_id(0);
    group_sizze_44366 = get_local_size(0);
    wave_sizze_44365 = LOCKSTEP_WIDTH;
    group_tid_44364 = get_group_id(0);
    
    int32_t phys_tid_34250;
    
    phys_tid_34250 = global_tid_44362;
    
    int64_t gtid_34248;
    
    gtid_34248 = squot64(sext_i32_i64(group_tid_44364) *
                         segmap_group_sizze_34274 +
                         sext_i32_i64(local_tid_44363), i32_res_28493);
    
    int64_t gtid_34249;
    
    gtid_34249 = sext_i32_i64(group_tid_44364) * segmap_group_sizze_34274 +
        sext_i32_i64(local_tid_44363) - squot64(sext_i32_i64(group_tid_44364) *
                                                segmap_group_sizze_34274 +
                                                sext_i32_i64(local_tid_44363),
                                                i32_res_28493) * i32_res_28493;
    if (slt64(gtid_34248, N_28473) && slt64(gtid_34249, i32_res_28493)) {
        float x_34277 = ((__global float *) mem_43135)[gtid_34248 *
                                                       i32_res_28493 +
                                                       gtid_34249];
        float defunc_0_f_res_34278 = i32_res_28558 + x_34277;
        
        ((__global float *) mem_43139)[gtid_34248 * i32_res_28493 +
                                       gtid_34249] = defunc_0_f_res_34278;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34274
}
__kernel void mainMagnitudezisegmap_34283(__global int *global_failure,
                                          int64_t N_28473, int64_t m_28474,
                                          int32_t n_28478, int32_t k2p2zq_28491,
                                          int64_t i32_res_28493,
                                          int64_t num_groups_34308, __global
                                          unsigned char *binop_p_mem_43132,
                                          __global unsigned char *mem_43139,
                                          __global unsigned char *mem_43142,
                                          __global unsigned char *mem_43146,
                                          __global unsigned char *mem_43188)
{
    #define segmap_group_sizze_34307 (mainMagnitudezisegmap_group_sizze_34285)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44370;
    int32_t local_tid_44371;
    int64_t group_sizze_44374;
    int32_t wave_sizze_44373;
    int32_t group_tid_44372;
    
    global_tid_44370 = get_global_id(0);
    local_tid_44371 = get_local_id(0);
    group_sizze_44374 = get_local_size(0);
    wave_sizze_44373 = LOCKSTEP_WIDTH;
    group_tid_44372 = get_group_id(0);
    
    int32_t phys_tid_34283;
    
    phys_tid_34283 = global_tid_44370;
    
    int32_t phys_group_id_44375;
    
    phys_group_id_44375 = get_group_id(0);
    for (int32_t i_44376 = 0; i_44376 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28474, segmap_group_sizze_34307)) -
                   phys_group_id_44375, sext_i64_i32(num_groups_34308));
         i_44376++) {
        int32_t virt_group_id_44377 = phys_group_id_44375 + i_44376 *
                sext_i64_i32(num_groups_34308);
        int64_t gtid_34282 = sext_i32_i64(virt_group_id_44377) *
                segmap_group_sizze_34307 + sext_i32_i64(local_tid_44371);
        
        if (slt64(gtid_34282, m_28474)) {
            for (int32_t i_43104 = 0; i_43104 < k2p2zq_28491; i_43104++) {
                int64_t i_43052 = sext_i32_i64(i_43104);
                
                for (int32_t i_43103 = 0; i_43103 < k2p2zq_28491; i_43103++) {
                    int64_t i_43056 = sext_i32_i64(i_43103);
                    float defunc_2_reduce_res_34316;
                    float redout_43058 = 0.0F;
                    
                    for (int32_t i_43102 = 0; i_43102 < n_28478; i_43102++) {
                        int64_t i_43059 = sext_i32_i64(i_43102);
                        float x_34320 = ((__global float *) mem_43142)[i_43059 *
                                                                       m_28474 +
                                                                       gtid_34282];
                        float x_34321 = ((__global
                                          float *) binop_p_mem_43132)[i_43052 *
                                                                      N_28473 +
                                                                      i_43059];
                        float x_34322 = ((__global float *) mem_43139)[i_43059 *
                                                                       i32_res_28493 +
                                                                       i_43056];
                        float x_34323 = x_34321 * x_34322;
                        bool isnan_res_34324;
                        
                        isnan_res_34324 = futrts_isnan32(x_34320);
                        
                        float y_34325;
                        
                        if (isnan_res_34324) {
                            y_34325 = 0.0F;
                        } else {
                            y_34325 = 1.0F;
                        }
                        
                        float defunc_2_f_res_34326 = x_34323 * y_34325;
                        float defunc_1_op_res_34319 = defunc_2_f_res_34326 +
                              redout_43058;
                        float redout_tmp_44380 = defunc_1_op_res_34319;
                        
                        redout_43058 = redout_tmp_44380;
                    }
                    defunc_2_reduce_res_34316 = redout_43058;
                    ((__global float *) mem_43146)[phys_tid_34283 + (i_43052 *
                                                                     (num_groups_34308 *
                                                                      segmap_group_sizze_34307 *
                                                                      i32_res_28493) +
                                                                     i_43056 *
                                                                     (num_groups_34308 *
                                                                      segmap_group_sizze_34307))] =
                        defunc_2_reduce_res_34316;
                }
            }
            for (int64_t i_44381 = 0; i_44381 < i32_res_28493; i_44381++) {
                for (int64_t i_44382 = 0; i_44382 < i32_res_28493; i_44382++) {
                    ((__global float *) mem_43188)[i_44381 * (m_28474 *
                                                              i32_res_28493) +
                                                   i_44382 * m_28474 +
                                                   gtid_34282] = ((__global
                                                                   float *) mem_43146)[phys_tid_34283 +
                                                                                       (i_44381 *
                                                                                        (num_groups_34308 *
                                                                                         segmap_group_sizze_34307 *
                                                                                         i32_res_28493) +
                                                                                        i_44382 *
                                                                                        (num_groups_34308 *
                                                                                         segmap_group_sizze_34307))];
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34307
}
__kernel void mainMagnitudezisegmap_34329(__global int *global_failure,
                                          int64_t m_28474, int64_t N_28475,
                                          int32_t n_28478, int32_t k2p2zq_28491,
                                          int64_t i32_res_28493,
                                          int64_t num_groups_34485, __global
                                          unsigned char *images_mem_43123,
                                          __global unsigned char *mem_43135,
                                          __global unsigned char *mem_43139,
                                          __global unsigned char *mem_43191,
                                          __global unsigned char *mem_43207)
{
    #define segmap_group_sizze_34484 (mainMagnitudezisegmap_group_sizze_34332)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44383;
    int32_t local_tid_44384;
    int64_t group_sizze_44387;
    int32_t wave_sizze_44386;
    int32_t group_tid_44385;
    
    global_tid_44383 = get_global_id(0);
    local_tid_44384 = get_local_id(0);
    group_sizze_44387 = get_local_size(0);
    wave_sizze_44386 = LOCKSTEP_WIDTH;
    group_tid_44385 = get_group_id(0);
    
    int32_t phys_tid_34329;
    
    phys_tid_34329 = global_tid_44383;
    
    int32_t phys_group_id_44388;
    
    phys_group_id_44388 = get_group_id(0);
    for (int32_t i_44389 = 0; i_44389 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28474 * i32_res_28493,
                                          segmap_group_sizze_34484)) -
                   phys_group_id_44388, sext_i64_i32(num_groups_34485));
         i_44389++) {
        int32_t virt_group_id_44390 = phys_group_id_44388 + i_44389 *
                sext_i64_i32(num_groups_34485);
        int64_t gtid_34327 = squot64(sext_i32_i64(virt_group_id_44390) *
                                     segmap_group_sizze_34484 +
                                     sext_i32_i64(local_tid_44384),
                                     i32_res_28493);
        int64_t gtid_34328 = sext_i32_i64(virt_group_id_44390) *
                segmap_group_sizze_34484 + sext_i32_i64(local_tid_44384) -
                squot64(sext_i32_i64(virt_group_id_44390) *
                        segmap_group_sizze_34484 +
                        sext_i32_i64(local_tid_44384), i32_res_28493) *
                i32_res_28493;
        
        if (slt64(gtid_34327, m_28474) && slt64(gtid_34328, i32_res_28493)) {
            for (int32_t i_43106 = 0; i_43106 < k2p2zq_28491; i_43106++) {
                int64_t i_43062 = sext_i32_i64(i_43106);
                float defunc_2_reduce_res_34496;
                float redout_43064 = 0.0F;
                
                for (int32_t i_43105 = 0; i_43105 < n_28478; i_43105++) {
                    int64_t i_43065 = sext_i32_i64(i_43105);
                    float x_34500 = ((__global
                                      float *) images_mem_43123)[gtid_34327 *
                                                                 N_28475 +
                                                                 i_43065];
                    float x_34501 = ((__global float *) mem_43135)[i_43065 *
                                                                   i32_res_28493 +
                                                                   gtid_34328];
                    float x_34502 = ((__global float *) mem_43139)[i_43065 *
                                                                   i32_res_28493 +
                                                                   i_43062];
                    float x_34503 = x_34501 * x_34502;
                    bool isnan_res_34504;
                    
                    isnan_res_34504 = futrts_isnan32(x_34500);
                    
                    float y_34505;
                    
                    if (isnan_res_34504) {
                        y_34505 = 0.0F;
                    } else {
                        y_34505 = 1.0F;
                    }
                    
                    float defunc_2_f_res_34506 = x_34503 * y_34505;
                    float defunc_1_op_res_34499 = defunc_2_f_res_34506 +
                          redout_43064;
                    float redout_tmp_44392 = defunc_1_op_res_34499;
                    
                    redout_43064 = redout_tmp_44392;
                }
                defunc_2_reduce_res_34496 = redout_43064;
                ((__global float *) mem_43191)[phys_tid_34329 + i_43062 *
                                               (num_groups_34485 *
                                                segmap_group_sizze_34484)] =
                    defunc_2_reduce_res_34496;
            }
            for (int64_t i_44393 = 0; i_44393 < i32_res_28493; i_44393++) {
                ((__global float *) mem_43207)[i_44393 * (i32_res_28493 *
                                                          m_28474) +
                                               gtid_34327 * i32_res_28493 +
                                               gtid_34328] = ((__global
                                                               float *) mem_43191)[phys_tid_34329 +
                                                                                   i_44393 *
                                                                                   (num_groups_34485 *
                                                                                    segmap_group_sizze_34484)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34484
}
__kernel void mainMagnitudezisegmap_34813(__global int *global_failure,
                                          int64_t m_28474,
                                          int64_t i32_res_28493,
                                          int64_t i32_res_28626,
                                          int64_t i32_res_28641,
                                          int64_t x_28642, int64_t j_m_i_28645,
                                          int64_t gauss_jordan_res_r_ixfn_43359,
                                          int64_t gauss_jordan_res_r_ixfn_43360,
                                          int64_t gauss_jordan_res_r_ixfn_43362,
                                          __global
                                          unsigned char *gauss_jordan_res_r_mem_43364,
                                          __global unsigned char *mem_43369)
{
    #define segmap_group_sizze_35364 (mainMagnitudezisegmap_group_sizze_34817)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44549;
    int32_t local_tid_44550;
    int64_t group_sizze_44553;
    int32_t wave_sizze_44552;
    int32_t group_tid_44551;
    
    global_tid_44549 = get_global_id(0);
    local_tid_44550 = get_local_id(0);
    group_sizze_44553 = get_local_size(0);
    wave_sizze_44552 = LOCKSTEP_WIDTH;
    group_tid_44551 = get_group_id(0);
    
    int32_t phys_tid_34813;
    
    phys_tid_34813 = global_tid_44549;
    
    int64_t gtid_34810;
    
    gtid_34810 = squot64(sext_i32_i64(group_tid_44551) *
                         segmap_group_sizze_35364 +
                         sext_i32_i64(local_tid_44550), i32_res_28493 *
                         j_m_i_28645);
    
    int64_t gtid_slice_34808;
    
    gtid_slice_34808 = squot64(sext_i32_i64(group_tid_44551) *
                               segmap_group_sizze_35364 +
                               sext_i32_i64(local_tid_44550) -
                               squot64(sext_i32_i64(group_tid_44551) *
                                       segmap_group_sizze_35364 +
                                       sext_i32_i64(local_tid_44550),
                                       i32_res_28493 * j_m_i_28645) *
                               (i32_res_28493 * j_m_i_28645), j_m_i_28645);
    
    int64_t gtid_slice_34809;
    
    gtid_slice_34809 = sext_i32_i64(group_tid_44551) *
        segmap_group_sizze_35364 + sext_i32_i64(local_tid_44550) -
        squot64(sext_i32_i64(group_tid_44551) * segmap_group_sizze_35364 +
                sext_i32_i64(local_tid_44550), i32_res_28493 * j_m_i_28645) *
        (i32_res_28493 * j_m_i_28645) - squot64(sext_i32_i64(group_tid_44551) *
                                                segmap_group_sizze_35364 +
                                                sext_i32_i64(local_tid_44550) -
                                                squot64(sext_i32_i64(group_tid_44551) *
                                                        segmap_group_sizze_35364 +
                                                        sext_i32_i64(local_tid_44550),
                                                        i32_res_28493 *
                                                        j_m_i_28645) *
                                                (i32_res_28493 * j_m_i_28645),
                                                j_m_i_28645) * j_m_i_28645;
    if ((slt64(gtid_34810, m_28474) && slt64(gtid_slice_34808,
                                             i32_res_28493)) &&
        slt64(gtid_slice_34809, j_m_i_28645)) {
        int64_t slice_35368 = i32_res_28493 + gtid_slice_34809;
        int64_t binop_x_41189 = x_28642 * gtid_34810;
        int64_t binop_y_41190 = i32_res_28641 * gtid_slice_34808;
        int64_t binop_x_41191 = binop_x_41189 + binop_y_41190;
        int64_t binop_x_41192 = slice_35368 + binop_x_41191;
        int64_t new_index_41193 = squot64(binop_x_41192, i32_res_28626);
        int64_t binop_y_41205 = i32_res_28626 * new_index_41193;
        int64_t new_index_41206 = binop_x_41192 - binop_y_41205;
        float v_35369 = ((__global
                          float *) gauss_jordan_res_r_mem_43364)[gauss_jordan_res_r_ixfn_43359 +
                                                                 (new_index_41193 *
                                                                  gauss_jordan_res_r_ixfn_43360 +
                                                                  new_index_41206 *
                                                                  gauss_jordan_res_r_ixfn_43362)];
        
        ((__global float *) mem_43369)[gtid_34810 * (j_m_i_28645 *
                                                     i32_res_28493) +
                                       gtid_slice_34808 * j_m_i_28645 +
                                       gtid_slice_34809] = v_35369;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35364
}
__kernel void mainMagnitudezisegmap_34979(__global int *global_failure,
                                          int64_t m_28474,
                                          int64_t i32_res_28626,
                                          int64_t ctx_param_ext_43322,
                                          int64_t ctx_param_ext_43323,
                                          int64_t ctx_param_ext_43325, __global
                                          unsigned char *mem_param_43327,
                                          __global unsigned char *mem_43347)
{
    #define segmap_group_sizze_35352 (mainMagnitudezisegmap_group_sizze_34982)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44543;
    int32_t local_tid_44544;
    int64_t group_sizze_44547;
    int32_t wave_sizze_44546;
    int32_t group_tid_44545;
    
    global_tid_44543 = get_global_id(0);
    local_tid_44544 = get_local_id(0);
    group_sizze_44547 = get_local_size(0);
    wave_sizze_44546 = LOCKSTEP_WIDTH;
    group_tid_44545 = get_group_id(0);
    
    int32_t phys_tid_34979;
    
    phys_tid_34979 = global_tid_44543;
    
    int64_t gtid_34977;
    
    gtid_34977 = squot64(sext_i32_i64(group_tid_44545) *
                         segmap_group_sizze_35352 +
                         sext_i32_i64(local_tid_44544), i32_res_28626);
    
    int64_t gtid_34978;
    
    gtid_34978 = sext_i32_i64(group_tid_44545) * segmap_group_sizze_35352 +
        sext_i32_i64(local_tid_44544) - squot64(sext_i32_i64(group_tid_44545) *
                                                segmap_group_sizze_35352 +
                                                sext_i32_i64(local_tid_44544),
                                                i32_res_28626) * i32_res_28626;
    if (slt64(gtid_34977, m_28474) && slt64(gtid_34978, i32_res_28626)) {
        float write_value_35358 = ((__global float *) mem_43347)[gtid_34977 *
                                                                 i32_res_28626 +
                                                                 gtid_34978];
        
        if ((sle64(0, gtid_34977) && slt64(gtid_34977, m_28474)) && (sle64(0,
                                                                           gtid_34978) &&
                                                                     slt64(gtid_34978,
                                                                           i32_res_28626))) {
            ((__global float *) mem_param_43327)[ctx_param_ext_43322 +
                                                 (gtid_34977 *
                                                  ctx_param_ext_43323 +
                                                  gtid_34978 *
                                                  ctx_param_ext_43325)] =
                write_value_35358;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35352
}
__kernel void mainMagnitudezisegmap_35033(__global int *global_failure,
                                          int64_t m_28474, int32_t k2p2zq_28491,
                                          int32_t m_28624,
                                          int64_t i32_res_28626,
                                          int32_t i_35255,
                                          int64_t i32_res_35257,
                                          int64_t ctx_param_ext_43322,
                                          int64_t ctx_param_ext_43323,
                                          int64_t ctx_param_ext_43325, __global
                                          unsigned char *mem_param_43327,
                                          __global unsigned char *mem_43343,
                                          __global unsigned char *mem_43347)
{
    #define segmap_group_sizze_35318 (mainMagnitudezisegmap_group_sizze_35036)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44538;
    int32_t local_tid_44539;
    int64_t group_sizze_44542;
    int32_t wave_sizze_44541;
    int32_t group_tid_44540;
    
    global_tid_44538 = get_global_id(0);
    local_tid_44539 = get_local_id(0);
    group_sizze_44542 = get_local_size(0);
    wave_sizze_44541 = LOCKSTEP_WIDTH;
    group_tid_44540 = get_group_id(0);
    
    int32_t phys_tid_35033;
    
    phys_tid_35033 = global_tid_44538;
    
    int64_t gtid_35031;
    
    gtid_35031 = squot64(sext_i32_i64(group_tid_44540) *
                         segmap_group_sizze_35318 +
                         sext_i32_i64(local_tid_44539), i32_res_28626);
    
    int64_t gtid_35032;
    
    gtid_35032 = sext_i32_i64(group_tid_44540) * segmap_group_sizze_35318 +
        sext_i32_i64(local_tid_44539) - squot64(sext_i32_i64(group_tid_44540) *
                                                segmap_group_sizze_35318 +
                                                sext_i32_i64(local_tid_44539),
                                                i32_res_28626) * i32_res_28626;
    if (slt64(gtid_35031, m_28474) && slt64(gtid_35032, i32_res_28626)) {
        bool cond_35323 = ((__global bool *) mem_43343)[gtid_35031];
        int32_t defunc_0_f_res_35325 = sext_i64_i32(gtid_35032);
        int32_t defunc_0_f_res_35326 = sdiv32(defunc_0_f_res_35325, m_28624);
        int32_t defunc_0_f_res_35327 = smod32(defunc_0_f_res_35325, m_28624);
        float defunc_0_f_res_35328;
        
        if (cond_35323) {
            int32_t x_35329 = mul32(m_28624, defunc_0_f_res_35326);
            int32_t i32_arg_35330 = add32(defunc_0_f_res_35327, x_35329);
            int64_t i32_res_35331 = sext_i32_i64(i32_arg_35330);
            float defunc_0_f_res_t_res_35332 = ((__global
                                                 float *) mem_param_43327)[ctx_param_ext_43322 +
                                                                           (gtid_35031 *
                                                                            ctx_param_ext_43323 +
                                                                            i32_res_35331 *
                                                                            ctx_param_ext_43325)];
            
            defunc_0_f_res_35328 = defunc_0_f_res_t_res_35332;
        } else {
            float v1_35322 = ((__global
                               float *) mem_param_43327)[ctx_param_ext_43322 +
                                                         (gtid_35031 *
                                                          ctx_param_ext_43323 +
                                                          i32_res_35257 *
                                                          ctx_param_ext_43325)];
            int64_t i32_res_35333 = sext_i32_i64(defunc_0_f_res_35327);
            float x_35334 = ((__global
                              float *) mem_param_43327)[ctx_param_ext_43322 +
                                                        (gtid_35031 *
                                                         ctx_param_ext_43323 +
                                                         i32_res_35333 *
                                                         ctx_param_ext_43325)];
            float x_35335 = x_35334 / v1_35322;
            int32_t y_35336 = sub32(k2p2zq_28491, 1);
            bool cond_35337 = slt32(defunc_0_f_res_35326, y_35336);
            float defunc_0_f_res_f_res_35338;
            
            if (cond_35337) {
                int32_t x_35339 = add32(1, defunc_0_f_res_35326);
                int32_t x_35340 = mul32(m_28624, x_35339);
                int32_t i32_arg_35341 = add32(defunc_0_f_res_35327, x_35340);
                int64_t i32_res_35342 = sext_i32_i64(i32_arg_35341);
                float x_35343 = ((__global
                                  float *) mem_param_43327)[ctx_param_ext_43322 +
                                                            (gtid_35031 *
                                                             ctx_param_ext_43323 +
                                                             i32_res_35342 *
                                                             ctx_param_ext_43325)];
                int32_t i32_arg_35344 = add32(i_35255, x_35340);
                int64_t i32_res_35345 = sext_i32_i64(i32_arg_35344);
                float x_35346 = ((__global
                                  float *) mem_param_43327)[ctx_param_ext_43322 +
                                                            (gtid_35031 *
                                                             ctx_param_ext_43323 +
                                                             i32_res_35345 *
                                                             ctx_param_ext_43325)];
                float y_35347 = x_35335 * x_35346;
                float defunc_0_f_res_f_res_t_res_35348 = x_35343 - y_35347;
                
                defunc_0_f_res_f_res_35338 = defunc_0_f_res_f_res_t_res_35348;
            } else {
                defunc_0_f_res_f_res_35338 = x_35335;
            }
            defunc_0_f_res_35328 = defunc_0_f_res_f_res_35338;
        }
        ((__global float *) mem_43347)[gtid_35031 * i32_res_28626 +
                                       gtid_35032] = defunc_0_f_res_35328;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35318
}
__kernel void mainMagnitudezisegmap_35101(__global int *global_failure,
                                          int64_t m_28474,
                                          int64_t i32_res_35257,
                                          int64_t ctx_param_ext_43322,
                                          int64_t ctx_param_ext_43323,
                                          int64_t ctx_param_ext_43325, __global
                                          unsigned char *mem_param_43327,
                                          __global unsigned char *mem_43343)
{
    #define segmap_group_sizze_35302 (mainMagnitudezisegmap_group_sizze_35103)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44533;
    int32_t local_tid_44534;
    int64_t group_sizze_44537;
    int32_t wave_sizze_44536;
    int32_t group_tid_44535;
    
    global_tid_44533 = get_global_id(0);
    local_tid_44534 = get_local_id(0);
    group_sizze_44537 = get_local_size(0);
    wave_sizze_44536 = LOCKSTEP_WIDTH;
    group_tid_44535 = get_group_id(0);
    
    int32_t phys_tid_35101;
    
    phys_tid_35101 = global_tid_44533;
    
    int64_t gtid_35100;
    
    gtid_35100 = sext_i32_i64(group_tid_44535) * segmap_group_sizze_35302 +
        sext_i32_i64(local_tid_44534);
    if (slt64(gtid_35100, m_28474)) {
        float v1_35307 = ((__global
                           float *) mem_param_43327)[ctx_param_ext_43322 +
                                                     (gtid_35100 *
                                                      ctx_param_ext_43323 +
                                                      i32_res_35257 *
                                                      ctx_param_ext_43325)];
        bool cond_35308 = v1_35307 == 0.0F;
        
        ((__global bool *) mem_43343)[gtid_35100] = cond_35308;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35302
}
__kernel void mainMagnitudezisegmap_35194(__global int *global_failure,
                                          int64_t m_28474, int32_t k2p2zq_28491,
                                          int64_t i32_res_28493,
                                          int32_t m_28624,
                                          int64_t i32_res_28626, __global
                                          unsigned char *defunc_3_map_res_mem_43291,
                                          __global unsigned char *mem_43319)
{
    #define segmap_group_sizze_35238 (mainMagnitudezisegmap_group_sizze_35197)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44500;
    int32_t local_tid_44501;
    int64_t group_sizze_44504;
    int32_t wave_sizze_44503;
    int32_t group_tid_44502;
    
    global_tid_44500 = get_global_id(0);
    local_tid_44501 = get_local_id(0);
    group_sizze_44504 = get_local_size(0);
    wave_sizze_44503 = LOCKSTEP_WIDTH;
    group_tid_44502 = get_group_id(0);
    
    int32_t phys_tid_35194;
    
    phys_tid_35194 = global_tid_44500;
    
    int64_t gtid_35192;
    
    gtid_35192 = squot64(sext_i32_i64(group_tid_44502) *
                         segmap_group_sizze_35238 +
                         sext_i32_i64(local_tid_44501), i32_res_28626);
    
    int64_t gtid_35193;
    
    gtid_35193 = sext_i32_i64(group_tid_44502) * segmap_group_sizze_35238 +
        sext_i32_i64(local_tid_44501) - squot64(sext_i32_i64(group_tid_44502) *
                                                segmap_group_sizze_35238 +
                                                sext_i32_i64(local_tid_44501),
                                                i32_res_28626) * i32_res_28626;
    if (slt64(gtid_35192, m_28474) && slt64(gtid_35193, i32_res_28626)) {
        int32_t index_primexp_41138 = sext_i64_i32(gtid_35193);
        int32_t defunc_0_f_res_35243 = sdiv32(index_primexp_41138, m_28624);
        int32_t defunc_0_f_res_35244 = smod32(index_primexp_41138, m_28624);
        bool cond_35245 = slt32(defunc_0_f_res_35244, k2p2zq_28491);
        float defunc_0_f_res_35246;
        
        if (cond_35245) {
            int64_t i_35247 = sext_i32_i64(defunc_0_f_res_35243);
            int64_t j_35248 = sext_i32_i64(defunc_0_f_res_35244);
            float defunc_0_f_res_t_res_35249 = ((__global
                                                 float *) defunc_3_map_res_mem_43291)[gtid_35192 *
                                                                                      (i32_res_28493 *
                                                                                       i32_res_28493) +
                                                                                      i_35247 *
                                                                                      i32_res_28493 +
                                                                                      j_35248];
            
            defunc_0_f_res_35246 = defunc_0_f_res_t_res_35249;
        } else {
            int32_t y_35250 = add32(k2p2zq_28491, defunc_0_f_res_35243);
            bool cond_35251 = defunc_0_f_res_35244 == y_35250;
            float defunc_0_f_res_f_res_35252;
            
            if (cond_35251) {
                defunc_0_f_res_f_res_35252 = 1.0F;
            } else {
                defunc_0_f_res_f_res_35252 = 0.0F;
            }
            defunc_0_f_res_35246 = defunc_0_f_res_f_res_35252;
        }
        ((__global float *) mem_43319)[gtid_35192 * i32_res_28626 +
                                       gtid_35193] = defunc_0_f_res_35246;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35238
}
__kernel void mainMagnitudezisegmap_35375(__global int *global_failure,
                                          int64_t N_28473, int64_t m_28474,
                                          int32_t n_28478, int32_t k2p2zq_28491,
                                          int64_t i32_res_28493,
                                          int64_t num_groups_35396, __global
                                          unsigned char *binop_p_mem_43132,
                                          __global unsigned char *mem_43373,
                                          __global unsigned char *mem_43376,
                                          __global unsigned char *mem_43391)
{
    #define segmap_group_sizze_35395 (mainMagnitudezisegmap_group_sizze_35377)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44557;
    int32_t local_tid_44558;
    int64_t group_sizze_44561;
    int32_t wave_sizze_44560;
    int32_t group_tid_44559;
    
    global_tid_44557 = get_global_id(0);
    local_tid_44558 = get_local_id(0);
    group_sizze_44561 = get_local_size(0);
    wave_sizze_44560 = LOCKSTEP_WIDTH;
    group_tid_44559 = get_group_id(0);
    
    int32_t phys_tid_35375;
    
    phys_tid_35375 = global_tid_44557;
    
    int32_t phys_group_id_44562;
    
    phys_group_id_44562 = get_group_id(0);
    for (int32_t i_44563 = 0; i_44563 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28474, segmap_group_sizze_35395)) -
                   phys_group_id_44562, sext_i64_i32(num_groups_35396));
         i_44563++) {
        int32_t virt_group_id_44564 = phys_group_id_44562 + i_44563 *
                sext_i64_i32(num_groups_35396);
        int64_t gtid_35374 = sext_i32_i64(virt_group_id_44564) *
                segmap_group_sizze_35395 + sext_i32_i64(local_tid_44558);
        
        if (slt64(gtid_35374, m_28474)) {
            for (int32_t i_43108 = 0; i_43108 < k2p2zq_28491; i_43108++) {
                int64_t i_43068 = sext_i32_i64(i_43108);
                float defunc_2_reduce_res_35402;
                float redout_43070 = 0.0F;
                
                for (int32_t i_43107 = 0; i_43107 < n_28478; i_43107++) {
                    int64_t i_43071 = sext_i32_i64(i_43107);
                    float x_35407 = ((__global float *) mem_43373)[i_43071 *
                                                                   m_28474 +
                                                                   gtid_35374];
                    bool isnan_res_35408;
                    
                    isnan_res_35408 = futrts_isnan32(x_35407);
                    
                    float defunc_1_f_res_35409;
                    
                    if (isnan_res_35408) {
                        defunc_1_f_res_35409 = 0.0F;
                    } else {
                        float x_35406 = ((__global
                                          float *) binop_p_mem_43132)[i_43068 *
                                                                      N_28473 +
                                                                      i_43071];
                        float defunc_1_f_res_f_res_35410 = x_35406 * x_35407;
                        
                        defunc_1_f_res_35409 = defunc_1_f_res_f_res_35410;
                    }
                    
                    float defunc_1_op_res_35405 = defunc_1_f_res_35409 +
                          redout_43070;
                    float redout_tmp_44566 = defunc_1_op_res_35405;
                    
                    redout_43070 = redout_tmp_44566;
                }
                defunc_2_reduce_res_35402 = redout_43070;
                ((__global float *) mem_43376)[phys_tid_35375 + i_43068 *
                                               (num_groups_35396 *
                                                segmap_group_sizze_35395)] =
                    defunc_2_reduce_res_35402;
            }
            for (int64_t i_44567 = 0; i_44567 < i32_res_28493; i_44567++) {
                ((__global float *) mem_43391)[i_44567 * m_28474 + gtid_35374] =
                    ((__global float *) mem_43376)[phys_tid_35375 + i_44567 *
                                                   (num_groups_35396 *
                                                    segmap_group_sizze_35395)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35395
}
__kernel void mainMagnitudezisegmap_35516(__global int *global_failure,
                                          int64_t m_28474, int32_t k2p2zq_28491,
                                          int64_t i32_res_28493,
                                          int64_t num_groups_35536, __global
                                          unsigned char *mem_43595, __global
                                          unsigned char *mem_43598, __global
                                          unsigned char *mem_43601, __global
                                          unsigned char *mem_43616)
{
    #define segmap_group_sizze_35535 (mainMagnitudezisegmap_group_sizze_35518)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44689;
    int32_t local_tid_44690;
    int64_t group_sizze_44693;
    int32_t wave_sizze_44692;
    int32_t group_tid_44691;
    
    global_tid_44689 = get_global_id(0);
    local_tid_44690 = get_local_id(0);
    group_sizze_44693 = get_local_size(0);
    wave_sizze_44692 = LOCKSTEP_WIDTH;
    group_tid_44691 = get_group_id(0);
    
    int32_t phys_tid_35516;
    
    phys_tid_35516 = global_tid_44689;
    
    int32_t phys_group_id_44694;
    
    phys_group_id_44694 = get_group_id(0);
    for (int32_t i_44695 = 0; i_44695 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28474, segmap_group_sizze_35535)) -
                   phys_group_id_44694, sext_i64_i32(num_groups_35536));
         i_44695++) {
        int32_t virt_group_id_44696 = phys_group_id_44694 + i_44695 *
                sext_i64_i32(num_groups_35536);
        int64_t gtid_35515 = sext_i32_i64(virt_group_id_44696) *
                segmap_group_sizze_35535 + sext_i32_i64(local_tid_44690);
        
        if (slt64(gtid_35515, m_28474)) {
            for (int32_t i_43110 = 0; i_43110 < k2p2zq_28491; i_43110++) {
                int64_t i_43074 = sext_i32_i64(i_43110);
                float defunc_0_f_res_35543;
                float redout_43076 = 0.0F;
                
                for (int32_t i_43109 = 0; i_43109 < k2p2zq_28491; i_43109++) {
                    int64_t i_43077 = sext_i32_i64(i_43109);
                    float x_35547 = ((__global float *) mem_43598)[i_43077 *
                                                                   m_28474 +
                                                                   gtid_35515];
                    float x_35548 = ((__global float *) mem_43595)[i_43074 *
                                                                   (m_28474 *
                                                                    i32_res_28493) +
                                                                   i_43077 *
                                                                   m_28474 +
                                                                   gtid_35515];
                    float defunc_1_f_res_35549 = x_35547 * x_35548;
                    float defunc_1_op_res_35546 = defunc_1_f_res_35549 +
                          redout_43076;
                    float redout_tmp_44698 = defunc_1_op_res_35546;
                    
                    redout_43076 = redout_tmp_44698;
                }
                defunc_0_f_res_35543 = redout_43076;
                ((__global float *) mem_43601)[phys_tid_35516 + i_43074 *
                                               (num_groups_35536 *
                                                segmap_group_sizze_35535)] =
                    defunc_0_f_res_35543;
            }
            for (int64_t i_44699 = 0; i_44699 < i32_res_28493; i_44699++) {
                ((__global float *) mem_43616)[i_44699 * m_28474 + gtid_35515] =
                    ((__global float *) mem_43601)[phys_tid_35516 + i_44699 *
                                                   (num_groups_35536 *
                                                    segmap_group_sizze_35535)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35535
}
__kernel void mainMagnitudezisegmap_35648(__global int *global_failure,
                                          int64_t N_28473, int64_t m_28474,
                                          int32_t k2p2zq_28491,
                                          int64_t i32_res_28493,
                                          int64_t num_groups_35667, __global
                                          unsigned char *mem_43139, __global
                                          unsigned char *mem_43660, __global
                                          unsigned char *mem_43663, __global
                                          unsigned char *mem_43678)
{
    #define segmap_group_sizze_35666 (mainMagnitudezisegmap_group_sizze_35650)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44777;
    int32_t local_tid_44778;
    int64_t group_sizze_44781;
    int32_t wave_sizze_44780;
    int32_t group_tid_44779;
    
    global_tid_44777 = get_global_id(0);
    local_tid_44778 = get_local_id(0);
    group_sizze_44781 = get_local_size(0);
    wave_sizze_44780 = LOCKSTEP_WIDTH;
    group_tid_44779 = get_group_id(0);
    
    int32_t phys_tid_35648;
    
    phys_tid_35648 = global_tid_44777;
    
    int32_t phys_group_id_44782;
    
    phys_group_id_44782 = get_group_id(0);
    for (int32_t i_44783 = 0; i_44783 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28474, segmap_group_sizze_35666)) -
                   phys_group_id_44782, sext_i64_i32(num_groups_35667));
         i_44783++) {
        int32_t virt_group_id_44784 = phys_group_id_44782 + i_44783 *
                sext_i64_i32(num_groups_35667);
        int64_t gtid_35647 = sext_i32_i64(virt_group_id_44784) *
                segmap_group_sizze_35666 + sext_i32_i64(local_tid_44778);
        
        if (slt64(gtid_35647, m_28474)) {
            for (int64_t i_43084 = 0; i_43084 < N_28473; i_43084++) {
                float defunc_0_f_res_35673;
                float redout_43086 = 0.0F;
                
                for (int32_t i_43113 = 0; i_43113 < k2p2zq_28491; i_43113++) {
                    int64_t i_43087 = sext_i32_i64(i_43113);
                    float x_35677 = ((__global float *) mem_43660)[i_43087 *
                                                                   m_28474 +
                                                                   gtid_35647];
                    float x_35678 = ((__global float *) mem_43139)[i_43084 *
                                                                   i32_res_28493 +
                                                                   i_43087];
                    float defunc_1_f_res_35679 = x_35677 * x_35678;
                    float defunc_1_op_res_35676 = defunc_1_f_res_35679 +
                          redout_43086;
                    float redout_tmp_44786 = defunc_1_op_res_35676;
                    
                    redout_43086 = redout_tmp_44786;
                }
                defunc_0_f_res_35673 = redout_43086;
                ((__global float *) mem_43663)[phys_tid_35648 + i_43084 *
                                               (num_groups_35667 *
                                                segmap_group_sizze_35666)] =
                    defunc_0_f_res_35673;
            }
            for (int64_t i_44787 = 0; i_44787 < N_28473; i_44787++) {
                ((__global float *) mem_43678)[i_44787 * m_28474 + gtid_35647] =
                    ((__global float *) mem_43663)[phys_tid_35648 + i_44787 *
                                                   (num_groups_35667 *
                                                    segmap_group_sizze_35666)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35666
}
__kernel void mainMagnitudezisegmap_35928(__global int *global_failure,
                                          int64_t N_28473, int64_t m_28474,
                                          __global unsigned char *mem_43884,
                                          __global unsigned char *mem_43887,
                                          __global unsigned char *mem_43910,
                                          __global unsigned char *mem_43913)
{
    #define segmap_group_sizze_36094 (mainMagnitudezisegmap_group_sizze_35931)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45004;
    int32_t local_tid_45005;
    int64_t group_sizze_45008;
    int32_t wave_sizze_45007;
    int32_t group_tid_45006;
    
    global_tid_45004 = get_global_id(0);
    local_tid_45005 = get_local_id(0);
    group_sizze_45008 = get_local_size(0);
    wave_sizze_45007 = LOCKSTEP_WIDTH;
    group_tid_45006 = get_group_id(0);
    
    int32_t phys_tid_35928;
    
    phys_tid_35928 = global_tid_45004;
    
    int64_t gtid_35926;
    
    gtid_35926 = squot64(sext_i32_i64(group_tid_45006) *
                         segmap_group_sizze_36094 +
                         sext_i32_i64(local_tid_45005), N_28473);
    
    int64_t gtid_35927;
    
    gtid_35927 = sext_i32_i64(group_tid_45006) * segmap_group_sizze_36094 +
        sext_i32_i64(local_tid_45005) - squot64(sext_i32_i64(group_tid_45006) *
                                                segmap_group_sizze_36094 +
                                                sext_i32_i64(local_tid_45005),
                                                N_28473) * N_28473;
    if (slt64(gtid_35926, m_28474) && slt64(gtid_35927, N_28473)) {
        float x_36102 = ((__global float *) mem_43913)[gtid_35926 * N_28473 +
                                                       gtid_35927];
        int32_t index_primexp_41154 = sext_i64_i32(gtid_35927);
        bool isnan_res_36105;
        
        isnan_res_36105 = futrts_isnan32(x_36102);
        
        bool defunc_0_p_res_36106 = !isnan_res_36105;
        int64_t defunc_1_f_res_36107;
        
        if (defunc_0_p_res_36106) {
            int64_t x_36103 = ((__global int64_t *) mem_43910)[gtid_35926 *
                                                               N_28473 +
                                                               gtid_35927];
            int64_t defunc_1_f_res_t_res_36108 = sub64(x_36103, 1);
            
            defunc_1_f_res_36107 = defunc_1_f_res_t_res_36108;
        } else {
            defunc_1_f_res_36107 = -1;
        }
        if ((sle64(0, gtid_35926) && slt64(gtid_35926, m_28474)) && (sle64(0,
                                                                           defunc_1_f_res_36107) &&
                                                                     slt64(defunc_1_f_res_36107,
                                                                           N_28473))) {
            ((__global int32_t *) mem_43887)[gtid_35926 * N_28473 +
                                             defunc_1_f_res_36107] =
                index_primexp_41154;
        }
        if ((sle64(0, gtid_35926) && slt64(gtid_35926, m_28474)) && (sle64(0,
                                                                           defunc_1_f_res_36107) &&
                                                                     slt64(defunc_1_f_res_36107,
                                                                           N_28473))) {
            ((__global float *) mem_43884)[gtid_35926 * N_28473 +
                                           defunc_1_f_res_36107] = x_36102;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36094
}
__kernel void mainMagnitudezisegmap_36004(__global int *global_failure,
                                          int64_t N_28473, int64_t m_28474,
                                          int64_t i_28753, __global
                                          unsigned char *mem_43910, __global
                                          unsigned char *mem_43916)
{
    #define segmap_group_sizze_36058 (mainMagnitudezisegmap_group_sizze_36006)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44999;
    int32_t local_tid_45000;
    int64_t group_sizze_45003;
    int32_t wave_sizze_45002;
    int32_t group_tid_45001;
    
    global_tid_44999 = get_global_id(0);
    local_tid_45000 = get_local_id(0);
    group_sizze_45003 = get_local_size(0);
    wave_sizze_45002 = LOCKSTEP_WIDTH;
    group_tid_45001 = get_group_id(0);
    
    int32_t phys_tid_36004;
    
    phys_tid_36004 = global_tid_44999;
    
    int64_t gtid_36003;
    
    gtid_36003 = sext_i32_i64(group_tid_45001) * segmap_group_sizze_36058 +
        sext_i32_i64(local_tid_45000);
    if (slt64(gtid_36003, m_28474)) {
        int64_t last_res_36062 = ((__global int64_t *) mem_43910)[gtid_36003 *
                                                                  N_28473 +
                                                                  i_28753];
        int32_t defunc_0_f_res_36063 = sext_i64_i32(last_res_36062);
        
        ((__global int32_t *) mem_43916)[gtid_36003] = defunc_0_f_res_36063;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36058
}
__kernel void mainMagnitudezisegmap_36255(__global int *global_failure,
                                          int64_t m_28474, float hfrac_28480,
                                          int32_t k2p2_28489, __global
                                          unsigned char *mem_43970, __global
                                          unsigned char *mem_43973, __global
                                          unsigned char *mem_43976, __global
                                          unsigned char *mem_43978)
{
    #define segmap_group_sizze_36340 (mainMagnitudezisegmap_group_sizze_36257)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45159;
    int32_t local_tid_45160;
    int64_t group_sizze_45163;
    int32_t wave_sizze_45162;
    int32_t group_tid_45161;
    
    global_tid_45159 = get_global_id(0);
    local_tid_45160 = get_local_id(0);
    group_sizze_45163 = get_local_size(0);
    wave_sizze_45162 = LOCKSTEP_WIDTH;
    group_tid_45161 = get_group_id(0);
    
    int32_t phys_tid_36255;
    
    phys_tid_36255 = global_tid_45159;
    
    int64_t gtid_36254;
    
    gtid_36254 = sext_i32_i64(group_tid_45161) * segmap_group_sizze_36340 +
        sext_i32_i64(local_tid_45160);
    if (slt64(gtid_36254, m_28474)) {
        int32_t defunc_0_f_res_36344 = ((__global
                                         int32_t *) mem_43970)[gtid_36254];
        float defunc_0_f_res_36345 = ((__global float *) mem_43973)[gtid_36254];
        int32_t r32_arg_36346 = sub32(defunc_0_f_res_36344, k2p2_28489);
        float i32_res_36347 = sitofp_i32_f32(r32_arg_36346);
        float sqrt_arg_36348 = defunc_0_f_res_36345 / i32_res_36347;
        float sqrt_res_36349;
        
        sqrt_res_36349 = futrts_sqrt32(sqrt_arg_36348);
        
        float i32_res_36350 = sitofp_i32_f32(defunc_0_f_res_36344);
        float t32_arg_36351 = hfrac_28480 * i32_res_36350;
        int32_t f32_res_36352 = fptosi_f32_i32(t32_arg_36351);
        
        ((__global int32_t *) mem_43976)[gtid_36254] = f32_res_36352;
        ((__global float *) mem_43978)[gtid_36254] = sqrt_res_36349;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36340
}
__kernel void mainMagnitudezisegmap_36526(__global int *global_failure,
                                          float lam_28481,
                                          int64_t iota32_arg_28873,
                                          int32_t x_28878, float i32_res_28886,
                                          __global
                                          unsigned char *mappingindices_mem_43122,
                                          __global unsigned char *mem_44020,
                                          __global unsigned char *mem_44022)
{
    #define segmap_group_sizze_36545 (mainMagnitudezisegmap_group_sizze_36528)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45269;
    int32_t local_tid_45270;
    int64_t group_sizze_45273;
    int32_t wave_sizze_45272;
    int32_t group_tid_45271;
    
    global_tid_45269 = get_global_id(0);
    local_tid_45270 = get_local_id(0);
    group_sizze_45273 = get_local_size(0);
    wave_sizze_45272 = LOCKSTEP_WIDTH;
    group_tid_45271 = get_group_id(0);
    
    int32_t phys_tid_36526;
    
    phys_tid_36526 = global_tid_45269;
    
    int64_t gtid_36525;
    
    gtid_36525 = sext_i32_i64(group_tid_45271) * segmap_group_sizze_36545 +
        sext_i32_i64(local_tid_45270);
    if (slt64(gtid_36525, iota32_arg_28873)) {
        int32_t defunc_0_f_res_36550 = sext_i64_i32(gtid_36525);
        int32_t t_36551 = add32(x_28878, defunc_0_f_res_36550);
        int32_t i_36552 = sub32(t_36551, 1);
        int64_t i_36553 = sext_i32_i64(i_36552);
        int32_t time_36554 = ((__global
                               int32_t *) mappingindices_mem_43122)[i_36553];
        float i32_res_36555 = sitofp_i32_f32(time_36554);
        float logplus_arg_36556 = i32_res_36555 / i32_res_28886;
        bool cond_36557 = 2.7182817F < logplus_arg_36556;
        float logplus_res_36558;
        
        if (cond_36557) {
            float log_res_36559;
            
            log_res_36559 = futrts_log32(logplus_arg_36556);
            logplus_res_36558 = log_res_36559;
        } else {
            logplus_res_36558 = 1.0F;
        }
        
        float sqrt_res_36560;
        
        sqrt_res_36560 = futrts_sqrt32(logplus_res_36558);
        
        float defunc_0_f_res_36561 = lam_28481 * sqrt_res_36560;
        
        ((__global int32_t *) mem_44020)[gtid_36525] = defunc_0_f_res_36550;
        ((__global float *) mem_44022)[gtid_36525] = defunc_0_f_res_36561;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36545
}
__kernel void mainMagnitudezisegmap_36777(__global int *global_failure,
                                          int failure_is_an_option, __global
                                          int64_t *global_failure_args,
                                          int64_t m_28474,
                                          int64_t iota32_arg_28873,
                                          int64_t distance_28905,
                                          int64_t segmap_usable_groups_37010,
                                          __global
                                          unsigned char *defunc_4_map_res_mem_43918,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_43983,
                                          __global unsigned char *mem_44025,
                                          __global unsigned char *mem_44032,
                                          __global unsigned char *mem_44043,
                                          __global unsigned char *mem_44063)
{
    #define segmap_group_sizze_37009 (mainMagnitudezisegmap_group_sizze_36779)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45284;
    int32_t local_tid_45285;
    int64_t group_sizze_45288;
    int32_t wave_sizze_45287;
    int32_t group_tid_45286;
    
    global_tid_45284 = get_global_id(0);
    local_tid_45285 = get_local_id(0);
    group_sizze_45288 = get_local_size(0);
    wave_sizze_45287 = LOCKSTEP_WIDTH;
    group_tid_45286 = get_group_id(0);
    
    int32_t phys_tid_36777;
    
    phys_tid_36777 = global_tid_45284;
    
    int64_t gtid_36776;
    
    gtid_36776 = sext_i32_i64(group_tid_45286) * segmap_group_sizze_37009 +
        sext_i32_i64(local_tid_45285);
    if (slt64(gtid_36776, m_28474)) {
        int32_t x_37012 = ((__global
                            int32_t *) defunc_4_map_res_mem_43918)[gtid_36776];
        int32_t x_37013 = ((__global
                            int32_t *) defunc_3_map_res_mem_43983)[gtid_36776];
        int32_t y_37014 = ((__global int32_t *) mem_44025)[gtid_36776];
        
        for (int64_t i_45289 = 0; i_45289 < iota32_arg_28873; i_45289++) {
            ((__global float *) mem_44043)[phys_tid_36777 + i_45289 *
                                           (segmap_usable_groups_37010 *
                                            segmap_group_sizze_37009)] =
                ((__global float *) mem_44032)[gtid_36776 + i_45289 * m_28474];
        }
        for (int64_t i_37017 = 0; i_37017 < distance_28905; i_37017++) {
            int64_t index_primexp_37019 = add64(1, i_37017);
            bool cond_37020 = slt64(0, index_primexp_37019);
            bool loop_cond_37021;
            
            if (cond_37020) {
                bool x_37022 = sle64(0, index_primexp_37019);
                bool y_37023 = slt64(index_primexp_37019, iota32_arg_28873);
                bool bounds_check_37024 = x_37022 && y_37023;
                bool index_certs_37025;
                
                if (!bounds_check_37024) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 13) ==
                            -1) {
                            global_failure_args[0] = index_primexp_37019;
                            global_failure_args[1] = iota32_arg_28873;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_2_lifted_gt_arg_37026 = ((__global
                                                       float *) mem_44043)[phys_tid_36777 +
                                                                           index_primexp_37019 *
                                                                           (segmap_usable_groups_37010 *
                                                                            segmap_group_sizze_37009)];
                bool y_37027 = slt64(i_37017, iota32_arg_28873);
                bool index_certs_37028;
                
                if (!y_37027) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 14) ==
                            -1) {
                            global_failure_args[0] = i_37017;
                            global_failure_args[1] = iota32_arg_28873;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_1_lifted_gt_arg_37029 = ((__global
                                                       float *) mem_44043)[phys_tid_36777 +
                                                                           i_37017 *
                                                                           (segmap_usable_groups_37010 *
                                                                            segmap_group_sizze_37009)];
                bool defunc_1_zlze_res_37030 = defunc_1_lifted_gt_arg_37029 <=
                     defunc_2_lifted_gt_arg_37026;
                bool defunc_2_lifted_gt_res_37031 = !defunc_1_zlze_res_37030;
                
                loop_cond_37021 = defunc_2_lifted_gt_res_37031;
            } else {
                loop_cond_37021 = 0;
            }
            
            bool xszq_37032;
            int64_t xszq_37033;
            bool loop_while_37035;
            int64_t j_37036;
            
            loop_while_37035 = loop_cond_37021;
            j_37036 = index_primexp_37019;
            while (loop_while_37035) {
                int64_t loopres_37038 = sub64(j_37036, 1);
                bool x_37039 = sle64(0, j_37036);
                bool y_37040 = slt64(j_37036, iota32_arg_28873);
                bool bounds_check_37041 = x_37039 && y_37040;
                bool index_certs_37042;
                
                if (!bounds_check_37041) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 15) ==
                            -1) {
                            global_failure_args[0] = j_37036;
                            global_failure_args[1] = iota32_arg_28873;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_37043 = ((__global
                                         float *) mem_44043)[phys_tid_36777 +
                                                             j_37036 *
                                                             (segmap_usable_groups_37010 *
                                                              segmap_group_sizze_37009)];
                bool x_37044 = sle64(0, loopres_37038);
                bool y_37045 = slt64(loopres_37038, iota32_arg_28873);
                bool bounds_check_37046 = x_37044 && y_37045;
                bool index_certs_37047;
                
                if (!bounds_check_37046) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 16) ==
                            -1) {
                            global_failure_args[0] = loopres_37038;
                            global_failure_args[1] = iota32_arg_28873;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_37048 = ((__global
                                         float *) mem_44043)[phys_tid_36777 +
                                                             loopres_37038 *
                                                             (segmap_usable_groups_37010 *
                                                              segmap_group_sizze_37009)];
                
                ((__global float *) mem_44043)[phys_tid_36777 + j_37036 *
                                               (segmap_usable_groups_37010 *
                                                segmap_group_sizze_37009)] =
                    copy_arg_37048;
                ((__global float *) mem_44043)[phys_tid_36777 + loopres_37038 *
                                               (segmap_usable_groups_37010 *
                                                segmap_group_sizze_37009)] =
                    copy_arg_37043;
                
                bool cond_37051 = slt64(0, loopres_37038);
                bool loop_cond_37052;
                
                if (cond_37051) {
                    bool index_certs_37053;
                    
                    if (!bounds_check_37046) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          17) == -1) {
                                global_failure_args[0] = loopres_37038;
                                global_failure_args[1] = iota32_arg_28873;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_2_lifted_gt_arg_37054 = ((__global
                                                           float *) mem_44043)[phys_tid_36777 +
                                                                               loopres_37038 *
                                                                               (segmap_usable_groups_37010 *
                                                                                segmap_group_sizze_37009)];
                    int64_t i_37055 = sub64(loopres_37038, 1);
                    bool x_37056 = sle64(0, i_37055);
                    bool y_37057 = slt64(i_37055, iota32_arg_28873);
                    bool bounds_check_37058 = x_37056 && y_37057;
                    bool index_certs_37059;
                    
                    if (!bounds_check_37058) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          18) == -1) {
                                global_failure_args[0] = i_37055;
                                global_failure_args[1] = iota32_arg_28873;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_1_lifted_gt_arg_37060 = ((__global
                                                           float *) mem_44043)[phys_tid_36777 +
                                                                               i_37055 *
                                                                               (segmap_usable_groups_37010 *
                                                                                segmap_group_sizze_37009)];
                    bool defunc_1_zlze_res_37061 =
                         defunc_1_lifted_gt_arg_37060 <=
                         defunc_2_lifted_gt_arg_37054;
                    bool defunc_2_lifted_gt_res_37062 =
                         !defunc_1_zlze_res_37061;
                    
                    loop_cond_37052 = defunc_2_lifted_gt_res_37062;
                } else {
                    loop_cond_37052 = 0;
                }
                
                bool loop_while_tmp_45291 = loop_cond_37052;
                int64_t j_tmp_45292 = loopres_37038;
                
                loop_while_37035 = loop_while_tmp_45291;
                j_37036 = j_tmp_45292;
            }
            xszq_37032 = loop_while_37035;
            xszq_37033 = j_37036;
        }
        
        int32_t i_37063 = sdiv32(y_37014, 2);
        int32_t j_37064 = sub32(i_37063, 1);
        bool cond_37065 = x_37012 == x_37013;
        float defunc_0_f_res_37066;
        
        if (cond_37065) {
            defunc_0_f_res_37066 = 0.0F;
        } else {
            int32_t x_37067 = smod32(y_37014, 2);
            bool cond_37068 = x_37067 == 0;
            float defunc_0_f_res_f_res_37069;
            
            if (cond_37068) {
                int64_t j_37070 = sext_i32_i64(j_37064);
                bool x_37071 = sle64(0, j_37070);
                bool y_37072 = slt64(j_37070, iota32_arg_28873);
                bool bounds_check_37073 = x_37071 && y_37072;
                bool index_certs_37074;
                
                if (!bounds_check_37073) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 19) ==
                            -1) {
                            global_failure_args[0] = j_37070;
                            global_failure_args[1] = iota32_arg_28873;
                            ;
                        }
                        return;
                    }
                }
                
                float x_37075 = ((__global float *) mem_44043)[phys_tid_36777 +
                                                               j_37070 *
                                                               (segmap_usable_groups_37010 *
                                                                segmap_group_sizze_37009)];
                int64_t i_37076 = sext_i32_i64(i_37063);
                bool x_37077 = sle64(0, i_37076);
                bool y_37078 = slt64(i_37076, iota32_arg_28873);
                bool bounds_check_37079 = x_37077 && y_37078;
                bool index_certs_37080;
                
                if (!bounds_check_37079) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 20) ==
                            -1) {
                            global_failure_args[0] = i_37076;
                            global_failure_args[1] = iota32_arg_28873;
                            ;
                        }
                        return;
                    }
                }
                
                float y_37081 = ((__global float *) mem_44043)[phys_tid_36777 +
                                                               i_37076 *
                                                               (segmap_usable_groups_37010 *
                                                                segmap_group_sizze_37009)];
                float x_37082 = x_37075 + y_37081;
                float defunc_0_f_res_f_res_t_res_37083 = x_37082 / 2.0F;
                
                defunc_0_f_res_f_res_37069 = defunc_0_f_res_f_res_t_res_37083;
            } else {
                int64_t i_37084 = sext_i32_i64(i_37063);
                bool x_37085 = sle64(0, i_37084);
                bool y_37086 = slt64(i_37084, iota32_arg_28873);
                bool bounds_check_37087 = x_37085 && y_37086;
                bool index_certs_37088;
                
                if (!bounds_check_37087) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 21) ==
                            -1) {
                            global_failure_args[0] = i_37084;
                            global_failure_args[1] = iota32_arg_28873;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_0_f_res_f_res_f_res_37089 = ((__global
                                                           float *) mem_44043)[phys_tid_36777 +
                                                                               i_37084 *
                                                                               (segmap_usable_groups_37010 *
                                                                                segmap_group_sizze_37009)];
                
                defunc_0_f_res_f_res_37069 = defunc_0_f_res_f_res_f_res_37089;
            }
            defunc_0_f_res_37066 = defunc_0_f_res_f_res_37069;
        }
        ((__global float *) mem_44063)[gtid_36776] = defunc_0_f_res_37066;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37009
}
__kernel void mainMagnitudezisegmap_36898(__global int *global_failure,
                                          int failure_is_an_option, __global
                                          int64_t *global_failure_args,
                                          int64_t N_28473, int64_t m_28474,
                                          int64_t iota32_arg_28873, __global
                                          unsigned char *defunc_4_map_res_mem_43919,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_43983,
                                          __global unsigned char *mem_44025,
                                          __global unsigned char *mem_44029)
{
    #define segmap_group_sizze_36980 (mainMagnitudezisegmap_group_sizze_36901)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45279;
    int32_t local_tid_45280;
    int64_t group_sizze_45283;
    int32_t wave_sizze_45282;
    int32_t group_tid_45281;
    
    global_tid_45279 = get_global_id(0);
    local_tid_45280 = get_local_id(0);
    group_sizze_45283 = get_local_size(0);
    wave_sizze_45282 = LOCKSTEP_WIDTH;
    group_tid_45281 = get_group_id(0);
    
    int32_t phys_tid_36898;
    
    phys_tid_36898 = global_tid_45279;
    
    int64_t gtid_36896;
    
    gtid_36896 = squot64(sext_i32_i64(group_tid_45281) *
                         segmap_group_sizze_36980 +
                         sext_i32_i64(local_tid_45280), iota32_arg_28873);
    
    int64_t gtid_36897;
    
    gtid_36897 = sext_i32_i64(group_tid_45281) * segmap_group_sizze_36980 +
        sext_i32_i64(local_tid_45280) - squot64(sext_i32_i64(group_tid_45281) *
                                                segmap_group_sizze_36980 +
                                                sext_i32_i64(local_tid_45280),
                                                iota32_arg_28873) *
        iota32_arg_28873;
    if (slt64(gtid_36896, m_28474) && slt64(gtid_36897, iota32_arg_28873)) {
        int32_t x_36983 = ((__global
                            int32_t *) defunc_3_map_res_mem_43983)[gtid_36896];
        int32_t y_36985 = ((__global int32_t *) mem_44025)[gtid_36896];
        int32_t index_primexp_41172 = sext_i64_i32(gtid_36897);
        bool cond_36987 = slt32(index_primexp_41172, y_36985);
        bool cond_36988;
        
        if (cond_36987) {
            int32_t i_36989 = add32(x_36983, index_primexp_41172);
            int64_t i_36990 = sext_i32_i64(i_36989);
            bool x_36991 = sle64(0, i_36990);
            bool y_36992 = slt64(i_36990, N_28473);
            bool bounds_check_36993 = x_36991 && y_36992;
            bool index_certs_36994;
            
            if (!bounds_check_36993) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 11) ==
                        -1) {
                        global_failure_args[0] = i_36990;
                        global_failure_args[1] = N_28473;
                        ;
                    }
                    return;
                }
            }
            
            float isnan_arg_36995 = ((__global
                                      float *) defunc_4_map_res_mem_43919)[gtid_36896 *
                                                                           N_28473 +
                                                                           i_36990];
            bool isnan_res_36996;
            
            isnan_res_36996 = futrts_isnan32(isnan_arg_36995);
            
            bool cond_t_res_36997 = !isnan_res_36996;
            
            cond_36988 = cond_t_res_36997;
        } else {
            cond_36988 = 0;
        }
        
        float defunc_0_f_res_36998;
        
        if (cond_36988) {
            int32_t i_36999 = add32(x_36983, index_primexp_41172);
            int64_t i_37000 = sext_i32_i64(i_36999);
            bool x_37001 = sle64(0, i_37000);
            bool y_37002 = slt64(i_37000, N_28473);
            bool bounds_check_37003 = x_37001 && y_37002;
            bool index_certs_37004;
            
            if (!bounds_check_37003) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 12) ==
                        -1) {
                        global_failure_args[0] = i_37000;
                        global_failure_args[1] = N_28473;
                        ;
                    }
                    return;
                }
            }
            
            float defunc_0_f_res_t_res_37005 = ((__global
                                                 float *) defunc_4_map_res_mem_43919)[gtid_36896 *
                                                                                      N_28473 +
                                                                                      i_37000];
            
            defunc_0_f_res_36998 = defunc_0_f_res_t_res_37005;
        } else {
            defunc_0_f_res_36998 = INFINITY;
        }
        ((__global float *) mem_44029)[gtid_36896 * iota32_arg_28873 +
                                       gtid_36897] = defunc_0_f_res_36998;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36980
}
__kernel void mainMagnitudezisegmap_36956(__global int *global_failure,
                                          int64_t m_28474, __global
                                          unsigned char *defunc_4_map_res_mem_43918,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_43983,
                                          __global unsigned char *mem_44025)
{
    #define segmap_group_sizze_36965 (mainMagnitudezisegmap_group_sizze_36958)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45274;
    int32_t local_tid_45275;
    int64_t group_sizze_45278;
    int32_t wave_sizze_45277;
    int32_t group_tid_45276;
    
    global_tid_45274 = get_global_id(0);
    local_tid_45275 = get_local_id(0);
    group_sizze_45278 = get_local_size(0);
    wave_sizze_45277 = LOCKSTEP_WIDTH;
    group_tid_45276 = get_group_id(0);
    
    int32_t phys_tid_36956;
    
    phys_tid_36956 = global_tid_45274;
    
    int64_t gtid_36955;
    
    gtid_36955 = sext_i32_i64(group_tid_45276) * segmap_group_sizze_36965 +
        sext_i32_i64(local_tid_45275);
    if (slt64(gtid_36955, m_28474)) {
        int32_t x_36968 = ((__global
                            int32_t *) defunc_4_map_res_mem_43918)[gtid_36955];
        int32_t x_36969 = ((__global
                            int32_t *) defunc_3_map_res_mem_43983)[gtid_36955];
        int32_t y_36970 = sub32(x_36968, x_36969);
        
        ((__global int32_t *) mem_44025)[gtid_36955] = y_36970;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36965
}
__kernel void mainMagnitudezisegmap_37454(__global int *global_failure,
                                          int64_t N_28473, int64_t m_28474,
                                          int32_t n_28478, __global
                                          unsigned char *defunc_4_map_res_mem_43920,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_43983,
                                          __global unsigned char *mem_44077,
                                          __global unsigned char *mem_44084,
                                          __global unsigned char *mem_44086,
                                          __global unsigned char *mem_44088,
                                          __global unsigned char *mem_44091,
                                          __global unsigned char *mem_44093)
{
    #define segmap_group_sizze_37718 (mainMagnitudezisegmap_group_sizze_37456)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45484;
    int32_t local_tid_45485;
    int64_t group_sizze_45488;
    int32_t wave_sizze_45487;
    int32_t group_tid_45486;
    
    global_tid_45484 = get_global_id(0);
    local_tid_45485 = get_local_id(0);
    group_sizze_45488 = get_local_size(0);
    wave_sizze_45487 = LOCKSTEP_WIDTH;
    group_tid_45486 = get_group_id(0);
    
    int32_t phys_tid_37454;
    
    phys_tid_37454 = global_tid_45484;
    
    int64_t gtid_37453;
    
    gtid_37453 = sext_i32_i64(group_tid_45486) * segmap_group_sizze_37718 +
        sext_i32_i64(local_tid_45485);
    if (slt64(gtid_37453, m_28474)) {
        int32_t x_37722 = ((__global
                            int32_t *) defunc_3_map_res_mem_43983)[gtid_37453];
        int32_t y_37724 = ((__global int32_t *) mem_44077)[gtid_37453];
        bool acc0_37726 = ((__global bool *) mem_44084)[gtid_37453];
        bool x_37731 = acc0_37726 && acc0_37726;
        int32_t defunc_1_op_res_f_res_37735;
        
        if (acc0_37726) {
            int32_t acc0_37727 = ((__global int32_t *) mem_44086)[gtid_37453];
            
            defunc_1_op_res_f_res_37735 = acc0_37727;
        } else {
            defunc_1_op_res_f_res_37735 = -1;
        }
        
        bool cond_37741 = y_37724 == 0;
        float defunc_0_f_res_37742;
        
        if (cond_37741) {
            defunc_0_f_res_37742 = 0.0F;
        } else {
            float acc0_37728 = ((__global float *) mem_44088)[gtid_37453];
            float i32_res_37743 = sitofp_i32_f32(y_37724);
            float defunc_0_f_res_f_res_37744 = acc0_37728 / i32_res_37743;
            
            defunc_0_f_res_37742 = defunc_0_f_res_f_res_37744;
        }
        
        bool cond_37745 = !x_37731;
        int32_t fst_breakzq_37746;
        
        if (cond_37745) {
            fst_breakzq_37746 = -1;
        } else {
            bool cond_37747 = slt32(defunc_1_op_res_f_res_37735, y_37724);
            int32_t adjustValInds_res_37748;
            
            if (cond_37747) {
                int32_t i_37749 = add32(x_37722, defunc_1_op_res_f_res_37735);
                int64_t i_37750 = sext_i32_i64(i_37749);
                int32_t x_37751 = ((__global
                                    int32_t *) defunc_4_map_res_mem_43920)[gtid_37453 *
                                                                           N_28473 +
                                                                           i_37750];
                int32_t adjustValInds_res_t_res_37752 = sub32(x_37751, n_28478);
                
                adjustValInds_res_37748 = adjustValInds_res_t_res_37752;
            } else {
                adjustValInds_res_37748 = -1;
            }
            fst_breakzq_37746 = adjustValInds_res_37748;
        }
        
        bool cond_37753 = sle32(x_37722, 5);
        bool cond_f_res_37754 = sle32(y_37724, 5);
        bool x_37755 = !cond_37753;
        bool y_37756 = cond_f_res_37754 && x_37755;
        bool cond_37757 = cond_37753 || y_37756;
        int32_t fst_breakzq_37758;
        
        if (cond_37757) {
            fst_breakzq_37758 = -2;
        } else {
            fst_breakzq_37758 = fst_breakzq_37746;
        }
        ((__global int32_t *) mem_44091)[gtid_37453] = fst_breakzq_37758;
        ((__global float *) mem_44093)[gtid_37453] = defunc_0_f_res_37742;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37718
}
__kernel void mainMagnitudezisegmap_37596(__global int *global_failure,
                                          int64_t m_28474,
                                          int64_t num_groups_37619, __global
                                          unsigned char *defunc_4_map_res_mem_43918,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_43983,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_43984,
                                          __global unsigned char *mem_44075,
                                          __global unsigned char *mem_44077)
{
    #define segmap_group_sizze_37618 (mainMagnitudezisegmap_group_sizze_37598)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45322;
    int32_t local_tid_45323;
    int64_t group_sizze_45326;
    int32_t wave_sizze_45325;
    int32_t group_tid_45324;
    
    global_tid_45322 = get_global_id(0);
    local_tid_45323 = get_local_id(0);
    group_sizze_45326 = get_local_size(0);
    wave_sizze_45325 = LOCKSTEP_WIDTH;
    group_tid_45324 = get_group_id(0);
    
    int32_t phys_tid_37596;
    
    phys_tid_37596 = global_tid_45322;
    
    int32_t phys_group_id_45327;
    
    phys_group_id_45327 = get_group_id(0);
    for (int32_t i_45328 = 0; i_45328 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28474, segmap_group_sizze_37618)) -
                   phys_group_id_45327, sext_i64_i32(num_groups_37619));
         i_45328++) {
        int32_t virt_group_id_45329 = phys_group_id_45327 + i_45328 *
                sext_i64_i32(num_groups_37619);
        int64_t gtid_37595 = sext_i32_i64(virt_group_id_45329) *
                segmap_group_sizze_37618 + sext_i32_i64(local_tid_45323);
        
        if (slt64(gtid_37595, m_28474)) {
            int32_t x_37625 = ((__global
                                int32_t *) defunc_4_map_res_mem_43918)[gtid_37595];
            int32_t x_37626 = ((__global
                                int32_t *) defunc_3_map_res_mem_43983)[gtid_37595];
            float x_37627 = ((__global
                              float *) defunc_3_map_res_mem_43984)[gtid_37595];
            int32_t y_37628 = sub32(x_37625, x_37626);
            float i32_res_37629 = sitofp_i32_f32(x_37626);
            float sqrt_res_37630;
            
            sqrt_res_37630 = futrts_sqrt32(i32_res_37629);
            
            float y_37631 = x_37627 * sqrt_res_37630;
            
            ((__global float *) mem_44075)[gtid_37595] = y_37631;
            ((__global int32_t *) mem_44077)[gtid_37595] = y_37628;
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37618
}
__kernel void mainMagnitudezisegmap_intragroup_34633(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43305_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43295_backing_aligned_1,
                                                     int32_t k2p2zq_28491,
                                                     int64_t i32_res_28493,
                                                     int32_t m_28624,
                                                     int64_t i32_res_28626,
                                                     int64_t i32_res_28641,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43291,
                                                     __global
                                                     unsigned char *mem_43315)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43305_backing_1 = (__local volatile
                                                           char *) mem_43305_backing_aligned_0;
    __local volatile char *restrict mem_43295_backing_0 = (__local volatile
                                                           char *) mem_43295_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44492;
    int32_t local_tid_44493;
    int64_t group_sizze_44496;
    int32_t wave_sizze_44495;
    int32_t group_tid_44494;
    
    global_tid_44492 = get_global_id(0);
    local_tid_44493 = get_local_id(0);
    group_sizze_44496 = get_local_size(0);
    wave_sizze_44495 = LOCKSTEP_WIDTH;
    group_tid_44494 = get_group_id(0);
    
    int32_t phys_tid_34633;
    
    phys_tid_34633 = group_tid_44494;
    
    int32_t ltid_pre_44497;
    
    ltid_pre_44497 = local_tid_44493;
    
    int64_t gtid_34588;
    
    gtid_34588 = sext_i32_i64(group_tid_44494);
    
    __local char *mem_43295;
    
    mem_43295 = (__local char *) mem_43295_backing_0;
    
    int64_t gtid_34591 = sext_i32_i64(ltid_pre_44497);
    int32_t phys_tid_34592 = local_tid_44493;
    int32_t index_primexp_41131 = sext_i64_i32(gtid_34591);
    int32_t defunc_0_f_res_34758 = sdiv32(index_primexp_41131, m_28624);
    int32_t defunc_0_f_res_34759 = smod32(index_primexp_41131, m_28624);
    bool cond_34760 = slt32(defunc_0_f_res_34759, k2p2zq_28491);
    float defunc_0_f_res_34761;
    
    if (cond_34760) {
        int64_t i_34762 = sext_i32_i64(defunc_0_f_res_34758);
        int64_t j_34763 = sext_i32_i64(defunc_0_f_res_34759);
        float defunc_0_f_res_t_res_34764 = ((__global
                                             float *) defunc_3_map_res_mem_43291)[gtid_34588 *
                                                                                  (i32_res_28493 *
                                                                                   i32_res_28493) +
                                                                                  i_34762 *
                                                                                  i32_res_28493 +
                                                                                  j_34763];
        
        defunc_0_f_res_34761 = defunc_0_f_res_t_res_34764;
    } else {
        int32_t y_34765 = add32(k2p2zq_28491, defunc_0_f_res_34758);
        bool cond_34766 = defunc_0_f_res_34759 == y_34765;
        float defunc_0_f_res_f_res_34767;
        
        if (cond_34766) {
            defunc_0_f_res_f_res_34767 = 1.0F;
        } else {
            defunc_0_f_res_f_res_34767 = 0.0F;
        }
        defunc_0_f_res_34761 = defunc_0_f_res_f_res_34767;
    }
    ((__local float *) mem_43295)[gtid_34591] = defunc_0_f_res_34761;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43305;
    
    mem_43305 = (__local char *) mem_43305_backing_1;
    for (int32_t i_34769 = 0; i_34769 < k2p2zq_28491; i_34769++) {
        int64_t i32_res_34771 = sext_i32_i64(i_34769);
        float v1_34772 = ((__local float *) mem_43295)[i32_res_34771];
        bool cond_34773 = v1_34772 == 0.0F;
        int64_t gtid_34604 = sext_i32_i64(ltid_pre_44497);
        int32_t phys_tid_34605 = local_tid_44493;
        int32_t defunc_0_f_res_34776 = sext_i64_i32(gtid_34604);
        int32_t defunc_0_f_res_34777 = sdiv32(defunc_0_f_res_34776, m_28624);
        int32_t defunc_0_f_res_34778 = smod32(defunc_0_f_res_34776, m_28624);
        float defunc_0_f_res_34779;
        
        if (cond_34773) {
            int32_t x_34780 = mul32(m_28624, defunc_0_f_res_34777);
            int32_t i32_arg_34781 = add32(defunc_0_f_res_34778, x_34780);
            int64_t i32_res_34782 = sext_i32_i64(i32_arg_34781);
            float defunc_0_f_res_t_res_34783 = ((__local
                                                 float *) mem_43295)[i32_res_34782];
            
            defunc_0_f_res_34779 = defunc_0_f_res_t_res_34783;
        } else {
            int64_t i32_res_34784 = sext_i32_i64(defunc_0_f_res_34778);
            float x_34785 = ((__local float *) mem_43295)[i32_res_34784];
            float x_34786 = x_34785 / v1_34772;
            int32_t y_34787 = sub32(k2p2zq_28491, 1);
            bool cond_34788 = slt32(defunc_0_f_res_34777, y_34787);
            float defunc_0_f_res_f_res_34789;
            
            if (cond_34788) {
                int32_t x_34790 = add32(1, defunc_0_f_res_34777);
                int32_t x_34791 = mul32(m_28624, x_34790);
                int32_t i32_arg_34792 = add32(defunc_0_f_res_34778, x_34791);
                int64_t i32_res_34793 = sext_i32_i64(i32_arg_34792);
                float x_34794 = ((__local float *) mem_43295)[i32_res_34793];
                int32_t i32_arg_34795 = add32(i_34769, x_34791);
                int64_t i32_res_34796 = sext_i32_i64(i32_arg_34795);
                float x_34797 = ((__local float *) mem_43295)[i32_res_34796];
                float y_34798 = x_34786 * x_34797;
                float defunc_0_f_res_f_res_t_res_34799 = x_34794 - y_34798;
                
                defunc_0_f_res_f_res_34789 = defunc_0_f_res_f_res_t_res_34799;
            } else {
                defunc_0_f_res_f_res_34789 = x_34786;
            }
            defunc_0_f_res_34779 = defunc_0_f_res_f_res_34789;
        }
        ((__local float *) mem_43305)[gtid_34604] = defunc_0_f_res_34779;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_34631 = sext_i32_i64(ltid_pre_44497);
        int32_t phys_tid_34632 = local_tid_44493;
        float write_value_34802 = ((__local float *) mem_43305)[write_i_34631];
        
        if (sle64(0, write_i_34631) && slt64(write_i_34631, i32_res_28626)) {
            ((__local float *) mem_43295)[write_i_34631] = write_value_34802;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    for (int64_t i_44499 = 0; i_44499 < sdiv_up64(i32_res_28493 *
                                                  i32_res_28493 -
                                                  sext_i32_i64(local_tid_44493),
                                                  i32_res_28626); i_44499++) {
        ((__global float *) mem_43315)[gtid_34588 * (i32_res_28493 *
                                                     i32_res_28493) +
                                       squot64(i_44499 * i32_res_28626 +
                                               sext_i32_i64(local_tid_44493),
                                               i32_res_28493) * i32_res_28493 +
                                       (i_44499 * i32_res_28626 +
                                        sext_i32_i64(local_tid_44493) -
                                        squot64(i_44499 * i32_res_28626 +
                                                sext_i32_i64(local_tid_44493),
                                                i32_res_28493) *
                                        i32_res_28493)] = ((__local
                                                            float *) mem_43295)[i32_res_28493 +
                                                                                (squot64(i_44499 *
                                                                                         i32_res_28626 +
                                                                                         sext_i32_i64(local_tid_44493),
                                                                                         i32_res_28493) *
                                                                                 i32_res_28641 +
                                                                                 (i_44499 *
                                                                                  i32_res_28626 +
                                                                                  sext_i32_i64(local_tid_44493) -
                                                                                  squot64(i_44499 *
                                                                                          i32_res_28626 +
                                                                                          sext_i32_i64(local_tid_44493),
                                                                                          i32_res_28493) *
                                                                                  i32_res_28493))];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_3:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_34860(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43336_backing_aligned_0,
                                                     int64_t m_28474,
                                                     int32_t k2p2zq_28491,
                                                     int32_t m_28624,
                                                     int64_t i32_res_28626,
                                                     int32_t i_35255,
                                                     int64_t i32_res_35257,
                                                     int64_t ctx_param_ext_43322,
                                                     int64_t ctx_param_ext_43323,
                                                     int64_t ctx_param_ext_43325,
                                                     __global
                                                     unsigned char *mem_param_43327,
                                                     __global
                                                     unsigned char *mem_43332,
                                                     __global
                                                     unsigned char *mem_43340)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43336_backing_0 = (__local volatile
                                                           char *) mem_43336_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44526;
    int32_t local_tid_44527;
    int64_t group_sizze_44530;
    int32_t wave_sizze_44529;
    int32_t group_tid_44528;
    
    global_tid_44526 = get_global_id(0);
    local_tid_44527 = get_local_id(0);
    group_sizze_44530 = get_local_size(0);
    wave_sizze_44529 = LOCKSTEP_WIDTH;
    group_tid_44528 = get_group_id(0);
    
    int32_t phys_tid_34860;
    
    phys_tid_34860 = group_tid_44528;
    
    int32_t ltid_pre_44531;
    
    ltid_pre_44531 = local_tid_44527;
    
    int64_t gtid_34828;
    
    gtid_34828 = sext_i32_i64(group_tid_44528);
    
    float v1_35270 = ((__global float *) mem_param_43327)[ctx_param_ext_43322 +
                                                          (gtid_34828 *
                                                           ctx_param_ext_43323 +
                                                           i32_res_35257 *
                                                           ctx_param_ext_43325)];
    bool cond_35271 = v1_35270 == 0.0F;
    __local char *mem_43336;
    
    mem_43336 = (__local char *) mem_43336_backing_0;
    
    int64_t gtid_34831 = sext_i32_i64(ltid_pre_44531);
    int32_t phys_tid_34832 = local_tid_44527;
    int32_t defunc_0_f_res_35274 = sext_i64_i32(gtid_34831);
    int32_t defunc_0_f_res_35275 = sdiv32(defunc_0_f_res_35274, m_28624);
    int32_t defunc_0_f_res_35276 = smod32(defunc_0_f_res_35274, m_28624);
    float defunc_0_f_res_35277;
    
    if (cond_35271) {
        int32_t x_35278 = mul32(m_28624, defunc_0_f_res_35275);
        int32_t i32_arg_35279 = add32(defunc_0_f_res_35276, x_35278);
        int64_t i32_res_35280 = sext_i32_i64(i32_arg_35279);
        float defunc_0_f_res_t_res_35281 = ((__global
                                             float *) mem_param_43327)[ctx_param_ext_43322 +
                                                                       (gtid_34828 *
                                                                        ctx_param_ext_43323 +
                                                                        i32_res_35280 *
                                                                        ctx_param_ext_43325)];
        
        defunc_0_f_res_35277 = defunc_0_f_res_t_res_35281;
    } else {
        int64_t i32_res_35282 = sext_i32_i64(defunc_0_f_res_35276);
        float x_35283 = ((__global
                          float *) mem_param_43327)[ctx_param_ext_43322 +
                                                    (gtid_34828 *
                                                     ctx_param_ext_43323 +
                                                     i32_res_35282 *
                                                     ctx_param_ext_43325)];
        float x_35284 = x_35283 / v1_35270;
        int32_t y_35285 = sub32(k2p2zq_28491, 1);
        bool cond_35286 = slt32(defunc_0_f_res_35275, y_35285);
        float defunc_0_f_res_f_res_35287;
        
        if (cond_35286) {
            int32_t x_35288 = add32(1, defunc_0_f_res_35275);
            int32_t x_35289 = mul32(m_28624, x_35288);
            int32_t i32_arg_35290 = add32(defunc_0_f_res_35276, x_35289);
            int64_t i32_res_35291 = sext_i32_i64(i32_arg_35290);
            float x_35292 = ((__global
                              float *) mem_param_43327)[ctx_param_ext_43322 +
                                                        (gtid_34828 *
                                                         ctx_param_ext_43323 +
                                                         i32_res_35291 *
                                                         ctx_param_ext_43325)];
            int32_t i32_arg_35293 = add32(i_35255, x_35289);
            int64_t i32_res_35294 = sext_i32_i64(i32_arg_35293);
            float x_35295 = ((__global
                              float *) mem_param_43327)[ctx_param_ext_43322 +
                                                        (gtid_34828 *
                                                         ctx_param_ext_43323 +
                                                         i32_res_35294 *
                                                         ctx_param_ext_43325)];
            float y_35296 = x_35284 * x_35295;
            float defunc_0_f_res_f_res_t_res_35297 = x_35292 - y_35296;
            
            defunc_0_f_res_f_res_35287 = defunc_0_f_res_f_res_t_res_35297;
        } else {
            defunc_0_f_res_f_res_35287 = x_35284;
        }
        defunc_0_f_res_35277 = defunc_0_f_res_f_res_35287;
    }
    ((__local float *) mem_43336)[gtid_34831] = defunc_0_f_res_35277;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_34858 = sext_i32_i64(ltid_pre_44531);
    int32_t phys_tid_34859 = local_tid_44527;
    float write_value_35300 = ((__local float *) mem_43336)[write_i_34858];
    
    if (sle64(0, write_i_34858) && slt64(write_i_34858, i32_res_28626)) {
        ((__global float *) mem_43332)[gtid_34828 + write_i_34858 * m_28474] =
            write_value_35300;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44527 == 0) {
        for (int64_t i_44532 = 0; i_44532 < i32_res_28626; i_44532++) {
            ((__global float *) mem_43340)[gtid_34828 * i32_res_28626 +
                                           i_44532] = ((__global
                                                        float *) mem_43332)[gtid_34828 +
                                                                            i_44532 *
                                                                            m_28474];
        }
    }
    
  error_2:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_35811(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43897_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43895_backing_aligned_1,
                                                     __local volatile
                                                     int64_t *mem_43893_backing_aligned_2,
                                                     __local volatile
                                                     int64_t *mem_43891_backing_aligned_3,
                                                     int64_t N_28473,
                                                     int64_t N_28475,
                                                     int64_t i_28753, __global
                                                     unsigned char *images_mem_43123,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43881,
                                                     __global
                                                     unsigned char *mem_43900,
                                                     __global
                                                     unsigned char *mem_43903,
                                                     __global
                                                     unsigned char *mem_43906)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43897_backing_3 = (__local volatile
                                                           char *) mem_43897_backing_aligned_0;
    __local volatile char *restrict mem_43895_backing_2 = (__local volatile
                                                           char *) mem_43895_backing_aligned_1;
    __local volatile char *restrict mem_43893_backing_1 = (__local volatile
                                                           char *) mem_43893_backing_aligned_2;
    __local volatile char *restrict mem_43891_backing_0 = (__local volatile
                                                           char *) mem_43891_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44926;
    int32_t local_tid_44927;
    int64_t group_sizze_44930;
    int32_t wave_sizze_44929;
    int32_t group_tid_44928;
    
    global_tid_44926 = get_global_id(0);
    local_tid_44927 = get_local_id(0);
    group_sizze_44930 = get_local_size(0);
    wave_sizze_44929 = LOCKSTEP_WIDTH;
    group_tid_44928 = get_group_id(0);
    
    int32_t phys_tid_35811;
    
    phys_tid_35811 = group_tid_44928;
    
    int32_t ltid_pre_44931;
    
    ltid_pre_44931 = local_tid_44927;
    
    int64_t gtid_35804;
    
    gtid_35804 = sext_i32_i64(group_tid_44928);
    
    __local char *mem_43891;
    
    mem_43891 = (__local char *) mem_43891_backing_0;
    
    __local char *mem_43893;
    
    mem_43893 = (__local char *) mem_43893_backing_1;
    
    int64_t gtid_35807 = sext_i32_i64(ltid_pre_44931);
    int32_t phys_tid_35808 = local_tid_44927;
    float x_35900 = ((__global float *) images_mem_43123)[gtid_35804 * N_28475 +
                                                          gtid_35807];
    bool isnan_res_35902;
    
    isnan_res_35902 = futrts_isnan32(x_35900);
    
    bool cond_35903 = !isnan_res_35902;
    float defunc_0_f_res_35904;
    
    if (cond_35903) {
        float x_35901 = ((__global
                          float *) defunc_3_map_res_mem_43881)[gtid_35804 *
                                                               N_28473 +
                                                               gtid_35807];
        float defunc_0_f_res_t_res_35905 = x_35900 - x_35901;
        
        defunc_0_f_res_35904 = defunc_0_f_res_t_res_35905;
    } else {
        defunc_0_f_res_35904 = NAN;
    }
    
    bool isnan_res_35906;
    
    isnan_res_35906 = futrts_isnan32(defunc_0_f_res_35904);
    
    bool defunc_0_p_res_35907 = !isnan_res_35906;
    int64_t defunc_0_f_res_35908 = btoi_bool_i64(defunc_0_p_res_35907);
    
    ((__local int64_t *) mem_43891)[gtid_35807] = defunc_0_f_res_35908;
    ((__local float *) mem_43893)[gtid_35807] = defunc_0_f_res_35904;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_44932;
    
    dims_flat_44932 = N_28473;
    
    int64_t x_35897;
    int64_t x_35898;
    int64_t x_44934;
    int64_t x_44935;
    bool ltid_in_bounds_44937;
    
    ltid_in_bounds_44937 = slt64(sext_i32_i64(local_tid_44927), N_28473);
    
    int32_t skip_threads_44938;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44937) {
            x_35898 = ((volatile __local
                        int64_t *) mem_43891)[sext_i32_i64(local_tid_44927)];
            if ((local_tid_44927 - squot32(local_tid_44927, 32) * 32) == 0) {
                x_35897 = x_35898;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44938 = 1;
        while (slt32(skip_threads_44938, 32)) {
            if (sle32(skip_threads_44938, local_tid_44927 -
                      squot32(local_tid_44927, 32) * 32) &&
                ltid_in_bounds_44937) {
                // read operands
                {
                    x_35897 = ((volatile __local
                                int64_t *) mem_43891)[sext_i32_i64(local_tid_44927) -
                                                      sext_i32_i64(skip_threads_44938)];
                }
                // perform operation
                {
                    bool inactive_44939 =
                         slt64(srem64(sext_i32_i64(local_tid_44927), N_28473),
                               sext_i32_i64(local_tid_44927) -
                               sext_i32_i64(local_tid_44927 -
                               skip_threads_44938));
                    
                    if (inactive_44939) {
                        x_35897 = x_35898;
                    }
                    if (!inactive_44939) {
                        int64_t defunc_1_op_res_35899 = add64(x_35897, x_35898);
                        
                        x_35897 = defunc_1_op_res_35899;
                    }
                }
            }
            if (sle32(wave_sizze_44929, skip_threads_44938)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44938, local_tid_44927 -
                      squot32(local_tid_44927, 32) * 32) &&
                ltid_in_bounds_44937) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_43891)[sext_i32_i64(local_tid_44927)] =
                        x_35897;
                    x_35898 = x_35897;
                }
            }
            if (sle32(wave_sizze_44929, skip_threads_44938)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44938 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44927 - squot32(local_tid_44927, 32) * 32) == 31 &&
            ltid_in_bounds_44937) {
            ((volatile __local
              int64_t *) mem_43891)[sext_i32_i64(squot32(local_tid_44927,
                                                         32))] = x_35897;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44940;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44927, 32) == 0 && ltid_in_bounds_44937) {
                x_44935 = ((volatile __local
                            int64_t *) mem_43891)[sext_i32_i64(local_tid_44927)];
                if ((local_tid_44927 - squot32(local_tid_44927, 32) * 32) ==
                    0) {
                    x_44934 = x_44935;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44940 = 1;
            while (slt32(skip_threads_44940, 32)) {
                if (sle32(skip_threads_44940, local_tid_44927 -
                          squot32(local_tid_44927, 32) * 32) &&
                    (squot32(local_tid_44927, 32) == 0 &&
                     ltid_in_bounds_44937)) {
                    // read operands
                    {
                        x_44934 = ((volatile __local
                                    int64_t *) mem_43891)[sext_i32_i64(local_tid_44927) -
                                                          sext_i32_i64(skip_threads_44940)];
                    }
                    // perform operation
                    {
                        bool inactive_44941 =
                             slt64(srem64(sext_i32_i64(local_tid_44927 * 32 +
                                          32 - 1), N_28473),
                                   sext_i32_i64(local_tid_44927 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_44927 -
                                                 skip_threads_44940) * 32 + 32 -
                                   1));
                        
                        if (inactive_44941) {
                            x_44934 = x_44935;
                        }
                        if (!inactive_44941) {
                            int64_t defunc_1_op_res_44936 = add64(x_44934,
                                                                  x_44935);
                            
                            x_44934 = defunc_1_op_res_44936;
                        }
                    }
                }
                if (sle32(wave_sizze_44929, skip_threads_44940)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44940, local_tid_44927 -
                          squot32(local_tid_44927, 32) * 32) &&
                    (squot32(local_tid_44927, 32) == 0 &&
                     ltid_in_bounds_44937)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_43891)[sext_i32_i64(local_tid_44927)] =
                            x_44934;
                        x_44935 = x_44934;
                    }
                }
                if (sle32(wave_sizze_44929, skip_threads_44940)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44940 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44927, 32) == 0 || !ltid_in_bounds_44937)) {
            // read operands
            {
                x_35898 = x_35897;
                x_35897 = ((__local
                            int64_t *) mem_43891)[sext_i32_i64(squot32(local_tid_44927,
                                                                       32)) -
                                                  1];
            }
            // perform operation
            {
                bool inactive_44942 =
                     slt64(srem64(sext_i32_i64(local_tid_44927), N_28473),
                           sext_i32_i64(local_tid_44927) -
                           sext_i32_i64(squot32(local_tid_44927, 32) * 32 - 1));
                
                if (inactive_44942) {
                    x_35897 = x_35898;
                }
                if (!inactive_44942) {
                    int64_t defunc_1_op_res_35899 = add64(x_35897, x_35898);
                    
                    x_35897 = defunc_1_op_res_35899;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_43891)[sext_i32_i64(local_tid_44927)] =
                    x_35897;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44927, 32) == 0) {
            ((__local int64_t *) mem_43891)[sext_i32_i64(local_tid_44927)] =
                x_35898;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_35909 = ((__local int64_t *) mem_43891)[i_28753];
    int32_t defunc_0_f_res_35910 = sext_i64_i32(last_res_35909);
    __local char *mem_43895;
    
    mem_43895 = (__local char *) mem_43895_backing_2;
    ((__local float *) mem_43895)[sext_i32_i64(local_tid_44927)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43897;
    
    mem_43897 = (__local char *) mem_43897_backing_3;
    ((__local int32_t *) mem_43897)[sext_i32_i64(local_tid_44927)] = 0;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_35809 = sext_i32_i64(ltid_pre_44931);
    int32_t phys_tid_35810 = local_tid_44927;
    float x_35915 = ((__local float *) mem_43893)[write_i_35809];
    int32_t index_primexp_41151 = sext_i64_i32(write_i_35809);
    bool isnan_res_35918;
    
    isnan_res_35918 = futrts_isnan32(x_35915);
    
    bool defunc_0_p_res_35919 = !isnan_res_35918;
    int64_t defunc_1_f_res_35920;
    
    if (defunc_0_p_res_35919) {
        int64_t x_35916 = ((__local int64_t *) mem_43891)[write_i_35809];
        int64_t defunc_1_f_res_t_res_35921 = sub64(x_35916, 1);
        
        defunc_1_f_res_35920 = defunc_1_f_res_t_res_35921;
    } else {
        defunc_1_f_res_35920 = -1;
    }
    if (sle64(0, defunc_1_f_res_35920) && slt64(defunc_1_f_res_35920,
                                                N_28473)) {
        ((__local int32_t *) mem_43897)[defunc_1_f_res_35920] =
            index_primexp_41151;
    }
    if (sle64(0, defunc_1_f_res_35920) && slt64(defunc_1_f_res_35920,
                                                N_28473)) {
        ((__local float *) mem_43895)[defunc_1_f_res_35920] = x_35915;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44927 == 0) {
        ((__global int32_t *) mem_43900)[gtid_35804] = defunc_0_f_res_35910;
    }
    ((__global float *) mem_43903)[gtid_35804 * N_28473 +
                                   sext_i32_i64(local_tid_44927)] = ((__local
                                                                      float *) mem_43895)[sext_i32_i64(local_tid_44927)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global int32_t *) mem_43906)[gtid_35804 * N_28473 +
                                     sext_i32_i64(local_tid_44927)] = ((__local
                                                                        int32_t *) mem_43897)[sext_i32_i64(local_tid_44927)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_36151(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *red_arr_mem_45035_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *red_arr_mem_45031_backing_aligned_1,
                                                     int64_t N_28473,
                                                     int64_t N_28475,
                                                     float hfrac_28480,
                                                     int64_t i32_res_28487,
                                                     int32_t k2p2_28489,
                                                     __global
                                                     unsigned char *images_mem_43123,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_43919,
                                                     __global
                                                     unsigned char *mem_43963,
                                                     __global
                                                     unsigned char *mem_43965,
                                                     __global
                                                     unsigned char *mem_43967)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45035_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45035_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45031_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45031_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45025;
    int32_t local_tid_45026;
    int64_t group_sizze_45029;
    int32_t wave_sizze_45028;
    int32_t group_tid_45027;
    
    global_tid_45025 = get_global_id(0);
    local_tid_45026 = get_local_id(0);
    group_sizze_45029 = get_local_size(0);
    wave_sizze_45028 = LOCKSTEP_WIDTH;
    group_tid_45027 = get_group_id(0);
    
    int32_t phys_tid_36151;
    
    phys_tid_36151 = group_tid_45027;
    
    int32_t ltid_pre_45030;
    
    ltid_pre_45030 = local_tid_45026;
    
    int64_t gtid_36144;
    
    gtid_36144 = sext_i32_i64(group_tid_45027);
    
    int32_t defunc_0_f_res_36228;
    int64_t gtid_36147 = sext_i32_i64(ltid_pre_45030);
    int32_t phys_tid_36148 = local_tid_45026;
    __local char *red_arr_mem_45031;
    
    red_arr_mem_45031 = (__local char *) red_arr_mem_45031_backing_0;
    
    float x_36232;
    
    x_36232 = ((__global float *) images_mem_43123)[gtid_36144 * N_28475 +
                                                    gtid_36147];
    
    bool isnan_res_36233;
    
    isnan_res_36233 = futrts_isnan32(x_36232);
    
    bool cond_36234 = !isnan_res_36233;
    int32_t defunc_0_f_res_36235 = btoi_bool_i32(cond_36234);
    
    ((__local int32_t *) red_arr_mem_45031)[gtid_36147] = defunc_0_f_res_36235;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45033;
    int32_t skip_waves_45034;
    
    skip_waves_45034 = 1;
    
    int32_t x_36229;
    int32_t x_36230;
    
    offset_45033 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45026, sext_i64_i32(i32_res_28487))) {
            x_36229 = ((__local
                        int32_t *) red_arr_mem_45031)[sext_i32_i64(local_tid_45026 +
                                                      offset_45033)];
        }
    }
    offset_45033 = 1;
    while (slt32(offset_45033, wave_sizze_45028)) {
        if (slt32(local_tid_45026 + offset_45033,
                  sext_i64_i32(i32_res_28487)) && ((local_tid_45026 -
                                                    squot32(local_tid_45026,
                                                            wave_sizze_45028) *
                                                    wave_sizze_45028) & (2 *
                                                                         offset_45033 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_36230 = ((volatile __local
                            int32_t *) red_arr_mem_45031)[sext_i32_i64(local_tid_45026 +
                                                          offset_45033)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_36231 = add32(x_36229, x_36230);
                
                x_36229 = defunc_1_op_res_36231;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_45031)[sext_i32_i64(local_tid_45026)] =
                    x_36229;
            }
        }
        offset_45033 *= 2;
    }
    while (slt32(skip_waves_45034, squot32(sext_i64_i32(i32_res_28487) +
                                           wave_sizze_45028 - 1,
                                           wave_sizze_45028))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45033 = skip_waves_45034 * wave_sizze_45028;
        if (slt32(local_tid_45026 + offset_45033,
                  sext_i64_i32(i32_res_28487)) && ((local_tid_45026 -
                                                    squot32(local_tid_45026,
                                                            wave_sizze_45028) *
                                                    wave_sizze_45028) == 0 &&
                                                   (squot32(local_tid_45026,
                                                            wave_sizze_45028) &
                                                    (2 * skip_waves_45034 -
                                                     1)) == 0)) {
            // read array element
            {
                x_36230 = ((__local
                            int32_t *) red_arr_mem_45031)[sext_i32_i64(local_tid_45026 +
                                                          offset_45033)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_36231 = add32(x_36229, x_36230);
                
                x_36229 = defunc_1_op_res_36231;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_45031)[sext_i32_i64(local_tid_45026)] =
                    x_36229;
            }
        }
        skip_waves_45034 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_36228 = ((__local int32_t *) red_arr_mem_45031)[0];
    
    float defunc_0_f_res_36236;
    int64_t gtid_36149 = sext_i32_i64(ltid_pre_45030);
    int32_t phys_tid_36150 = local_tid_45026;
    __local char *red_arr_mem_45035;
    
    red_arr_mem_45035 = (__local char *) red_arr_mem_45035_backing_1;
    
    int32_t index_primexp_41159;
    
    index_primexp_41159 = sext_i64_i32(gtid_36149);
    
    bool cond_36241 = slt32(index_primexp_41159, defunc_0_f_res_36228);
    float defunc_0_f_res_36242;
    
    if (cond_36241) {
        int64_t i_36243 = sext_i32_i64(index_primexp_41159);
        float defunc_0_f_res_t_res_36244 = ((__global
                                             float *) defunc_4_map_res_mem_43919)[gtid_36144 *
                                                                                  N_28473 +
                                                                                  i_36243];
        
        defunc_0_f_res_36242 = defunc_0_f_res_t_res_36244;
    } else {
        defunc_0_f_res_36242 = 0.0F;
    }
    
    float defunc_0_f_res_36245 = defunc_0_f_res_36242 * defunc_0_f_res_36242;
    
    ((__local float *) red_arr_mem_45035)[gtid_36149] = defunc_0_f_res_36245;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45037;
    int32_t skip_waves_45038;
    
    skip_waves_45038 = 1;
    
    float x_36237;
    float x_36238;
    
    offset_45037 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45026, sext_i64_i32(i32_res_28487))) {
            x_36237 = ((__local
                        float *) red_arr_mem_45035)[sext_i32_i64(local_tid_45026 +
                                                    offset_45037)];
        }
    }
    offset_45037 = 1;
    while (slt32(offset_45037, wave_sizze_45028)) {
        if (slt32(local_tid_45026 + offset_45037,
                  sext_i64_i32(i32_res_28487)) && ((local_tid_45026 -
                                                    squot32(local_tid_45026,
                                                            wave_sizze_45028) *
                                                    wave_sizze_45028) & (2 *
                                                                         offset_45037 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_36238 = ((volatile __local
                            float *) red_arr_mem_45035)[sext_i32_i64(local_tid_45026 +
                                                        offset_45037)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_36239 = x_36237 + x_36238;
                
                x_36237 = defunc_1_op_res_36239;
            }
            // write result of operation
            {
                ((volatile __local
                  float *) red_arr_mem_45035)[sext_i32_i64(local_tid_45026)] =
                    x_36237;
            }
        }
        offset_45037 *= 2;
    }
    while (slt32(skip_waves_45038, squot32(sext_i64_i32(i32_res_28487) +
                                           wave_sizze_45028 - 1,
                                           wave_sizze_45028))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45037 = skip_waves_45038 * wave_sizze_45028;
        if (slt32(local_tid_45026 + offset_45037,
                  sext_i64_i32(i32_res_28487)) && ((local_tid_45026 -
                                                    squot32(local_tid_45026,
                                                            wave_sizze_45028) *
                                                    wave_sizze_45028) == 0 &&
                                                   (squot32(local_tid_45026,
                                                            wave_sizze_45028) &
                                                    (2 * skip_waves_45038 -
                                                     1)) == 0)) {
            // read array element
            {
                x_36238 = ((__local
                            float *) red_arr_mem_45035)[sext_i32_i64(local_tid_45026 +
                                                        offset_45037)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_36239 = x_36237 + x_36238;
                
                x_36237 = defunc_1_op_res_36239;
            }
            // write result of operation
            {
                ((__local
                  float *) red_arr_mem_45035)[sext_i32_i64(local_tid_45026)] =
                    x_36237;
            }
        }
        skip_waves_45038 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_36236 = ((__local float *) red_arr_mem_45035)[0];
    
    int32_t r32_arg_36246 = sub32(defunc_0_f_res_36228, k2p2_28489);
    float i32_res_36247 = sitofp_i32_f32(r32_arg_36246);
    float sqrt_arg_36248 = defunc_0_f_res_36236 / i32_res_36247;
    float sqrt_res_36249;
    
    sqrt_res_36249 = futrts_sqrt32(sqrt_arg_36248);
    
    float i32_res_36250 = sitofp_i32_f32(defunc_0_f_res_36228);
    float t32_arg_36251 = hfrac_28480 * i32_res_36250;
    int32_t f32_res_36252 = fptosi_f32_i32(t32_arg_36251);
    
    if (local_tid_45026 == 0) {
        ((__global int32_t *) mem_43963)[gtid_36144] = f32_res_36252;
    }
    if (local_tid_45026 == 0) {
        ((__global int32_t *) mem_43965)[gtid_36144] = defunc_0_f_res_36228;
    }
    if (local_tid_45026 == 0) {
        ((__global float *) mem_43967)[gtid_36144] = sqrt_res_36249;
    }
    
  error_4:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_37129(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *red_arr_mem_45318_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *red_arr_mem_45316_backing_aligned_1,
                                                     __local volatile
                                                     int64_t *red_arr_mem_45314_backing_aligned_2,
                                                     __local volatile
                                                     int64_t *mem_44067_backing_aligned_3,
                                                     int64_t N_28473,
                                                     int32_t n_28478,
                                                     int64_t iota32_arg_28873,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_43918,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_43919,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_43920,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43982,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43983,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43984,
                                                     __global
                                                     unsigned char *defunc_0_f_res_mem_44017,
                                                     __global
                                                     unsigned char *mem_44022,
                                                     __global
                                                     unsigned char *mem_44070,
                                                     __global
                                                     unsigned char *mem_44072)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45318_backing_3 =
                          (__local volatile
                           char *) red_arr_mem_45318_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45316_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45316_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45314_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45314_backing_aligned_2;
    __local volatile char *restrict mem_44067_backing_0 = (__local volatile
                                                           char *) mem_44067_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45297;
    int32_t local_tid_45298;
    int64_t group_sizze_45301;
    int32_t wave_sizze_45300;
    int32_t group_tid_45299;
    
    global_tid_45297 = get_global_id(0);
    local_tid_45298 = get_local_id(0);
    group_sizze_45301 = get_local_size(0);
    wave_sizze_45300 = LOCKSTEP_WIDTH;
    group_tid_45299 = get_group_id(0);
    
    int32_t phys_tid_37129;
    
    phys_tid_37129 = group_tid_45299;
    
    int32_t ltid_pre_45302;
    
    ltid_pre_45302 = local_tid_45298;
    
    int64_t gtid_37122;
    
    gtid_37122 = sext_i32_i64(group_tid_45299);
    
    int32_t x_37348;
    
    x_37348 = ((__global int32_t *) defunc_4_map_res_mem_43918)[gtid_37122];
    
    int32_t x_37349 = ((__global
                        int32_t *) defunc_3_map_res_mem_43983)[gtid_37122];
    float x_37350 = ((__global float *) defunc_3_map_res_mem_43984)[gtid_37122];
    int32_t x_37351 = ((__global
                        int32_t *) defunc_3_map_res_mem_43982)[gtid_37122];
    float x_37352 = ((__global float *) defunc_0_f_res_mem_44017)[gtid_37122];
    int32_t y_37355 = sub32(x_37348, x_37349);
    float i32_res_37356 = sitofp_i32_f32(x_37349);
    float sqrt_res_37357;
    
    sqrt_res_37357 = futrts_sqrt32(i32_res_37356);
    
    float y_37358 = x_37350 * sqrt_res_37357;
    __local char *mem_44067;
    
    mem_44067 = (__local char *) mem_44067_backing_0;
    
    int64_t gtid_37125 = sext_i32_i64(ltid_pre_45302);
    int32_t phys_tid_37126 = local_tid_45298;
    int32_t index_primexp_41177 = sext_i64_i32(gtid_37125);
    bool cond_37371 = sle32(y_37355, index_primexp_41177);
    float defunc_0_f_res_37372;
    
    if (cond_37371) {
        defunc_0_f_res_37372 = 0.0F;
    } else {
        bool cond_37373 = index_primexp_41177 == 0;
        float defunc_0_f_res_f_res_37374;
        
        if (cond_37373) {
            defunc_0_f_res_f_res_37374 = x_37352;
        } else {
            int32_t i_37375 = add32(x_37349, index_primexp_41177);
            int64_t i_37376 = sext_i32_i64(i_37375);
            float x_37377 = ((__global
                              float *) defunc_4_map_res_mem_43919)[gtid_37122 *
                                                                   N_28473 +
                                                                   i_37376];
            int32_t x_37378 = sub32(x_37349, x_37351);
            int32_t i_37379 = add32(x_37378, index_primexp_41177);
            int64_t i_37380 = sext_i32_i64(i_37379);
            float y_37381 = ((__global
                              float *) defunc_4_map_res_mem_43919)[gtid_37122 *
                                                                   N_28473 +
                                                                   i_37380];
            float defunc_0_f_res_f_res_f_res_37382 = x_37377 - y_37381;
            
            defunc_0_f_res_f_res_37374 = defunc_0_f_res_f_res_f_res_37382;
        }
        defunc_0_f_res_37372 = defunc_0_f_res_f_res_37374;
    }
    ((__local float *) mem_44067)[gtid_37125] = defunc_0_f_res_37372;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_45303;
    
    dims_flat_45303 = iota32_arg_28873;
    
    float x_37367;
    float x_37368;
    float x_45305;
    float x_45306;
    bool ltid_in_bounds_45308;
    
    ltid_in_bounds_45308 = slt64(sext_i32_i64(local_tid_45298),
                                 iota32_arg_28873);
    
    int32_t skip_threads_45309;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45308) {
            x_37368 = ((volatile __local
                        float *) mem_44067)[sext_i32_i64(local_tid_45298)];
            if ((local_tid_45298 - squot32(local_tid_45298, 32) * 32) == 0) {
                x_37367 = x_37368;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45309 = 1;
        while (slt32(skip_threads_45309, 32)) {
            if (sle32(skip_threads_45309, local_tid_45298 -
                      squot32(local_tid_45298, 32) * 32) &&
                ltid_in_bounds_45308) {
                // read operands
                {
                    x_37367 = ((volatile __local
                                float *) mem_44067)[sext_i32_i64(local_tid_45298) -
                                                    sext_i32_i64(skip_threads_45309)];
                }
                // perform operation
                {
                    bool inactive_45310 =
                         slt64(srem64(sext_i32_i64(local_tid_45298),
                                      iota32_arg_28873),
                               sext_i32_i64(local_tid_45298) -
                               sext_i32_i64(local_tid_45298 -
                               skip_threads_45309));
                    
                    if (inactive_45310) {
                        x_37367 = x_37368;
                    }
                    if (!inactive_45310) {
                        float defunc_1_op_res_37369 = x_37367 + x_37368;
                        
                        x_37367 = defunc_1_op_res_37369;
                    }
                }
            }
            if (sle32(wave_sizze_45300, skip_threads_45309)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45309, local_tid_45298 -
                      squot32(local_tid_45298, 32) * 32) &&
                ltid_in_bounds_45308) {
                // write result
                {
                    ((volatile __local
                      float *) mem_44067)[sext_i32_i64(local_tid_45298)] =
                        x_37367;
                    x_37368 = x_37367;
                }
            }
            if (sle32(wave_sizze_45300, skip_threads_45309)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45309 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45298 - squot32(local_tid_45298, 32) * 32) == 31 &&
            ltid_in_bounds_45308) {
            ((volatile __local
              float *) mem_44067)[sext_i32_i64(squot32(local_tid_45298, 32))] =
                x_37367;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45311;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45298, 32) == 0 && ltid_in_bounds_45308) {
                x_45306 = ((volatile __local
                            float *) mem_44067)[sext_i32_i64(local_tid_45298)];
                if ((local_tid_45298 - squot32(local_tid_45298, 32) * 32) ==
                    0) {
                    x_45305 = x_45306;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45311 = 1;
            while (slt32(skip_threads_45311, 32)) {
                if (sle32(skip_threads_45311, local_tid_45298 -
                          squot32(local_tid_45298, 32) * 32) &&
                    (squot32(local_tid_45298, 32) == 0 &&
                     ltid_in_bounds_45308)) {
                    // read operands
                    {
                        x_45305 = ((volatile __local
                                    float *) mem_44067)[sext_i32_i64(local_tid_45298) -
                                                        sext_i32_i64(skip_threads_45311)];
                    }
                    // perform operation
                    {
                        bool inactive_45312 =
                             slt64(srem64(sext_i32_i64(local_tid_45298 * 32 +
                                          32 - 1), iota32_arg_28873),
                                   sext_i32_i64(local_tid_45298 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_45298 -
                                                 skip_threads_45311) * 32 + 32 -
                                   1));
                        
                        if (inactive_45312) {
                            x_45305 = x_45306;
                        }
                        if (!inactive_45312) {
                            float defunc_1_op_res_45307 = x_45305 + x_45306;
                            
                            x_45305 = defunc_1_op_res_45307;
                        }
                    }
                }
                if (sle32(wave_sizze_45300, skip_threads_45311)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45311, local_tid_45298 -
                          squot32(local_tid_45298, 32) * 32) &&
                    (squot32(local_tid_45298, 32) == 0 &&
                     ltid_in_bounds_45308)) {
                    // write result
                    {
                        ((volatile __local
                          float *) mem_44067)[sext_i32_i64(local_tid_45298)] =
                            x_45305;
                        x_45306 = x_45305;
                    }
                }
                if (sle32(wave_sizze_45300, skip_threads_45311)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45311 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45298, 32) == 0 || !ltid_in_bounds_45308)) {
            // read operands
            {
                x_37368 = x_37367;
                x_37367 = ((__local
                            float *) mem_44067)[sext_i32_i64(squot32(local_tid_45298,
                                                                     32)) - 1];
            }
            // perform operation
            {
                bool inactive_45313 =
                     slt64(srem64(sext_i32_i64(local_tid_45298),
                                  iota32_arg_28873),
                           sext_i32_i64(local_tid_45298) -
                           sext_i32_i64(squot32(local_tid_45298, 32) * 32 - 1));
                
                if (inactive_45313) {
                    x_37367 = x_37368;
                }
                if (!inactive_45313) {
                    float defunc_1_op_res_37369 = x_37367 + x_37368;
                    
                    x_37367 = defunc_1_op_res_37369;
                }
            }
            // write final result
            {
                ((__local float *) mem_44067)[sext_i32_i64(local_tid_45298)] =
                    x_37367;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45298, 32) == 0) {
            ((__local float *) mem_44067)[sext_i32_i64(local_tid_45298)] =
                x_37368;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    bool acc0_37388;
    int32_t acc0_37389;
    float acc0_37390;
    int64_t gtid_37127 = sext_i32_i64(ltid_pre_45302);
    int32_t phys_tid_37128 = local_tid_45298;
    __local char *red_arr_mem_45314;
    
    red_arr_mem_45314 = (__local char *) red_arr_mem_45314_backing_1;
    
    __local char *red_arr_mem_45316;
    
    red_arr_mem_45316 = (__local char *) red_arr_mem_45316_backing_2;
    
    __local char *red_arr_mem_45318;
    
    red_arr_mem_45318 = (__local char *) red_arr_mem_45318_backing_3;
    
    float x_37405;
    
    x_37405 = ((__local float *) mem_44067)[gtid_37127];
    
    float x_37406 = ((__global float *) mem_44022)[gtid_37127];
    int32_t index_primexp_41180 = sext_i64_i32(gtid_37127);
    float defunc_0_f_res_37409 = x_37405 / y_37358;
    bool cond_37410 = slt32(index_primexp_41180, y_37355);
    bool isnan_res_37411;
    
    isnan_res_37411 = futrts_isnan32(defunc_0_f_res_37409);
    
    bool cond_t_res_37412 = !isnan_res_37411;
    bool x_37413 = cond_37410 && cond_t_res_37412;
    float abs_res_37414 = (float) fabs(defunc_0_f_res_37409);
    bool defunc_2_f_res_t_res_37415 = x_37406 < abs_res_37414;
    bool x_37416 = x_37413 && defunc_2_f_res_t_res_37415;
    float defunc_1_f_res_37417;
    
    if (cond_37410) {
        defunc_1_f_res_37417 = defunc_0_f_res_37409;
    } else {
        defunc_1_f_res_37417 = 0.0F;
    }
    ((__local bool *) red_arr_mem_45314)[gtid_37127] = x_37416;
    ((__local int32_t *) red_arr_mem_45316)[gtid_37127] = index_primexp_41180;
    ((__local float *) red_arr_mem_45318)[gtid_37127] = defunc_1_f_res_37417;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45320;
    int32_t skip_waves_45321;
    
    skip_waves_45321 = 1;
    
    bool x_37391;
    int32_t x_37392;
    float x_37393;
    bool x_37394;
    int32_t x_37395;
    float x_37396;
    
    offset_45320 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45298, sext_i64_i32(iota32_arg_28873))) {
            x_37391 = ((__local
                        bool *) red_arr_mem_45314)[sext_i32_i64(local_tid_45298 +
                                                   offset_45320)];
            x_37392 = ((__local
                        int32_t *) red_arr_mem_45316)[sext_i32_i64(local_tid_45298 +
                                                      offset_45320)];
            x_37393 = ((__local
                        float *) red_arr_mem_45318)[sext_i32_i64(local_tid_45298 +
                                                    offset_45320)];
        }
    }
    offset_45320 = 1;
    while (slt32(offset_45320, wave_sizze_45300)) {
        if (slt32(local_tid_45298 + offset_45320,
                  sext_i64_i32(iota32_arg_28873)) && ((local_tid_45298 -
                                                       squot32(local_tid_45298,
                                                               wave_sizze_45300) *
                                                       wave_sizze_45300) & (2 *
                                                                            offset_45320 -
                                                                            1)) ==
            0) {
            // read array element
            {
                x_37394 = ((volatile __local
                            bool *) red_arr_mem_45314)[sext_i32_i64(local_tid_45298 +
                                                       offset_45320)];
                x_37395 = ((volatile __local
                            int32_t *) red_arr_mem_45316)[sext_i32_i64(local_tid_45298 +
                                                          offset_45320)];
                x_37396 = ((volatile __local
                            float *) red_arr_mem_45318)[sext_i32_i64(local_tid_45298 +
                                                        offset_45320)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_37397;
                int32_t defunc_1_op_res_37398;
                
                if (x_37391) {
                    defunc_1_op_res_37397 = x_37391;
                    defunc_1_op_res_37398 = x_37392;
                } else {
                    bool x_37399 = x_37394 && x_37394;
                    bool x_37400 = !x_37394;
                    bool y_37401 = x_37391 && x_37400;
                    bool defunc_1_op_res_f_res_37402 = x_37399 || y_37401;
                    int32_t defunc_1_op_res_f_res_37403;
                    
                    if (x_37394) {
                        defunc_1_op_res_f_res_37403 = x_37395;
                    } else {
                        defunc_1_op_res_f_res_37403 = x_37392;
                    }
                    defunc_1_op_res_37397 = defunc_1_op_res_f_res_37402;
                    defunc_1_op_res_37398 = defunc_1_op_res_f_res_37403;
                }
                
                float defunc_1_op_res_37404 = x_37393 + x_37396;
                
                x_37391 = defunc_1_op_res_37397;
                x_37392 = defunc_1_op_res_37398;
                x_37393 = defunc_1_op_res_37404;
            }
            // write result of operation
            {
                ((volatile __local
                  bool *) red_arr_mem_45314)[sext_i32_i64(local_tid_45298)] =
                    x_37391;
                ((volatile __local
                  int32_t *) red_arr_mem_45316)[sext_i32_i64(local_tid_45298)] =
                    x_37392;
                ((volatile __local
                  float *) red_arr_mem_45318)[sext_i32_i64(local_tid_45298)] =
                    x_37393;
            }
        }
        offset_45320 *= 2;
    }
    while (slt32(skip_waves_45321, squot32(sext_i64_i32(iota32_arg_28873) +
                                           wave_sizze_45300 - 1,
                                           wave_sizze_45300))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45320 = skip_waves_45321 * wave_sizze_45300;
        if (slt32(local_tid_45298 + offset_45320,
                  sext_i64_i32(iota32_arg_28873)) && ((local_tid_45298 -
                                                       squot32(local_tid_45298,
                                                               wave_sizze_45300) *
                                                       wave_sizze_45300) == 0 &&
                                                      (squot32(local_tid_45298,
                                                               wave_sizze_45300) &
                                                       (2 * skip_waves_45321 -
                                                        1)) == 0)) {
            // read array element
            {
                x_37394 = ((__local
                            bool *) red_arr_mem_45314)[sext_i32_i64(local_tid_45298 +
                                                       offset_45320)];
                x_37395 = ((__local
                            int32_t *) red_arr_mem_45316)[sext_i32_i64(local_tid_45298 +
                                                          offset_45320)];
                x_37396 = ((__local
                            float *) red_arr_mem_45318)[sext_i32_i64(local_tid_45298 +
                                                        offset_45320)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_37397;
                int32_t defunc_1_op_res_37398;
                
                if (x_37391) {
                    defunc_1_op_res_37397 = x_37391;
                    defunc_1_op_res_37398 = x_37392;
                } else {
                    bool x_37399 = x_37394 && x_37394;
                    bool x_37400 = !x_37394;
                    bool y_37401 = x_37391 && x_37400;
                    bool defunc_1_op_res_f_res_37402 = x_37399 || y_37401;
                    int32_t defunc_1_op_res_f_res_37403;
                    
                    if (x_37394) {
                        defunc_1_op_res_f_res_37403 = x_37395;
                    } else {
                        defunc_1_op_res_f_res_37403 = x_37392;
                    }
                    defunc_1_op_res_37397 = defunc_1_op_res_f_res_37402;
                    defunc_1_op_res_37398 = defunc_1_op_res_f_res_37403;
                }
                
                float defunc_1_op_res_37404 = x_37393 + x_37396;
                
                x_37391 = defunc_1_op_res_37397;
                x_37392 = defunc_1_op_res_37398;
                x_37393 = defunc_1_op_res_37404;
            }
            // write result of operation
            {
                ((__local
                  bool *) red_arr_mem_45314)[sext_i32_i64(local_tid_45298)] =
                    x_37391;
                ((__local
                  int32_t *) red_arr_mem_45316)[sext_i32_i64(local_tid_45298)] =
                    x_37392;
                ((__local
                  float *) red_arr_mem_45318)[sext_i32_i64(local_tid_45298)] =
                    x_37393;
            }
        }
        skip_waves_45321 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    acc0_37388 = ((__local bool *) red_arr_mem_45314)[0];
    acc0_37389 = ((__local int32_t *) red_arr_mem_45316)[0];
    acc0_37390 = ((__local float *) red_arr_mem_45318)[0];
    
    bool x_37420 = acc0_37388 && acc0_37388;
    int32_t defunc_1_op_res_f_res_37424;
    
    if (acc0_37388) {
        defunc_1_op_res_f_res_37424 = acc0_37389;
    } else {
        defunc_1_op_res_f_res_37424 = -1;
    }
    
    bool cond_37430 = y_37355 == 0;
    float defunc_0_f_res_37431;
    
    if (cond_37430) {
        defunc_0_f_res_37431 = 0.0F;
    } else {
        float i32_res_37432 = sitofp_i32_f32(y_37355);
        float defunc_0_f_res_f_res_37433 = acc0_37390 / i32_res_37432;
        
        defunc_0_f_res_37431 = defunc_0_f_res_f_res_37433;
    }
    
    bool cond_37434 = !x_37420;
    int32_t fst_breakzq_37435;
    
    if (cond_37434) {
        fst_breakzq_37435 = -1;
    } else {
        bool cond_37436 = slt32(defunc_1_op_res_f_res_37424, y_37355);
        int32_t adjustValInds_res_37437;
        
        if (cond_37436) {
            int32_t i_37438 = add32(x_37349, defunc_1_op_res_f_res_37424);
            int64_t i_37439 = sext_i32_i64(i_37438);
            int32_t x_37440 = ((__global
                                int32_t *) defunc_4_map_res_mem_43920)[gtid_37122 *
                                                                       N_28473 +
                                                                       i_37439];
            int32_t adjustValInds_res_t_res_37441 = sub32(x_37440, n_28478);
            
            adjustValInds_res_37437 = adjustValInds_res_t_res_37441;
        } else {
            adjustValInds_res_37437 = -1;
        }
        fst_breakzq_37435 = adjustValInds_res_37437;
    }
    
    bool cond_37442 = sle32(x_37349, 5);
    bool cond_f_res_37443 = sle32(y_37355, 5);
    bool x_37444 = !cond_37442;
    bool y_37445 = cond_f_res_37443 && x_37444;
    bool cond_37446 = cond_37442 || y_37445;
    int32_t fst_breakzq_37447;
    
    if (cond_37446) {
        fst_breakzq_37447 = -2;
    } else {
        fst_breakzq_37447 = fst_breakzq_37435;
    }
    if (local_tid_45298 == 0) {
        ((__global int32_t *) mem_44070)[gtid_37122] = fst_breakzq_37447;
    }
    if (local_tid_45298 == 0) {
        ((__global float *) mem_44072)[gtid_37122] = defunc_0_f_res_37431;
    }
    
  error_3:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_41294(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43222_backing_aligned_0,
                                                     int64_t m_28474,
                                                     int32_t n_28478,
                                                     int64_t i32_res_28493,
                                                     int64_t Ty_41282,
                                                     int64_t Tx_41283,
                                                     int64_t gridDim_x_41284,
                                                     int64_t gridDim_y_41285,
                                                     int64_t group_sizze_41289,
                                                     int64_t count_shmem_41290,
                                                     __global
                                                     unsigned char *mem_43135,
                                                     __global
                                                     unsigned char *mem_43139,
                                                     __global
                                                     unsigned char *mem_43210,
                                                     __global
                                                     unsigned char *mem_43270)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43222_backing_0 = (__local volatile
                                                           char *) mem_43222_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44394;
    int32_t local_tid_44395;
    int64_t group_sizze_44398;
    int32_t wave_sizze_44397;
    int32_t group_tid_44396;
    
    global_tid_44394 = get_global_id(0);
    local_tid_44395 = get_local_id(0);
    group_sizze_44398 = get_local_size(0);
    wave_sizze_44397 = LOCKSTEP_WIDTH;
    group_tid_44396 = get_group_id(0);
    
    int32_t gid_flat_41294;
    
    gid_flat_41294 = group_tid_44396;
    
    int32_t ltid_pre_44399;
    
    ltid_pre_44399 = squot32(local_tid_44395, sext_i64_i32(Ty_41282) *
                             sext_i64_i32(Tx_41283));
    
    int32_t ltid_pre_44400;
    
    ltid_pre_44400 = squot32(local_tid_44395 - squot32(local_tid_44395,
                                                       sext_i64_i32(Ty_41282) *
                                                       sext_i64_i32(Tx_41283)) *
                             (sext_i64_i32(Ty_41282) * sext_i64_i32(Tx_41283)),
                             sext_i64_i32(Tx_41283));
    
    int32_t ltid_pre_44401;
    
    ltid_pre_44401 = local_tid_44395 - squot32(local_tid_44395,
                                               sext_i64_i32(Ty_41282) *
                                               sext_i64_i32(Tx_41283)) *
        (sext_i64_i32(Ty_41282) * sext_i64_i32(Tx_41283)) -
        squot32(local_tid_44395 - squot32(local_tid_44395,
                                          sext_i64_i32(Ty_41282) *
                                          sext_i64_i32(Tx_41283)) *
                (sext_i64_i32(Ty_41282) * sext_i64_i32(Tx_41283)),
                sext_i64_i32(Tx_41283)) * sext_i64_i32(Tx_41283);
    
    int32_t ltid_pre_44402;
    
    ltid_pre_44402 = squot32(local_tid_44395, sext_i64_i32(Tx_41283));
    
    int32_t ltid_pre_44403;
    
    ltid_pre_44403 = local_tid_44395 - squot32(local_tid_44395,
                                               sext_i64_i32(Tx_41283)) *
        sext_i64_i32(Tx_41283);
    
    int32_t ltid_pre_44404;
    
    ltid_pre_44404 = local_tid_44395;
    
    int64_t gid_zz_41293;
    
    gid_zz_41293 = squot64(sext_i32_i64(group_tid_44396), gridDim_y_41285 *
                           gridDim_x_41284);
    
    int64_t gid_y_41292;
    
    gid_y_41292 = squot64(sext_i32_i64(group_tid_44396) -
                          squot64(sext_i32_i64(group_tid_44396),
                                  gridDim_y_41285 * gridDim_x_41284) *
                          (gridDim_y_41285 * gridDim_x_41284), gridDim_x_41284);
    
    int64_t gid_x_41291;
    
    gid_x_41291 = sext_i32_i64(group_tid_44396) -
        squot64(sext_i32_i64(group_tid_44396), gridDim_y_41285 *
                gridDim_x_41284) * (gridDim_y_41285 * gridDim_x_41284) -
        squot64(sext_i32_i64(group_tid_44396) -
                squot64(sext_i32_i64(group_tid_44396), gridDim_y_41285 *
                        gridDim_x_41284) * (gridDim_y_41285 * gridDim_x_41284),
                gridDim_x_41284) * gridDim_x_41284;
    
    int64_t ii_41295;
    
    ii_41295 = 30 * gid_zz_41293;
    
    int64_t jj1_41296 = Ty_41282 * gid_y_41292;
    int64_t jj2_41297 = Tx_41283 * gid_x_41291;
    float mem_43220[30];
    int64_t ltid_y_41300 = sext_i32_i64(ltid_pre_44402);
    int64_t ltid_x_41298 = sext_i32_i64(ltid_pre_44403);
    int32_t ltid_flat_41299 = local_tid_44395;
    float mem_43214[30];
    
    for (int32_t i_43033 = 0; i_43033 < 30; i_43033++) {
        int64_t i_41308 = sext_i32_i64(i_43033);
        
        mem_43214[i_41308] = 0.0F;
    }
    for (int64_t i_44406 = 0; i_44406 < 30; i_44406++) {
        mem_43220[i_44406] = mem_43214[i_44406];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43222;
    
    mem_43222 = (__local char *) mem_43222_backing_0;
    
    float loop_mem_43252[30];
    float mem_param_43223[30];
    
    for (int32_t i_1 = 0; i_1 < 30; i_1++)
        mem_param_43223[i_1] = mem_43220[i_1];
    for (int32_t i_43035 = 0; i_43035 < n_28478; i_43035++) {
        int64_t i_41313 = sext_i32_i64(i_43035);
        
        for (int64_t i_41316 = 0; i_41316 < count_shmem_41290; i_41316++) {
            int64_t offs_41329 = group_sizze_41289 * i_41316;
            int64_t ltid_41319 = sext_i32_i64(ltid_pre_44404);
            int32_t ltid_flat_41318 = local_tid_44395;
            int64_t loc_ind_41330 = ltid_41319 + offs_41329;
            int64_t gtid_41331 = ii_41295 + loc_ind_41330;
            bool cond_41332 = slt64(gtid_41331, m_28474);
            float y_elem_41333;
            
            if (cond_41332) {
                float Y_elem_41335 = ((__global float *) mem_43210)[i_41313 *
                                                                    m_28474 +
                                                                    gtid_41331];
                
                y_elem_41333 = Y_elem_41335;
            } else {
                y_elem_41333 = 0.0F;
            }
            
            bool cond_41337 = slt64(loc_ind_41330, 30);
            int64_t y_loc_ind_41338;
            
            if (cond_41337) {
                y_loc_ind_41338 = loc_ind_41330;
            } else {
                y_loc_ind_41338 = -1;
            }
            if (sle64(0, y_loc_ind_41338) && slt64(y_loc_ind_41338, 30)) {
                ((__local float *) mem_43222)[y_loc_ind_41338] = y_elem_41333;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
        
        float mem_43251[30];
        int64_t ltid_y_41344 = sext_i32_i64(ltid_pre_44402);
        int64_t ltid_x_41342 = sext_i32_i64(ltid_pre_44403);
        int32_t ltid_flat_41343 = local_tid_44395;
        int64_t gtid_41371 = jj1_41296 + ltid_y_41344;
        int64_t gtid_41372 = jj2_41297 + ltid_x_41342;
        bool binop_x_41374 = slt64(gtid_41371, i32_res_28493);
        bool binop_y_41375 = slt64(gtid_41372, i32_res_28493);
        bool cond_41376 = binop_x_41374 && binop_y_41375;
        float mem_44124[30];
        
        if (cond_41376) {
            float x_41379 = ((__global float *) mem_43135)[i_41313 *
                                                           i32_res_28493 +
                                                           gtid_41371];
            float x_41381 = ((__global float *) mem_43139)[i_41313 *
                                                           i32_res_28493 +
                                                           gtid_41372];
            
            for (int32_t i_43034 = 0; i_43034 < 30; i_43034++) {
                int64_t i_41383 = sext_i32_i64(i_43034);
                int64_t gtid_41385 = ii_41295 + i_41383;
                bool cond_41386 = slt64(gtid_41385, m_28474);
                
                if (cond_41386) {
                    float inp_reg_var2zz_41388 = ((__local
                                                   float *) mem_43222)[i_41383];
                    float res_reg_var2zz_41389 = mem_param_43223[i_41383];
                    float x_41393 = x_41379 * x_41381;
                    bool isnan_res_41394;
                    
                    isnan_res_41394 = futrts_isnan32(inp_reg_var2zz_41388);
                    
                    float y_41395;
                    
                    if (isnan_res_41394) {
                        y_41395 = 0.0F;
                    } else {
                        y_41395 = 1.0F;
                    }
                    
                    float defunc_2_f_res_41396 = x_41393 * y_41395;
                    float defunc_1_op_res_41400 = res_reg_var2zz_41389 +
                          defunc_2_f_res_41396;
                    
                    mem_param_43223[i_41383] = defunc_1_op_res_41400;
                }
            }
            for (int64_t i_44412 = 0; i_44412 < 30; i_44412++) {
                mem_44124[i_44412] = mem_param_43223[i_44412];
            }
        } else {
            for (int64_t i_44413 = 0; i_44413 < 30; i_44413++) {
                mem_44124[i_44413] = mem_param_43223[i_44413];
            }
        }
        for (int64_t i_44414 = 0; i_44414 < 30; i_44414++) {
            mem_43251[i_44414] = mem_44124[i_44414];
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44407[30];
        
        for (int32_t i_2 = 0; i_2 < 30; i_2++)
            mem_param_tmp_44407[i_2] = mem_43251[i_2];
        for (int32_t i_3 = 0; i_3 < 30; i_3++)
            mem_param_43223[i_3] = mem_param_tmp_44407[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 30; i_4++)
        loop_mem_43252[i_4] = mem_param_43223[i_4];
    
    float mem_43266[30 * 1 * 1];
    int64_t ltid_zz_41409 = sext_i32_i64(ltid_pre_44399);
    int64_t ltid_y_41408 = sext_i32_i64(ltid_pre_44400);
    int64_t ltid_x_41406 = sext_i32_i64(ltid_pre_44401);
    int32_t ltid_flat_41407 = local_tid_44395;
    float mem_43260[30 * 1 * 1];
    
    for (int32_t i_43037 = 0; i_43037 < 30; i_43037++) {
        int64_t i_41418 = sext_i32_i64(i_43037);
        
        for (int64_t i_44416 = 0; i_44416 < 1; i_44416++) {
            mem_43260[i_41418 + i_44416] = loop_mem_43252[i_41418 + i_44416];
        }
    }
    for (int64_t i_44417 = 0; i_44417 < 30; i_44417++) {
        for (int64_t i_44418 = 0; i_44418 < 1; i_44418++) {
            for (int64_t i_44419 = 0; i_44419 < 1; i_44419++) {
                mem_43266[i_44417 + i_44418 + i_44419] = mem_43260[i_44417 +
                                                                   i_44418 +
                                                                   i_44419];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t reg_tile_i_44420 = squot64(sext_i32_i64(local_tid_44395), Ty_41282 *
                                       Tx_41283);
    int64_t reg_tile_i_44421 = squot64(sext_i32_i64(local_tid_44395) -
                                       squot64(sext_i32_i64(local_tid_44395),
                                               Ty_41282 * Tx_41283) *
                                       (Ty_41282 * Tx_41283), Tx_41283);
    int64_t reg_tile_i_44422 = sext_i32_i64(local_tid_44395) -
            squot64(sext_i32_i64(local_tid_44395), Ty_41282 * Tx_41283) *
            (Ty_41282 * Tx_41283) - squot64(sext_i32_i64(local_tid_44395) -
                                            squot64(sext_i32_i64(local_tid_44395),
                                                    Ty_41282 * Tx_41283) *
                                            (Ty_41282 * Tx_41283), Tx_41283) *
            Tx_41283;
    int64_t tile_dim_start_44423 = 30 * (gid_zz_41293 + reg_tile_i_44420);
    int64_t tile_dim_start_44424 = Ty_41282 * gid_y_41292 + reg_tile_i_44421;
    int64_t tile_dim_start_44425 = Tx_41283 * gid_x_41291 + reg_tile_i_44422;
    
    for (int64_t nest_i_44426 = 0; nest_i_44426 < 30; nest_i_44426++) {
        for (int64_t nest_i_44427 = 0; nest_i_44427 < 1; nest_i_44427++) {
            for (int64_t nest_i_44428 = 0; nest_i_44428 < 1; nest_i_44428++) {
                if ((slt64(tile_dim_start_44423 + nest_i_44426, m_28474) &&
                     slt64(tile_dim_start_44424 + nest_i_44427,
                           i32_res_28493)) && slt64(tile_dim_start_44425 +
                                                    nest_i_44428,
                                                    i32_res_28493)) {
                    ((__global float *) mem_43270)[(tile_dim_start_44423 +
                                                    nest_i_44426) *
                                                   (i32_res_28493 *
                                                    i32_res_28493) +
                                                   (tile_dim_start_44424 +
                                                    nest_i_44427) *
                                                   i32_res_28493 +
                                                   (tile_dim_start_44425 +
                                                    nest_i_44428)] =
                        mem_43266[nest_i_44426 + nest_i_44427 + nest_i_44428];
                }
            }
        }
    }
    
  error_4:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_41447(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43409_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43407_backing_aligned_1,
                                                     int64_t m_28474,
                                                     int64_t N_28475,
                                                     int64_t i32_res_28487,
                                                     int64_t i32_res_28493,
                                                     int64_t gridDim_x_41441,
                                                     int64_t full_tiles_41472,
                                                     int64_t kk_41679, __global
                                                     unsigned char *images_mem_43123,
                                                     __global
                                                     unsigned char *mem_43135,
                                                     __global
                                                     unsigned char *mem_43581)
{
    #define Ty_41428 (mainMagnitudeziTy_41425)
    #define Ry_41429 (mainMagnitudeziRy_41427)
    #define Tx_41430 (mainMagnitudeziTx_41424)
    #define Rx_41431 (mainMagnitudeziRx_41426)
    #define Tk_41432 (mainMagnitudeziTk_41423)
    #define tk_div_tx_41433 (sdiv_up64(mainMagnitudeziTk_41423, mainMagnitudeziTx_41424))
    #define tk_div_ty_41434 (sdiv_up64(mainMagnitudeziTk_41423, mainMagnitudeziTy_41425))
    #define TxRx_41435 (mainMagnitudeziTx_41424 * mainMagnitudeziRx_41426)
    #define TyRy_41436 (mainMagnitudeziTy_41425 * mainMagnitudeziRy_41427)
    #define a_loc_szz_41438 (mainMagnitudeziTk_41423 * (mainMagnitudeziTy_41425 * mainMagnitudeziRy_41427))
    #define b_loc_szz_41440 (mainMagnitudeziRx_41426 * (mainMagnitudeziTx_41424 * mainMagnitudeziTk_41423))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43409_backing_1 = (__local volatile
                                                           char *) mem_43409_backing_aligned_0;
    __local volatile char *restrict mem_43407_backing_0 = (__local volatile
                                                           char *) mem_43407_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44568;
    int32_t local_tid_44569;
    int64_t group_sizze_44572;
    int32_t wave_sizze_44571;
    int32_t group_tid_44570;
    
    global_tid_44568 = get_global_id(0);
    local_tid_44569 = get_local_id(0);
    group_sizze_44572 = get_local_size(0);
    wave_sizze_44571 = LOCKSTEP_WIDTH;
    group_tid_44570 = get_group_id(0);
    
    int32_t gid_flat_41447;
    
    gid_flat_41447 = group_tid_44570;
    
    int32_t ltid_pre_44573;
    
    ltid_pre_44573 = squot32(local_tid_44569, sext_i64_i32(Tx_41430));
    
    int32_t ltid_pre_44574;
    
    ltid_pre_44574 = local_tid_44569 - squot32(local_tid_44569,
                                               sext_i64_i32(Tx_41430)) *
        sext_i64_i32(Tx_41430);
    
    int64_t gid_y_41446;
    
    gid_y_41446 = squot64(sext_i32_i64(group_tid_44570), gridDim_x_41441);
    
    int64_t gid_x_41445;
    
    gid_x_41445 = sext_i32_i64(group_tid_44570) -
        squot64(sext_i32_i64(group_tid_44570), gridDim_x_41441) *
        gridDim_x_41441;
    
    int64_t iii_41448;
    
    iii_41448 = TyRy_41436 * gid_y_41446;
    
    int64_t jjj_41449 = TxRx_41435 * gid_x_41445;
    float mem_43405[Ry_41429 * Rx_41431];
    int64_t ltid_y_41452 = sext_i32_i64(ltid_pre_44573);
    int64_t ltid_x_41450 = sext_i32_i64(ltid_pre_44574);
    int32_t ltid_flat_41451 = local_tid_44569;
    float mem_43396[Ry_41429 * Rx_41431];
    
    for (int64_t i_41463 = 0; i_41463 < Ry_41429; i_41463++) {
        for (int64_t i_41466 = 0; i_41466 < Rx_41431; i_41466++) {
            mem_43396[i_41463 * Rx_41431 + i_41466] = 0.0F;
        }
    }
    for (int64_t i_44577 = 0; i_44577 < Ry_41429; i_44577++) {
        for (int64_t i_44578 = 0; i_44578 < Rx_41431; i_44578++) {
            mem_43405[i_44577 * Rx_41431 + i_44578] = mem_43396[i_44577 *
                                                                Rx_41431 +
                                                                i_44578];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43407;
    
    mem_43407 = (__local char *) mem_43407_backing_0;
    
    __local char *mem_43409;
    
    mem_43409 = (__local char *) mem_43409_backing_1;
    
    float mem_43480[Ry_41429];
    float mem_43484[Rx_41431];
    float loop_mem_43496[Ry_41429 * Rx_41431];
    float mem_param_43410[Ry_41429 * Rx_41431];
    
    for (int32_t i_2 = 0; i_2 < Ry_41429 * Rx_41431; i_2++)
        mem_param_43410[i_2] = mem_43405[i_2];
    for (int64_t i_41473 = 0; i_41473 < full_tiles_41472; i_41473++) {
        int64_t kk_41477 = Tk_41432 * i_41473;
        
        for (int64_t i_41478 = 0; i_41478 < Ry_41429; i_41478++) {
            int64_t binop_y_41501 = Ty_41428 * i_41478;
            
            for (int64_t i_41480 = 0; i_41480 < tk_div_tx_41433; i_41480++) {
                int64_t binop_y_41499 = Tx_41430 * i_41480;
                int64_t ltid_x_41482 = sext_i32_i64(ltid_pre_44573);
                int64_t ltid_y_41483 = sext_i32_i64(ltid_pre_44574);
                int32_t ltid_flat_41484 = local_tid_44569;
                int64_t k_41500 = ltid_y_41483 + binop_y_41499;
                int64_t i_41502 = ltid_x_41482 + binop_y_41501;
                int64_t gtid_41503 = iii_41448 + i_41502;
                int64_t A_col_idx_41504 = kk_41477 + k_41500;
                bool cond_41505 = slt64(gtid_41503, m_28474);
                float A_elem_41506;
                
                if (cond_41505) {
                    float A_elem_41508 = ((__global
                                           float *) images_mem_43123)[gtid_41503 *
                                                                      N_28475 +
                                                                      A_col_idx_41504];
                    
                    A_elem_41506 = A_elem_41508;
                } else {
                    A_elem_41506 = 0.0F;
                }
                
                bool cond_41510 = slt64(k_41500, Tk_41432);
                int64_t a_loc_ind_41511;
                
                if (cond_41510) {
                    int64_t binop_y_41512 = Tk_41432 * i_41502;
                    int64_t loc_fi_41513 = k_41500 + binop_y_41512;
                    
                    a_loc_ind_41511 = loc_fi_41513;
                } else {
                    a_loc_ind_41511 = -1;
                }
                if (sle64(0, a_loc_ind_41511) && slt64(a_loc_ind_41511,
                                                       a_loc_szz_41438)) {
                    ((__local float *) mem_43407)[a_loc_ind_41511] =
                        A_elem_41506;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_41518 = 0; i_41518 < tk_div_ty_41434; i_41518++) {
            int64_t binop_y_41539 = Ty_41428 * i_41518;
            
            for (int64_t i_41520 = 0; i_41520 < Rx_41431; i_41520++) {
                int64_t binop_y_41541 = Tx_41430 * i_41520;
                int64_t ltid_x_41522 = sext_i32_i64(ltid_pre_44573);
                int64_t ltid_y_41523 = sext_i32_i64(ltid_pre_44574);
                int32_t ltid_flat_41524 = local_tid_44569;
                int64_t k_41540 = ltid_x_41522 + binop_y_41539;
                int64_t j_41542 = ltid_y_41523 + binop_y_41541;
                int64_t gtid_41543 = jjj_41449 + j_41542;
                int64_t B_row_idx_41544 = kk_41477 + k_41540;
                bool cond_41545 = slt64(gtid_41543, i32_res_28493);
                float B_elem_41546;
                
                if (cond_41545) {
                    float B_elem_41548 = ((__global
                                           float *) mem_43135)[B_row_idx_41544 *
                                                               i32_res_28493 +
                                                               gtid_41543];
                    
                    B_elem_41546 = B_elem_41548;
                } else {
                    B_elem_41546 = 0.0F;
                }
                
                bool cond_41550 = slt64(k_41540, Tk_41432);
                int64_t b_loc_ind_41551;
                
                if (cond_41550) {
                    int64_t binop_y_41552 = TxRx_41435 * k_41540;
                    int64_t loc_fi_41553 = j_41542 + binop_y_41552;
                    
                    b_loc_ind_41551 = loc_fi_41553;
                } else {
                    b_loc_ind_41551 = -1;
                }
                if (sle64(0, b_loc_ind_41551) && slt64(b_loc_ind_41551,
                                                       b_loc_szz_41440)) {
                    ((__local float *) mem_43409)[b_loc_ind_41551] =
                        B_elem_41546;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_43495[Ry_41429 * Rx_41431];
        float mem_param_43467[Ry_41429 * Rx_41431];
        
        for (int32_t i_3 = 0; i_3 < Ry_41429 * Rx_41431; i_3++)
            mem_param_43467[i_3] = mem_param_43410[i_3];
        for (int64_t i_41558 = 0; i_41558 < Tk_41432; i_41558++) {
            int64_t binop_y_41597 = TxRx_41435 * i_41558;
            int64_t ltid_y_41562 = sext_i32_i64(ltid_pre_44573);
            int64_t ltid_x_41560 = sext_i32_i64(ltid_pre_44574);
            int32_t ltid_flat_41561 = local_tid_44569;
            float mem_43470[Ry_41429];
            float mem_43472[Rx_41431];
            int64_t binop_x_41588 = Ry_41429 * ltid_y_41562;
            
            for (int64_t i_41586 = 0; i_41586 < Ry_41429; i_41586++) {
                int64_t binop_x_41589 = i_41586 + binop_x_41588;
                int64_t binop_y_41590 = Tk_41432 * binop_x_41589;
                int64_t a_loc_ind_41591 = i_41558 + binop_y_41590;
                
                for (int64_t i_44590 = 0; i_44590 < 1; i_44590++) {
                    mem_43470[i_41586 + i_44590] = ((__local
                                                     float *) mem_43407)[a_loc_ind_41591 +
                                                                         i_44590];
                }
            }
            
            int64_t binop_y_41599 = Rx_41431 * ltid_x_41560;
            
            for (int64_t i_41595 = 0; i_41595 < Rx_41431; i_41595++) {
                int64_t binop_x_41598 = i_41595 + binop_y_41597;
                int64_t b_loc_ind_41600 = binop_x_41598 + binop_y_41599;
                
                for (int64_t i_44592 = 0; i_44592 < 1; i_44592++) {
                    mem_43472[i_41595 + i_44592] = ((__local
                                                     float *) mem_43409)[b_loc_ind_41600 +
                                                                         i_44592];
                }
            }
            for (int64_t i_44593 = 0; i_44593 < Ry_41429; i_44593++) {
                mem_43480[i_44593] = mem_43470[i_44593];
            }
            for (int64_t i_44594 = 0; i_44594 < Rx_41431; i_44594++) {
                mem_43484[i_44594] = mem_43472[i_44594];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_43494[Ry_41429 * Rx_41431];
            int64_t ltid_y_41607 = sext_i32_i64(ltid_pre_44573);
            int64_t ltid_x_41605 = sext_i32_i64(ltid_pre_44574);
            int32_t ltid_flat_41606 = local_tid_44569;
            int64_t binop_y_41650 = Ry_41429 * ltid_y_41607;
            int64_t binop_y_41654 = Rx_41431 * ltid_x_41605;
            
            for (int64_t i_41644 = 0; i_41644 < Ry_41429; i_41644++) {
                int64_t binop_x_41649 = iii_41448 + i_41644;
                int64_t cmpop_x_41651 = binop_x_41649 + binop_y_41650;
                bool binop_x_41652 = slt64(cmpop_x_41651, m_28474);
                
                for (int64_t i_41647 = 0; i_41647 < Rx_41431; i_41647++) {
                    int64_t binop_x_41653 = jjj_41449 + i_41647;
                    int64_t cmpop_x_41655 = binop_x_41653 + binop_y_41654;
                    bool binop_y_41656 = slt64(cmpop_x_41655, i32_res_28493);
                    bool cond_41657 = binop_x_41652 && binop_y_41656;
                    
                    if (cond_41657) {
                        float a_41659 = mem_43480[i_41644];
                        float c_41661 = mem_param_43467[i_41644 * Rx_41431 +
                                                        i_41647];
                        bool isnan_res_41664;
                        
                        isnan_res_41664 = futrts_isnan32(a_41659);
                        
                        float defunc_1_f_res_41665;
                        
                        if (isnan_res_41664) {
                            defunc_1_f_res_41665 = 0.0F;
                        } else {
                            float b_41660 = mem_43484[i_41647];
                            float defunc_1_f_res_f_res_41666 = a_41659 *
                                  b_41660;
                            
                            defunc_1_f_res_41665 = defunc_1_f_res_f_res_41666;
                        }
                        
                        float defunc_1_op_res_41670 = c_41661 +
                              defunc_1_f_res_41665;
                        
                        mem_param_43467[i_41644 * Rx_41431 + i_41647] =
                            defunc_1_op_res_41670;
                    }
                }
            }
            for (int64_t i_44597 = 0; i_44597 < Ry_41429; i_44597++) {
                for (int64_t i_44598 = 0; i_44598 < Rx_41431; i_44598++) {
                    mem_43494[i_44597 * Rx_41431 + i_44598] =
                        mem_param_43467[i_44597 * Rx_41431 + i_44598];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44587[Ry_41429 * Rx_41431];
            
            for (int32_t i_4 = 0; i_4 < Ry_41429 * Rx_41431; i_4++)
                mem_param_tmp_44587[i_4] = mem_43494[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_41429 * Rx_41431; i_5++)
                mem_param_43467[i_5] = mem_param_tmp_44587[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_41429 * Rx_41431; i_6++)
            loop_mem_43495[i_6] = mem_param_43467[i_6];
        
        float mem_param_tmp_44579[Ry_41429 * Rx_41431];
        
        for (int32_t i_7 = 0; i_7 < Ry_41429 * Rx_41431; i_7++)
            mem_param_tmp_44579[i_7] = loop_mem_43495[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_41429 * Rx_41431; i_8++)
            mem_param_43410[i_8] = mem_param_tmp_44579[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_41429 * Rx_41431; i_9++)
        loop_mem_43496[i_9] = mem_param_43410[i_9];
    for (int64_t i_41680 = 0; i_41680 < Ry_41429; i_41680++) {
        int64_t binop_y_41705 = Ty_41428 * i_41680;
        
        for (int64_t i_41682 = 0; i_41682 < tk_div_tx_41433; i_41682++) {
            int64_t binop_y_41703 = Tx_41430 * i_41682;
            int64_t ltid_x_41684 = sext_i32_i64(ltid_pre_44573);
            int64_t ltid_y_41685 = sext_i32_i64(ltid_pre_44574);
            int32_t ltid_flat_41686 = local_tid_44569;
            int64_t k_41704 = ltid_y_41685 + binop_y_41703;
            int64_t i_41706 = ltid_x_41684 + binop_y_41705;
            int64_t gtid_41707 = iii_41448 + i_41706;
            int64_t A_col_idx_41708 = kk_41679 + k_41704;
            bool binop_x_41709 = slt64(gtid_41707, m_28474);
            bool binop_y_41710 = slt64(A_col_idx_41708, i32_res_28487);
            bool cond_41711 = binop_x_41709 && binop_y_41710;
            float A_elem_41712;
            
            if (cond_41711) {
                float A_elem_41714 = ((__global
                                       float *) images_mem_43123)[gtid_41707 *
                                                                  N_28475 +
                                                                  A_col_idx_41708];
                
                A_elem_41712 = A_elem_41714;
            } else {
                A_elem_41712 = 0.0F;
            }
            
            bool cond_41716 = slt64(k_41704, Tk_41432);
            int64_t a_loc_ind_41717;
            
            if (cond_41716) {
                int64_t binop_y_41718 = Tk_41432 * i_41706;
                int64_t loc_fi_41719 = k_41704 + binop_y_41718;
                
                a_loc_ind_41717 = loc_fi_41719;
            } else {
                a_loc_ind_41717 = -1;
            }
            if (sle64(0, a_loc_ind_41717) && slt64(a_loc_ind_41717,
                                                   a_loc_szz_41438)) {
                ((__local float *) mem_43407)[a_loc_ind_41717] = A_elem_41712;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_41724 = 0; i_41724 < tk_div_ty_41434; i_41724++) {
        int64_t binop_y_41747 = Ty_41428 * i_41724;
        
        for (int64_t i_41726 = 0; i_41726 < Rx_41431; i_41726++) {
            int64_t binop_y_41749 = Tx_41430 * i_41726;
            int64_t ltid_x_41728 = sext_i32_i64(ltid_pre_44573);
            int64_t ltid_y_41729 = sext_i32_i64(ltid_pre_44574);
            int32_t ltid_flat_41730 = local_tid_44569;
            int64_t k_41748 = ltid_x_41728 + binop_y_41747;
            int64_t j_41750 = ltid_y_41729 + binop_y_41749;
            int64_t gtid_41751 = jjj_41449 + j_41750;
            int64_t B_row_idx_41752 = kk_41679 + k_41748;
            bool binop_x_41753 = slt64(gtid_41751, i32_res_28493);
            bool binop_y_41754 = slt64(B_row_idx_41752, i32_res_28487);
            bool cond_41755 = binop_x_41753 && binop_y_41754;
            float B_elem_41756;
            
            if (cond_41755) {
                float B_elem_41758 = ((__global
                                       float *) mem_43135)[B_row_idx_41752 *
                                                           i32_res_28493 +
                                                           gtid_41751];
                
                B_elem_41756 = B_elem_41758;
            } else {
                B_elem_41756 = 0.0F;
            }
            
            bool cond_41760 = slt64(k_41748, Tk_41432);
            int64_t b_loc_ind_41761;
            
            if (cond_41760) {
                int64_t binop_y_41762 = TxRx_41435 * k_41748;
                int64_t loc_fi_41763 = j_41750 + binop_y_41762;
                
                b_loc_ind_41761 = loc_fi_41763;
            } else {
                b_loc_ind_41761 = -1;
            }
            if (sle64(0, b_loc_ind_41761) && slt64(b_loc_ind_41761,
                                                   b_loc_szz_41440)) {
                ((__local float *) mem_43409)[b_loc_ind_41761] = B_elem_41756;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_43562[Ry_41429];
    float mem_43566[Rx_41431];
    float mem_43576[Ry_41429 * Rx_41431];
    float loop_mem_43578[Ry_41429 * Rx_41431];
    float mem_param_43549[Ry_41429 * Rx_41431];
    
    for (int32_t i_10 = 0; i_10 < Ry_41429 * Rx_41431; i_10++)
        mem_param_43549[i_10] = loop_mem_43496[i_10];
    for (int64_t i_41768 = 0; i_41768 < Tk_41432; i_41768++) {
        int64_t cmpop_x_41770 = kk_41679 + i_41768;
        bool cond_41771 = slt64(cmpop_x_41770, i32_res_28487);
        float mem_44142[Ry_41429 * Rx_41431];
        
        if (cond_41771) {
            int64_t binop_y_41809 = TxRx_41435 * i_41768;
            int64_t bytes_43551 = 4 * Ry_41429;
            int64_t bytes_43553 = 4 * Rx_41431;
            int64_t ltid_y_41774 = sext_i32_i64(ltid_pre_44573);
            int64_t ltid_x_41772 = sext_i32_i64(ltid_pre_44574);
            int32_t ltid_flat_41773 = local_tid_44569;
            float mem_43552[Ry_41429];
            float mem_43554[Rx_41431];
            int64_t binop_x_41800 = Ry_41429 * ltid_y_41774;
            
            for (int64_t i_41798 = 0; i_41798 < Ry_41429; i_41798++) {
                int64_t binop_x_41801 = i_41798 + binop_x_41800;
                int64_t binop_y_41802 = Tk_41432 * binop_x_41801;
                int64_t a_loc_ind_41803 = i_41768 + binop_y_41802;
                
                for (int64_t i_44606 = 0; i_44606 < 1; i_44606++) {
                    mem_43552[i_41798 + i_44606] = ((__local
                                                     float *) mem_43407)[a_loc_ind_41803 +
                                                                         i_44606];
                }
            }
            
            int64_t binop_y_41811 = Rx_41431 * ltid_x_41772;
            
            for (int64_t i_41807 = 0; i_41807 < Rx_41431; i_41807++) {
                int64_t binop_x_41810 = i_41807 + binop_y_41809;
                int64_t b_loc_ind_41812 = binop_x_41810 + binop_y_41811;
                
                for (int64_t i_44608 = 0; i_44608 < 1; i_44608++) {
                    mem_43554[i_41807 + i_44608] = ((__local
                                                     float *) mem_43409)[b_loc_ind_41812 +
                                                                         i_44608];
                }
            }
            for (int64_t i_44609 = 0; i_44609 < Ry_41429; i_44609++) {
                mem_43562[i_44609] = mem_43552[i_44609];
            }
            for (int64_t i_44610 = 0; i_44610 < Rx_41431; i_44610++) {
                mem_43566[i_44610] = mem_43554[i_44610];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_41819 = sext_i32_i64(ltid_pre_44573);
            int64_t ltid_x_41817 = sext_i32_i64(ltid_pre_44574);
            int32_t ltid_flat_41818 = local_tid_44569;
            int64_t binop_y_41862 = Ry_41429 * ltid_y_41819;
            int64_t binop_y_41866 = Rx_41431 * ltid_x_41817;
            
            for (int64_t i_41856 = 0; i_41856 < Ry_41429; i_41856++) {
                int64_t binop_x_41861 = iii_41448 + i_41856;
                int64_t cmpop_x_41863 = binop_x_41861 + binop_y_41862;
                bool binop_x_41864 = slt64(cmpop_x_41863, m_28474);
                
                for (int64_t i_41859 = 0; i_41859 < Rx_41431; i_41859++) {
                    int64_t binop_x_41865 = jjj_41449 + i_41859;
                    int64_t cmpop_x_41867 = binop_x_41865 + binop_y_41866;
                    bool binop_y_41868 = slt64(cmpop_x_41867, i32_res_28493);
                    bool cond_41869 = binop_x_41864 && binop_y_41868;
                    
                    if (cond_41869) {
                        float a_41871 = mem_43562[i_41856];
                        float c_41873 = mem_param_43549[i_41856 * Rx_41431 +
                                                        i_41859];
                        bool isnan_res_41876;
                        
                        isnan_res_41876 = futrts_isnan32(a_41871);
                        
                        float defunc_1_f_res_41877;
                        
                        if (isnan_res_41876) {
                            defunc_1_f_res_41877 = 0.0F;
                        } else {
                            float b_41872 = mem_43566[i_41859];
                            float defunc_1_f_res_f_res_41878 = a_41871 *
                                  b_41872;
                            
                            defunc_1_f_res_41877 = defunc_1_f_res_f_res_41878;
                        }
                        
                        float defunc_1_op_res_41882 = c_41873 +
                              defunc_1_f_res_41877;
                        
                        mem_param_43549[i_41856 * Rx_41431 + i_41859] =
                            defunc_1_op_res_41882;
                    }
                }
            }
            for (int64_t i_44613 = 0; i_44613 < Ry_41429; i_44613++) {
                for (int64_t i_44614 = 0; i_44614 < Rx_41431; i_44614++) {
                    mem_43576[i_44613 * Rx_41431 + i_44614] =
                        mem_param_43549[i_44613 * Rx_41431 + i_44614];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44615 = 0; i_44615 < Ry_41429; i_44615++) {
                for (int64_t i_44616 = 0; i_44616 < Rx_41431; i_44616++) {
                    mem_44142[i_44615 * Rx_41431 + i_44616] =
                        mem_43576[i_44615 * Rx_41431 + i_44616];
                }
            }
        } else {
            for (int64_t i_44617 = 0; i_44617 < Ry_41429; i_44617++) {
                for (int64_t i_44618 = 0; i_44618 < Rx_41431; i_44618++) {
                    mem_44142[i_44617 * Rx_41431 + i_44618] =
                        mem_param_43549[i_44617 * Rx_41431 + i_44618];
                }
            }
        }
        
        float mem_param_tmp_44603[Ry_41429 * Rx_41431];
        
        for (int32_t i_11 = 0; i_11 < Ry_41429 * Rx_41431; i_11++)
            mem_param_tmp_44603[i_11] = mem_44142[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_41429 * Rx_41431; i_12++)
            mem_param_43549[i_12] = mem_param_tmp_44603[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_41429 * Rx_41431; i_13++)
        loop_mem_43578[i_13] = mem_param_43549[i_13];
    
    int64_t reg_tile_i_44619 = squot64(sext_i32_i64(local_tid_44569), Tx_41430);
    int64_t reg_tile_i_44620 = sext_i32_i64(local_tid_44569) -
            squot64(sext_i32_i64(local_tid_44569), Tx_41430) * Tx_41430;
    int64_t tile_dim_start_44621 = Ry_41429 * (Ty_41428 * gid_y_41446 +
                                               reg_tile_i_44619);
    int64_t tile_dim_start_44622 = Rx_41431 * (Tx_41430 * gid_x_41445 +
                                               reg_tile_i_44620);
    
    for (int64_t nest_i_44623 = 0; nest_i_44623 < Ry_41429; nest_i_44623++) {
        for (int64_t nest_i_44624 = 0; nest_i_44624 < Rx_41431;
             nest_i_44624++) {
            if (slt64(tile_dim_start_44621 + nest_i_44623, m_28474) &&
                slt64(tile_dim_start_44622 + nest_i_44624, i32_res_28493)) {
                ((__global float *) mem_43581)[(tile_dim_start_44621 +
                                                nest_i_44623) * i32_res_28493 +
                                               (tile_dim_start_44622 +
                                                nest_i_44624)] =
                    loop_mem_43578[nest_i_44623 * Rx_41431 + nest_i_44624];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_41428
    #undef Ry_41429
    #undef Tx_41430
    #undef Rx_41431
    #undef Tk_41432
    #undef tk_div_tx_41433
    #undef tk_div_ty_41434
    #undef TxRx_41435
    #undef TyRy_41436
    #undef a_loc_szz_41438
    #undef b_loc_szz_41440
}
__kernel void mainMagnitudezisegmap_intragroup_41896(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43639_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43630_backing_aligned_1,
                                                     int64_t m_28474,
                                                     int64_t i32_res_28493,
                                                     int64_t num_groups_y_41894,
                                                     int64_t num_whole_tiles_41912,
                                                     int64_t residual_input_42039,
                                                     unsigned char cond_42040,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43591,
                                                     __global
                                                     unsigned char *mem_43620,
                                                     __global
                                                     unsigned char *mem_43647)
{
    #define tile_sizze_41891 (mainMagnitudezitile_sizze_41890)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43639_backing_5 = (__local volatile
                                                           char *) mem_43639_backing_aligned_0;
    __local volatile char *restrict mem_43630_backing_0 = (__local volatile
                                                           char *) mem_43630_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44700;
    int32_t local_tid_44701;
    int64_t group_sizze_44704;
    int32_t wave_sizze_44703;
    int32_t group_tid_44702;
    
    global_tid_44700 = get_global_id(0);
    local_tid_44701 = get_local_id(0);
    group_sizze_44704 = get_local_size(0);
    wave_sizze_44703 = LOCKSTEP_WIDTH;
    group_tid_44702 = get_group_id(0);
    
    int32_t gid_flat_41896;
    
    gid_flat_41896 = group_tid_44702;
    
    int32_t ltid_pre_44705;
    
    ltid_pre_44705 = squot32(local_tid_44701, sext_i64_i32(tile_sizze_41891));
    
    int32_t ltid_pre_44706;
    
    ltid_pre_44706 = local_tid_44701 - squot32(local_tid_44701,
                                               sext_i64_i32(tile_sizze_41891)) *
        sext_i64_i32(tile_sizze_41891);
    
    int64_t gid_x_41888;
    
    gid_x_41888 = squot64(sext_i32_i64(group_tid_44702), num_groups_y_41894);
    
    int64_t gid_y_41889;
    
    gid_y_41889 = sext_i32_i64(group_tid_44702) -
        squot64(sext_i32_i64(group_tid_44702), num_groups_y_41894) *
        num_groups_y_41894;
    
    float mem_43625[1];
    int64_t ltid_x_41913 = sext_i32_i64(ltid_pre_44705);
    int64_t ltid_y_41914 = sext_i32_i64(ltid_pre_44706);
    int32_t ltid_flat_41915 = local_tid_44701;
    
    if (slt64(ltid_x_41913, tile_sizze_41891) && slt64(ltid_y_41914,
                                                       tile_sizze_41891)) {
        mem_43625[0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_41998 = gid_x_41888 * tile_sizze_41891;
    int64_t binop_x_42013 = gid_y_41889 * tile_sizze_41891;
    __local char *mem_43630;
    
    mem_43630 = (__local char *) mem_43630_backing_0;
    
    float accs_mem_43635[1];
    float mem_param_43626[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43626[i_1] = mem_43625[i_1];
    for (int64_t tile_id_41924 = 0; tile_id_41924 < num_whole_tiles_41912;
         tile_id_41924++) {
        int64_t binop_x_41996 = tile_sizze_41891 * tile_id_41924;
        int64_t ltid_x_41925 = sext_i32_i64(ltid_pre_44705);
        int64_t ltid_y_41926 = sext_i32_i64(ltid_pre_44706);
        int32_t ltid_flat_41927 = local_tid_44701;
        int64_t j_41997 = ltid_y_41926 + binop_x_41996;
        int64_t gtid_41999 = ltid_x_41925 + binop_x_41998;
        bool binop_x_42004 = slt64(j_41997, i32_res_28493);
        bool binop_y_42005 = slt64(gtid_41999, m_28474);
        bool cond_42006 = binop_x_42004 && binop_y_42005;
        float pre_42007;
        
        if (cond_42006) {
            float x_42008 = ((__global
                              float *) defunc_3_map_res_mem_43591)[gtid_41999 *
                                                                   i32_res_28493 +
                                                                   j_41997];
            
            pre_42007 = x_42008;
        } else {
            pre_42007 = 0.0F;
        }
        ((__local float *) mem_43630)[ltid_x_41925 * tile_sizze_41891 +
                                      ltid_y_41926] = pre_42007;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43634[1];
        int64_t ltid_x_41957 = sext_i32_i64(ltid_pre_44705);
        int64_t ltid_y_41958 = sext_i32_i64(ltid_pre_44706);
        int32_t ltid_flat_41959 = local_tid_44701;
        int64_t gtid_42012 = ltid_x_41957 + binop_x_41998;
        int64_t gtid_42014 = ltid_y_41958 + binop_x_42013;
        float acc_42017 = mem_param_43626[0];
        bool binop_x_42021 = slt64(gtid_42012, m_28474);
        bool binop_y_42022 = slt64(gtid_42014, i32_res_28493);
        bool cond_42023 = binop_x_42021 && binop_y_42022;
        float acc_42024;
        
        if (cond_42023) {
            float x_42025;
            float redout_43078 = acc_42017;
            
            for (int64_t i_43079 = 0; i_43079 < tile_sizze_41891; i_43079++) {
                float x_42029 = ((__local float *) mem_43630)[ltid_x_41957 *
                                                              tile_sizze_41891 +
                                                              i_43079];
                int64_t slice_43111 = binop_x_41996 + i_43079;
                float x_42030 = ((__global float *) mem_43620)[slice_43111 *
                                                               (i32_res_28493 *
                                                                m_28474) +
                                                               gtid_42012 *
                                                               i32_res_28493 +
                                                               gtid_42014];
                float defunc_1_f_res_42031 = x_42029 * x_42030;
                float defunc_1_op_res_42028 = defunc_1_f_res_42031 +
                      redout_43078;
                float redout_tmp_44709 = defunc_1_op_res_42028;
                
                redout_43078 = redout_tmp_44709;
            }
            x_42025 = redout_43078;
            acc_42024 = x_42025;
        } else {
            acc_42024 = acc_42017;
        }
        mem_43634[0] = acc_42024;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44707[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44707[i_2] = mem_43634[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43626[i_3] = mem_param_tmp_44707[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43635[i_4] = mem_param_43626[i_4];
    
    __local char *mem_43639;
    
    mem_43639 = (__local char *) mem_43639_backing_5;
    
    float mem_43643[1];
    float mem_44156[1];
    
    if (cond_42040) {
        mem_44156[0] = accs_mem_43635[0];
    } else {
        int64_t binop_x_42113 = tile_sizze_41891 * num_whole_tiles_41912;
        int64_t ltid_x_42041 = sext_i32_i64(ltid_pre_44705);
        int64_t ltid_y_42042 = sext_i32_i64(ltid_pre_44706);
        int32_t ltid_flat_42043 = local_tid_44701;
        int64_t j_42114 = ltid_y_42042 + binop_x_42113;
        int64_t gtid_42116 = binop_x_41998 + ltid_x_42041;
        bool binop_x_42121 = slt64(j_42114, i32_res_28493);
        bool binop_y_42122 = slt64(gtid_42116, m_28474);
        bool cond_42123 = binop_x_42121 && binop_y_42122;
        float pre_42124;
        
        if (cond_42123) {
            float x_42125 = ((__global
                              float *) defunc_3_map_res_mem_43591)[gtid_42116 *
                                                                   i32_res_28493 +
                                                                   j_42114];
            
            pre_42124 = x_42125;
        } else {
            pre_42124 = 0.0F;
        }
        ((__local float *) mem_43639)[ltid_x_42041 * tile_sizze_41891 +
                                      ltid_y_42042] = pre_42124;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_x_42074 = sext_i32_i64(ltid_pre_44705);
        int64_t ltid_y_42075 = sext_i32_i64(ltid_pre_44706);
        int32_t ltid_flat_42076 = local_tid_44701;
        int64_t gtid_42130 = binop_x_41998 + ltid_x_42074;
        int64_t gtid_42132 = binop_x_42013 + ltid_y_42075;
        float acc_42135 = accs_mem_43635[0];
        bool binop_x_42139 = slt64(gtid_42130, m_28474);
        bool binop_y_42140 = slt64(gtid_42132, i32_res_28493);
        bool cond_42141 = binop_x_42139 && binop_y_42140;
        float acc_42142;
        
        if (cond_42141) {
            float x_42143;
            float redout_43080 = acc_42135;
            
            for (int64_t i_43081 = 0; i_43081 < residual_input_42039;
                 i_43081++) {
                float x_42147 = ((__local float *) mem_43639)[ltid_x_42074 *
                                                              tile_sizze_41891 +
                                                              i_43081];
                int64_t slice_43112 = binop_x_42113 + i_43081;
                float x_42148 = ((__global float *) mem_43620)[slice_43112 *
                                                               (i32_res_28493 *
                                                                m_28474) +
                                                               gtid_42130 *
                                                               i32_res_28493 +
                                                               gtid_42132];
                float defunc_1_f_res_42149 = x_42147 * x_42148;
                float defunc_1_op_res_42146 = defunc_1_f_res_42149 +
                      redout_43080;
                float redout_tmp_44710 = defunc_1_op_res_42146;
                
                redout_43080 = redout_tmp_44710;
            }
            x_42143 = redout_43080;
            acc_42142 = x_42143;
        } else {
            acc_42142 = acc_42135;
        }
        mem_43643[0] = acc_42142;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44156[0] = mem_43643[0];
    }
    
    int64_t thread_out_index_44711 = gid_x_41888 * tile_sizze_41891 +
            sext_i32_i64(ltid_pre_44705);
    int64_t thread_out_index_44712 = gid_y_41889 * tile_sizze_41891 +
            sext_i32_i64(ltid_pre_44706);
    
    if (slt64(thread_out_index_44711, m_28474) && slt64(thread_out_index_44712,
                                                        i32_res_28493)) {
        ((__global float *) mem_43647)[thread_out_index_44711 * i32_res_28493 +
                                       thread_out_index_44712] = mem_44156[0];
    }
    
  error_5:
    return;
    #undef tile_sizze_41891
}
__kernel void mainMagnitudezisegmap_intragroup_42188(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43699_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43697_backing_aligned_1,
                                                     int64_t N_28473,
                                                     int64_t m_28474,
                                                     int64_t i32_res_28493,
                                                     int64_t gridDim_x_42182,
                                                     int64_t full_tiles_42213,
                                                     int64_t kk_42416, __global
                                                     unsigned char *defunc_4_map_res_mem_43657,
                                                     __global
                                                     unsigned char *mem_43681,
                                                     __global
                                                     unsigned char *mem_43871)
{
    #define Ty_42169 (mainMagnitudeziTy_42166)
    #define Ry_42170 (mainMagnitudeziRy_42168)
    #define Tx_42171 (mainMagnitudeziTx_42165)
    #define Rx_42172 (mainMagnitudeziRx_42167)
    #define Tk_42173 (mainMagnitudeziTk_42164)
    #define tk_div_tx_42174 (sdiv_up64(mainMagnitudeziTk_42164, mainMagnitudeziTx_42165))
    #define tk_div_ty_42175 (sdiv_up64(mainMagnitudeziTk_42164, mainMagnitudeziTy_42166))
    #define TxRx_42176 (mainMagnitudeziTx_42165 * mainMagnitudeziRx_42167)
    #define TyRy_42177 (mainMagnitudeziTy_42166 * mainMagnitudeziRy_42168)
    #define a_loc_szz_42179 (mainMagnitudeziTk_42164 * (mainMagnitudeziTy_42166 * mainMagnitudeziRy_42168))
    #define b_loc_szz_42181 (mainMagnitudeziRx_42167 * (mainMagnitudeziTx_42165 * mainMagnitudeziTk_42164))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43699_backing_1 = (__local volatile
                                                           char *) mem_43699_backing_aligned_0;
    __local volatile char *restrict mem_43697_backing_0 = (__local volatile
                                                           char *) mem_43697_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44788;
    int32_t local_tid_44789;
    int64_t group_sizze_44792;
    int32_t wave_sizze_44791;
    int32_t group_tid_44790;
    
    global_tid_44788 = get_global_id(0);
    local_tid_44789 = get_local_id(0);
    group_sizze_44792 = get_local_size(0);
    wave_sizze_44791 = LOCKSTEP_WIDTH;
    group_tid_44790 = get_group_id(0);
    
    int32_t gid_flat_42188;
    
    gid_flat_42188 = group_tid_44790;
    
    int32_t ltid_pre_44793;
    
    ltid_pre_44793 = squot32(local_tid_44789, sext_i64_i32(Tx_42171));
    
    int32_t ltid_pre_44794;
    
    ltid_pre_44794 = local_tid_44789 - squot32(local_tid_44789,
                                               sext_i64_i32(Tx_42171)) *
        sext_i64_i32(Tx_42171);
    
    int64_t gid_y_42187;
    
    gid_y_42187 = squot64(sext_i32_i64(group_tid_44790), gridDim_x_42182);
    
    int64_t gid_x_42186;
    
    gid_x_42186 = sext_i32_i64(group_tid_44790) -
        squot64(sext_i32_i64(group_tid_44790), gridDim_x_42182) *
        gridDim_x_42182;
    
    int64_t iii_42189;
    
    iii_42189 = TyRy_42177 * gid_y_42187;
    
    int64_t jjj_42190 = TxRx_42176 * gid_x_42186;
    float mem_43695[Ry_42170 * Rx_42172];
    int64_t ltid_y_42193 = sext_i32_i64(ltid_pre_44793);
    int64_t ltid_x_42191 = sext_i32_i64(ltid_pre_44794);
    int32_t ltid_flat_42192 = local_tid_44789;
    float mem_43686[Ry_42170 * Rx_42172];
    
    for (int64_t i_42204 = 0; i_42204 < Ry_42170; i_42204++) {
        for (int64_t i_42207 = 0; i_42207 < Rx_42172; i_42207++) {
            mem_43686[i_42204 * Rx_42172 + i_42207] = 0.0F;
        }
    }
    for (int64_t i_44797 = 0; i_44797 < Ry_42170; i_44797++) {
        for (int64_t i_44798 = 0; i_44798 < Rx_42172; i_44798++) {
            mem_43695[i_44797 * Rx_42172 + i_44798] = mem_43686[i_44797 *
                                                                Rx_42172 +
                                                                i_44798];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43697;
    
    mem_43697 = (__local char *) mem_43697_backing_0;
    
    __local char *mem_43699;
    
    mem_43699 = (__local char *) mem_43699_backing_1;
    
    float mem_43770[Ry_42170];
    float mem_43774[Rx_42172];
    float loop_mem_43786[Ry_42170 * Rx_42172];
    float mem_param_43700[Ry_42170 * Rx_42172];
    
    for (int32_t i_2 = 0; i_2 < Ry_42170 * Rx_42172; i_2++)
        mem_param_43700[i_2] = mem_43695[i_2];
    for (int64_t i_42214 = 0; i_42214 < full_tiles_42213; i_42214++) {
        int64_t kk_42218 = Tk_42173 * i_42214;
        
        for (int64_t i_42219 = 0; i_42219 < Ry_42170; i_42219++) {
            int64_t binop_y_42242 = Ty_42169 * i_42219;
            
            for (int64_t i_42221 = 0; i_42221 < tk_div_tx_42174; i_42221++) {
                int64_t binop_y_42240 = Tx_42171 * i_42221;
                int64_t ltid_x_42223 = sext_i32_i64(ltid_pre_44793);
                int64_t ltid_y_42224 = sext_i32_i64(ltid_pre_44794);
                int32_t ltid_flat_42225 = local_tid_44789;
                int64_t k_42241 = ltid_y_42224 + binop_y_42240;
                int64_t i_42243 = ltid_x_42223 + binop_y_42242;
                int64_t gtid_42244 = iii_42189 + i_42243;
                int64_t A_col_idx_42245 = kk_42218 + k_42241;
                bool cond_42246 = slt64(gtid_42244, m_28474);
                float A_elem_42247;
                
                if (cond_42246) {
                    float A_elem_42249 = ((__global
                                           float *) defunc_4_map_res_mem_43657)[gtid_42244 *
                                                                                i32_res_28493 +
                                                                                A_col_idx_42245];
                    
                    A_elem_42247 = A_elem_42249;
                } else {
                    A_elem_42247 = 0.0F;
                }
                
                bool cond_42251 = slt64(k_42241, Tk_42173);
                int64_t a_loc_ind_42252;
                
                if (cond_42251) {
                    int64_t binop_y_42253 = Tk_42173 * i_42243;
                    int64_t loc_fi_42254 = k_42241 + binop_y_42253;
                    
                    a_loc_ind_42252 = loc_fi_42254;
                } else {
                    a_loc_ind_42252 = -1;
                }
                if (sle64(0, a_loc_ind_42252) && slt64(a_loc_ind_42252,
                                                       a_loc_szz_42179)) {
                    ((__local float *) mem_43697)[a_loc_ind_42252] =
                        A_elem_42247;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_42259 = 0; i_42259 < tk_div_ty_42175; i_42259++) {
            int64_t binop_y_42280 = Ty_42169 * i_42259;
            
            for (int64_t i_42261 = 0; i_42261 < Rx_42172; i_42261++) {
                int64_t binop_y_42282 = Tx_42171 * i_42261;
                int64_t ltid_x_42263 = sext_i32_i64(ltid_pre_44793);
                int64_t ltid_y_42264 = sext_i32_i64(ltid_pre_44794);
                int32_t ltid_flat_42265 = local_tid_44789;
                int64_t k_42281 = ltid_x_42263 + binop_y_42280;
                int64_t j_42283 = ltid_y_42264 + binop_y_42282;
                int64_t gtid_42284 = jjj_42190 + j_42283;
                int64_t B_row_idx_42285 = kk_42218 + k_42281;
                bool cond_42286 = slt64(gtid_42284, N_28473);
                float B_elem_42287;
                
                if (cond_42286) {
                    float B_elem_42289 = ((__global
                                           float *) mem_43681)[B_row_idx_42285 *
                                                               N_28473 +
                                                               gtid_42284];
                    
                    B_elem_42287 = B_elem_42289;
                } else {
                    B_elem_42287 = 0.0F;
                }
                
                bool cond_42291 = slt64(k_42281, Tk_42173);
                int64_t b_loc_ind_42292;
                
                if (cond_42291) {
                    int64_t binop_y_42293 = TxRx_42176 * k_42281;
                    int64_t loc_fi_42294 = j_42283 + binop_y_42293;
                    
                    b_loc_ind_42292 = loc_fi_42294;
                } else {
                    b_loc_ind_42292 = -1;
                }
                if (sle64(0, b_loc_ind_42292) && slt64(b_loc_ind_42292,
                                                       b_loc_szz_42181)) {
                    ((__local float *) mem_43699)[b_loc_ind_42292] =
                        B_elem_42287;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_43785[Ry_42170 * Rx_42172];
        float mem_param_43757[Ry_42170 * Rx_42172];
        
        for (int32_t i_3 = 0; i_3 < Ry_42170 * Rx_42172; i_3++)
            mem_param_43757[i_3] = mem_param_43700[i_3];
        for (int64_t i_42299 = 0; i_42299 < Tk_42173; i_42299++) {
            int64_t binop_y_42338 = TxRx_42176 * i_42299;
            int64_t ltid_y_42303 = sext_i32_i64(ltid_pre_44793);
            int64_t ltid_x_42301 = sext_i32_i64(ltid_pre_44794);
            int32_t ltid_flat_42302 = local_tid_44789;
            float mem_43760[Ry_42170];
            float mem_43762[Rx_42172];
            int64_t binop_x_42329 = Ry_42170 * ltid_y_42303;
            
            for (int64_t i_42327 = 0; i_42327 < Ry_42170; i_42327++) {
                int64_t binop_x_42330 = i_42327 + binop_x_42329;
                int64_t binop_y_42331 = Tk_42173 * binop_x_42330;
                int64_t a_loc_ind_42332 = i_42299 + binop_y_42331;
                
                for (int64_t i_44810 = 0; i_44810 < 1; i_44810++) {
                    mem_43760[i_42327 + i_44810] = ((__local
                                                     float *) mem_43697)[a_loc_ind_42332 +
                                                                         i_44810];
                }
            }
            
            int64_t binop_y_42340 = Rx_42172 * ltid_x_42301;
            
            for (int64_t i_42336 = 0; i_42336 < Rx_42172; i_42336++) {
                int64_t binop_x_42339 = i_42336 + binop_y_42338;
                int64_t b_loc_ind_42341 = binop_x_42339 + binop_y_42340;
                
                for (int64_t i_44812 = 0; i_44812 < 1; i_44812++) {
                    mem_43762[i_42336 + i_44812] = ((__local
                                                     float *) mem_43699)[b_loc_ind_42341 +
                                                                         i_44812];
                }
            }
            for (int64_t i_44813 = 0; i_44813 < Ry_42170; i_44813++) {
                mem_43770[i_44813] = mem_43760[i_44813];
            }
            for (int64_t i_44814 = 0; i_44814 < Rx_42172; i_44814++) {
                mem_43774[i_44814] = mem_43762[i_44814];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_43784[Ry_42170 * Rx_42172];
            int64_t ltid_y_42348 = sext_i32_i64(ltid_pre_44793);
            int64_t ltid_x_42346 = sext_i32_i64(ltid_pre_44794);
            int32_t ltid_flat_42347 = local_tid_44789;
            int64_t binop_y_42389 = Ry_42170 * ltid_y_42348;
            int64_t binop_y_42393 = Rx_42172 * ltid_x_42346;
            
            for (int64_t i_42383 = 0; i_42383 < Ry_42170; i_42383++) {
                int64_t binop_x_42388 = iii_42189 + i_42383;
                int64_t cmpop_x_42390 = binop_x_42388 + binop_y_42389;
                bool binop_x_42391 = slt64(cmpop_x_42390, m_28474);
                
                for (int64_t i_42386 = 0; i_42386 < Rx_42172; i_42386++) {
                    int64_t binop_x_42392 = jjj_42190 + i_42386;
                    int64_t cmpop_x_42394 = binop_x_42392 + binop_y_42393;
                    bool binop_y_42395 = slt64(cmpop_x_42394, N_28473);
                    bool cond_42396 = binop_x_42391 && binop_y_42395;
                    
                    if (cond_42396) {
                        float a_42398 = mem_43770[i_42383];
                        float b_42399 = mem_43774[i_42386];
                        float c_42400 = mem_param_43757[i_42383 * Rx_42172 +
                                                        i_42386];
                        float defunc_1_f_res_42403 = a_42398 * b_42399;
                        float defunc_1_op_res_42407 = c_42400 +
                              defunc_1_f_res_42403;
                        
                        mem_param_43757[i_42383 * Rx_42172 + i_42386] =
                            defunc_1_op_res_42407;
                    }
                }
            }
            for (int64_t i_44817 = 0; i_44817 < Ry_42170; i_44817++) {
                for (int64_t i_44818 = 0; i_44818 < Rx_42172; i_44818++) {
                    mem_43784[i_44817 * Rx_42172 + i_44818] =
                        mem_param_43757[i_44817 * Rx_42172 + i_44818];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44807[Ry_42170 * Rx_42172];
            
            for (int32_t i_4 = 0; i_4 < Ry_42170 * Rx_42172; i_4++)
                mem_param_tmp_44807[i_4] = mem_43784[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_42170 * Rx_42172; i_5++)
                mem_param_43757[i_5] = mem_param_tmp_44807[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_42170 * Rx_42172; i_6++)
            loop_mem_43785[i_6] = mem_param_43757[i_6];
        
        float mem_param_tmp_44799[Ry_42170 * Rx_42172];
        
        for (int32_t i_7 = 0; i_7 < Ry_42170 * Rx_42172; i_7++)
            mem_param_tmp_44799[i_7] = loop_mem_43785[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_42170 * Rx_42172; i_8++)
            mem_param_43700[i_8] = mem_param_tmp_44799[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_42170 * Rx_42172; i_9++)
        loop_mem_43786[i_9] = mem_param_43700[i_9];
    for (int64_t i_42417 = 0; i_42417 < Ry_42170; i_42417++) {
        int64_t binop_y_42442 = Ty_42169 * i_42417;
        
        for (int64_t i_42419 = 0; i_42419 < tk_div_tx_42174; i_42419++) {
            int64_t binop_y_42440 = Tx_42171 * i_42419;
            int64_t ltid_x_42421 = sext_i32_i64(ltid_pre_44793);
            int64_t ltid_y_42422 = sext_i32_i64(ltid_pre_44794);
            int32_t ltid_flat_42423 = local_tid_44789;
            int64_t k_42441 = ltid_y_42422 + binop_y_42440;
            int64_t i_42443 = ltid_x_42421 + binop_y_42442;
            int64_t gtid_42444 = iii_42189 + i_42443;
            int64_t A_col_idx_42445 = kk_42416 + k_42441;
            bool binop_x_42446 = slt64(gtid_42444, m_28474);
            bool binop_y_42447 = slt64(A_col_idx_42445, i32_res_28493);
            bool cond_42448 = binop_x_42446 && binop_y_42447;
            float A_elem_42449;
            
            if (cond_42448) {
                float A_elem_42451 = ((__global
                                       float *) defunc_4_map_res_mem_43657)[gtid_42444 *
                                                                            i32_res_28493 +
                                                                            A_col_idx_42445];
                
                A_elem_42449 = A_elem_42451;
            } else {
                A_elem_42449 = 0.0F;
            }
            
            bool cond_42453 = slt64(k_42441, Tk_42173);
            int64_t a_loc_ind_42454;
            
            if (cond_42453) {
                int64_t binop_y_42455 = Tk_42173 * i_42443;
                int64_t loc_fi_42456 = k_42441 + binop_y_42455;
                
                a_loc_ind_42454 = loc_fi_42456;
            } else {
                a_loc_ind_42454 = -1;
            }
            if (sle64(0, a_loc_ind_42454) && slt64(a_loc_ind_42454,
                                                   a_loc_szz_42179)) {
                ((__local float *) mem_43697)[a_loc_ind_42454] = A_elem_42449;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_42461 = 0; i_42461 < tk_div_ty_42175; i_42461++) {
        int64_t binop_y_42484 = Ty_42169 * i_42461;
        
        for (int64_t i_42463 = 0; i_42463 < Rx_42172; i_42463++) {
            int64_t binop_y_42486 = Tx_42171 * i_42463;
            int64_t ltid_x_42465 = sext_i32_i64(ltid_pre_44793);
            int64_t ltid_y_42466 = sext_i32_i64(ltid_pre_44794);
            int32_t ltid_flat_42467 = local_tid_44789;
            int64_t k_42485 = ltid_x_42465 + binop_y_42484;
            int64_t j_42487 = ltid_y_42466 + binop_y_42486;
            int64_t gtid_42488 = jjj_42190 + j_42487;
            int64_t B_row_idx_42489 = kk_42416 + k_42485;
            bool binop_x_42490 = slt64(gtid_42488, N_28473);
            bool binop_y_42491 = slt64(B_row_idx_42489, i32_res_28493);
            bool cond_42492 = binop_x_42490 && binop_y_42491;
            float B_elem_42493;
            
            if (cond_42492) {
                float B_elem_42495 = ((__global
                                       float *) mem_43681)[B_row_idx_42489 *
                                                           N_28473 +
                                                           gtid_42488];
                
                B_elem_42493 = B_elem_42495;
            } else {
                B_elem_42493 = 0.0F;
            }
            
            bool cond_42497 = slt64(k_42485, Tk_42173);
            int64_t b_loc_ind_42498;
            
            if (cond_42497) {
                int64_t binop_y_42499 = TxRx_42176 * k_42485;
                int64_t loc_fi_42500 = j_42487 + binop_y_42499;
                
                b_loc_ind_42498 = loc_fi_42500;
            } else {
                b_loc_ind_42498 = -1;
            }
            if (sle64(0, b_loc_ind_42498) && slt64(b_loc_ind_42498,
                                                   b_loc_szz_42181)) {
                ((__local float *) mem_43699)[b_loc_ind_42498] = B_elem_42493;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_43852[Ry_42170];
    float mem_43856[Rx_42172];
    float mem_43866[Ry_42170 * Rx_42172];
    float loop_mem_43868[Ry_42170 * Rx_42172];
    float mem_param_43839[Ry_42170 * Rx_42172];
    
    for (int32_t i_10 = 0; i_10 < Ry_42170 * Rx_42172; i_10++)
        mem_param_43839[i_10] = loop_mem_43786[i_10];
    for (int64_t i_42505 = 0; i_42505 < Tk_42173; i_42505++) {
        int64_t cmpop_x_42507 = kk_42416 + i_42505;
        bool cond_42508 = slt64(cmpop_x_42507, i32_res_28493);
        float mem_44172[Ry_42170 * Rx_42172];
        
        if (cond_42508) {
            int64_t binop_y_42546 = TxRx_42176 * i_42505;
            int64_t bytes_43841 = 4 * Ry_42170;
            int64_t bytes_43843 = 4 * Rx_42172;
            int64_t ltid_y_42511 = sext_i32_i64(ltid_pre_44793);
            int64_t ltid_x_42509 = sext_i32_i64(ltid_pre_44794);
            int32_t ltid_flat_42510 = local_tid_44789;
            float mem_43842[Ry_42170];
            float mem_43844[Rx_42172];
            int64_t binop_x_42537 = Ry_42170 * ltid_y_42511;
            
            for (int64_t i_42535 = 0; i_42535 < Ry_42170; i_42535++) {
                int64_t binop_x_42538 = i_42535 + binop_x_42537;
                int64_t binop_y_42539 = Tk_42173 * binop_x_42538;
                int64_t a_loc_ind_42540 = i_42505 + binop_y_42539;
                
                for (int64_t i_44826 = 0; i_44826 < 1; i_44826++) {
                    mem_43842[i_42535 + i_44826] = ((__local
                                                     float *) mem_43697)[a_loc_ind_42540 +
                                                                         i_44826];
                }
            }
            
            int64_t binop_y_42548 = Rx_42172 * ltid_x_42509;
            
            for (int64_t i_42544 = 0; i_42544 < Rx_42172; i_42544++) {
                int64_t binop_x_42547 = i_42544 + binop_y_42546;
                int64_t b_loc_ind_42549 = binop_x_42547 + binop_y_42548;
                
                for (int64_t i_44828 = 0; i_44828 < 1; i_44828++) {
                    mem_43844[i_42544 + i_44828] = ((__local
                                                     float *) mem_43699)[b_loc_ind_42549 +
                                                                         i_44828];
                }
            }
            for (int64_t i_44829 = 0; i_44829 < Ry_42170; i_44829++) {
                mem_43852[i_44829] = mem_43842[i_44829];
            }
            for (int64_t i_44830 = 0; i_44830 < Rx_42172; i_44830++) {
                mem_43856[i_44830] = mem_43844[i_44830];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_42556 = sext_i32_i64(ltid_pre_44793);
            int64_t ltid_x_42554 = sext_i32_i64(ltid_pre_44794);
            int32_t ltid_flat_42555 = local_tid_44789;
            int64_t binop_y_42597 = Ry_42170 * ltid_y_42556;
            int64_t binop_y_42601 = Rx_42172 * ltid_x_42554;
            
            for (int64_t i_42591 = 0; i_42591 < Ry_42170; i_42591++) {
                int64_t binop_x_42596 = iii_42189 + i_42591;
                int64_t cmpop_x_42598 = binop_x_42596 + binop_y_42597;
                bool binop_x_42599 = slt64(cmpop_x_42598, m_28474);
                
                for (int64_t i_42594 = 0; i_42594 < Rx_42172; i_42594++) {
                    int64_t binop_x_42600 = jjj_42190 + i_42594;
                    int64_t cmpop_x_42602 = binop_x_42600 + binop_y_42601;
                    bool binop_y_42603 = slt64(cmpop_x_42602, N_28473);
                    bool cond_42604 = binop_x_42599 && binop_y_42603;
                    
                    if (cond_42604) {
                        float a_42606 = mem_43852[i_42591];
                        float b_42607 = mem_43856[i_42594];
                        float c_42608 = mem_param_43839[i_42591 * Rx_42172 +
                                                        i_42594];
                        float defunc_1_f_res_42611 = a_42606 * b_42607;
                        float defunc_1_op_res_42615 = c_42608 +
                              defunc_1_f_res_42611;
                        
                        mem_param_43839[i_42591 * Rx_42172 + i_42594] =
                            defunc_1_op_res_42615;
                    }
                }
            }
            for (int64_t i_44833 = 0; i_44833 < Ry_42170; i_44833++) {
                for (int64_t i_44834 = 0; i_44834 < Rx_42172; i_44834++) {
                    mem_43866[i_44833 * Rx_42172 + i_44834] =
                        mem_param_43839[i_44833 * Rx_42172 + i_44834];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44835 = 0; i_44835 < Ry_42170; i_44835++) {
                for (int64_t i_44836 = 0; i_44836 < Rx_42172; i_44836++) {
                    mem_44172[i_44835 * Rx_42172 + i_44836] =
                        mem_43866[i_44835 * Rx_42172 + i_44836];
                }
            }
        } else {
            for (int64_t i_44837 = 0; i_44837 < Ry_42170; i_44837++) {
                for (int64_t i_44838 = 0; i_44838 < Rx_42172; i_44838++) {
                    mem_44172[i_44837 * Rx_42172 + i_44838] =
                        mem_param_43839[i_44837 * Rx_42172 + i_44838];
                }
            }
        }
        
        float mem_param_tmp_44823[Ry_42170 * Rx_42172];
        
        for (int32_t i_11 = 0; i_11 < Ry_42170 * Rx_42172; i_11++)
            mem_param_tmp_44823[i_11] = mem_44172[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_42170 * Rx_42172; i_12++)
            mem_param_43839[i_12] = mem_param_tmp_44823[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_42170 * Rx_42172; i_13++)
        loop_mem_43868[i_13] = mem_param_43839[i_13];
    
    int64_t reg_tile_i_44839 = squot64(sext_i32_i64(local_tid_44789), Tx_42171);
    int64_t reg_tile_i_44840 = sext_i32_i64(local_tid_44789) -
            squot64(sext_i32_i64(local_tid_44789), Tx_42171) * Tx_42171;
    int64_t tile_dim_start_44841 = Ry_42170 * (Ty_42169 * gid_y_42187 +
                                               reg_tile_i_44839);
    int64_t tile_dim_start_44842 = Rx_42172 * (Tx_42171 * gid_x_42186 +
                                               reg_tile_i_44840);
    
    for (int64_t nest_i_44843 = 0; nest_i_44843 < Ry_42170; nest_i_44843++) {
        for (int64_t nest_i_44844 = 0; nest_i_44844 < Rx_42172;
             nest_i_44844++) {
            if (slt64(tile_dim_start_44841 + nest_i_44843, m_28474) &&
                slt64(tile_dim_start_44842 + nest_i_44844, N_28473)) {
                ((__global float *) mem_43871)[(tile_dim_start_44841 +
                                                nest_i_44843) * N_28473 +
                                               (tile_dim_start_44842 +
                                                nest_i_44844)] =
                    loop_mem_43868[nest_i_44843 * Rx_42172 + nest_i_44844];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_42169
    #undef Ry_42170
    #undef Tx_42171
    #undef Rx_42172
    #undef Tk_42173
    #undef tk_div_tx_42174
    #undef tk_div_ty_42175
    #undef TxRx_42176
    #undef TyRy_42177
    #undef a_loc_szz_42179
    #undef b_loc_szz_42181
}
__kernel void mainMagnitudezisegmap_intragroup_42622(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43941_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43934_backing_aligned_1,
                                                     int64_t m_28474,
                                                     int32_t n_28478,
                                                     float hfrac_28480,
                                                     int64_t i32_res_28487,
                                                     int32_t k2p2_28489,
                                                     int64_t num_whole_tiles_42630,
                                                     int64_t residual_input_42751,
                                                     unsigned char cond_42752,
                                                     __global
                                                     unsigned char *mem_43923,
                                                     __global
                                                     unsigned char *mem_43926,
                                                     __global
                                                     unsigned char *mem_43954,
                                                     __global
                                                     unsigned char *mem_43956,
                                                     __global
                                                     unsigned char *mem_43958)
{
    #define segmap_group_sizze_36186 (mainMagnitudezisegmap_group_sizze_36155)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43941_backing_5 = (__local volatile
                                                           char *) mem_43941_backing_aligned_0;
    __local volatile char *restrict mem_43934_backing_0 = (__local volatile
                                                           char *) mem_43934_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45012;
    int32_t local_tid_45013;
    int64_t group_sizze_45016;
    int32_t wave_sizze_45015;
    int32_t group_tid_45014;
    
    global_tid_45012 = get_global_id(0);
    local_tid_45013 = get_local_id(0);
    group_sizze_45016 = get_local_size(0);
    wave_sizze_45015 = LOCKSTEP_WIDTH;
    group_tid_45014 = get_group_id(0);
    
    int32_t gid_flat_42622;
    
    gid_flat_42622 = group_tid_45014;
    
    int32_t ltid_pre_45017;
    
    ltid_pre_45017 = local_tid_45013;
    
    int64_t gid_42621;
    
    gid_42621 = sext_i32_i64(group_tid_45014);
    
    float mem_43930[1];
    int64_t ltid_42631 = sext_i32_i64(ltid_pre_45017);
    int32_t ltid_flat_42632 = local_tid_45013;
    
    mem_43930[0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_42717 = segmap_group_sizze_36186 * gid_42621;
    __local char *mem_43934;
    
    mem_43934 = (__local char *) mem_43934_backing_0;
    
    float accs_mem_43938[1];
    float mem_param_43931[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43931[i_1] = mem_43930[i_1];
    for (int64_t tile_id_42638 = 0; tile_id_42638 < num_whole_tiles_42630;
         tile_id_42638++) {
        int64_t binop_x_42699 = segmap_group_sizze_36186 * tile_id_42638;
        int64_t ltid_42639 = sext_i32_i64(ltid_pre_45017);
        int32_t ltid_flat_42640 = local_tid_45013;
        int64_t j_42700 = ltid_42639 + binop_x_42699;
        bool cond_42712 = slt64(j_42700, i32_res_28487);
        int32_t pre_42713;
        
        if (cond_42712) {
            int32_t index_primexp_43046 = sext_i64_i32(j_42700);
            
            pre_42713 = index_primexp_43046;
        } else {
            pre_42713 = 0;
        }
        ((__local int32_t *) mem_43934)[ltid_42639] = pre_42713;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43937[1];
        int64_t ltid_42666 = sext_i32_i64(ltid_pre_45017);
        int32_t ltid_flat_42667 = local_tid_45013;
        int64_t gtid_42718 = ltid_42666 + binop_x_42717;
        int32_t defunc_0_f_res_42720;
        int32_t redout_43088 = 0;
        
        for (int32_t i_43114 = 0; i_43114 < n_28478; i_43114++) {
            int64_t i_43089 = sext_i32_i64(i_43114);
            float x_42724 = ((__global float *) mem_43923)[i_43089 * m_28474 +
                                                           gtid_42718];
            bool isnan_res_42725;
            
            isnan_res_42725 = futrts_isnan32(x_42724);
            
            bool cond_42726 = !isnan_res_42725;
            int32_t defunc_0_f_res_42727 = btoi_bool_i32(cond_42726);
            int32_t defunc_1_op_res_42723 = add32(defunc_0_f_res_42727,
                                                  redout_43088);
            int32_t redout_tmp_45020 = defunc_1_op_res_42723;
            
            redout_43088 = redout_tmp_45020;
        }
        defunc_0_f_res_42720 = redout_43088;
        
        float acc_42728 = mem_param_43931[0];
        bool cond_42729 = slt64(gtid_42718, m_28474);
        float acc_42730;
        
        if (cond_42729) {
            float x_42731;
            float redout_43090 = acc_42728;
            
            for (int64_t i_43091 = 0; i_43091 < segmap_group_sizze_36186;
                 i_43091++) {
                int32_t x_42735 = ((__local int32_t *) mem_43934)[i_43091];
                bool cond_42736 = slt32(x_42735, defunc_0_f_res_42720);
                float defunc_0_f_res_42737;
                
                if (cond_42736) {
                    int64_t i_42738 = sext_i32_i64(x_42735);
                    float defunc_0_f_res_t_res_42739 = ((__global
                                                         float *) mem_43926)[i_42738 *
                                                                             m_28474 +
                                                                             gtid_42718];
                    
                    defunc_0_f_res_42737 = defunc_0_f_res_t_res_42739;
                } else {
                    defunc_0_f_res_42737 = 0.0F;
                }
                
                float defunc_0_f_res_42740 = defunc_0_f_res_42737 *
                      defunc_0_f_res_42737;
                float defunc_1_op_res_42734 = defunc_0_f_res_42740 +
                      redout_43090;
                float redout_tmp_45021 = defunc_1_op_res_42734;
                
                redout_43090 = redout_tmp_45021;
            }
            x_42731 = redout_43090;
            acc_42730 = x_42731;
        } else {
            acc_42730 = acc_42728;
        }
        mem_43937[0] = acc_42730;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45018[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_45018[i_2] = mem_43937[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43931[i_3] = mem_param_tmp_45018[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43938[i_4] = mem_param_43931[i_4];
    
    __local char *mem_43941;
    
    mem_43941 = (__local char *) mem_43941_backing_5;
    
    float mem_43944[1];
    float mem_44185[1];
    
    if (cond_42752) {
        mem_44185[0] = accs_mem_43938[0];
    } else {
        int64_t binop_x_42762 = segmap_group_sizze_36186 *
                num_whole_tiles_42630;
        int64_t ltid_42753 = sext_i32_i64(ltid_pre_45017);
        int32_t ltid_flat_42754 = local_tid_45013;
        int64_t j_42763 = ltid_42753 + binop_x_42762;
        bool cond_42775 = slt64(j_42763, i32_res_28487);
        int32_t pre_42776;
        
        if (cond_42775) {
            int32_t index_primexp_43047 = sext_i64_i32(j_42763);
            
            pre_42776 = index_primexp_43047;
        } else {
            pre_42776 = 0;
        }
        ((__local int32_t *) mem_43941)[ltid_42753] = pre_42776;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_42781 = sext_i32_i64(ltid_pre_45017);
        int32_t ltid_flat_42782 = local_tid_45013;
        int64_t gtid_42789 = binop_x_42717 + ltid_42781;
        int32_t defunc_0_f_res_42791;
        int32_t redout_43092 = 0;
        
        for (int32_t i_43115 = 0; i_43115 < n_28478; i_43115++) {
            int64_t i_43093 = sext_i32_i64(i_43115);
            float x_42795 = ((__global float *) mem_43923)[i_43093 * m_28474 +
                                                           gtid_42789];
            bool isnan_res_42796;
            
            isnan_res_42796 = futrts_isnan32(x_42795);
            
            bool cond_42797 = !isnan_res_42796;
            int32_t defunc_0_f_res_42798 = btoi_bool_i32(cond_42797);
            int32_t defunc_1_op_res_42794 = add32(defunc_0_f_res_42798,
                                                  redout_43092);
            int32_t redout_tmp_45022 = defunc_1_op_res_42794;
            
            redout_43092 = redout_tmp_45022;
        }
        defunc_0_f_res_42791 = redout_43092;
        
        float acc_42799 = accs_mem_43938[0];
        bool cond_42800 = slt64(gtid_42789, m_28474);
        float acc_42801;
        
        if (cond_42800) {
            float x_42802;
            float redout_43094 = acc_42799;
            
            for (int64_t i_43095 = 0; i_43095 < residual_input_42751;
                 i_43095++) {
                int32_t x_42806 = ((__local int32_t *) mem_43941)[i_43095];
                bool cond_42807 = slt32(x_42806, defunc_0_f_res_42791);
                float defunc_0_f_res_42808;
                
                if (cond_42807) {
                    int64_t i_42809 = sext_i32_i64(x_42806);
                    float defunc_0_f_res_t_res_42810 = ((__global
                                                         float *) mem_43926)[i_42809 *
                                                                             m_28474 +
                                                                             gtid_42789];
                    
                    defunc_0_f_res_42808 = defunc_0_f_res_t_res_42810;
                } else {
                    defunc_0_f_res_42808 = 0.0F;
                }
                
                float defunc_0_f_res_42811 = defunc_0_f_res_42808 *
                      defunc_0_f_res_42808;
                float defunc_1_op_res_42805 = defunc_0_f_res_42811 +
                      redout_43094;
                float redout_tmp_45023 = defunc_1_op_res_42805;
                
                redout_43094 = redout_tmp_45023;
            }
            x_42802 = redout_43094;
            acc_42801 = x_42802;
        } else {
            acc_42801 = acc_42799;
        }
        mem_43944[0] = acc_42801;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44185[0] = mem_43944[0];
    }
    
    int32_t mem_43948[1];
    int32_t mem_43950[1];
    float mem_43952[1];
    int64_t ltid_42814 = sext_i32_i64(ltid_pre_45017);
    int32_t ltid_flat_42815 = local_tid_45013;
    int64_t gtid_42825 = binop_x_42717 + ltid_42814;
    bool cond_42827 = slt64(gtid_42825, m_28474);
    int32_t postlude_42828;
    int32_t postlude_42829;
    float postlude_42830;
    
    if (cond_42827) {
        float defunc_0_f_res_42826 = mem_44185[0];
        int32_t defunc_0_f_res_42832;
        int32_t redout_43096 = 0;
        
        for (int32_t i_43116 = 0; i_43116 < n_28478; i_43116++) {
            int64_t i_43097 = sext_i32_i64(i_43116);
            float x_42836 = ((__global float *) mem_43923)[i_43097 * m_28474 +
                                                           gtid_42825];
            bool isnan_res_42837;
            
            isnan_res_42837 = futrts_isnan32(x_42836);
            
            bool cond_42838 = !isnan_res_42837;
            int32_t defunc_0_f_res_42839 = btoi_bool_i32(cond_42838);
            int32_t defunc_1_op_res_42835 = add32(defunc_0_f_res_42839,
                                                  redout_43096);
            int32_t redout_tmp_45024 = defunc_1_op_res_42835;
            
            redout_43096 = redout_tmp_45024;
        }
        defunc_0_f_res_42832 = redout_43096;
        
        int32_t r32_arg_42840 = sub32(defunc_0_f_res_42832, k2p2_28489);
        float i32_res_42841 = sitofp_i32_f32(r32_arg_42840);
        float sqrt_arg_42842 = defunc_0_f_res_42826 / i32_res_42841;
        float sqrt_res_42843;
        
        sqrt_res_42843 = futrts_sqrt32(sqrt_arg_42842);
        
        float i32_res_42844 = sitofp_i32_f32(defunc_0_f_res_42832);
        float t32_arg_42845 = hfrac_28480 * i32_res_42844;
        int32_t f32_res_42846 = fptosi_f32_i32(t32_arg_42845);
        
        postlude_42828 = f32_res_42846;
        postlude_42829 = defunc_0_f_res_42832;
        postlude_42830 = sqrt_res_42843;
    } else {
        postlude_42828 = 0;
        postlude_42829 = 0;
        postlude_42830 = 0.0F;
    }
    mem_43948[0] = postlude_42828;
    mem_43950[0] = postlude_42829;
    mem_43952[0] = postlude_42830;
    barrier(CLK_LOCAL_MEM_FENCE);
    if (slt64(sext_i32_i64(local_tid_45013) + segmap_group_sizze_36186 *
              sext_i32_i64(group_tid_45014), m_28474)) {
        ((__global int32_t *) mem_43954)[sext_i32_i64(local_tid_45013) +
                                         segmap_group_sizze_36186 *
                                         sext_i32_i64(group_tid_45014)] =
            mem_43948[0];
    }
    if (slt64(sext_i32_i64(local_tid_45013) + segmap_group_sizze_36186 *
              sext_i32_i64(group_tid_45014), m_28474)) {
        ((__global int32_t *) mem_43956)[sext_i32_i64(local_tid_45013) +
                                         segmap_group_sizze_36186 *
                                         sext_i32_i64(group_tid_45014)] =
            mem_43950[0];
    }
    if (slt64(sext_i32_i64(local_tid_45013) + segmap_group_sizze_36186 *
              sext_i32_i64(group_tid_45014), m_28474)) {
        ((__global float *) mem_43958)[sext_i32_i64(local_tid_45013) +
                                       segmap_group_sizze_36186 *
                                       sext_i32_i64(group_tid_45014)] =
            mem_43952[0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_36186
}
__kernel void mainMagnitudezisegmap_intragroup_42854(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_44007_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_44000_backing_aligned_1,
                                                     int64_t N_28473,
                                                     int64_t m_28474,
                                                     int64_t i32_res_28848,
                                                     int64_t num_whole_tiles_42874,
                                                     int64_t residual_input_42973,
                                                     unsigned char cond_42974,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_43919,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43982,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43983,
                                                     __global
                                                     unsigned char *mem_44013)
{
    #define segmap_group_sizze_36423 (mainMagnitudezisegmap_group_sizze_36404)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_44007_backing_5 = (__local volatile
                                                           char *) mem_44007_backing_aligned_0;
    __local volatile char *restrict mem_44000_backing_0 = (__local volatile
                                                           char *) mem_44000_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45198;
    int32_t local_tid_45199;
    int64_t group_sizze_45202;
    int32_t wave_sizze_45201;
    int32_t group_tid_45200;
    
    global_tid_45198 = get_global_id(0);
    local_tid_45199 = get_local_id(0);
    group_sizze_45202 = get_local_size(0);
    wave_sizze_45201 = LOCKSTEP_WIDTH;
    group_tid_45200 = get_group_id(0);
    
    int32_t gid_flat_42854;
    
    gid_flat_42854 = group_tid_45200;
    
    int32_t ltid_pre_45203;
    
    ltid_pre_45203 = local_tid_45199;
    
    int64_t gid_42853;
    
    gid_42853 = sext_i32_i64(group_tid_45200);
    
    int64_t binop_x_42863;
    
    binop_x_42863 = segmap_group_sizze_36423 * gid_42853;
    
    int32_t mem_43991[1];
    int32_t mem_43993[1];
    int64_t ltid_42855 = sext_i32_i64(ltid_pre_45203);
    int32_t ltid_flat_42856 = local_tid_45199;
    int64_t gtid_42864 = ltid_42855 + binop_x_42863;
    bool cond_42865 = slt64(gtid_42864, m_28474);
    int32_t pre_42866;
    int32_t pre_42867;
    
    if (cond_42865) {
        int32_t x_42868 = ((__global
                            int32_t *) defunc_3_map_res_mem_43983)[gtid_42864];
        int32_t x_42869 = ((__global
                            int32_t *) defunc_3_map_res_mem_43982)[gtid_42864];
        
        pre_42866 = x_42868;
        pre_42867 = x_42869;
    } else {
        pre_42866 = 0;
        pre_42867 = 0;
    }
    mem_43991[0] = pre_42866;
    mem_43993[0] = pre_42867;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_43996[1];
    int64_t ltid_42875 = sext_i32_i64(ltid_pre_45203);
    int32_t ltid_flat_42876 = local_tid_45199;
    
    mem_43996[0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_44000;
    
    mem_44000 = (__local char *) mem_44000_backing_0;
    
    float accs_mem_44004[1];
    float mem_param_43997[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43997[i_1] = mem_43996[i_1];
    for (int64_t tile_id_42882 = 0; tile_id_42882 < num_whole_tiles_42874;
         tile_id_42882++) {
        int64_t binop_x_42931 = segmap_group_sizze_36423 * tile_id_42882;
        int64_t ltid_42883 = sext_i32_i64(ltid_pre_45203);
        int32_t ltid_flat_42884 = local_tid_45199;
        int64_t j_42932 = ltid_42883 + binop_x_42931;
        bool cond_42937 = slt64(j_42932, i32_res_28848);
        int32_t pre_42938;
        
        if (cond_42937) {
            int32_t index_primexp_43048 = sext_i64_i32(j_42932);
            int32_t tile_elem_42939 = index_primexp_43048;
            
            pre_42938 = tile_elem_42939;
        } else {
            pre_42938 = 0;
        }
        ((__local int32_t *) mem_44000)[ltid_42883] = pre_42938;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_44003[1];
        int64_t ltid_42903 = sext_i32_i64(ltid_pre_45203);
        int32_t ltid_flat_42904 = local_tid_45199;
        int64_t gtid_42943 = binop_x_42863 + ltid_42903;
        float acc_42946 = mem_param_43997[0];
        bool cond_42947 = slt64(gtid_42943, m_28474);
        float acc_42948;
        
        if (cond_42947) {
            int32_t x_42944 = mem_43991[0];
            int32_t x_42945 = mem_43993[0];
            float x_42949;
            float redout_43098 = acc_42946;
            
            for (int64_t i_43099 = 0; i_43099 < segmap_group_sizze_36423;
                 i_43099++) {
                int32_t x_42953 = ((__local int32_t *) mem_44000)[i_43099];
                bool cond_42954 = slt32(x_42953, x_42945);
                float defunc_0_f_res_42955;
                
                if (cond_42954) {
                    int32_t x_42956 = add32(x_42944, x_42953);
                    int32_t x_42957 = sub32(x_42956, x_42945);
                    int32_t i_42958 = add32(1, x_42957);
                    int64_t i_42959 = sext_i32_i64(i_42958);
                    float defunc_0_f_res_t_res_42960 = ((__global
                                                         float *) defunc_4_map_res_mem_43919)[gtid_42943 *
                                                                                              N_28473 +
                                                                                              i_42959];
                    
                    defunc_0_f_res_42955 = defunc_0_f_res_t_res_42960;
                } else {
                    defunc_0_f_res_42955 = 0.0F;
                }
                
                float defunc_1_op_res_42952 = defunc_0_f_res_42955 +
                      redout_43098;
                float redout_tmp_45206 = defunc_1_op_res_42952;
                
                redout_43098 = redout_tmp_45206;
            }
            x_42949 = redout_43098;
            acc_42948 = x_42949;
        } else {
            acc_42948 = acc_42946;
        }
        mem_44003[0] = acc_42948;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_45204[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_45204[i_2] = mem_44003[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43997[i_3] = mem_param_tmp_45204[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_44004[i_4] = mem_param_43997[i_4];
    
    __local char *mem_44007;
    
    mem_44007 = (__local char *) mem_44007_backing_5;
    
    float mem_44010[1];
    float mem_44194[1];
    
    if (cond_42974) {
        mem_44194[0] = accs_mem_44004[0];
    } else {
        int64_t binop_x_42984 = segmap_group_sizze_36423 *
                num_whole_tiles_42874;
        int64_t ltid_42975 = sext_i32_i64(ltid_pre_45203);
        int32_t ltid_flat_42976 = local_tid_45199;
        int64_t j_42985 = ltid_42975 + binop_x_42984;
        bool cond_42990 = slt64(j_42985, i32_res_28848);
        int32_t pre_42991;
        
        if (cond_42990) {
            int32_t index_primexp_43049 = sext_i64_i32(j_42985);
            int32_t tile_elem_42992 = index_primexp_43049;
            
            pre_42991 = tile_elem_42992;
        } else {
            pre_42991 = 0;
        }
        ((__local int32_t *) mem_44007)[ltid_42975] = pre_42991;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_42996 = sext_i32_i64(ltid_pre_45203);
        int32_t ltid_flat_42997 = local_tid_45199;
        int64_t gtid_43004 = binop_x_42863 + ltid_42996;
        float acc_43007 = accs_mem_44004[0];
        bool cond_43008 = slt64(gtid_43004, m_28474);
        float acc_43009;
        
        if (cond_43008) {
            int32_t x_43005 = mem_43991[0];
            int32_t x_43006 = mem_43993[0];
            float x_43010;
            float redout_43100 = acc_43007;
            
            for (int64_t i_43101 = 0; i_43101 < residual_input_42973;
                 i_43101++) {
                int32_t x_43014 = ((__local int32_t *) mem_44007)[i_43101];
                bool cond_43015 = slt32(x_43014, x_43006);
                float defunc_0_f_res_43016;
                
                if (cond_43015) {
                    int32_t x_43017 = add32(x_43005, x_43014);
                    int32_t x_43018 = sub32(x_43017, x_43006);
                    int32_t i_43019 = add32(1, x_43018);
                    int64_t i_43020 = sext_i32_i64(i_43019);
                    float defunc_0_f_res_t_res_43021 = ((__global
                                                         float *) defunc_4_map_res_mem_43919)[gtid_43004 *
                                                                                              N_28473 +
                                                                                              i_43020];
                    
                    defunc_0_f_res_43016 = defunc_0_f_res_t_res_43021;
                } else {
                    defunc_0_f_res_43016 = 0.0F;
                }
                
                float defunc_1_op_res_43013 = defunc_0_f_res_43016 +
                      redout_43100;
                float redout_tmp_45207 = defunc_1_op_res_43013;
                
                redout_43100 = redout_tmp_45207;
            }
            x_43010 = redout_43100;
            acc_43009 = x_43010;
        } else {
            acc_43009 = acc_43007;
        }
        mem_44010[0] = acc_43009;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_44194[0] = mem_44010[0];
    }
    if (slt64(sext_i32_i64(local_tid_45199) + segmap_group_sizze_36423 *
              sext_i32_i64(group_tid_45200), m_28474)) {
        ((__global float *) mem_44013)[sext_i32_i64(local_tid_45199) +
                                       segmap_group_sizze_36423 *
                                       sext_i32_i64(group_tid_45200)] =
            mem_44194[0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_36423
}
__kernel void mainMagnitudezisegred_large_34398(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44466_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44464_backing_aligned_1,
                                                int64_t N_28473,
                                                int64_t N_28475,
                                                int64_t i32_res_28487,
                                                int64_t i32_res_28493,
                                                int64_t num_groups_34537,
                                                __global
                                                unsigned char *images_mem_43123,
                                                __global
                                                unsigned char *binop_p_mem_43132,
                                                __global
                                                unsigned char *mem_43273,
                                                __global
                                                unsigned char *mem_43278,
                                                int64_t groups_per_segment_44450,
                                                int64_t elements_per_thread_44451,
                                                int64_t virt_num_groups_44452,
                                                int64_t threads_per_segment_44454,
                                                __global
                                                unsigned char *group_res_arr_mem_44455,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44457)
{
    #define segred_group_sizze_34536 (mainMagnitudezisegred_group_sizze_34392)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44466_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44466_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44464_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44464_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44459;
    int32_t local_tid_44460;
    int64_t group_sizze_44463;
    int32_t wave_sizze_44462;
    int32_t group_tid_44461;
    
    global_tid_44459 = get_global_id(0);
    local_tid_44460 = get_local_id(0);
    group_sizze_44463 = get_local_size(0);
    wave_sizze_44462 = LOCKSTEP_WIDTH;
    group_tid_44461 = get_group_id(0);
    
    int32_t phys_tid_34398;
    
    phys_tid_34398 = global_tid_44459;
    
    __local char *red_arr_mem_44464;
    
    red_arr_mem_44464 = (__local char *) red_arr_mem_44464_backing_0;
    
    __local char *sync_arr_mem_44466;
    
    sync_arr_mem_44466 = (__local char *) sync_arr_mem_44466_backing_1;
    
    int32_t phys_group_id_44468;
    
    phys_group_id_44468 = get_group_id(0);
    for (int32_t i_44469 = 0; i_44469 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44452) - phys_group_id_44468,
                   sext_i64_i32(num_groups_34537)); i_44469++) {
        int32_t virt_group_id_44470 = phys_group_id_44468 + i_44469 *
                sext_i64_i32(num_groups_34537);
        int32_t flat_segment_id_44471 = squot32(virt_group_id_44470,
                                                sext_i64_i32(groups_per_segment_44450));
        int64_t global_tid_44472 = srem64(sext_i32_i64(virt_group_id_44470) *
                                          segred_group_sizze_34536 +
                                          sext_i32_i64(local_tid_44460),
                                          segred_group_sizze_34536 *
                                          groups_per_segment_44450);
        int64_t gtid_34385 = squot64(sext_i32_i64(flat_segment_id_44471),
                                     i32_res_28493 * i32_res_28493);
        int64_t gtid_34386 = squot64(sext_i32_i64(flat_segment_id_44471) -
                                     squot64(sext_i32_i64(flat_segment_id_44471),
                                             i32_res_28493 * i32_res_28493) *
                                     (i32_res_28493 * i32_res_28493),
                                     i32_res_28493);
        int64_t gtid_34387 = sext_i32_i64(flat_segment_id_44471) -
                squot64(sext_i32_i64(flat_segment_id_44471), i32_res_28493 *
                        i32_res_28493) * (i32_res_28493 * i32_res_28493) -
                squot64(sext_i32_i64(flat_segment_id_44471) -
                        squot64(sext_i32_i64(flat_segment_id_44471),
                                i32_res_28493 * i32_res_28493) *
                        (i32_res_28493 * i32_res_28493), i32_res_28493) *
                i32_res_28493;
        int64_t gtid_34397;
        float x_acc_44473;
        int64_t chunk_sizze_44474;
        
        chunk_sizze_44474 = smin64(elements_per_thread_44451,
                                   sdiv_up64(i32_res_28487 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44472)),
                                             threads_per_segment_44454));
        
        float x_34540;
        float x_34541;
        
        // neutral-initialise the accumulators
        {
            x_acc_44473 = 0.0F;
        }
        for (int64_t i_44478 = 0; i_44478 < chunk_sizze_44474; i_44478++) {
            gtid_34397 = sext_i32_i64(sext_i64_i32(global_tid_44472)) +
                threads_per_segment_44454 * i_44478;
            // apply map function
            {
                float x_34546 = ((__global
                                  float *) images_mem_43123)[gtid_34385 *
                                                             N_28475 +
                                                             gtid_34397];
                float x_34547 = ((__global
                                  float *) binop_p_mem_43132)[gtid_34386 *
                                                              N_28473 +
                                                              gtid_34397];
                float x_34548 = ((__global float *) mem_43273)[gtid_34387 *
                                                               N_28473 +
                                                               gtid_34397];
                float x_34549 = x_34547 * x_34548;
                bool isnan_res_34550;
                
                isnan_res_34550 = futrts_isnan32(x_34546);
                
                float y_34551;
                
                if (isnan_res_34550) {
                    y_34551 = 0.0F;
                } else {
                    y_34551 = 1.0F;
                }
                
                float defunc_2_f_res_34552 = x_34549 * y_34551;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_34540 = x_acc_44473;
                }
                // load new values
                {
                    x_34541 = defunc_2_f_res_34552;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_34542 = x_34540 + x_34541;
                    
                    // store in accumulator
                    {
                        x_acc_44473 = defunc_1_op_res_34542;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_34540 = x_acc_44473;
            ((__local
              float *) red_arr_mem_44464)[sext_i32_i64(local_tid_44460)] =
                x_34540;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44479;
        int32_t skip_waves_44480;
        
        skip_waves_44480 = 1;
        
        float x_44475;
        float x_44476;
        
        offset_44479 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44460,
                      sext_i64_i32(segred_group_sizze_34536))) {
                x_44475 = ((__local
                            float *) red_arr_mem_44464)[sext_i32_i64(local_tid_44460 +
                                                        offset_44479)];
            }
        }
        offset_44479 = 1;
        while (slt32(offset_44479, wave_sizze_44462)) {
            if (slt32(local_tid_44460 + offset_44479,
                      sext_i64_i32(segred_group_sizze_34536)) &&
                ((local_tid_44460 - squot32(local_tid_44460, wave_sizze_44462) *
                  wave_sizze_44462) & (2 * offset_44479 - 1)) == 0) {
                // read array element
                {
                    x_44476 = ((volatile __local
                                float *) red_arr_mem_44464)[sext_i32_i64(local_tid_44460 +
                                                            offset_44479)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44477 = x_44475 + x_44476;
                    
                    x_44475 = defunc_1_op_res_44477;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44464)[sext_i32_i64(local_tid_44460)] =
                        x_44475;
                }
            }
            offset_44479 *= 2;
        }
        while (slt32(skip_waves_44480,
                     squot32(sext_i64_i32(segred_group_sizze_34536) +
                             wave_sizze_44462 - 1, wave_sizze_44462))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44479 = skip_waves_44480 * wave_sizze_44462;
            if (slt32(local_tid_44460 + offset_44479,
                      sext_i64_i32(segred_group_sizze_34536)) &&
                ((local_tid_44460 - squot32(local_tid_44460, wave_sizze_44462) *
                  wave_sizze_44462) == 0 && (squot32(local_tid_44460,
                                                     wave_sizze_44462) & (2 *
                                                                          skip_waves_44480 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44476 = ((__local
                                float *) red_arr_mem_44464)[sext_i32_i64(local_tid_44460 +
                                                            offset_44479)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44477 = x_44475 + x_44476;
                    
                    x_44475 = defunc_1_op_res_44477;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44464)[sext_i32_i64(local_tid_44460)] =
                        x_44475;
                }
            }
            skip_waves_44480 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44460) == 0) {
                x_acc_44473 = x_44475;
            }
        }
        if (groups_per_segment_44450 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44460 == 0) {
                    ((__global float *) mem_43278)[gtid_34385 * (i32_res_28493 *
                                                                 i32_res_28493) +
                                                   gtid_34386 * i32_res_28493 +
                                                   gtid_34387] = x_acc_44473;
                }
            }
        } else {
            int32_t old_counter_44481;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44460 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44455)[sext_i32_i64(virt_group_id_44470) *
                                                        segred_group_sizze_34536] =
                        x_acc_44473;
                    mem_fence_global();
                    old_counter_44481 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44457)[sext_i32_i64(srem32(flat_segment_id_44471,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44466)[0] =
                        old_counter_44481 == groups_per_segment_44450 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44482;
            
            is_last_group_44482 = ((__local bool *) sync_arr_mem_44466)[0];
            if (is_last_group_44482) {
                if (local_tid_44460 == 0) {
                    old_counter_44481 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44457)[sext_i32_i64(srem32(flat_segment_id_44471,
                                                                                                              10240))],
                                              (int) (0 -
                                                     groups_per_segment_44450));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44483 =
                            sdiv_up64(groups_per_segment_44450,
                                      segred_group_sizze_34536);
                    
                    x_34540 = 0.0F;
                    for (int64_t i_44484 = 0; i_44484 < read_per_thread_44483;
                         i_44484++) {
                        int64_t group_res_id_44485 =
                                sext_i32_i64(local_tid_44460) *
                                read_per_thread_44483 + i_44484;
                        int64_t index_of_group_res_44486 =
                                sext_i32_i64(flat_segment_id_44471) *
                                groups_per_segment_44450 + group_res_id_44485;
                        
                        if (slt64(group_res_id_44485,
                                  groups_per_segment_44450)) {
                            x_34541 = ((__global
                                        float *) group_res_arr_mem_44455)[index_of_group_res_44486 *
                                                                          segred_group_sizze_34536];
                            
                            float defunc_1_op_res_34542;
                            
                            defunc_1_op_res_34542 = x_34540 + x_34541;
                            x_34540 = defunc_1_op_res_34542;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44464)[sext_i32_i64(local_tid_44460)] =
                    x_34540;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44487;
                    int32_t skip_waves_44488;
                    
                    skip_waves_44488 = 1;
                    
                    float x_44475;
                    float x_44476;
                    
                    offset_44487 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44460,
                                  sext_i64_i32(segred_group_sizze_34536))) {
                            x_44475 = ((__local
                                        float *) red_arr_mem_44464)[sext_i32_i64(local_tid_44460 +
                                                                    offset_44487)];
                        }
                    }
                    offset_44487 = 1;
                    while (slt32(offset_44487, wave_sizze_44462)) {
                        if (slt32(local_tid_44460 + offset_44487,
                                  sext_i64_i32(segred_group_sizze_34536)) &&
                            ((local_tid_44460 - squot32(local_tid_44460,
                                                        wave_sizze_44462) *
                              wave_sizze_44462) & (2 * offset_44487 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44476 = ((volatile __local
                                            float *) red_arr_mem_44464)[sext_i32_i64(local_tid_44460 +
                                                                        offset_44487)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44477 = x_44475 + x_44476;
                                
                                x_44475 = defunc_1_op_res_44477;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44464)[sext_i32_i64(local_tid_44460)] =
                                    x_44475;
                            }
                        }
                        offset_44487 *= 2;
                    }
                    while (slt32(skip_waves_44488,
                                 squot32(sext_i64_i32(segred_group_sizze_34536) +
                                         wave_sizze_44462 - 1,
                                         wave_sizze_44462))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44487 = skip_waves_44488 * wave_sizze_44462;
                        if (slt32(local_tid_44460 + offset_44487,
                                  sext_i64_i32(segred_group_sizze_34536)) &&
                            ((local_tid_44460 - squot32(local_tid_44460,
                                                        wave_sizze_44462) *
                              wave_sizze_44462) == 0 &&
                             (squot32(local_tid_44460, wave_sizze_44462) & (2 *
                                                                            skip_waves_44488 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44476 = ((__local
                                            float *) red_arr_mem_44464)[sext_i32_i64(local_tid_44460 +
                                                                        offset_44487)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44477 = x_44475 + x_44476;
                                
                                x_44475 = defunc_1_op_res_44477;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44464)[sext_i32_i64(local_tid_44460)] =
                                    x_44475;
                            }
                        }
                        skip_waves_44488 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44460 == 0) {
                            ((__global float *) mem_43278)[gtid_34385 *
                                                           (i32_res_28493 *
                                                            i32_res_28493) +
                                                           gtid_34386 *
                                                           i32_res_28493 +
                                                           gtid_34387] =
                                x_44475;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34536
}
__kernel void mainMagnitudezisegred_large_35445(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44662_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44660_backing_aligned_1,
                                                int64_t N_28473,
                                                int64_t N_28475,
                                                int64_t i32_res_28487,
                                                int64_t i32_res_28493,
                                                int64_t num_groups_35498,
                                                __global
                                                unsigned char *images_mem_43123,
                                                __global
                                                unsigned char *binop_p_mem_43132,
                                                __global
                                                unsigned char *mem_43585,
                                                int64_t groups_per_segment_44646,
                                                int64_t elements_per_thread_44647,
                                                int64_t virt_num_groups_44648,
                                                int64_t threads_per_segment_44650,
                                                __global
                                                unsigned char *group_res_arr_mem_44651,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44653)
{
    #define segred_group_sizze_35497 (mainMagnitudezisegred_group_sizze_35439)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44662_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44662_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44660_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44660_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44655;
    int32_t local_tid_44656;
    int64_t group_sizze_44659;
    int32_t wave_sizze_44658;
    int32_t group_tid_44657;
    
    global_tid_44655 = get_global_id(0);
    local_tid_44656 = get_local_id(0);
    group_sizze_44659 = get_local_size(0);
    wave_sizze_44658 = LOCKSTEP_WIDTH;
    group_tid_44657 = get_group_id(0);
    
    int32_t phys_tid_35445;
    
    phys_tid_35445 = global_tid_44655;
    
    __local char *red_arr_mem_44660;
    
    red_arr_mem_44660 = (__local char *) red_arr_mem_44660_backing_0;
    
    __local char *sync_arr_mem_44662;
    
    sync_arr_mem_44662 = (__local char *) sync_arr_mem_44662_backing_1;
    
    int32_t phys_group_id_44664;
    
    phys_group_id_44664 = get_group_id(0);
    for (int32_t i_44665 = 0; i_44665 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44648) - phys_group_id_44664,
                   sext_i64_i32(num_groups_35498)); i_44665++) {
        int32_t virt_group_id_44666 = phys_group_id_44664 + i_44665 *
                sext_i64_i32(num_groups_35498);
        int32_t flat_segment_id_44667 = squot32(virt_group_id_44666,
                                                sext_i64_i32(groups_per_segment_44646));
        int64_t global_tid_44668 = srem64(sext_i32_i64(virt_group_id_44666) *
                                          segred_group_sizze_35497 +
                                          sext_i32_i64(local_tid_44656),
                                          segred_group_sizze_35497 *
                                          groups_per_segment_44646);
        int64_t gtid_35434 = squot64(sext_i32_i64(flat_segment_id_44667),
                                     i32_res_28493);
        int64_t gtid_35435 = sext_i32_i64(flat_segment_id_44667) -
                squot64(sext_i32_i64(flat_segment_id_44667), i32_res_28493) *
                i32_res_28493;
        int64_t gtid_35444;
        float x_acc_44669;
        int64_t chunk_sizze_44670;
        
        chunk_sizze_44670 = smin64(elements_per_thread_44647,
                                   sdiv_up64(i32_res_28487 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44668)),
                                             threads_per_segment_44650));
        
        float x_35501;
        float x_35502;
        
        // neutral-initialise the accumulators
        {
            x_acc_44669 = 0.0F;
        }
        for (int64_t i_44674 = 0; i_44674 < chunk_sizze_44670; i_44674++) {
            gtid_35444 = sext_i32_i64(sext_i64_i32(global_tid_44668)) +
                threads_per_segment_44650 * i_44674;
            // apply map function
            {
                float x_35507 = ((__global
                                  float *) images_mem_43123)[gtid_35434 *
                                                             N_28475 +
                                                             gtid_35444];
                bool isnan_res_35508;
                
                isnan_res_35508 = futrts_isnan32(x_35507);
                
                float defunc_1_f_res_35509;
                
                if (isnan_res_35508) {
                    defunc_1_f_res_35509 = 0.0F;
                } else {
                    float x_35506 = ((__global
                                      float *) binop_p_mem_43132)[gtid_35435 *
                                                                  N_28473 +
                                                                  gtid_35444];
                    float defunc_1_f_res_f_res_35510 = x_35506 * x_35507;
                    
                    defunc_1_f_res_35509 = defunc_1_f_res_f_res_35510;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_35501 = x_acc_44669;
                }
                // load new values
                {
                    x_35502 = defunc_1_f_res_35509;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_35503 = x_35501 + x_35502;
                    
                    // store in accumulator
                    {
                        x_acc_44669 = defunc_1_op_res_35503;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_35501 = x_acc_44669;
            ((__local
              float *) red_arr_mem_44660)[sext_i32_i64(local_tid_44656)] =
                x_35501;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44675;
        int32_t skip_waves_44676;
        
        skip_waves_44676 = 1;
        
        float x_44671;
        float x_44672;
        
        offset_44675 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44656,
                      sext_i64_i32(segred_group_sizze_35497))) {
                x_44671 = ((__local
                            float *) red_arr_mem_44660)[sext_i32_i64(local_tid_44656 +
                                                        offset_44675)];
            }
        }
        offset_44675 = 1;
        while (slt32(offset_44675, wave_sizze_44658)) {
            if (slt32(local_tid_44656 + offset_44675,
                      sext_i64_i32(segred_group_sizze_35497)) &&
                ((local_tid_44656 - squot32(local_tid_44656, wave_sizze_44658) *
                  wave_sizze_44658) & (2 * offset_44675 - 1)) == 0) {
                // read array element
                {
                    x_44672 = ((volatile __local
                                float *) red_arr_mem_44660)[sext_i32_i64(local_tid_44656 +
                                                            offset_44675)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44673 = x_44671 + x_44672;
                    
                    x_44671 = defunc_1_op_res_44673;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44660)[sext_i32_i64(local_tid_44656)] =
                        x_44671;
                }
            }
            offset_44675 *= 2;
        }
        while (slt32(skip_waves_44676,
                     squot32(sext_i64_i32(segred_group_sizze_35497) +
                             wave_sizze_44658 - 1, wave_sizze_44658))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44675 = skip_waves_44676 * wave_sizze_44658;
            if (slt32(local_tid_44656 + offset_44675,
                      sext_i64_i32(segred_group_sizze_35497)) &&
                ((local_tid_44656 - squot32(local_tid_44656, wave_sizze_44658) *
                  wave_sizze_44658) == 0 && (squot32(local_tid_44656,
                                                     wave_sizze_44658) & (2 *
                                                                          skip_waves_44676 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44672 = ((__local
                                float *) red_arr_mem_44660)[sext_i32_i64(local_tid_44656 +
                                                            offset_44675)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44673 = x_44671 + x_44672;
                    
                    x_44671 = defunc_1_op_res_44673;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44660)[sext_i32_i64(local_tid_44656)] =
                        x_44671;
                }
            }
            skip_waves_44676 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44656) == 0) {
                x_acc_44669 = x_44671;
            }
        }
        if (groups_per_segment_44646 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44656 == 0) {
                    ((__global float *) mem_43585)[gtid_35434 * i32_res_28493 +
                                                   gtid_35435] = x_acc_44669;
                }
            }
        } else {
            int32_t old_counter_44677;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44656 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44651)[sext_i32_i64(virt_group_id_44666) *
                                                        segred_group_sizze_35497] =
                        x_acc_44669;
                    mem_fence_global();
                    old_counter_44677 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44653)[sext_i32_i64(srem32(flat_segment_id_44667,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44662)[0] =
                        old_counter_44677 == groups_per_segment_44646 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44678;
            
            is_last_group_44678 = ((__local bool *) sync_arr_mem_44662)[0];
            if (is_last_group_44678) {
                if (local_tid_44656 == 0) {
                    old_counter_44677 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44653)[sext_i32_i64(srem32(flat_segment_id_44667,
                                                                                                              10240))],
                                              (int) (0 -
                                                     groups_per_segment_44646));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44679 =
                            sdiv_up64(groups_per_segment_44646,
                                      segred_group_sizze_35497);
                    
                    x_35501 = 0.0F;
                    for (int64_t i_44680 = 0; i_44680 < read_per_thread_44679;
                         i_44680++) {
                        int64_t group_res_id_44681 =
                                sext_i32_i64(local_tid_44656) *
                                read_per_thread_44679 + i_44680;
                        int64_t index_of_group_res_44682 =
                                sext_i32_i64(flat_segment_id_44667) *
                                groups_per_segment_44646 + group_res_id_44681;
                        
                        if (slt64(group_res_id_44681,
                                  groups_per_segment_44646)) {
                            x_35502 = ((__global
                                        float *) group_res_arr_mem_44651)[index_of_group_res_44682 *
                                                                          segred_group_sizze_35497];
                            
                            float defunc_1_op_res_35503;
                            
                            defunc_1_op_res_35503 = x_35501 + x_35502;
                            x_35501 = defunc_1_op_res_35503;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44660)[sext_i32_i64(local_tid_44656)] =
                    x_35501;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44683;
                    int32_t skip_waves_44684;
                    
                    skip_waves_44684 = 1;
                    
                    float x_44671;
                    float x_44672;
                    
                    offset_44683 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44656,
                                  sext_i64_i32(segred_group_sizze_35497))) {
                            x_44671 = ((__local
                                        float *) red_arr_mem_44660)[sext_i32_i64(local_tid_44656 +
                                                                    offset_44683)];
                        }
                    }
                    offset_44683 = 1;
                    while (slt32(offset_44683, wave_sizze_44658)) {
                        if (slt32(local_tid_44656 + offset_44683,
                                  sext_i64_i32(segred_group_sizze_35497)) &&
                            ((local_tid_44656 - squot32(local_tid_44656,
                                                        wave_sizze_44658) *
                              wave_sizze_44658) & (2 * offset_44683 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44672 = ((volatile __local
                                            float *) red_arr_mem_44660)[sext_i32_i64(local_tid_44656 +
                                                                        offset_44683)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44673 = x_44671 + x_44672;
                                
                                x_44671 = defunc_1_op_res_44673;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44660)[sext_i32_i64(local_tid_44656)] =
                                    x_44671;
                            }
                        }
                        offset_44683 *= 2;
                    }
                    while (slt32(skip_waves_44684,
                                 squot32(sext_i64_i32(segred_group_sizze_35497) +
                                         wave_sizze_44658 - 1,
                                         wave_sizze_44658))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44683 = skip_waves_44684 * wave_sizze_44658;
                        if (slt32(local_tid_44656 + offset_44683,
                                  sext_i64_i32(segred_group_sizze_35497)) &&
                            ((local_tid_44656 - squot32(local_tid_44656,
                                                        wave_sizze_44658) *
                              wave_sizze_44658) == 0 &&
                             (squot32(local_tid_44656, wave_sizze_44658) & (2 *
                                                                            skip_waves_44684 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44672 = ((__local
                                            float *) red_arr_mem_44660)[sext_i32_i64(local_tid_44656 +
                                                                        offset_44683)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44673 = x_44671 + x_44672;
                                
                                x_44671 = defunc_1_op_res_44673;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44660)[sext_i32_i64(local_tid_44656)] =
                                    x_44671;
                            }
                        }
                        skip_waves_44684 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44656 == 0) {
                            ((__global float *) mem_43585)[gtid_35434 *
                                                           i32_res_28493 +
                                                           gtid_35435] =
                                x_44671;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35497
}
__kernel void mainMagnitudezisegred_large_35582(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44750_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44748_backing_aligned_1,
                                                int64_t i32_res_28493,
                                                int64_t num_groups_35631,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43370,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43591,
                                                __global
                                                unsigned char *mem_43651,
                                                int64_t groups_per_segment_44734,
                                                int64_t elements_per_thread_44735,
                                                int64_t virt_num_groups_44736,
                                                int64_t threads_per_segment_44738,
                                                __global
                                                unsigned char *group_res_arr_mem_44739,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44741)
{
    #define segred_group_sizze_35630 (mainMagnitudezisegred_group_sizze_35576)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44750_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44750_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44748_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44748_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44743;
    int32_t local_tid_44744;
    int64_t group_sizze_44747;
    int32_t wave_sizze_44746;
    int32_t group_tid_44745;
    
    global_tid_44743 = get_global_id(0);
    local_tid_44744 = get_local_id(0);
    group_sizze_44747 = get_local_size(0);
    wave_sizze_44746 = LOCKSTEP_WIDTH;
    group_tid_44745 = get_group_id(0);
    
    int32_t phys_tid_35582;
    
    phys_tid_35582 = global_tid_44743;
    
    __local char *red_arr_mem_44748;
    
    red_arr_mem_44748 = (__local char *) red_arr_mem_44748_backing_0;
    
    __local char *sync_arr_mem_44750;
    
    sync_arr_mem_44750 = (__local char *) sync_arr_mem_44750_backing_1;
    
    int32_t phys_group_id_44752;
    
    phys_group_id_44752 = get_group_id(0);
    for (int32_t i_44753 = 0; i_44753 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44736) - phys_group_id_44752,
                   sext_i64_i32(num_groups_35631)); i_44753++) {
        int32_t virt_group_id_44754 = phys_group_id_44752 + i_44753 *
                sext_i64_i32(num_groups_35631);
        int32_t flat_segment_id_44755 = squot32(virt_group_id_44754,
                                                sext_i64_i32(groups_per_segment_44734));
        int64_t global_tid_44756 = srem64(sext_i32_i64(virt_group_id_44754) *
                                          segred_group_sizze_35630 +
                                          sext_i32_i64(local_tid_44744),
                                          segred_group_sizze_35630 *
                                          groups_per_segment_44734);
        int64_t gtid_35571 = squot64(sext_i32_i64(flat_segment_id_44755),
                                     i32_res_28493);
        int64_t gtid_35572 = sext_i32_i64(flat_segment_id_44755) -
                squot64(sext_i32_i64(flat_segment_id_44755), i32_res_28493) *
                i32_res_28493;
        int64_t gtid_35581;
        float x_acc_44757;
        int64_t chunk_sizze_44758;
        
        chunk_sizze_44758 = smin64(elements_per_thread_44735,
                                   sdiv_up64(i32_res_28493 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44756)),
                                             threads_per_segment_44738));
        
        float x_35634;
        float x_35635;
        
        // neutral-initialise the accumulators
        {
            x_acc_44757 = 0.0F;
        }
        for (int64_t i_44762 = 0; i_44762 < chunk_sizze_44758; i_44762++) {
            gtid_35581 = sext_i32_i64(sext_i64_i32(global_tid_44756)) +
                threads_per_segment_44738 * i_44762;
            // apply map function
            {
                float x_35640 = ((__global
                                  float *) defunc_3_map_res_mem_43591)[gtid_35571 *
                                                                       i32_res_28493 +
                                                                       gtid_35581];
                float x_35641 = ((__global
                                  float *) defunc_3_map_res_mem_43370)[gtid_35571 *
                                                                       (i32_res_28493 *
                                                                        i32_res_28493) +
                                                                       gtid_35572 *
                                                                       i32_res_28493 +
                                                                       gtid_35581];
                float defunc_1_f_res_35642 = x_35640 * x_35641;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_35634 = x_acc_44757;
                }
                // load new values
                {
                    x_35635 = defunc_1_f_res_35642;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_35636 = x_35634 + x_35635;
                    
                    // store in accumulator
                    {
                        x_acc_44757 = defunc_1_op_res_35636;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_35634 = x_acc_44757;
            ((__local
              float *) red_arr_mem_44748)[sext_i32_i64(local_tid_44744)] =
                x_35634;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44763;
        int32_t skip_waves_44764;
        
        skip_waves_44764 = 1;
        
        float x_44759;
        float x_44760;
        
        offset_44763 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44744,
                      sext_i64_i32(segred_group_sizze_35630))) {
                x_44759 = ((__local
                            float *) red_arr_mem_44748)[sext_i32_i64(local_tid_44744 +
                                                        offset_44763)];
            }
        }
        offset_44763 = 1;
        while (slt32(offset_44763, wave_sizze_44746)) {
            if (slt32(local_tid_44744 + offset_44763,
                      sext_i64_i32(segred_group_sizze_35630)) &&
                ((local_tid_44744 - squot32(local_tid_44744, wave_sizze_44746) *
                  wave_sizze_44746) & (2 * offset_44763 - 1)) == 0) {
                // read array element
                {
                    x_44760 = ((volatile __local
                                float *) red_arr_mem_44748)[sext_i32_i64(local_tid_44744 +
                                                            offset_44763)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44761 = x_44759 + x_44760;
                    
                    x_44759 = defunc_1_op_res_44761;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44748)[sext_i32_i64(local_tid_44744)] =
                        x_44759;
                }
            }
            offset_44763 *= 2;
        }
        while (slt32(skip_waves_44764,
                     squot32(sext_i64_i32(segred_group_sizze_35630) +
                             wave_sizze_44746 - 1, wave_sizze_44746))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44763 = skip_waves_44764 * wave_sizze_44746;
            if (slt32(local_tid_44744 + offset_44763,
                      sext_i64_i32(segred_group_sizze_35630)) &&
                ((local_tid_44744 - squot32(local_tid_44744, wave_sizze_44746) *
                  wave_sizze_44746) == 0 && (squot32(local_tid_44744,
                                                     wave_sizze_44746) & (2 *
                                                                          skip_waves_44764 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44760 = ((__local
                                float *) red_arr_mem_44748)[sext_i32_i64(local_tid_44744 +
                                                            offset_44763)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44761 = x_44759 + x_44760;
                    
                    x_44759 = defunc_1_op_res_44761;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44748)[sext_i32_i64(local_tid_44744)] =
                        x_44759;
                }
            }
            skip_waves_44764 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44744) == 0) {
                x_acc_44757 = x_44759;
            }
        }
        if (groups_per_segment_44734 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44744 == 0) {
                    ((__global float *) mem_43651)[gtid_35571 * i32_res_28493 +
                                                   gtid_35572] = x_acc_44757;
                }
            }
        } else {
            int32_t old_counter_44765;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44744 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44739)[sext_i32_i64(virt_group_id_44754) *
                                                        segred_group_sizze_35630] =
                        x_acc_44757;
                    mem_fence_global();
                    old_counter_44765 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44741)[sext_i32_i64(srem32(flat_segment_id_44755,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44750)[0] =
                        old_counter_44765 == groups_per_segment_44734 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44766;
            
            is_last_group_44766 = ((__local bool *) sync_arr_mem_44750)[0];
            if (is_last_group_44766) {
                if (local_tid_44744 == 0) {
                    old_counter_44765 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44741)[sext_i32_i64(srem32(flat_segment_id_44755,
                                                                                                              10240))],
                                              (int) (0 -
                                                     groups_per_segment_44734));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44767 =
                            sdiv_up64(groups_per_segment_44734,
                                      segred_group_sizze_35630);
                    
                    x_35634 = 0.0F;
                    for (int64_t i_44768 = 0; i_44768 < read_per_thread_44767;
                         i_44768++) {
                        int64_t group_res_id_44769 =
                                sext_i32_i64(local_tid_44744) *
                                read_per_thread_44767 + i_44768;
                        int64_t index_of_group_res_44770 =
                                sext_i32_i64(flat_segment_id_44755) *
                                groups_per_segment_44734 + group_res_id_44769;
                        
                        if (slt64(group_res_id_44769,
                                  groups_per_segment_44734)) {
                            x_35635 = ((__global
                                        float *) group_res_arr_mem_44739)[index_of_group_res_44770 *
                                                                          segred_group_sizze_35630];
                            
                            float defunc_1_op_res_35636;
                            
                            defunc_1_op_res_35636 = x_35634 + x_35635;
                            x_35634 = defunc_1_op_res_35636;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44748)[sext_i32_i64(local_tid_44744)] =
                    x_35634;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44771;
                    int32_t skip_waves_44772;
                    
                    skip_waves_44772 = 1;
                    
                    float x_44759;
                    float x_44760;
                    
                    offset_44771 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44744,
                                  sext_i64_i32(segred_group_sizze_35630))) {
                            x_44759 = ((__local
                                        float *) red_arr_mem_44748)[sext_i32_i64(local_tid_44744 +
                                                                    offset_44771)];
                        }
                    }
                    offset_44771 = 1;
                    while (slt32(offset_44771, wave_sizze_44746)) {
                        if (slt32(local_tid_44744 + offset_44771,
                                  sext_i64_i32(segred_group_sizze_35630)) &&
                            ((local_tid_44744 - squot32(local_tid_44744,
                                                        wave_sizze_44746) *
                              wave_sizze_44746) & (2 * offset_44771 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44760 = ((volatile __local
                                            float *) red_arr_mem_44748)[sext_i32_i64(local_tid_44744 +
                                                                        offset_44771)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44761 = x_44759 + x_44760;
                                
                                x_44759 = defunc_1_op_res_44761;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44748)[sext_i32_i64(local_tid_44744)] =
                                    x_44759;
                            }
                        }
                        offset_44771 *= 2;
                    }
                    while (slt32(skip_waves_44772,
                                 squot32(sext_i64_i32(segred_group_sizze_35630) +
                                         wave_sizze_44746 - 1,
                                         wave_sizze_44746))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44771 = skip_waves_44772 * wave_sizze_44746;
                        if (slt32(local_tid_44744 + offset_44771,
                                  sext_i64_i32(segred_group_sizze_35630)) &&
                            ((local_tid_44744 - squot32(local_tid_44744,
                                                        wave_sizze_44746) *
                              wave_sizze_44746) == 0 &&
                             (squot32(local_tid_44744, wave_sizze_44746) & (2 *
                                                                            skip_waves_44772 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44760 = ((__local
                                            float *) red_arr_mem_44748)[sext_i32_i64(local_tid_44744 +
                                                                        offset_44771)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44761 = x_44759 + x_44760;
                                
                                x_44759 = defunc_1_op_res_44761;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44748)[sext_i32_i64(local_tid_44744)] =
                                    x_44759;
                            }
                        }
                        skip_waves_44772 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44744 == 0) {
                            ((__global float *) mem_43651)[gtid_35571 *
                                                           i32_res_28493 +
                                                           gtid_35572] =
                                x_44759;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35630
}
__kernel void mainMagnitudezisegred_large_35712(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44882_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44880_backing_aligned_1,
                                                int64_t N_28473,
                                                int64_t i32_res_28493,
                                                int64_t num_groups_35759,
                                                __global
                                                unsigned char *mem_43139,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_43657,
                                                __global
                                                unsigned char *mem_43875,
                                                int64_t groups_per_segment_44866,
                                                int64_t elements_per_thread_44867,
                                                int64_t virt_num_groups_44868,
                                                int64_t threads_per_segment_44870,
                                                __global
                                                unsigned char *group_res_arr_mem_44871,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44873)
{
    #define segred_group_sizze_35758 (mainMagnitudezisegred_group_sizze_35706)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44882_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44882_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44880_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44880_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44875;
    int32_t local_tid_44876;
    int64_t group_sizze_44879;
    int32_t wave_sizze_44878;
    int32_t group_tid_44877;
    
    global_tid_44875 = get_global_id(0);
    local_tid_44876 = get_local_id(0);
    group_sizze_44879 = get_local_size(0);
    wave_sizze_44878 = LOCKSTEP_WIDTH;
    group_tid_44877 = get_group_id(0);
    
    int32_t phys_tid_35712;
    
    phys_tid_35712 = global_tid_44875;
    
    __local char *red_arr_mem_44880;
    
    red_arr_mem_44880 = (__local char *) red_arr_mem_44880_backing_0;
    
    __local char *sync_arr_mem_44882;
    
    sync_arr_mem_44882 = (__local char *) sync_arr_mem_44882_backing_1;
    
    int32_t phys_group_id_44884;
    
    phys_group_id_44884 = get_group_id(0);
    for (int32_t i_44885 = 0; i_44885 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44868) - phys_group_id_44884,
                   sext_i64_i32(num_groups_35759)); i_44885++) {
        int32_t virt_group_id_44886 = phys_group_id_44884 + i_44885 *
                sext_i64_i32(num_groups_35759);
        int32_t flat_segment_id_44887 = squot32(virt_group_id_44886,
                                                sext_i64_i32(groups_per_segment_44866));
        int64_t global_tid_44888 = srem64(sext_i32_i64(virt_group_id_44886) *
                                          segred_group_sizze_35758 +
                                          sext_i32_i64(local_tid_44876),
                                          segred_group_sizze_35758 *
                                          groups_per_segment_44866);
        int64_t gtid_35701 = squot64(sext_i32_i64(flat_segment_id_44887),
                                     N_28473);
        int64_t gtid_35702 = sext_i32_i64(flat_segment_id_44887) -
                squot64(sext_i32_i64(flat_segment_id_44887), N_28473) * N_28473;
        int64_t gtid_35711;
        float x_acc_44889;
        int64_t chunk_sizze_44890;
        
        chunk_sizze_44890 = smin64(elements_per_thread_44867,
                                   sdiv_up64(i32_res_28493 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44888)),
                                             threads_per_segment_44870));
        
        float x_35762;
        float x_35763;
        
        // neutral-initialise the accumulators
        {
            x_acc_44889 = 0.0F;
        }
        for (int64_t i_44894 = 0; i_44894 < chunk_sizze_44890; i_44894++) {
            gtid_35711 = sext_i32_i64(sext_i64_i32(global_tid_44888)) +
                threads_per_segment_44870 * i_44894;
            // apply map function
            {
                float x_35767 = ((__global
                                  float *) defunc_4_map_res_mem_43657)[gtid_35701 *
                                                                       i32_res_28493 +
                                                                       gtid_35711];
                float x_35768 = ((__global float *) mem_43139)[gtid_35702 *
                                                               i32_res_28493 +
                                                               gtid_35711];
                float defunc_1_f_res_35769 = x_35767 * x_35768;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_35762 = x_acc_44889;
                }
                // load new values
                {
                    x_35763 = defunc_1_f_res_35769;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_35764 = x_35762 + x_35763;
                    
                    // store in accumulator
                    {
                        x_acc_44889 = defunc_1_op_res_35764;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_35762 = x_acc_44889;
            ((__local
              float *) red_arr_mem_44880)[sext_i32_i64(local_tid_44876)] =
                x_35762;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44895;
        int32_t skip_waves_44896;
        
        skip_waves_44896 = 1;
        
        float x_44891;
        float x_44892;
        
        offset_44895 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44876,
                      sext_i64_i32(segred_group_sizze_35758))) {
                x_44891 = ((__local
                            float *) red_arr_mem_44880)[sext_i32_i64(local_tid_44876 +
                                                        offset_44895)];
            }
        }
        offset_44895 = 1;
        while (slt32(offset_44895, wave_sizze_44878)) {
            if (slt32(local_tid_44876 + offset_44895,
                      sext_i64_i32(segred_group_sizze_35758)) &&
                ((local_tid_44876 - squot32(local_tid_44876, wave_sizze_44878) *
                  wave_sizze_44878) & (2 * offset_44895 - 1)) == 0) {
                // read array element
                {
                    x_44892 = ((volatile __local
                                float *) red_arr_mem_44880)[sext_i32_i64(local_tid_44876 +
                                                            offset_44895)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44893 = x_44891 + x_44892;
                    
                    x_44891 = defunc_1_op_res_44893;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44880)[sext_i32_i64(local_tid_44876)] =
                        x_44891;
                }
            }
            offset_44895 *= 2;
        }
        while (slt32(skip_waves_44896,
                     squot32(sext_i64_i32(segred_group_sizze_35758) +
                             wave_sizze_44878 - 1, wave_sizze_44878))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44895 = skip_waves_44896 * wave_sizze_44878;
            if (slt32(local_tid_44876 + offset_44895,
                      sext_i64_i32(segred_group_sizze_35758)) &&
                ((local_tid_44876 - squot32(local_tid_44876, wave_sizze_44878) *
                  wave_sizze_44878) == 0 && (squot32(local_tid_44876,
                                                     wave_sizze_44878) & (2 *
                                                                          skip_waves_44896 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44892 = ((__local
                                float *) red_arr_mem_44880)[sext_i32_i64(local_tid_44876 +
                                                            offset_44895)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44893 = x_44891 + x_44892;
                    
                    x_44891 = defunc_1_op_res_44893;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44880)[sext_i32_i64(local_tid_44876)] =
                        x_44891;
                }
            }
            skip_waves_44896 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44876) == 0) {
                x_acc_44889 = x_44891;
            }
        }
        if (groups_per_segment_44866 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44876 == 0) {
                    ((__global float *) mem_43875)[gtid_35701 * N_28473 +
                                                   gtid_35702] = x_acc_44889;
                }
            }
        } else {
            int32_t old_counter_44897;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44876 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44871)[sext_i32_i64(virt_group_id_44886) *
                                                        segred_group_sizze_35758] =
                        x_acc_44889;
                    mem_fence_global();
                    old_counter_44897 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44873)[sext_i32_i64(srem32(flat_segment_id_44887,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44882)[0] =
                        old_counter_44897 == groups_per_segment_44866 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44898;
            
            is_last_group_44898 = ((__local bool *) sync_arr_mem_44882)[0];
            if (is_last_group_44898) {
                if (local_tid_44876 == 0) {
                    old_counter_44897 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44873)[sext_i32_i64(srem32(flat_segment_id_44887,
                                                                                                              10240))],
                                              (int) (0 -
                                                     groups_per_segment_44866));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44899 =
                            sdiv_up64(groups_per_segment_44866,
                                      segred_group_sizze_35758);
                    
                    x_35762 = 0.0F;
                    for (int64_t i_44900 = 0; i_44900 < read_per_thread_44899;
                         i_44900++) {
                        int64_t group_res_id_44901 =
                                sext_i32_i64(local_tid_44876) *
                                read_per_thread_44899 + i_44900;
                        int64_t index_of_group_res_44902 =
                                sext_i32_i64(flat_segment_id_44887) *
                                groups_per_segment_44866 + group_res_id_44901;
                        
                        if (slt64(group_res_id_44901,
                                  groups_per_segment_44866)) {
                            x_35763 = ((__global
                                        float *) group_res_arr_mem_44871)[index_of_group_res_44902 *
                                                                          segred_group_sizze_35758];
                            
                            float defunc_1_op_res_35764;
                            
                            defunc_1_op_res_35764 = x_35762 + x_35763;
                            x_35762 = defunc_1_op_res_35764;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44880)[sext_i32_i64(local_tid_44876)] =
                    x_35762;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44903;
                    int32_t skip_waves_44904;
                    
                    skip_waves_44904 = 1;
                    
                    float x_44891;
                    float x_44892;
                    
                    offset_44903 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44876,
                                  sext_i64_i32(segred_group_sizze_35758))) {
                            x_44891 = ((__local
                                        float *) red_arr_mem_44880)[sext_i32_i64(local_tid_44876 +
                                                                    offset_44903)];
                        }
                    }
                    offset_44903 = 1;
                    while (slt32(offset_44903, wave_sizze_44878)) {
                        if (slt32(local_tid_44876 + offset_44903,
                                  sext_i64_i32(segred_group_sizze_35758)) &&
                            ((local_tid_44876 - squot32(local_tid_44876,
                                                        wave_sizze_44878) *
                              wave_sizze_44878) & (2 * offset_44903 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44892 = ((volatile __local
                                            float *) red_arr_mem_44880)[sext_i32_i64(local_tid_44876 +
                                                                        offset_44903)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44893 = x_44891 + x_44892;
                                
                                x_44891 = defunc_1_op_res_44893;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44880)[sext_i32_i64(local_tid_44876)] =
                                    x_44891;
                            }
                        }
                        offset_44903 *= 2;
                    }
                    while (slt32(skip_waves_44904,
                                 squot32(sext_i64_i32(segred_group_sizze_35758) +
                                         wave_sizze_44878 - 1,
                                         wave_sizze_44878))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44903 = skip_waves_44904 * wave_sizze_44878;
                        if (slt32(local_tid_44876 + offset_44903,
                                  sext_i64_i32(segred_group_sizze_35758)) &&
                            ((local_tid_44876 - squot32(local_tid_44876,
                                                        wave_sizze_44878) *
                              wave_sizze_44878) == 0 &&
                             (squot32(local_tid_44876, wave_sizze_44878) & (2 *
                                                                            skip_waves_44904 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44892 = ((__local
                                            float *) red_arr_mem_44880)[sext_i32_i64(local_tid_44876 +
                                                                        offset_44903)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44893 = x_44891 + x_44892;
                                
                                x_44891 = defunc_1_op_res_44893;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44880)[sext_i32_i64(local_tid_44876)] =
                                    x_44891;
                            }
                        }
                        skip_waves_44904 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44876 == 0) {
                            ((__global float *) mem_43875)[gtid_35701 *
                                                           N_28473 +
                                                           gtid_35702] =
                                x_44891;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35758
}
__kernel void mainMagnitudezisegred_large_36278(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_45136_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_45134_backing_aligned_1,
                                                int64_t N_28473,
                                                int64_t i32_res_28487,
                                                int64_t num_groups_36325,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_43919,
                                                __global
                                                unsigned char *mem_43970,
                                                __global
                                                unsigned char *mem_43973,
                                                int64_t groups_per_segment_45120,
                                                int64_t elements_per_thread_45121,
                                                int64_t virt_num_groups_45122,
                                                int64_t threads_per_segment_45124,
                                                __global
                                                unsigned char *group_res_arr_mem_45125,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_45127)
{
    #define segred_group_sizze_36324 (mainMagnitudezisegred_group_sizze_36272)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45136_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45136_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45134_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45134_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45129;
    int32_t local_tid_45130;
    int64_t group_sizze_45133;
    int32_t wave_sizze_45132;
    int32_t group_tid_45131;
    
    global_tid_45129 = get_global_id(0);
    local_tid_45130 = get_local_id(0);
    group_sizze_45133 = get_local_size(0);
    wave_sizze_45132 = LOCKSTEP_WIDTH;
    group_tid_45131 = get_group_id(0);
    
    int32_t phys_tid_36278;
    
    phys_tid_36278 = global_tid_45129;
    
    __local char *red_arr_mem_45134;
    
    red_arr_mem_45134 = (__local char *) red_arr_mem_45134_backing_0;
    
    __local char *sync_arr_mem_45136;
    
    sync_arr_mem_45136 = (__local char *) sync_arr_mem_45136_backing_1;
    
    int32_t phys_group_id_45138;
    
    phys_group_id_45138 = get_group_id(0);
    for (int32_t i_45139 = 0; i_45139 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45122) - phys_group_id_45138,
                   sext_i64_i32(num_groups_36325)); i_45139++) {
        int32_t virt_group_id_45140 = phys_group_id_45138 + i_45139 *
                sext_i64_i32(num_groups_36325);
        int32_t flat_segment_id_45141 = squot32(virt_group_id_45140,
                                                sext_i64_i32(groups_per_segment_45120));
        int64_t global_tid_45142 = srem64(sext_i32_i64(virt_group_id_45140) *
                                          segred_group_sizze_36324 +
                                          sext_i32_i64(local_tid_45130),
                                          segred_group_sizze_36324 *
                                          groups_per_segment_45120);
        int64_t gtid_36269 = sext_i32_i64(flat_segment_id_45141);
        int64_t gtid_36277;
        float x_acc_45143;
        int64_t chunk_sizze_45144;
        
        chunk_sizze_45144 = smin64(elements_per_thread_45121,
                                   sdiv_up64(i32_res_28487 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45142)),
                                             threads_per_segment_45124));
        
        float x_36328;
        float x_36329;
        
        // neutral-initialise the accumulators
        {
            x_acc_45143 = 0.0F;
        }
        for (int64_t i_45148 = 0; i_45148 < chunk_sizze_45144; i_45148++) {
            gtid_36277 = sext_i32_i64(sext_i64_i32(global_tid_45142)) +
                threads_per_segment_45124 * i_45148;
            // apply map function
            {
                int32_t defunc_0_f_res_36332 = ((__global
                                                 int32_t *) mem_43970)[gtid_36269];
                int32_t index_primexp_41162 = sext_i64_i32(gtid_36277);
                bool cond_36334 = slt32(index_primexp_41162,
                                        defunc_0_f_res_36332);
                float defunc_0_f_res_36335;
                
                if (cond_36334) {
                    int64_t i_36336 = sext_i32_i64(index_primexp_41162);
                    float defunc_0_f_res_t_res_36337 = ((__global
                                                         float *) defunc_4_map_res_mem_43919)[gtid_36269 *
                                                                                              N_28473 +
                                                                                              i_36336];
                    
                    defunc_0_f_res_36335 = defunc_0_f_res_t_res_36337;
                } else {
                    defunc_0_f_res_36335 = 0.0F;
                }
                
                float defunc_0_f_res_36338 = defunc_0_f_res_36335 *
                      defunc_0_f_res_36335;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_36328 = x_acc_45143;
                }
                // load new values
                {
                    x_36329 = defunc_0_f_res_36338;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_36330 = x_36328 + x_36329;
                    
                    // store in accumulator
                    {
                        x_acc_45143 = defunc_1_op_res_36330;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_36328 = x_acc_45143;
            ((__local
              float *) red_arr_mem_45134)[sext_i32_i64(local_tid_45130)] =
                x_36328;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45149;
        int32_t skip_waves_45150;
        
        skip_waves_45150 = 1;
        
        float x_45145;
        float x_45146;
        
        offset_45149 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45130,
                      sext_i64_i32(segred_group_sizze_36324))) {
                x_45145 = ((__local
                            float *) red_arr_mem_45134)[sext_i32_i64(local_tid_45130 +
                                                        offset_45149)];
            }
        }
        offset_45149 = 1;
        while (slt32(offset_45149, wave_sizze_45132)) {
            if (slt32(local_tid_45130 + offset_45149,
                      sext_i64_i32(segred_group_sizze_36324)) &&
                ((local_tid_45130 - squot32(local_tid_45130, wave_sizze_45132) *
                  wave_sizze_45132) & (2 * offset_45149 - 1)) == 0) {
                // read array element
                {
                    x_45146 = ((volatile __local
                                float *) red_arr_mem_45134)[sext_i32_i64(local_tid_45130 +
                                                            offset_45149)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45147 = x_45145 + x_45146;
                    
                    x_45145 = defunc_1_op_res_45147;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45134)[sext_i32_i64(local_tid_45130)] =
                        x_45145;
                }
            }
            offset_45149 *= 2;
        }
        while (slt32(skip_waves_45150,
                     squot32(sext_i64_i32(segred_group_sizze_36324) +
                             wave_sizze_45132 - 1, wave_sizze_45132))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45149 = skip_waves_45150 * wave_sizze_45132;
            if (slt32(local_tid_45130 + offset_45149,
                      sext_i64_i32(segred_group_sizze_36324)) &&
                ((local_tid_45130 - squot32(local_tid_45130, wave_sizze_45132) *
                  wave_sizze_45132) == 0 && (squot32(local_tid_45130,
                                                     wave_sizze_45132) & (2 *
                                                                          skip_waves_45150 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45146 = ((__local
                                float *) red_arr_mem_45134)[sext_i32_i64(local_tid_45130 +
                                                            offset_45149)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45147 = x_45145 + x_45146;
                    
                    x_45145 = defunc_1_op_res_45147;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45134)[sext_i32_i64(local_tid_45130)] =
                        x_45145;
                }
            }
            skip_waves_45150 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45130) == 0) {
                x_acc_45143 = x_45145;
            }
        }
        if (groups_per_segment_45120 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45130 == 0) {
                    ((__global float *) mem_43973)[gtid_36269] = x_acc_45143;
                }
            }
        } else {
            int32_t old_counter_45151;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45130 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45125)[sext_i32_i64(virt_group_id_45140) *
                                                        segred_group_sizze_36324] =
                        x_acc_45143;
                    mem_fence_global();
                    old_counter_45151 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_45127)[sext_i32_i64(srem32(flat_segment_id_45141,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45136)[0] =
                        old_counter_45151 == groups_per_segment_45120 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45152;
            
            is_last_group_45152 = ((__local bool *) sync_arr_mem_45136)[0];
            if (is_last_group_45152) {
                if (local_tid_45130 == 0) {
                    old_counter_45151 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_45127)[sext_i32_i64(srem32(flat_segment_id_45141,
                                                                                                              10240))],
                                              (int) (0 -
                                                     groups_per_segment_45120));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45153 =
                            sdiv_up64(groups_per_segment_45120,
                                      segred_group_sizze_36324);
                    
                    x_36328 = 0.0F;
                    for (int64_t i_45154 = 0; i_45154 < read_per_thread_45153;
                         i_45154++) {
                        int64_t group_res_id_45155 =
                                sext_i32_i64(local_tid_45130) *
                                read_per_thread_45153 + i_45154;
                        int64_t index_of_group_res_45156 =
                                sext_i32_i64(flat_segment_id_45141) *
                                groups_per_segment_45120 + group_res_id_45155;
                        
                        if (slt64(group_res_id_45155,
                                  groups_per_segment_45120)) {
                            x_36329 = ((__global
                                        float *) group_res_arr_mem_45125)[index_of_group_res_45156 *
                                                                          segred_group_sizze_36324];
                            
                            float defunc_1_op_res_36330;
                            
                            defunc_1_op_res_36330 = x_36328 + x_36329;
                            x_36328 = defunc_1_op_res_36330;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45134)[sext_i32_i64(local_tid_45130)] =
                    x_36328;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45157;
                    int32_t skip_waves_45158;
                    
                    skip_waves_45158 = 1;
                    
                    float x_45145;
                    float x_45146;
                    
                    offset_45157 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45130,
                                  sext_i64_i32(segred_group_sizze_36324))) {
                            x_45145 = ((__local
                                        float *) red_arr_mem_45134)[sext_i32_i64(local_tid_45130 +
                                                                    offset_45157)];
                        }
                    }
                    offset_45157 = 1;
                    while (slt32(offset_45157, wave_sizze_45132)) {
                        if (slt32(local_tid_45130 + offset_45157,
                                  sext_i64_i32(segred_group_sizze_36324)) &&
                            ((local_tid_45130 - squot32(local_tid_45130,
                                                        wave_sizze_45132) *
                              wave_sizze_45132) & (2 * offset_45157 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45146 = ((volatile __local
                                            float *) red_arr_mem_45134)[sext_i32_i64(local_tid_45130 +
                                                                        offset_45157)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45147 = x_45145 + x_45146;
                                
                                x_45145 = defunc_1_op_res_45147;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45134)[sext_i32_i64(local_tid_45130)] =
                                    x_45145;
                            }
                        }
                        offset_45157 *= 2;
                    }
                    while (slt32(skip_waves_45158,
                                 squot32(sext_i64_i32(segred_group_sizze_36324) +
                                         wave_sizze_45132 - 1,
                                         wave_sizze_45132))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45157 = skip_waves_45158 * wave_sizze_45132;
                        if (slt32(local_tid_45130 + offset_45157,
                                  sext_i64_i32(segred_group_sizze_36324)) &&
                            ((local_tid_45130 - squot32(local_tid_45130,
                                                        wave_sizze_45132) *
                              wave_sizze_45132) == 0 &&
                             (squot32(local_tid_45130, wave_sizze_45132) & (2 *
                                                                            skip_waves_45158 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45146 = ((__local
                                            float *) red_arr_mem_45134)[sext_i32_i64(local_tid_45130 +
                                                                        offset_45157)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45147 = x_45145 + x_45146;
                                
                                x_45145 = defunc_1_op_res_45147;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45134)[sext_i32_i64(local_tid_45130)] =
                                    x_45145;
                            }
                        }
                        skip_waves_45158 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45130 == 0) {
                            ((__global float *) mem_43973)[gtid_36269] =
                                x_45145;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36324
}
__kernel void mainMagnitudezisegred_large_36299(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_45076_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_45074_backing_aligned_1,
                                                int64_t N_28475,
                                                int64_t i32_res_28487,
                                                int64_t num_groups_36311,
                                                __global
                                                unsigned char *images_mem_43123,
                                                __global
                                                unsigned char *mem_43970,
                                                int64_t groups_per_segment_45060,
                                                int64_t elements_per_thread_45061,
                                                int64_t virt_num_groups_45062,
                                                int64_t threads_per_segment_45064,
                                                __global
                                                unsigned char *group_res_arr_mem_45065,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_45067)
{
    #define segred_group_sizze_36310 (mainMagnitudezisegred_group_sizze_36293)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45076_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45076_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45074_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45074_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45069;
    int32_t local_tid_45070;
    int64_t group_sizze_45073;
    int32_t wave_sizze_45072;
    int32_t group_tid_45071;
    
    global_tid_45069 = get_global_id(0);
    local_tid_45070 = get_local_id(0);
    group_sizze_45073 = get_local_size(0);
    wave_sizze_45072 = LOCKSTEP_WIDTH;
    group_tid_45071 = get_group_id(0);
    
    int32_t phys_tid_36299;
    
    phys_tid_36299 = global_tid_45069;
    
    __local char *red_arr_mem_45074;
    
    red_arr_mem_45074 = (__local char *) red_arr_mem_45074_backing_0;
    
    __local char *sync_arr_mem_45076;
    
    sync_arr_mem_45076 = (__local char *) sync_arr_mem_45076_backing_1;
    
    int32_t phys_group_id_45078;
    
    phys_group_id_45078 = get_group_id(0);
    for (int32_t i_45079 = 0; i_45079 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45062) - phys_group_id_45078,
                   sext_i64_i32(num_groups_36311)); i_45079++) {
        int32_t virt_group_id_45080 = phys_group_id_45078 + i_45079 *
                sext_i64_i32(num_groups_36311);
        int32_t flat_segment_id_45081 = squot32(virt_group_id_45080,
                                                sext_i64_i32(groups_per_segment_45060));
        int64_t global_tid_45082 = srem64(sext_i32_i64(virt_group_id_45080) *
                                          segred_group_sizze_36310 +
                                          sext_i32_i64(local_tid_45070),
                                          segred_group_sizze_36310 *
                                          groups_per_segment_45060);
        int64_t gtid_36290 = sext_i32_i64(flat_segment_id_45081);
        int64_t gtid_36298;
        int32_t x_acc_45083;
        int64_t chunk_sizze_45084;
        
        chunk_sizze_45084 = smin64(elements_per_thread_45061,
                                   sdiv_up64(i32_res_28487 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45082)),
                                             threads_per_segment_45064));
        
        int32_t x_36314;
        int32_t x_36315;
        
        // neutral-initialise the accumulators
        {
            x_acc_45083 = 0;
        }
        for (int64_t i_45088 = 0; i_45088 < chunk_sizze_45084; i_45088++) {
            gtid_36298 = sext_i32_i64(sext_i64_i32(global_tid_45082)) +
                threads_per_segment_45064 * i_45088;
            // apply map function
            {
                float x_36318 = ((__global
                                  float *) images_mem_43123)[gtid_36290 *
                                                             N_28475 +
                                                             gtid_36298];
                bool isnan_res_36319;
                
                isnan_res_36319 = futrts_isnan32(x_36318);
                
                bool cond_36320 = !isnan_res_36319;
                int32_t defunc_0_f_res_36321 = btoi_bool_i32(cond_36320);
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_36314 = x_acc_45083;
                }
                // load new values
                {
                    x_36315 = defunc_0_f_res_36321;
                }
                // apply reduction operator
                {
                    int32_t defunc_1_op_res_36316 = add32(x_36314, x_36315);
                    
                    // store in accumulator
                    {
                        x_acc_45083 = defunc_1_op_res_36316;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_36314 = x_acc_45083;
            ((__local
              int32_t *) red_arr_mem_45074)[sext_i32_i64(local_tid_45070)] =
                x_36314;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45089;
        int32_t skip_waves_45090;
        
        skip_waves_45090 = 1;
        
        int32_t x_45085;
        int32_t x_45086;
        
        offset_45089 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45070,
                      sext_i64_i32(segred_group_sizze_36310))) {
                x_45085 = ((__local
                            int32_t *) red_arr_mem_45074)[sext_i32_i64(local_tid_45070 +
                                                          offset_45089)];
            }
        }
        offset_45089 = 1;
        while (slt32(offset_45089, wave_sizze_45072)) {
            if (slt32(local_tid_45070 + offset_45089,
                      sext_i64_i32(segred_group_sizze_36310)) &&
                ((local_tid_45070 - squot32(local_tid_45070, wave_sizze_45072) *
                  wave_sizze_45072) & (2 * offset_45089 - 1)) == 0) {
                // read array element
                {
                    x_45086 = ((volatile __local
                                int32_t *) red_arr_mem_45074)[sext_i32_i64(local_tid_45070 +
                                                              offset_45089)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_45087 = add32(x_45085, x_45086);
                    
                    x_45085 = defunc_1_op_res_45087;
                }
                // write result of operation
                {
                    ((volatile __local
                      int32_t *) red_arr_mem_45074)[sext_i32_i64(local_tid_45070)] =
                        x_45085;
                }
            }
            offset_45089 *= 2;
        }
        while (slt32(skip_waves_45090,
                     squot32(sext_i64_i32(segred_group_sizze_36310) +
                             wave_sizze_45072 - 1, wave_sizze_45072))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45089 = skip_waves_45090 * wave_sizze_45072;
            if (slt32(local_tid_45070 + offset_45089,
                      sext_i64_i32(segred_group_sizze_36310)) &&
                ((local_tid_45070 - squot32(local_tid_45070, wave_sizze_45072) *
                  wave_sizze_45072) == 0 && (squot32(local_tid_45070,
                                                     wave_sizze_45072) & (2 *
                                                                          skip_waves_45090 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45086 = ((__local
                                int32_t *) red_arr_mem_45074)[sext_i32_i64(local_tid_45070 +
                                                              offset_45089)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_45087 = add32(x_45085, x_45086);
                    
                    x_45085 = defunc_1_op_res_45087;
                }
                // write result of operation
                {
                    ((__local
                      int32_t *) red_arr_mem_45074)[sext_i32_i64(local_tid_45070)] =
                        x_45085;
                }
            }
            skip_waves_45090 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45070) == 0) {
                x_acc_45083 = x_45085;
            }
        }
        if (groups_per_segment_45060 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45070 == 0) {
                    ((__global int32_t *) mem_43970)[gtid_36290] = x_acc_45083;
                }
            }
        } else {
            int32_t old_counter_45091;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45070 == 0) {
                    ((__global
                      int32_t *) group_res_arr_mem_45065)[sext_i32_i64(virt_group_id_45080) *
                                                          segred_group_sizze_36310] =
                        x_acc_45083;
                    mem_fence_global();
                    old_counter_45091 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_45067)[sext_i32_i64(srem32(flat_segment_id_45081,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45076)[0] =
                        old_counter_45091 == groups_per_segment_45060 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45092;
            
            is_last_group_45092 = ((__local bool *) sync_arr_mem_45076)[0];
            if (is_last_group_45092) {
                if (local_tid_45070 == 0) {
                    old_counter_45091 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_45067)[sext_i32_i64(srem32(flat_segment_id_45081,
                                                                                                              10240))],
                                              (int) (0 -
                                                     groups_per_segment_45060));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45093 =
                            sdiv_up64(groups_per_segment_45060,
                                      segred_group_sizze_36310);
                    
                    x_36314 = 0;
                    for (int64_t i_45094 = 0; i_45094 < read_per_thread_45093;
                         i_45094++) {
                        int64_t group_res_id_45095 =
                                sext_i32_i64(local_tid_45070) *
                                read_per_thread_45093 + i_45094;
                        int64_t index_of_group_res_45096 =
                                sext_i32_i64(flat_segment_id_45081) *
                                groups_per_segment_45060 + group_res_id_45095;
                        
                        if (slt64(group_res_id_45095,
                                  groups_per_segment_45060)) {
                            x_36315 = ((__global
                                        int32_t *) group_res_arr_mem_45065)[index_of_group_res_45096 *
                                                                            segred_group_sizze_36310];
                            
                            int32_t defunc_1_op_res_36316;
                            
                            defunc_1_op_res_36316 = add32(x_36314, x_36315);
                            x_36314 = defunc_1_op_res_36316;
                        }
                    }
                }
                ((__local
                  int32_t *) red_arr_mem_45074)[sext_i32_i64(local_tid_45070)] =
                    x_36314;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45097;
                    int32_t skip_waves_45098;
                    
                    skip_waves_45098 = 1;
                    
                    int32_t x_45085;
                    int32_t x_45086;
                    
                    offset_45097 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45070,
                                  sext_i64_i32(segred_group_sizze_36310))) {
                            x_45085 = ((__local
                                        int32_t *) red_arr_mem_45074)[sext_i32_i64(local_tid_45070 +
                                                                      offset_45097)];
                        }
                    }
                    offset_45097 = 1;
                    while (slt32(offset_45097, wave_sizze_45072)) {
                        if (slt32(local_tid_45070 + offset_45097,
                                  sext_i64_i32(segred_group_sizze_36310)) &&
                            ((local_tid_45070 - squot32(local_tid_45070,
                                                        wave_sizze_45072) *
                              wave_sizze_45072) & (2 * offset_45097 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45086 = ((volatile __local
                                            int32_t *) red_arr_mem_45074)[sext_i32_i64(local_tid_45070 +
                                                                          offset_45097)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_45087 = add32(x_45085,
                                                                      x_45086);
                                
                                x_45085 = defunc_1_op_res_45087;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_45074)[sext_i32_i64(local_tid_45070)] =
                                    x_45085;
                            }
                        }
                        offset_45097 *= 2;
                    }
                    while (slt32(skip_waves_45098,
                                 squot32(sext_i64_i32(segred_group_sizze_36310) +
                                         wave_sizze_45072 - 1,
                                         wave_sizze_45072))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45097 = skip_waves_45098 * wave_sizze_45072;
                        if (slt32(local_tid_45070 + offset_45097,
                                  sext_i64_i32(segred_group_sizze_36310)) &&
                            ((local_tid_45070 - squot32(local_tid_45070,
                                                        wave_sizze_45072) *
                              wave_sizze_45072) == 0 &&
                             (squot32(local_tid_45070, wave_sizze_45072) & (2 *
                                                                            skip_waves_45098 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45086 = ((__local
                                            int32_t *) red_arr_mem_45074)[sext_i32_i64(local_tid_45070 +
                                                                          offset_45097)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_45087 = add32(x_45085,
                                                                      x_45086);
                                
                                x_45085 = defunc_1_op_res_45087;
                            }
                            // write result of operation
                            {
                                ((__local
                                  int32_t *) red_arr_mem_45074)[sext_i32_i64(local_tid_45070)] =
                                    x_45085;
                            }
                        }
                        skip_waves_45098 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45070 == 0) {
                            ((__global int32_t *) mem_43970)[gtid_36290] =
                                x_45085;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36310
}
__kernel void mainMagnitudezisegred_large_36450(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_45245_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_45243_backing_aligned_1,
                                                int64_t N_28473,
                                                int64_t i32_res_28848,
                                                int64_t num_groups_36468,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_43919,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43982,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43983,
                                                __global
                                                unsigned char *mem_44016,
                                                int64_t groups_per_segment_45229,
                                                int64_t elements_per_thread_45230,
                                                int64_t virt_num_groups_45231,
                                                int64_t threads_per_segment_45233,
                                                __global
                                                unsigned char *group_res_arr_mem_45234,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_45236)
{
    #define segred_group_sizze_36467 (mainMagnitudezisegred_group_sizze_36444)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45245_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_45245_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45243_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45243_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45238;
    int32_t local_tid_45239;
    int64_t group_sizze_45242;
    int32_t wave_sizze_45241;
    int32_t group_tid_45240;
    
    global_tid_45238 = get_global_id(0);
    local_tid_45239 = get_local_id(0);
    group_sizze_45242 = get_local_size(0);
    wave_sizze_45241 = LOCKSTEP_WIDTH;
    group_tid_45240 = get_group_id(0);
    
    int32_t phys_tid_36450;
    
    phys_tid_36450 = global_tid_45238;
    
    __local char *red_arr_mem_45243;
    
    red_arr_mem_45243 = (__local char *) red_arr_mem_45243_backing_0;
    
    __local char *sync_arr_mem_45245;
    
    sync_arr_mem_45245 = (__local char *) sync_arr_mem_45245_backing_1;
    
    int32_t phys_group_id_45247;
    
    phys_group_id_45247 = get_group_id(0);
    for (int32_t i_45248 = 0; i_45248 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45231) - phys_group_id_45247,
                   sext_i64_i32(num_groups_36468)); i_45248++) {
        int32_t virt_group_id_45249 = phys_group_id_45247 + i_45248 *
                sext_i64_i32(num_groups_36468);
        int32_t flat_segment_id_45250 = squot32(virt_group_id_45249,
                                                sext_i64_i32(groups_per_segment_45229));
        int64_t global_tid_45251 = srem64(sext_i32_i64(virt_group_id_45249) *
                                          segred_group_sizze_36467 +
                                          sext_i32_i64(local_tid_45239),
                                          segred_group_sizze_36467 *
                                          groups_per_segment_45229);
        int64_t gtid_36441 = sext_i32_i64(flat_segment_id_45250);
        int64_t gtid_36449;
        float x_acc_45252;
        int64_t chunk_sizze_45253;
        
        chunk_sizze_45253 = smin64(elements_per_thread_45230,
                                   sdiv_up64(i32_res_28848 -
                                             sext_i32_i64(sext_i64_i32(global_tid_45251)),
                                             threads_per_segment_45233));
        
        float x_36471;
        float x_36472;
        
        // neutral-initialise the accumulators
        {
            x_acc_45252 = 0.0F;
        }
        for (int64_t i_45257 = 0; i_45257 < chunk_sizze_45253; i_45257++) {
            gtid_36449 = sext_i32_i64(sext_i64_i32(global_tid_45251)) +
                threads_per_segment_45233 * i_45257;
            // apply map function
            {
                int32_t x_36476 = ((__global
                                    int32_t *) defunc_3_map_res_mem_43982)[gtid_36441];
                int32_t index_primexp_41167 = sext_i64_i32(gtid_36449);
                bool cond_36478 = slt32(index_primexp_41167, x_36476);
                float defunc_0_f_res_36479;
                
                if (cond_36478) {
                    int32_t x_36475 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43983)[gtid_36441];
                    int32_t x_36480 = add32(x_36475, index_primexp_41167);
                    int32_t x_36481 = sub32(x_36480, x_36476);
                    int32_t i_36482 = add32(1, x_36481);
                    int64_t i_36483 = sext_i32_i64(i_36482);
                    float defunc_0_f_res_t_res_36484 = ((__global
                                                         float *) defunc_4_map_res_mem_43919)[gtid_36441 *
                                                                                              N_28473 +
                                                                                              i_36483];
                    
                    defunc_0_f_res_36479 = defunc_0_f_res_t_res_36484;
                } else {
                    defunc_0_f_res_36479 = 0.0F;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_36471 = x_acc_45252;
                }
                // load new values
                {
                    x_36472 = defunc_0_f_res_36479;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_36473 = x_36471 + x_36472;
                    
                    // store in accumulator
                    {
                        x_acc_45252 = defunc_1_op_res_36473;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_36471 = x_acc_45252;
            ((__local
              float *) red_arr_mem_45243)[sext_i32_i64(local_tid_45239)] =
                x_36471;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_45258;
        int32_t skip_waves_45259;
        
        skip_waves_45259 = 1;
        
        float x_45254;
        float x_45255;
        
        offset_45258 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_45239,
                      sext_i64_i32(segred_group_sizze_36467))) {
                x_45254 = ((__local
                            float *) red_arr_mem_45243)[sext_i32_i64(local_tid_45239 +
                                                        offset_45258)];
            }
        }
        offset_45258 = 1;
        while (slt32(offset_45258, wave_sizze_45241)) {
            if (slt32(local_tid_45239 + offset_45258,
                      sext_i64_i32(segred_group_sizze_36467)) &&
                ((local_tid_45239 - squot32(local_tid_45239, wave_sizze_45241) *
                  wave_sizze_45241) & (2 * offset_45258 - 1)) == 0) {
                // read array element
                {
                    x_45255 = ((volatile __local
                                float *) red_arr_mem_45243)[sext_i32_i64(local_tid_45239 +
                                                            offset_45258)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45256 = x_45254 + x_45255;
                    
                    x_45254 = defunc_1_op_res_45256;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_45243)[sext_i32_i64(local_tid_45239)] =
                        x_45254;
                }
            }
            offset_45258 *= 2;
        }
        while (slt32(skip_waves_45259,
                     squot32(sext_i64_i32(segred_group_sizze_36467) +
                             wave_sizze_45241 - 1, wave_sizze_45241))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_45258 = skip_waves_45259 * wave_sizze_45241;
            if (slt32(local_tid_45239 + offset_45258,
                      sext_i64_i32(segred_group_sizze_36467)) &&
                ((local_tid_45239 - squot32(local_tid_45239, wave_sizze_45241) *
                  wave_sizze_45241) == 0 && (squot32(local_tid_45239,
                                                     wave_sizze_45241) & (2 *
                                                                          skip_waves_45259 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_45255 = ((__local
                                float *) red_arr_mem_45243)[sext_i32_i64(local_tid_45239 +
                                                            offset_45258)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_45256 = x_45254 + x_45255;
                    
                    x_45254 = defunc_1_op_res_45256;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_45243)[sext_i32_i64(local_tid_45239)] =
                        x_45254;
                }
            }
            skip_waves_45259 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_45239) == 0) {
                x_acc_45252 = x_45254;
            }
        }
        if (groups_per_segment_45229 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45239 == 0) {
                    ((__global float *) mem_44016)[gtid_36441] = x_acc_45252;
                }
            }
        } else {
            int32_t old_counter_45260;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45239 == 0) {
                    ((__global
                      float *) group_res_arr_mem_45234)[sext_i32_i64(virt_group_id_45249) *
                                                        segred_group_sizze_36467] =
                        x_acc_45252;
                    mem_fence_global();
                    old_counter_45260 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_45236)[sext_i32_i64(srem32(flat_segment_id_45250,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45245)[0] =
                        old_counter_45260 == groups_per_segment_45229 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45261;
            
            is_last_group_45261 = ((__local bool *) sync_arr_mem_45245)[0];
            if (is_last_group_45261) {
                if (local_tid_45239 == 0) {
                    old_counter_45260 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_45236)[sext_i32_i64(srem32(flat_segment_id_45250,
                                                                                                              10240))],
                                              (int) (0 -
                                                     groups_per_segment_45229));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45262 =
                            sdiv_up64(groups_per_segment_45229,
                                      segred_group_sizze_36467);
                    
                    x_36471 = 0.0F;
                    for (int64_t i_45263 = 0; i_45263 < read_per_thread_45262;
                         i_45263++) {
                        int64_t group_res_id_45264 =
                                sext_i32_i64(local_tid_45239) *
                                read_per_thread_45262 + i_45263;
                        int64_t index_of_group_res_45265 =
                                sext_i32_i64(flat_segment_id_45250) *
                                groups_per_segment_45229 + group_res_id_45264;
                        
                        if (slt64(group_res_id_45264,
                                  groups_per_segment_45229)) {
                            x_36472 = ((__global
                                        float *) group_res_arr_mem_45234)[index_of_group_res_45265 *
                                                                          segred_group_sizze_36467];
                            
                            float defunc_1_op_res_36473;
                            
                            defunc_1_op_res_36473 = x_36471 + x_36472;
                            x_36471 = defunc_1_op_res_36473;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_45243)[sext_i32_i64(local_tid_45239)] =
                    x_36471;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45266;
                    int32_t skip_waves_45267;
                    
                    skip_waves_45267 = 1;
                    
                    float x_45254;
                    float x_45255;
                    
                    offset_45266 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45239,
                                  sext_i64_i32(segred_group_sizze_36467))) {
                            x_45254 = ((__local
                                        float *) red_arr_mem_45243)[sext_i32_i64(local_tid_45239 +
                                                                    offset_45266)];
                        }
                    }
                    offset_45266 = 1;
                    while (slt32(offset_45266, wave_sizze_45241)) {
                        if (slt32(local_tid_45239 + offset_45266,
                                  sext_i64_i32(segred_group_sizze_36467)) &&
                            ((local_tid_45239 - squot32(local_tid_45239,
                                                        wave_sizze_45241) *
                              wave_sizze_45241) & (2 * offset_45266 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45255 = ((volatile __local
                                            float *) red_arr_mem_45243)[sext_i32_i64(local_tid_45239 +
                                                                        offset_45266)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45256 = x_45254 + x_45255;
                                
                                x_45254 = defunc_1_op_res_45256;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45243)[sext_i32_i64(local_tid_45239)] =
                                    x_45254;
                            }
                        }
                        offset_45266 *= 2;
                    }
                    while (slt32(skip_waves_45267,
                                 squot32(sext_i64_i32(segred_group_sizze_36467) +
                                         wave_sizze_45241 - 1,
                                         wave_sizze_45241))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45266 = skip_waves_45267 * wave_sizze_45241;
                        if (slt32(local_tid_45239 + offset_45266,
                                  sext_i64_i32(segred_group_sizze_36467)) &&
                            ((local_tid_45239 - squot32(local_tid_45239,
                                                        wave_sizze_45241) *
                              wave_sizze_45241) == 0 &&
                             (squot32(local_tid_45239, wave_sizze_45241) & (2 *
                                                                            skip_waves_45267 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45255 = ((__local
                                            float *) red_arr_mem_45243)[sext_i32_i64(local_tid_45239 +
                                                                        offset_45266)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_45256 = x_45254 + x_45255;
                                
                                x_45254 = defunc_1_op_res_45256;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_45243)[sext_i32_i64(local_tid_45239)] =
                                    x_45254;
                            }
                        }
                        skip_waves_45267 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45239 == 0) {
                            ((__global float *) mem_44016)[gtid_36441] =
                                x_45254;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36467
}
__kernel void mainMagnitudezisegred_large_37509(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_45446_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_45444_backing_aligned_1,
                                                __local volatile
                                                int64_t *red_arr_mem_45442_backing_aligned_2,
                                                __local volatile
                                                int64_t *red_arr_mem_45440_backing_aligned_3,
                                                int64_t iota32_arg_28873,
                                                int64_t num_groups_37680,
                                                __global
                                                unsigned char *mem_44022,
                                                __global
                                                unsigned char *mem_44075,
                                                __global
                                                unsigned char *mem_44077,
                                                __global
                                                unsigned char *mem_44081,
                                                __global
                                                unsigned char *mem_44084,
                                                __global
                                                unsigned char *mem_44086,
                                                __global
                                                unsigned char *mem_44088,
                                                int64_t groups_per_segment_45422,
                                                int64_t elements_per_thread_45423,
                                                int64_t virt_num_groups_45424,
                                                __global
                                                unsigned char *group_res_arr_mem_45427,
                                                __global
                                                unsigned char *group_res_arr_mem_45429,
                                                __global
                                                unsigned char *group_res_arr_mem_45431,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_45433)
{
    #define segred_group_sizze_37679 (mainMagnitudezisegred_group_sizze_37503)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45446_backing_3 =
                          (__local volatile
                           char *) sync_arr_mem_45446_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45444_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45444_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45442_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45442_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_45440_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45440_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45435;
    int32_t local_tid_45436;
    int64_t group_sizze_45439;
    int32_t wave_sizze_45438;
    int32_t group_tid_45437;
    
    global_tid_45435 = get_global_id(0);
    local_tid_45436 = get_local_id(0);
    group_sizze_45439 = get_local_size(0);
    wave_sizze_45438 = LOCKSTEP_WIDTH;
    group_tid_45437 = get_group_id(0);
    
    int32_t phys_tid_37509;
    
    phys_tid_37509 = global_tid_45435;
    
    __local char *red_arr_mem_45440;
    
    red_arr_mem_45440 = (__local char *) red_arr_mem_45440_backing_0;
    
    __local char *red_arr_mem_45442;
    
    red_arr_mem_45442 = (__local char *) red_arr_mem_45442_backing_1;
    
    __local char *red_arr_mem_45444;
    
    red_arr_mem_45444 = (__local char *) red_arr_mem_45444_backing_2;
    
    __local char *sync_arr_mem_45446;
    
    sync_arr_mem_45446 = (__local char *) sync_arr_mem_45446_backing_3;
    
    int32_t phys_group_id_45448;
    
    phys_group_id_45448 = get_group_id(0);
    for (int32_t i_45449 = 0; i_45449 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45424) - phys_group_id_45448,
                   sext_i64_i32(num_groups_37680)); i_45449++) {
        int32_t virt_group_id_45450 = phys_group_id_45448 + i_45449 *
                sext_i64_i32(num_groups_37680);
        int32_t flat_segment_id_45451 = squot32(virt_group_id_45450,
                                                sext_i64_i32(groups_per_segment_45422));
        int64_t global_tid_45452 = srem64(sext_i32_i64(virt_group_id_45450) *
                                          segred_group_sizze_37679 +
                                          sext_i32_i64(local_tid_45436),
                                          segred_group_sizze_37679 *
                                          groups_per_segment_45422);
        int64_t gtid_37500 = sext_i32_i64(flat_segment_id_45451);
        int64_t gtid_37508;
        bool x_acc_45453;
        int32_t x_acc_45454;
        float x_acc_45455;
        int64_t chunk_sizze_45456;
        int64_t starting_point_45457;
        
        starting_point_45457 = sext_i32_i64(sext_i64_i32(global_tid_45452)) *
            elements_per_thread_45423;
        
        int64_t remaining_elements_45458;
        
        remaining_elements_45458 = iota32_arg_28873 - starting_point_45457;
        if (sle64(remaining_elements_45458, 0) || sle64(iota32_arg_28873,
                                                        starting_point_45457)) {
            chunk_sizze_45456 = 0;
        } else {
            if (slt64(iota32_arg_28873,
                      (sext_i32_i64(sext_i64_i32(global_tid_45452)) + 1) *
                      elements_per_thread_45423)) {
                chunk_sizze_45456 = iota32_arg_28873 -
                    sext_i32_i64(sext_i64_i32(global_tid_45452)) *
                    elements_per_thread_45423;
            } else {
                chunk_sizze_45456 = elements_per_thread_45423;
            }
        }
        
        bool x_37685;
        int32_t x_37686;
        float x_37687;
        bool x_37688;
        int32_t x_37689;
        float x_37690;
        
        // neutral-initialise the accumulators
        {
            x_acc_45453 = 0;
            x_acc_45454 = -1;
            x_acc_45455 = 0.0F;
        }
        for (int64_t i_45473 = 0; i_45473 < elements_per_thread_45423;
             i_45473++) {
            gtid_37508 = sext_i32_i64(local_tid_45436) +
                (sext_i32_i64(squot32(sext_i64_i32(global_tid_45452),
                                      sext_i64_i32(segred_group_sizze_37679))) *
                 elements_per_thread_45423 + i_45473) *
                segred_group_sizze_37679;
            if (slt64(gtid_37508, iota32_arg_28873)) {
                // apply map function
                {
                    int32_t y_37699 = ((__global
                                        int32_t *) mem_44077)[gtid_37500];
                    float y_37700 = ((__global float *) mem_44075)[gtid_37500];
                    float x_37704 = ((__global float *) mem_44081)[gtid_37500 *
                                                                   iota32_arg_28873 +
                                                                   gtid_37508];
                    float x_37705 = ((__global float *) mem_44022)[gtid_37508];
                    int32_t index_primexp_41186 = sext_i64_i32(gtid_37508);
                    float defunc_0_f_res_37708 = x_37704 / y_37700;
                    bool cond_37709 = slt32(index_primexp_41186, y_37699);
                    bool isnan_res_37710;
                    
                    isnan_res_37710 = futrts_isnan32(defunc_0_f_res_37708);
                    
                    bool cond_t_res_37711 = !isnan_res_37710;
                    bool x_37712 = cond_37709 && cond_t_res_37711;
                    float abs_res_37713 = (float) fabs(defunc_0_f_res_37708);
                    bool defunc_2_f_res_t_res_37714 = x_37705 < abs_res_37713;
                    bool x_37715 = x_37712 && defunc_2_f_res_t_res_37714;
                    float defunc_1_f_res_37716;
                    
                    if (cond_37709) {
                        defunc_1_f_res_37716 = defunc_0_f_res_37708;
                    } else {
                        defunc_1_f_res_37716 = 0.0F;
                    }
                    // save map-out results
                    { }
                    // load accumulator
                    {
                        x_37685 = x_acc_45453;
                        x_37686 = x_acc_45454;
                        x_37687 = x_acc_45455;
                    }
                    // load new values
                    {
                        x_37688 = x_37715;
                        x_37689 = index_primexp_41186;
                        x_37690 = defunc_1_f_res_37716;
                    }
                    // apply reduction operator
                    {
                        bool defunc_1_op_res_37691;
                        int32_t defunc_1_op_res_37692;
                        
                        if (x_37685) {
                            defunc_1_op_res_37691 = x_37685;
                            defunc_1_op_res_37692 = x_37686;
                        } else {
                            bool x_37693 = x_37688 && x_37688;
                            bool x_37694 = !x_37688;
                            bool y_37695 = x_37685 && x_37694;
                            bool defunc_1_op_res_f_res_37696 = x_37693 ||
                                 y_37695;
                            int32_t defunc_1_op_res_f_res_37697;
                            
                            if (x_37688) {
                                defunc_1_op_res_f_res_37697 = x_37689;
                            } else {
                                defunc_1_op_res_f_res_37697 = x_37686;
                            }
                            defunc_1_op_res_37691 = defunc_1_op_res_f_res_37696;
                            defunc_1_op_res_37692 = defunc_1_op_res_f_res_37697;
                        }
                        
                        float defunc_1_op_res_37698 = x_37687 + x_37690;
                        
                        // store in accumulator
                        {
                            x_acc_45453 = defunc_1_op_res_37691;
                            x_acc_45454 = defunc_1_op_res_37692;
                            x_acc_45455 = defunc_1_op_res_37698;
                        }
                    }
                }
            }
            // to reduce current chunk, first store our result in memory
            {
                x_37685 = x_acc_45453;
                x_37686 = x_acc_45454;
                x_37687 = x_acc_45455;
                ((__local
                  bool *) red_arr_mem_45440)[sext_i32_i64(local_tid_45436)] =
                    x_37685;
                ((__local
                  int32_t *) red_arr_mem_45442)[sext_i32_i64(local_tid_45436)] =
                    x_37686;
                ((__local
                  float *) red_arr_mem_45444)[sext_i32_i64(local_tid_45436)] =
                    x_37687;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t offset_45474;
            int32_t skip_waves_45475;
            
            skip_waves_45475 = 1;
            
            bool x_45459;
            int32_t x_45460;
            float x_45461;
            bool x_45462;
            int32_t x_45463;
            float x_45464;
            
            offset_45474 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_45436,
                          sext_i64_i32(segred_group_sizze_37679))) {
                    x_45459 = ((__local
                                bool *) red_arr_mem_45440)[sext_i32_i64(local_tid_45436 +
                                                           offset_45474)];
                    x_45460 = ((__local
                                int32_t *) red_arr_mem_45442)[sext_i32_i64(local_tid_45436 +
                                                              offset_45474)];
                    x_45461 = ((__local
                                float *) red_arr_mem_45444)[sext_i32_i64(local_tid_45436 +
                                                            offset_45474)];
                }
            }
            offset_45474 = 1;
            while (slt32(offset_45474, wave_sizze_45438)) {
                if (slt32(local_tid_45436 + offset_45474,
                          sext_i64_i32(segred_group_sizze_37679)) &&
                    ((local_tid_45436 - squot32(local_tid_45436,
                                                wave_sizze_45438) *
                      wave_sizze_45438) & (2 * offset_45474 - 1)) == 0) {
                    // read array element
                    {
                        x_45462 = ((volatile __local
                                    bool *) red_arr_mem_45440)[sext_i32_i64(local_tid_45436 +
                                                               offset_45474)];
                        x_45463 = ((volatile __local
                                    int32_t *) red_arr_mem_45442)[sext_i32_i64(local_tid_45436 +
                                                                  offset_45474)];
                        x_45464 = ((volatile __local
                                    float *) red_arr_mem_45444)[sext_i32_i64(local_tid_45436 +
                                                                offset_45474)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_45465;
                        int32_t defunc_1_op_res_45466;
                        
                        if (x_45459) {
                            defunc_1_op_res_45465 = x_45459;
                            defunc_1_op_res_45466 = x_45460;
                        } else {
                            bool x_45467 = x_45462 && x_45462;
                            bool x_45468 = !x_45462;
                            bool y_45469 = x_45459 && x_45468;
                            bool defunc_1_op_res_f_res_45470 = x_45467 ||
                                 y_45469;
                            int32_t defunc_1_op_res_f_res_45471;
                            
                            if (x_45462) {
                                defunc_1_op_res_f_res_45471 = x_45463;
                            } else {
                                defunc_1_op_res_f_res_45471 = x_45460;
                            }
                            defunc_1_op_res_45465 = defunc_1_op_res_f_res_45470;
                            defunc_1_op_res_45466 = defunc_1_op_res_f_res_45471;
                        }
                        
                        float defunc_1_op_res_45472 = x_45461 + x_45464;
                        
                        x_45459 = defunc_1_op_res_45465;
                        x_45460 = defunc_1_op_res_45466;
                        x_45461 = defunc_1_op_res_45472;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          bool *) red_arr_mem_45440)[sext_i32_i64(local_tid_45436)] =
                            x_45459;
                        ((volatile __local
                          int32_t *) red_arr_mem_45442)[sext_i32_i64(local_tid_45436)] =
                            x_45460;
                        ((volatile __local
                          float *) red_arr_mem_45444)[sext_i32_i64(local_tid_45436)] =
                            x_45461;
                    }
                }
                offset_45474 *= 2;
            }
            while (slt32(skip_waves_45475,
                         squot32(sext_i64_i32(segred_group_sizze_37679) +
                                 wave_sizze_45438 - 1, wave_sizze_45438))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_45474 = skip_waves_45475 * wave_sizze_45438;
                if (slt32(local_tid_45436 + offset_45474,
                          sext_i64_i32(segred_group_sizze_37679)) &&
                    ((local_tid_45436 - squot32(local_tid_45436,
                                                wave_sizze_45438) *
                      wave_sizze_45438) == 0 && (squot32(local_tid_45436,
                                                         wave_sizze_45438) &
                                                 (2 * skip_waves_45475 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_45462 = ((__local
                                    bool *) red_arr_mem_45440)[sext_i32_i64(local_tid_45436 +
                                                               offset_45474)];
                        x_45463 = ((__local
                                    int32_t *) red_arr_mem_45442)[sext_i32_i64(local_tid_45436 +
                                                                  offset_45474)];
                        x_45464 = ((__local
                                    float *) red_arr_mem_45444)[sext_i32_i64(local_tid_45436 +
                                                                offset_45474)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_45465;
                        int32_t defunc_1_op_res_45466;
                        
                        if (x_45459) {
                            defunc_1_op_res_45465 = x_45459;
                            defunc_1_op_res_45466 = x_45460;
                        } else {
                            bool x_45467 = x_45462 && x_45462;
                            bool x_45468 = !x_45462;
                            bool y_45469 = x_45459 && x_45468;
                            bool defunc_1_op_res_f_res_45470 = x_45467 ||
                                 y_45469;
                            int32_t defunc_1_op_res_f_res_45471;
                            
                            if (x_45462) {
                                defunc_1_op_res_f_res_45471 = x_45463;
                            } else {
                                defunc_1_op_res_f_res_45471 = x_45460;
                            }
                            defunc_1_op_res_45465 = defunc_1_op_res_f_res_45470;
                            defunc_1_op_res_45466 = defunc_1_op_res_f_res_45471;
                        }
                        
                        float defunc_1_op_res_45472 = x_45461 + x_45464;
                        
                        x_45459 = defunc_1_op_res_45465;
                        x_45460 = defunc_1_op_res_45466;
                        x_45461 = defunc_1_op_res_45472;
                    }
                    // write result of operation
                    {
                        ((__local
                          bool *) red_arr_mem_45440)[sext_i32_i64(local_tid_45436)] =
                            x_45459;
                        ((__local
                          int32_t *) red_arr_mem_45442)[sext_i32_i64(local_tid_45436)] =
                            x_45460;
                        ((__local
                          float *) red_arr_mem_45444)[sext_i32_i64(local_tid_45436)] =
                            x_45461;
                    }
                }
                skip_waves_45475 *= 2;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread saves the result in accumulator
            {
                if (sext_i32_i64(local_tid_45436) == 0) {
                    x_acc_45453 = x_45459;
                    x_acc_45454 = x_45460;
                    x_acc_45455 = x_45461;
                }
            }
            // first thread keeps accumulator; others reset to neutral element
            {
                if (!(sext_i32_i64(local_tid_45436) == 0)) {
                    x_acc_45453 = 0;
                    x_acc_45454 = -1;
                    x_acc_45455 = 0.0F;
                }
            }
        }
        x_37685 = x_acc_45453;
        x_37686 = x_acc_45454;
        x_37687 = x_acc_45455;
        if (groups_per_segment_45422 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45436 == 0) {
                    ((__global bool *) mem_44084)[gtid_37500] = x_acc_45453;
                    ((__global int32_t *) mem_44086)[gtid_37500] = x_acc_45454;
                    ((__global float *) mem_44088)[gtid_37500] = x_acc_45455;
                }
            }
        } else {
            int32_t old_counter_45476;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45436 == 0) {
                    ((__global
                      bool *) group_res_arr_mem_45427)[sext_i32_i64(virt_group_id_45450) *
                                                       segred_group_sizze_37679] =
                        x_acc_45453;
                    ((__global
                      int32_t *) group_res_arr_mem_45429)[sext_i32_i64(virt_group_id_45450) *
                                                          segred_group_sizze_37679] =
                        x_acc_45454;
                    ((__global
                      float *) group_res_arr_mem_45431)[sext_i32_i64(virt_group_id_45450) *
                                                        segred_group_sizze_37679] =
                        x_acc_45455;
                    mem_fence_global();
                    old_counter_45476 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_45433)[sext_i32_i64(srem32(flat_segment_id_45451,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45446)[0] =
                        old_counter_45476 == groups_per_segment_45422 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45477;
            
            is_last_group_45477 = ((__local bool *) sync_arr_mem_45446)[0];
            if (is_last_group_45477) {
                if (local_tid_45436 == 0) {
                    old_counter_45476 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_45433)[sext_i32_i64(srem32(flat_segment_id_45451,
                                                                                                              10240))],
                                              (int) (0 -
                                                     groups_per_segment_45422));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45478 =
                            sdiv_up64(groups_per_segment_45422,
                                      segred_group_sizze_37679);
                    
                    x_37685 = 0;
                    x_37686 = -1;
                    x_37687 = 0.0F;
                    for (int64_t i_45479 = 0; i_45479 < read_per_thread_45478;
                         i_45479++) {
                        int64_t group_res_id_45480 =
                                sext_i32_i64(local_tid_45436) *
                                read_per_thread_45478 + i_45479;
                        int64_t index_of_group_res_45481 =
                                sext_i32_i64(flat_segment_id_45451) *
                                groups_per_segment_45422 + group_res_id_45480;
                        
                        if (slt64(group_res_id_45480,
                                  groups_per_segment_45422)) {
                            x_37688 = ((__global
                                        bool *) group_res_arr_mem_45427)[index_of_group_res_45481 *
                                                                         segred_group_sizze_37679];
                            x_37689 = ((__global
                                        int32_t *) group_res_arr_mem_45429)[index_of_group_res_45481 *
                                                                            segred_group_sizze_37679];
                            x_37690 = ((__global
                                        float *) group_res_arr_mem_45431)[index_of_group_res_45481 *
                                                                          segred_group_sizze_37679];
                            
                            bool defunc_1_op_res_37691;
                            int32_t defunc_1_op_res_37692;
                            
                            if (x_37685) {
                                defunc_1_op_res_37691 = x_37685;
                                defunc_1_op_res_37692 = x_37686;
                            } else {
                                bool x_37693 = x_37688 && x_37688;
                                bool x_37694 = !x_37688;
                                bool y_37695 = x_37685 && x_37694;
                                bool defunc_1_op_res_f_res_37696 = x_37693 ||
                                     y_37695;
                                int32_t defunc_1_op_res_f_res_37697;
                                
                                if (x_37688) {
                                    defunc_1_op_res_f_res_37697 = x_37689;
                                } else {
                                    defunc_1_op_res_f_res_37697 = x_37686;
                                }
                                defunc_1_op_res_37691 =
                                    defunc_1_op_res_f_res_37696;
                                defunc_1_op_res_37692 =
                                    defunc_1_op_res_f_res_37697;
                            }
                            
                            float defunc_1_op_res_37698 = x_37687 + x_37690;
                            
                            x_37685 = defunc_1_op_res_37691;
                            x_37686 = defunc_1_op_res_37692;
                            x_37687 = defunc_1_op_res_37698;
                        }
                    }
                }
                ((__local
                  bool *) red_arr_mem_45440)[sext_i32_i64(local_tid_45436)] =
                    x_37685;
                ((__local
                  int32_t *) red_arr_mem_45442)[sext_i32_i64(local_tid_45436)] =
                    x_37686;
                ((__local
                  float *) red_arr_mem_45444)[sext_i32_i64(local_tid_45436)] =
                    x_37687;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45482;
                    int32_t skip_waves_45483;
                    
                    skip_waves_45483 = 1;
                    
                    bool x_45459;
                    int32_t x_45460;
                    float x_45461;
                    bool x_45462;
                    int32_t x_45463;
                    float x_45464;
                    
                    offset_45482 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45436,
                                  sext_i64_i32(segred_group_sizze_37679))) {
                            x_45459 = ((__local
                                        bool *) red_arr_mem_45440)[sext_i32_i64(local_tid_45436 +
                                                                   offset_45482)];
                            x_45460 = ((__local
                                        int32_t *) red_arr_mem_45442)[sext_i32_i64(local_tid_45436 +
                                                                      offset_45482)];
                            x_45461 = ((__local
                                        float *) red_arr_mem_45444)[sext_i32_i64(local_tid_45436 +
                                                                    offset_45482)];
                        }
                    }
                    offset_45482 = 1;
                    while (slt32(offset_45482, wave_sizze_45438)) {
                        if (slt32(local_tid_45436 + offset_45482,
                                  sext_i64_i32(segred_group_sizze_37679)) &&
                            ((local_tid_45436 - squot32(local_tid_45436,
                                                        wave_sizze_45438) *
                              wave_sizze_45438) & (2 * offset_45482 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45462 = ((volatile __local
                                            bool *) red_arr_mem_45440)[sext_i32_i64(local_tid_45436 +
                                                                       offset_45482)];
                                x_45463 = ((volatile __local
                                            int32_t *) red_arr_mem_45442)[sext_i32_i64(local_tid_45436 +
                                                                          offset_45482)];
                                x_45464 = ((volatile __local
                                            float *) red_arr_mem_45444)[sext_i32_i64(local_tid_45436 +
                                                                        offset_45482)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_45465;
                                int32_t defunc_1_op_res_45466;
                                
                                if (x_45459) {
                                    defunc_1_op_res_45465 = x_45459;
                                    defunc_1_op_res_45466 = x_45460;
                                } else {
                                    bool x_45467 = x_45462 && x_45462;
                                    bool x_45468 = !x_45462;
                                    bool y_45469 = x_45459 && x_45468;
                                    bool defunc_1_op_res_f_res_45470 =
                                         x_45467 || y_45469;
                                    int32_t defunc_1_op_res_f_res_45471;
                                    
                                    if (x_45462) {
                                        defunc_1_op_res_f_res_45471 = x_45463;
                                    } else {
                                        defunc_1_op_res_f_res_45471 = x_45460;
                                    }
                                    defunc_1_op_res_45465 =
                                        defunc_1_op_res_f_res_45470;
                                    defunc_1_op_res_45466 =
                                        defunc_1_op_res_f_res_45471;
                                }
                                
                                float defunc_1_op_res_45472 = x_45461 + x_45464;
                                
                                x_45459 = defunc_1_op_res_45465;
                                x_45460 = defunc_1_op_res_45466;
                                x_45461 = defunc_1_op_res_45472;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_45440)[sext_i32_i64(local_tid_45436)] =
                                    x_45459;
                                ((volatile __local
                                  int32_t *) red_arr_mem_45442)[sext_i32_i64(local_tid_45436)] =
                                    x_45460;
                                ((volatile __local
                                  float *) red_arr_mem_45444)[sext_i32_i64(local_tid_45436)] =
                                    x_45461;
                            }
                        }
                        offset_45482 *= 2;
                    }
                    while (slt32(skip_waves_45483,
                                 squot32(sext_i64_i32(segred_group_sizze_37679) +
                                         wave_sizze_45438 - 1,
                                         wave_sizze_45438))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45482 = skip_waves_45483 * wave_sizze_45438;
                        if (slt32(local_tid_45436 + offset_45482,
                                  sext_i64_i32(segred_group_sizze_37679)) &&
                            ((local_tid_45436 - squot32(local_tid_45436,
                                                        wave_sizze_45438) *
                              wave_sizze_45438) == 0 &&
                             (squot32(local_tid_45436, wave_sizze_45438) & (2 *
                                                                            skip_waves_45483 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45462 = ((__local
                                            bool *) red_arr_mem_45440)[sext_i32_i64(local_tid_45436 +
                                                                       offset_45482)];
                                x_45463 = ((__local
                                            int32_t *) red_arr_mem_45442)[sext_i32_i64(local_tid_45436 +
                                                                          offset_45482)];
                                x_45464 = ((__local
                                            float *) red_arr_mem_45444)[sext_i32_i64(local_tid_45436 +
                                                                        offset_45482)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_45465;
                                int32_t defunc_1_op_res_45466;
                                
                                if (x_45459) {
                                    defunc_1_op_res_45465 = x_45459;
                                    defunc_1_op_res_45466 = x_45460;
                                } else {
                                    bool x_45467 = x_45462 && x_45462;
                                    bool x_45468 = !x_45462;
                                    bool y_45469 = x_45459 && x_45468;
                                    bool defunc_1_op_res_f_res_45470 =
                                         x_45467 || y_45469;
                                    int32_t defunc_1_op_res_f_res_45471;
                                    
                                    if (x_45462) {
                                        defunc_1_op_res_f_res_45471 = x_45463;
                                    } else {
                                        defunc_1_op_res_f_res_45471 = x_45460;
                                    }
                                    defunc_1_op_res_45465 =
                                        defunc_1_op_res_f_res_45470;
                                    defunc_1_op_res_45466 =
                                        defunc_1_op_res_f_res_45471;
                                }
                                
                                float defunc_1_op_res_45472 = x_45461 + x_45464;
                                
                                x_45459 = defunc_1_op_res_45465;
                                x_45460 = defunc_1_op_res_45466;
                                x_45461 = defunc_1_op_res_45472;
                            }
                            // write result of operation
                            {
                                ((__local
                                  bool *) red_arr_mem_45440)[sext_i32_i64(local_tid_45436)] =
                                    x_45459;
                                ((__local
                                  int32_t *) red_arr_mem_45442)[sext_i32_i64(local_tid_45436)] =
                                    x_45460;
                                ((__local
                                  float *) red_arr_mem_45444)[sext_i32_i64(local_tid_45436)] =
                                    x_45461;
                            }
                        }
                        skip_waves_45483 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45436 == 0) {
                            ((__global bool *) mem_44084)[gtid_37500] = x_45459;
                            ((__global int32_t *) mem_44086)[gtid_37500] =
                                x_45460;
                            ((__global float *) mem_44088)[gtid_37500] =
                                x_45461;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_37679
}
__kernel void mainMagnitudezisegred_nonseg_36368(__global int *global_failure,
                                                 __local volatile
                                                 int64_t *red_arr_mem_45179_backing_aligned_0,
                                                 __local volatile
                                                 int64_t *sync_arr_mem_45177_backing_aligned_1,
                                                 int64_t m_28474,
                                                 int64_t num_groups_36363,
                                                 __global
                                                 unsigned char *defunc_3_map_res_mem_43982,
                                                 __global
                                                 unsigned char *mem_43987,
                                                 __global
                                                 unsigned char *mainMagnitudezicounter_mem_45167,
                                                 __global
                                                 unsigned char *group_res_arr_mem_45169,
                                                 int64_t num_threads_45171)
{
    #define segred_group_sizze_36361 (mainMagnitudezisegred_group_sizze_36360)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45179_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45179_backing_aligned_0;
    __local volatile char *restrict sync_arr_mem_45177_backing_0 =
                          (__local volatile
                           char *) sync_arr_mem_45177_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45172;
    int32_t local_tid_45173;
    int64_t group_sizze_45176;
    int32_t wave_sizze_45175;
    int32_t group_tid_45174;
    
    global_tid_45172 = get_global_id(0);
    local_tid_45173 = get_local_id(0);
    group_sizze_45176 = get_local_size(0);
    wave_sizze_45175 = LOCKSTEP_WIDTH;
    group_tid_45174 = get_group_id(0);
    
    int32_t phys_tid_36368;
    
    phys_tid_36368 = global_tid_45172;
    
    __local char *sync_arr_mem_45177;
    
    sync_arr_mem_45177 = (__local char *) sync_arr_mem_45177_backing_0;
    
    __local char *red_arr_mem_45179;
    
    red_arr_mem_45179 = (__local char *) red_arr_mem_45179_backing_1;
    
    int64_t dummy_36366;
    
    dummy_36366 = 0;
    
    int64_t gtid_36367;
    
    gtid_36367 = 0;
    
    int32_t x_acc_45181;
    int64_t chunk_sizze_45182;
    
    chunk_sizze_45182 = smin64(sdiv_up64(m_28474,
                                         sext_i32_i64(sext_i64_i32(segred_group_sizze_36361 *
                                         num_groups_36363))),
                               sdiv_up64(m_28474 - sext_i32_i64(phys_tid_36368),
                                         num_threads_45171));
    
    int32_t x_28844;
    int32_t x_28845;
    
    // neutral-initialise the accumulators
    {
        x_acc_45181 = 0;
    }
    for (int64_t i_45186 = 0; i_45186 < chunk_sizze_45182; i_45186++) {
        gtid_36367 = sext_i32_i64(phys_tid_36368) + num_threads_45171 * i_45186;
        // apply map function
        {
            int32_t x_28847 = ((__global
                                int32_t *) defunc_3_map_res_mem_43982)[gtid_36367];
            
            // save map-out results
            { }
            // load accumulator
            {
                x_28844 = x_acc_45181;
            }
            // load new values
            {
                x_28845 = x_28847;
            }
            // apply reduction operator
            {
                int32_t defunc_1_op_res_28846 = smax32(x_28844, x_28845);
                
                // store in accumulator
                {
                    x_acc_45181 = defunc_1_op_res_28846;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_28844 = x_acc_45181;
        ((__local int32_t *) red_arr_mem_45179)[sext_i32_i64(local_tid_45173)] =
            x_28844;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45187;
    int32_t skip_waves_45188;
    
    skip_waves_45188 = 1;
    
    int32_t x_45183;
    int32_t x_45184;
    
    offset_45187 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45173, sext_i64_i32(segred_group_sizze_36361))) {
            x_45183 = ((__local
                        int32_t *) red_arr_mem_45179)[sext_i32_i64(local_tid_45173 +
                                                      offset_45187)];
        }
    }
    offset_45187 = 1;
    while (slt32(offset_45187, wave_sizze_45175)) {
        if (slt32(local_tid_45173 + offset_45187,
                  sext_i64_i32(segred_group_sizze_36361)) && ((local_tid_45173 -
                                                               squot32(local_tid_45173,
                                                                       wave_sizze_45175) *
                                                               wave_sizze_45175) &
                                                              (2 *
                                                               offset_45187 -
                                                               1)) == 0) {
            // read array element
            {
                x_45184 = ((volatile __local
                            int32_t *) red_arr_mem_45179)[sext_i32_i64(local_tid_45173 +
                                                          offset_45187)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_45185 = smax32(x_45183, x_45184);
                
                x_45183 = defunc_1_op_res_45185;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_45179)[sext_i32_i64(local_tid_45173)] =
                    x_45183;
            }
        }
        offset_45187 *= 2;
    }
    while (slt32(skip_waves_45188,
                 squot32(sext_i64_i32(segred_group_sizze_36361) +
                         wave_sizze_45175 - 1, wave_sizze_45175))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45187 = skip_waves_45188 * wave_sizze_45175;
        if (slt32(local_tid_45173 + offset_45187,
                  sext_i64_i32(segred_group_sizze_36361)) && ((local_tid_45173 -
                                                               squot32(local_tid_45173,
                                                                       wave_sizze_45175) *
                                                               wave_sizze_45175) ==
                                                              0 &&
                                                              (squot32(local_tid_45173,
                                                                       wave_sizze_45175) &
                                                               (2 *
                                                                skip_waves_45188 -
                                                                1)) == 0)) {
            // read array element
            {
                x_45184 = ((__local
                            int32_t *) red_arr_mem_45179)[sext_i32_i64(local_tid_45173 +
                                                          offset_45187)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_45185 = smax32(x_45183, x_45184);
                
                x_45183 = defunc_1_op_res_45185;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_45179)[sext_i32_i64(local_tid_45173)] =
                    x_45183;
            }
        }
        skip_waves_45188 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_45173) == 0) {
            x_acc_45181 = x_45183;
        }
    }
    
    int32_t old_counter_45189;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_45173 == 0) {
            ((__global
              int32_t *) group_res_arr_mem_45169)[sext_i32_i64(group_tid_45174) *
                                                  segred_group_sizze_36361] =
                x_acc_45181;
            mem_fence_global();
            old_counter_45189 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainMagnitudezicounter_mem_45167)[0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_45177)[0] = old_counter_45189 ==
                num_groups_36363 - 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_45190;
    
    is_last_group_45190 = ((__local bool *) sync_arr_mem_45177)[0];
    if (is_last_group_45190) {
        if (local_tid_45173 == 0) {
            old_counter_45189 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainMagnitudezicounter_mem_45167)[0],
                                                      (int) (0 -
                                                             num_groups_36363));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_45191 = sdiv_up64(num_groups_36363,
                                                      segred_group_sizze_36361);
            
            x_28844 = 0;
            for (int64_t i_45192 = 0; i_45192 < read_per_thread_45191;
                 i_45192++) {
                int64_t group_res_id_45193 = sext_i32_i64(local_tid_45173) *
                        read_per_thread_45191 + i_45192;
                int64_t index_of_group_res_45194 = group_res_id_45193;
                
                if (slt64(group_res_id_45193, num_groups_36363)) {
                    x_28845 = ((__global
                                int32_t *) group_res_arr_mem_45169)[index_of_group_res_45194 *
                                                                    segred_group_sizze_36361];
                    
                    int32_t defunc_1_op_res_28846;
                    
                    defunc_1_op_res_28846 = smax32(x_28844, x_28845);
                    x_28844 = defunc_1_op_res_28846;
                }
            }
        }
        ((__local int32_t *) red_arr_mem_45179)[sext_i32_i64(local_tid_45173)] =
            x_28844;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_45195;
            int32_t skip_waves_45196;
            
            skip_waves_45196 = 1;
            
            int32_t x_45183;
            int32_t x_45184;
            
            offset_45195 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_45173,
                          sext_i64_i32(segred_group_sizze_36361))) {
                    x_45183 = ((__local
                                int32_t *) red_arr_mem_45179)[sext_i32_i64(local_tid_45173 +
                                                              offset_45195)];
                }
            }
            offset_45195 = 1;
            while (slt32(offset_45195, wave_sizze_45175)) {
                if (slt32(local_tid_45173 + offset_45195,
                          sext_i64_i32(segred_group_sizze_36361)) &&
                    ((local_tid_45173 - squot32(local_tid_45173,
                                                wave_sizze_45175) *
                      wave_sizze_45175) & (2 * offset_45195 - 1)) == 0) {
                    // read array element
                    {
                        x_45184 = ((volatile __local
                                    int32_t *) red_arr_mem_45179)[sext_i32_i64(local_tid_45173 +
                                                                  offset_45195)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_45185 = smax32(x_45183,
                                                               x_45184);
                        
                        x_45183 = defunc_1_op_res_45185;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          int32_t *) red_arr_mem_45179)[sext_i32_i64(local_tid_45173)] =
                            x_45183;
                    }
                }
                offset_45195 *= 2;
            }
            while (slt32(skip_waves_45196,
                         squot32(sext_i64_i32(segred_group_sizze_36361) +
                                 wave_sizze_45175 - 1, wave_sizze_45175))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_45195 = skip_waves_45196 * wave_sizze_45175;
                if (slt32(local_tid_45173 + offset_45195,
                          sext_i64_i32(segred_group_sizze_36361)) &&
                    ((local_tid_45173 - squot32(local_tid_45173,
                                                wave_sizze_45175) *
                      wave_sizze_45175) == 0 && (squot32(local_tid_45173,
                                                         wave_sizze_45175) &
                                                 (2 * skip_waves_45196 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_45184 = ((__local
                                    int32_t *) red_arr_mem_45179)[sext_i32_i64(local_tid_45173 +
                                                                  offset_45195)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_45185 = smax32(x_45183,
                                                               x_45184);
                        
                        x_45183 = defunc_1_op_res_45185;
                    }
                    // write result of operation
                    {
                        ((__local
                          int32_t *) red_arr_mem_45179)[sext_i32_i64(local_tid_45173)] =
                            x_45183;
                    }
                }
                skip_waves_45196 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_45173 == 0) {
                    ((__global int32_t *) mem_43987)[0] = x_45183;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36361
}
__kernel void mainMagnitudezisegred_small_34398(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44436_backing_aligned_0,
                                                int64_t N_28473,
                                                int64_t m_28474,
                                                int64_t N_28475,
                                                int64_t i32_res_28487,
                                                int64_t i32_res_28493,
                                                int64_t num_groups_34537,
                                                __global
                                                unsigned char *images_mem_43123,
                                                __global
                                                unsigned char *binop_p_mem_43132,
                                                __global
                                                unsigned char *mem_43273,
                                                __global
                                                unsigned char *mem_43278,
                                                int64_t segment_sizze_nonzzero_44429)
{
    #define segred_group_sizze_34536 (mainMagnitudezisegred_group_sizze_34392)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44436_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44436_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44431;
    int32_t local_tid_44432;
    int64_t group_sizze_44435;
    int32_t wave_sizze_44434;
    int32_t group_tid_44433;
    
    global_tid_44431 = get_global_id(0);
    local_tid_44432 = get_local_id(0);
    group_sizze_44435 = get_local_size(0);
    wave_sizze_44434 = LOCKSTEP_WIDTH;
    group_tid_44433 = get_group_id(0);
    
    int32_t phys_tid_34398;
    
    phys_tid_34398 = global_tid_44431;
    
    __local char *red_arr_mem_44436;
    
    red_arr_mem_44436 = (__local char *) red_arr_mem_44436_backing_0;
    
    int32_t phys_group_id_44438;
    
    phys_group_id_44438 = get_group_id(0);
    for (int32_t i_44439 = 0; i_44439 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28474 * i32_res_28493 *
                                          i32_res_28493,
                                          squot64(segred_group_sizze_34536,
                                                  segment_sizze_nonzzero_44429))) -
                   phys_group_id_44438, sext_i64_i32(num_groups_34537));
         i_44439++) {
        int32_t virt_group_id_44440 = phys_group_id_44438 + i_44439 *
                sext_i64_i32(num_groups_34537);
        int64_t gtid_34385 = squot64(squot64(sext_i32_i64(local_tid_44432),
                                             segment_sizze_nonzzero_44429) +
                                     sext_i32_i64(virt_group_id_44440) *
                                     squot64(segred_group_sizze_34536,
                                             segment_sizze_nonzzero_44429),
                                     i32_res_28493 * i32_res_28493);
        int64_t gtid_34386 = squot64(squot64(sext_i32_i64(local_tid_44432),
                                             segment_sizze_nonzzero_44429) +
                                     sext_i32_i64(virt_group_id_44440) *
                                     squot64(segred_group_sizze_34536,
                                             segment_sizze_nonzzero_44429) -
                                     squot64(squot64(sext_i32_i64(local_tid_44432),
                                                     segment_sizze_nonzzero_44429) +
                                             sext_i32_i64(virt_group_id_44440) *
                                             squot64(segred_group_sizze_34536,
                                                     segment_sizze_nonzzero_44429),
                                             i32_res_28493 * i32_res_28493) *
                                     (i32_res_28493 * i32_res_28493),
                                     i32_res_28493);
        int64_t gtid_34387 = squot64(sext_i32_i64(local_tid_44432),
                                     segment_sizze_nonzzero_44429) +
                sext_i32_i64(virt_group_id_44440) *
                squot64(segred_group_sizze_34536,
                        segment_sizze_nonzzero_44429) -
                squot64(squot64(sext_i32_i64(local_tid_44432),
                                segment_sizze_nonzzero_44429) +
                        sext_i32_i64(virt_group_id_44440) *
                        squot64(segred_group_sizze_34536,
                                segment_sizze_nonzzero_44429), i32_res_28493 *
                        i32_res_28493) * (i32_res_28493 * i32_res_28493) -
                squot64(squot64(sext_i32_i64(local_tid_44432),
                                segment_sizze_nonzzero_44429) +
                        sext_i32_i64(virt_group_id_44440) *
                        squot64(segred_group_sizze_34536,
                                segment_sizze_nonzzero_44429) -
                        squot64(squot64(sext_i32_i64(local_tid_44432),
                                        segment_sizze_nonzzero_44429) +
                                sext_i32_i64(virt_group_id_44440) *
                                squot64(segred_group_sizze_34536,
                                        segment_sizze_nonzzero_44429),
                                i32_res_28493 * i32_res_28493) *
                        (i32_res_28493 * i32_res_28493), i32_res_28493) *
                i32_res_28493;
        int64_t gtid_34397 = srem64(sext_i32_i64(local_tid_44432),
                                    i32_res_28487);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_28487) && (((slt64(gtid_34385, m_28474) &&
                                              slt64(gtid_34386,
                                                    i32_res_28493)) &&
                                             slt64(gtid_34387,
                                                   i32_res_28493)) &&
                                            slt64(sext_i32_i64(local_tid_44432),
                                                  i32_res_28487 *
                                                  squot64(segred_group_sizze_34536,
                                                          segment_sizze_nonzzero_44429)))) {
                float x_34546 = ((__global
                                  float *) images_mem_43123)[gtid_34385 *
                                                             N_28475 +
                                                             gtid_34397];
                float x_34547 = ((__global
                                  float *) binop_p_mem_43132)[gtid_34386 *
                                                              N_28473 +
                                                              gtid_34397];
                float x_34548 = ((__global float *) mem_43273)[gtid_34387 *
                                                               N_28473 +
                                                               gtid_34397];
                float x_34549 = x_34547 * x_34548;
                bool isnan_res_34550;
                
                isnan_res_34550 = futrts_isnan32(x_34546);
                
                float y_34551;
                
                if (isnan_res_34550) {
                    y_34551 = 0.0F;
                } else {
                    y_34551 = 1.0F;
                }
                
                float defunc_2_f_res_34552 = x_34549 * y_34551;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44436)[sext_i32_i64(local_tid_44432)] =
                        defunc_2_f_res_34552;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44436)[sext_i32_i64(local_tid_44432)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_28487)) {
            // perform segmented scan to imitate reduction
            {
                float x_34540;
                float x_34541;
                float x_44441;
                float x_44442;
                bool ltid_in_bounds_44444;
                
                ltid_in_bounds_44444 = slt64(sext_i32_i64(local_tid_44432),
                                             i32_res_28487 *
                                             squot64(segred_group_sizze_34536,
                                                     segment_sizze_nonzzero_44429));
                
                int32_t skip_threads_44445;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44444) {
                        x_34541 = ((volatile __local
                                    float *) red_arr_mem_44436)[sext_i32_i64(local_tid_44432)];
                        if ((local_tid_44432 - squot32(local_tid_44432, 32) *
                             32) == 0) {
                            x_34540 = x_34541;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44445 = 1;
                    while (slt32(skip_threads_44445, 32)) {
                        if (sle32(skip_threads_44445, local_tid_44432 -
                                  squot32(local_tid_44432, 32) * 32) &&
                            ltid_in_bounds_44444) {
                            // read operands
                            {
                                x_34540 = ((volatile __local
                                            float *) red_arr_mem_44436)[sext_i32_i64(local_tid_44432) -
                                                                        sext_i32_i64(skip_threads_44445)];
                            }
                            // perform operation
                            {
                                bool inactive_44446 =
                                     slt64(srem64(sext_i32_i64(local_tid_44432),
                                                  i32_res_28487),
                                           sext_i32_i64(local_tid_44432) -
                                           sext_i32_i64(local_tid_44432 -
                                           skip_threads_44445));
                                
                                if (inactive_44446) {
                                    x_34540 = x_34541;
                                }
                                if (!inactive_44446) {
                                    float defunc_1_op_res_34542 = x_34540 +
                                          x_34541;
                                    
                                    x_34540 = defunc_1_op_res_34542;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44434, skip_threads_44445)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44445, local_tid_44432 -
                                  squot32(local_tid_44432, 32) * 32) &&
                            ltid_in_bounds_44444) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44436)[sext_i32_i64(local_tid_44432)] =
                                    x_34540;
                                x_34541 = x_34540;
                            }
                        }
                        if (sle32(wave_sizze_44434, skip_threads_44445)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44445 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44432 - squot32(local_tid_44432, 32) * 32) ==
                        31 && ltid_in_bounds_44444) {
                        ((volatile __local
                          float *) red_arr_mem_44436)[sext_i32_i64(squot32(local_tid_44432,
                                                                           32))] =
                            x_34540;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44447;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44432, 32) == 0 &&
                            ltid_in_bounds_44444) {
                            x_44442 = ((volatile __local
                                        float *) red_arr_mem_44436)[sext_i32_i64(local_tid_44432)];
                            if ((local_tid_44432 - squot32(local_tid_44432,
                                                           32) * 32) == 0) {
                                x_44441 = x_44442;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44447 = 1;
                        while (slt32(skip_threads_44447, 32)) {
                            if (sle32(skip_threads_44447, local_tid_44432 -
                                      squot32(local_tid_44432, 32) * 32) &&
                                (squot32(local_tid_44432, 32) == 0 &&
                                 ltid_in_bounds_44444)) {
                                // read operands
                                {
                                    x_44441 = ((volatile __local
                                                float *) red_arr_mem_44436)[sext_i32_i64(local_tid_44432) -
                                                                            sext_i32_i64(skip_threads_44447)];
                                }
                                // perform operation
                                {
                                    bool inactive_44448 =
                                         slt64(srem64(sext_i32_i64(local_tid_44432 *
                                                      32 + 32 - 1),
                                                      i32_res_28487),
                                               sext_i32_i64(local_tid_44432 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44432 -
                                                             skip_threads_44447) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44448) {
                                        x_44441 = x_44442;
                                    }
                                    if (!inactive_44448) {
                                        float defunc_1_op_res_44443 = x_44441 +
                                              x_44442;
                                        
                                        x_44441 = defunc_1_op_res_44443;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44434, skip_threads_44447)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44447, local_tid_44432 -
                                      squot32(local_tid_44432, 32) * 32) &&
                                (squot32(local_tid_44432, 32) == 0 &&
                                 ltid_in_bounds_44444)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44436)[sext_i32_i64(local_tid_44432)] =
                                        x_44441;
                                    x_44442 = x_44441;
                                }
                            }
                            if (sle32(wave_sizze_44434, skip_threads_44447)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44447 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44432, 32) == 0 ||
                          !ltid_in_bounds_44444)) {
                        // read operands
                        {
                            x_34541 = x_34540;
                            x_34540 = ((__local
                                        float *) red_arr_mem_44436)[sext_i32_i64(squot32(local_tid_44432,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_44449 =
                                 slt64(srem64(sext_i32_i64(local_tid_44432),
                                              i32_res_28487),
                                       sext_i32_i64(local_tid_44432) -
                                       sext_i32_i64(squot32(local_tid_44432,
                                                            32) * 32 - 1));
                            
                            if (inactive_44449) {
                                x_34540 = x_34541;
                            }
                            if (!inactive_44449) {
                                float defunc_1_op_res_34542 = x_34540 + x_34541;
                                
                                x_34540 = defunc_1_op_res_34542;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44436)[sext_i32_i64(local_tid_44432)] =
                                x_34540;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44432, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44436)[sext_i32_i64(local_tid_44432)] =
                            x_34541;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44440) *
                      squot64(segred_group_sizze_34536,
                              segment_sizze_nonzzero_44429) +
                      sext_i32_i64(local_tid_44432), m_28474 * i32_res_28493 *
                      i32_res_28493) && slt64(sext_i32_i64(local_tid_44432),
                                              squot64(segred_group_sizze_34536,
                                                      segment_sizze_nonzzero_44429))) {
                ((__global
                  float *) mem_43278)[squot64(sext_i32_i64(virt_group_id_44440) *
                                              squot64(segred_group_sizze_34536,
                                                      segment_sizze_nonzzero_44429) +
                                              sext_i32_i64(local_tid_44432),
                                              i32_res_28493 * i32_res_28493) *
                                      (i32_res_28493 * i32_res_28493) +
                                      squot64(sext_i32_i64(virt_group_id_44440) *
                                              squot64(segred_group_sizze_34536,
                                                      segment_sizze_nonzzero_44429) +
                                              sext_i32_i64(local_tid_44432) -
                                              squot64(sext_i32_i64(virt_group_id_44440) *
                                                      squot64(segred_group_sizze_34536,
                                                              segment_sizze_nonzzero_44429) +
                                                      sext_i32_i64(local_tid_44432),
                                                      i32_res_28493 *
                                                      i32_res_28493) *
                                              (i32_res_28493 * i32_res_28493),
                                              i32_res_28493) * i32_res_28493 +
                                      (sext_i32_i64(virt_group_id_44440) *
                                       squot64(segred_group_sizze_34536,
                                               segment_sizze_nonzzero_44429) +
                                       sext_i32_i64(local_tid_44432) -
                                       squot64(sext_i32_i64(virt_group_id_44440) *
                                               squot64(segred_group_sizze_34536,
                                                       segment_sizze_nonzzero_44429) +
                                               sext_i32_i64(local_tid_44432),
                                               i32_res_28493 * i32_res_28493) *
                                       (i32_res_28493 * i32_res_28493) -
                                       squot64(sext_i32_i64(virt_group_id_44440) *
                                               squot64(segred_group_sizze_34536,
                                                       segment_sizze_nonzzero_44429) +
                                               sext_i32_i64(local_tid_44432) -
                                               squot64(sext_i32_i64(virt_group_id_44440) *
                                                       squot64(segred_group_sizze_34536,
                                                               segment_sizze_nonzzero_44429) +
                                                       sext_i32_i64(local_tid_44432),
                                                       i32_res_28493 *
                                                       i32_res_28493) *
                                               (i32_res_28493 * i32_res_28493),
                                               i32_res_28493) *
                                       i32_res_28493)] = ((__local
                                                           float *) red_arr_mem_44436)[(sext_i32_i64(local_tid_44432) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_44429 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34536
}
__kernel void mainMagnitudezisegred_small_35445(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44632_backing_aligned_0,
                                                int64_t N_28473,
                                                int64_t m_28474,
                                                int64_t N_28475,
                                                int64_t i32_res_28487,
                                                int64_t i32_res_28493,
                                                int64_t num_groups_35498,
                                                __global
                                                unsigned char *images_mem_43123,
                                                __global
                                                unsigned char *binop_p_mem_43132,
                                                __global
                                                unsigned char *mem_43585,
                                                int64_t segment_sizze_nonzzero_44625)
{
    #define segred_group_sizze_35497 (mainMagnitudezisegred_group_sizze_35439)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44632_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44632_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44627;
    int32_t local_tid_44628;
    int64_t group_sizze_44631;
    int32_t wave_sizze_44630;
    int32_t group_tid_44629;
    
    global_tid_44627 = get_global_id(0);
    local_tid_44628 = get_local_id(0);
    group_sizze_44631 = get_local_size(0);
    wave_sizze_44630 = LOCKSTEP_WIDTH;
    group_tid_44629 = get_group_id(0);
    
    int32_t phys_tid_35445;
    
    phys_tid_35445 = global_tid_44627;
    
    __local char *red_arr_mem_44632;
    
    red_arr_mem_44632 = (__local char *) red_arr_mem_44632_backing_0;
    
    int32_t phys_group_id_44634;
    
    phys_group_id_44634 = get_group_id(0);
    for (int32_t i_44635 = 0; i_44635 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28474 * i32_res_28493,
                                          squot64(segred_group_sizze_35497,
                                                  segment_sizze_nonzzero_44625))) -
                   phys_group_id_44634, sext_i64_i32(num_groups_35498));
         i_44635++) {
        int32_t virt_group_id_44636 = phys_group_id_44634 + i_44635 *
                sext_i64_i32(num_groups_35498);
        int64_t gtid_35434 = squot64(squot64(sext_i32_i64(local_tid_44628),
                                             segment_sizze_nonzzero_44625) +
                                     sext_i32_i64(virt_group_id_44636) *
                                     squot64(segred_group_sizze_35497,
                                             segment_sizze_nonzzero_44625),
                                     i32_res_28493);
        int64_t gtid_35435 = squot64(sext_i32_i64(local_tid_44628),
                                     segment_sizze_nonzzero_44625) +
                sext_i32_i64(virt_group_id_44636) *
                squot64(segred_group_sizze_35497,
                        segment_sizze_nonzzero_44625) -
                squot64(squot64(sext_i32_i64(local_tid_44628),
                                segment_sizze_nonzzero_44625) +
                        sext_i32_i64(virt_group_id_44636) *
                        squot64(segred_group_sizze_35497,
                                segment_sizze_nonzzero_44625), i32_res_28493) *
                i32_res_28493;
        int64_t gtid_35444 = srem64(sext_i32_i64(local_tid_44628),
                                    i32_res_28487);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_28487) && ((slt64(gtid_35434, m_28474) &&
                                             slt64(gtid_35435,
                                                   i32_res_28493)) &&
                                            slt64(sext_i32_i64(local_tid_44628),
                                                  i32_res_28487 *
                                                  squot64(segred_group_sizze_35497,
                                                          segment_sizze_nonzzero_44625)))) {
                float x_35507 = ((__global
                                  float *) images_mem_43123)[gtid_35434 *
                                                             N_28475 +
                                                             gtid_35444];
                bool isnan_res_35508;
                
                isnan_res_35508 = futrts_isnan32(x_35507);
                
                float defunc_1_f_res_35509;
                
                if (isnan_res_35508) {
                    defunc_1_f_res_35509 = 0.0F;
                } else {
                    float x_35506 = ((__global
                                      float *) binop_p_mem_43132)[gtid_35435 *
                                                                  N_28473 +
                                                                  gtid_35444];
                    float defunc_1_f_res_f_res_35510 = x_35506 * x_35507;
                    
                    defunc_1_f_res_35509 = defunc_1_f_res_f_res_35510;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44632)[sext_i32_i64(local_tid_44628)] =
                        defunc_1_f_res_35509;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44632)[sext_i32_i64(local_tid_44628)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_28487)) {
            // perform segmented scan to imitate reduction
            {
                float x_35501;
                float x_35502;
                float x_44637;
                float x_44638;
                bool ltid_in_bounds_44640;
                
                ltid_in_bounds_44640 = slt64(sext_i32_i64(local_tid_44628),
                                             i32_res_28487 *
                                             squot64(segred_group_sizze_35497,
                                                     segment_sizze_nonzzero_44625));
                
                int32_t skip_threads_44641;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44640) {
                        x_35502 = ((volatile __local
                                    float *) red_arr_mem_44632)[sext_i32_i64(local_tid_44628)];
                        if ((local_tid_44628 - squot32(local_tid_44628, 32) *
                             32) == 0) {
                            x_35501 = x_35502;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44641 = 1;
                    while (slt32(skip_threads_44641, 32)) {
                        if (sle32(skip_threads_44641, local_tid_44628 -
                                  squot32(local_tid_44628, 32) * 32) &&
                            ltid_in_bounds_44640) {
                            // read operands
                            {
                                x_35501 = ((volatile __local
                                            float *) red_arr_mem_44632)[sext_i32_i64(local_tid_44628) -
                                                                        sext_i32_i64(skip_threads_44641)];
                            }
                            // perform operation
                            {
                                bool inactive_44642 =
                                     slt64(srem64(sext_i32_i64(local_tid_44628),
                                                  i32_res_28487),
                                           sext_i32_i64(local_tid_44628) -
                                           sext_i32_i64(local_tid_44628 -
                                           skip_threads_44641));
                                
                                if (inactive_44642) {
                                    x_35501 = x_35502;
                                }
                                if (!inactive_44642) {
                                    float defunc_1_op_res_35503 = x_35501 +
                                          x_35502;
                                    
                                    x_35501 = defunc_1_op_res_35503;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44630, skip_threads_44641)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44641, local_tid_44628 -
                                  squot32(local_tid_44628, 32) * 32) &&
                            ltid_in_bounds_44640) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44632)[sext_i32_i64(local_tid_44628)] =
                                    x_35501;
                                x_35502 = x_35501;
                            }
                        }
                        if (sle32(wave_sizze_44630, skip_threads_44641)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44641 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44628 - squot32(local_tid_44628, 32) * 32) ==
                        31 && ltid_in_bounds_44640) {
                        ((volatile __local
                          float *) red_arr_mem_44632)[sext_i32_i64(squot32(local_tid_44628,
                                                                           32))] =
                            x_35501;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44643;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44628, 32) == 0 &&
                            ltid_in_bounds_44640) {
                            x_44638 = ((volatile __local
                                        float *) red_arr_mem_44632)[sext_i32_i64(local_tid_44628)];
                            if ((local_tid_44628 - squot32(local_tid_44628,
                                                           32) * 32) == 0) {
                                x_44637 = x_44638;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44643 = 1;
                        while (slt32(skip_threads_44643, 32)) {
                            if (sle32(skip_threads_44643, local_tid_44628 -
                                      squot32(local_tid_44628, 32) * 32) &&
                                (squot32(local_tid_44628, 32) == 0 &&
                                 ltid_in_bounds_44640)) {
                                // read operands
                                {
                                    x_44637 = ((volatile __local
                                                float *) red_arr_mem_44632)[sext_i32_i64(local_tid_44628) -
                                                                            sext_i32_i64(skip_threads_44643)];
                                }
                                // perform operation
                                {
                                    bool inactive_44644 =
                                         slt64(srem64(sext_i32_i64(local_tid_44628 *
                                                      32 + 32 - 1),
                                                      i32_res_28487),
                                               sext_i32_i64(local_tid_44628 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44628 -
                                                             skip_threads_44643) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44644) {
                                        x_44637 = x_44638;
                                    }
                                    if (!inactive_44644) {
                                        float defunc_1_op_res_44639 = x_44637 +
                                              x_44638;
                                        
                                        x_44637 = defunc_1_op_res_44639;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44630, skip_threads_44643)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44643, local_tid_44628 -
                                      squot32(local_tid_44628, 32) * 32) &&
                                (squot32(local_tid_44628, 32) == 0 &&
                                 ltid_in_bounds_44640)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44632)[sext_i32_i64(local_tid_44628)] =
                                        x_44637;
                                    x_44638 = x_44637;
                                }
                            }
                            if (sle32(wave_sizze_44630, skip_threads_44643)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44643 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44628, 32) == 0 ||
                          !ltid_in_bounds_44640)) {
                        // read operands
                        {
                            x_35502 = x_35501;
                            x_35501 = ((__local
                                        float *) red_arr_mem_44632)[sext_i32_i64(squot32(local_tid_44628,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_44645 =
                                 slt64(srem64(sext_i32_i64(local_tid_44628),
                                              i32_res_28487),
                                       sext_i32_i64(local_tid_44628) -
                                       sext_i32_i64(squot32(local_tid_44628,
                                                            32) * 32 - 1));
                            
                            if (inactive_44645) {
                                x_35501 = x_35502;
                            }
                            if (!inactive_44645) {
                                float defunc_1_op_res_35503 = x_35501 + x_35502;
                                
                                x_35501 = defunc_1_op_res_35503;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44632)[sext_i32_i64(local_tid_44628)] =
                                x_35501;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44628, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44632)[sext_i32_i64(local_tid_44628)] =
                            x_35502;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44636) *
                      squot64(segred_group_sizze_35497,
                              segment_sizze_nonzzero_44625) +
                      sext_i32_i64(local_tid_44628), m_28474 * i32_res_28493) &&
                slt64(sext_i32_i64(local_tid_44628),
                      squot64(segred_group_sizze_35497,
                              segment_sizze_nonzzero_44625))) {
                ((__global
                  float *) mem_43585)[squot64(sext_i32_i64(virt_group_id_44636) *
                                              squot64(segred_group_sizze_35497,
                                                      segment_sizze_nonzzero_44625) +
                                              sext_i32_i64(local_tid_44628),
                                              i32_res_28493) * i32_res_28493 +
                                      (sext_i32_i64(virt_group_id_44636) *
                                       squot64(segred_group_sizze_35497,
                                               segment_sizze_nonzzero_44625) +
                                       sext_i32_i64(local_tid_44628) -
                                       squot64(sext_i32_i64(virt_group_id_44636) *
                                               squot64(segred_group_sizze_35497,
                                                       segment_sizze_nonzzero_44625) +
                                               sext_i32_i64(local_tid_44628),
                                               i32_res_28493) *
                                       i32_res_28493)] = ((__local
                                                           float *) red_arr_mem_44632)[(sext_i32_i64(local_tid_44628) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_44625 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35497
}
__kernel void mainMagnitudezisegred_small_35582(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44720_backing_aligned_0,
                                                int64_t m_28474,
                                                int64_t i32_res_28493,
                                                int64_t num_groups_35631,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43370,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43591,
                                                __global
                                                unsigned char *mem_43651,
                                                int64_t segment_sizze_nonzzero_44713)
{
    #define segred_group_sizze_35630 (mainMagnitudezisegred_group_sizze_35576)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44720_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44720_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44715;
    int32_t local_tid_44716;
    int64_t group_sizze_44719;
    int32_t wave_sizze_44718;
    int32_t group_tid_44717;
    
    global_tid_44715 = get_global_id(0);
    local_tid_44716 = get_local_id(0);
    group_sizze_44719 = get_local_size(0);
    wave_sizze_44718 = LOCKSTEP_WIDTH;
    group_tid_44717 = get_group_id(0);
    
    int32_t phys_tid_35582;
    
    phys_tid_35582 = global_tid_44715;
    
    __local char *red_arr_mem_44720;
    
    red_arr_mem_44720 = (__local char *) red_arr_mem_44720_backing_0;
    
    int32_t phys_group_id_44722;
    
    phys_group_id_44722 = get_group_id(0);
    for (int32_t i_44723 = 0; i_44723 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28474 * i32_res_28493,
                                          squot64(segred_group_sizze_35630,
                                                  segment_sizze_nonzzero_44713))) -
                   phys_group_id_44722, sext_i64_i32(num_groups_35631));
         i_44723++) {
        int32_t virt_group_id_44724 = phys_group_id_44722 + i_44723 *
                sext_i64_i32(num_groups_35631);
        int64_t gtid_35571 = squot64(squot64(sext_i32_i64(local_tid_44716),
                                             segment_sizze_nonzzero_44713) +
                                     sext_i32_i64(virt_group_id_44724) *
                                     squot64(segred_group_sizze_35630,
                                             segment_sizze_nonzzero_44713),
                                     i32_res_28493);
        int64_t gtid_35572 = squot64(sext_i32_i64(local_tid_44716),
                                     segment_sizze_nonzzero_44713) +
                sext_i32_i64(virt_group_id_44724) *
                squot64(segred_group_sizze_35630,
                        segment_sizze_nonzzero_44713) -
                squot64(squot64(sext_i32_i64(local_tid_44716),
                                segment_sizze_nonzzero_44713) +
                        sext_i32_i64(virt_group_id_44724) *
                        squot64(segred_group_sizze_35630,
                                segment_sizze_nonzzero_44713), i32_res_28493) *
                i32_res_28493;
        int64_t gtid_35581 = srem64(sext_i32_i64(local_tid_44716),
                                    i32_res_28493);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_28493) && ((slt64(gtid_35571, m_28474) &&
                                             slt64(gtid_35572,
                                                   i32_res_28493)) &&
                                            slt64(sext_i32_i64(local_tid_44716),
                                                  i32_res_28493 *
                                                  squot64(segred_group_sizze_35630,
                                                          segment_sizze_nonzzero_44713)))) {
                float x_35640 = ((__global
                                  float *) defunc_3_map_res_mem_43591)[gtid_35571 *
                                                                       i32_res_28493 +
                                                                       gtid_35581];
                float x_35641 = ((__global
                                  float *) defunc_3_map_res_mem_43370)[gtid_35571 *
                                                                       (i32_res_28493 *
                                                                        i32_res_28493) +
                                                                       gtid_35572 *
                                                                       i32_res_28493 +
                                                                       gtid_35581];
                float defunc_1_f_res_35642 = x_35640 * x_35641;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44720)[sext_i32_i64(local_tid_44716)] =
                        defunc_1_f_res_35642;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44720)[sext_i32_i64(local_tid_44716)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_28493)) {
            // perform segmented scan to imitate reduction
            {
                float x_35634;
                float x_35635;
                float x_44725;
                float x_44726;
                bool ltid_in_bounds_44728;
                
                ltid_in_bounds_44728 = slt64(sext_i32_i64(local_tid_44716),
                                             i32_res_28493 *
                                             squot64(segred_group_sizze_35630,
                                                     segment_sizze_nonzzero_44713));
                
                int32_t skip_threads_44729;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44728) {
                        x_35635 = ((volatile __local
                                    float *) red_arr_mem_44720)[sext_i32_i64(local_tid_44716)];
                        if ((local_tid_44716 - squot32(local_tid_44716, 32) *
                             32) == 0) {
                            x_35634 = x_35635;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44729 = 1;
                    while (slt32(skip_threads_44729, 32)) {
                        if (sle32(skip_threads_44729, local_tid_44716 -
                                  squot32(local_tid_44716, 32) * 32) &&
                            ltid_in_bounds_44728) {
                            // read operands
                            {
                                x_35634 = ((volatile __local
                                            float *) red_arr_mem_44720)[sext_i32_i64(local_tid_44716) -
                                                                        sext_i32_i64(skip_threads_44729)];
                            }
                            // perform operation
                            {
                                bool inactive_44730 =
                                     slt64(srem64(sext_i32_i64(local_tid_44716),
                                                  i32_res_28493),
                                           sext_i32_i64(local_tid_44716) -
                                           sext_i32_i64(local_tid_44716 -
                                           skip_threads_44729));
                                
                                if (inactive_44730) {
                                    x_35634 = x_35635;
                                }
                                if (!inactive_44730) {
                                    float defunc_1_op_res_35636 = x_35634 +
                                          x_35635;
                                    
                                    x_35634 = defunc_1_op_res_35636;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44718, skip_threads_44729)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44729, local_tid_44716 -
                                  squot32(local_tid_44716, 32) * 32) &&
                            ltid_in_bounds_44728) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44720)[sext_i32_i64(local_tid_44716)] =
                                    x_35634;
                                x_35635 = x_35634;
                            }
                        }
                        if (sle32(wave_sizze_44718, skip_threads_44729)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44729 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44716 - squot32(local_tid_44716, 32) * 32) ==
                        31 && ltid_in_bounds_44728) {
                        ((volatile __local
                          float *) red_arr_mem_44720)[sext_i32_i64(squot32(local_tid_44716,
                                                                           32))] =
                            x_35634;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44731;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44716, 32) == 0 &&
                            ltid_in_bounds_44728) {
                            x_44726 = ((volatile __local
                                        float *) red_arr_mem_44720)[sext_i32_i64(local_tid_44716)];
                            if ((local_tid_44716 - squot32(local_tid_44716,
                                                           32) * 32) == 0) {
                                x_44725 = x_44726;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44731 = 1;
                        while (slt32(skip_threads_44731, 32)) {
                            if (sle32(skip_threads_44731, local_tid_44716 -
                                      squot32(local_tid_44716, 32) * 32) &&
                                (squot32(local_tid_44716, 32) == 0 &&
                                 ltid_in_bounds_44728)) {
                                // read operands
                                {
                                    x_44725 = ((volatile __local
                                                float *) red_arr_mem_44720)[sext_i32_i64(local_tid_44716) -
                                                                            sext_i32_i64(skip_threads_44731)];
                                }
                                // perform operation
                                {
                                    bool inactive_44732 =
                                         slt64(srem64(sext_i32_i64(local_tid_44716 *
                                                      32 + 32 - 1),
                                                      i32_res_28493),
                                               sext_i32_i64(local_tid_44716 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44716 -
                                                             skip_threads_44731) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44732) {
                                        x_44725 = x_44726;
                                    }
                                    if (!inactive_44732) {
                                        float defunc_1_op_res_44727 = x_44725 +
                                              x_44726;
                                        
                                        x_44725 = defunc_1_op_res_44727;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44718, skip_threads_44731)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44731, local_tid_44716 -
                                      squot32(local_tid_44716, 32) * 32) &&
                                (squot32(local_tid_44716, 32) == 0 &&
                                 ltid_in_bounds_44728)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44720)[sext_i32_i64(local_tid_44716)] =
                                        x_44725;
                                    x_44726 = x_44725;
                                }
                            }
                            if (sle32(wave_sizze_44718, skip_threads_44731)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44731 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44716, 32) == 0 ||
                          !ltid_in_bounds_44728)) {
                        // read operands
                        {
                            x_35635 = x_35634;
                            x_35634 = ((__local
                                        float *) red_arr_mem_44720)[sext_i32_i64(squot32(local_tid_44716,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_44733 =
                                 slt64(srem64(sext_i32_i64(local_tid_44716),
                                              i32_res_28493),
                                       sext_i32_i64(local_tid_44716) -
                                       sext_i32_i64(squot32(local_tid_44716,
                                                            32) * 32 - 1));
                            
                            if (inactive_44733) {
                                x_35634 = x_35635;
                            }
                            if (!inactive_44733) {
                                float defunc_1_op_res_35636 = x_35634 + x_35635;
                                
                                x_35634 = defunc_1_op_res_35636;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44720)[sext_i32_i64(local_tid_44716)] =
                                x_35634;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44716, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44720)[sext_i32_i64(local_tid_44716)] =
                            x_35635;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44724) *
                      squot64(segred_group_sizze_35630,
                              segment_sizze_nonzzero_44713) +
                      sext_i32_i64(local_tid_44716), m_28474 * i32_res_28493) &&
                slt64(sext_i32_i64(local_tid_44716),
                      squot64(segred_group_sizze_35630,
                              segment_sizze_nonzzero_44713))) {
                ((__global
                  float *) mem_43651)[squot64(sext_i32_i64(virt_group_id_44724) *
                                              squot64(segred_group_sizze_35630,
                                                      segment_sizze_nonzzero_44713) +
                                              sext_i32_i64(local_tid_44716),
                                              i32_res_28493) * i32_res_28493 +
                                      (sext_i32_i64(virt_group_id_44724) *
                                       squot64(segred_group_sizze_35630,
                                               segment_sizze_nonzzero_44713) +
                                       sext_i32_i64(local_tid_44716) -
                                       squot64(sext_i32_i64(virt_group_id_44724) *
                                               squot64(segred_group_sizze_35630,
                                                       segment_sizze_nonzzero_44713) +
                                               sext_i32_i64(local_tid_44716),
                                               i32_res_28493) *
                                       i32_res_28493)] = ((__local
                                                           float *) red_arr_mem_44720)[(sext_i32_i64(local_tid_44716) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_44713 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35630
}
__kernel void mainMagnitudezisegred_small_35712(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44852_backing_aligned_0,
                                                int64_t N_28473,
                                                int64_t m_28474,
                                                int64_t i32_res_28493,
                                                int64_t num_groups_35759,
                                                __global
                                                unsigned char *mem_43139,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_43657,
                                                __global
                                                unsigned char *mem_43875,
                                                int64_t segment_sizze_nonzzero_44845)
{
    #define segred_group_sizze_35758 (mainMagnitudezisegred_group_sizze_35706)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44852_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44852_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44847;
    int32_t local_tid_44848;
    int64_t group_sizze_44851;
    int32_t wave_sizze_44850;
    int32_t group_tid_44849;
    
    global_tid_44847 = get_global_id(0);
    local_tid_44848 = get_local_id(0);
    group_sizze_44851 = get_local_size(0);
    wave_sizze_44850 = LOCKSTEP_WIDTH;
    group_tid_44849 = get_group_id(0);
    
    int32_t phys_tid_35712;
    
    phys_tid_35712 = global_tid_44847;
    
    __local char *red_arr_mem_44852;
    
    red_arr_mem_44852 = (__local char *) red_arr_mem_44852_backing_0;
    
    int32_t phys_group_id_44854;
    
    phys_group_id_44854 = get_group_id(0);
    for (int32_t i_44855 = 0; i_44855 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28474 * N_28473,
                                          squot64(segred_group_sizze_35758,
                                                  segment_sizze_nonzzero_44845))) -
                   phys_group_id_44854, sext_i64_i32(num_groups_35759));
         i_44855++) {
        int32_t virt_group_id_44856 = phys_group_id_44854 + i_44855 *
                sext_i64_i32(num_groups_35759);
        int64_t gtid_35701 = squot64(squot64(sext_i32_i64(local_tid_44848),
                                             segment_sizze_nonzzero_44845) +
                                     sext_i32_i64(virt_group_id_44856) *
                                     squot64(segred_group_sizze_35758,
                                             segment_sizze_nonzzero_44845),
                                     N_28473);
        int64_t gtid_35702 = squot64(sext_i32_i64(local_tid_44848),
                                     segment_sizze_nonzzero_44845) +
                sext_i32_i64(virt_group_id_44856) *
                squot64(segred_group_sizze_35758,
                        segment_sizze_nonzzero_44845) -
                squot64(squot64(sext_i32_i64(local_tid_44848),
                                segment_sizze_nonzzero_44845) +
                        sext_i32_i64(virt_group_id_44856) *
                        squot64(segred_group_sizze_35758,
                                segment_sizze_nonzzero_44845), N_28473) *
                N_28473;
        int64_t gtid_35711 = srem64(sext_i32_i64(local_tid_44848),
                                    i32_res_28493);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_28493) && ((slt64(gtid_35701, m_28474) &&
                                             slt64(gtid_35702, N_28473)) &&
                                            slt64(sext_i32_i64(local_tid_44848),
                                                  i32_res_28493 *
                                                  squot64(segred_group_sizze_35758,
                                                          segment_sizze_nonzzero_44845)))) {
                float x_35767 = ((__global
                                  float *) defunc_4_map_res_mem_43657)[gtid_35701 *
                                                                       i32_res_28493 +
                                                                       gtid_35711];
                float x_35768 = ((__global float *) mem_43139)[gtid_35702 *
                                                               i32_res_28493 +
                                                               gtid_35711];
                float defunc_1_f_res_35769 = x_35767 * x_35768;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44852)[sext_i32_i64(local_tid_44848)] =
                        defunc_1_f_res_35769;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44852)[sext_i32_i64(local_tid_44848)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_28493)) {
            // perform segmented scan to imitate reduction
            {
                float x_35762;
                float x_35763;
                float x_44857;
                float x_44858;
                bool ltid_in_bounds_44860;
                
                ltid_in_bounds_44860 = slt64(sext_i32_i64(local_tid_44848),
                                             i32_res_28493 *
                                             squot64(segred_group_sizze_35758,
                                                     segment_sizze_nonzzero_44845));
                
                int32_t skip_threads_44861;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44860) {
                        x_35763 = ((volatile __local
                                    float *) red_arr_mem_44852)[sext_i32_i64(local_tid_44848)];
                        if ((local_tid_44848 - squot32(local_tid_44848, 32) *
                             32) == 0) {
                            x_35762 = x_35763;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44861 = 1;
                    while (slt32(skip_threads_44861, 32)) {
                        if (sle32(skip_threads_44861, local_tid_44848 -
                                  squot32(local_tid_44848, 32) * 32) &&
                            ltid_in_bounds_44860) {
                            // read operands
                            {
                                x_35762 = ((volatile __local
                                            float *) red_arr_mem_44852)[sext_i32_i64(local_tid_44848) -
                                                                        sext_i32_i64(skip_threads_44861)];
                            }
                            // perform operation
                            {
                                bool inactive_44862 =
                                     slt64(srem64(sext_i32_i64(local_tid_44848),
                                                  i32_res_28493),
                                           sext_i32_i64(local_tid_44848) -
                                           sext_i32_i64(local_tid_44848 -
                                           skip_threads_44861));
                                
                                if (inactive_44862) {
                                    x_35762 = x_35763;
                                }
                                if (!inactive_44862) {
                                    float defunc_1_op_res_35764 = x_35762 +
                                          x_35763;
                                    
                                    x_35762 = defunc_1_op_res_35764;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44850, skip_threads_44861)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44861, local_tid_44848 -
                                  squot32(local_tid_44848, 32) * 32) &&
                            ltid_in_bounds_44860) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44852)[sext_i32_i64(local_tid_44848)] =
                                    x_35762;
                                x_35763 = x_35762;
                            }
                        }
                        if (sle32(wave_sizze_44850, skip_threads_44861)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44861 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44848 - squot32(local_tid_44848, 32) * 32) ==
                        31 && ltid_in_bounds_44860) {
                        ((volatile __local
                          float *) red_arr_mem_44852)[sext_i32_i64(squot32(local_tid_44848,
                                                                           32))] =
                            x_35762;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44863;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44848, 32) == 0 &&
                            ltid_in_bounds_44860) {
                            x_44858 = ((volatile __local
                                        float *) red_arr_mem_44852)[sext_i32_i64(local_tid_44848)];
                            if ((local_tid_44848 - squot32(local_tid_44848,
                                                           32) * 32) == 0) {
                                x_44857 = x_44858;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44863 = 1;
                        while (slt32(skip_threads_44863, 32)) {
                            if (sle32(skip_threads_44863, local_tid_44848 -
                                      squot32(local_tid_44848, 32) * 32) &&
                                (squot32(local_tid_44848, 32) == 0 &&
                                 ltid_in_bounds_44860)) {
                                // read operands
                                {
                                    x_44857 = ((volatile __local
                                                float *) red_arr_mem_44852)[sext_i32_i64(local_tid_44848) -
                                                                            sext_i32_i64(skip_threads_44863)];
                                }
                                // perform operation
                                {
                                    bool inactive_44864 =
                                         slt64(srem64(sext_i32_i64(local_tid_44848 *
                                                      32 + 32 - 1),
                                                      i32_res_28493),
                                               sext_i32_i64(local_tid_44848 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44848 -
                                                             skip_threads_44863) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44864) {
                                        x_44857 = x_44858;
                                    }
                                    if (!inactive_44864) {
                                        float defunc_1_op_res_44859 = x_44857 +
                                              x_44858;
                                        
                                        x_44857 = defunc_1_op_res_44859;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44850, skip_threads_44863)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44863, local_tid_44848 -
                                      squot32(local_tid_44848, 32) * 32) &&
                                (squot32(local_tid_44848, 32) == 0 &&
                                 ltid_in_bounds_44860)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44852)[sext_i32_i64(local_tid_44848)] =
                                        x_44857;
                                    x_44858 = x_44857;
                                }
                            }
                            if (sle32(wave_sizze_44850, skip_threads_44863)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44863 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44848, 32) == 0 ||
                          !ltid_in_bounds_44860)) {
                        // read operands
                        {
                            x_35763 = x_35762;
                            x_35762 = ((__local
                                        float *) red_arr_mem_44852)[sext_i32_i64(squot32(local_tid_44848,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_44865 =
                                 slt64(srem64(sext_i32_i64(local_tid_44848),
                                              i32_res_28493),
                                       sext_i32_i64(local_tid_44848) -
                                       sext_i32_i64(squot32(local_tid_44848,
                                                            32) * 32 - 1));
                            
                            if (inactive_44865) {
                                x_35762 = x_35763;
                            }
                            if (!inactive_44865) {
                                float defunc_1_op_res_35764 = x_35762 + x_35763;
                                
                                x_35762 = defunc_1_op_res_35764;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44852)[sext_i32_i64(local_tid_44848)] =
                                x_35762;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44848, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44852)[sext_i32_i64(local_tid_44848)] =
                            x_35763;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44856) *
                      squot64(segred_group_sizze_35758,
                              segment_sizze_nonzzero_44845) +
                      sext_i32_i64(local_tid_44848), m_28474 * N_28473) &&
                slt64(sext_i32_i64(local_tid_44848),
                      squot64(segred_group_sizze_35758,
                              segment_sizze_nonzzero_44845))) {
                ((__global
                  float *) mem_43875)[squot64(sext_i32_i64(virt_group_id_44856) *
                                              squot64(segred_group_sizze_35758,
                                                      segment_sizze_nonzzero_44845) +
                                              sext_i32_i64(local_tid_44848),
                                              N_28473) * N_28473 +
                                      (sext_i32_i64(virt_group_id_44856) *
                                       squot64(segred_group_sizze_35758,
                                               segment_sizze_nonzzero_44845) +
                                       sext_i32_i64(local_tid_44848) -
                                       squot64(sext_i32_i64(virt_group_id_44856) *
                                               squot64(segred_group_sizze_35758,
                                                       segment_sizze_nonzzero_44845) +
                                               sext_i32_i64(local_tid_44848),
                                               N_28473) * N_28473)] = ((__local
                                                                        float *) red_arr_mem_44852)[(sext_i32_i64(local_tid_44848) +
                                                                                                     1) *
                                                                                                    segment_sizze_nonzzero_44845 -
                                                                                                    1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35758
}
__kernel void mainMagnitudezisegred_small_36278(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_45106_backing_aligned_0,
                                                int64_t N_28473,
                                                int64_t m_28474,
                                                int64_t i32_res_28487,
                                                int64_t num_groups_36325,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_43919,
                                                __global
                                                unsigned char *mem_43970,
                                                __global
                                                unsigned char *mem_43973,
                                                int64_t segment_sizze_nonzzero_45099)
{
    #define segred_group_sizze_36324 (mainMagnitudezisegred_group_sizze_36272)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45106_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45106_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45101;
    int32_t local_tid_45102;
    int64_t group_sizze_45105;
    int32_t wave_sizze_45104;
    int32_t group_tid_45103;
    
    global_tid_45101 = get_global_id(0);
    local_tid_45102 = get_local_id(0);
    group_sizze_45105 = get_local_size(0);
    wave_sizze_45104 = LOCKSTEP_WIDTH;
    group_tid_45103 = get_group_id(0);
    
    int32_t phys_tid_36278;
    
    phys_tid_36278 = global_tid_45101;
    
    __local char *red_arr_mem_45106;
    
    red_arr_mem_45106 = (__local char *) red_arr_mem_45106_backing_0;
    
    int32_t phys_group_id_45108;
    
    phys_group_id_45108 = get_group_id(0);
    for (int32_t i_45109 = 0; i_45109 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28474,
                                          squot64(segred_group_sizze_36324,
                                                  segment_sizze_nonzzero_45099))) -
                   phys_group_id_45108, sext_i64_i32(num_groups_36325));
         i_45109++) {
        int32_t virt_group_id_45110 = phys_group_id_45108 + i_45109 *
                sext_i64_i32(num_groups_36325);
        int64_t gtid_36269 = squot64(sext_i32_i64(local_tid_45102),
                                     segment_sizze_nonzzero_45099) +
                sext_i32_i64(virt_group_id_45110) *
                squot64(segred_group_sizze_36324, segment_sizze_nonzzero_45099);
        int64_t gtid_36277 = srem64(sext_i32_i64(local_tid_45102),
                                    i32_res_28487);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_28487) && (slt64(gtid_36269, m_28474) &&
                                            slt64(sext_i32_i64(local_tid_45102),
                                                  i32_res_28487 *
                                                  squot64(segred_group_sizze_36324,
                                                          segment_sizze_nonzzero_45099)))) {
                int32_t defunc_0_f_res_36332 = ((__global
                                                 int32_t *) mem_43970)[gtid_36269];
                int32_t index_primexp_41162 = sext_i64_i32(gtid_36277);
                bool cond_36334 = slt32(index_primexp_41162,
                                        defunc_0_f_res_36332);
                float defunc_0_f_res_36335;
                
                if (cond_36334) {
                    int64_t i_36336 = sext_i32_i64(index_primexp_41162);
                    float defunc_0_f_res_t_res_36337 = ((__global
                                                         float *) defunc_4_map_res_mem_43919)[gtid_36269 *
                                                                                              N_28473 +
                                                                                              i_36336];
                    
                    defunc_0_f_res_36335 = defunc_0_f_res_t_res_36337;
                } else {
                    defunc_0_f_res_36335 = 0.0F;
                }
                
                float defunc_0_f_res_36338 = defunc_0_f_res_36335 *
                      defunc_0_f_res_36335;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45106)[sext_i32_i64(local_tid_45102)] =
                        defunc_0_f_res_36338;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45106)[sext_i32_i64(local_tid_45102)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_28487)) {
            // perform segmented scan to imitate reduction
            {
                float x_36328;
                float x_36329;
                float x_45111;
                float x_45112;
                bool ltid_in_bounds_45114;
                
                ltid_in_bounds_45114 = slt64(sext_i32_i64(local_tid_45102),
                                             i32_res_28487 *
                                             squot64(segred_group_sizze_36324,
                                                     segment_sizze_nonzzero_45099));
                
                int32_t skip_threads_45115;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45114) {
                        x_36329 = ((volatile __local
                                    float *) red_arr_mem_45106)[sext_i32_i64(local_tid_45102)];
                        if ((local_tid_45102 - squot32(local_tid_45102, 32) *
                             32) == 0) {
                            x_36328 = x_36329;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45115 = 1;
                    while (slt32(skip_threads_45115, 32)) {
                        if (sle32(skip_threads_45115, local_tid_45102 -
                                  squot32(local_tid_45102, 32) * 32) &&
                            ltid_in_bounds_45114) {
                            // read operands
                            {
                                x_36328 = ((volatile __local
                                            float *) red_arr_mem_45106)[sext_i32_i64(local_tid_45102) -
                                                                        sext_i32_i64(skip_threads_45115)];
                            }
                            // perform operation
                            {
                                bool inactive_45116 =
                                     slt64(srem64(sext_i32_i64(local_tid_45102),
                                                  i32_res_28487),
                                           sext_i32_i64(local_tid_45102) -
                                           sext_i32_i64(local_tid_45102 -
                                           skip_threads_45115));
                                
                                if (inactive_45116) {
                                    x_36328 = x_36329;
                                }
                                if (!inactive_45116) {
                                    float defunc_1_op_res_36330 = x_36328 +
                                          x_36329;
                                    
                                    x_36328 = defunc_1_op_res_36330;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45104, skip_threads_45115)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45115, local_tid_45102 -
                                  squot32(local_tid_45102, 32) * 32) &&
                            ltid_in_bounds_45114) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45106)[sext_i32_i64(local_tid_45102)] =
                                    x_36328;
                                x_36329 = x_36328;
                            }
                        }
                        if (sle32(wave_sizze_45104, skip_threads_45115)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45115 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45102 - squot32(local_tid_45102, 32) * 32) ==
                        31 && ltid_in_bounds_45114) {
                        ((volatile __local
                          float *) red_arr_mem_45106)[sext_i32_i64(squot32(local_tid_45102,
                                                                           32))] =
                            x_36328;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45117;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45102, 32) == 0 &&
                            ltid_in_bounds_45114) {
                            x_45112 = ((volatile __local
                                        float *) red_arr_mem_45106)[sext_i32_i64(local_tid_45102)];
                            if ((local_tid_45102 - squot32(local_tid_45102,
                                                           32) * 32) == 0) {
                                x_45111 = x_45112;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45117 = 1;
                        while (slt32(skip_threads_45117, 32)) {
                            if (sle32(skip_threads_45117, local_tid_45102 -
                                      squot32(local_tid_45102, 32) * 32) &&
                                (squot32(local_tid_45102, 32) == 0 &&
                                 ltid_in_bounds_45114)) {
                                // read operands
                                {
                                    x_45111 = ((volatile __local
                                                float *) red_arr_mem_45106)[sext_i32_i64(local_tid_45102) -
                                                                            sext_i32_i64(skip_threads_45117)];
                                }
                                // perform operation
                                {
                                    bool inactive_45118 =
                                         slt64(srem64(sext_i32_i64(local_tid_45102 *
                                                      32 + 32 - 1),
                                                      i32_res_28487),
                                               sext_i32_i64(local_tid_45102 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45102 -
                                                             skip_threads_45117) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45118) {
                                        x_45111 = x_45112;
                                    }
                                    if (!inactive_45118) {
                                        float defunc_1_op_res_45113 = x_45111 +
                                              x_45112;
                                        
                                        x_45111 = defunc_1_op_res_45113;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45104, skip_threads_45117)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45117, local_tid_45102 -
                                      squot32(local_tid_45102, 32) * 32) &&
                                (squot32(local_tid_45102, 32) == 0 &&
                                 ltid_in_bounds_45114)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45106)[sext_i32_i64(local_tid_45102)] =
                                        x_45111;
                                    x_45112 = x_45111;
                                }
                            }
                            if (sle32(wave_sizze_45104, skip_threads_45117)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45117 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45102, 32) == 0 ||
                          !ltid_in_bounds_45114)) {
                        // read operands
                        {
                            x_36329 = x_36328;
                            x_36328 = ((__local
                                        float *) red_arr_mem_45106)[sext_i32_i64(squot32(local_tid_45102,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45119 =
                                 slt64(srem64(sext_i32_i64(local_tid_45102),
                                              i32_res_28487),
                                       sext_i32_i64(local_tid_45102) -
                                       sext_i32_i64(squot32(local_tid_45102,
                                                            32) * 32 - 1));
                            
                            if (inactive_45119) {
                                x_36328 = x_36329;
                            }
                            if (!inactive_45119) {
                                float defunc_1_op_res_36330 = x_36328 + x_36329;
                                
                                x_36328 = defunc_1_op_res_36330;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45106)[sext_i32_i64(local_tid_45102)] =
                                x_36328;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45102, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45106)[sext_i32_i64(local_tid_45102)] =
                            x_36329;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45110) *
                      squot64(segred_group_sizze_36324,
                              segment_sizze_nonzzero_45099) +
                      sext_i32_i64(local_tid_45102), m_28474) &&
                slt64(sext_i32_i64(local_tid_45102),
                      squot64(segred_group_sizze_36324,
                              segment_sizze_nonzzero_45099))) {
                ((__global
                  float *) mem_43973)[sext_i32_i64(virt_group_id_45110) *
                                      squot64(segred_group_sizze_36324,
                                              segment_sizze_nonzzero_45099) +
                                      sext_i32_i64(local_tid_45102)] = ((__local
                                                                         float *) red_arr_mem_45106)[(sext_i32_i64(local_tid_45102) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45099 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36324
}
__kernel void mainMagnitudezisegred_small_36299(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_45046_backing_aligned_0,
                                                int64_t m_28474,
                                                int64_t N_28475,
                                                int64_t i32_res_28487,
                                                int64_t num_groups_36311,
                                                __global
                                                unsigned char *images_mem_43123,
                                                __global
                                                unsigned char *mem_43970,
                                                int64_t segment_sizze_nonzzero_45039)
{
    #define segred_group_sizze_36310 (mainMagnitudezisegred_group_sizze_36293)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45046_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45046_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45041;
    int32_t local_tid_45042;
    int64_t group_sizze_45045;
    int32_t wave_sizze_45044;
    int32_t group_tid_45043;
    
    global_tid_45041 = get_global_id(0);
    local_tid_45042 = get_local_id(0);
    group_sizze_45045 = get_local_size(0);
    wave_sizze_45044 = LOCKSTEP_WIDTH;
    group_tid_45043 = get_group_id(0);
    
    int32_t phys_tid_36299;
    
    phys_tid_36299 = global_tid_45041;
    
    __local char *red_arr_mem_45046;
    
    red_arr_mem_45046 = (__local char *) red_arr_mem_45046_backing_0;
    
    int32_t phys_group_id_45048;
    
    phys_group_id_45048 = get_group_id(0);
    for (int32_t i_45049 = 0; i_45049 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28474,
                                          squot64(segred_group_sizze_36310,
                                                  segment_sizze_nonzzero_45039))) -
                   phys_group_id_45048, sext_i64_i32(num_groups_36311));
         i_45049++) {
        int32_t virt_group_id_45050 = phys_group_id_45048 + i_45049 *
                sext_i64_i32(num_groups_36311);
        int64_t gtid_36290 = squot64(sext_i32_i64(local_tid_45042),
                                     segment_sizze_nonzzero_45039) +
                sext_i32_i64(virt_group_id_45050) *
                squot64(segred_group_sizze_36310, segment_sizze_nonzzero_45039);
        int64_t gtid_36298 = srem64(sext_i32_i64(local_tid_45042),
                                    i32_res_28487);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_28487) && (slt64(gtid_36290, m_28474) &&
                                            slt64(sext_i32_i64(local_tid_45042),
                                                  i32_res_28487 *
                                                  squot64(segred_group_sizze_36310,
                                                          segment_sizze_nonzzero_45039)))) {
                float x_36318 = ((__global
                                  float *) images_mem_43123)[gtid_36290 *
                                                             N_28475 +
                                                             gtid_36298];
                bool isnan_res_36319;
                
                isnan_res_36319 = futrts_isnan32(x_36318);
                
                bool cond_36320 = !isnan_res_36319;
                int32_t defunc_0_f_res_36321 = btoi_bool_i32(cond_36320);
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      int32_t *) red_arr_mem_45046)[sext_i32_i64(local_tid_45042)] =
                        defunc_0_f_res_36321;
                }
            } else {
                ((__local
                  int32_t *) red_arr_mem_45046)[sext_i32_i64(local_tid_45042)] =
                    0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_28487)) {
            // perform segmented scan to imitate reduction
            {
                int32_t x_36314;
                int32_t x_36315;
                int32_t x_45051;
                int32_t x_45052;
                bool ltid_in_bounds_45054;
                
                ltid_in_bounds_45054 = slt64(sext_i32_i64(local_tid_45042),
                                             i32_res_28487 *
                                             squot64(segred_group_sizze_36310,
                                                     segment_sizze_nonzzero_45039));
                
                int32_t skip_threads_45055;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45054) {
                        x_36315 = ((volatile __local
                                    int32_t *) red_arr_mem_45046)[sext_i32_i64(local_tid_45042)];
                        if ((local_tid_45042 - squot32(local_tid_45042, 32) *
                             32) == 0) {
                            x_36314 = x_36315;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45055 = 1;
                    while (slt32(skip_threads_45055, 32)) {
                        if (sle32(skip_threads_45055, local_tid_45042 -
                                  squot32(local_tid_45042, 32) * 32) &&
                            ltid_in_bounds_45054) {
                            // read operands
                            {
                                x_36314 = ((volatile __local
                                            int32_t *) red_arr_mem_45046)[sext_i32_i64(local_tid_45042) -
                                                                          sext_i32_i64(skip_threads_45055)];
                            }
                            // perform operation
                            {
                                bool inactive_45056 =
                                     slt64(srem64(sext_i32_i64(local_tid_45042),
                                                  i32_res_28487),
                                           sext_i32_i64(local_tid_45042) -
                                           sext_i32_i64(local_tid_45042 -
                                           skip_threads_45055));
                                
                                if (inactive_45056) {
                                    x_36314 = x_36315;
                                }
                                if (!inactive_45056) {
                                    int32_t defunc_1_op_res_36316 =
                                            add32(x_36314, x_36315);
                                    
                                    x_36314 = defunc_1_op_res_36316;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45044, skip_threads_45055)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45055, local_tid_45042 -
                                  squot32(local_tid_45042, 32) * 32) &&
                            ltid_in_bounds_45054) {
                            // write result
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_45046)[sext_i32_i64(local_tid_45042)] =
                                    x_36314;
                                x_36315 = x_36314;
                            }
                        }
                        if (sle32(wave_sizze_45044, skip_threads_45055)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45055 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45042 - squot32(local_tid_45042, 32) * 32) ==
                        31 && ltid_in_bounds_45054) {
                        ((volatile __local
                          int32_t *) red_arr_mem_45046)[sext_i32_i64(squot32(local_tid_45042,
                                                                             32))] =
                            x_36314;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45057;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45042, 32) == 0 &&
                            ltid_in_bounds_45054) {
                            x_45052 = ((volatile __local
                                        int32_t *) red_arr_mem_45046)[sext_i32_i64(local_tid_45042)];
                            if ((local_tid_45042 - squot32(local_tid_45042,
                                                           32) * 32) == 0) {
                                x_45051 = x_45052;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45057 = 1;
                        while (slt32(skip_threads_45057, 32)) {
                            if (sle32(skip_threads_45057, local_tid_45042 -
                                      squot32(local_tid_45042, 32) * 32) &&
                                (squot32(local_tid_45042, 32) == 0 &&
                                 ltid_in_bounds_45054)) {
                                // read operands
                                {
                                    x_45051 = ((volatile __local
                                                int32_t *) red_arr_mem_45046)[sext_i32_i64(local_tid_45042) -
                                                                              sext_i32_i64(skip_threads_45057)];
                                }
                                // perform operation
                                {
                                    bool inactive_45058 =
                                         slt64(srem64(sext_i32_i64(local_tid_45042 *
                                                      32 + 32 - 1),
                                                      i32_res_28487),
                                               sext_i32_i64(local_tid_45042 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45042 -
                                                             skip_threads_45057) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45058) {
                                        x_45051 = x_45052;
                                    }
                                    if (!inactive_45058) {
                                        int32_t defunc_1_op_res_45053 =
                                                add32(x_45051, x_45052);
                                        
                                        x_45051 = defunc_1_op_res_45053;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45044, skip_threads_45057)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45057, local_tid_45042 -
                                      squot32(local_tid_45042, 32) * 32) &&
                                (squot32(local_tid_45042, 32) == 0 &&
                                 ltid_in_bounds_45054)) {
                                // write result
                                {
                                    ((volatile __local
                                      int32_t *) red_arr_mem_45046)[sext_i32_i64(local_tid_45042)] =
                                        x_45051;
                                    x_45052 = x_45051;
                                }
                            }
                            if (sle32(wave_sizze_45044, skip_threads_45057)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45057 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45042, 32) == 0 ||
                          !ltid_in_bounds_45054)) {
                        // read operands
                        {
                            x_36315 = x_36314;
                            x_36314 = ((__local
                                        int32_t *) red_arr_mem_45046)[sext_i32_i64(squot32(local_tid_45042,
                                                                                           32)) -
                                                                      1];
                        }
                        // perform operation
                        {
                            bool inactive_45059 =
                                 slt64(srem64(sext_i32_i64(local_tid_45042),
                                              i32_res_28487),
                                       sext_i32_i64(local_tid_45042) -
                                       sext_i32_i64(squot32(local_tid_45042,
                                                            32) * 32 - 1));
                            
                            if (inactive_45059) {
                                x_36314 = x_36315;
                            }
                            if (!inactive_45059) {
                                int32_t defunc_1_op_res_36316 = add32(x_36314,
                                                                      x_36315);
                                
                                x_36314 = defunc_1_op_res_36316;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              int32_t *) red_arr_mem_45046)[sext_i32_i64(local_tid_45042)] =
                                x_36314;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45042, 32) == 0) {
                        ((__local
                          int32_t *) red_arr_mem_45046)[sext_i32_i64(local_tid_45042)] =
                            x_36315;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45050) *
                      squot64(segred_group_sizze_36310,
                              segment_sizze_nonzzero_45039) +
                      sext_i32_i64(local_tid_45042), m_28474) &&
                slt64(sext_i32_i64(local_tid_45042),
                      squot64(segred_group_sizze_36310,
                              segment_sizze_nonzzero_45039))) {
                ((__global
                  int32_t *) mem_43970)[sext_i32_i64(virt_group_id_45050) *
                                        squot64(segred_group_sizze_36310,
                                                segment_sizze_nonzzero_45039) +
                                        sext_i32_i64(local_tid_45042)] =
                    ((__local
                      int32_t *) red_arr_mem_45046)[(sext_i32_i64(local_tid_45042) +
                                                     1) *
                                                    segment_sizze_nonzzero_45039 -
                                                    1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36310
}
__kernel void mainMagnitudezisegred_small_36450(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_45215_backing_aligned_0,
                                                int64_t N_28473,
                                                int64_t m_28474,
                                                int64_t i32_res_28848,
                                                int64_t num_groups_36468,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_43919,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43982,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43983,
                                                __global
                                                unsigned char *mem_44016,
                                                int64_t segment_sizze_nonzzero_45208)
{
    #define segred_group_sizze_36467 (mainMagnitudezisegred_group_sizze_36444)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45215_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45215_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45210;
    int32_t local_tid_45211;
    int64_t group_sizze_45214;
    int32_t wave_sizze_45213;
    int32_t group_tid_45212;
    
    global_tid_45210 = get_global_id(0);
    local_tid_45211 = get_local_id(0);
    group_sizze_45214 = get_local_size(0);
    wave_sizze_45213 = LOCKSTEP_WIDTH;
    group_tid_45212 = get_group_id(0);
    
    int32_t phys_tid_36450;
    
    phys_tid_36450 = global_tid_45210;
    
    __local char *red_arr_mem_45215;
    
    red_arr_mem_45215 = (__local char *) red_arr_mem_45215_backing_0;
    
    int32_t phys_group_id_45217;
    
    phys_group_id_45217 = get_group_id(0);
    for (int32_t i_45218 = 0; i_45218 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28474,
                                          squot64(segred_group_sizze_36467,
                                                  segment_sizze_nonzzero_45208))) -
                   phys_group_id_45217, sext_i64_i32(num_groups_36468));
         i_45218++) {
        int32_t virt_group_id_45219 = phys_group_id_45217 + i_45218 *
                sext_i64_i32(num_groups_36468);
        int64_t gtid_36441 = squot64(sext_i32_i64(local_tid_45211),
                                     segment_sizze_nonzzero_45208) +
                sext_i32_i64(virt_group_id_45219) *
                squot64(segred_group_sizze_36467, segment_sizze_nonzzero_45208);
        int64_t gtid_36449 = srem64(sext_i32_i64(local_tid_45211),
                                    i32_res_28848);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_28848) && (slt64(gtid_36441, m_28474) &&
                                            slt64(sext_i32_i64(local_tid_45211),
                                                  i32_res_28848 *
                                                  squot64(segred_group_sizze_36467,
                                                          segment_sizze_nonzzero_45208)))) {
                int32_t x_36476 = ((__global
                                    int32_t *) defunc_3_map_res_mem_43982)[gtid_36441];
                int32_t index_primexp_41167 = sext_i64_i32(gtid_36449);
                bool cond_36478 = slt32(index_primexp_41167, x_36476);
                float defunc_0_f_res_36479;
                
                if (cond_36478) {
                    int32_t x_36475 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43983)[gtid_36441];
                    int32_t x_36480 = add32(x_36475, index_primexp_41167);
                    int32_t x_36481 = sub32(x_36480, x_36476);
                    int32_t i_36482 = add32(1, x_36481);
                    int64_t i_36483 = sext_i32_i64(i_36482);
                    float defunc_0_f_res_t_res_36484 = ((__global
                                                         float *) defunc_4_map_res_mem_43919)[gtid_36441 *
                                                                                              N_28473 +
                                                                                              i_36483];
                    
                    defunc_0_f_res_36479 = defunc_0_f_res_t_res_36484;
                } else {
                    defunc_0_f_res_36479 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_45215)[sext_i32_i64(local_tid_45211)] =
                        defunc_0_f_res_36479;
                }
            } else {
                ((__local
                  float *) red_arr_mem_45215)[sext_i32_i64(local_tid_45211)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_28848)) {
            // perform segmented scan to imitate reduction
            {
                float x_36471;
                float x_36472;
                float x_45220;
                float x_45221;
                bool ltid_in_bounds_45223;
                
                ltid_in_bounds_45223 = slt64(sext_i32_i64(local_tid_45211),
                                             i32_res_28848 *
                                             squot64(segred_group_sizze_36467,
                                                     segment_sizze_nonzzero_45208));
                
                int32_t skip_threads_45224;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45223) {
                        x_36472 = ((volatile __local
                                    float *) red_arr_mem_45215)[sext_i32_i64(local_tid_45211)];
                        if ((local_tid_45211 - squot32(local_tid_45211, 32) *
                             32) == 0) {
                            x_36471 = x_36472;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45224 = 1;
                    while (slt32(skip_threads_45224, 32)) {
                        if (sle32(skip_threads_45224, local_tid_45211 -
                                  squot32(local_tid_45211, 32) * 32) &&
                            ltid_in_bounds_45223) {
                            // read operands
                            {
                                x_36471 = ((volatile __local
                                            float *) red_arr_mem_45215)[sext_i32_i64(local_tid_45211) -
                                                                        sext_i32_i64(skip_threads_45224)];
                            }
                            // perform operation
                            {
                                bool inactive_45225 =
                                     slt64(srem64(sext_i32_i64(local_tid_45211),
                                                  i32_res_28848),
                                           sext_i32_i64(local_tid_45211) -
                                           sext_i32_i64(local_tid_45211 -
                                           skip_threads_45224));
                                
                                if (inactive_45225) {
                                    x_36471 = x_36472;
                                }
                                if (!inactive_45225) {
                                    float defunc_1_op_res_36473 = x_36471 +
                                          x_36472;
                                    
                                    x_36471 = defunc_1_op_res_36473;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45213, skip_threads_45224)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45224, local_tid_45211 -
                                  squot32(local_tid_45211, 32) * 32) &&
                            ltid_in_bounds_45223) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_45215)[sext_i32_i64(local_tid_45211)] =
                                    x_36471;
                                x_36472 = x_36471;
                            }
                        }
                        if (sle32(wave_sizze_45213, skip_threads_45224)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45224 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45211 - squot32(local_tid_45211, 32) * 32) ==
                        31 && ltid_in_bounds_45223) {
                        ((volatile __local
                          float *) red_arr_mem_45215)[sext_i32_i64(squot32(local_tid_45211,
                                                                           32))] =
                            x_36471;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45226;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45211, 32) == 0 &&
                            ltid_in_bounds_45223) {
                            x_45221 = ((volatile __local
                                        float *) red_arr_mem_45215)[sext_i32_i64(local_tid_45211)];
                            if ((local_tid_45211 - squot32(local_tid_45211,
                                                           32) * 32) == 0) {
                                x_45220 = x_45221;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45226 = 1;
                        while (slt32(skip_threads_45226, 32)) {
                            if (sle32(skip_threads_45226, local_tid_45211 -
                                      squot32(local_tid_45211, 32) * 32) &&
                                (squot32(local_tid_45211, 32) == 0 &&
                                 ltid_in_bounds_45223)) {
                                // read operands
                                {
                                    x_45220 = ((volatile __local
                                                float *) red_arr_mem_45215)[sext_i32_i64(local_tid_45211) -
                                                                            sext_i32_i64(skip_threads_45226)];
                                }
                                // perform operation
                                {
                                    bool inactive_45227 =
                                         slt64(srem64(sext_i32_i64(local_tid_45211 *
                                                      32 + 32 - 1),
                                                      i32_res_28848),
                                               sext_i32_i64(local_tid_45211 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45211 -
                                                             skip_threads_45226) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45227) {
                                        x_45220 = x_45221;
                                    }
                                    if (!inactive_45227) {
                                        float defunc_1_op_res_45222 = x_45220 +
                                              x_45221;
                                        
                                        x_45220 = defunc_1_op_res_45222;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45213, skip_threads_45226)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45226, local_tid_45211 -
                                      squot32(local_tid_45211, 32) * 32) &&
                                (squot32(local_tid_45211, 32) == 0 &&
                                 ltid_in_bounds_45223)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_45215)[sext_i32_i64(local_tid_45211)] =
                                        x_45220;
                                    x_45221 = x_45220;
                                }
                            }
                            if (sle32(wave_sizze_45213, skip_threads_45226)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45226 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45211, 32) == 0 ||
                          !ltid_in_bounds_45223)) {
                        // read operands
                        {
                            x_36472 = x_36471;
                            x_36471 = ((__local
                                        float *) red_arr_mem_45215)[sext_i32_i64(squot32(local_tid_45211,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45228 =
                                 slt64(srem64(sext_i32_i64(local_tid_45211),
                                              i32_res_28848),
                                       sext_i32_i64(local_tid_45211) -
                                       sext_i32_i64(squot32(local_tid_45211,
                                                            32) * 32 - 1));
                            
                            if (inactive_45228) {
                                x_36471 = x_36472;
                            }
                            if (!inactive_45228) {
                                float defunc_1_op_res_36473 = x_36471 + x_36472;
                                
                                x_36471 = defunc_1_op_res_36473;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_45215)[sext_i32_i64(local_tid_45211)] =
                                x_36471;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45211, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_45215)[sext_i32_i64(local_tid_45211)] =
                            x_36472;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45219) *
                      squot64(segred_group_sizze_36467,
                              segment_sizze_nonzzero_45208) +
                      sext_i32_i64(local_tid_45211), m_28474) &&
                slt64(sext_i32_i64(local_tid_45211),
                      squot64(segred_group_sizze_36467,
                              segment_sizze_nonzzero_45208))) {
                ((__global
                  float *) mem_44016)[sext_i32_i64(virt_group_id_45219) *
                                      squot64(segred_group_sizze_36467,
                                              segment_sizze_nonzzero_45208) +
                                      sext_i32_i64(local_tid_45211)] = ((__local
                                                                         float *) red_arr_mem_45215)[(sext_i32_i64(local_tid_45211) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45208 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36467
}
__kernel void mainMagnitudezisegred_small_37509(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_45397_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_45395_backing_aligned_1,
                                                __local volatile
                                                int64_t *red_arr_mem_45393_backing_aligned_2,
                                                int64_t m_28474,
                                                int64_t iota32_arg_28873,
                                                int64_t num_groups_37680,
                                                __global
                                                unsigned char *mem_44022,
                                                __global
                                                unsigned char *mem_44075,
                                                __global
                                                unsigned char *mem_44077,
                                                __global
                                                unsigned char *mem_44081,
                                                __global
                                                unsigned char *mem_44084,
                                                __global
                                                unsigned char *mem_44086,
                                                __global
                                                unsigned char *mem_44088,
                                                int64_t segment_sizze_nonzzero_45386)
{
    #define segred_group_sizze_37679 (mainMagnitudezisegred_group_sizze_37503)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45397_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45397_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45395_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45395_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45393_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45393_backing_aligned_2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45388;
    int32_t local_tid_45389;
    int64_t group_sizze_45392;
    int32_t wave_sizze_45391;
    int32_t group_tid_45390;
    
    global_tid_45388 = get_global_id(0);
    local_tid_45389 = get_local_id(0);
    group_sizze_45392 = get_local_size(0);
    wave_sizze_45391 = LOCKSTEP_WIDTH;
    group_tid_45390 = get_group_id(0);
    
    int32_t phys_tid_37509;
    
    phys_tid_37509 = global_tid_45388;
    
    __local char *red_arr_mem_45393;
    
    red_arr_mem_45393 = (__local char *) red_arr_mem_45393_backing_0;
    
    __local char *red_arr_mem_45395;
    
    red_arr_mem_45395 = (__local char *) red_arr_mem_45395_backing_1;
    
    __local char *red_arr_mem_45397;
    
    red_arr_mem_45397 = (__local char *) red_arr_mem_45397_backing_2;
    
    int32_t phys_group_id_45399;
    
    phys_group_id_45399 = get_group_id(0);
    for (int32_t i_45400 = 0; i_45400 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28474,
                                          squot64(segred_group_sizze_37679,
                                                  segment_sizze_nonzzero_45386))) -
                   phys_group_id_45399, sext_i64_i32(num_groups_37680));
         i_45400++) {
        int32_t virt_group_id_45401 = phys_group_id_45399 + i_45400 *
                sext_i64_i32(num_groups_37680);
        int64_t gtid_37500 = squot64(sext_i32_i64(local_tid_45389),
                                     segment_sizze_nonzzero_45386) +
                sext_i32_i64(virt_group_id_45401) *
                squot64(segred_group_sizze_37679, segment_sizze_nonzzero_45386);
        int64_t gtid_37508 = srem64(sext_i32_i64(local_tid_45389),
                                    iota32_arg_28873);
        
        // apply map function if in bounds
        {
            if (slt64(0, iota32_arg_28873) && (slt64(gtid_37500, m_28474) &&
                                               slt64(sext_i32_i64(local_tid_45389),
                                                     iota32_arg_28873 *
                                                     squot64(segred_group_sizze_37679,
                                                             segment_sizze_nonzzero_45386)))) {
                int32_t y_37699 = ((__global int32_t *) mem_44077)[gtid_37500];
                float y_37700 = ((__global float *) mem_44075)[gtid_37500];
                float x_37704 = ((__global float *) mem_44081)[gtid_37500 *
                                                               iota32_arg_28873 +
                                                               gtid_37508];
                float x_37705 = ((__global float *) mem_44022)[gtid_37508];
                int32_t index_primexp_41186 = sext_i64_i32(gtid_37508);
                float defunc_0_f_res_37708 = x_37704 / y_37700;
                bool cond_37709 = slt32(index_primexp_41186, y_37699);
                bool isnan_res_37710;
                
                isnan_res_37710 = futrts_isnan32(defunc_0_f_res_37708);
                
                bool cond_t_res_37711 = !isnan_res_37710;
                bool x_37712 = cond_37709 && cond_t_res_37711;
                float abs_res_37713 = (float) fabs(defunc_0_f_res_37708);
                bool defunc_2_f_res_t_res_37714 = x_37705 < abs_res_37713;
                bool x_37715 = x_37712 && defunc_2_f_res_t_res_37714;
                float defunc_1_f_res_37716;
                
                if (cond_37709) {
                    defunc_1_f_res_37716 = defunc_0_f_res_37708;
                } else {
                    defunc_1_f_res_37716 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      bool *) red_arr_mem_45393)[sext_i32_i64(local_tid_45389)] =
                        x_37715;
                    ((__local
                      int32_t *) red_arr_mem_45395)[sext_i32_i64(local_tid_45389)] =
                        index_primexp_41186;
                    ((__local
                      float *) red_arr_mem_45397)[sext_i32_i64(local_tid_45389)] =
                        defunc_1_f_res_37716;
                }
            } else {
                ((__local
                  bool *) red_arr_mem_45393)[sext_i32_i64(local_tid_45389)] = 0;
                ((__local
                  int32_t *) red_arr_mem_45395)[sext_i32_i64(local_tid_45389)] =
                    -1;
                ((__local
                  float *) red_arr_mem_45397)[sext_i32_i64(local_tid_45389)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, iota32_arg_28873)) {
            // perform segmented scan to imitate reduction
            {
                bool x_37685;
                int32_t x_37686;
                float x_37687;
                bool x_37688;
                int32_t x_37689;
                float x_37690;
                bool x_45402;
                int32_t x_45403;
                float x_45404;
                bool x_45405;
                int32_t x_45406;
                float x_45407;
                bool ltid_in_bounds_45416;
                
                ltid_in_bounds_45416 = slt64(sext_i32_i64(local_tid_45389),
                                             iota32_arg_28873 *
                                             squot64(segred_group_sizze_37679,
                                                     segment_sizze_nonzzero_45386));
                
                int32_t skip_threads_45417;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45416) {
                        x_37688 = ((volatile __local
                                    bool *) red_arr_mem_45393)[sext_i32_i64(local_tid_45389)];
                        x_37689 = ((volatile __local
                                    int32_t *) red_arr_mem_45395)[sext_i32_i64(local_tid_45389)];
                        x_37690 = ((volatile __local
                                    float *) red_arr_mem_45397)[sext_i32_i64(local_tid_45389)];
                        if ((local_tid_45389 - squot32(local_tid_45389, 32) *
                             32) == 0) {
                            x_37685 = x_37688;
                            x_37686 = x_37689;
                            x_37687 = x_37690;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45417 = 1;
                    while (slt32(skip_threads_45417, 32)) {
                        if (sle32(skip_threads_45417, local_tid_45389 -
                                  squot32(local_tid_45389, 32) * 32) &&
                            ltid_in_bounds_45416) {
                            // read operands
                            {
                                x_37685 = ((volatile __local
                                            bool *) red_arr_mem_45393)[sext_i32_i64(local_tid_45389) -
                                                                       sext_i32_i64(skip_threads_45417)];
                                x_37686 = ((volatile __local
                                            int32_t *) red_arr_mem_45395)[sext_i32_i64(local_tid_45389) -
                                                                          sext_i32_i64(skip_threads_45417)];
                                x_37687 = ((volatile __local
                                            float *) red_arr_mem_45397)[sext_i32_i64(local_tid_45389) -
                                                                        sext_i32_i64(skip_threads_45417)];
                            }
                            // perform operation
                            {
                                bool inactive_45418 =
                                     slt64(srem64(sext_i32_i64(local_tid_45389),
                                                  iota32_arg_28873),
                                           sext_i32_i64(local_tid_45389) -
                                           sext_i32_i64(local_tid_45389 -
                                           skip_threads_45417));
                                
                                if (inactive_45418) {
                                    x_37685 = x_37688;
                                    x_37686 = x_37689;
                                    x_37687 = x_37690;
                                }
                                if (!inactive_45418) {
                                    bool defunc_1_op_res_37691;
                                    int32_t defunc_1_op_res_37692;
                                    
                                    if (x_37685) {
                                        defunc_1_op_res_37691 = x_37685;
                                        defunc_1_op_res_37692 = x_37686;
                                    } else {
                                        bool x_37693 = x_37688 && x_37688;
                                        bool x_37694 = !x_37688;
                                        bool y_37695 = x_37685 && x_37694;
                                        bool defunc_1_op_res_f_res_37696 =
                                             x_37693 || y_37695;
                                        int32_t defunc_1_op_res_f_res_37697;
                                        
                                        if (x_37688) {
                                            defunc_1_op_res_f_res_37697 =
                                                x_37689;
                                        } else {
                                            defunc_1_op_res_f_res_37697 =
                                                x_37686;
                                        }
                                        defunc_1_op_res_37691 =
                                            defunc_1_op_res_f_res_37696;
                                        defunc_1_op_res_37692 =
                                            defunc_1_op_res_f_res_37697;
                                    }
                                    
                                    float defunc_1_op_res_37698 = x_37687 +
                                          x_37690;
                                    
                                    x_37685 = defunc_1_op_res_37691;
                                    x_37686 = defunc_1_op_res_37692;
                                    x_37687 = defunc_1_op_res_37698;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45391, skip_threads_45417)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45417, local_tid_45389 -
                                  squot32(local_tid_45389, 32) * 32) &&
                            ltid_in_bounds_45416) {
                            // write result
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_45393)[sext_i32_i64(local_tid_45389)] =
                                    x_37685;
                                x_37688 = x_37685;
                                ((volatile __local
                                  int32_t *) red_arr_mem_45395)[sext_i32_i64(local_tid_45389)] =
                                    x_37686;
                                x_37689 = x_37686;
                                ((volatile __local
                                  float *) red_arr_mem_45397)[sext_i32_i64(local_tid_45389)] =
                                    x_37687;
                                x_37690 = x_37687;
                            }
                        }
                        if (sle32(wave_sizze_45391, skip_threads_45417)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45417 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45389 - squot32(local_tid_45389, 32) * 32) ==
                        31 && ltid_in_bounds_45416) {
                        ((volatile __local
                          bool *) red_arr_mem_45393)[sext_i32_i64(squot32(local_tid_45389,
                                                                          32))] =
                            x_37685;
                        ((volatile __local
                          int32_t *) red_arr_mem_45395)[sext_i32_i64(squot32(local_tid_45389,
                                                                             32))] =
                            x_37686;
                        ((volatile __local
                          float *) red_arr_mem_45397)[sext_i32_i64(squot32(local_tid_45389,
                                                                           32))] =
                            x_37687;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45419;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45389, 32) == 0 &&
                            ltid_in_bounds_45416) {
                            x_45405 = ((volatile __local
                                        bool *) red_arr_mem_45393)[sext_i32_i64(local_tid_45389)];
                            x_45406 = ((volatile __local
                                        int32_t *) red_arr_mem_45395)[sext_i32_i64(local_tid_45389)];
                            x_45407 = ((volatile __local
                                        float *) red_arr_mem_45397)[sext_i32_i64(local_tid_45389)];
                            if ((local_tid_45389 - squot32(local_tid_45389,
                                                           32) * 32) == 0) {
                                x_45402 = x_45405;
                                x_45403 = x_45406;
                                x_45404 = x_45407;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45419 = 1;
                        while (slt32(skip_threads_45419, 32)) {
                            if (sle32(skip_threads_45419, local_tid_45389 -
                                      squot32(local_tid_45389, 32) * 32) &&
                                (squot32(local_tid_45389, 32) == 0 &&
                                 ltid_in_bounds_45416)) {
                                // read operands
                                {
                                    x_45402 = ((volatile __local
                                                bool *) red_arr_mem_45393)[sext_i32_i64(local_tid_45389) -
                                                                           sext_i32_i64(skip_threads_45419)];
                                    x_45403 = ((volatile __local
                                                int32_t *) red_arr_mem_45395)[sext_i32_i64(local_tid_45389) -
                                                                              sext_i32_i64(skip_threads_45419)];
                                    x_45404 = ((volatile __local
                                                float *) red_arr_mem_45397)[sext_i32_i64(local_tid_45389) -
                                                                            sext_i32_i64(skip_threads_45419)];
                                }
                                // perform operation
                                {
                                    bool inactive_45420 =
                                         slt64(srem64(sext_i32_i64(local_tid_45389 *
                                                      32 + 32 - 1),
                                                      iota32_arg_28873),
                                               sext_i32_i64(local_tid_45389 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45389 -
                                                             skip_threads_45419) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45420) {
                                        x_45402 = x_45405;
                                        x_45403 = x_45406;
                                        x_45404 = x_45407;
                                    }
                                    if (!inactive_45420) {
                                        bool defunc_1_op_res_45408;
                                        int32_t defunc_1_op_res_45409;
                                        
                                        if (x_45402) {
                                            defunc_1_op_res_45408 = x_45402;
                                            defunc_1_op_res_45409 = x_45403;
                                        } else {
                                            bool x_45410 = x_45405 && x_45405;
                                            bool x_45411 = !x_45405;
                                            bool y_45412 = x_45402 && x_45411;
                                            bool defunc_1_op_res_f_res_45413 =
                                                 x_45410 || y_45412;
                                            int32_t defunc_1_op_res_f_res_45414;
                                            
                                            if (x_45405) {
                                                defunc_1_op_res_f_res_45414 =
                                                    x_45406;
                                            } else {
                                                defunc_1_op_res_f_res_45414 =
                                                    x_45403;
                                            }
                                            defunc_1_op_res_45408 =
                                                defunc_1_op_res_f_res_45413;
                                            defunc_1_op_res_45409 =
                                                defunc_1_op_res_f_res_45414;
                                        }
                                        
                                        float defunc_1_op_res_45415 = x_45404 +
                                              x_45407;
                                        
                                        x_45402 = defunc_1_op_res_45408;
                                        x_45403 = defunc_1_op_res_45409;
                                        x_45404 = defunc_1_op_res_45415;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45391, skip_threads_45419)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45419, local_tid_45389 -
                                      squot32(local_tid_45389, 32) * 32) &&
                                (squot32(local_tid_45389, 32) == 0 &&
                                 ltid_in_bounds_45416)) {
                                // write result
                                {
                                    ((volatile __local
                                      bool *) red_arr_mem_45393)[sext_i32_i64(local_tid_45389)] =
                                        x_45402;
                                    x_45405 = x_45402;
                                    ((volatile __local
                                      int32_t *) red_arr_mem_45395)[sext_i32_i64(local_tid_45389)] =
                                        x_45403;
                                    x_45406 = x_45403;
                                    ((volatile __local
                                      float *) red_arr_mem_45397)[sext_i32_i64(local_tid_45389)] =
                                        x_45404;
                                    x_45407 = x_45404;
                                }
                            }
                            if (sle32(wave_sizze_45391, skip_threads_45419)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45419 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45389, 32) == 0 ||
                          !ltid_in_bounds_45416)) {
                        // read operands
                        {
                            x_37688 = x_37685;
                            x_37689 = x_37686;
                            x_37690 = x_37687;
                            x_37685 = ((__local
                                        bool *) red_arr_mem_45393)[sext_i32_i64(squot32(local_tid_45389,
                                                                                        32)) -
                                                                   1];
                            x_37686 = ((__local
                                        int32_t *) red_arr_mem_45395)[sext_i32_i64(squot32(local_tid_45389,
                                                                                           32)) -
                                                                      1];
                            x_37687 = ((__local
                                        float *) red_arr_mem_45397)[sext_i32_i64(squot32(local_tid_45389,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_45421 =
                                 slt64(srem64(sext_i32_i64(local_tid_45389),
                                              iota32_arg_28873),
                                       sext_i32_i64(local_tid_45389) -
                                       sext_i32_i64(squot32(local_tid_45389,
                                                            32) * 32 - 1));
                            
                            if (inactive_45421) {
                                x_37685 = x_37688;
                                x_37686 = x_37689;
                                x_37687 = x_37690;
                            }
                            if (!inactive_45421) {
                                bool defunc_1_op_res_37691;
                                int32_t defunc_1_op_res_37692;
                                
                                if (x_37685) {
                                    defunc_1_op_res_37691 = x_37685;
                                    defunc_1_op_res_37692 = x_37686;
                                } else {
                                    bool x_37693 = x_37688 && x_37688;
                                    bool x_37694 = !x_37688;
                                    bool y_37695 = x_37685 && x_37694;
                                    bool defunc_1_op_res_f_res_37696 =
                                         x_37693 || y_37695;
                                    int32_t defunc_1_op_res_f_res_37697;
                                    
                                    if (x_37688) {
                                        defunc_1_op_res_f_res_37697 = x_37689;
                                    } else {
                                        defunc_1_op_res_f_res_37697 = x_37686;
                                    }
                                    defunc_1_op_res_37691 =
                                        defunc_1_op_res_f_res_37696;
                                    defunc_1_op_res_37692 =
                                        defunc_1_op_res_f_res_37697;
                                }
                                
                                float defunc_1_op_res_37698 = x_37687 + x_37690;
                                
                                x_37685 = defunc_1_op_res_37691;
                                x_37686 = defunc_1_op_res_37692;
                                x_37687 = defunc_1_op_res_37698;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              bool *) red_arr_mem_45393)[sext_i32_i64(local_tid_45389)] =
                                x_37685;
                            ((__local
                              int32_t *) red_arr_mem_45395)[sext_i32_i64(local_tid_45389)] =
                                x_37686;
                            ((__local
                              float *) red_arr_mem_45397)[sext_i32_i64(local_tid_45389)] =
                                x_37687;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45389, 32) == 0) {
                        ((__local
                          bool *) red_arr_mem_45393)[sext_i32_i64(local_tid_45389)] =
                            x_37688;
                        ((__local
                          int32_t *) red_arr_mem_45395)[sext_i32_i64(local_tid_45389)] =
                            x_37689;
                        ((__local
                          float *) red_arr_mem_45397)[sext_i32_i64(local_tid_45389)] =
                            x_37690;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45401) *
                      squot64(segred_group_sizze_37679,
                              segment_sizze_nonzzero_45386) +
                      sext_i32_i64(local_tid_45389), m_28474) &&
                slt64(sext_i32_i64(local_tid_45389),
                      squot64(segred_group_sizze_37679,
                              segment_sizze_nonzzero_45386))) {
                ((__global
                  bool *) mem_44084)[sext_i32_i64(virt_group_id_45401) *
                                     squot64(segred_group_sizze_37679,
                                             segment_sizze_nonzzero_45386) +
                                     sext_i32_i64(local_tid_45389)] = ((__local
                                                                        bool *) red_arr_mem_45393)[(sext_i32_i64(local_tid_45389) +
                                                                                                    1) *
                                                                                                   segment_sizze_nonzzero_45386 -
                                                                                                   1];
                ((__global
                  int32_t *) mem_44086)[sext_i32_i64(virt_group_id_45401) *
                                        squot64(segred_group_sizze_37679,
                                                segment_sizze_nonzzero_45386) +
                                        sext_i32_i64(local_tid_45389)] =
                    ((__local
                      int32_t *) red_arr_mem_45395)[(sext_i32_i64(local_tid_45389) +
                                                     1) *
                                                    segment_sizze_nonzzero_45386 -
                                                    1];
                ((__global
                  float *) mem_44088)[sext_i32_i64(virt_group_id_45401) *
                                      squot64(segred_group_sizze_37679,
                                              segment_sizze_nonzzero_45386) +
                                      sext_i32_i64(local_tid_45389)] = ((__local
                                                                         float *) red_arr_mem_45397)[(sext_i32_i64(local_tid_45389) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_45386 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_37679
}
__kernel void remove_nanszisegmap_29720(__global int *global_failure,
                                        int64_t m_27758, int64_t n_27759,
                                        int64_t p_27760,
                                        int16_t nan_value_27761, __global
                                        unsigned char *images_mem_43122,
                                        __global unsigned char *mem_43127)
{
    #define segmap_group_sizze_29781 (remove_nanszisegmap_group_sizze_29724)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44350;
    int32_t local_tid_44351;
    int64_t group_sizze_44354;
    int32_t wave_sizze_44353;
    int32_t group_tid_44352;
    
    global_tid_44350 = get_global_id(0);
    local_tid_44351 = get_local_id(0);
    group_sizze_44354 = get_local_size(0);
    wave_sizze_44353 = LOCKSTEP_WIDTH;
    group_tid_44352 = get_group_id(0);
    
    int32_t phys_tid_29720;
    
    phys_tid_29720 = global_tid_44350;
    
    int64_t gtid_29717;
    
    gtid_29717 = squot64(sext_i32_i64(group_tid_44352) *
                         segmap_group_sizze_29781 +
                         sext_i32_i64(local_tid_44351), n_27759 * p_27760);
    
    int64_t gtid_29718;
    
    gtid_29718 = squot64(sext_i32_i64(group_tid_44352) *
                         segmap_group_sizze_29781 +
                         sext_i32_i64(local_tid_44351) -
                         squot64(sext_i32_i64(group_tid_44352) *
                                 segmap_group_sizze_29781 +
                                 sext_i32_i64(local_tid_44351), n_27759 *
                                 p_27760) * (n_27759 * p_27760), p_27760);
    
    int64_t gtid_29719;
    
    gtid_29719 = sext_i32_i64(group_tid_44352) * segmap_group_sizze_29781 +
        sext_i32_i64(local_tid_44351) - squot64(sext_i32_i64(group_tid_44352) *
                                                segmap_group_sizze_29781 +
                                                sext_i32_i64(local_tid_44351),
                                                n_27759 * p_27760) * (n_27759 *
                                                                      p_27760) -
        squot64(sext_i32_i64(group_tid_44352) * segmap_group_sizze_29781 +
                sext_i32_i64(local_tid_44351) -
                squot64(sext_i32_i64(group_tid_44352) *
                        segmap_group_sizze_29781 +
                        sext_i32_i64(local_tid_44351), n_27759 * p_27760) *
                (n_27759 * p_27760), p_27760) * p_27760;
    if ((slt64(gtid_29717, m_27758) && slt64(gtid_29718, n_27759)) &&
        slt64(gtid_29719, p_27760)) {
        int16_t x_29784 = ((__global int16_t *) images_mem_43122)[gtid_29717 *
                                                                  (p_27760 *
                                                                   n_27759) +
                                                                  gtid_29718 *
                                                                  p_27760 +
                                                                  gtid_29719];
        bool cond_29785 = x_29784 == nan_value_27761;
        float defunc_0_f_res_29786;
        
        if (cond_29785) {
            defunc_0_f_res_29786 = NAN;
        } else {
            float i16_res_29787 = sitofp_i16_f32(x_29784);
            
            defunc_0_f_res_29786 = i16_res_29787;
        }
        ((__global float *) mem_43127)[gtid_29717 * (p_27760 * n_27759) +
                                       gtid_29718 * p_27760 + gtid_29719] =
            defunc_0_f_res_29786;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_29781
}
"""
# Start of values.py.

# Hacky parser/reader/writer for values written in Futhark syntax.
# Used for reading stdin when compiling standalone programs with the
# Python code generator.

import numpy as np
import string
import struct
import sys

class ReaderInput:
    def __init__(self, f):
        self.f = f
        self.lookahead_buffer = []

    def get_char(self):
        if len(self.lookahead_buffer) == 0:
            return self.f.read(1)
        else:
            c = self.lookahead_buffer[0]
            self.lookahead_buffer = self.lookahead_buffer[1:]
            return c

    def unget_char(self, c):
        self.lookahead_buffer = [c] + self.lookahead_buffer

    def get_chars(self, n):
        n1 = min(n, len(self.lookahead_buffer))
        s = b''.join(self.lookahead_buffer[:n1])
        self.lookahead_buffer = self.lookahead_buffer[n1:]
        n2 = n - n1
        if n2 > 0:
            s += self.f.read(n2)
        return s

    def peek_char(self):
        c = self.get_char()
        if c:
            self.unget_char(c)
        return c

def skip_spaces(f):
    c = f.get_char()
    while c != None:
        if c.isspace():
            c = f.get_char()
        elif c == b'-':
          # May be line comment.
          if f.peek_char() == b'-':
            # Yes, line comment. Skip to end of line.
            while (c != b'\n' and c != None):
              c = f.get_char()
          else:
            break
        else:
          break
    if c:
        f.unget_char(c)

def parse_specific_char(f, expected):
    got = f.get_char()
    if got != expected:
        f.unget_char(got)
        raise ValueError
    return True

def parse_specific_string(f, s):
    # This funky mess is intended, and is caused by the fact that if `type(b) ==
    # bytes` then `type(b[0]) == int`, but we need to match each element with a
    # `bytes`, so therefore we make each character an array element
    b = s.encode('utf8')
    bs = [b[i:i+1] for i in range(len(b))]
    read = []
    try:
        for c in bs:
            parse_specific_char(f, c)
            read.append(c)
        return True
    except ValueError:
        for c in read[::-1]:
            f.unget_char(c)
        raise

def optional(p, *args):
    try:
        return p(*args)
    except ValueError:
        return None

def optional_specific_string(f, s):
    c = f.peek_char()
    # This funky mess is intended, and is caused by the fact that if `type(b) ==
    # bytes` then `type(b[0]) == int`, but we need to match each element with a
    # `bytes`, so therefore we make each character an array element
    b = s.encode('utf8')
    bs = [b[i:i+1] for i in range(len(b))]
    if c == bs[0]:
        return parse_specific_string(f, s)
    else:
        return False

def sepBy(p, sep, *args):
    elems = []
    x = optional(p, *args)
    if x != None:
        elems += [x]
        while optional(sep, *args) != None:
            x = p(*args)
            elems += [x]
    return elems

# Assumes '0x' has already been read
def parse_hex_int(f):
    s = b''
    c = f.get_char()
    while c != None:
        if c in b'01234556789ABCDEFabcdef':
            s += c
            c = f.get_char()
        elif c == b'_':
            c = f.get_char() # skip _
        else:
            f.unget_char(c)
            break
    return str(int(s, 16)).encode('utf8') # ugh

def parse_int(f):
    s = b''
    c = f.get_char()
    if c == b'0' and f.peek_char() in b'xX':
        c = f.get_char() # skip X
        return parse_hex_int(f)
    else:
        while c != None:
            if c.isdigit():
                s += c
                c = f.get_char()
            elif c == b'_':
                c = f.get_char() # skip _
            else:
                f.unget_char(c)
                break
        if len(s) == 0:
            raise ValueError
        return s

def parse_int_signed(f):
    s = b''
    c = f.get_char()

    if c == b'-' and f.peek_char().isdigit():
      return c + parse_int(f)
    else:
      if c != b'+':
          f.unget_char(c)
      return parse_int(f)

def read_str_comma(f):
    skip_spaces(f)
    parse_specific_char(f, b',')
    return b','

def read_str_int(f, s):
    skip_spaces(f)
    x = int(parse_int_signed(f))
    optional_specific_string(f, s)
    return x

def read_str_uint(f, s):
    skip_spaces(f)
    x = int(parse_int(f))
    optional_specific_string(f, s)
    return x

def read_str_i8(f):
    return np.int8(read_str_int(f, 'i8'))
def read_str_i16(f):
    return np.int16(read_str_int(f, 'i16'))
def read_str_i32(f):
    return np.int32(read_str_int(f, 'i32'))
def read_str_i64(f):
    return np.int64(read_str_int(f, 'i64'))

def read_str_u8(f):
    return np.uint8(read_str_int(f, 'u8'))
def read_str_u16(f):
    return np.uint16(read_str_int(f, 'u16'))
def read_str_u32(f):
    return np.uint32(read_str_int(f, 'u32'))
def read_str_u64(f):
    return np.uint64(read_str_int(f, 'u64'))

def read_char(f):
    skip_spaces(f)
    parse_specific_char(f, b'\'')
    c = f.get_char()
    parse_specific_char(f, b'\'')
    return c

def read_str_hex_float(f, sign):
    int_part = parse_hex_int(f)
    parse_specific_char(f, b'.')
    frac_part = parse_hex_int(f)
    parse_specific_char(f, b'p')
    exponent = parse_int(f)

    int_val = int(int_part, 16)
    frac_val = float(int(frac_part, 16)) / (16 ** len(frac_part))
    exp_val = int(exponent)

    total_val = (int_val + frac_val) * (2.0 ** exp_val)
    if sign == b'-':
        total_val = -1 * total_val

    return float(total_val)


def read_str_decimal(f):
    skip_spaces(f)
    c = f.get_char()
    if (c == b'-'):
      sign = b'-'
    else:
      f.unget_char(c)
      sign = b''

    # Check for hexadecimal float
    c = f.get_char()
    if (c == '0' and (f.peek_char() in ['x', 'X'])):
        f.get_char()
        return read_str_hex_float(f, sign)
    else:
        f.unget_char(c)

    bef = optional(parse_int, f)
    if bef == None:
        bef = b'0'
        parse_specific_char(f, b'.')
        aft = parse_int(f)
    elif optional(parse_specific_char, f, b'.'):
        aft = parse_int(f)
    else:
        aft = b'0'
    if (optional(parse_specific_char, f, b'E') or
        optional(parse_specific_char, f, b'e')):
        expt = parse_int_signed(f)
    else:
        expt = b'0'
    return float(sign + bef + b'.' + aft + b'E' + expt)

def read_str_f32(f):
    skip_spaces(f)
    try:
        parse_specific_string(f, 'f32.nan')
        return np.float32(np.nan)
    except ValueError:
        try:
            parse_specific_string(f, 'f32.inf')
            return np.float32(np.inf)
        except ValueError:
            try:
               parse_specific_string(f, '-f32.inf')
               return np.float32(-np.inf)
            except ValueError:
               x = read_str_decimal(f)
               optional_specific_string(f, 'f32')
               return x

def read_str_f64(f):
    skip_spaces(f)
    try:
        parse_specific_string(f, 'f64.nan')
        return np.float64(np.nan)
    except ValueError:
        try:
            parse_specific_string(f, 'f64.inf')
            return np.float64(np.inf)
        except ValueError:
            try:
               parse_specific_string(f, '-f64.inf')
               return np.float64(-np.inf)
            except ValueError:
               x = read_str_decimal(f)
               optional_specific_string(f, 'f64')
               return x

def read_str_bool(f):
    skip_spaces(f)
    if f.peek_char() == b't':
        parse_specific_string(f, 'true')
        return True
    elif f.peek_char() == b'f':
        parse_specific_string(f, 'false')
        return False
    else:
        raise ValueError

def read_str_empty_array(f, type_name, rank):
    parse_specific_string(f, 'empty')
    parse_specific_char(f, b'(')
    dims = []
    for i in range(rank):
        parse_specific_string(f, '[')
        dims += [int(parse_int(f))]
        parse_specific_string(f, ']')
    if np.product(dims) != 0:
        raise ValueError
    parse_specific_string(f, type_name)
    parse_specific_char(f, b')')

    return tuple(dims)

def read_str_array_elems(f, elem_reader, type_name, rank):
    skip_spaces(f)
    try:
        parse_specific_char(f, b'[')
    except ValueError:
        return read_str_empty_array(f, type_name, rank)
    else:
        xs = sepBy(elem_reader, read_str_comma, f)
        skip_spaces(f)
        parse_specific_char(f, b']')
        return xs

def read_str_array_helper(f, elem_reader, type_name, rank):
    def nested_row_reader(_):
        return read_str_array_helper(f, elem_reader, type_name, rank-1)
    if rank == 1:
        row_reader = elem_reader
    else:
        row_reader = nested_row_reader
    return read_str_array_elems(f, row_reader, type_name, rank)

def expected_array_dims(l, rank):
  if rank > 1:
      n = len(l)
      if n == 0:
          elem = []
      else:
          elem = l[0]
      return [n] + expected_array_dims(elem, rank-1)
  else:
      return [len(l)]

def verify_array_dims(l, dims):
    if dims[0] != len(l):
        raise ValueError
    if len(dims) > 1:
        for x in l:
            verify_array_dims(x, dims[1:])

def read_str_array(f, elem_reader, type_name, rank, bt):
    elems = read_str_array_helper(f, elem_reader, type_name, rank)
    if type(elems) == tuple:
        # Empty array
        return np.empty(elems, dtype=bt)
    else:
        dims = expected_array_dims(elems, rank)
        verify_array_dims(elems, dims)
        return np.array(elems, dtype=bt)

################################################################################

READ_BINARY_VERSION = 2

# struct format specified at
# https://docs.python.org/2/library/struct.html#format-characters

def mk_bin_scalar_reader(t):
    def bin_reader(f):
        fmt = FUTHARK_PRIMTYPES[t]['bin_format']
        size = FUTHARK_PRIMTYPES[t]['size']
        return struct.unpack('<' + fmt, f.get_chars(size))[0]
    return bin_reader

read_bin_i8 = mk_bin_scalar_reader('i8')
read_bin_i16 = mk_bin_scalar_reader('i16')
read_bin_i32 = mk_bin_scalar_reader('i32')
read_bin_i64 = mk_bin_scalar_reader('i64')

read_bin_u8 = mk_bin_scalar_reader('u8')
read_bin_u16 = mk_bin_scalar_reader('u16')
read_bin_u32 = mk_bin_scalar_reader('u32')
read_bin_u64 = mk_bin_scalar_reader('u64')

read_bin_f32 = mk_bin_scalar_reader('f32')
read_bin_f64 = mk_bin_scalar_reader('f64')

read_bin_bool = mk_bin_scalar_reader('bool')

def read_is_binary(f):
    skip_spaces(f)
    c = f.get_char()
    if c == b'b':
        bin_version = read_bin_u8(f)
        if bin_version != READ_BINARY_VERSION:
            panic(1, "binary-input: File uses version %i, but I only understand version %i.\n",
                  bin_version, READ_BINARY_VERSION)
        return True
    else:
        f.unget_char(c)
        return False

FUTHARK_PRIMTYPES = {
    'i8':  {'binname' : b"  i8",
            'size' : 1,
            'bin_reader': read_bin_i8,
            'str_reader': read_str_i8,
            'bin_format': 'b',
            'numpy_type': np.int8 },

    'i16': {'binname' : b" i16",
            'size' : 2,
            'bin_reader': read_bin_i16,
            'str_reader': read_str_i16,
            'bin_format': 'h',
            'numpy_type': np.int16 },

    'i32': {'binname' : b" i32",
            'size' : 4,
            'bin_reader': read_bin_i32,
            'str_reader': read_str_i32,
            'bin_format': 'i',
            'numpy_type': np.int32 },

    'i64': {'binname' : b" i64",
            'size' : 8,
            'bin_reader': read_bin_i64,
            'str_reader': read_str_i64,
            'bin_format': 'q',
            'numpy_type': np.int64},

    'u8':  {'binname' : b"  u8",
            'size' : 1,
            'bin_reader': read_bin_u8,
            'str_reader': read_str_u8,
            'bin_format': 'B',
            'numpy_type': np.uint8 },

    'u16': {'binname' : b" u16",
            'size' : 2,
            'bin_reader': read_bin_u16,
            'str_reader': read_str_u16,
            'bin_format': 'H',
            'numpy_type': np.uint16 },

    'u32': {'binname' : b" u32",
            'size' : 4,
            'bin_reader': read_bin_u32,
            'str_reader': read_str_u32,
            'bin_format': 'I',
            'numpy_type': np.uint32 },

    'u64': {'binname' : b" u64",
            'size' : 8,
            'bin_reader': read_bin_u64,
            'str_reader': read_str_u64,
            'bin_format': 'Q',
            'numpy_type': np.uint64 },

    'f32': {'binname' : b" f32",
            'size' : 4,
            'bin_reader': read_bin_f32,
            'str_reader': read_str_f32,
            'bin_format': 'f',
            'numpy_type': np.float32 },

    'f64': {'binname' : b" f64",
            'size' : 8,
            'bin_reader': read_bin_f64,
            'str_reader': read_str_f64,
            'bin_format': 'd',
            'numpy_type': np.float64 },

    'bool': {'binname' : b"bool",
             'size' : 1,
             'bin_reader': read_bin_bool,
             'str_reader': read_str_bool,
             'bin_format': 'b',
             'numpy_type': np.bool }
}

def read_bin_read_type(f):
    read_binname = f.get_chars(4)

    for (k,v) in FUTHARK_PRIMTYPES.items():
        if v['binname'] == read_binname:
            return k
    panic(1, "binary-input: Did not recognize the type '%s'.\n", read_binname)

def numpy_type_to_type_name(t):
    for (k,v) in FUTHARK_PRIMTYPES.items():
        if v['numpy_type'] == t:
            return k
    raise Exception('Unknown Numpy type: {}'.format(t))

def read_bin_ensure_scalar(f, expected_type):
  dims = read_bin_i8(f)

  if dims != 0:
      panic(1, "binary-input: Expected scalar (0 dimensions), but got array with %i dimensions.\n", dims)

  bin_type = read_bin_read_type(f)
  if bin_type != expected_type:
      panic(1, "binary-input: Expected scalar of type %s but got scalar of type %s.\n",
            expected_type, bin_type)

# ------------------------------------------------------------------------------
# General interface for reading Primitive Futhark Values
# ------------------------------------------------------------------------------

def read_scalar(f, ty):
    if read_is_binary(f):
        read_bin_ensure_scalar(f, ty)
        return FUTHARK_PRIMTYPES[ty]['bin_reader'](f)
    return FUTHARK_PRIMTYPES[ty]['str_reader'](f)

def read_array(f, expected_type, rank):
    if not read_is_binary(f):
        str_reader = FUTHARK_PRIMTYPES[expected_type]['str_reader']
        return read_str_array(f, str_reader, expected_type, rank,
                              FUTHARK_PRIMTYPES[expected_type]['numpy_type'])

    bin_rank = read_bin_u8(f)

    if bin_rank != rank:
        panic(1, "binary-input: Expected %i dimensions, but got array with %i dimensions.\n",
              rank, bin_rank)

    bin_type_enum = read_bin_read_type(f)
    if expected_type != bin_type_enum:
        panic(1, "binary-input: Expected %iD-array with element type '%s' but got %iD-array with element type '%s'.\n",
              rank, expected_type, bin_rank, bin_type_enum)

    shape = []
    elem_count = 1
    for i in range(rank):
        bin_size = read_bin_u64(f)
        elem_count *= bin_size
        shape.append(bin_size)

    bin_fmt = FUTHARK_PRIMTYPES[bin_type_enum]['bin_format']

    # We first read the expected number of types into a bytestring,
    # then use np.fromstring.  This is because np.fromfile does not
    # work on things that are insufficiently file-like, like a network
    # stream.
    bytes = f.get_chars(elem_count * FUTHARK_PRIMTYPES[expected_type]['size'])
    arr = np.fromstring(bytes, dtype=FUTHARK_PRIMTYPES[bin_type_enum]['numpy_type'])
    arr.shape = shape

    return arr

if sys.version_info >= (3,0):
    input_reader = ReaderInput(sys.stdin.buffer)
else:
    input_reader = ReaderInput(sys.stdin)

import re

def read_value(type_desc, reader=input_reader):
    """Read a value of the given type.  The type is a string
representation of the Futhark type."""
    m = re.match(r'((?:\[\])*)([a-z0-9]+)$', type_desc)
    if m:
        dims = int(len(m.group(1))/2)
        basetype = m.group(2)
        assert basetype in FUTHARK_PRIMTYPES, "Unknown type: {}".format(type_desc)
        if dims > 0:
            return read_array(reader, basetype, dims)
        else:
            return read_scalar(reader, basetype)
        return (dims, basetype)

def end_of_input(entry, f=input_reader):
    skip_spaces(f)
    if f.get_char() != b'':
        panic(1, "Expected EOF on stdin after reading input for \"%s\".", entry)

def write_value_text(v, out=sys.stdout):
    if type(v) == np.uint8:
        out.write("%uu8" % v)
    elif type(v) == np.uint16:
        out.write("%uu16" % v)
    elif type(v) == np.uint32:
        out.write("%uu32" % v)
    elif type(v) == np.uint64:
        out.write("%uu64" % v)
    elif type(v) == np.int8:
        out.write("%di8" % v)
    elif type(v) == np.int16:
        out.write("%di16" % v)
    elif type(v) == np.int32:
        out.write("%di32" % v)
    elif type(v) == np.int64:
        out.write("%di64" % v)
    elif type(v) in [np.bool, np.bool_]:
        if v:
            out.write("true")
        else:
            out.write("false")
    elif type(v) == np.float32:
        if np.isnan(v):
            out.write('f32.nan')
        elif np.isinf(v):
            if v >= 0:
                out.write('f32.inf')
            else:
                out.write('-f32.inf')
        else:
            out.write("%.6ff32" % v)
    elif type(v) == np.float64:
        if np.isnan(v):
            out.write('f64.nan')
        elif np.isinf(v):
            if v >= 0:
                out.write('f64.inf')
            else:
                out.write('-f64.inf')
        else:
            out.write("%.6ff64" % v)
    elif type(v) == np.ndarray:
        if np.product(v.shape) == 0:
            tname = numpy_type_to_type_name(v.dtype)
            out.write('empty({}{})'.format(''.join(['[{}]'.format(d)
                                                    for d in v.shape]), tname))
        else:
            first = True
            out.write('[')
            for x in v:
                if not first: out.write(', ')
                first = False
                write_value(x, out=out)
            out.write(']')
    else:
        raise Exception("Cannot print value of type {}: {}".format(type(v), v))

type_strs = { np.dtype('int8'): b'  i8',
              np.dtype('int16'): b' i16',
              np.dtype('int32'): b' i32',
              np.dtype('int64'): b' i64',
              np.dtype('uint8'): b'  u8',
              np.dtype('uint16'): b' u16',
              np.dtype('uint32'): b' u32',
              np.dtype('uint64'): b' u64',
              np.dtype('float32'): b' f32',
              np.dtype('float64'): b' f64',
              np.dtype('bool'): b'bool'}

def construct_binary_value(v):
    t = v.dtype
    shape = v.shape

    elems = 1
    for d in shape:
        elems *= d

    num_bytes = 1 + 1 + 1 + 4 + len(shape) * 8 + elems * t.itemsize
    bytes = bytearray(num_bytes)
    bytes[0] = np.int8(ord('b'))
    bytes[1] = 2
    bytes[2] = np.int8(len(shape))
    bytes[3:7] = type_strs[t]

    for i in range(len(shape)):
        bytes[7+i*8:7+(i+1)*8] = np.int64(shape[i]).tostring()

    bytes[7+len(shape)*8:] = np.ascontiguousarray(v).tostring()

    return bytes

def write_value_binary(v, out=sys.stdout):
    if sys.version_info >= (3,0):
        out = out.buffer
    out.write(construct_binary_value(v))

def write_value(v, out=sys.stdout, binary=False):
    if binary:
        return write_value_binary(v, out=out)
    else:
        return write_value_text(v, out=out)

# End of values.py.
# Start of memory.py.

import ctypes as ct

def addressOffset(x, offset, bt):
  return ct.cast(ct.addressof(x.contents)+int(offset), ct.POINTER(bt))

def allocateMem(size):
  return ct.cast((ct.c_byte * max(0,size))(), ct.POINTER(ct.c_byte))

# Copy an array if its is not-None.  This is important for treating
# Numpy arrays as flat memory, but has some overhead.
def normaliseArray(x):
  if (x.base is x) or (x.base is None):
    return x
  else:
    return x.copy()

def unwrapArray(x):
  return normaliseArray(x).ctypes.data_as(ct.POINTER(ct.c_byte))

def createArray(x, shape):
  # HACK: np.ctypeslib.as_array may fail if the shape contains zeroes,
  # for some reason.
  if any(map(lambda x: x == 0, shape)):
      return np.ndarray(shape, dtype=x._type_)
  else:
      return np.ctypeslib.as_array(x, shape=shape)

def indexArray(x, offset, bt, nptype):
  return nptype(addressOffset(x, offset*ct.sizeof(bt), bt)[0])

def writeScalarArray(x, offset, v):
  ct.memmove(ct.addressof(x.contents)+int(offset)*ct.sizeof(v), ct.addressof(v), ct.sizeof(v))

# An opaque Futhark value.
class opaque(object):
  def __init__(self, desc, *payload):
    self.data = payload
    self.desc = desc

  def __repr__(self):
    return "<opaque Futhark value of type {}>".format(self.desc)

# End of memory.py.
# Start of panic.py.

def panic(exitcode, fmt, *args):
    sys.stderr.write('%s: ' % sys.argv[0])
    sys.stderr.write(fmt % args)
    sys.stderr.write('\n')
    sys.exit(exitcode)

# End of panic.py.
# Start of tuning.py

def read_tuning_file(kvs, f):
    for line in f.read().splitlines():
        size, value = line.split('=')
        kvs[size] = int(value)
    return kvs

# End of tuning.py.
# Start of scalar.py.

import numpy as np
import math
import struct

def intlit(t, x):
  if t == np.int8:
    return np.int8(x)
  elif t == np.int16:
    return np.int16(x)
  elif t == np.int32:
    return np.int32(x)
  else:
    return np.int64(x)

def signed(x):
  if type(x) == np.uint8:
    return np.int8(x)
  elif type(x) == np.uint16:
    return np.int16(x)
  elif type(x) == np.uint32:
    return np.int32(x)
  else:
    return np.int64(x)

def unsigned(x):
  if type(x) == np.int8:
    return np.uint8(x)
  elif type(x) == np.int16:
    return np.uint16(x)
  elif type(x) == np.int32:
    return np.uint32(x)
  else:
    return np.uint64(x)

def shlN(x,y):
  return x << y

def ashrN(x,y):
  return x >> y

# Python is so slow that we just make all the unsafe operations safe,
# always.

def sdivN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return x // y

def sdiv_upN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return (x+y-intlit(type(x), 1)) // y

def smodN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return x % y

def udivN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed(unsigned(x) // unsigned(y))

def udiv_upN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed((unsigned(x)+unsigned(y)-unsigned(intlit(type(x),1))) // unsigned(y))

def umodN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed(unsigned(x) % unsigned(y))

def squotN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return np.floor_divide(np.abs(x), np.abs(y)) * np.sign(x) * np.sign(y)

def sremN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return np.remainder(np.abs(x), np.abs(y)) * np.sign(x)

def sminN(x,y):
  return min(x,y)

def smaxN(x,y):
  return max(x,y)

def uminN(x,y):
  return signed(min(unsigned(x),unsigned(y)))

def umaxN(x,y):
  return signed(max(unsigned(x),unsigned(y)))

def fminN(x,y):
  return min(x,y)

def fmaxN(x,y):
  return max(x,y)

def powN(x,y):
  return x ** y

def fpowN(x,y):
  return x ** y

def sleN(x,y):
  return x <= y

def sltN(x,y):
  return x < y

def uleN(x,y):
  return unsigned(x) <= unsigned(y)

def ultN(x,y):
  return unsigned(x) < unsigned(y)

def lshr8(x,y):
  return np.int8(np.uint8(x) >> np.uint8(y))

def lshr16(x,y):
  return np.int16(np.uint16(x) >> np.uint16(y))

def lshr32(x,y):
  return np.int32(np.uint32(x) >> np.uint32(y))

def lshr64(x,y):
  return np.int64(np.uint64(x) >> np.uint64(y))

def sext_T_i8(x):
  return np.int8(x)

def sext_T_i16(x):
  return np.int16(x)

def sext_T_i32(x):
  return np.int32(x)

def sext_T_i64(x):
  return np.int64(x)

def itob_T_bool(x):
  return np.bool(x)

def btoi_bool_i8(x):
  return np.int8(x)

def btoi_bool_i16(x):
  return np.int8(x)

def btoi_bool_i32(x):
  return np.int8(x)

def btoi_bool_i64(x):
  return np.int8(x)

def zext_i8_i8(x):
  return np.int8(np.uint8(x))

def zext_i8_i16(x):
  return np.int16(np.uint8(x))

def zext_i8_i32(x):
  return np.int32(np.uint8(x))

def zext_i8_i64(x):
  return np.int64(np.uint8(x))

def zext_i16_i8(x):
  return np.int8(np.uint16(x))

def zext_i16_i16(x):
  return np.int16(np.uint16(x))

def zext_i16_i32(x):
  return np.int32(np.uint16(x))

def zext_i16_i64(x):
  return np.int64(np.uint16(x))

def zext_i32_i8(x):
  return np.int8(np.uint32(x))

def zext_i32_i16(x):
  return np.int16(np.uint32(x))

def zext_i32_i32(x):
  return np.int32(np.uint32(x))

def zext_i32_i64(x):
  return np.int64(np.uint32(x))

def zext_i64_i8(x):
  return np.int8(np.uint64(x))

def zext_i64_i16(x):
  return np.int16(np.uint64(x))

def zext_i64_i32(x):
  return np.int32(np.uint64(x))

def zext_i64_i64(x):
  return np.int64(np.uint64(x))

sdiv8 = sdiv16 = sdiv32 = sdiv64 = sdivN
sdiv_up8 = sdiv1_up6 = sdiv_up32 = sdiv_up64 = sdiv_upN
sdiv_safe8 = sdiv1_safe6 = sdiv_safe32 = sdiv_safe64 = sdivN
sdiv_up_safe8 = sdiv_up1_safe6 = sdiv_up_safe32 = sdiv_up_safe64 = sdiv_upN
smod8 = smod16 = smod32 = smod64 = smodN
smod_safe8 = smod_safe16 = smod_safe32 = smod_safe64 = smodN
udiv8 = udiv16 = udiv32 = udiv64 = udivN
udiv_up8 = udiv_up16 = udiv_up32 = udiv_up64 = udivN
udiv_safe8 = udiv_safe16 = udiv_safe32 = udiv_safe64 = udiv_upN
udiv_up_safe8 = udiv_up_safe16 = udiv_up_safe32 = udiv_up_safe64 = udiv_upN
umod8 = umod16 = umod32 = umod64 = umodN
umod_safe8 = umod_safe16 = umod_safe32 = umod_safe64 = umodN
squot8 = squot16 = squot32 = squot64 = squotN
squot_safe8 = squot_safe16 = squot_safe32 = squot_safe64 = squotN
srem8 = srem16 = srem32 = srem64 = sremN
srem_safe8 = srem_safe16 = srem_safe32 = srem_safe64 = sremN

shl8 = shl16 = shl32 = shl64 = shlN
ashr8 = ashr16 = ashr32 = ashr64 = ashrN
smax8 = smax16 = smax32 = smax64 = smaxN
smin8 = smin16 = smin32 = smin64 = sminN
umax8 = umax16 = umax32 = umax64 = umaxN
umin8 = umin16 = umin32 = umin64 = uminN
pow8 = pow16 = pow32 = pow64 = powN
fpow32 = fpow64 = fpowN
fmax32 = fmax64 = fmaxN
fmin32 = fmin64 = fminN
sle8 = sle16 = sle32 = sle64 = sleN
slt8 = slt16 = slt32 = slt64 = sltN
ule8 = ule16 = ule32 = ule64 = uleN
ult8 = ult16 = ult32 = ult64 = ultN
sext_i8_i8 = sext_i16_i8 = sext_i32_i8 = sext_i64_i8 = sext_T_i8
sext_i8_i16 = sext_i16_i16 = sext_i32_i16 = sext_i64_i16 = sext_T_i16
sext_i8_i32 = sext_i16_i32 = sext_i32_i32 = sext_i64_i32 = sext_T_i32
sext_i8_i64 = sext_i16_i64 = sext_i32_i64 = sext_i64_i64 = sext_T_i64
itob_i8_bool = itob_i16_bool = itob_i32_bool = itob_i64_bool = itob_T_bool

def clz_T(x):
  n = np.int32(0)
  bits = x.itemsize * 8
  for i in range(bits):
    if x < 0:
      break
    n += 1
    x <<= np.int8(1)
  return n

def ctz_T(x):
  n = np.int32(0)
  bits = x.itemsize * 8
  for i in range(bits):
    if (x & 1) == 1:
      break
    n += 1
    x >>= np.int8(1)
  return n

def popc_T(x):
  c = np.int32(0)
  while x != 0:
    x &= x - np.int8(1)
    c += np.int8(1)
  return c

futhark_popc8 = futhark_popc16 = futhark_popc32 = futhark_popc64 = popc_T
futhark_clzz8 = futhark_clzz16 = futhark_clzz32 = futhark_clzz64 = clz_T
futhark_ctzz8 = futhark_ctzz16 = futhark_ctzz32 = futhark_ctzz64 = ctz_T

def ssignum(x):
  return np.sign(x)

def usignum(x):
  if x < 0:
    return ssignum(-x)
  else:
    return ssignum(x)

def sitofp_T_f32(x):
  return np.float32(x)
sitofp_i8_f32 = sitofp_i16_f32 = sitofp_i32_f32 = sitofp_i64_f32 = sitofp_T_f32

def sitofp_T_f64(x):
  return np.float64(x)
sitofp_i8_f64 = sitofp_i16_f64 = sitofp_i32_f64 = sitofp_i64_f64 = sitofp_T_f64

def uitofp_T_f32(x):
  return np.float32(unsigned(x))
uitofp_i8_f32 = uitofp_i16_f32 = uitofp_i32_f32 = uitofp_i64_f32 = uitofp_T_f32

def uitofp_T_f64(x):
  return np.float64(unsigned(x))
uitofp_i8_f64 = uitofp_i16_f64 = uitofp_i32_f64 = uitofp_i64_f64 = uitofp_T_f64

def fptosi_T_i8(x):
  return np.int8(np.trunc(x))
fptosi_f32_i8 = fptosi_f64_i8 = fptosi_T_i8

def fptosi_T_i16(x):
  return np.int16(np.trunc(x))
fptosi_f32_i16 = fptosi_f64_i16 = fptosi_T_i16

def fptosi_T_i32(x):
  return np.int32(np.trunc(x))
fptosi_f32_i32 = fptosi_f64_i32 = fptosi_T_i32

def fptosi_T_i64(x):
  return np.int64(np.trunc(x))
fptosi_f32_i64 = fptosi_f64_i64 = fptosi_T_i64

def fptoui_T_i8(x):
  return np.uint8(np.trunc(x))
fptoui_f32_i8 = fptoui_f64_i8 = fptoui_T_i8

def fptoui_T_i16(x):
  return np.uint16(np.trunc(x))
fptoui_f32_i16 = fptoui_f64_i16 = fptoui_T_i16

def fptoui_T_i32(x):
  return np.uint32(np.trunc(x))
fptoui_f32_i32 = fptoui_f64_i32 = fptoui_T_i32

def fptoui_T_i64(x):
  return np.uint64(np.trunc(x))
fptoui_f32_i64 = fptoui_f64_i64 = fptoui_T_i64

def fpconv_f32_f64(x):
  return np.float64(x)

def fpconv_f64_f32(x):
  return np.float32(x)

def futhark_mul_hi8(a, b):
  a = np.uint64(np.uint8(a))
  b = np.uint64(np.uint8(b))
  return np.int8((a*b) >> np.uint64(8))

def futhark_mul_hi16(a, b):
  a = np.uint64(np.uint16(a))
  b = np.uint64(np.uint16(b))
  return np.int16((a*b) >> np.uint64(16))

def futhark_mul_hi32(a, b):
  a = np.uint64(np.uint32(a))
  b = np.uint64(np.uint32(b))
  return np.int32((a*b) >> np.uint64(32))

# This one is done with arbitrary-precision integers.
def futhark_mul_hi64(a, b):
  a = int(np.uint64(a))
  b = int(np.uint64(b))
  return np.int64(np.uint64(a*b >> 64))

def futhark_mad_hi8(a, b, c):
  return futhark_mul_hi8(a,b) + c

def futhark_mad_hi16(a, b, c):
  return futhark_mul_hi16(a,b) + c

def futhark_mad_hi32(a, b, c):
  return futhark_mul_hi32(a,b) + c

def futhark_mad_hi64(a, b, c):
  return futhark_mul_hi64(a,b) + c

def futhark_log64(x):
  return np.float64(np.log(x))

def futhark_log2_64(x):
  return np.float64(np.log2(x))

def futhark_log10_64(x):
  return np.float64(np.log10(x))

def futhark_sqrt64(x):
  return np.sqrt(x)

def futhark_exp64(x):
  return np.exp(x)

def futhark_cos64(x):
  return np.cos(x)

def futhark_sin64(x):
  return np.sin(x)

def futhark_tan64(x):
  return np.tan(x)

def futhark_acos64(x):
  return np.arccos(x)

def futhark_asin64(x):
  return np.arcsin(x)

def futhark_atan64(x):
  return np.arctan(x)

def futhark_cosh64(x):
  return np.cosh(x)

def futhark_sinh64(x):
  return np.sinh(x)

def futhark_tanh64(x):
  return np.tanh(x)

def futhark_acosh64(x):
  return np.arccosh(x)

def futhark_asinh64(x):
  return np.arcsinh(x)

def futhark_atanh64(x):
  return np.arctanh(x)

def futhark_atan2_64(x, y):
  return np.arctan2(x, y)

def futhark_gamma64(x):
  return np.float64(math.gamma(x))

def futhark_lgamma64(x):
  return np.float64(math.lgamma(x))

def futhark_round64(x):
  return np.round(x)

def futhark_ceil64(x):
  return np.ceil(x)

def futhark_floor64(x):
  return np.floor(x)

def futhark_isnan64(x):
  return np.isnan(x)

def futhark_isinf64(x):
  return np.isinf(x)

def futhark_to_bits64(x):
  s = struct.pack('>d', x)
  return np.int64(struct.unpack('>q', s)[0])

def futhark_from_bits64(x):
  s = struct.pack('>q', x)
  return np.float64(struct.unpack('>d', s)[0])

def futhark_log32(x):
  return np.float32(np.log(x))

def futhark_log2_32(x):
  return np.float32(np.log2(x))

def futhark_log10_32(x):
  return np.float32(np.log10(x))

def futhark_sqrt32(x):
  return np.float32(np.sqrt(x))

def futhark_exp32(x):
  return np.exp(x)

def futhark_cos32(x):
  return np.cos(x)

def futhark_sin32(x):
  return np.sin(x)

def futhark_tan32(x):
  return np.tan(x)

def futhark_acos32(x):
  return np.arccos(x)

def futhark_asin32(x):
  return np.arcsin(x)

def futhark_atan32(x):
  return np.arctan(x)

def futhark_cosh32(x):
  return np.cosh(x)

def futhark_sinh32(x):
  return np.sinh(x)

def futhark_tanh32(x):
  return np.tanh(x)

def futhark_acosh32(x):
  return np.arccosh(x)

def futhark_asinh32(x):
  return np.arcsinh(x)

def futhark_atanh32(x):
  return np.arctanh(x)

def futhark_atan2_32(x, y):
  return np.arctan2(x, y)

def futhark_gamma32(x):
  return np.float32(math.gamma(x))

def futhark_lgamma32(x):
  return np.float32(math.lgamma(x))

def futhark_round32(x):
  return np.round(x)

def futhark_ceil32(x):
  return np.ceil(x)

def futhark_floor32(x):
  return np.floor(x)

def futhark_isnan32(x):
  return np.isnan(x)

def futhark_isinf32(x):
  return np.isinf(x)

def futhark_to_bits32(x):
  s = struct.pack('>f', x)
  return np.int32(struct.unpack('>l', s)[0])

def futhark_from_bits32(x):
  s = struct.pack('>l', x)
  return np.float32(struct.unpack('>f', s)[0])

def futhark_lerp32(v0, v1, t):
  return v0 + (v1-v0)*t

def futhark_lerp64(v0, v1, t):
  return v0 + (v1-v0)*t

def futhark_mad32(a, b, c):
  return a * b + c

def futhark_mad64(a, b, c):
  return a * b + c

def futhark_fma32(a, b, c):
  return a * b + c

def futhark_fma64(a, b, c):
  return a * b + c

# End of scalar.py.
class bfastfinal:
  entry_points = {"main": (["i32", "i32", "i32", "f32", "f32", "f32", "[]i32",
                            "[][]f32"], ["[]i32", "[]f32"]),
                  "mainDetailed": (["i32", "i32", "i32", "f32", "f32", "f32",
                                    "[]i32", "[][]f32"], ["[]f32", "[]i32",
                                                          "[]i32", "[]f32",
                                                          "[][]f32", "[][]f32",
                                                          "[]f32", "[]i32",
                                                          "[]f32", "[]f32",
                                                          "[][]f32",
                                                          "[][]f32"]),
                  "mainMagnitude": (["i32", "i32", "i32", "f32", "f32", "f32",
                                     "[]i32", "[][]f32"], ["[]i32", "[]f32",
                                                           "[]f32"]),
                  "remove_nans": (["i16", "[][][]i16"], ["[][][]f32"]),
                  "reshapeTransp": (["[][][]f32"], ["[][]f32"])}
  def __init__(self, command_queue=None, interactive=False,
               platform_pref=preferred_platform, device_pref=preferred_device,
               default_group_size=default_group_size,
               default_num_groups=default_num_groups,
               default_tile_size=default_tile_size,
               default_reg_tile_size=default_reg_tile_size,
               default_threshold=default_threshold, sizes=sizes):
    size_heuristics=[("NVIDIA CUDA", cl.device_type.GPU, "lockstep_width",
      lambda device: np.int32(32)), ("AMD Accelerated Parallel Processing",
                                     cl.device_type.GPU, "lockstep_width",
                                     lambda device: np.int32(32)), ("",
                                                                    cl.device_type.GPU,
                                                                    "lockstep_width",
                                                                    lambda device: np.int32(1)),
     ("", cl.device_type.GPU, "num_groups",
      lambda device: (np.int32(4) * device.get_info(getattr(cl.device_info,
                                                            "MAX_COMPUTE_UNITS")))),
     ("", cl.device_type.GPU, "group_size", lambda device: np.int32(256)), ("",
                                                                            cl.device_type.GPU,
                                                                            "tile_size",
                                                                            lambda device: np.int32(32)),
     ("", cl.device_type.GPU, "reg_tile_size", lambda device: np.int32(2)), ("",
                                                                             cl.device_type.GPU,
                                                                             "threshold",
                                                                             lambda device: np.int32(32768)),
     ("", cl.device_type.CPU, "lockstep_width", lambda device: np.int32(1)), ("",
                                                                              cl.device_type.CPU,
                                                                              "num_groups",
                                                                              lambda device: device.get_info(getattr(cl.device_info,
                                                                                                                     "MAX_COMPUTE_UNITS"))),
     ("", cl.device_type.CPU, "group_size", lambda device: np.int32(32)), ("",
                                                                           cl.device_type.CPU,
                                                                           "tile_size",
                                                                           lambda device: np.int32(4)),
     ("", cl.device_type.CPU, "reg_tile_size", lambda device: np.int32(1)), ("",
                                                                             cl.device_type.CPU,
                                                                             "threshold",
                                                                             lambda device: device.get_info(getattr(cl.device_info,
                                                                                                                    "MAX_COMPUTE_UNITS")))]
    self.global_failure_args_max = 2
    self.failure_msgs=["Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:119:54-68\n   #1  bfastfinal.fut:119:13-122:36\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:117:20-133:9\n   #4  bfastfinal.fut:176:3-56\n   #5  bfastfinal.fut:172:1-176:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:120:29-43\n   #1  bfastfinal.fut:119:13-122:36\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:117:20-133:9\n   #4  bfastfinal.fut:176:3-56\n   #5  bfastfinal.fut:172:1-176:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:119:13-124:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:117:20-133:9\n   #5  bfastfinal.fut:176:3-56\n   #6  bfastfinal.fut:172:1-176:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:119:13-124:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:117:20-133:9\n   #5  bfastfinal.fut:176:3-56\n   #6  bfastfinal.fut:172:1-176:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:8:17-21\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:119:13-124:42\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:117:20-133:9\n   #6  bfastfinal.fut:176:3-56\n   #7  bfastfinal.fut:172:1-176:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:9:20-24\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:119:13-124:42\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:117:20-133:9\n   #6  bfastfinal.fut:176:3-56\n   #7  bfastfinal.fut:172:1-176:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:119:13-124:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:117:20-133:9\n   #5  bfastfinal.fut:176:3-56\n   #6  bfastfinal.fut:172:1-176:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:119:13-124:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:117:20-133:9\n   #5  bfastfinal.fut:176:3-56\n   #6  bfastfinal.fut:172:1-176:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:131:34-38\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:119:13-132:38\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:117:20-133:9\n   #5  bfastfinal.fut:176:3-56\n   #6  bfastfinal.fut:172:1-176:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:131:42-46\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:119:13-132:38\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:117:20-133:9\n   #5  bfastfinal.fut:176:3-56\n   #6  bfastfinal.fut:172:1-176:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:132:33-37\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:119:13-132:38\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:117:20-133:9\n   #5  bfastfinal.fut:176:3-56\n   #6  bfastfinal.fut:172:1-176:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:119:54-68\n   #1  bfastfinal.fut:119:13-122:36\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:117:20-133:9\n   #4  bfastfinal.fut:183:5-58\n   #5  bfastfinal.fut:178:1-184:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:120:29-43\n   #1  bfastfinal.fut:119:13-122:36\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:117:20-133:9\n   #4  bfastfinal.fut:183:5-58\n   #5  bfastfinal.fut:178:1-184:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:119:13-124:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:117:20-133:9\n   #5  bfastfinal.fut:183:5-58\n   #6  bfastfinal.fut:178:1-184:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:119:13-124:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:117:20-133:9\n   #5  bfastfinal.fut:183:5-58\n   #6  bfastfinal.fut:178:1-184:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:8:17-21\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:119:13-124:42\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:117:20-133:9\n   #6  bfastfinal.fut:183:5-58\n   #7  bfastfinal.fut:178:1-184:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:9:20-24\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:119:13-124:42\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:117:20-133:9\n   #6  bfastfinal.fut:183:5-58\n   #7  bfastfinal.fut:178:1-184:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:119:13-124:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:117:20-133:9\n   #5  bfastfinal.fut:183:5-58\n   #6  bfastfinal.fut:178:1-184:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:119:13-124:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:117:20-133:9\n   #5  bfastfinal.fut:183:5-58\n   #6  bfastfinal.fut:178:1-184:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:131:34-38\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:119:13-132:38\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:117:20-133:9\n   #5  bfastfinal.fut:183:5-58\n   #6  bfastfinal.fut:178:1-184:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:131:42-46\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:119:13-132:38\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:117:20-133:9\n   #5  bfastfinal.fut:183:5-58\n   #6  bfastfinal.fut:178:1-184:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:132:33-37\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:119:13-132:38\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:117:20-133:9\n   #5  bfastfinal.fut:183:5-58\n   #6  bfastfinal.fut:178:1-184:32\n"]
    program = initialise_opencl_object(self,
                                       program_src=fut_opencl_src,
                                       command_queue=command_queue,
                                       interactive=interactive,
                                       platform_pref=platform_pref,
                                       device_pref=device_pref,
                                       default_group_size=default_group_size,
                                       default_num_groups=default_num_groups,
                                       default_tile_size=default_tile_size,
                                       default_threshold=default_threshold,
                                       size_heuristics=size_heuristics,
                                       required_types=["i16", "i32", "i64", "f32", "bool", "cert"],
                                       user_sizes=sizes,
                                       all_sizes={"builtin#replicate_f32.group_size_44913": {"class": "group_size",
                                                                                   "value": None},
                                        "builtin#replicate_i32.group_size_44922": {"class": "group_size",
                                                                                   "value": None},
                                        "main.Rx_41426": {"class": "reg_tile_size", "value": None},
                                        "main.Rx_42167": {"class": "reg_tile_size", "value": None},
                                        "main.Ry_41427": {"class": "reg_tile_size", "value": None},
                                        "main.Ry_42168": {"class": "reg_tile_size", "value": None},
                                        "main.Tk_41423": {"class": "tile_size", "value": None},
                                        "main.Tk_42164": {"class": "tile_size", "value": None},
                                        "main.Tx_41278": {"class": "tile_size", "value": None},
                                        "main.Tx_41424": {"class": "tile_size", "value": None},
                                        "main.Tx_42165": {"class": "tile_size", "value": None},
                                        "main.Ty_41279": {"class": "tile_size", "value": None},
                                        "main.Ty_41425": {"class": "tile_size", "value": None},
                                        "main.Ty_42166": {"class": "tile_size", "value": None},
                                        "main.group_size_44522": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37853": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38031": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38159": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38191": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38238": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38723": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38888": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38942": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39009": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39103": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39283": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39424": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39556": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39837": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39912": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40061": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40163": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40310": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40434": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40804": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40946": {"class": "group_size", "value": None},
                                        "main.segmap_num_groups_38193": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_38240": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_39285": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_39426": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_39558": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_40948": {"class": "num_groups", "value": None},
                                        "main.segred_group_size_38298": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39345": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39482": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39612": {"class": "group_size", "value": None},
                                        "main.segred_group_size_40178": {"class": "group_size", "value": None},
                                        "main.segred_group_size_40199": {"class": "group_size", "value": None},
                                        "main.segred_group_size_40266": {"class": "group_size", "value": None},
                                        "main.segred_group_size_40350": {"class": "group_size", "value": None},
                                        "main.segred_group_size_40851": {"class": "group_size", "value": None},
                                        "main.segred_num_groups_38300": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39347": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39484": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39614": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_40180": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_40201": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_40268": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_40352": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_40853": {"class": "num_groups", "value": None},
                                        "main.segscan_group_size_39921": {"class": "group_size", "value": None},
                                        "main.segscan_group_size_40905": {"class": "group_size", "value": None},
                                        "main.segscan_num_groups_39923": {"class": "num_groups", "value": None},
                                        "main.segscan_num_groups_40907": {"class": "num_groups", "value": None},
                                        "main.suff_intra_par_11": {"class": "threshold ()", "value": 32},
                                        "main.suff_intra_par_13": {"class": "threshold (!main.suff_intra_par_11)",
                                                                   "value": 32},
                                        "main.suff_intra_par_24": {"class": "threshold ()", "value": 32},
                                        "main.suff_intra_par_29": {"class": "threshold (!main.suff_outer_par_28)",
                                                                   "value": 32},
                                        "main.suff_intra_par_34": {"class": "threshold ()", "value": 32},
                                        "main.suff_outer_par_16": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_17": {"class": "threshold (!main.suff_outer_par_16)",
                                                                   "value": None},
                                        "main.suff_outer_par_18": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_19": {"class": "threshold (!main.suff_outer_par_18)",
                                                                   "value": None},
                                        "main.suff_outer_par_20": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_21": {"class": "threshold (!main.suff_outer_par_20)",
                                                                   "value": None},
                                        "main.suff_outer_par_28": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_31": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_6": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_7": {"class": "threshold (!main.suff_outer_par_6)",
                                                                  "value": None},
                                        "main.suff_outer_par_8": {"class": "threshold (!main.suff_outer_par_7 !main.suff_outer_par_6)",
                                                                  "value": None},
                                        "main.tile_size_41890": {"class": "tile_size", "value": None},
                                        "mainDetailed.Rx_41426": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Rx_42167": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Ry_41427": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Ry_42168": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Tk_41423": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tk_42164": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tx_41278": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tx_41424": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tx_42165": {"class": "tile_size", "value": None},
                                        "mainDetailed.Ty_41279": {"class": "tile_size", "value": None},
                                        "mainDetailed.Ty_41425": {"class": "tile_size", "value": None},
                                        "mainDetailed.Ty_42166": {"class": "tile_size", "value": None},
                                        "mainDetailed.group_size_44546": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_29882": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30060": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30188": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30220": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30267": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30752": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30917": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30971": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31038": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31132": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31312": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31453": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31585": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31866": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31941": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32090": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32192": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32339": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32463": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32714": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32836": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32893": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33438": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33490": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33525": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33646": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_num_groups_30222": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_30269": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_31314": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_31455": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_31587": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_33648": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_group_size_30327": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31374": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31511": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31641": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_32207": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_32228": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_32295": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_32379": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_33551": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_num_groups_30329": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31376": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31513": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31643": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_32209": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_32230": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_32297": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_32381": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_33553": {"class": "num_groups", "value": None},
                                        "mainDetailed.segscan_group_size_31950": {"class": "group_size",
                                                                                  "value": None},
                                        "mainDetailed.segscan_group_size_33605": {"class": "group_size",
                                                                                  "value": None},
                                        "mainDetailed.segscan_num_groups_31952": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainDetailed.segscan_num_groups_33607": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainDetailed.suff_intra_par_11": {"class": "threshold ()", "value": 32},
                                        "mainDetailed.suff_intra_par_13": {"class": "threshold (!mainDetailed.suff_intra_par_11)",
                                                                           "value": 32},
                                        "mainDetailed.suff_intra_par_24": {"class": "threshold ()", "value": 32},
                                        "mainDetailed.suff_intra_par_29": {"class": "threshold (!mainDetailed.suff_outer_par_28)",
                                                                           "value": 32},
                                        "mainDetailed.suff_intra_par_37": {"class": "threshold ()", "value": 32},
                                        "mainDetailed.suff_outer_par_16": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_17": {"class": "threshold (!mainDetailed.suff_outer_par_16)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_18": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_19": {"class": "threshold (!mainDetailed.suff_outer_par_18)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_20": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_21": {"class": "threshold (!mainDetailed.suff_outer_par_20)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_28": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_31": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_6": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_7": {"class": "threshold (!mainDetailed.suff_outer_par_6)",
                                                                          "value": None},
                                        "mainDetailed.suff_outer_par_8": {"class": "threshold (!mainDetailed.suff_outer_par_7 !mainDetailed.suff_outer_par_6)",
                                                                          "value": None},
                                        "mainDetailed.tile_size_41890": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Rx_41426": {"class": "reg_tile_size", "value": None},
                                        "mainMagnitude.Rx_42167": {"class": "reg_tile_size", "value": None},
                                        "mainMagnitude.Ry_41427": {"class": "reg_tile_size", "value": None},
                                        "mainMagnitude.Ry_42168": {"class": "reg_tile_size", "value": None},
                                        "mainMagnitude.Tk_41423": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Tk_42164": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Tx_41278": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Tx_41424": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Tx_42165": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Ty_41279": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Ty_41425": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Ty_42166": {"class": "tile_size", "value": None},
                                        "mainMagnitude.group_size_44524": {"class": "group_size", "value": None},
                                        "mainMagnitude.segmap_group_size_33947": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34125": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34253": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34285": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34332": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34817": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34982": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35036": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35103": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35197": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35377": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35518": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35650": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35931": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36006": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36155": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36257": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36404": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36528": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36779": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36901": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36958": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_37456": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_37598": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_34287": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_34334": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_35379": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_35520": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_35652": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_37600": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_34392": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_35439": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_35576": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_35706": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_36272": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_36293": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_36360": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_36444": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_37503": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_34394": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_35441": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_35578": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_35708": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_36274": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_36295": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_36362": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_36446": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_37505": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segscan_group_size_36015": {"class": "group_size",
                                                                                   "value": None},
                                        "mainMagnitude.segscan_group_size_37557": {"class": "group_size",
                                                                                   "value": None},
                                        "mainMagnitude.segscan_num_groups_36017": {"class": "num_groups",
                                                                                   "value": None},
                                        "mainMagnitude.segscan_num_groups_37559": {"class": "num_groups",
                                                                                   "value": None},
                                        "mainMagnitude.suff_intra_par_11": {"class": "threshold ()", "value": 32},
                                        "mainMagnitude.suff_intra_par_13": {"class": "threshold (!mainMagnitude.suff_intra_par_11)",
                                                                            "value": 32},
                                        "mainMagnitude.suff_intra_par_24": {"class": "threshold ()", "value": 32},
                                        "mainMagnitude.suff_intra_par_29": {"class": "threshold (!mainMagnitude.suff_outer_par_28)",
                                                                            "value": 32},
                                        "mainMagnitude.suff_intra_par_37": {"class": "threshold ()", "value": 32},
                                        "mainMagnitude.suff_outer_par_16": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_17": {"class": "threshold (!mainMagnitude.suff_outer_par_16)",
                                                                            "value": None},
                                        "mainMagnitude.suff_outer_par_18": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_19": {"class": "threshold (!mainMagnitude.suff_outer_par_18)",
                                                                            "value": None},
                                        "mainMagnitude.suff_outer_par_20": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_21": {"class": "threshold (!mainMagnitude.suff_outer_par_20)",
                                                                            "value": None},
                                        "mainMagnitude.suff_outer_par_28": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_31": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_6": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_7": {"class": "threshold (!mainMagnitude.suff_outer_par_6)",
                                                                           "value": None},
                                        "mainMagnitude.suff_outer_par_8": {"class": "threshold (!mainMagnitude.suff_outer_par_7 !mainMagnitude.suff_outer_par_6)",
                                                                           "value": None},
                                        "mainMagnitude.tile_size_41890": {"class": "tile_size", "value": None},
                                        "remove_nans.segmap_group_size_29724": {"class": "group_size", "value": None}})
    self.builtinzhreplicate_f32zireplicate_44910_var = program.builtinzhreplicate_f32zireplicate_44910
    self.builtinzhreplicate_i32zireplicate_44919_var = program.builtinzhreplicate_i32zireplicate_44919
    self.gpu_map_transpose_f32_var = program.gpu_map_transpose_f32
    self.gpu_map_transpose_f32_low_height_var = program.gpu_map_transpose_f32_low_height
    self.gpu_map_transpose_f32_low_width_var = program.gpu_map_transpose_f32_low_width
    self.gpu_map_transpose_f32_small_var = program.gpu_map_transpose_f32_small
    self.mainzicopy_44519_var = program.mainzicopy_44519
    self.mainziscan_stage1_39927_var = program.mainziscan_stage1_39927
    self.mainziscan_stage1_40911_var = program.mainziscan_stage1_40911
    self.mainziscan_stage2_39927_var = program.mainziscan_stage2_39927
    self.mainziscan_stage2_40911_var = program.mainziscan_stage2_40911
    self.mainziscan_stage3_39927_var = program.mainziscan_stage3_39927
    self.mainziscan_stage3_40911_var = program.mainziscan_stage3_40911
    self.mainzisegmap_37850_var = program.mainzisegmap_37850
    self.mainzisegmap_38028_var = program.mainzisegmap_38028
    self.mainzisegmap_38156_var = program.mainzisegmap_38156
    self.mainzisegmap_38189_var = program.mainzisegmap_38189
    self.mainzisegmap_38235_var = program.mainzisegmap_38235
    self.mainzisegmap_38719_var = program.mainzisegmap_38719
    self.mainzisegmap_38885_var = program.mainzisegmap_38885
    self.mainzisegmap_38939_var = program.mainzisegmap_38939
    self.mainzisegmap_39007_var = program.mainzisegmap_39007
    self.mainzisegmap_39100_var = program.mainzisegmap_39100
    self.mainzisegmap_39281_var = program.mainzisegmap_39281
    self.mainzisegmap_39422_var = program.mainzisegmap_39422
    self.mainzisegmap_39554_var = program.mainzisegmap_39554
    self.mainzisegmap_39834_var = program.mainzisegmap_39834
    self.mainzisegmap_39910_var = program.mainzisegmap_39910
    self.mainzisegmap_40161_var = program.mainzisegmap_40161
    self.mainzisegmap_40432_var = program.mainzisegmap_40432
    self.mainzisegmap_40802_var = program.mainzisegmap_40802
    self.mainzisegmap_40944_var = program.mainzisegmap_40944
    self.mainzisegmap_intragroup_38539_var = program.mainzisegmap_intragroup_38539
    self.mainzisegmap_intragroup_38766_var = program.mainzisegmap_intragroup_38766
    self.mainzisegmap_intragroup_39717_var = program.mainzisegmap_intragroup_39717
    self.mainzisegmap_intragroup_40057_var = program.mainzisegmap_intragroup_40057
    self.mainzisegmap_intragroup_40477_var = program.mainzisegmap_intragroup_40477
    self.mainzisegmap_intragroup_41294_var = program.mainzisegmap_intragroup_41294
    self.mainzisegmap_intragroup_41447_var = program.mainzisegmap_intragroup_41447
    self.mainzisegmap_intragroup_41896_var = program.mainzisegmap_intragroup_41896
    self.mainzisegmap_intragroup_42188_var = program.mainzisegmap_intragroup_42188
    self.mainzisegmap_intragroup_42622_var = program.mainzisegmap_intragroup_42622
    self.mainzisegmap_intragroup_42854_var = program.mainzisegmap_intragroup_42854
    self.mainzisegred_large_38304_var = program.mainzisegred_large_38304
    self.mainzisegred_large_39351_var = program.mainzisegred_large_39351
    self.mainzisegred_large_39488_var = program.mainzisegred_large_39488
    self.mainzisegred_large_39618_var = program.mainzisegred_large_39618
    self.mainzisegred_large_40184_var = program.mainzisegred_large_40184
    self.mainzisegred_large_40205_var = program.mainzisegred_large_40205
    self.mainzisegred_large_40356_var = program.mainzisegred_large_40356
    self.mainzisegred_large_40857_var = program.mainzisegred_large_40857
    self.mainzisegred_nonseg_40274_var = program.mainzisegred_nonseg_40274
    self.mainzisegred_small_38304_var = program.mainzisegred_small_38304
    self.mainzisegred_small_39351_var = program.mainzisegred_small_39351
    self.mainzisegred_small_39488_var = program.mainzisegred_small_39488
    self.mainzisegred_small_39618_var = program.mainzisegred_small_39618
    self.mainzisegred_small_40184_var = program.mainzisegred_small_40184
    self.mainzisegred_small_40205_var = program.mainzisegred_small_40205
    self.mainzisegred_small_40356_var = program.mainzisegred_small_40356
    self.mainzisegred_small_40857_var = program.mainzisegred_small_40857
    self.mainDetailedzicopy_44543_var = program.mainDetailedzicopy_44543
    self.mainDetailedziscan_stage1_31956_var = program.mainDetailedziscan_stage1_31956
    self.mainDetailedziscan_stage1_33611_var = program.mainDetailedziscan_stage1_33611
    self.mainDetailedziscan_stage2_31956_var = program.mainDetailedziscan_stage2_31956
    self.mainDetailedziscan_stage2_33611_var = program.mainDetailedziscan_stage2_33611
    self.mainDetailedziscan_stage3_31956_var = program.mainDetailedziscan_stage3_31956
    self.mainDetailedziscan_stage3_33611_var = program.mainDetailedziscan_stage3_33611
    self.mainDetailedzisegmap_29879_var = program.mainDetailedzisegmap_29879
    self.mainDetailedzisegmap_30057_var = program.mainDetailedzisegmap_30057
    self.mainDetailedzisegmap_30185_var = program.mainDetailedzisegmap_30185
    self.mainDetailedzisegmap_30218_var = program.mainDetailedzisegmap_30218
    self.mainDetailedzisegmap_30264_var = program.mainDetailedzisegmap_30264
    self.mainDetailedzisegmap_30748_var = program.mainDetailedzisegmap_30748
    self.mainDetailedzisegmap_30914_var = program.mainDetailedzisegmap_30914
    self.mainDetailedzisegmap_30968_var = program.mainDetailedzisegmap_30968
    self.mainDetailedzisegmap_31036_var = program.mainDetailedzisegmap_31036
    self.mainDetailedzisegmap_31129_var = program.mainDetailedzisegmap_31129
    self.mainDetailedzisegmap_31310_var = program.mainDetailedzisegmap_31310
    self.mainDetailedzisegmap_31451_var = program.mainDetailedzisegmap_31451
    self.mainDetailedzisegmap_31583_var = program.mainDetailedzisegmap_31583
    self.mainDetailedzisegmap_31863_var = program.mainDetailedzisegmap_31863
    self.mainDetailedzisegmap_31939_var = program.mainDetailedzisegmap_31939
    self.mainDetailedzisegmap_32190_var = program.mainDetailedzisegmap_32190
    self.mainDetailedzisegmap_32461_var = program.mainDetailedzisegmap_32461
    self.mainDetailedzisegmap_32712_var = program.mainDetailedzisegmap_32712
    self.mainDetailedzisegmap_32833_var = program.mainDetailedzisegmap_32833
    self.mainDetailedzisegmap_32891_var = program.mainDetailedzisegmap_32891
    self.mainDetailedzisegmap_33435_var = program.mainDetailedzisegmap_33435
    self.mainDetailedzisegmap_33488_var = program.mainDetailedzisegmap_33488
    self.mainDetailedzisegmap_33523_var = program.mainDetailedzisegmap_33523
    self.mainDetailedzisegmap_33644_var = program.mainDetailedzisegmap_33644
    self.mainDetailedzisegmap_intragroup_30568_var = program.mainDetailedzisegmap_intragroup_30568
    self.mainDetailedzisegmap_intragroup_30795_var = program.mainDetailedzisegmap_intragroup_30795
    self.mainDetailedzisegmap_intragroup_31746_var = program.mainDetailedzisegmap_intragroup_31746
    self.mainDetailedzisegmap_intragroup_32086_var = program.mainDetailedzisegmap_intragroup_32086
    self.mainDetailedzisegmap_intragroup_33066_var = program.mainDetailedzisegmap_intragroup_33066
    self.mainDetailedzisegmap_intragroup_41294_var = program.mainDetailedzisegmap_intragroup_41294
    self.mainDetailedzisegmap_intragroup_41447_var = program.mainDetailedzisegmap_intragroup_41447
    self.mainDetailedzisegmap_intragroup_41896_var = program.mainDetailedzisegmap_intragroup_41896
    self.mainDetailedzisegmap_intragroup_42188_var = program.mainDetailedzisegmap_intragroup_42188
    self.mainDetailedzisegmap_intragroup_42622_var = program.mainDetailedzisegmap_intragroup_42622
    self.mainDetailedzisegmap_intragroup_42854_var = program.mainDetailedzisegmap_intragroup_42854
    self.mainDetailedzisegred_large_30333_var = program.mainDetailedzisegred_large_30333
    self.mainDetailedzisegred_large_31380_var = program.mainDetailedzisegred_large_31380
    self.mainDetailedzisegred_large_31517_var = program.mainDetailedzisegred_large_31517
    self.mainDetailedzisegred_large_31647_var = program.mainDetailedzisegred_large_31647
    self.mainDetailedzisegred_large_32213_var = program.mainDetailedzisegred_large_32213
    self.mainDetailedzisegred_large_32234_var = program.mainDetailedzisegred_large_32234
    self.mainDetailedzisegred_large_32385_var = program.mainDetailedzisegred_large_32385
    self.mainDetailedzisegred_large_33557_var = program.mainDetailedzisegred_large_33557
    self.mainDetailedzisegred_nonseg_32303_var = program.mainDetailedzisegred_nonseg_32303
    self.mainDetailedzisegred_small_30333_var = program.mainDetailedzisegred_small_30333
    self.mainDetailedzisegred_small_31380_var = program.mainDetailedzisegred_small_31380
    self.mainDetailedzisegred_small_31517_var = program.mainDetailedzisegred_small_31517
    self.mainDetailedzisegred_small_31647_var = program.mainDetailedzisegred_small_31647
    self.mainDetailedzisegred_small_32213_var = program.mainDetailedzisegred_small_32213
    self.mainDetailedzisegred_small_32234_var = program.mainDetailedzisegred_small_32234
    self.mainDetailedzisegred_small_32385_var = program.mainDetailedzisegred_small_32385
    self.mainDetailedzisegred_small_33557_var = program.mainDetailedzisegred_small_33557
    self.mainMagnitudezicopy_44521_var = program.mainMagnitudezicopy_44521
    self.mainMagnitudeziscan_stage1_36021_var = program.mainMagnitudeziscan_stage1_36021
    self.mainMagnitudeziscan_stage1_37563_var = program.mainMagnitudeziscan_stage1_37563
    self.mainMagnitudeziscan_stage2_36021_var = program.mainMagnitudeziscan_stage2_36021
    self.mainMagnitudeziscan_stage2_37563_var = program.mainMagnitudeziscan_stage2_37563
    self.mainMagnitudeziscan_stage3_36021_var = program.mainMagnitudeziscan_stage3_36021
    self.mainMagnitudeziscan_stage3_37563_var = program.mainMagnitudeziscan_stage3_37563
    self.mainMagnitudezisegmap_33944_var = program.mainMagnitudezisegmap_33944
    self.mainMagnitudezisegmap_34122_var = program.mainMagnitudezisegmap_34122
    self.mainMagnitudezisegmap_34250_var = program.mainMagnitudezisegmap_34250
    self.mainMagnitudezisegmap_34283_var = program.mainMagnitudezisegmap_34283
    self.mainMagnitudezisegmap_34329_var = program.mainMagnitudezisegmap_34329
    self.mainMagnitudezisegmap_34813_var = program.mainMagnitudezisegmap_34813
    self.mainMagnitudezisegmap_34979_var = program.mainMagnitudezisegmap_34979
    self.mainMagnitudezisegmap_35033_var = program.mainMagnitudezisegmap_35033
    self.mainMagnitudezisegmap_35101_var = program.mainMagnitudezisegmap_35101
    self.mainMagnitudezisegmap_35194_var = program.mainMagnitudezisegmap_35194
    self.mainMagnitudezisegmap_35375_var = program.mainMagnitudezisegmap_35375
    self.mainMagnitudezisegmap_35516_var = program.mainMagnitudezisegmap_35516
    self.mainMagnitudezisegmap_35648_var = program.mainMagnitudezisegmap_35648
    self.mainMagnitudezisegmap_35928_var = program.mainMagnitudezisegmap_35928
    self.mainMagnitudezisegmap_36004_var = program.mainMagnitudezisegmap_36004
    self.mainMagnitudezisegmap_36255_var = program.mainMagnitudezisegmap_36255
    self.mainMagnitudezisegmap_36526_var = program.mainMagnitudezisegmap_36526
    self.mainMagnitudezisegmap_36777_var = program.mainMagnitudezisegmap_36777
    self.mainMagnitudezisegmap_36898_var = program.mainMagnitudezisegmap_36898
    self.mainMagnitudezisegmap_36956_var = program.mainMagnitudezisegmap_36956
    self.mainMagnitudezisegmap_37454_var = program.mainMagnitudezisegmap_37454
    self.mainMagnitudezisegmap_37596_var = program.mainMagnitudezisegmap_37596
    self.mainMagnitudezisegmap_intragroup_34633_var = program.mainMagnitudezisegmap_intragroup_34633
    self.mainMagnitudezisegmap_intragroup_34860_var = program.mainMagnitudezisegmap_intragroup_34860
    self.mainMagnitudezisegmap_intragroup_35811_var = program.mainMagnitudezisegmap_intragroup_35811
    self.mainMagnitudezisegmap_intragroup_36151_var = program.mainMagnitudezisegmap_intragroup_36151
    self.mainMagnitudezisegmap_intragroup_37129_var = program.mainMagnitudezisegmap_intragroup_37129
    self.mainMagnitudezisegmap_intragroup_41294_var = program.mainMagnitudezisegmap_intragroup_41294
    self.mainMagnitudezisegmap_intragroup_41447_var = program.mainMagnitudezisegmap_intragroup_41447
    self.mainMagnitudezisegmap_intragroup_41896_var = program.mainMagnitudezisegmap_intragroup_41896
    self.mainMagnitudezisegmap_intragroup_42188_var = program.mainMagnitudezisegmap_intragroup_42188
    self.mainMagnitudezisegmap_intragroup_42622_var = program.mainMagnitudezisegmap_intragroup_42622
    self.mainMagnitudezisegmap_intragroup_42854_var = program.mainMagnitudezisegmap_intragroup_42854
    self.mainMagnitudezisegred_large_34398_var = program.mainMagnitudezisegred_large_34398
    self.mainMagnitudezisegred_large_35445_var = program.mainMagnitudezisegred_large_35445
    self.mainMagnitudezisegred_large_35582_var = program.mainMagnitudezisegred_large_35582
    self.mainMagnitudezisegred_large_35712_var = program.mainMagnitudezisegred_large_35712
    self.mainMagnitudezisegred_large_36278_var = program.mainMagnitudezisegred_large_36278
    self.mainMagnitudezisegred_large_36299_var = program.mainMagnitudezisegred_large_36299
    self.mainMagnitudezisegred_large_36450_var = program.mainMagnitudezisegred_large_36450
    self.mainMagnitudezisegred_large_37509_var = program.mainMagnitudezisegred_large_37509
    self.mainMagnitudezisegred_nonseg_36368_var = program.mainMagnitudezisegred_nonseg_36368
    self.mainMagnitudezisegred_small_34398_var = program.mainMagnitudezisegred_small_34398
    self.mainMagnitudezisegred_small_35445_var = program.mainMagnitudezisegred_small_35445
    self.mainMagnitudezisegred_small_35582_var = program.mainMagnitudezisegred_small_35582
    self.mainMagnitudezisegred_small_35712_var = program.mainMagnitudezisegred_small_35712
    self.mainMagnitudezisegred_small_36278_var = program.mainMagnitudezisegred_small_36278
    self.mainMagnitudezisegred_small_36299_var = program.mainMagnitudezisegred_small_36299
    self.mainMagnitudezisegred_small_36450_var = program.mainMagnitudezisegred_small_36450
    self.mainMagnitudezisegred_small_37509_var = program.mainMagnitudezisegred_small_37509
    self.remove_nanszisegmap_29720_var = program.remove_nanszisegmap_29720
    self.constants = {}
    mainzicounter_mem_44455 = np.zeros(10240, dtype=np.int32)
    static_mem_45522 = opencl_alloc(self, 40960, "static_mem_45522")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45522,
                      normaliseArray(mainzicounter_mem_44455),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44455 = static_mem_45522
    mainzicounter_mem_44651 = np.zeros(10240, dtype=np.int32)
    static_mem_45525 = opencl_alloc(self, 40960, "static_mem_45525")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45525,
                      normaliseArray(mainzicounter_mem_44651),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44651 = static_mem_45525
    mainzicounter_mem_44739 = np.zeros(10240, dtype=np.int32)
    static_mem_45526 = opencl_alloc(self, 40960, "static_mem_45526")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45526,
                      normaliseArray(mainzicounter_mem_44739),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44739 = static_mem_45526
    mainzicounter_mem_44871 = np.zeros(10240, dtype=np.int32)
    static_mem_45527 = opencl_alloc(self, 40960, "static_mem_45527")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45527,
                      normaliseArray(mainzicounter_mem_44871),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44871 = static_mem_45527
    mainzicounter_mem_45065 = np.zeros(10240, dtype=np.int32)
    static_mem_45528 = opencl_alloc(self, 40960, "static_mem_45528")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45528,
                      normaliseArray(mainzicounter_mem_45065),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45065 = static_mem_45528
    mainzicounter_mem_45125 = np.zeros(10240, dtype=np.int32)
    static_mem_45529 = opencl_alloc(self, 40960, "static_mem_45529")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45529,
                      normaliseArray(mainzicounter_mem_45125),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45125 = static_mem_45529
    mainzicounter_mem_45165 = np.array([np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0)], dtype=np.int32)
    static_mem_45530 = opencl_alloc(self, 40, "static_mem_45530")
    if (40 != 0):
      cl.enqueue_copy(self.queue, static_mem_45530,
                      normaliseArray(mainzicounter_mem_45165),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45165 = static_mem_45530
    mainzicounter_mem_45234 = np.zeros(10240, dtype=np.int32)
    static_mem_45532 = opencl_alloc(self, 40960, "static_mem_45532")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45532,
                      normaliseArray(mainzicounter_mem_45234),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45234 = static_mem_45532
    mainzicounter_mem_45411 = np.zeros(10240, dtype=np.int32)
    static_mem_45534 = opencl_alloc(self, 40960, "static_mem_45534")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45534,
                      normaliseArray(mainzicounter_mem_45411),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45411 = static_mem_45534
    mainDetailedzicounter_mem_44479 = np.zeros(10240, dtype=np.int32)
    static_mem_45535 = opencl_alloc(self, 40960, "static_mem_45535")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45535,
                      normaliseArray(mainDetailedzicounter_mem_44479),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44479 = static_mem_45535
    mainDetailedzicounter_mem_44675 = np.zeros(10240, dtype=np.int32)
    static_mem_45538 = opencl_alloc(self, 40960, "static_mem_45538")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45538,
                      normaliseArray(mainDetailedzicounter_mem_44675),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44675 = static_mem_45538
    mainDetailedzicounter_mem_44763 = np.zeros(10240, dtype=np.int32)
    static_mem_45539 = opencl_alloc(self, 40960, "static_mem_45539")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45539,
                      normaliseArray(mainDetailedzicounter_mem_44763),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44763 = static_mem_45539
    mainDetailedzicounter_mem_44895 = np.zeros(10240, dtype=np.int32)
    static_mem_45540 = opencl_alloc(self, 40960, "static_mem_45540")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45540,
                      normaliseArray(mainDetailedzicounter_mem_44895),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44895 = static_mem_45540
    mainDetailedzicounter_mem_45089 = np.zeros(10240, dtype=np.int32)
    static_mem_45541 = opencl_alloc(self, 40960, "static_mem_45541")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45541,
                      normaliseArray(mainDetailedzicounter_mem_45089),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45089 = static_mem_45541
    mainDetailedzicounter_mem_45149 = np.zeros(10240, dtype=np.int32)
    static_mem_45542 = opencl_alloc(self, 40960, "static_mem_45542")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45542,
                      normaliseArray(mainDetailedzicounter_mem_45149),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45149 = static_mem_45542
    mainDetailedzicounter_mem_45189 = np.array([np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0)],
                                               dtype=np.int32)
    static_mem_45543 = opencl_alloc(self, 40, "static_mem_45543")
    if (40 != 0):
      cl.enqueue_copy(self.queue, static_mem_45543,
                      normaliseArray(mainDetailedzicounter_mem_45189),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45189 = static_mem_45543
    mainDetailedzicounter_mem_45258 = np.zeros(10240, dtype=np.int32)
    static_mem_45545 = opencl_alloc(self, 40960, "static_mem_45545")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45545,
                      normaliseArray(mainDetailedzicounter_mem_45258),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45258 = static_mem_45545
    mainDetailedzicounter_mem_45455 = np.zeros(10240, dtype=np.int32)
    static_mem_45547 = opencl_alloc(self, 40960, "static_mem_45547")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45547,
                      normaliseArray(mainDetailedzicounter_mem_45455),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45455 = static_mem_45547
    mainMagnitudezicounter_mem_44457 = np.zeros(10240, dtype=np.int32)
    static_mem_45548 = opencl_alloc(self, 40960, "static_mem_45548")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45548,
                      normaliseArray(mainMagnitudezicounter_mem_44457),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44457 = static_mem_45548
    mainMagnitudezicounter_mem_44653 = np.zeros(10240, dtype=np.int32)
    static_mem_45551 = opencl_alloc(self, 40960, "static_mem_45551")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45551,
                      normaliseArray(mainMagnitudezicounter_mem_44653),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44653 = static_mem_45551
    mainMagnitudezicounter_mem_44741 = np.zeros(10240, dtype=np.int32)
    static_mem_45552 = opencl_alloc(self, 40960, "static_mem_45552")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45552,
                      normaliseArray(mainMagnitudezicounter_mem_44741),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44741 = static_mem_45552
    mainMagnitudezicounter_mem_44873 = np.zeros(10240, dtype=np.int32)
    static_mem_45553 = opencl_alloc(self, 40960, "static_mem_45553")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45553,
                      normaliseArray(mainMagnitudezicounter_mem_44873),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44873 = static_mem_45553
    mainMagnitudezicounter_mem_45067 = np.zeros(10240, dtype=np.int32)
    static_mem_45554 = opencl_alloc(self, 40960, "static_mem_45554")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45554,
                      normaliseArray(mainMagnitudezicounter_mem_45067),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_45067 = static_mem_45554
    mainMagnitudezicounter_mem_45127 = np.zeros(10240, dtype=np.int32)
    static_mem_45555 = opencl_alloc(self, 40960, "static_mem_45555")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45555,
                      normaliseArray(mainMagnitudezicounter_mem_45127),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_45127 = static_mem_45555
    mainMagnitudezicounter_mem_45167 = np.array([np.int32(0), np.int32(0),
                                                 np.int32(0), np.int32(0),
                                                 np.int32(0), np.int32(0),
                                                 np.int32(0), np.int32(0),
                                                 np.int32(0), np.int32(0)],
                                                dtype=np.int32)
    static_mem_45556 = opencl_alloc(self, 40, "static_mem_45556")
    if (40 != 0):
      cl.enqueue_copy(self.queue, static_mem_45556,
                      normaliseArray(mainMagnitudezicounter_mem_45167),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_45167 = static_mem_45556
    mainMagnitudezicounter_mem_45236 = np.zeros(10240, dtype=np.int32)
    static_mem_45558 = opencl_alloc(self, 40960, "static_mem_45558")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45558,
                      normaliseArray(mainMagnitudezicounter_mem_45236),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_45236 = static_mem_45558
    mainMagnitudezicounter_mem_45433 = np.zeros(10240, dtype=np.int32)
    static_mem_45560 = opencl_alloc(self, 40960, "static_mem_45560")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45560,
                      normaliseArray(mainMagnitudezicounter_mem_45433),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_45433 = static_mem_45560
  def futhark_builtinzhgpu_map_transpose_f32(self, destmem_0, destoffset_1,
                                             srcmem_2, srcoffset_3,
                                             num_arrays_4, x_elems_5,
                                             y_elems_6):
    if ((num_arrays_4 == np.int32(0)) or ((x_elems_5 == np.int32(0)) or (y_elems_6 == np.int32(0)))):
      pass
    else:
      muly_8 = squot32(np.int32(16), x_elems_5)
      mulx_7 = squot32(np.int32(16), y_elems_6)
      if ((num_arrays_4 == np.int32(1)) and ((x_elems_5 == np.int32(1)) or (y_elems_6 == np.int32(1)))):
        if (sext_i32_i64(((x_elems_5 * y_elems_6) * np.int32(4))) != 0):
          cl.enqueue_copy(self.queue, destmem_0, srcmem_2,
                          dest_offset=np.long(sext_i32_i64(destoffset_1)),
                          src_offset=np.long(sext_i32_i64(srcoffset_3)),
                          byte_count=np.long(sext_i32_i64(((x_elems_5 * y_elems_6) * np.int32(4)))))
        if synchronous:
          sync(self)
      else:
        if (sle32(x_elems_5, np.int32(8)) and slt32(np.int32(16), y_elems_6)):
          if ((((1 * (np.long(sdiv_up32(x_elems_5,
                                        np.int32(16))) * np.long(np.int32(16)))) * (np.long(sdiv_up32(sdiv_up32(y_elems_6,
                                                                                                                muly_8),
                                                                                                      np.int32(16))) * np.long(np.int32(16)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
            self.gpu_map_transpose_f32_low_width_var.set_args(cl.LocalMemory(np.long(np.int64(1088))),
                                                              np.int32(destoffset_1),
                                                              np.int32(srcoffset_3),
                                                              np.int32(num_arrays_4),
                                                              np.int32(x_elems_5),
                                                              np.int32(y_elems_6),
                                                              np.int32(mulx_7),
                                                              np.int32(muly_8),
                                                              destmem_0,
                                                              srcmem_2)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.gpu_map_transpose_f32_low_width_var,
                                       ((np.long(sdiv_up32(x_elems_5,
                                                           np.int32(16))) * np.long(np.int32(16))),
                                        (np.long(sdiv_up32(sdiv_up32(y_elems_6,
                                                                     muly_8),
                                                           np.int32(16))) * np.long(np.int32(16))),
                                        (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                       (np.long(np.int32(16)),
                                        np.long(np.int32(16)),
                                        np.long(np.int32(1))))
            if synchronous:
              sync(self)
        else:
          if (sle32(y_elems_6, np.int32(8)) and slt32(np.int32(16), x_elems_5)):
            if ((((1 * (np.long(sdiv_up32(sdiv_up32(x_elems_5, mulx_7),
                                          np.int32(16))) * np.long(np.int32(16)))) * (np.long(sdiv_up32(y_elems_6,
                                                                                                        np.int32(16))) * np.long(np.int32(16)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
              self.gpu_map_transpose_f32_low_height_var.set_args(cl.LocalMemory(np.long(np.int64(1088))),
                                                                 np.int32(destoffset_1),
                                                                 np.int32(srcoffset_3),
                                                                 np.int32(num_arrays_4),
                                                                 np.int32(x_elems_5),
                                                                 np.int32(y_elems_6),
                                                                 np.int32(mulx_7),
                                                                 np.int32(muly_8),
                                                                 destmem_0,
                                                                 srcmem_2)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.gpu_map_transpose_f32_low_height_var,
                                         ((np.long(sdiv_up32(sdiv_up32(x_elems_5,
                                                                       mulx_7),
                                                             np.int32(16))) * np.long(np.int32(16))),
                                          (np.long(sdiv_up32(y_elems_6,
                                                             np.int32(16))) * np.long(np.int32(16))),
                                          (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                         (np.long(np.int32(16)),
                                          np.long(np.int32(16)),
                                          np.long(np.int32(1))))
              if synchronous:
                sync(self)
          else:
            if (sle32(x_elems_5, np.int32(8)) and sle32(y_elems_6,
                                                        np.int32(8))):
              if ((1 * (np.long(sdiv_up32(((num_arrays_4 * x_elems_5) * y_elems_6),
                                          np.int32(256))) * np.long(np.int32(256)))) != 0):
                self.gpu_map_transpose_f32_small_var.set_args(cl.LocalMemory(np.long(np.int64(1))),
                                                              np.int32(destoffset_1),
                                                              np.int32(srcoffset_3),
                                                              np.int32(num_arrays_4),
                                                              np.int32(x_elems_5),
                                                              np.int32(y_elems_6),
                                                              np.int32(mulx_7),
                                                              np.int32(muly_8),
                                                              destmem_0,
                                                              srcmem_2)
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.gpu_map_transpose_f32_small_var,
                                           ((np.long(sdiv_up32(((num_arrays_4 * x_elems_5) * y_elems_6),
                                                               np.int32(256))) * np.long(np.int32(256))),),
                                           (np.long(np.int32(256)),))
                if synchronous:
                  sync(self)
            else:
              if ((((1 * (np.long(sdiv_up32(x_elems_5,
                                            np.int32(32))) * np.long(np.int32(32)))) * (np.long(sdiv_up32(y_elems_6,
                                                                                                          np.int32(32))) * np.long(np.int32(8)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
                self.gpu_map_transpose_f32_var.set_args(cl.LocalMemory(np.long(np.int64(4224))),
                                                        np.int32(destoffset_1),
                                                        np.int32(srcoffset_3),
                                                        np.int32(num_arrays_4),
                                                        np.int32(x_elems_5),
                                                        np.int32(y_elems_6),
                                                        np.int32(mulx_7),
                                                        np.int32(muly_8),
                                                        destmem_0, srcmem_2)
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.gpu_map_transpose_f32_var,
                                           ((np.long(sdiv_up32(x_elems_5,
                                                               np.int32(32))) * np.long(np.int32(32))),
                                            (np.long(sdiv_up32(y_elems_6,
                                                               np.int32(32))) * np.long(np.int32(8))),
                                            (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                           (np.long(np.int32(32)),
                                            np.long(np.int32(8)),
                                            np.long(np.int32(1))))
                if synchronous:
                  sync(self)
    return ()
  def futhark_builtinzhreplicate_f32(self, mem_44906, num_elems_44907,
                                     val_44908):
    group_sizze_44913 = self.sizes["builtin#replicate_f32.group_size_44913"]
    num_groups_44914 = sdiv_up64(num_elems_44907, group_sizze_44913)
    if ((1 * (np.long(num_groups_44914) * np.long(group_sizze_44913))) != 0):
      self.builtinzhreplicate_f32zireplicate_44910_var.set_args(mem_44906,
                                                                np.int32(num_elems_44907),
                                                                np.float32(val_44908))
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.builtinzhreplicate_f32zireplicate_44910_var,
                                 ((np.long(num_groups_44914) * np.long(group_sizze_44913)),),
                                 (np.long(group_sizze_44913),))
      if synchronous:
        sync(self)
    return ()
  def futhark_builtinzhreplicate_i32(self, mem_44915, num_elems_44916,
                                     val_44917):
    group_sizze_44922 = self.sizes["builtin#replicate_i32.group_size_44922"]
    num_groups_44923 = sdiv_up64(num_elems_44916, group_sizze_44922)
    if ((1 * (np.long(num_groups_44923) * np.long(group_sizze_44922))) != 0):
      self.builtinzhreplicate_i32zireplicate_44919_var.set_args(mem_44915,
                                                                np.int32(num_elems_44916),
                                                                np.int32(val_44917))
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.builtinzhreplicate_i32zireplicate_44919_var,
                                 ((np.long(num_groups_44923) * np.long(group_sizze_44922)),),
                                 (np.long(group_sizze_44922),))
      if synchronous:
        sync(self)
    return ()
  def futhark_main(self, mappingindices_mem_43122, images_mem_43123, N_29115,
                   m_29116, N_29117, trend_29118, k_29119, n_29120, freq_29121,
                   hfrac_29122, lam_29123):
    dim_match_29126 = (N_29115 == N_29117)
    empty_or_match_cert_29127 = True
    assert dim_match_29126, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:186:1-192:20\n" % ("function arguments of wrong shape",))
    i32_res_29129 = sext_i32_i64(n_29120)
    x_29130 = (np.int32(2) * k_29119)
    k2p2_29131 = (np.int32(2) + x_29130)
    cond_29132 = slt32(np.int32(0), trend_29118)
    if cond_29132:
      k2p2zq_29133 = k2p2_29131
    else:
      k2p2zq_f_res_29134 = (k2p2_29131 - np.int32(1))
      k2p2zq_29133 = k2p2zq_f_res_29134
    i32_res_29135 = sext_i32_i64(k2p2zq_29133)
    binop_x_43126 = (N_29115 * i32_res_29135)
    bytes_43125 = (np.int64(4) * binop_x_43126)
    if cond_29132:
      bounds_invalid_upwards_29137 = slt64(i32_res_29135, np.int64(0))
      valid_29138 = not(bounds_invalid_upwards_29137)
      range_valid_c_29139 = True
      assert valid_29138, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:37:10-20\n   #3  bfastfinal.fut:27:17-66\n   #4  bfastfinal.fut:191:5-58\n   #5  bfastfinal.fut:186:1-192:20\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_29135,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_37923 = self.sizes["main.segmap_group_size_37853"]
      segmap_usable_groups_37924 = sdiv_up64(binop_x_43126,
                                             segmap_group_sizze_37923)
      mem_43127 = opencl_alloc(self, bytes_43125, "mem_43127")
      if ((1 * (np.long(segmap_usable_groups_37924) * np.long(segmap_group_sizze_37923))) != 0):
        self.mainzisegmap_37850_var.set_args(self.global_failure,
                                             np.int64(N_29115),
                                             np.float32(freq_29121),
                                             np.int64(i32_res_29135),
                                             mappingindices_mem_43122,
                                             mem_43127)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37850_var,
                                   ((np.long(segmap_usable_groups_37924) * np.long(segmap_group_sizze_37923)),),
                                   (np.long(segmap_group_sizze_37923),))
        if synchronous:
          sync(self)
      binop_p_mem_43132 = mem_43127
    else:
      bounds_invalid_upwards_29163 = slt64(i32_res_29135, np.int64(0))
      valid_29164 = not(bounds_invalid_upwards_29163)
      range_valid_c_29165 = True
      assert valid_29164, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:49:10-22\n   #3  bfastfinal.fut:28:17-64\n   #4  bfastfinal.fut:191:5-58\n   #5  bfastfinal.fut:186:1-192:20\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_29135,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_38097 = self.sizes["main.segmap_group_size_38031"]
      segmap_usable_groups_38098 = sdiv_up64(binop_x_43126,
                                             segmap_group_sizze_38097)
      mem_43131 = opencl_alloc(self, bytes_43125, "mem_43131")
      if ((1 * (np.long(segmap_usable_groups_38098) * np.long(segmap_group_sizze_38097))) != 0):
        self.mainzisegmap_38028_var.set_args(self.global_failure,
                                             np.int64(N_29115),
                                             np.float32(freq_29121),
                                             np.int64(i32_res_29135),
                                             mappingindices_mem_43122,
                                             mem_43131)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38028_var,
                                   ((np.long(segmap_usable_groups_38098) * np.long(segmap_group_sizze_38097)),),
                                   (np.long(segmap_group_sizze_38097),))
        if synchronous:
          sync(self)
      binop_p_mem_43132 = mem_43131
    x_29188 = (N_29115 * N_29115)
    y_29189 = (np.int64(2) * N_29115)
    x_29190 = (x_29188 + y_29189)
    x_29191 = (np.int64(1) + x_29190)
    y_29192 = (np.int64(1) + N_29115)
    zzero_29193 = (y_29192 == np.int64(0))
    nonzzero_29194 = not(zzero_29193)
    nonzzero_cert_29195 = True
    assert nonzzero_29194, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:34:32-60\n   #1  bfastfinal.fut:191:5-58\n   #2  bfastfinal.fut:186:1-192:20\n" % ("division by zero",))
    x_29196 = sdiv64(x_29191, y_29192)
    x_29197 = (x_29196 - N_29115)
    binop_p_29198 = (x_29197 - np.int64(1))
    defunc_0_f_res_29199 = sext_i64_i32(binop_p_29198)
    i32_res_29200 = sitofp_i32_f32(defunc_0_f_res_29199)
    segmap_group_sizze_38180 = self.sizes["main.segmap_group_size_38159"]
    segmap_usable_groups_38181 = sdiv_up64(binop_x_43126,
                                           segmap_group_sizze_38180)
    mem_43135 = opencl_alloc(self, bytes_43125, "mem_43135")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_43135, np.int64(0),
                                                binop_p_mem_43132, np.int64(0),
                                                np.int64(1), N_29115,
                                                i32_res_29135)
    mem_43139 = opencl_alloc(self, bytes_43125, "mem_43139")
    if ((1 * (np.long(segmap_usable_groups_38181) * np.long(segmap_group_sizze_38180))) != 0):
      self.mainzisegmap_38156_var.set_args(self.global_failure,
                                           np.int64(N_29115),
                                           np.int64(i32_res_29135),
                                           np.float32(i32_res_29200), mem_43135,
                                           mem_43139)
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38156_var,
                                 ((np.long(segmap_usable_groups_38181) * np.long(segmap_group_sizze_38180)),),
                                 (np.long(segmap_group_sizze_38180),))
      if synchronous:
        sync(self)
    eq_x_y_29208 = (np.int64(0) == i32_res_29135)
    p_and_eq_x_y_29209 = (cond_29132 and eq_x_y_29208)
    not_p_29210 = not(cond_29132)
    p_and_eq_x_y_29211 = (eq_x_y_29208 and not_p_29210)
    empty_slice_29212 = (p_and_eq_x_y_29209 or p_and_eq_x_y_29211)
    m_29213 = (i32_res_29135 - np.int64(1))
    zzero_leq_i_p_m_t_s_29214 = sle64(np.int64(0), m_29213)
    i_p_m_t_s_leq_w_29215 = slt64(m_29213, i32_res_29135)
    i_lte_j_29216 = sle64(np.int64(0), i32_res_29135)
    y_29217 = (zzero_leq_i_p_m_t_s_29214 and i_p_m_t_s_leq_w_29215)
    y_29218 = (i_lte_j_29216 and y_29217)
    ok_or_empty_29219 = (empty_slice_29212 or y_29218)
    empty_slice_29220 = (i32_res_29129 == np.int64(0))
    m_29221 = (i32_res_29129 - np.int64(1))
    zzero_leq_i_p_m_t_s_29222 = sle64(np.int64(0), m_29221)
    i_p_m_t_s_leq_w_29223 = slt64(m_29221, N_29115)
    i_lte_j_29224 = sle64(np.int64(0), i32_res_29129)
    y_29225 = (zzero_leq_i_p_m_t_s_29222 and i_p_m_t_s_leq_w_29223)
    y_29226 = (i_lte_j_29224 and y_29225)
    ok_or_empty_29227 = (empty_slice_29220 or y_29226)
    index_ok_29228 = (ok_or_empty_29219 and ok_or_empty_29227)
    index_certs_29229 = True
    assert index_ok_29228, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:37:15-23\n   #1  bfastfinal.fut:191:5-58\n   #2  bfastfinal.fut:186:1-192:20\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_29129,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               i32_res_29135,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_29115,
                                                                                                                                                                               "]."))
    empty_slice_29231 = (i32_res_29135 == np.int64(0))
    ok_or_empty_29232 = (y_29218 or empty_slice_29231)
    index_ok_29233 = (ok_or_empty_29227 and ok_or_empty_29232)
    index_certs_29234 = True
    assert index_ok_29233, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:38:15-24\n   #1  bfastfinal.fut:191:5-58\n   #2  bfastfinal.fut:186:1-192:20\n" % ("Index [:",
                                                                                                                                                                               i32_res_29129,
                                                                                                                                                                               ", ",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":] out of bounds for array of shape [",
                                                                                                                                                                               N_29115,
                                                                                                                                                                               "][",
                                                                                                                                                                               i32_res_29135,
                                                                                                                                                                               "]."))
    empty_slice_29236 = (m_29116 == np.int64(0))
    m_29237 = (m_29116 - np.int64(1))
    zzero_leq_i_p_m_t_s_29238 = sle64(np.int64(0), m_29237)
    i_p_m_t_s_leq_w_29239 = slt64(m_29237, m_29116)
    i_lte_j_29240 = sle64(np.int64(0), m_29116)
    y_29241 = (zzero_leq_i_p_m_t_s_29238 and i_p_m_t_s_leq_w_29239)
    y_29242 = (i_lte_j_29240 and y_29241)
    ok_or_empty_29243 = (empty_slice_29236 or y_29242)
    index_ok_29244 = (ok_or_empty_29227 and ok_or_empty_29243)
    index_certs_29245 = True
    assert index_ok_29244, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:39:15-28\n   #1  bfastfinal.fut:191:5-58\n   #2  bfastfinal.fut:186:1-192:20\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_29129,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               m_29116,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_29115,
                                                                                                                                                                               "]."))
    suff_outer_par_38187 = (self.sizes["main.suff_outer_par_6"] <= m_29116)
    segmap_group_sizze_38213 = self.sizes["main.segmap_group_size_38191"]
    max_num_groups_44365 = self.sizes["main.segmap_num_groups_38193"]
    num_groups_38214 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_29116,
                                                            segmap_group_sizze_38213),
                                                  sext_i32_i64(max_num_groups_44365))))
    nest_sizze_38389 = (m_29116 * i32_res_29135)
    segmap_group_sizze_38390 = self.sizes["main.segmap_group_size_38238"]
    max_num_groups_44366 = self.sizes["main.segmap_num_groups_38240"]
    num_groups_38391 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_38389,
                                                            segmap_group_sizze_38390),
                                                  sext_i32_i64(max_num_groups_44366))))
    suff_outer_par_38395 = (self.sizes["main.suff_outer_par_7"] <= nest_sizze_38389)
    y_38419 = (i32_res_29135 * i32_res_29135)
    comparatee_38420 = (m_29116 * y_38419)
    suff_outer_par_38421 = (self.sizes["main.suff_outer_par_8"] <= comparatee_38420)
    nest_sizze_38441 = (i32_res_29129 * comparatee_38420)
    segred_group_sizze_38442 = self.sizes["main.segred_group_size_38298"]
    max_num_groups_44367 = self.sizes["main.segred_num_groups_38300"]
    num_groups_38443 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_38441,
                                                            segred_group_sizze_38442),
                                                  sext_i32_i64(max_num_groups_44367))))
    Tx_41280 = self.sizes["main.Tx_41278"]
    Ty_41281 = self.sizes["main.Ty_41279"]
    Ty_41282 = smin64(i32_res_29135, Ty_41281)
    Tx_41283 = smin64(i32_res_29135, Tx_41280)
    gridDim_zz_41286 = sdiv_up64(m_29116, np.int64(30))
    group_sizze_41289 = (Ty_41282 * Tx_41283)
    binop_x_43141 = (m_29116 * N_29117)
    bytes_43140 = (np.int64(4) * binop_x_43141)
    bytes_43185 = (np.int64(4) * comparatee_38420)
    bytes_43144 = (np.int64(4) * y_38419)
    binop_x_43288 = (i32_res_29135 * nest_sizze_38389)
    bytes_43286 = (np.int64(4) * binop_x_43288)
    bytes_43190 = (np.int64(4) * i32_res_29135)
    binop_x_43219 = (np.int64(30) * group_sizze_41289)
    bytes_43217 = (np.int64(4) * binop_x_43219)
    binop_x_44121 = (np.int64(4) * Ty_41282)
    binop_x_44122 = (Tx_41283 * binop_x_44121)
    sizze_44123 = (np.int64(30) * binop_x_44122)
    num_threads_44303 = (segmap_group_sizze_38213 * num_groups_38214)
    total_sizze_44304 = (bytes_43144 * num_threads_44303)
    num_threads_44305 = (segmap_group_sizze_38390 * num_groups_38391)
    total_sizze_44306 = (bytes_43190 * num_threads_44305)
    local_memory_capacity_44489 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44489)) and suff_outer_par_38187):
      mem_43142 = opencl_alloc(self, bytes_43140, "mem_43142")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43142, np.int64(0),
                                                  images_mem_43123, np.int64(0),
                                                  np.int64(1), N_29117, m_29116)
      mem_43188 = opencl_alloc(self, bytes_43185, "mem_43188")
      mem_43146 = opencl_alloc(self, total_sizze_44304, "mem_43146")
      if ((1 * (np.long(num_groups_38214) * np.long(segmap_group_sizze_38213))) != 0):
        self.mainzisegmap_38189_var.set_args(self.global_failure,
                                             np.int64(N_29115),
                                             np.int64(m_29116),
                                             np.int32(n_29120),
                                             np.int32(k2p2zq_29133),
                                             np.int64(i32_res_29135),
                                             np.int64(num_groups_38214),
                                             binop_p_mem_43132, mem_43139,
                                             mem_43142, mem_43146, mem_43188)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38189_var,
                                   ((np.long(num_groups_38214) * np.long(segmap_group_sizze_38213)),),
                                   (np.long(segmap_group_sizze_38213),))
        if synchronous:
          sync(self)
      mem_43142 = None
      mem_43146 = None
      mem_43289 = opencl_alloc(self, bytes_43286, "mem_43289")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43289, np.int64(0),
                                                  mem_43188, np.int64(0),
                                                  np.int64(1), m_29116,
                                                  (i32_res_29135 * i32_res_29135))
      mem_43188 = None
      defunc_3_map_res_mem_43291 = mem_43289
    else:
      local_memory_capacity_44488 = self.max_local_memory
      if (sle64(np.int64(0),
                sext_i32_i64(local_memory_capacity_44488)) and suff_outer_par_38395):
        mem_43207 = opencl_alloc(self, bytes_43286, "mem_43207")
        mem_43191 = opencl_alloc(self, total_sizze_44306, "mem_43191")
        if ((1 * (np.long(num_groups_38391) * np.long(segmap_group_sizze_38390))) != 0):
          self.mainzisegmap_38235_var.set_args(self.global_failure,
                                               np.int64(m_29116),
                                               np.int64(N_29117),
                                               np.int32(n_29120),
                                               np.int32(k2p2zq_29133),
                                               np.int64(i32_res_29135),
                                               np.int64(num_groups_38391),
                                               images_mem_43123, mem_43135,
                                               mem_43139, mem_43191, mem_43207)
          cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38235_var,
                                     ((np.long(num_groups_38391) * np.long(segmap_group_sizze_38390)),),
                                     (np.long(segmap_group_sizze_38390),))
          if synchronous:
            sync(self)
        mem_43191 = None
        mem_43283 = opencl_alloc(self, bytes_43286, "mem_43283")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43283, np.int64(0),
                                                    mem_43207, np.int64(0),
                                                    np.int64(1),
                                                    (m_29116 * i32_res_29135),
                                                    i32_res_29135)
        mem_43207 = None
        defunc_3_map_res_mem_43285 = mem_43283
      else:
        local_memory_capacity_44487 = self.max_local_memory
        if (sle64(np.int64(120),
                  sext_i32_i64(local_memory_capacity_44487)) and suff_outer_par_38421):
          mem_43210 = opencl_alloc(self, bytes_43140, "mem_43210")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_43210, np.int64(0),
                                                      images_mem_43123,
                                                      np.int64(0), np.int64(1),
                                                      N_29117, m_29116)
          gridDim_x_41284 = sdiv_up64(i32_res_29135, Tx_41283)
          gridDim_y_41285 = sdiv_up64(i32_res_29135, Ty_41282)
          binop_x_41287 = (gridDim_y_41285 * gridDim_zz_41286)
          grid_sizze_41288 = (gridDim_x_41284 * binop_x_41287)
          count_shmem_41290 = sdiv_up64(np.int64(30), group_sizze_41289)
          mem_43270 = opencl_alloc(self, bytes_43286, "mem_43270")
          if ((1 * (np.long(grid_sizze_41288) * np.long(group_sizze_41289))) != 0):
            self.mainzisegmap_intragroup_41294_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(np.int64(120))),
                                                            np.int64(m_29116),
                                                            np.int32(n_29120),
                                                            np.int64(i32_res_29135),
                                                            np.int64(Ty_41282),
                                                            np.int64(Tx_41283),
                                                            np.int64(gridDim_x_41284),
                                                            np.int64(gridDim_y_41285),
                                                            np.int64(group_sizze_41289),
                                                            np.int64(count_shmem_41290),
                                                            mem_43135,
                                                            mem_43139,
                                                            mem_43210,
                                                            mem_43270)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegmap_intragroup_41294_var,
                                       ((np.long(grid_sizze_41288) * np.long(group_sizze_41289)),),
                                       (np.long(group_sizze_41289),))
            if synchronous:
              sync(self)
          mem_43210 = None
          defunc_3_map_res_mem_43279 = mem_43270
        else:
          mem_43273 = opencl_alloc(self, bytes_43125, "mem_43273")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_43273, np.int64(0),
                                                      mem_43139, np.int64(0),
                                                      np.int64(1),
                                                      i32_res_29135, N_29115)
          mem_43278 = opencl_alloc(self, bytes_43286, "mem_43278")
          if slt64((i32_res_29129 * np.int64(2)), segred_group_sizze_38442):
            segment_sizze_nonzzero_44427 = smax64(np.int64(1), i32_res_29129)
            num_threads_44428 = (num_groups_38443 * segred_group_sizze_38442)
            if ((1 * (np.long(num_groups_38443) * np.long(segred_group_sizze_38442))) != 0):
              self.mainzisegred_small_38304_var.set_args(self.global_failure,
                                                         cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38442))),
                                                         np.int64(N_29115),
                                                         np.int64(m_29116),
                                                         np.int64(N_29117),
                                                         np.int64(i32_res_29129),
                                                         np.int64(i32_res_29135),
                                                         np.int64(num_groups_38443),
                                                         images_mem_43123,
                                                         binop_p_mem_43132,
                                                         mem_43273, mem_43278,
                                                         np.int64(segment_sizze_nonzzero_44427))
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainzisegred_small_38304_var,
                                         ((np.long(num_groups_38443) * np.long(segred_group_sizze_38442)),),
                                         (np.long(segred_group_sizze_38442),))
              if synchronous:
                sync(self)
          else:
            groups_per_segment_44448 = sdiv_up64(num_groups_38443,
                                                 smax64(np.int64(1),
                                                        ((m_29116 * i32_res_29135) * i32_res_29135)))
            elements_per_thread_44449 = sdiv_up64(i32_res_29129,
                                                  (segred_group_sizze_38442 * groups_per_segment_44448))
            virt_num_groups_44450 = (groups_per_segment_44448 * ((m_29116 * i32_res_29135) * i32_res_29135))
            num_threads_44451 = (num_groups_38443 * segred_group_sizze_38442)
            threads_per_segment_44452 = (groups_per_segment_44448 * segred_group_sizze_38442)
            group_res_arr_mem_44453 = opencl_alloc(self,
                                                   (np.int32(4) * (segred_group_sizze_38442 * virt_num_groups_44450)),
                                                   "group_res_arr_mem_44453")
            mainzicounter_mem_44455 = self.mainzicounter_mem_44455
            if ((1 * (np.long(num_groups_38443) * np.long(segred_group_sizze_38442))) != 0):
              self.mainzisegred_large_38304_var.set_args(self.global_failure,
                                                         cl.LocalMemory(np.long(np.int32(1))),
                                                         cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38442))),
                                                         np.int64(N_29115),
                                                         np.int64(N_29117),
                                                         np.int64(i32_res_29129),
                                                         np.int64(i32_res_29135),
                                                         np.int64(num_groups_38443),
                                                         images_mem_43123,
                                                         binop_p_mem_43132,
                                                         mem_43273, mem_43278,
                                                         np.int64(groups_per_segment_44448),
                                                         np.int64(elements_per_thread_44449),
                                                         np.int64(virt_num_groups_44450),
                                                         np.int64(threads_per_segment_44452),
                                                         group_res_arr_mem_44453,
                                                         mainzicounter_mem_44455)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainzisegred_large_38304_var,
                                         ((np.long(num_groups_38443) * np.long(segred_group_sizze_38442)),),
                                         (np.long(segred_group_sizze_38442),))
              if synchronous:
                sync(self)
          mem_43273 = None
          defunc_3_map_res_mem_43279 = mem_43278
        defunc_3_map_res_mem_43285 = defunc_3_map_res_mem_43279
      defunc_3_map_res_mem_43291 = defunc_3_map_res_mem_43285
    m_29266 = (np.int32(2) * k2p2zq_29133)
    nm_29267 = (k2p2zq_29133 * m_29266)
    i32_res_29268 = sext_i32_i64(nm_29267)
    bounds_invalid_upwards_29269 = slt64(i32_res_29268, np.int64(0))
    valid_29270 = not(bounds_invalid_upwards_29269)
    range_valid_c_29271 = True
    assert valid_29270, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:78:34-50\n   #2  bfastfinal.fut:49:35-50\n   #3  bfastfinal.fut:191:5-58\n   #4  bfastfinal.fut:186:1-192:20\n" % ("Range ",
                                                                                                                                                                                                                                        np.int64(0),
                                                                                                                                                                                                                                        "..",
                                                                                                                                                                                                                                        np.int64(1),
                                                                                                                                                                                                                                        "..<",
                                                                                                                                                                                                                                        i32_res_29268,
                                                                                                                                                                                                                                        " is invalid."))
    zzero_29276 = (m_29266 == np.int32(0))
    nonzzero_29277 = not(zzero_29276)
    nonzzero_cert_29278 = True
    assert nonzzero_29277, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:73:41-47\n   #1  helpers.fut:73:14-78:52\n   #2  bfastfinal.fut:49:35-50\n   #3  bfastfinal.fut:191:5-58\n   #4  bfastfinal.fut:186:1-192:20\n" % ("division by zero",))
    loop_nonempty_29279 = slt32(np.int32(0), k2p2zq_29133)
    loop_not_taken_29280 = not(loop_nonempty_29279)
    protect_assert_disj_29281 = (nonzzero_29277 or loop_not_taken_29280)
    nonzzero_cert_29282 = True
    assert protect_assert_disj_29281, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:59:43-49\n   #1  helpers.fut:59:16-65:44\n   #2  helpers.fut:79:15-33\n   #3  bfastfinal.fut:49:35-50\n   #4  bfastfinal.fut:191:5-58\n   #5  bfastfinal.fut:186:1-192:20\n" % ("division by zero",))
    i32_res_29283 = sext_i32_i64(m_29266)
    x_29284 = (i32_res_29135 * i32_res_29283)
    dim_ok_29285 = (x_29284 == i32_res_29268)
    dim_ok_cert_29286 = True
    assert dim_ok_29285, ("Error: %s\n\nBacktrace:\n-> #0  /prelude/array.fut:95:3-33\n   #1  helpers.fut:81:9-45\n   #2  bfastfinal.fut:49:35-50\n   #3  bfastfinal.fut:191:5-58\n   #4  bfastfinal.fut:186:1-192:20\n" % ("new shape has different number of elements than old shape",))
    j_m_i_29287 = (i32_res_29283 - i32_res_29135)
    empty_slice_29288 = (j_m_i_29287 == np.int64(0))
    m_29289 = (j_m_i_29287 - np.int64(1))
    i_p_m_t_s_29290 = (i32_res_29135 + m_29289)
    zzero_leq_i_p_m_t_s_29291 = sle64(np.int64(0), i_p_m_t_s_29290)
    i_p_m_t_s_leq_w_29292 = slt64(i_p_m_t_s_29290, i32_res_29283)
    i_lte_j_29293 = sle64(i32_res_29135, i32_res_29283)
    y_29294 = (i_lte_j_29216 and i_p_m_t_s_leq_w_29292)
    y_29295 = (zzero_leq_i_p_m_t_s_29291 and y_29294)
    y_29296 = (i_lte_j_29293 and y_29295)
    forwards_ok_29297 = (i_lte_j_29216 and y_29296)
    ok_or_empty_29298 = (empty_slice_29288 or forwards_ok_29297)
    index_ok_29299 = (ok_or_empty_29232 and ok_or_empty_29298)
    index_certs_29300 = True
    assert index_ok_29299, ("Error: %s%d%s%d%s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-88\n   #1  bfastfinal.fut:49:35-50\n   #2  bfastfinal.fut:191:5-58\n   #3  bfastfinal.fut:186:1-192:20\n" % ("Index [",
                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_29135,
                                                                                                                                                                                                                   ", ",
                                                                                                                                                                                                                   i32_res_29135,
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_29283,
                                                                                                                                                                                                                   "] out of bounds for array of shape [",
                                                                                                                                                                                                                   i32_res_29135,
                                                                                                                                                                                                                   "][",
                                                                                                                                                                                                                   i32_res_29283,
                                                                                                                                                                                                                   "]."))
    dim_match_29301 = (i32_res_29135 == j_m_i_29287)
    empty_or_match_cert_29302 = True
    assert dim_match_29301, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-103\n   #1  bfastfinal.fut:49:35-50\n   #2  bfastfinal.fut:191:5-58\n   #3  bfastfinal.fut:186:1-192:20\n" % ("Value of (core language) shape (",
                                                                                                                                                                                                             i32_res_29135,
                                                                                                                                                                                                             ", ",
                                                                                                                                                                                                             j_m_i_29287,
                                                                                                                                                                                                             ") cannot match shape of type `[",
                                                                                                                                                                                                             i32_res_29135,
                                                                                                                                                                                                             "][",
                                                                                                                                                                                                             i32_res_29135,
                                                                                                                                                                                                             "]f32`."))
    max_group_sizze_38657 = self.max_group_size
    fits_38658 = sle64(i32_res_29268, max_group_sizze_38657)
    suff_intra_par_38656 = (self.sizes["main.suff_intra_par_11"] <= i32_res_29268)
    intra_suff_and_fits_38659 = (suff_intra_par_38656 and fits_38658)
    nest_sizze_39143 = (m_29116 * i32_res_29268)
    segmap_group_sizze_39144 = self.sizes["main.segmap_group_size_39103"]
    suff_intra_par_39171 = (self.sizes["main.suff_intra_par_13"] <= i32_res_29268)
    intra_suff_and_fits_39172 = (fits_38658 and suff_intra_par_39171)
    segmap_group_sizze_39208 = self.sizes["main.segmap_group_size_39009"]
    segmap_group_sizze_39224 = self.sizes["main.segmap_group_size_38942"]
    segmap_group_sizze_39258 = self.sizes["main.segmap_group_size_38888"]
    y_39268 = (i32_res_29135 * j_m_i_29287)
    nest_sizze_39269 = (m_29116 * y_39268)
    segmap_group_sizze_39270 = self.sizes["main.segmap_group_size_38723"]
    segmap_usable_groups_39209 = sdiv_up_safe64(m_29116,
                                                segmap_group_sizze_39208)
    segmap_usable_groups_39225 = sdiv_up_safe64(nest_sizze_39143,
                                                segmap_group_sizze_39224)
    segmap_usable_groups_39259 = sdiv_up_safe64(nest_sizze_39143,
                                                segmap_group_sizze_39258)
    bytes_43294 = (np.int64(4) * i32_res_29268)
    bytes_43317 = (np.int64(4) * nest_sizze_39143)
    binop_x_43368 = (j_m_i_29287 * nest_sizze_38389)
    bytes_43366 = (np.int64(4) * binop_x_43368)
    local_memory_capacity_44552 = self.max_local_memory
    if (sle64((bytes_43294 + bytes_43294),
              sext_i32_i64(local_memory_capacity_44552)) and intra_suff_and_fits_38659):
      mem_43315 = opencl_alloc(self, bytes_43286, "mem_43315")
      if ((1 * (np.long(m_29116) * np.long(i32_res_29268))) != 0):
        self.mainzisegmap_intragroup_38539_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_43294)),
                                                        cl.LocalMemory(np.long(bytes_43294)),
                                                        np.int32(k2p2zq_29133),
                                                        np.int64(i32_res_29135),
                                                        np.int32(m_29266),
                                                        np.int64(i32_res_29268),
                                                        np.int64(i32_res_29283),
                                                        defunc_3_map_res_mem_43291,
                                                        mem_43315)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_38539_var,
                                   ((np.long(m_29116) * np.long(i32_res_29268)),),
                                   (np.long(i32_res_29268),))
        if synchronous:
          sync(self)
      defunc_3_map_res_mem_43370 = mem_43315
    else:
      segmap_usable_groups_39145 = sdiv_up64(nest_sizze_39143,
                                             segmap_group_sizze_39144)
      mem_43319 = opencl_alloc(self, bytes_43317, "mem_43319")
      if ((1 * (np.long(segmap_usable_groups_39145) * np.long(segmap_group_sizze_39144))) != 0):
        self.mainzisegmap_39100_var.set_args(self.global_failure,
                                             np.int64(m_29116),
                                             np.int32(k2p2zq_29133),
                                             np.int64(i32_res_29135),
                                             np.int32(m_29266),
                                             np.int64(i32_res_29268),
                                             defunc_3_map_res_mem_43291,
                                             mem_43319)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39100_var,
                                   ((np.long(segmap_usable_groups_39145) * np.long(segmap_group_sizze_39144)),),
                                   (np.long(segmap_group_sizze_39144),))
        if synchronous:
          sync(self)
      ctx_param_ext_43320 = m_29116
      ctx_param_ext_43321 = i32_res_29268
      ctx_param_ext_43322 = np.int64(0)
      ctx_param_ext_43323 = i32_res_29268
      ctx_param_ext_43324 = m_29116
      ctx_param_ext_43325 = np.int64(1)
      ctx_param_ext_43326 = i32_res_29268
      mem_param_43327 = mem_43319
      i_39161 = np.int32(0)
      one_45524 = np.int32(1)
      for counter_45523 in range(k2p2zq_29133):
        i32_res_39163 = sext_i32_i64(i_39161)
        local_memory_capacity_44512 = self.max_local_memory
        if intra_suff_and_fits_39172:
          gauss_jordan_res_ixfn_43349 = m_29116
        else:
          gauss_jordan_res_ixfn_43349 = ctx_param_ext_43324
        local_memory_capacity_44513 = self.max_local_memory
        if intra_suff_and_fits_39172:
          gauss_jordan_res_ixfn_43350 = i32_res_29268
        else:
          gauss_jordan_res_ixfn_43350 = ctx_param_ext_43326
        local_memory_capacity_44514 = self.max_local_memory
        if intra_suff_and_fits_39172:
          gauss_jordan_res_ixfn_43351 = m_29116
        else:
          gauss_jordan_res_ixfn_43351 = ctx_param_ext_43320
        local_memory_capacity_44515 = self.max_local_memory
        if intra_suff_and_fits_39172:
          gauss_jordan_res_ixfn_43352 = i32_res_29268
        else:
          gauss_jordan_res_ixfn_43352 = ctx_param_ext_43321
        local_memory_capacity_44516 = self.max_local_memory
        if intra_suff_and_fits_39172:
          gauss_jordan_res_ixfn_43353 = i32_res_29268
        else:
          gauss_jordan_res_ixfn_43353 = ctx_param_ext_43323
        local_memory_capacity_44517 = self.max_local_memory
        if intra_suff_and_fits_39172:
          gauss_jordan_res_ixfn_43354 = np.int64(1)
        else:
          gauss_jordan_res_ixfn_43354 = ctx_param_ext_43325
        local_memory_capacity_44518 = self.max_local_memory
        if intra_suff_and_fits_39172:
          gauss_jordan_res_ixfn_43355 = np.int64(0)
        else:
          gauss_jordan_res_ixfn_43355 = ctx_param_ext_43322
        local_memory_capacity_44546 = self.max_local_memory
        if ((sle64(np.int64(0),
                   sext_i32_i64(local_memory_capacity_44546)) and sle64(bytes_43294,
                                                                        sext_i32_i64(local_memory_capacity_44546))) and intra_suff_and_fits_39172):
          mem_43332 = opencl_alloc(self, bytes_43317, "mem_43332")
          group_sizze_44522 = self.sizes["main.group_size_44522"]
          num_groups_44523 = sdiv_up64((m_29116 * i32_res_29268),
                                       group_sizze_44522)
          if ((1 * (np.long(num_groups_44523) * np.long(group_sizze_44522))) != 0):
            self.mainzicopy_44519_var.set_args(np.int64(m_29116),
                                               np.int64(i32_res_29268),
                                               np.int64(ctx_param_ext_43322),
                                               np.int64(ctx_param_ext_43323),
                                               np.int64(ctx_param_ext_43325),
                                               mem_param_43327, mem_43332)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzicopy_44519_var,
                                       ((np.long(num_groups_44523) * np.long(group_sizze_44522)),),
                                       (np.long(group_sizze_44522),))
            if synchronous:
              sync(self)
          mem_43340 = opencl_alloc(self, bytes_43317, "mem_43340")
          if ((1 * (np.long(m_29116) * np.long(i32_res_29268))) != 0):
            self.mainzisegmap_intragroup_38766_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(bytes_43294)),
                                                            np.int64(m_29116),
                                                            np.int32(k2p2zq_29133),
                                                            np.int32(m_29266),
                                                            np.int64(i32_res_29268),
                                                            np.int32(i_39161),
                                                            np.int64(i32_res_39163),
                                                            np.int64(ctx_param_ext_43322),
                                                            np.int64(ctx_param_ext_43323),
                                                            np.int64(ctx_param_ext_43325),
                                                            mem_param_43327,
                                                            mem_43332,
                                                            mem_43340)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegmap_intragroup_38766_var,
                                       ((np.long(m_29116) * np.long(i32_res_29268)),),
                                       (np.long(i32_res_29268),))
            if synchronous:
              sync(self)
          mem_43332 = None
          gauss_jordan_res_mem_43356 = mem_43340
        else:
          mem_43343 = opencl_alloc(self, m_29116, "mem_43343")
          if ((1 * (np.long(segmap_usable_groups_39209) * np.long(segmap_group_sizze_39208))) != 0):
            self.mainzisegmap_39007_var.set_args(self.global_failure,
                                                 np.int64(m_29116),
                                                 np.int64(i32_res_39163),
                                                 np.int64(ctx_param_ext_43322),
                                                 np.int64(ctx_param_ext_43323),
                                                 np.int64(ctx_param_ext_43325),
                                                 mem_param_43327, mem_43343)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39007_var,
                                       ((np.long(segmap_usable_groups_39209) * np.long(segmap_group_sizze_39208)),),
                                       (np.long(segmap_group_sizze_39208),))
            if synchronous:
              sync(self)
          mem_43347 = opencl_alloc(self, bytes_43317, "mem_43347")
          if ((1 * (np.long(segmap_usable_groups_39225) * np.long(segmap_group_sizze_39224))) != 0):
            self.mainzisegmap_38939_var.set_args(self.global_failure,
                                                 np.int64(m_29116),
                                                 np.int32(k2p2zq_29133),
                                                 np.int32(m_29266),
                                                 np.int64(i32_res_29268),
                                                 np.int32(i_39161),
                                                 np.int64(i32_res_39163),
                                                 np.int64(ctx_param_ext_43322),
                                                 np.int64(ctx_param_ext_43323),
                                                 np.int64(ctx_param_ext_43325),
                                                 mem_param_43327, mem_43343,
                                                 mem_43347)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38939_var,
                                       ((np.long(segmap_usable_groups_39225) * np.long(segmap_group_sizze_39224)),),
                                       (np.long(segmap_group_sizze_39224),))
            if synchronous:
              sync(self)
          mem_43343 = None
          if ((1 * (np.long(segmap_usable_groups_39259) * np.long(segmap_group_sizze_39258))) != 0):
            self.mainzisegmap_38885_var.set_args(self.global_failure,
                                                 np.int64(m_29116),
                                                 np.int64(i32_res_29268),
                                                 np.int64(ctx_param_ext_43322),
                                                 np.int64(ctx_param_ext_43323),
                                                 np.int64(ctx_param_ext_43325),
                                                 mem_param_43327, mem_43347)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38885_var,
                                       ((np.long(segmap_usable_groups_39259) * np.long(segmap_group_sizze_39258)),),
                                       (np.long(segmap_group_sizze_39258),))
            if synchronous:
              sync(self)
          mem_43347 = None
          gauss_jordan_res_mem_43356 = mem_param_43327
        ctx_param_ext_tmp_44503 = gauss_jordan_res_ixfn_43351
        ctx_param_ext_tmp_44504 = gauss_jordan_res_ixfn_43352
        ctx_param_ext_tmp_44505 = gauss_jordan_res_ixfn_43355
        ctx_param_ext_tmp_44506 = gauss_jordan_res_ixfn_43353
        ctx_param_ext_tmp_44507 = gauss_jordan_res_ixfn_43349
        ctx_param_ext_tmp_44508 = gauss_jordan_res_ixfn_43354
        ctx_param_ext_tmp_44509 = gauss_jordan_res_ixfn_43350
        mem_param_tmp_44510 = gauss_jordan_res_mem_43356
        ctx_param_ext_43320 = ctx_param_ext_tmp_44503
        ctx_param_ext_43321 = ctx_param_ext_tmp_44504
        ctx_param_ext_43322 = ctx_param_ext_tmp_44505
        ctx_param_ext_43323 = ctx_param_ext_tmp_44506
        ctx_param_ext_43324 = ctx_param_ext_tmp_44507
        ctx_param_ext_43325 = ctx_param_ext_tmp_44508
        ctx_param_ext_43326 = ctx_param_ext_tmp_44509
        mem_param_43327 = mem_param_tmp_44510
        i_39161 += one_45524
      gauss_jordan_res_r_ixfn_43357 = ctx_param_ext_43320
      gauss_jordan_res_r_ixfn_43358 = ctx_param_ext_43321
      gauss_jordan_res_r_ixfn_43359 = ctx_param_ext_43322
      gauss_jordan_res_r_ixfn_43360 = ctx_param_ext_43323
      gauss_jordan_res_r_ixfn_43361 = ctx_param_ext_43324
      gauss_jordan_res_r_ixfn_43362 = ctx_param_ext_43325
      gauss_jordan_res_r_ixfn_43363 = ctx_param_ext_43326
      gauss_jordan_res_r_mem_43364 = mem_param_43327
      mem_43319 = None
      segmap_usable_groups_39271 = sdiv_up64(nest_sizze_39269,
                                             segmap_group_sizze_39270)
      mem_43369 = opencl_alloc(self, bytes_43366, "mem_43369")
      if ((1 * (np.long(segmap_usable_groups_39271) * np.long(segmap_group_sizze_39270))) != 0):
        self.mainzisegmap_38719_var.set_args(self.global_failure,
                                             np.int64(m_29116),
                                             np.int64(i32_res_29135),
                                             np.int64(i32_res_29268),
                                             np.int64(i32_res_29283),
                                             np.int64(x_29284),
                                             np.int64(j_m_i_29287),
                                             np.int64(gauss_jordan_res_r_ixfn_43359),
                                             np.int64(gauss_jordan_res_r_ixfn_43360),
                                             np.int64(gauss_jordan_res_r_ixfn_43362),
                                             gauss_jordan_res_r_mem_43364,
                                             mem_43369)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38719_var,
                                   ((np.long(segmap_usable_groups_39271) * np.long(segmap_group_sizze_39270)),),
                                   (np.long(segmap_group_sizze_39270),))
        if synchronous:
          sync(self)
      gauss_jordan_res_r_mem_43364 = None
      defunc_3_map_res_mem_43370 = mem_43369
    defunc_3_map_res_mem_43291 = None
    suff_outer_par_39279 = (self.sizes["main.suff_outer_par_16"] <= m_29116)
    segmap_group_sizze_39301 = self.sizes["main.segmap_group_size_39283"]
    max_num_groups_44553 = self.sizes["main.segmap_num_groups_39285"]
    num_groups_39302 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_29116,
                                                            segmap_group_sizze_39301),
                                                  sext_i32_i64(max_num_groups_44553))))
    suff_outer_par_39386 = (self.sizes["main.suff_outer_par_17"] <= nest_sizze_38389)
    nest_sizze_39402 = (i32_res_29129 * nest_sizze_38389)
    segred_group_sizze_39403 = self.sizes["main.segred_group_size_39345"]
    max_num_groups_44554 = self.sizes["main.segred_num_groups_39347"]
    num_groups_39404 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_39402,
                                                            segred_group_sizze_39403),
                                                  sext_i32_i64(max_num_groups_44554))))
    Ty_41428 = self.sizes["main.Ty_41425"]
    Ry_41429 = self.sizes["main.Ry_41427"]
    Tx_41430 = self.sizes["main.Tx_41424"]
    Rx_41431 = self.sizes["main.Rx_41426"]
    Tk_41432 = self.sizes["main.Tk_41423"]
    TxRx_41435 = (Tx_41430 * Rx_41431)
    TyRy_41436 = (Ty_41428 * Ry_41429)
    a_loc_szz_41438 = (Tk_41432 * TyRy_41436)
    binop_x_41439 = (Tx_41430 * Tk_41432)
    b_loc_szz_41440 = (Rx_41431 * binop_x_41439)
    group_sizze_41444 = (Ty_41428 * Tx_41430)
    bytes_43389 = (np.int64(4) * nest_sizze_38389)
    binop_x_43403 = (Ry_41429 * group_sizze_41444)
    binop_x_43404 = (Rx_41431 * binop_x_43403)
    bytes_43401 = (np.int64(4) * binop_x_43404)
    binop_x_43395 = (Ry_41429 * Rx_41431)
    bytes_43394 = (np.int64(4) * binop_x_43395)
    bytes_43406 = (np.int64(4) * a_loc_szz_41438)
    bytes_43408 = (np.int64(4) * b_loc_szz_41440)
    bytes_43477 = (np.int64(4) * binop_x_43403)
    binop_x_43483 = (Rx_41431 * group_sizze_41444)
    bytes_43481 = (np.int64(4) * binop_x_43483)
    bytes_43469 = (np.int64(4) * Ry_41429)
    bytes_43471 = (np.int64(4) * Rx_41431)
    binop_x_44138 = (np.int64(4) * Ty_41428)
    binop_x_44139 = (Tx_41430 * binop_x_44138)
    binop_x_44140 = (Ry_41429 * binop_x_44139)
    sizze_44141 = (Rx_41431 * binop_x_44140)
    num_threads_44316 = (segmap_group_sizze_39301 * num_groups_39302)
    total_sizze_44317 = (bytes_43190 * num_threads_44316)
    local_memory_capacity_44684 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44684)) and suff_outer_par_39279):
      mem_43373 = opencl_alloc(self, bytes_43140, "mem_43373")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43373, np.int64(0),
                                                  images_mem_43123, np.int64(0),
                                                  np.int64(1), N_29117, m_29116)
      mem_43391 = opencl_alloc(self, bytes_43389, "mem_43391")
      mem_43376 = opencl_alloc(self, total_sizze_44317, "mem_43376")
      if ((1 * (np.long(num_groups_39302) * np.long(segmap_group_sizze_39301))) != 0):
        self.mainzisegmap_39281_var.set_args(self.global_failure,
                                             np.int64(N_29115),
                                             np.int64(m_29116),
                                             np.int32(n_29120),
                                             np.int32(k2p2zq_29133),
                                             np.int64(i32_res_29135),
                                             np.int64(num_groups_39302),
                                             binop_p_mem_43132, mem_43373,
                                             mem_43376, mem_43391)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39281_var,
                                   ((np.long(num_groups_39302) * np.long(segmap_group_sizze_39301)),),
                                   (np.long(segmap_group_sizze_39301),))
        if synchronous:
          sync(self)
      mem_43373 = None
      mem_43376 = None
      mem_43589 = opencl_alloc(self, bytes_43389, "mem_43589")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43589, np.int64(0),
                                                  mem_43391, np.int64(0),
                                                  np.int64(1), m_29116,
                                                  i32_res_29135)
      mem_43391 = None
      defunc_3_map_res_mem_43591 = mem_43589
    else:
      local_memory_capacity_44683 = self.max_local_memory
      if (sle64((bytes_43406 + bytes_43408),
                sext_i32_i64(local_memory_capacity_44683)) and suff_outer_par_39386):
        tk_div_tx_41433 = sdiv_up64(Tk_41432, Tx_41430)
        tk_div_ty_41434 = sdiv_up64(Tk_41432, Ty_41428)
        gridDim_x_41441 = sdiv_up64(i32_res_29135, TxRx_41435)
        gridDim_y_41442 = sdiv_up64(m_29116, TyRy_41436)
        grid_sizze_41443 = (gridDim_x_41441 * gridDim_y_41442)
        full_tiles_41472 = squot64(i32_res_29129, Tk_41432)
        kk_41679 = (Tk_41432 * full_tiles_41472)
        mem_43581 = opencl_alloc(self, bytes_43389, "mem_43581")
        if ((1 * (np.long(grid_sizze_41443) * np.long(group_sizze_41444))) != 0):
          self.mainzisegmap_intragroup_41447_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_43408)),
                                                          cl.LocalMemory(np.long(bytes_43406)),
                                                          np.int64(m_29116),
                                                          np.int64(N_29117),
                                                          np.int64(i32_res_29129),
                                                          np.int64(i32_res_29135),
                                                          np.int64(gridDim_x_41441),
                                                          np.int64(full_tiles_41472),
                                                          np.int64(kk_41679),
                                                          images_mem_43123,
                                                          mem_43135, mem_43581)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_41447_var,
                                     ((np.long(grid_sizze_41443) * np.long(group_sizze_41444)),),
                                     (np.long(group_sizze_41444),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43586 = mem_43581
      else:
        mem_43585 = opencl_alloc(self, bytes_43389, "mem_43585")
        if slt64((i32_res_29129 * np.int64(2)), segred_group_sizze_39403):
          segment_sizze_nonzzero_44623 = smax64(np.int64(1), i32_res_29129)
          num_threads_44624 = (num_groups_39404 * segred_group_sizze_39403)
          if ((1 * (np.long(num_groups_39404) * np.long(segred_group_sizze_39403))) != 0):
            self.mainzisegred_small_39351_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39403))),
                                                       np.int64(N_29115),
                                                       np.int64(m_29116),
                                                       np.int64(N_29117),
                                                       np.int64(i32_res_29129),
                                                       np.int64(i32_res_29135),
                                                       np.int64(num_groups_39404),
                                                       images_mem_43123,
                                                       binop_p_mem_43132,
                                                       mem_43585,
                                                       np.int64(segment_sizze_nonzzero_44623))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_39351_var,
                                       ((np.long(num_groups_39404) * np.long(segred_group_sizze_39403)),),
                                       (np.long(segred_group_sizze_39403),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44644 = sdiv_up64(num_groups_39404,
                                               smax64(np.int64(1),
                                                      (m_29116 * i32_res_29135)))
          elements_per_thread_44645 = sdiv_up64(i32_res_29129,
                                                (segred_group_sizze_39403 * groups_per_segment_44644))
          virt_num_groups_44646 = (groups_per_segment_44644 * (m_29116 * i32_res_29135))
          num_threads_44647 = (num_groups_39404 * segred_group_sizze_39403)
          threads_per_segment_44648 = (groups_per_segment_44644 * segred_group_sizze_39403)
          group_res_arr_mem_44649 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_39403 * virt_num_groups_44646)),
                                                 "group_res_arr_mem_44649")
          mainzicounter_mem_44651 = self.mainzicounter_mem_44651
          if ((1 * (np.long(num_groups_39404) * np.long(segred_group_sizze_39403))) != 0):
            self.mainzisegred_large_39351_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39403))),
                                                       np.int64(N_29115),
                                                       np.int64(N_29117),
                                                       np.int64(i32_res_29129),
                                                       np.int64(i32_res_29135),
                                                       np.int64(num_groups_39404),
                                                       images_mem_43123,
                                                       binop_p_mem_43132,
                                                       mem_43585,
                                                       np.int64(groups_per_segment_44644),
                                                       np.int64(elements_per_thread_44645),
                                                       np.int64(virt_num_groups_44646),
                                                       np.int64(threads_per_segment_44648),
                                                       group_res_arr_mem_44649,
                                                       mainzicounter_mem_44651)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_39351_var,
                                       ((np.long(num_groups_39404) * np.long(segred_group_sizze_39403)),),
                                       (np.long(segred_group_sizze_39403),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43586 = mem_43585
      defunc_3_map_res_mem_43591 = defunc_3_map_res_mem_43586
    binop_p_mem_43132 = None
    mem_43135 = None
    suff_outer_par_39420 = (self.sizes["main.suff_outer_par_18"] <= m_29116)
    segmap_group_sizze_39441 = self.sizes["main.segmap_group_size_39424"]
    max_num_groups_44685 = self.sizes["main.segmap_num_groups_39426"]
    num_groups_39442 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_29116,
                                                            segmap_group_sizze_39441),
                                                  sext_i32_i64(max_num_groups_44685))))
    suff_outer_par_39521 = (self.sizes["main.suff_outer_par_19"] <= nest_sizze_38389)
    segred_group_sizze_39536 = self.sizes["main.segred_group_size_39482"]
    max_num_groups_44686 = self.sizes["main.segred_num_groups_39484"]
    num_groups_39537 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_43288,
                                                            segred_group_sizze_39536),
                                                  sext_i32_i64(max_num_groups_44686))))
    tile_sizze_41891 = self.sizes["main.tile_size_41890"]
    group_sizze_41892 = (tile_sizze_41891 * tile_sizze_41891)
    bytes_43623 = (np.int64(4) * group_sizze_41892)
    binop_x_44154 = (np.int64(4) * tile_sizze_41891)
    sizze_44155 = (tile_sizze_41891 * binop_x_44154)
    num_threads_44320 = (segmap_group_sizze_39441 * num_groups_39442)
    total_sizze_44321 = (bytes_43190 * num_threads_44320)
    local_memory_capacity_44772 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44772)) and suff_outer_par_39420):
      mem_43595 = opencl_alloc(self, bytes_43185, "mem_43595")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43595, np.int64(0),
                                                  defunc_3_map_res_mem_43370,
                                                  np.int64(0), np.int64(1),
                                                  (i32_res_29135 * i32_res_29135),
                                                  m_29116)
      mem_43598 = opencl_alloc(self, bytes_43389, "mem_43598")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43598, np.int64(0),
                                                  defunc_3_map_res_mem_43591,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_29135, m_29116)
      mem_43616 = opencl_alloc(self, bytes_43389, "mem_43616")
      mem_43601 = opencl_alloc(self, total_sizze_44321, "mem_43601")
      if ((1 * (np.long(num_groups_39442) * np.long(segmap_group_sizze_39441))) != 0):
        self.mainzisegmap_39422_var.set_args(self.global_failure,
                                             np.int64(m_29116),
                                             np.int32(k2p2zq_29133),
                                             np.int64(i32_res_29135),
                                             np.int64(num_groups_39442),
                                             mem_43595, mem_43598, mem_43601,
                                             mem_43616)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39422_var,
                                   ((np.long(num_groups_39442) * np.long(segmap_group_sizze_39441)),),
                                   (np.long(segmap_group_sizze_39441),))
        if synchronous:
          sync(self)
      mem_43595 = None
      mem_43598 = None
      mem_43601 = None
      mem_43655 = opencl_alloc(self, bytes_43389, "mem_43655")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43655, np.int64(0),
                                                  mem_43616, np.int64(0),
                                                  np.int64(1), m_29116,
                                                  i32_res_29135)
      mem_43616 = None
      defunc_4_map_res_mem_43657 = mem_43655
    else:
      local_memory_capacity_44771 = self.max_local_memory
      if (sle64((bytes_43623 + bytes_43623),
                sext_i32_i64(local_memory_capacity_44771)) and suff_outer_par_39521):
        mem_43620 = opencl_alloc(self, bytes_43286, "mem_43620")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43620, np.int64(0),
                                                    defunc_3_map_res_mem_43370,
                                                    np.int64(0), np.int64(1),
                                                    i32_res_29135,
                                                    (m_29116 * i32_res_29135))
        num_groups_x_41893 = sdiv_up64(m_29116, tile_sizze_41891)
        num_groups_y_41894 = sdiv_up64(i32_res_29135, tile_sizze_41891)
        num_groups_top_41895 = (num_groups_x_41893 * num_groups_y_41894)
        num_whole_tiles_41912 = squot64(i32_res_29135, tile_sizze_41891)
        residual_input_42039 = srem64(i32_res_29135, tile_sizze_41891)
        cond_42040 = (residual_input_42039 == np.int64(0))
        mem_43647 = opencl_alloc(self, bytes_43389, "mem_43647")
        if ((1 * (np.long(num_groups_top_41895) * np.long(group_sizze_41892))) != 0):
          self.mainzisegmap_intragroup_41896_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_43623)),
                                                          cl.LocalMemory(np.long(bytes_43623)),
                                                          np.int64(m_29116),
                                                          np.int64(i32_res_29135),
                                                          np.int64(num_groups_y_41894),
                                                          np.int64(num_whole_tiles_41912),
                                                          np.int64(residual_input_42039),
                                                          np.byte(cond_42040),
                                                          defunc_3_map_res_mem_43591,
                                                          mem_43620, mem_43647)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_41896_var,
                                     ((np.long(num_groups_top_41895) * np.long(group_sizze_41892)),),
                                     (np.long(group_sizze_41892),))
          if synchronous:
            sync(self)
        mem_43620 = None
        defunc_4_map_res_mem_43652 = mem_43647
      else:
        mem_43651 = opencl_alloc(self, bytes_43389, "mem_43651")
        if slt64((i32_res_29135 * np.int64(2)), segred_group_sizze_39536):
          segment_sizze_nonzzero_44711 = smax64(np.int64(1), i32_res_29135)
          num_threads_44712 = (num_groups_39537 * segred_group_sizze_39536)
          if ((1 * (np.long(num_groups_39537) * np.long(segred_group_sizze_39536))) != 0):
            self.mainzisegred_small_39488_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39536))),
                                                       np.int64(m_29116),
                                                       np.int64(i32_res_29135),
                                                       np.int64(num_groups_39537),
                                                       defunc_3_map_res_mem_43370,
                                                       defunc_3_map_res_mem_43591,
                                                       mem_43651,
                                                       np.int64(segment_sizze_nonzzero_44711))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_39488_var,
                                       ((np.long(num_groups_39537) * np.long(segred_group_sizze_39536)),),
                                       (np.long(segred_group_sizze_39536),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44732 = sdiv_up64(num_groups_39537,
                                               smax64(np.int64(1),
                                                      (m_29116 * i32_res_29135)))
          elements_per_thread_44733 = sdiv_up64(i32_res_29135,
                                                (segred_group_sizze_39536 * groups_per_segment_44732))
          virt_num_groups_44734 = (groups_per_segment_44732 * (m_29116 * i32_res_29135))
          num_threads_44735 = (num_groups_39537 * segred_group_sizze_39536)
          threads_per_segment_44736 = (groups_per_segment_44732 * segred_group_sizze_39536)
          group_res_arr_mem_44737 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_39536 * virt_num_groups_44734)),
                                                 "group_res_arr_mem_44737")
          mainzicounter_mem_44739 = self.mainzicounter_mem_44739
          if ((1 * (np.long(num_groups_39537) * np.long(segred_group_sizze_39536))) != 0):
            self.mainzisegred_large_39488_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39536))),
                                                       np.int64(i32_res_29135),
                                                       np.int64(num_groups_39537),
                                                       defunc_3_map_res_mem_43370,
                                                       defunc_3_map_res_mem_43591,
                                                       mem_43651,
                                                       np.int64(groups_per_segment_44732),
                                                       np.int64(elements_per_thread_44733),
                                                       np.int64(virt_num_groups_44734),
                                                       np.int64(threads_per_segment_44736),
                                                       group_res_arr_mem_44737,
                                                       mainzicounter_mem_44739)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_39488_var,
                                       ((np.long(num_groups_39537) * np.long(segred_group_sizze_39536)),),
                                       (np.long(segred_group_sizze_39536),))
            if synchronous:
              sync(self)
        defunc_4_map_res_mem_43652 = mem_43651
      defunc_4_map_res_mem_43657 = defunc_4_map_res_mem_43652
    defunc_3_map_res_mem_43370 = None
    defunc_3_map_res_mem_43591 = None
    suff_outer_par_39552 = (self.sizes["main.suff_outer_par_20"] <= m_29116)
    segmap_group_sizze_39572 = self.sizes["main.segmap_group_size_39556"]
    max_num_groups_44773 = self.sizes["main.segmap_num_groups_39558"]
    num_groups_39573 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_29116,
                                                            segmap_group_sizze_39572),
                                                  sext_i32_i64(max_num_groups_44773))))
    comparatee_39648 = (N_29115 * m_29116)
    suff_outer_par_39649 = (self.sizes["main.suff_outer_par_21"] <= comparatee_39648)
    nest_sizze_39663 = (i32_res_29135 * comparatee_39648)
    segred_group_sizze_39664 = self.sizes["main.segred_group_size_39612"]
    max_num_groups_44774 = self.sizes["main.segred_num_groups_39614"]
    num_groups_39665 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_39663,
                                                            segred_group_sizze_39664),
                                                  sext_i32_i64(max_num_groups_44774))))
    Ty_42169 = self.sizes["main.Ty_42166"]
    Ry_42170 = self.sizes["main.Ry_42168"]
    Tx_42171 = self.sizes["main.Tx_42165"]
    Rx_42172 = self.sizes["main.Rx_42167"]
    Tk_42173 = self.sizes["main.Tk_42164"]
    TxRx_42176 = (Tx_42171 * Rx_42172)
    TyRy_42177 = (Ty_42169 * Ry_42170)
    a_loc_szz_42179 = (Tk_42173 * TyRy_42177)
    binop_x_42180 = (Tx_42171 * Tk_42173)
    b_loc_szz_42181 = (Rx_42172 * binop_x_42180)
    group_sizze_42185 = (Ty_42169 * Tx_42171)
    bytes_43676 = (np.int64(4) * comparatee_39648)
    bytes_43662 = (np.int64(4) * N_29115)
    binop_x_43693 = (Ry_42170 * group_sizze_42185)
    binop_x_43694 = (Rx_42172 * binop_x_43693)
    bytes_43691 = (np.int64(4) * binop_x_43694)
    binop_x_43685 = (Ry_42170 * Rx_42172)
    bytes_43684 = (np.int64(4) * binop_x_43685)
    bytes_43696 = (np.int64(4) * a_loc_szz_42179)
    bytes_43698 = (np.int64(4) * b_loc_szz_42181)
    bytes_43767 = (np.int64(4) * binop_x_43693)
    binop_x_43773 = (Rx_42172 * group_sizze_42185)
    bytes_43771 = (np.int64(4) * binop_x_43773)
    bytes_43759 = (np.int64(4) * Ry_42170)
    bytes_43761 = (np.int64(4) * Rx_42172)
    binop_x_44168 = (np.int64(4) * Ty_42169)
    binop_x_44169 = (Tx_42171 * binop_x_44168)
    binop_x_44170 = (Ry_42170 * binop_x_44169)
    sizze_44171 = (Rx_42172 * binop_x_44170)
    num_threads_44324 = (segmap_group_sizze_39572 * num_groups_39573)
    total_sizze_44325 = (bytes_43662 * num_threads_44324)
    local_memory_capacity_44904 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44904)) and suff_outer_par_39552):
      mem_43660 = opencl_alloc(self, bytes_43389, "mem_43660")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43660, np.int64(0),
                                                  defunc_4_map_res_mem_43657,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_29135, m_29116)
      mem_43678 = opencl_alloc(self, bytes_43676, "mem_43678")
      mem_43663 = opencl_alloc(self, total_sizze_44325, "mem_43663")
      if ((1 * (np.long(num_groups_39573) * np.long(segmap_group_sizze_39572))) != 0):
        self.mainzisegmap_39554_var.set_args(self.global_failure,
                                             np.int64(N_29115),
                                             np.int64(m_29116),
                                             np.int32(k2p2zq_29133),
                                             np.int64(i32_res_29135),
                                             np.int64(num_groups_39573),
                                             mem_43139, mem_43660, mem_43663,
                                             mem_43678)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39554_var,
                                   ((np.long(num_groups_39573) * np.long(segmap_group_sizze_39572)),),
                                   (np.long(segmap_group_sizze_39572),))
        if synchronous:
          sync(self)
      mem_43660 = None
      mem_43663 = None
      mem_43879 = opencl_alloc(self, bytes_43676, "mem_43879")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43879, np.int64(0),
                                                  mem_43678, np.int64(0),
                                                  np.int64(1), m_29116, N_29115)
      mem_43678 = None
      defunc_3_map_res_mem_43881 = mem_43879
    else:
      local_memory_capacity_44903 = self.max_local_memory
      if (sle64((bytes_43696 + bytes_43698),
                sext_i32_i64(local_memory_capacity_44903)) and suff_outer_par_39649):
        mem_43681 = opencl_alloc(self, bytes_43125, "mem_43681")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43681, np.int64(0),
                                                    mem_43139, np.int64(0),
                                                    np.int64(1), i32_res_29135,
                                                    N_29115)
        tk_div_tx_42174 = sdiv_up64(Tk_42173, Tx_42171)
        tk_div_ty_42175 = sdiv_up64(Tk_42173, Ty_42169)
        gridDim_x_42182 = sdiv_up64(N_29115, TxRx_42176)
        gridDim_y_42183 = sdiv_up64(m_29116, TyRy_42177)
        grid_sizze_42184 = (gridDim_x_42182 * gridDim_y_42183)
        full_tiles_42213 = squot64(i32_res_29135, Tk_42173)
        kk_42416 = (Tk_42173 * full_tiles_42213)
        mem_43871 = opencl_alloc(self, bytes_43676, "mem_43871")
        if ((1 * (np.long(grid_sizze_42184) * np.long(group_sizze_42185))) != 0):
          self.mainzisegmap_intragroup_42188_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_43698)),
                                                          cl.LocalMemory(np.long(bytes_43696)),
                                                          np.int64(N_29115),
                                                          np.int64(m_29116),
                                                          np.int64(i32_res_29135),
                                                          np.int64(gridDim_x_42182),
                                                          np.int64(full_tiles_42213),
                                                          np.int64(kk_42416),
                                                          defunc_4_map_res_mem_43657,
                                                          mem_43681, mem_43871)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_42188_var,
                                     ((np.long(grid_sizze_42184) * np.long(group_sizze_42185)),),
                                     (np.long(group_sizze_42185),))
          if synchronous:
            sync(self)
        mem_43681 = None
        defunc_3_map_res_mem_43876 = mem_43871
      else:
        mem_43875 = opencl_alloc(self, bytes_43676, "mem_43875")
        if slt64((i32_res_29135 * np.int64(2)), segred_group_sizze_39664):
          segment_sizze_nonzzero_44843 = smax64(np.int64(1), i32_res_29135)
          num_threads_44844 = (num_groups_39665 * segred_group_sizze_39664)
          if ((1 * (np.long(num_groups_39665) * np.long(segred_group_sizze_39664))) != 0):
            self.mainzisegred_small_39618_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39664))),
                                                       np.int64(N_29115),
                                                       np.int64(m_29116),
                                                       np.int64(i32_res_29135),
                                                       np.int64(num_groups_39665),
                                                       mem_43139,
                                                       defunc_4_map_res_mem_43657,
                                                       mem_43875,
                                                       np.int64(segment_sizze_nonzzero_44843))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_39618_var,
                                       ((np.long(num_groups_39665) * np.long(segred_group_sizze_39664)),),
                                       (np.long(segred_group_sizze_39664),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44864 = sdiv_up64(num_groups_39665,
                                               smax64(np.int64(1),
                                                      (m_29116 * N_29115)))
          elements_per_thread_44865 = sdiv_up64(i32_res_29135,
                                                (segred_group_sizze_39664 * groups_per_segment_44864))
          virt_num_groups_44866 = (groups_per_segment_44864 * (m_29116 * N_29115))
          num_threads_44867 = (num_groups_39665 * segred_group_sizze_39664)
          threads_per_segment_44868 = (groups_per_segment_44864 * segred_group_sizze_39664)
          group_res_arr_mem_44869 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_39664 * virt_num_groups_44866)),
                                                 "group_res_arr_mem_44869")
          mainzicounter_mem_44871 = self.mainzicounter_mem_44871
          if ((1 * (np.long(num_groups_39665) * np.long(segred_group_sizze_39664))) != 0):
            self.mainzisegred_large_39618_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39664))),
                                                       np.int64(N_29115),
                                                       np.int64(i32_res_29135),
                                                       np.int64(num_groups_39665),
                                                       mem_43139,
                                                       defunc_4_map_res_mem_43657,
                                                       mem_43875,
                                                       np.int64(groups_per_segment_44864),
                                                       np.int64(elements_per_thread_44865),
                                                       np.int64(virt_num_groups_44866),
                                                       np.int64(threads_per_segment_44868),
                                                       group_res_arr_mem_44869,
                                                       mainzicounter_mem_44871)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_39618_var,
                                       ((np.long(num_groups_39665) * np.long(segred_group_sizze_39664)),),
                                       (np.long(segred_group_sizze_39664),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43876 = mem_43875
      defunc_3_map_res_mem_43881 = defunc_3_map_res_mem_43876
    mem_43139 = None
    defunc_4_map_res_mem_43657 = None
    i_29395 = (N_29115 - np.int64(1))
    x_29396 = sle64(np.int64(0), i_29395)
    y_29397 = slt64(i_29395, N_29115)
    bounds_check_29398 = (x_29396 and y_29397)
    index_certs_29399 = True
    assert bounds_check_29398, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:18:29-34\n   #1  helpers.fut:20:13-20\n   #2  bfastfinal.fut:76:30-91\n   #3  /prelude/soacs.fut:56:19-23\n   #4  /prelude/soacs.fut:56:3-37\n   #5  bfastfinal.fut:70:5-79:25\n   #6  bfastfinal.fut:191:5-58\n   #7  bfastfinal.fut:186:1-192:20\n" % ("Index [",
                                                                                                                                                                                                                                                                                                                                                     i_29395,
                                                                                                                                                                                                                                                                                                                                                     "] out of bounds for array of shape [",
                                                                                                                                                                                                                                                                                                                                                     N_29115,
                                                                                                                                                                                                                                                                                                                                                     "]."))
    fits_39794 = sle64(N_29115, max_group_sizze_38657)
    suff_intra_par_39792 = (self.sizes["main.suff_intra_par_24"] <= N_29115)
    intra_suff_and_fits_39795 = (suff_intra_par_39792 and fits_39794)
    segscan_group_sizze_39944 = self.sizes["main.segscan_group_size_39921"]
    max_num_groups_44905 = self.sizes["main.segscan_num_groups_39923"]
    num_groups_39945 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(comparatee_39648,
                                                            segscan_group_sizze_39944),
                                                  sext_i32_i64(max_num_groups_44905))))
    segmap_group_sizze_39964 = self.sizes["main.segmap_group_size_39912"]
    mem_43884 = opencl_alloc(self, bytes_43676, "mem_43884")
    self.futhark_builtinzhreplicate_f32(mem_43884, (m_29116 * N_29115), np.nan)
    mem_43887 = opencl_alloc(self, bytes_43676, "mem_43887")
    self.futhark_builtinzhreplicate_i32(mem_43887, (m_29116 * N_29115),
                                        np.int32(0))
    segmap_group_sizze_40000 = self.sizes["main.segmap_group_size_39837"]
    bytes_43899 = (np.int64(4) * m_29116)
    bytes_43890 = (np.int64(8) * N_29115)
    bytes_43908 = (np.int64(8) * comparatee_39648)
    local_memory_capacity_45007 = self.max_local_memory
    if (sle64((((bytes_43890 + bytes_43662) + bytes_43662) + bytes_43662),
              sext_i32_i64(local_memory_capacity_45007)) and intra_suff_and_fits_39795):
      mem_43900 = opencl_alloc(self, bytes_43899, "mem_43900")
      mem_43903 = opencl_alloc(self, bytes_43676, "mem_43903")
      mem_43906 = opencl_alloc(self, bytes_43676, "mem_43906")
      if ((1 * (np.long(m_29116) * np.long(N_29115))) != 0):
        self.mainzisegmap_intragroup_39717_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_43662)),
                                                        cl.LocalMemory(np.long(bytes_43662)),
                                                        cl.LocalMemory(np.long(bytes_43662)),
                                                        cl.LocalMemory(np.long(bytes_43890)),
                                                        np.int64(N_29115),
                                                        np.int64(N_29117),
                                                        np.int64(i_29395),
                                                        images_mem_43123,
                                                        defunc_3_map_res_mem_43881,
                                                        mem_43900, mem_43903,
                                                        mem_43906)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_39717_var,
                                   ((np.long(m_29116) * np.long(N_29115)),),
                                   (np.long(N_29115),))
        if synchronous:
          sync(self)
      defunc_4_map_res_mem_43918 = mem_43900
      defunc_4_map_res_mem_43919 = mem_43903
      defunc_4_map_res_mem_43920 = mem_43906
    else:
      mem_43910 = opencl_alloc(self, bytes_43908, "mem_43910")
      mem_43913 = opencl_alloc(self, bytes_43676, "mem_43913")
      if slt64(np.int64(0), (m_29116 * N_29115)):
        stage1_max_num_groups_44941 = self.max_group_size
        stage1_num_groups_44942 = smin64(stage1_max_num_groups_44941,
                                         num_groups_39945)
        num_threads_44943 = sext_i64_i32((stage1_num_groups_44942 * segscan_group_sizze_39944))
        if ((1 * (np.long(stage1_num_groups_44942) * np.long(segscan_group_sizze_39944))) != 0):
          self.mainziscan_stage1_39927_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(8) * segscan_group_sizze_39944)))),
                                                    np.int64(N_29115),
                                                    np.int64(m_29116),
                                                    np.int64(N_29117),
                                                    images_mem_43123,
                                                    defunc_3_map_res_mem_43881,
                                                    mem_43910, mem_43913,
                                                    np.int32(num_threads_44943))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage1_39927_var,
                                     ((np.long(stage1_num_groups_44942) * np.long(segscan_group_sizze_39944)),),
                                     (np.long(segscan_group_sizze_39944),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_44942))) != 0):
          self.mainziscan_stage2_39927_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(8) * stage1_num_groups_44942)))),
                                                    np.int64(N_29115),
                                                    np.int64(m_29116),
                                                    mem_43910,
                                                    np.int64(stage1_num_groups_44942),
                                                    np.int32(num_threads_44943))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage2_39927_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_44942)),),
                                     (np.long(stage1_num_groups_44942),))
          if synchronous:
            sync(self)
        required_groups_44985 = sext_i64_i32(sdiv_up64((m_29116 * N_29115),
                                                       segscan_group_sizze_39944))
        if ((1 * (np.long(num_groups_39945) * np.long(segscan_group_sizze_39944))) != 0):
          self.mainziscan_stage3_39927_var.set_args(self.global_failure,
                                                    np.int64(N_29115),
                                                    np.int64(m_29116),
                                                    np.int64(num_groups_39945),
                                                    mem_43910,
                                                    np.int32(num_threads_44943),
                                                    np.int32(required_groups_44985))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage3_39927_var,
                                     ((np.long(num_groups_39945) * np.long(segscan_group_sizze_39944)),),
                                     (np.long(segscan_group_sizze_39944),))
          if synchronous:
            sync(self)
      segmap_usable_groups_39965 = sdiv_up64(m_29116, segmap_group_sizze_39964)
      mem_43916 = opencl_alloc(self, bytes_43899, "mem_43916")
      if ((1 * (np.long(segmap_usable_groups_39965) * np.long(segmap_group_sizze_39964))) != 0):
        self.mainzisegmap_39910_var.set_args(self.global_failure,
                                             np.int64(N_29115),
                                             np.int64(m_29116),
                                             np.int64(i_29395), mem_43910,
                                             mem_43916)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39910_var,
                                   ((np.long(segmap_usable_groups_39965) * np.long(segmap_group_sizze_39964)),),
                                   (np.long(segmap_group_sizze_39964),))
        if synchronous:
          sync(self)
      segmap_usable_groups_40001 = sdiv_up64(comparatee_39648,
                                             segmap_group_sizze_40000)
      if ((1 * (np.long(segmap_usable_groups_40001) * np.long(segmap_group_sizze_40000))) != 0):
        self.mainzisegmap_39834_var.set_args(self.global_failure,
                                             np.int64(N_29115),
                                             np.int64(m_29116), mem_43884,
                                             mem_43887, mem_43910, mem_43913)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39834_var,
                                   ((np.long(segmap_usable_groups_40001) * np.long(segmap_group_sizze_40000)),),
                                   (np.long(segmap_group_sizze_40000),))
        if synchronous:
          sync(self)
      mem_43910 = None
      mem_43913 = None
      defunc_4_map_res_mem_43918 = mem_43916
      defunc_4_map_res_mem_43919 = mem_43884
      defunc_4_map_res_mem_43920 = mem_43887
    defunc_3_map_res_mem_43881 = None
    mem_43884 = None
    mem_43887 = None
    suff_outer_par_40049 = (self.sizes["main.suff_outer_par_28"] <= m_29116)
    fits_40127 = sle64(i32_res_29129, max_group_sizze_38657)
    suff_intra_par_40125 = (self.sizes["main.suff_intra_par_29"] <= i32_res_29129)
    intra_suff_and_fits_40128 = (suff_intra_par_40125 and fits_40127)
    segmap_group_sizze_40092 = self.sizes["main.segmap_group_size_40061"]
    nest_sizze_40215 = (m_29116 * i32_res_29129)
    segred_group_sizze_40216 = self.sizes["main.segred_group_size_40199"]
    max_num_groups_45008 = self.sizes["main.segred_num_groups_40201"]
    num_groups_40217 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_40215,
                                                            segred_group_sizze_40216),
                                                  sext_i32_i64(max_num_groups_45008))))
    segred_group_sizze_40230 = self.sizes["main.segred_group_size_40178"]
    max_num_groups_45009 = self.sizes["main.segred_num_groups_40180"]
    num_groups_40231 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_40215,
                                                            segred_group_sizze_40230),
                                                  sext_i32_i64(max_num_groups_45009))))
    segmap_group_sizze_40246 = self.sizes["main.segmap_group_size_40163"]
    bytes_43929 = (np.int64(4) * segmap_group_sizze_40092)
    local_memory_capacity_45163 = self.max_local_memory
    if (sle64((bytes_43929 + bytes_43929),
              sext_i32_i64(local_memory_capacity_45163)) and suff_outer_par_40049):
      segmap_usable_groups_40093 = sdiv_up64(m_29116, segmap_group_sizze_40092)
      mem_43923 = opencl_alloc(self, bytes_43140, "mem_43923")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43923, np.int64(0),
                                                  images_mem_43123, np.int64(0),
                                                  np.int64(1), N_29117, m_29116)
      mem_43926 = opencl_alloc(self, bytes_43676, "mem_43926")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43926, np.int64(0),
                                                  defunc_4_map_res_mem_43919,
                                                  np.int64(0), np.int64(1),
                                                  N_29115, m_29116)
      num_whole_tiles_42630 = squot64(i32_res_29129, segmap_group_sizze_40092)
      residual_input_42751 = srem64(i32_res_29129, segmap_group_sizze_40092)
      cond_42752 = (residual_input_42751 == np.int64(0))
      mem_43954 = opencl_alloc(self, bytes_43899, "mem_43954")
      mem_43956 = opencl_alloc(self, bytes_43899, "mem_43956")
      mem_43958 = opencl_alloc(self, bytes_43899, "mem_43958")
      if ((1 * (np.long(segmap_usable_groups_40093) * np.long(segmap_group_sizze_40092))) != 0):
        self.mainzisegmap_intragroup_42622_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_43929)),
                                                        cl.LocalMemory(np.long(bytes_43929)),
                                                        np.int64(m_29116),
                                                        np.int32(n_29120),
                                                        np.float32(hfrac_29122),
                                                        np.int64(i32_res_29129),
                                                        np.int32(k2p2_29131),
                                                        np.int64(num_whole_tiles_42630),
                                                        np.int64(residual_input_42751),
                                                        np.byte(cond_42752),
                                                        mem_43923, mem_43926,
                                                        mem_43954, mem_43956,
                                                        mem_43958)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_42622_var,
                                   ((np.long(segmap_usable_groups_40093) * np.long(segmap_group_sizze_40092)),),
                                   (np.long(segmap_group_sizze_40092),))
        if synchronous:
          sync(self)
      mem_43923 = None
      mem_43926 = None
      defunc_3_map_res_mem_43982 = mem_43954
      defunc_3_map_res_mem_43983 = mem_43956
      defunc_3_map_res_mem_43984 = mem_43958
    else:
      local_memory_capacity_45162 = self.max_local_memory
      if (sle64(((np.int32(4) * i32_res_29129) + (np.int32(4) * i32_res_29129)),
                sext_i32_i64(local_memory_capacity_45162)) and intra_suff_and_fits_40128):
        mem_43963 = opencl_alloc(self, bytes_43899, "mem_43963")
        mem_43965 = opencl_alloc(self, bytes_43899, "mem_43965")
        mem_43967 = opencl_alloc(self, bytes_43899, "mem_43967")
        if ((1 * (np.long(m_29116) * np.long(i32_res_29129))) != 0):
          self.mainzisegmap_intragroup_40057_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long((np.int32(4) * i32_res_29129))),
                                                          cl.LocalMemory(np.long((np.int32(4) * i32_res_29129))),
                                                          np.int64(N_29115),
                                                          np.int64(N_29117),
                                                          np.float32(hfrac_29122),
                                                          np.int64(i32_res_29129),
                                                          np.int32(k2p2_29131),
                                                          images_mem_43123,
                                                          defunc_4_map_res_mem_43919,
                                                          mem_43963, mem_43965,
                                                          mem_43967)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_40057_var,
                                     ((np.long(m_29116) * np.long(i32_res_29129)),),
                                     (np.long(i32_res_29129),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43979 = mem_43963
        defunc_3_map_res_mem_43980 = mem_43965
        defunc_3_map_res_mem_43981 = mem_43967
      else:
        mem_43970 = opencl_alloc(self, bytes_43899, "mem_43970")
        if slt64((i32_res_29129 * np.int64(2)), segred_group_sizze_40216):
          segment_sizze_nonzzero_45037 = smax64(np.int64(1), i32_res_29129)
          num_threads_45038 = (num_groups_40217 * segred_group_sizze_40216)
          if ((1 * (np.long(num_groups_40217) * np.long(segred_group_sizze_40216))) != 0):
            self.mainzisegred_small_40205_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40216))),
                                                       np.int64(m_29116),
                                                       np.int64(N_29117),
                                                       np.int64(i32_res_29129),
                                                       np.int64(num_groups_40217),
                                                       images_mem_43123,
                                                       mem_43970,
                                                       np.int64(segment_sizze_nonzzero_45037))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_40205_var,
                                       ((np.long(num_groups_40217) * np.long(segred_group_sizze_40216)),),
                                       (np.long(segred_group_sizze_40216),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45058 = sdiv_up64(num_groups_40217,
                                               smax64(np.int64(1), m_29116))
          elements_per_thread_45059 = sdiv_up64(i32_res_29129,
                                                (segred_group_sizze_40216 * groups_per_segment_45058))
          virt_num_groups_45060 = (groups_per_segment_45058 * m_29116)
          num_threads_45061 = (num_groups_40217 * segred_group_sizze_40216)
          threads_per_segment_45062 = (groups_per_segment_45058 * segred_group_sizze_40216)
          group_res_arr_mem_45063 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_40216 * virt_num_groups_45060)),
                                                 "group_res_arr_mem_45063")
          mainzicounter_mem_45065 = self.mainzicounter_mem_45065
          if ((1 * (np.long(num_groups_40217) * np.long(segred_group_sizze_40216))) != 0):
            self.mainzisegred_large_40205_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40216))),
                                                       np.int64(N_29117),
                                                       np.int64(i32_res_29129),
                                                       np.int64(num_groups_40217),
                                                       images_mem_43123,
                                                       mem_43970,
                                                       np.int64(groups_per_segment_45058),
                                                       np.int64(elements_per_thread_45059),
                                                       np.int64(virt_num_groups_45060),
                                                       np.int64(threads_per_segment_45062),
                                                       group_res_arr_mem_45063,
                                                       mainzicounter_mem_45065)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_40205_var,
                                       ((np.long(num_groups_40217) * np.long(segred_group_sizze_40216)),),
                                       (np.long(segred_group_sizze_40216),))
            if synchronous:
              sync(self)
        mem_43973 = opencl_alloc(self, bytes_43899, "mem_43973")
        if slt64((i32_res_29129 * np.int64(2)), segred_group_sizze_40230):
          segment_sizze_nonzzero_45097 = smax64(np.int64(1), i32_res_29129)
          num_threads_45098 = (num_groups_40231 * segred_group_sizze_40230)
          if ((1 * (np.long(num_groups_40231) * np.long(segred_group_sizze_40230))) != 0):
            self.mainzisegred_small_40184_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40230))),
                                                       np.int64(N_29115),
                                                       np.int64(m_29116),
                                                       np.int64(i32_res_29129),
                                                       np.int64(num_groups_40231),
                                                       defunc_4_map_res_mem_43919,
                                                       mem_43970, mem_43973,
                                                       np.int64(segment_sizze_nonzzero_45097))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_40184_var,
                                       ((np.long(num_groups_40231) * np.long(segred_group_sizze_40230)),),
                                       (np.long(segred_group_sizze_40230),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45118 = sdiv_up64(num_groups_40231,
                                               smax64(np.int64(1), m_29116))
          elements_per_thread_45119 = sdiv_up64(i32_res_29129,
                                                (segred_group_sizze_40230 * groups_per_segment_45118))
          virt_num_groups_45120 = (groups_per_segment_45118 * m_29116)
          num_threads_45121 = (num_groups_40231 * segred_group_sizze_40230)
          threads_per_segment_45122 = (groups_per_segment_45118 * segred_group_sizze_40230)
          group_res_arr_mem_45123 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_40230 * virt_num_groups_45120)),
                                                 "group_res_arr_mem_45123")
          mainzicounter_mem_45125 = self.mainzicounter_mem_45125
          if ((1 * (np.long(num_groups_40231) * np.long(segred_group_sizze_40230))) != 0):
            self.mainzisegred_large_40184_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40230))),
                                                       np.int64(N_29115),
                                                       np.int64(i32_res_29129),
                                                       np.int64(num_groups_40231),
                                                       defunc_4_map_res_mem_43919,
                                                       mem_43970, mem_43973,
                                                       np.int64(groups_per_segment_45118),
                                                       np.int64(elements_per_thread_45119),
                                                       np.int64(virt_num_groups_45120),
                                                       np.int64(threads_per_segment_45122),
                                                       group_res_arr_mem_45123,
                                                       mainzicounter_mem_45125)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_40184_var,
                                       ((np.long(num_groups_40231) * np.long(segred_group_sizze_40230)),),
                                       (np.long(segred_group_sizze_40230),))
            if synchronous:
              sync(self)
        segmap_usable_groups_40247 = sdiv_up64(m_29116,
                                               segmap_group_sizze_40246)
        mem_43976 = opencl_alloc(self, bytes_43899, "mem_43976")
        mem_43978 = opencl_alloc(self, bytes_43899, "mem_43978")
        if ((1 * (np.long(segmap_usable_groups_40247) * np.long(segmap_group_sizze_40246))) != 0):
          self.mainzisegmap_40161_var.set_args(self.global_failure,
                                               np.int64(m_29116),
                                               np.float32(hfrac_29122),
                                               np.int32(k2p2_29131), mem_43970,
                                               mem_43973, mem_43976, mem_43978)
          cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40161_var,
                                     ((np.long(segmap_usable_groups_40247) * np.long(segmap_group_sizze_40246)),),
                                     (np.long(segmap_group_sizze_40246),))
          if synchronous:
            sync(self)
        mem_43973 = None
        defunc_3_map_res_mem_43979 = mem_43976
        defunc_3_map_res_mem_43980 = mem_43970
        defunc_3_map_res_mem_43981 = mem_43978
      defunc_3_map_res_mem_43982 = defunc_3_map_res_mem_43979
      defunc_3_map_res_mem_43983 = defunc_3_map_res_mem_43980
      defunc_3_map_res_mem_43984 = defunc_3_map_res_mem_43981
    segred_group_sizze_40267 = self.sizes["main.segred_group_size_40266"]
    max_num_groups_45164 = self.sizes["main.segred_num_groups_40268"]
    num_groups_40269 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_29116,
                                                            segred_group_sizze_40267),
                                                  sext_i32_i64(max_num_groups_45164))))
    mem_43987 = opencl_alloc(self, np.int64(4), "mem_43987")
    mainzicounter_mem_45165 = self.mainzicounter_mem_45165
    group_res_arr_mem_45167 = opencl_alloc(self,
                                           (np.int32(4) * (segred_group_sizze_40267 * num_groups_40269)),
                                           "group_res_arr_mem_45167")
    num_threads_45169 = (num_groups_40269 * segred_group_sizze_40267)
    if ((1 * (np.long(num_groups_40269) * np.long(segred_group_sizze_40267))) != 0):
      self.mainzisegred_nonseg_40274_var.set_args(self.global_failure,
                                                  cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40267))),
                                                  cl.LocalMemory(np.long(np.int32(1))),
                                                  np.int64(m_29116),
                                                  np.int64(num_groups_40269),
                                                  defunc_3_map_res_mem_43982,
                                                  mem_43987,
                                                  mainzicounter_mem_45165,
                                                  group_res_arr_mem_45167,
                                                  np.int64(num_threads_45169))
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegred_nonseg_40274_var,
                                 ((np.long(num_groups_40269) * np.long(segred_group_sizze_40267)),),
                                 (np.long(segred_group_sizze_40267),))
      if synchronous:
        sync(self)
    read_res_45531 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45531, mem_43987,
                    device_offset=(np.long(np.int64(0)) * 4),
                    is_blocking=synchronous)
    sync(self)
    defunc_2_reduce_comm_res_29485 = read_res_45531[0]
    mem_43987 = None
    i32_res_29490 = sext_i32_i64(defunc_2_reduce_comm_res_29485)
    bounds_invalid_upwards_29491 = slt64(i32_res_29490, np.int64(0))
    valid_29492 = not(bounds_invalid_upwards_29491)
    range_valid_c_29493 = True
    assert valid_29492, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:5:3-18\n   #2  bfastfinal.fut:104:34-46\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:99:17-106:24\n   #5  bfastfinal.fut:191:5-58\n   #6  bfastfinal.fut:186:1-192:20\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                                                                                                                   "..",
                                                                                                                                                                                                                                                                                                                   np.int64(1),
                                                                                                                                                                                                                                                                                                                   "..<",
                                                                                                                                                                                                                                                                                                                   i32_res_29490,
                                                                                                                                                                                                                                                                                                                   " is invalid."))
    suff_outer_par_40306 = (self.sizes["main.suff_outer_par_31"] <= m_29116)
    segmap_group_sizze_40329 = self.sizes["main.segmap_group_size_40310"]
    nest_sizze_40372 = (m_29116 * i32_res_29490)
    segred_group_sizze_40373 = self.sizes["main.segred_group_size_40350"]
    max_num_groups_45195 = self.sizes["main.segred_num_groups_40352"]
    num_groups_40374 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_40372,
                                                            segred_group_sizze_40373),
                                                  sext_i32_i64(max_num_groups_45195))))
    bytes_43990 = (np.int64(4) * segmap_group_sizze_40329)
    local_memory_capacity_45266 = self.max_local_memory
    if (sle64((bytes_43990 + bytes_43990),
              sext_i32_i64(local_memory_capacity_45266)) and suff_outer_par_40306):
      segmap_usable_groups_40330 = sdiv_up64(m_29116, segmap_group_sizze_40329)
      num_whole_tiles_42874 = squot64(i32_res_29490, segmap_group_sizze_40329)
      residual_input_42973 = srem64(i32_res_29490, segmap_group_sizze_40329)
      cond_42974 = (residual_input_42973 == np.int64(0))
      mem_44013 = opencl_alloc(self, bytes_43899, "mem_44013")
      if ((1 * (np.long(segmap_usable_groups_40330) * np.long(segmap_group_sizze_40329))) != 0):
        self.mainzisegmap_intragroup_42854_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_43990)),
                                                        cl.LocalMemory(np.long(bytes_43990)),
                                                        np.int64(N_29115),
                                                        np.int64(m_29116),
                                                        np.int64(i32_res_29490),
                                                        np.int64(num_whole_tiles_42874),
                                                        np.int64(residual_input_42973),
                                                        np.byte(cond_42974),
                                                        defunc_4_map_res_mem_43919,
                                                        defunc_3_map_res_mem_43982,
                                                        defunc_3_map_res_mem_43983,
                                                        mem_44013)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_42854_var,
                                   ((np.long(segmap_usable_groups_40330) * np.long(segmap_group_sizze_40329)),),
                                   (np.long(segmap_group_sizze_40329),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_44017 = mem_44013
    else:
      mem_44016 = opencl_alloc(self, bytes_43899, "mem_44016")
      if slt64((i32_res_29490 * np.int64(2)), segred_group_sizze_40373):
        segment_sizze_nonzzero_45206 = smax64(np.int64(1), i32_res_29490)
        num_threads_45207 = (num_groups_40374 * segred_group_sizze_40373)
        if ((1 * (np.long(num_groups_40374) * np.long(segred_group_sizze_40373))) != 0):
          self.mainzisegred_small_40356_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40373))),
                                                     np.int64(N_29115),
                                                     np.int64(m_29116),
                                                     np.int64(i32_res_29490),
                                                     np.int64(num_groups_40374),
                                                     defunc_4_map_res_mem_43919,
                                                     defunc_3_map_res_mem_43982,
                                                     defunc_3_map_res_mem_43983,
                                                     mem_44016,
                                                     np.int64(segment_sizze_nonzzero_45206))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_small_40356_var,
                                     ((np.long(num_groups_40374) * np.long(segred_group_sizze_40373)),),
                                     (np.long(segred_group_sizze_40373),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_45227 = sdiv_up64(num_groups_40374,
                                             smax64(np.int64(1), m_29116))
        elements_per_thread_45228 = sdiv_up64(i32_res_29490,
                                              (segred_group_sizze_40373 * groups_per_segment_45227))
        virt_num_groups_45229 = (groups_per_segment_45227 * m_29116)
        num_threads_45230 = (num_groups_40374 * segred_group_sizze_40373)
        threads_per_segment_45231 = (groups_per_segment_45227 * segred_group_sizze_40373)
        group_res_arr_mem_45232 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_40373 * virt_num_groups_45229)),
                                               "group_res_arr_mem_45232")
        mainzicounter_mem_45234 = self.mainzicounter_mem_45234
        if ((1 * (np.long(num_groups_40374) * np.long(segred_group_sizze_40373))) != 0):
          self.mainzisegred_large_40356_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long(np.int32(1))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40373))),
                                                     np.int64(N_29115),
                                                     np.int64(i32_res_29490),
                                                     np.int64(num_groups_40374),
                                                     defunc_4_map_res_mem_43919,
                                                     defunc_3_map_res_mem_43982,
                                                     defunc_3_map_res_mem_43983,
                                                     mem_44016,
                                                     np.int64(groups_per_segment_45227),
                                                     np.int64(elements_per_thread_45228),
                                                     np.int64(virt_num_groups_45229),
                                                     np.int64(threads_per_segment_45231),
                                                     group_res_arr_mem_45232,
                                                     mainzicounter_mem_45234)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_large_40356_var,
                                     ((np.long(num_groups_40374) * np.long(segred_group_sizze_40373)),),
                                     (np.long(segred_group_sizze_40373),))
          if synchronous:
            sync(self)
      defunc_0_f_res_mem_44017 = mem_44016
    iota32_arg_29515 = (N_29115 - i32_res_29129)
    bounds_invalid_upwards_29516 = slt64(iota32_arg_29515, np.int64(0))
    valid_29517 = not(bounds_invalid_upwards_29516)
    range_valid_c_29518 = True
    assert valid_29517, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:112:22-35\n   #3  bfastfinal.fut:191:5-58\n   #4  bfastfinal.fut:186:1-192:20\n" % ("Range ",
                                                                                                                                                                                                                                      np.int64(0),
                                                                                                                                                                                                                                      "..",
                                                                                                                                                                                                                                      np.int64(1),
                                                                                                                                                                                                                                      "..<",
                                                                                                                                                                                                                                      iota32_arg_29515,
                                                                                                                                                                                                                                      " is invalid."))
    x_29520 = (np.int32(1) + n_29120)
    i_29521 = (n_29120 - np.int32(1))
    i_29522 = sext_i32_i64(i_29521)
    x_29523 = sle64(np.int64(0), i_29522)
    y_29524 = slt64(i_29522, N_29115)
    bounds_check_29525 = (x_29523 and y_29524)
    index_certs_29526 = True
    assert bounds_check_29525, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:110:64-84\n   #1  bfastfinal.fut:108:15-112:36\n   #2  bfastfinal.fut:191:5-58\n   #3  bfastfinal.fut:186:1-192:20\n" % ("Index [",
                                                                                                                                                                                                                 i_29522,
                                                                                                                                                                                                                 "] out of bounds for array of shape [",
                                                                                                                                                                                                                 N_29115,
                                                                                                                                                                                                                 "]."))
    read_res_45533 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45533, mappingindices_mem_43122,
                    device_offset=(np.long(i_29522) * 4),
                    is_blocking=synchronous)
    sync(self)
    r32_arg_29527 = read_res_45533[0]
    i32_res_29528 = sitofp_i32_f32(r32_arg_29527)
    range_valid_c_29529 = True
    assert valid_29517, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:122:20-35\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:117:20-133:9\n   #5  bfastfinal.fut:191:5-58\n   #6  bfastfinal.fut:186:1-192:20\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                                                                  iota32_arg_29515,
                                                                                                                                                                                                                                                                                                                  " is invalid."))
    segmap_group_sizze_40451 = self.sizes["main.segmap_group_size_40434"]
    segmap_usable_groups_40452 = sdiv_up64(iota32_arg_29515,
                                           segmap_group_sizze_40451)
    bytes_44019 = (np.int64(4) * iota32_arg_29515)
    mem_44020 = opencl_alloc(self, bytes_44019, "mem_44020")
    mem_44022 = opencl_alloc(self, bytes_44019, "mem_44022")
    if ((1 * (np.long(segmap_usable_groups_40452) * np.long(segmap_group_sizze_40451))) != 0):
      self.mainzisegmap_40432_var.set_args(self.global_failure,
                                           np.float32(lam_29123),
                                           np.int64(iota32_arg_29515),
                                           np.int32(x_29520),
                                           np.float32(i32_res_29528),
                                           mappingindices_mem_43122, mem_44020,
                                           mem_44022)
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40432_var,
                                 ((np.long(segmap_usable_groups_40452) * np.long(segmap_group_sizze_40451)),),
                                 (np.long(segmap_group_sizze_40451),))
      if synchronous:
        sync(self)
    mem_44020 = None
    fits_40692 = sle64(iota32_arg_29515, max_group_sizze_38657)
    suff_intra_par_40690 = (self.sizes["main.suff_intra_par_34"] <= iota32_arg_29515)
    intra_suff_and_fits_40693 = (suff_intra_par_40690 and fits_40692)
    segmap_group_sizze_40966 = self.sizes["main.segmap_group_size_40946"]
    max_num_groups_45272 = self.sizes["main.segmap_num_groups_40948"]
    num_groups_40967 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_29116,
                                                            segmap_group_sizze_40966),
                                                  sext_i32_i64(max_num_groups_45272))))
    nest_sizze_40988 = (m_29116 * iota32_arg_29515)
    segscan_group_sizze_40989 = self.sizes["main.segscan_group_size_40905"]
    max_num_groups_45273 = self.sizes["main.segscan_num_groups_40907"]
    num_groups_40990 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_40988,
                                                            segscan_group_sizze_40989),
                                                  sext_i32_i64(max_num_groups_45273))))
    segred_group_sizze_41027 = self.sizes["main.segred_group_size_40851"]
    max_num_groups_45274 = self.sizes["main.segred_num_groups_40853"]
    num_groups_41028 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_40988,
                                                            segred_group_sizze_41027),
                                                  sext_i32_i64(max_num_groups_45274))))
    segmap_group_sizze_41066 = self.sizes["main.segmap_group_size_40804"]
    bytes_44038 = (np.int64(4) * nest_sizze_40988)
    local_memory_capacity_45467 = self.max_local_memory
    if (sle64((((bytes_44019 + (np.int32(1) * iota32_arg_29515)) + (np.int32(4) * iota32_arg_29515)) + (np.int32(4) * iota32_arg_29515)),
              sext_i32_i64(local_memory_capacity_45467)) and intra_suff_and_fits_40693):
      mem_44029 = opencl_alloc(self, bytes_43899, "mem_44029")
      mem_44031 = opencl_alloc(self, bytes_43899, "mem_44031")
      if ((1 * (np.long(m_29116) * np.long(iota32_arg_29515))) != 0):
        self.mainzisegmap_intragroup_40477_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long((np.int32(4) * iota32_arg_29515))),
                                                        cl.LocalMemory(np.long((np.int32(4) * iota32_arg_29515))),
                                                        cl.LocalMemory(np.long((np.int32(1) * iota32_arg_29515))),
                                                        cl.LocalMemory(np.long(bytes_44019)),
                                                        np.int64(N_29115),
                                                        np.int32(n_29120),
                                                        np.int64(iota32_arg_29515),
                                                        defunc_4_map_res_mem_43918,
                                                        defunc_4_map_res_mem_43919,
                                                        defunc_4_map_res_mem_43920,
                                                        defunc_3_map_res_mem_43982,
                                                        defunc_3_map_res_mem_43983,
                                                        defunc_3_map_res_mem_43984,
                                                        defunc_0_f_res_mem_44017,
                                                        mem_44022, mem_44029,
                                                        mem_44031)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_40477_var,
                                   ((np.long(m_29116) * np.long(iota32_arg_29515)),),
                                   (np.long(iota32_arg_29515),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_44053 = mem_44029
      defunc_0_f_res_mem_44054 = mem_44031
    else:
      mem_44034 = opencl_alloc(self, bytes_43899, "mem_44034")
      mem_44036 = opencl_alloc(self, bytes_43899, "mem_44036")
      if ((1 * (np.long(num_groups_40967) * np.long(segmap_group_sizze_40966))) != 0):
        self.mainzisegmap_40944_var.set_args(self.global_failure,
                                             np.int64(m_29116),
                                             np.int64(num_groups_40967),
                                             defunc_4_map_res_mem_43918,
                                             defunc_3_map_res_mem_43983,
                                             defunc_3_map_res_mem_43984,
                                             mem_44034, mem_44036)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40944_var,
                                   ((np.long(num_groups_40967) * np.long(segmap_group_sizze_40966)),),
                                   (np.long(segmap_group_sizze_40966),))
        if synchronous:
          sync(self)
      mem_44040 = opencl_alloc(self, bytes_44038, "mem_44040")
      if slt64(np.int64(0), (m_29116 * iota32_arg_29515)):
        stage1_max_num_groups_45308 = self.max_group_size
        stage1_num_groups_45309 = smin64(stage1_max_num_groups_45308,
                                         num_groups_40990)
        num_threads_45310 = sext_i64_i32((stage1_num_groups_45309 * segscan_group_sizze_40989))
        if ((1 * (np.long(stage1_num_groups_45309) * np.long(segscan_group_sizze_40989))) != 0):
          self.mainziscan_stage1_40911_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(4) * segscan_group_sizze_40989)))),
                                                    np.int64(N_29115),
                                                    np.int64(m_29116),
                                                    np.int64(iota32_arg_29515),
                                                    defunc_4_map_res_mem_43919,
                                                    defunc_3_map_res_mem_43982,
                                                    defunc_3_map_res_mem_43983,
                                                    defunc_0_f_res_mem_44017,
                                                    mem_44036, mem_44040,
                                                    np.int32(num_threads_45310))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage1_40911_var,
                                     ((np.long(stage1_num_groups_45309) * np.long(segscan_group_sizze_40989)),),
                                     (np.long(segscan_group_sizze_40989),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_45309))) != 0):
          self.mainziscan_stage2_40911_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(4) * stage1_num_groups_45309)))),
                                                    np.int64(m_29116),
                                                    np.int64(iota32_arg_29515),
                                                    mem_44040,
                                                    np.int64(stage1_num_groups_45309),
                                                    np.int32(num_threads_45310))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage2_40911_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_45309)),),
                                     (np.long(stage1_num_groups_45309),))
          if synchronous:
            sync(self)
        required_groups_45352 = sext_i64_i32(sdiv_up64((m_29116 * iota32_arg_29515),
                                                       segscan_group_sizze_40989))
        if ((1 * (np.long(num_groups_40990) * np.long(segscan_group_sizze_40989))) != 0):
          self.mainziscan_stage3_40911_var.set_args(self.global_failure,
                                                    np.int64(m_29116),
                                                    np.int64(iota32_arg_29515),
                                                    np.int64(num_groups_40990),
                                                    mem_44040,
                                                    np.int32(num_threads_45310),
                                                    np.int32(required_groups_45352))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage3_40911_var,
                                     ((np.long(num_groups_40990) * np.long(segscan_group_sizze_40989)),),
                                     (np.long(segscan_group_sizze_40989),))
          if synchronous:
            sync(self)
      mem_44043 = opencl_alloc(self, m_29116, "mem_44043")
      mem_44045 = opencl_alloc(self, bytes_43899, "mem_44045")
      mem_44047 = opencl_alloc(self, bytes_43899, "mem_44047")
      if slt64((iota32_arg_29515 * np.int64(2)), segred_group_sizze_41027):
        segment_sizze_nonzzero_45364 = smax64(np.int64(1), iota32_arg_29515)
        num_threads_45365 = (num_groups_41028 * segred_group_sizze_41027)
        if ((1 * (np.long(num_groups_41028) * np.long(segred_group_sizze_41027))) != 0):
          self.mainzisegred_small_40857_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_41027))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_41027))),
                                                     cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_41027))),
                                                     np.int64(m_29116),
                                                     np.int64(iota32_arg_29515),
                                                     np.int64(num_groups_41028),
                                                     mem_44022, mem_44034,
                                                     mem_44036, mem_44040,
                                                     mem_44043, mem_44045,
                                                     mem_44047,
                                                     np.int64(segment_sizze_nonzzero_45364))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_small_40857_var,
                                     ((np.long(num_groups_41028) * np.long(segred_group_sizze_41027)),),
                                     (np.long(segred_group_sizze_41027),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_45400 = sdiv_up64(num_groups_41028,
                                             smax64(np.int64(1), m_29116))
        elements_per_thread_45401 = sdiv_up64(iota32_arg_29515,
                                              (segred_group_sizze_41027 * groups_per_segment_45400))
        virt_num_groups_45402 = (groups_per_segment_45400 * m_29116)
        num_threads_45403 = (num_groups_41028 * segred_group_sizze_41027)
        threads_per_segment_45404 = (groups_per_segment_45400 * segred_group_sizze_41027)
        group_res_arr_mem_45405 = opencl_alloc(self,
                                               (np.int32(1) * (segred_group_sizze_41027 * virt_num_groups_45402)),
                                               "group_res_arr_mem_45405")
        group_res_arr_mem_45407 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_41027 * virt_num_groups_45402)),
                                               "group_res_arr_mem_45407")
        group_res_arr_mem_45409 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_41027 * virt_num_groups_45402)),
                                               "group_res_arr_mem_45409")
        mainzicounter_mem_45411 = self.mainzicounter_mem_45411
        if ((1 * (np.long(num_groups_41028) * np.long(segred_group_sizze_41027))) != 0):
          self.mainzisegred_large_40857_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long(np.int32(1))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_41027))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_41027))),
                                                     cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_41027))),
                                                     np.int64(iota32_arg_29515),
                                                     np.int64(num_groups_41028),
                                                     mem_44022, mem_44034,
                                                     mem_44036, mem_44040,
                                                     mem_44043, mem_44045,
                                                     mem_44047,
                                                     np.int64(groups_per_segment_45400),
                                                     np.int64(elements_per_thread_45401),
                                                     np.int64(virt_num_groups_45402),
                                                     group_res_arr_mem_45405,
                                                     group_res_arr_mem_45407,
                                                     group_res_arr_mem_45409,
                                                     mainzicounter_mem_45411)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_large_40857_var,
                                     ((np.long(num_groups_41028) * np.long(segred_group_sizze_41027)),),
                                     (np.long(segred_group_sizze_41027),))
          if synchronous:
            sync(self)
      mem_44034 = None
      mem_44040 = None
      segmap_usable_groups_41067 = sdiv_up64(m_29116, segmap_group_sizze_41066)
      mem_44050 = opencl_alloc(self, bytes_43899, "mem_44050")
      mem_44052 = opencl_alloc(self, bytes_43899, "mem_44052")
      if ((1 * (np.long(segmap_usable_groups_41067) * np.long(segmap_group_sizze_41066))) != 0):
        self.mainzisegmap_40802_var.set_args(self.global_failure,
                                             np.int64(N_29115),
                                             np.int64(m_29116),
                                             np.int32(n_29120),
                                             defunc_4_map_res_mem_43920,
                                             defunc_3_map_res_mem_43983,
                                             mem_44036, mem_44043, mem_44045,
                                             mem_44047, mem_44050, mem_44052)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40802_var,
                                   ((np.long(segmap_usable_groups_41067) * np.long(segmap_group_sizze_41066)),),
                                   (np.long(segmap_group_sizze_41066),))
        if synchronous:
          sync(self)
      mem_44036 = None
      mem_44043 = None
      mem_44045 = None
      mem_44047 = None
      defunc_0_f_res_mem_44053 = mem_44050
      defunc_0_f_res_mem_44054 = mem_44052
    defunc_4_map_res_mem_43918 = None
    defunc_4_map_res_mem_43919 = None
    defunc_4_map_res_mem_43920 = None
    defunc_3_map_res_mem_43982 = None
    defunc_3_map_res_mem_43983 = None
    defunc_3_map_res_mem_43984 = None
    defunc_0_f_res_mem_44017 = None
    mem_44022 = None
    out_arrsizze_44347 = m_29116
    out_arrsizze_44349 = m_29116
    out_mem_44346 = defunc_0_f_res_mem_44053
    out_mem_44348 = defunc_0_f_res_mem_44054
    return (out_mem_44346, out_arrsizze_44347, out_mem_44348,
            out_arrsizze_44349)
  def futhark_mainDetailed(self, mappingindices_mem_43122, images_mem_43123,
                           N_27772, m_27773, N_27774, trend_27775, k_27776,
                           n_27777, freq_27778, hfrac_27779, lam_27780):
    dim_match_27783 = (N_27772 == N_27774)
    empty_or_match_cert_27784 = True
    assert dim_match_27783, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:172:1-176:56\n" % ("function arguments of wrong shape",))
    i32_res_27786 = sext_i32_i64(n_27777)
    x_27787 = (np.int32(2) * k_27776)
    k2p2_27788 = (np.int32(2) + x_27787)
    cond_27789 = slt32(np.int32(0), trend_27775)
    if cond_27789:
      k2p2zq_27790 = k2p2_27788
    else:
      k2p2zq_f_res_27791 = (k2p2_27788 - np.int32(1))
      k2p2zq_27790 = k2p2zq_f_res_27791
    i32_res_27792 = sext_i32_i64(k2p2zq_27790)
    binop_x_43126 = (N_27772 * i32_res_27792)
    bytes_43125 = (np.int64(4) * binop_x_43126)
    if cond_27789:
      bounds_invalid_upwards_27794 = slt64(i32_res_27792, np.int64(0))
      valid_27795 = not(bounds_invalid_upwards_27794)
      range_valid_c_27796 = True
      assert valid_27795, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:37:10-20\n   #3  bfastfinal.fut:27:17-66\n   #4  bfastfinal.fut:176:3-56\n   #5  bfastfinal.fut:172:1-176:56\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_27792,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_29952 = self.sizes["mainDetailed.segmap_group_size_29882"]
      segmap_usable_groups_29953 = sdiv_up64(binop_x_43126,
                                             segmap_group_sizze_29952)
      mem_43127 = opencl_alloc(self, bytes_43125, "mem_43127")
      if ((1 * (np.long(segmap_usable_groups_29953) * np.long(segmap_group_sizze_29952))) != 0):
        self.mainDetailedzisegmap_29879_var.set_args(self.global_failure,
                                                     np.int64(N_27772),
                                                     np.float32(freq_27778),
                                                     np.int64(i32_res_27792),
                                                     mappingindices_mem_43122,
                                                     mem_43127)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_29879_var,
                                   ((np.long(segmap_usable_groups_29953) * np.long(segmap_group_sizze_29952)),),
                                   (np.long(segmap_group_sizze_29952),))
        if synchronous:
          sync(self)
      binop_p_mem_43132 = mem_43127
    else:
      bounds_invalid_upwards_27820 = slt64(i32_res_27792, np.int64(0))
      valid_27821 = not(bounds_invalid_upwards_27820)
      range_valid_c_27822 = True
      assert valid_27821, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:49:10-22\n   #3  bfastfinal.fut:28:17-64\n   #4  bfastfinal.fut:176:3-56\n   #5  bfastfinal.fut:172:1-176:56\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_27792,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_30126 = self.sizes["mainDetailed.segmap_group_size_30060"]
      segmap_usable_groups_30127 = sdiv_up64(binop_x_43126,
                                             segmap_group_sizze_30126)
      mem_43131 = opencl_alloc(self, bytes_43125, "mem_43131")
      if ((1 * (np.long(segmap_usable_groups_30127) * np.long(segmap_group_sizze_30126))) != 0):
        self.mainDetailedzisegmap_30057_var.set_args(self.global_failure,
                                                     np.int64(N_27772),
                                                     np.float32(freq_27778),
                                                     np.int64(i32_res_27792),
                                                     mappingindices_mem_43122,
                                                     mem_43131)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_30057_var,
                                   ((np.long(segmap_usable_groups_30127) * np.long(segmap_group_sizze_30126)),),
                                   (np.long(segmap_group_sizze_30126),))
        if synchronous:
          sync(self)
      binop_p_mem_43132 = mem_43131
    x_27845 = (N_27772 * N_27772)
    y_27846 = (np.int64(2) * N_27772)
    x_27847 = (x_27845 + y_27846)
    x_27848 = (np.int64(1) + x_27847)
    y_27849 = (np.int64(1) + N_27772)
    zzero_27850 = (y_27849 == np.int64(0))
    nonzzero_27851 = not(zzero_27850)
    nonzzero_cert_27852 = True
    assert nonzzero_27851, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:34:32-60\n   #1  bfastfinal.fut:176:3-56\n   #2  bfastfinal.fut:172:1-176:56\n" % ("division by zero",))
    x_27853 = sdiv64(x_27848, y_27849)
    x_27854 = (x_27853 - N_27772)
    binop_p_27855 = (x_27854 - np.int64(1))
    defunc_0_f_res_27856 = sext_i64_i32(binop_p_27855)
    i32_res_27857 = sitofp_i32_f32(defunc_0_f_res_27856)
    segmap_group_sizze_30209 = self.sizes["mainDetailed.segmap_group_size_30188"]
    segmap_usable_groups_30210 = sdiv_up64(binop_x_43126,
                                           segmap_group_sizze_30209)
    mem_43135 = opencl_alloc(self, bytes_43125, "mem_43135")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_43135, np.int64(0),
                                                binop_p_mem_43132, np.int64(0),
                                                np.int64(1), N_27772,
                                                i32_res_27792)
    mem_43139 = opencl_alloc(self, bytes_43125, "mem_43139")
    if ((1 * (np.long(segmap_usable_groups_30210) * np.long(segmap_group_sizze_30209))) != 0):
      self.mainDetailedzisegmap_30185_var.set_args(self.global_failure,
                                                   np.int64(N_27772),
                                                   np.int64(i32_res_27792),
                                                   np.float32(i32_res_27857),
                                                   mem_43135, mem_43139)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_30185_var,
                                 ((np.long(segmap_usable_groups_30210) * np.long(segmap_group_sizze_30209)),),
                                 (np.long(segmap_group_sizze_30209),))
      if synchronous:
        sync(self)
    eq_x_y_27865 = (np.int64(0) == i32_res_27792)
    p_and_eq_x_y_27866 = (cond_27789 and eq_x_y_27865)
    not_p_27867 = not(cond_27789)
    p_and_eq_x_y_27868 = (eq_x_y_27865 and not_p_27867)
    empty_slice_27869 = (p_and_eq_x_y_27866 or p_and_eq_x_y_27868)
    m_27870 = (i32_res_27792 - np.int64(1))
    zzero_leq_i_p_m_t_s_27871 = sle64(np.int64(0), m_27870)
    i_p_m_t_s_leq_w_27872 = slt64(m_27870, i32_res_27792)
    i_lte_j_27873 = sle64(np.int64(0), i32_res_27792)
    y_27874 = (zzero_leq_i_p_m_t_s_27871 and i_p_m_t_s_leq_w_27872)
    y_27875 = (i_lte_j_27873 and y_27874)
    ok_or_empty_27876 = (empty_slice_27869 or y_27875)
    empty_slice_27877 = (i32_res_27786 == np.int64(0))
    m_27878 = (i32_res_27786 - np.int64(1))
    zzero_leq_i_p_m_t_s_27879 = sle64(np.int64(0), m_27878)
    i_p_m_t_s_leq_w_27880 = slt64(m_27878, N_27772)
    i_lte_j_27881 = sle64(np.int64(0), i32_res_27786)
    y_27882 = (zzero_leq_i_p_m_t_s_27879 and i_p_m_t_s_leq_w_27880)
    y_27883 = (i_lte_j_27881 and y_27882)
    ok_or_empty_27884 = (empty_slice_27877 or y_27883)
    index_ok_27885 = (ok_or_empty_27876 and ok_or_empty_27884)
    index_certs_27886 = True
    assert index_ok_27885, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:37:15-23\n   #1  bfastfinal.fut:176:3-56\n   #2  bfastfinal.fut:172:1-176:56\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_27786,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               i32_res_27792,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_27772,
                                                                                                                                                                               "]."))
    empty_slice_27888 = (i32_res_27792 == np.int64(0))
    ok_or_empty_27889 = (y_27875 or empty_slice_27888)
    index_ok_27890 = (ok_or_empty_27884 and ok_or_empty_27889)
    index_certs_27891 = True
    assert index_ok_27890, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:38:15-24\n   #1  bfastfinal.fut:176:3-56\n   #2  bfastfinal.fut:172:1-176:56\n" % ("Index [:",
                                                                                                                                                                               i32_res_27786,
                                                                                                                                                                               ", ",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":] out of bounds for array of shape [",
                                                                                                                                                                               N_27772,
                                                                                                                                                                               "][",
                                                                                                                                                                               i32_res_27792,
                                                                                                                                                                               "]."))
    empty_slice_27893 = (m_27773 == np.int64(0))
    m_27894 = (m_27773 - np.int64(1))
    zzero_leq_i_p_m_t_s_27895 = sle64(np.int64(0), m_27894)
    i_p_m_t_s_leq_w_27896 = slt64(m_27894, m_27773)
    i_lte_j_27897 = sle64(np.int64(0), m_27773)
    y_27898 = (zzero_leq_i_p_m_t_s_27895 and i_p_m_t_s_leq_w_27896)
    y_27899 = (i_lte_j_27897 and y_27898)
    ok_or_empty_27900 = (empty_slice_27893 or y_27899)
    index_ok_27901 = (ok_or_empty_27884 and ok_or_empty_27900)
    index_certs_27902 = True
    assert index_ok_27901, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:39:15-28\n   #1  bfastfinal.fut:176:3-56\n   #2  bfastfinal.fut:172:1-176:56\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_27786,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               m_27773,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_27772,
                                                                                                                                                                               "]."))
    suff_outer_par_30216 = (self.sizes["mainDetailed.suff_outer_par_6"] <= m_27773)
    segmap_group_sizze_30242 = self.sizes["mainDetailed.segmap_group_size_30220"]
    max_num_groups_44389 = self.sizes["mainDetailed.segmap_num_groups_30222"]
    num_groups_30243 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27773,
                                                            segmap_group_sizze_30242),
                                                  sext_i32_i64(max_num_groups_44389))))
    nest_sizze_30418 = (m_27773 * i32_res_27792)
    segmap_group_sizze_30419 = self.sizes["mainDetailed.segmap_group_size_30267"]
    max_num_groups_44390 = self.sizes["mainDetailed.segmap_num_groups_30269"]
    num_groups_30420 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_30418,
                                                            segmap_group_sizze_30419),
                                                  sext_i32_i64(max_num_groups_44390))))
    suff_outer_par_30424 = (self.sizes["mainDetailed.suff_outer_par_7"] <= nest_sizze_30418)
    y_30448 = (i32_res_27792 * i32_res_27792)
    comparatee_30449 = (m_27773 * y_30448)
    suff_outer_par_30450 = (self.sizes["mainDetailed.suff_outer_par_8"] <= comparatee_30449)
    nest_sizze_30470 = (i32_res_27786 * comparatee_30449)
    segred_group_sizze_30471 = self.sizes["mainDetailed.segred_group_size_30327"]
    max_num_groups_44391 = self.sizes["mainDetailed.segred_num_groups_30329"]
    num_groups_30472 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_30470,
                                                            segred_group_sizze_30471),
                                                  sext_i32_i64(max_num_groups_44391))))
    Tx_41280 = self.sizes["mainDetailed.Tx_41278"]
    Ty_41281 = self.sizes["mainDetailed.Ty_41279"]
    Ty_41282 = smin64(i32_res_27792, Ty_41281)
    Tx_41283 = smin64(i32_res_27792, Tx_41280)
    gridDim_zz_41286 = sdiv_up64(m_27773, np.int64(30))
    group_sizze_41289 = (Ty_41282 * Tx_41283)
    binop_x_43141 = (m_27773 * N_27774)
    bytes_43140 = (np.int64(4) * binop_x_43141)
    bytes_43185 = (np.int64(4) * comparatee_30449)
    bytes_43144 = (np.int64(4) * y_30448)
    binop_x_43288 = (i32_res_27792 * nest_sizze_30418)
    bytes_43286 = (np.int64(4) * binop_x_43288)
    bytes_43190 = (np.int64(4) * i32_res_27792)
    binop_x_43219 = (np.int64(30) * group_sizze_41289)
    bytes_43217 = (np.int64(4) * binop_x_43219)
    binop_x_44121 = (np.int64(4) * Ty_41282)
    binop_x_44122 = (Tx_41283 * binop_x_44121)
    sizze_44123 = (np.int64(30) * binop_x_44122)
    num_threads_44201 = (segmap_group_sizze_30242 * num_groups_30243)
    total_sizze_44202 = (bytes_43144 * num_threads_44201)
    num_threads_44203 = (segmap_group_sizze_30419 * num_groups_30420)
    total_sizze_44204 = (bytes_43190 * num_threads_44203)
    local_memory_capacity_44513 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44513)) and suff_outer_par_30216):
      mem_43142 = opencl_alloc(self, bytes_43140, "mem_43142")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43142, np.int64(0),
                                                  images_mem_43123, np.int64(0),
                                                  np.int64(1), N_27774, m_27773)
      mem_43188 = opencl_alloc(self, bytes_43185, "mem_43188")
      mem_43146 = opencl_alloc(self, total_sizze_44202, "mem_43146")
      if ((1 * (np.long(num_groups_30243) * np.long(segmap_group_sizze_30242))) != 0):
        self.mainDetailedzisegmap_30218_var.set_args(self.global_failure,
                                                     np.int64(N_27772),
                                                     np.int64(m_27773),
                                                     np.int32(n_27777),
                                                     np.int32(k2p2zq_27790),
                                                     np.int64(i32_res_27792),
                                                     np.int64(num_groups_30243),
                                                     binop_p_mem_43132,
                                                     mem_43139, mem_43142,
                                                     mem_43146, mem_43188)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_30218_var,
                                   ((np.long(num_groups_30243) * np.long(segmap_group_sizze_30242)),),
                                   (np.long(segmap_group_sizze_30242),))
        if synchronous:
          sync(self)
      mem_43142 = None
      mem_43146 = None
      mem_43289 = opencl_alloc(self, bytes_43286, "mem_43289")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43289, np.int64(0),
                                                  mem_43188, np.int64(0),
                                                  np.int64(1), m_27773,
                                                  (i32_res_27792 * i32_res_27792))
      mem_43188 = None
      defunc_3_map_res_mem_43291 = mem_43289
    else:
      local_memory_capacity_44512 = self.max_local_memory
      if (sle64(np.int64(0),
                sext_i32_i64(local_memory_capacity_44512)) and suff_outer_par_30424):
        mem_43207 = opencl_alloc(self, bytes_43286, "mem_43207")
        mem_43191 = opencl_alloc(self, total_sizze_44204, "mem_43191")
        if ((1 * (np.long(num_groups_30420) * np.long(segmap_group_sizze_30419))) != 0):
          self.mainDetailedzisegmap_30264_var.set_args(self.global_failure,
                                                       np.int64(m_27773),
                                                       np.int64(N_27774),
                                                       np.int32(n_27777),
                                                       np.int32(k2p2zq_27790),
                                                       np.int64(i32_res_27792),
                                                       np.int64(num_groups_30420),
                                                       images_mem_43123,
                                                       mem_43135, mem_43139,
                                                       mem_43191, mem_43207)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_30264_var,
                                     ((np.long(num_groups_30420) * np.long(segmap_group_sizze_30419)),),
                                     (np.long(segmap_group_sizze_30419),))
          if synchronous:
            sync(self)
        mem_43191 = None
        mem_43283 = opencl_alloc(self, bytes_43286, "mem_43283")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43283, np.int64(0),
                                                    mem_43207, np.int64(0),
                                                    np.int64(1),
                                                    (m_27773 * i32_res_27792),
                                                    i32_res_27792)
        mem_43207 = None
        defunc_3_map_res_mem_43285 = mem_43283
      else:
        local_memory_capacity_44511 = self.max_local_memory
        if (sle64(np.int64(120),
                  sext_i32_i64(local_memory_capacity_44511)) and suff_outer_par_30450):
          mem_43210 = opencl_alloc(self, bytes_43140, "mem_43210")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_43210, np.int64(0),
                                                      images_mem_43123,
                                                      np.int64(0), np.int64(1),
                                                      N_27774, m_27773)
          gridDim_x_41284 = sdiv_up64(i32_res_27792, Tx_41283)
          gridDim_y_41285 = sdiv_up64(i32_res_27792, Ty_41282)
          binop_x_41287 = (gridDim_y_41285 * gridDim_zz_41286)
          grid_sizze_41288 = (gridDim_x_41284 * binop_x_41287)
          count_shmem_41290 = sdiv_up64(np.int64(30), group_sizze_41289)
          mem_43270 = opencl_alloc(self, bytes_43286, "mem_43270")
          if ((1 * (np.long(grid_sizze_41288) * np.long(group_sizze_41289))) != 0):
            self.mainDetailedzisegmap_intragroup_41294_var.set_args(self.global_failure,
                                                                    cl.LocalMemory(np.long(np.int64(120))),
                                                                    np.int64(m_27773),
                                                                    np.int32(n_27777),
                                                                    np.int64(i32_res_27792),
                                                                    np.int64(Ty_41282),
                                                                    np.int64(Tx_41283),
                                                                    np.int64(gridDim_x_41284),
                                                                    np.int64(gridDim_y_41285),
                                                                    np.int64(group_sizze_41289),
                                                                    np.int64(count_shmem_41290),
                                                                    mem_43135,
                                                                    mem_43139,
                                                                    mem_43210,
                                                                    mem_43270)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_intragroup_41294_var,
                                       ((np.long(grid_sizze_41288) * np.long(group_sizze_41289)),),
                                       (np.long(group_sizze_41289),))
            if synchronous:
              sync(self)
          mem_43210 = None
          defunc_3_map_res_mem_43279 = mem_43270
        else:
          mem_43273 = opencl_alloc(self, bytes_43125, "mem_43273")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_43273, np.int64(0),
                                                      mem_43139, np.int64(0),
                                                      np.int64(1),
                                                      i32_res_27792, N_27772)
          mem_43278 = opencl_alloc(self, bytes_43286, "mem_43278")
          if slt64((i32_res_27786 * np.int64(2)), segred_group_sizze_30471):
            segment_sizze_nonzzero_44451 = smax64(np.int64(1), i32_res_27786)
            num_threads_44452 = (num_groups_30472 * segred_group_sizze_30471)
            if ((1 * (np.long(num_groups_30472) * np.long(segred_group_sizze_30471))) != 0):
              self.mainDetailedzisegred_small_30333_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_30471))),
                                                                 np.int64(N_27772),
                                                                 np.int64(m_27773),
                                                                 np.int64(N_27774),
                                                                 np.int64(i32_res_27786),
                                                                 np.int64(i32_res_27792),
                                                                 np.int64(num_groups_30472),
                                                                 images_mem_43123,
                                                                 binop_p_mem_43132,
                                                                 mem_43273,
                                                                 mem_43278,
                                                                 np.int64(segment_sizze_nonzzero_44451))
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainDetailedzisegred_small_30333_var,
                                         ((np.long(num_groups_30472) * np.long(segred_group_sizze_30471)),),
                                         (np.long(segred_group_sizze_30471),))
              if synchronous:
                sync(self)
          else:
            groups_per_segment_44472 = sdiv_up64(num_groups_30472,
                                                 smax64(np.int64(1),
                                                        ((m_27773 * i32_res_27792) * i32_res_27792)))
            elements_per_thread_44473 = sdiv_up64(i32_res_27786,
                                                  (segred_group_sizze_30471 * groups_per_segment_44472))
            virt_num_groups_44474 = (groups_per_segment_44472 * ((m_27773 * i32_res_27792) * i32_res_27792))
            num_threads_44475 = (num_groups_30472 * segred_group_sizze_30471)
            threads_per_segment_44476 = (groups_per_segment_44472 * segred_group_sizze_30471)
            group_res_arr_mem_44477 = opencl_alloc(self,
                                                   (np.int32(4) * (segred_group_sizze_30471 * virt_num_groups_44474)),
                                                   "group_res_arr_mem_44477")
            mainDetailedzicounter_mem_44479 = self.mainDetailedzicounter_mem_44479
            if ((1 * (np.long(num_groups_30472) * np.long(segred_group_sizze_30471))) != 0):
              self.mainDetailedzisegred_large_30333_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(np.int32(1))),
                                                                 cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_30471))),
                                                                 np.int64(N_27772),
                                                                 np.int64(N_27774),
                                                                 np.int64(i32_res_27786),
                                                                 np.int64(i32_res_27792),
                                                                 np.int64(num_groups_30472),
                                                                 images_mem_43123,
                                                                 binop_p_mem_43132,
                                                                 mem_43273,
                                                                 mem_43278,
                                                                 np.int64(groups_per_segment_44472),
                                                                 np.int64(elements_per_thread_44473),
                                                                 np.int64(virt_num_groups_44474),
                                                                 np.int64(threads_per_segment_44476),
                                                                 group_res_arr_mem_44477,
                                                                 mainDetailedzicounter_mem_44479)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainDetailedzisegred_large_30333_var,
                                         ((np.long(num_groups_30472) * np.long(segred_group_sizze_30471)),),
                                         (np.long(segred_group_sizze_30471),))
              if synchronous:
                sync(self)
          mem_43273 = None
          defunc_3_map_res_mem_43279 = mem_43278
        defunc_3_map_res_mem_43285 = defunc_3_map_res_mem_43279
      defunc_3_map_res_mem_43291 = defunc_3_map_res_mem_43285
    m_27923 = (np.int32(2) * k2p2zq_27790)
    nm_27924 = (k2p2zq_27790 * m_27923)
    i32_res_27925 = sext_i32_i64(nm_27924)
    bounds_invalid_upwards_27926 = slt64(i32_res_27925, np.int64(0))
    valid_27927 = not(bounds_invalid_upwards_27926)
    range_valid_c_27928 = True
    assert valid_27927, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:78:34-50\n   #2  bfastfinal.fut:49:35-50\n   #3  bfastfinal.fut:176:3-56\n   #4  bfastfinal.fut:172:1-176:56\n" % ("Range ",
                                                                                                                                                                                                                                        np.int64(0),
                                                                                                                                                                                                                                        "..",
                                                                                                                                                                                                                                        np.int64(1),
                                                                                                                                                                                                                                        "..<",
                                                                                                                                                                                                                                        i32_res_27925,
                                                                                                                                                                                                                                        " is invalid."))
    zzero_27933 = (m_27923 == np.int32(0))
    nonzzero_27934 = not(zzero_27933)
    nonzzero_cert_27935 = True
    assert nonzzero_27934, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:73:41-47\n   #1  helpers.fut:73:14-78:52\n   #2  bfastfinal.fut:49:35-50\n   #3  bfastfinal.fut:176:3-56\n   #4  bfastfinal.fut:172:1-176:56\n" % ("division by zero",))
    loop_nonempty_27936 = slt32(np.int32(0), k2p2zq_27790)
    loop_not_taken_27937 = not(loop_nonempty_27936)
    protect_assert_disj_27938 = (nonzzero_27934 or loop_not_taken_27937)
    nonzzero_cert_27939 = True
    assert protect_assert_disj_27938, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:59:43-49\n   #1  helpers.fut:59:16-65:44\n   #2  helpers.fut:79:15-33\n   #3  bfastfinal.fut:49:35-50\n   #4  bfastfinal.fut:176:3-56\n   #5  bfastfinal.fut:172:1-176:56\n" % ("division by zero",))
    i32_res_27940 = sext_i32_i64(m_27923)
    x_27941 = (i32_res_27792 * i32_res_27940)
    dim_ok_27942 = (x_27941 == i32_res_27925)
    dim_ok_cert_27943 = True
    assert dim_ok_27942, ("Error: %s\n\nBacktrace:\n-> #0  /prelude/array.fut:95:3-33\n   #1  helpers.fut:81:9-45\n   #2  bfastfinal.fut:49:35-50\n   #3  bfastfinal.fut:176:3-56\n   #4  bfastfinal.fut:172:1-176:56\n" % ("new shape has different number of elements than old shape",))
    j_m_i_27944 = (i32_res_27940 - i32_res_27792)
    empty_slice_27945 = (j_m_i_27944 == np.int64(0))
    m_27946 = (j_m_i_27944 - np.int64(1))
    i_p_m_t_s_27947 = (i32_res_27792 + m_27946)
    zzero_leq_i_p_m_t_s_27948 = sle64(np.int64(0), i_p_m_t_s_27947)
    i_p_m_t_s_leq_w_27949 = slt64(i_p_m_t_s_27947, i32_res_27940)
    i_lte_j_27950 = sle64(i32_res_27792, i32_res_27940)
    y_27951 = (i_lte_j_27873 and i_p_m_t_s_leq_w_27949)
    y_27952 = (zzero_leq_i_p_m_t_s_27948 and y_27951)
    y_27953 = (i_lte_j_27950 and y_27952)
    forwards_ok_27954 = (i_lte_j_27873 and y_27953)
    ok_or_empty_27955 = (empty_slice_27945 or forwards_ok_27954)
    index_ok_27956 = (ok_or_empty_27889 and ok_or_empty_27955)
    index_certs_27957 = True
    assert index_ok_27956, ("Error: %s%d%s%d%s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-88\n   #1  bfastfinal.fut:49:35-50\n   #2  bfastfinal.fut:176:3-56\n   #3  bfastfinal.fut:172:1-176:56\n" % ("Index [",
                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_27792,
                                                                                                                                                                                                                   ", ",
                                                                                                                                                                                                                   i32_res_27792,
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_27940,
                                                                                                                                                                                                                   "] out of bounds for array of shape [",
                                                                                                                                                                                                                   i32_res_27792,
                                                                                                                                                                                                                   "][",
                                                                                                                                                                                                                   i32_res_27940,
                                                                                                                                                                                                                   "]."))
    dim_match_27958 = (i32_res_27792 == j_m_i_27944)
    empty_or_match_cert_27959 = True
    assert dim_match_27958, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-103\n   #1  bfastfinal.fut:49:35-50\n   #2  bfastfinal.fut:176:3-56\n   #3  bfastfinal.fut:172:1-176:56\n" % ("Value of (core language) shape (",
                                                                                                                                                                                                             i32_res_27792,
                                                                                                                                                                                                             ", ",
                                                                                                                                                                                                             j_m_i_27944,
                                                                                                                                                                                                             ") cannot match shape of type `[",
                                                                                                                                                                                                             i32_res_27792,
                                                                                                                                                                                                             "][",
                                                                                                                                                                                                             i32_res_27792,
                                                                                                                                                                                                             "]f32`."))
    max_group_sizze_30686 = self.max_group_size
    fits_30687 = sle64(i32_res_27925, max_group_sizze_30686)
    suff_intra_par_30685 = (self.sizes["mainDetailed.suff_intra_par_11"] <= i32_res_27925)
    intra_suff_and_fits_30688 = (suff_intra_par_30685 and fits_30687)
    nest_sizze_31172 = (m_27773 * i32_res_27925)
    segmap_group_sizze_31173 = self.sizes["mainDetailed.segmap_group_size_31132"]
    suff_intra_par_31200 = (self.sizes["mainDetailed.suff_intra_par_13"] <= i32_res_27925)
    intra_suff_and_fits_31201 = (fits_30687 and suff_intra_par_31200)
    segmap_group_sizze_31237 = self.sizes["mainDetailed.segmap_group_size_31038"]
    segmap_group_sizze_31253 = self.sizes["mainDetailed.segmap_group_size_30971"]
    segmap_group_sizze_31287 = self.sizes["mainDetailed.segmap_group_size_30917"]
    y_31297 = (i32_res_27792 * j_m_i_27944)
    nest_sizze_31298 = (m_27773 * y_31297)
    segmap_group_sizze_31299 = self.sizes["mainDetailed.segmap_group_size_30752"]
    segmap_usable_groups_31238 = sdiv_up_safe64(m_27773,
                                                segmap_group_sizze_31237)
    segmap_usable_groups_31254 = sdiv_up_safe64(nest_sizze_31172,
                                                segmap_group_sizze_31253)
    segmap_usable_groups_31288 = sdiv_up_safe64(nest_sizze_31172,
                                                segmap_group_sizze_31287)
    bytes_43294 = (np.int64(4) * i32_res_27925)
    bytes_43317 = (np.int64(4) * nest_sizze_31172)
    binop_x_43368 = (j_m_i_27944 * nest_sizze_30418)
    bytes_43366 = (np.int64(4) * binop_x_43368)
    local_memory_capacity_44576 = self.max_local_memory
    if (sle64((bytes_43294 + bytes_43294),
              sext_i32_i64(local_memory_capacity_44576)) and intra_suff_and_fits_30688):
      mem_43315 = opencl_alloc(self, bytes_43286, "mem_43315")
      if ((1 * (np.long(m_27773) * np.long(i32_res_27925))) != 0):
        self.mainDetailedzisegmap_intragroup_30568_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_43294)),
                                                                cl.LocalMemory(np.long(bytes_43294)),
                                                                np.int32(k2p2zq_27790),
                                                                np.int64(i32_res_27792),
                                                                np.int32(m_27923),
                                                                np.int64(i32_res_27925),
                                                                np.int64(i32_res_27940),
                                                                defunc_3_map_res_mem_43291,
                                                                mem_43315)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_30568_var,
                                   ((np.long(m_27773) * np.long(i32_res_27925)),),
                                   (np.long(i32_res_27925),))
        if synchronous:
          sync(self)
      defunc_3_map_res_mem_43370 = mem_43315
    else:
      segmap_usable_groups_31174 = sdiv_up64(nest_sizze_31172,
                                             segmap_group_sizze_31173)
      mem_43319 = opencl_alloc(self, bytes_43317, "mem_43319")
      if ((1 * (np.long(segmap_usable_groups_31174) * np.long(segmap_group_sizze_31173))) != 0):
        self.mainDetailedzisegmap_31129_var.set_args(self.global_failure,
                                                     np.int64(m_27773),
                                                     np.int32(k2p2zq_27790),
                                                     np.int64(i32_res_27792),
                                                     np.int32(m_27923),
                                                     np.int64(i32_res_27925),
                                                     defunc_3_map_res_mem_43291,
                                                     mem_43319)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31129_var,
                                   ((np.long(segmap_usable_groups_31174) * np.long(segmap_group_sizze_31173)),),
                                   (np.long(segmap_group_sizze_31173),))
        if synchronous:
          sync(self)
      ctx_param_ext_43320 = m_27773
      ctx_param_ext_43321 = i32_res_27925
      ctx_param_ext_43322 = np.int64(0)
      ctx_param_ext_43323 = i32_res_27925
      ctx_param_ext_43324 = m_27773
      ctx_param_ext_43325 = np.int64(1)
      ctx_param_ext_43326 = i32_res_27925
      mem_param_43327 = mem_43319
      i_31190 = np.int32(0)
      one_45537 = np.int32(1)
      for counter_45536 in range(k2p2zq_27790):
        i32_res_31192 = sext_i32_i64(i_31190)
        local_memory_capacity_44536 = self.max_local_memory
        if intra_suff_and_fits_31201:
          gauss_jordan_res_ixfn_43349 = m_27773
        else:
          gauss_jordan_res_ixfn_43349 = ctx_param_ext_43324
        local_memory_capacity_44537 = self.max_local_memory
        if intra_suff_and_fits_31201:
          gauss_jordan_res_ixfn_43350 = i32_res_27925
        else:
          gauss_jordan_res_ixfn_43350 = ctx_param_ext_43326
        local_memory_capacity_44538 = self.max_local_memory
        if intra_suff_and_fits_31201:
          gauss_jordan_res_ixfn_43351 = m_27773
        else:
          gauss_jordan_res_ixfn_43351 = ctx_param_ext_43320
        local_memory_capacity_44539 = self.max_local_memory
        if intra_suff_and_fits_31201:
          gauss_jordan_res_ixfn_43352 = i32_res_27925
        else:
          gauss_jordan_res_ixfn_43352 = ctx_param_ext_43321
        local_memory_capacity_44540 = self.max_local_memory
        if intra_suff_and_fits_31201:
          gauss_jordan_res_ixfn_43353 = i32_res_27925
        else:
          gauss_jordan_res_ixfn_43353 = ctx_param_ext_43323
        local_memory_capacity_44541 = self.max_local_memory
        if intra_suff_and_fits_31201:
          gauss_jordan_res_ixfn_43354 = np.int64(1)
        else:
          gauss_jordan_res_ixfn_43354 = ctx_param_ext_43325
        local_memory_capacity_44542 = self.max_local_memory
        if intra_suff_and_fits_31201:
          gauss_jordan_res_ixfn_43355 = np.int64(0)
        else:
          gauss_jordan_res_ixfn_43355 = ctx_param_ext_43322
        local_memory_capacity_44570 = self.max_local_memory
        if ((sle64(np.int64(0),
                   sext_i32_i64(local_memory_capacity_44570)) and sle64(bytes_43294,
                                                                        sext_i32_i64(local_memory_capacity_44570))) and intra_suff_and_fits_31201):
          mem_43332 = opencl_alloc(self, bytes_43317, "mem_43332")
          group_sizze_44546 = self.sizes["mainDetailed.group_size_44546"]
          num_groups_44547 = sdiv_up64((m_27773 * i32_res_27925),
                                       group_sizze_44546)
          if ((1 * (np.long(num_groups_44547) * np.long(group_sizze_44546))) != 0):
            self.mainDetailedzicopy_44543_var.set_args(np.int64(m_27773),
                                                       np.int64(i32_res_27925),
                                                       np.int64(ctx_param_ext_43322),
                                                       np.int64(ctx_param_ext_43323),
                                                       np.int64(ctx_param_ext_43325),
                                                       mem_param_43327,
                                                       mem_43332)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzicopy_44543_var,
                                       ((np.long(num_groups_44547) * np.long(group_sizze_44546)),),
                                       (np.long(group_sizze_44546),))
            if synchronous:
              sync(self)
          mem_43340 = opencl_alloc(self, bytes_43317, "mem_43340")
          if ((1 * (np.long(m_27773) * np.long(i32_res_27925))) != 0):
            self.mainDetailedzisegmap_intragroup_30795_var.set_args(self.global_failure,
                                                                    cl.LocalMemory(np.long(bytes_43294)),
                                                                    np.int64(m_27773),
                                                                    np.int32(k2p2zq_27790),
                                                                    np.int32(m_27923),
                                                                    np.int64(i32_res_27925),
                                                                    np.int32(i_31190),
                                                                    np.int64(i32_res_31192),
                                                                    np.int64(ctx_param_ext_43322),
                                                                    np.int64(ctx_param_ext_43323),
                                                                    np.int64(ctx_param_ext_43325),
                                                                    mem_param_43327,
                                                                    mem_43332,
                                                                    mem_43340)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_intragroup_30795_var,
                                       ((np.long(m_27773) * np.long(i32_res_27925)),),
                                       (np.long(i32_res_27925),))
            if synchronous:
              sync(self)
          mem_43332 = None
          gauss_jordan_res_mem_43356 = mem_43340
        else:
          mem_43343 = opencl_alloc(self, m_27773, "mem_43343")
          if ((1 * (np.long(segmap_usable_groups_31238) * np.long(segmap_group_sizze_31237))) != 0):
            self.mainDetailedzisegmap_31036_var.set_args(self.global_failure,
                                                         np.int64(m_27773),
                                                         np.int64(i32_res_31192),
                                                         np.int64(ctx_param_ext_43322),
                                                         np.int64(ctx_param_ext_43323),
                                                         np.int64(ctx_param_ext_43325),
                                                         mem_param_43327,
                                                         mem_43343)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_31036_var,
                                       ((np.long(segmap_usable_groups_31238) * np.long(segmap_group_sizze_31237)),),
                                       (np.long(segmap_group_sizze_31237),))
            if synchronous:
              sync(self)
          mem_43347 = opencl_alloc(self, bytes_43317, "mem_43347")
          if ((1 * (np.long(segmap_usable_groups_31254) * np.long(segmap_group_sizze_31253))) != 0):
            self.mainDetailedzisegmap_30968_var.set_args(self.global_failure,
                                                         np.int64(m_27773),
                                                         np.int32(k2p2zq_27790),
                                                         np.int32(m_27923),
                                                         np.int64(i32_res_27925),
                                                         np.int32(i_31190),
                                                         np.int64(i32_res_31192),
                                                         np.int64(ctx_param_ext_43322),
                                                         np.int64(ctx_param_ext_43323),
                                                         np.int64(ctx_param_ext_43325),
                                                         mem_param_43327,
                                                         mem_43343, mem_43347)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_30968_var,
                                       ((np.long(segmap_usable_groups_31254) * np.long(segmap_group_sizze_31253)),),
                                       (np.long(segmap_group_sizze_31253),))
            if synchronous:
              sync(self)
          mem_43343 = None
          if ((1 * (np.long(segmap_usable_groups_31288) * np.long(segmap_group_sizze_31287))) != 0):
            self.mainDetailedzisegmap_30914_var.set_args(self.global_failure,
                                                         np.int64(m_27773),
                                                         np.int64(i32_res_27925),
                                                         np.int64(ctx_param_ext_43322),
                                                         np.int64(ctx_param_ext_43323),
                                                         np.int64(ctx_param_ext_43325),
                                                         mem_param_43327,
                                                         mem_43347)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_30914_var,
                                       ((np.long(segmap_usable_groups_31288) * np.long(segmap_group_sizze_31287)),),
                                       (np.long(segmap_group_sizze_31287),))
            if synchronous:
              sync(self)
          mem_43347 = None
          gauss_jordan_res_mem_43356 = mem_param_43327
        ctx_param_ext_tmp_44527 = gauss_jordan_res_ixfn_43351
        ctx_param_ext_tmp_44528 = gauss_jordan_res_ixfn_43352
        ctx_param_ext_tmp_44529 = gauss_jordan_res_ixfn_43355
        ctx_param_ext_tmp_44530 = gauss_jordan_res_ixfn_43353
        ctx_param_ext_tmp_44531 = gauss_jordan_res_ixfn_43349
        ctx_param_ext_tmp_44532 = gauss_jordan_res_ixfn_43354
        ctx_param_ext_tmp_44533 = gauss_jordan_res_ixfn_43350
        mem_param_tmp_44534 = gauss_jordan_res_mem_43356
        ctx_param_ext_43320 = ctx_param_ext_tmp_44527
        ctx_param_ext_43321 = ctx_param_ext_tmp_44528
        ctx_param_ext_43322 = ctx_param_ext_tmp_44529
        ctx_param_ext_43323 = ctx_param_ext_tmp_44530
        ctx_param_ext_43324 = ctx_param_ext_tmp_44531
        ctx_param_ext_43325 = ctx_param_ext_tmp_44532
        ctx_param_ext_43326 = ctx_param_ext_tmp_44533
        mem_param_43327 = mem_param_tmp_44534
        i_31190 += one_45537
      gauss_jordan_res_r_ixfn_43357 = ctx_param_ext_43320
      gauss_jordan_res_r_ixfn_43358 = ctx_param_ext_43321
      gauss_jordan_res_r_ixfn_43359 = ctx_param_ext_43322
      gauss_jordan_res_r_ixfn_43360 = ctx_param_ext_43323
      gauss_jordan_res_r_ixfn_43361 = ctx_param_ext_43324
      gauss_jordan_res_r_ixfn_43362 = ctx_param_ext_43325
      gauss_jordan_res_r_ixfn_43363 = ctx_param_ext_43326
      gauss_jordan_res_r_mem_43364 = mem_param_43327
      mem_43319 = None
      segmap_usable_groups_31300 = sdiv_up64(nest_sizze_31298,
                                             segmap_group_sizze_31299)
      mem_43369 = opencl_alloc(self, bytes_43366, "mem_43369")
      if ((1 * (np.long(segmap_usable_groups_31300) * np.long(segmap_group_sizze_31299))) != 0):
        self.mainDetailedzisegmap_30748_var.set_args(self.global_failure,
                                                     np.int64(m_27773),
                                                     np.int64(i32_res_27792),
                                                     np.int64(i32_res_27925),
                                                     np.int64(i32_res_27940),
                                                     np.int64(x_27941),
                                                     np.int64(j_m_i_27944),
                                                     np.int64(gauss_jordan_res_r_ixfn_43359),
                                                     np.int64(gauss_jordan_res_r_ixfn_43360),
                                                     np.int64(gauss_jordan_res_r_ixfn_43362),
                                                     gauss_jordan_res_r_mem_43364,
                                                     mem_43369)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_30748_var,
                                   ((np.long(segmap_usable_groups_31300) * np.long(segmap_group_sizze_31299)),),
                                   (np.long(segmap_group_sizze_31299),))
        if synchronous:
          sync(self)
      gauss_jordan_res_r_mem_43364 = None
      defunc_3_map_res_mem_43370 = mem_43369
    defunc_3_map_res_mem_43291 = None
    suff_outer_par_31308 = (self.sizes["mainDetailed.suff_outer_par_16"] <= m_27773)
    segmap_group_sizze_31330 = self.sizes["mainDetailed.segmap_group_size_31312"]
    max_num_groups_44577 = self.sizes["mainDetailed.segmap_num_groups_31314"]
    num_groups_31331 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27773,
                                                            segmap_group_sizze_31330),
                                                  sext_i32_i64(max_num_groups_44577))))
    suff_outer_par_31415 = (self.sizes["mainDetailed.suff_outer_par_17"] <= nest_sizze_30418)
    nest_sizze_31431 = (i32_res_27786 * nest_sizze_30418)
    segred_group_sizze_31432 = self.sizes["mainDetailed.segred_group_size_31374"]
    max_num_groups_44578 = self.sizes["mainDetailed.segred_num_groups_31376"]
    num_groups_31433 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_31431,
                                                            segred_group_sizze_31432),
                                                  sext_i32_i64(max_num_groups_44578))))
    Ty_41428 = self.sizes["mainDetailed.Ty_41425"]
    Ry_41429 = self.sizes["mainDetailed.Ry_41427"]
    Tx_41430 = self.sizes["mainDetailed.Tx_41424"]
    Rx_41431 = self.sizes["mainDetailed.Rx_41426"]
    Tk_41432 = self.sizes["mainDetailed.Tk_41423"]
    TxRx_41435 = (Tx_41430 * Rx_41431)
    TyRy_41436 = (Ty_41428 * Ry_41429)
    a_loc_szz_41438 = (Tk_41432 * TyRy_41436)
    binop_x_41439 = (Tx_41430 * Tk_41432)
    b_loc_szz_41440 = (Rx_41431 * binop_x_41439)
    group_sizze_41444 = (Ty_41428 * Tx_41430)
    bytes_43389 = (np.int64(4) * nest_sizze_30418)
    binop_x_43403 = (Ry_41429 * group_sizze_41444)
    binop_x_43404 = (Rx_41431 * binop_x_43403)
    bytes_43401 = (np.int64(4) * binop_x_43404)
    binop_x_43395 = (Ry_41429 * Rx_41431)
    bytes_43394 = (np.int64(4) * binop_x_43395)
    bytes_43406 = (np.int64(4) * a_loc_szz_41438)
    bytes_43408 = (np.int64(4) * b_loc_szz_41440)
    bytes_43477 = (np.int64(4) * binop_x_43403)
    binop_x_43483 = (Rx_41431 * group_sizze_41444)
    bytes_43481 = (np.int64(4) * binop_x_43483)
    bytes_43469 = (np.int64(4) * Ry_41429)
    bytes_43471 = (np.int64(4) * Rx_41431)
    binop_x_44138 = (np.int64(4) * Ty_41428)
    binop_x_44139 = (Tx_41430 * binop_x_44138)
    binop_x_44140 = (Ry_41429 * binop_x_44139)
    sizze_44141 = (Rx_41431 * binop_x_44140)
    num_threads_44214 = (segmap_group_sizze_31330 * num_groups_31331)
    total_sizze_44215 = (bytes_43190 * num_threads_44214)
    local_memory_capacity_44708 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44708)) and suff_outer_par_31308):
      mem_43373 = opencl_alloc(self, bytes_43140, "mem_43373")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43373, np.int64(0),
                                                  images_mem_43123, np.int64(0),
                                                  np.int64(1), N_27774, m_27773)
      mem_43391 = opencl_alloc(self, bytes_43389, "mem_43391")
      mem_43376 = opencl_alloc(self, total_sizze_44215, "mem_43376")
      if ((1 * (np.long(num_groups_31331) * np.long(segmap_group_sizze_31330))) != 0):
        self.mainDetailedzisegmap_31310_var.set_args(self.global_failure,
                                                     np.int64(N_27772),
                                                     np.int64(m_27773),
                                                     np.int32(n_27777),
                                                     np.int32(k2p2zq_27790),
                                                     np.int64(i32_res_27792),
                                                     np.int64(num_groups_31331),
                                                     binop_p_mem_43132,
                                                     mem_43373, mem_43376,
                                                     mem_43391)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31310_var,
                                   ((np.long(num_groups_31331) * np.long(segmap_group_sizze_31330)),),
                                   (np.long(segmap_group_sizze_31330),))
        if synchronous:
          sync(self)
      mem_43373 = None
      mem_43376 = None
      mem_43589 = opencl_alloc(self, bytes_43389, "mem_43589")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43589, np.int64(0),
                                                  mem_43391, np.int64(0),
                                                  np.int64(1), m_27773,
                                                  i32_res_27792)
      mem_43391 = None
      defunc_3_map_res_mem_43591 = mem_43589
    else:
      local_memory_capacity_44707 = self.max_local_memory
      if (sle64((bytes_43406 + bytes_43408),
                sext_i32_i64(local_memory_capacity_44707)) and suff_outer_par_31415):
        tk_div_tx_41433 = sdiv_up64(Tk_41432, Tx_41430)
        tk_div_ty_41434 = sdiv_up64(Tk_41432, Ty_41428)
        gridDim_x_41441 = sdiv_up64(i32_res_27792, TxRx_41435)
        gridDim_y_41442 = sdiv_up64(m_27773, TyRy_41436)
        grid_sizze_41443 = (gridDim_x_41441 * gridDim_y_41442)
        full_tiles_41472 = squot64(i32_res_27786, Tk_41432)
        kk_41679 = (Tk_41432 * full_tiles_41472)
        mem_43581 = opencl_alloc(self, bytes_43389, "mem_43581")
        if ((1 * (np.long(grid_sizze_41443) * np.long(group_sizze_41444))) != 0):
          self.mainDetailedzisegmap_intragroup_41447_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_43408)),
                                                                  cl.LocalMemory(np.long(bytes_43406)),
                                                                  np.int64(m_27773),
                                                                  np.int64(N_27774),
                                                                  np.int64(i32_res_27786),
                                                                  np.int64(i32_res_27792),
                                                                  np.int64(gridDim_x_41441),
                                                                  np.int64(full_tiles_41472),
                                                                  np.int64(kk_41679),
                                                                  images_mem_43123,
                                                                  mem_43135,
                                                                  mem_43581)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_41447_var,
                                     ((np.long(grid_sizze_41443) * np.long(group_sizze_41444)),),
                                     (np.long(group_sizze_41444),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43586 = mem_43581
      else:
        mem_43585 = opencl_alloc(self, bytes_43389, "mem_43585")
        if slt64((i32_res_27786 * np.int64(2)), segred_group_sizze_31432):
          segment_sizze_nonzzero_44647 = smax64(np.int64(1), i32_res_27786)
          num_threads_44648 = (num_groups_31433 * segred_group_sizze_31432)
          if ((1 * (np.long(num_groups_31433) * np.long(segred_group_sizze_31432))) != 0):
            self.mainDetailedzisegred_small_31380_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31432))),
                                                               np.int64(N_27772),
                                                               np.int64(m_27773),
                                                               np.int64(N_27774),
                                                               np.int64(i32_res_27786),
                                                               np.int64(i32_res_27792),
                                                               np.int64(num_groups_31433),
                                                               images_mem_43123,
                                                               binop_p_mem_43132,
                                                               mem_43585,
                                                               np.int64(segment_sizze_nonzzero_44647))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_31380_var,
                                       ((np.long(num_groups_31433) * np.long(segred_group_sizze_31432)),),
                                       (np.long(segred_group_sizze_31432),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44668 = sdiv_up64(num_groups_31433,
                                               smax64(np.int64(1),
                                                      (m_27773 * i32_res_27792)))
          elements_per_thread_44669 = sdiv_up64(i32_res_27786,
                                                (segred_group_sizze_31432 * groups_per_segment_44668))
          virt_num_groups_44670 = (groups_per_segment_44668 * (m_27773 * i32_res_27792))
          num_threads_44671 = (num_groups_31433 * segred_group_sizze_31432)
          threads_per_segment_44672 = (groups_per_segment_44668 * segred_group_sizze_31432)
          group_res_arr_mem_44673 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_31432 * virt_num_groups_44670)),
                                                 "group_res_arr_mem_44673")
          mainDetailedzicounter_mem_44675 = self.mainDetailedzicounter_mem_44675
          if ((1 * (np.long(num_groups_31433) * np.long(segred_group_sizze_31432))) != 0):
            self.mainDetailedzisegred_large_31380_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31432))),
                                                               np.int64(N_27772),
                                                               np.int64(N_27774),
                                                               np.int64(i32_res_27786),
                                                               np.int64(i32_res_27792),
                                                               np.int64(num_groups_31433),
                                                               images_mem_43123,
                                                               binop_p_mem_43132,
                                                               mem_43585,
                                                               np.int64(groups_per_segment_44668),
                                                               np.int64(elements_per_thread_44669),
                                                               np.int64(virt_num_groups_44670),
                                                               np.int64(threads_per_segment_44672),
                                                               group_res_arr_mem_44673,
                                                               mainDetailedzicounter_mem_44675)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_31380_var,
                                       ((np.long(num_groups_31433) * np.long(segred_group_sizze_31432)),),
                                       (np.long(segred_group_sizze_31432),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43586 = mem_43585
      defunc_3_map_res_mem_43591 = defunc_3_map_res_mem_43586
    binop_p_mem_43132 = None
    mem_43135 = None
    suff_outer_par_31449 = (self.sizes["mainDetailed.suff_outer_par_18"] <= m_27773)
    segmap_group_sizze_31470 = self.sizes["mainDetailed.segmap_group_size_31453"]
    max_num_groups_44709 = self.sizes["mainDetailed.segmap_num_groups_31455"]
    num_groups_31471 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27773,
                                                            segmap_group_sizze_31470),
                                                  sext_i32_i64(max_num_groups_44709))))
    suff_outer_par_31550 = (self.sizes["mainDetailed.suff_outer_par_19"] <= nest_sizze_30418)
    segred_group_sizze_31565 = self.sizes["mainDetailed.segred_group_size_31511"]
    max_num_groups_44710 = self.sizes["mainDetailed.segred_num_groups_31513"]
    num_groups_31566 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_43288,
                                                            segred_group_sizze_31565),
                                                  sext_i32_i64(max_num_groups_44710))))
    tile_sizze_41891 = self.sizes["mainDetailed.tile_size_41890"]
    group_sizze_41892 = (tile_sizze_41891 * tile_sizze_41891)
    bytes_43623 = (np.int64(4) * group_sizze_41892)
    binop_x_44154 = (np.int64(4) * tile_sizze_41891)
    sizze_44155 = (tile_sizze_41891 * binop_x_44154)
    num_threads_44218 = (segmap_group_sizze_31470 * num_groups_31471)
    total_sizze_44219 = (bytes_43190 * num_threads_44218)
    local_memory_capacity_44796 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44796)) and suff_outer_par_31449):
      mem_43595 = opencl_alloc(self, bytes_43185, "mem_43595")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43595, np.int64(0),
                                                  defunc_3_map_res_mem_43370,
                                                  np.int64(0), np.int64(1),
                                                  (i32_res_27792 * i32_res_27792),
                                                  m_27773)
      mem_43598 = opencl_alloc(self, bytes_43389, "mem_43598")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43598, np.int64(0),
                                                  defunc_3_map_res_mem_43591,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_27792, m_27773)
      mem_43616 = opencl_alloc(self, bytes_43389, "mem_43616")
      mem_43601 = opencl_alloc(self, total_sizze_44219, "mem_43601")
      if ((1 * (np.long(num_groups_31471) * np.long(segmap_group_sizze_31470))) != 0):
        self.mainDetailedzisegmap_31451_var.set_args(self.global_failure,
                                                     np.int64(m_27773),
                                                     np.int32(k2p2zq_27790),
                                                     np.int64(i32_res_27792),
                                                     np.int64(num_groups_31471),
                                                     mem_43595, mem_43598,
                                                     mem_43601, mem_43616)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31451_var,
                                   ((np.long(num_groups_31471) * np.long(segmap_group_sizze_31470)),),
                                   (np.long(segmap_group_sizze_31470),))
        if synchronous:
          sync(self)
      mem_43595 = None
      mem_43598 = None
      mem_43601 = None
      mem_43655 = opencl_alloc(self, bytes_43389, "mem_43655")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43655, np.int64(0),
                                                  mem_43616, np.int64(0),
                                                  np.int64(1), m_27773,
                                                  i32_res_27792)
      mem_43616 = None
      defunc_4_map_res_mem_43657 = mem_43655
    else:
      local_memory_capacity_44795 = self.max_local_memory
      if (sle64((bytes_43623 + bytes_43623),
                sext_i32_i64(local_memory_capacity_44795)) and suff_outer_par_31550):
        mem_43620 = opencl_alloc(self, bytes_43286, "mem_43620")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43620, np.int64(0),
                                                    defunc_3_map_res_mem_43370,
                                                    np.int64(0), np.int64(1),
                                                    i32_res_27792,
                                                    (m_27773 * i32_res_27792))
        num_groups_x_41893 = sdiv_up64(m_27773, tile_sizze_41891)
        num_groups_y_41894 = sdiv_up64(i32_res_27792, tile_sizze_41891)
        num_groups_top_41895 = (num_groups_x_41893 * num_groups_y_41894)
        num_whole_tiles_41912 = squot64(i32_res_27792, tile_sizze_41891)
        residual_input_42039 = srem64(i32_res_27792, tile_sizze_41891)
        cond_42040 = (residual_input_42039 == np.int64(0))
        mem_43647 = opencl_alloc(self, bytes_43389, "mem_43647")
        if ((1 * (np.long(num_groups_top_41895) * np.long(group_sizze_41892))) != 0):
          self.mainDetailedzisegmap_intragroup_41896_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_43623)),
                                                                  cl.LocalMemory(np.long(bytes_43623)),
                                                                  np.int64(m_27773),
                                                                  np.int64(i32_res_27792),
                                                                  np.int64(num_groups_y_41894),
                                                                  np.int64(num_whole_tiles_41912),
                                                                  np.int64(residual_input_42039),
                                                                  np.byte(cond_42040),
                                                                  defunc_3_map_res_mem_43591,
                                                                  mem_43620,
                                                                  mem_43647)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_41896_var,
                                     ((np.long(num_groups_top_41895) * np.long(group_sizze_41892)),),
                                     (np.long(group_sizze_41892),))
          if synchronous:
            sync(self)
        mem_43620 = None
        defunc_4_map_res_mem_43652 = mem_43647
      else:
        mem_43651 = opencl_alloc(self, bytes_43389, "mem_43651")
        if slt64((i32_res_27792 * np.int64(2)), segred_group_sizze_31565):
          segment_sizze_nonzzero_44735 = smax64(np.int64(1), i32_res_27792)
          num_threads_44736 = (num_groups_31566 * segred_group_sizze_31565)
          if ((1 * (np.long(num_groups_31566) * np.long(segred_group_sizze_31565))) != 0):
            self.mainDetailedzisegred_small_31517_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31565))),
                                                               np.int64(m_27773),
                                                               np.int64(i32_res_27792),
                                                               np.int64(num_groups_31566),
                                                               defunc_3_map_res_mem_43370,
                                                               defunc_3_map_res_mem_43591,
                                                               mem_43651,
                                                               np.int64(segment_sizze_nonzzero_44735))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_31517_var,
                                       ((np.long(num_groups_31566) * np.long(segred_group_sizze_31565)),),
                                       (np.long(segred_group_sizze_31565),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44756 = sdiv_up64(num_groups_31566,
                                               smax64(np.int64(1),
                                                      (m_27773 * i32_res_27792)))
          elements_per_thread_44757 = sdiv_up64(i32_res_27792,
                                                (segred_group_sizze_31565 * groups_per_segment_44756))
          virt_num_groups_44758 = (groups_per_segment_44756 * (m_27773 * i32_res_27792))
          num_threads_44759 = (num_groups_31566 * segred_group_sizze_31565)
          threads_per_segment_44760 = (groups_per_segment_44756 * segred_group_sizze_31565)
          group_res_arr_mem_44761 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_31565 * virt_num_groups_44758)),
                                                 "group_res_arr_mem_44761")
          mainDetailedzicounter_mem_44763 = self.mainDetailedzicounter_mem_44763
          if ((1 * (np.long(num_groups_31566) * np.long(segred_group_sizze_31565))) != 0):
            self.mainDetailedzisegred_large_31517_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31565))),
                                                               np.int64(i32_res_27792),
                                                               np.int64(num_groups_31566),
                                                               defunc_3_map_res_mem_43370,
                                                               defunc_3_map_res_mem_43591,
                                                               mem_43651,
                                                               np.int64(groups_per_segment_44756),
                                                               np.int64(elements_per_thread_44757),
                                                               np.int64(virt_num_groups_44758),
                                                               np.int64(threads_per_segment_44760),
                                                               group_res_arr_mem_44761,
                                                               mainDetailedzicounter_mem_44763)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_31517_var,
                                       ((np.long(num_groups_31566) * np.long(segred_group_sizze_31565)),),
                                       (np.long(segred_group_sizze_31565),))
            if synchronous:
              sync(self)
        defunc_4_map_res_mem_43652 = mem_43651
      defunc_4_map_res_mem_43657 = defunc_4_map_res_mem_43652
    defunc_3_map_res_mem_43370 = None
    defunc_3_map_res_mem_43591 = None
    suff_outer_par_31581 = (self.sizes["mainDetailed.suff_outer_par_20"] <= m_27773)
    segmap_group_sizze_31601 = self.sizes["mainDetailed.segmap_group_size_31585"]
    max_num_groups_44797 = self.sizes["mainDetailed.segmap_num_groups_31587"]
    num_groups_31602 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27773,
                                                            segmap_group_sizze_31601),
                                                  sext_i32_i64(max_num_groups_44797))))
    comparatee_31677 = (N_27772 * m_27773)
    suff_outer_par_31678 = (self.sizes["mainDetailed.suff_outer_par_21"] <= comparatee_31677)
    nest_sizze_31692 = (i32_res_27792 * comparatee_31677)
    segred_group_sizze_31693 = self.sizes["mainDetailed.segred_group_size_31641"]
    max_num_groups_44798 = self.sizes["mainDetailed.segred_num_groups_31643"]
    num_groups_31694 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_31692,
                                                            segred_group_sizze_31693),
                                                  sext_i32_i64(max_num_groups_44798))))
    Ty_42169 = self.sizes["mainDetailed.Ty_42166"]
    Ry_42170 = self.sizes["mainDetailed.Ry_42168"]
    Tx_42171 = self.sizes["mainDetailed.Tx_42165"]
    Rx_42172 = self.sizes["mainDetailed.Rx_42167"]
    Tk_42173 = self.sizes["mainDetailed.Tk_42164"]
    TxRx_42176 = (Tx_42171 * Rx_42172)
    TyRy_42177 = (Ty_42169 * Ry_42170)
    a_loc_szz_42179 = (Tk_42173 * TyRy_42177)
    binop_x_42180 = (Tx_42171 * Tk_42173)
    b_loc_szz_42181 = (Rx_42172 * binop_x_42180)
    group_sizze_42185 = (Ty_42169 * Tx_42171)
    bytes_43676 = (np.int64(4) * comparatee_31677)
    bytes_43662 = (np.int64(4) * N_27772)
    binop_x_43693 = (Ry_42170 * group_sizze_42185)
    binop_x_43694 = (Rx_42172 * binop_x_43693)
    bytes_43691 = (np.int64(4) * binop_x_43694)
    binop_x_43685 = (Ry_42170 * Rx_42172)
    bytes_43684 = (np.int64(4) * binop_x_43685)
    bytes_43696 = (np.int64(4) * a_loc_szz_42179)
    bytes_43698 = (np.int64(4) * b_loc_szz_42181)
    bytes_43767 = (np.int64(4) * binop_x_43693)
    binop_x_43773 = (Rx_42172 * group_sizze_42185)
    bytes_43771 = (np.int64(4) * binop_x_43773)
    bytes_43759 = (np.int64(4) * Ry_42170)
    bytes_43761 = (np.int64(4) * Rx_42172)
    binop_x_44168 = (np.int64(4) * Ty_42169)
    binop_x_44169 = (Tx_42171 * binop_x_44168)
    binop_x_44170 = (Ry_42170 * binop_x_44169)
    sizze_44171 = (Rx_42172 * binop_x_44170)
    num_threads_44222 = (segmap_group_sizze_31601 * num_groups_31602)
    total_sizze_44223 = (bytes_43662 * num_threads_44222)
    local_memory_capacity_44928 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44928)) and suff_outer_par_31581):
      mem_43660 = opencl_alloc(self, bytes_43389, "mem_43660")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43660, np.int64(0),
                                                  defunc_4_map_res_mem_43657,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_27792, m_27773)
      mem_43678 = opencl_alloc(self, bytes_43676, "mem_43678")
      mem_43663 = opencl_alloc(self, total_sizze_44223, "mem_43663")
      if ((1 * (np.long(num_groups_31602) * np.long(segmap_group_sizze_31601))) != 0):
        self.mainDetailedzisegmap_31583_var.set_args(self.global_failure,
                                                     np.int64(N_27772),
                                                     np.int64(m_27773),
                                                     np.int32(k2p2zq_27790),
                                                     np.int64(i32_res_27792),
                                                     np.int64(num_groups_31602),
                                                     mem_43139, mem_43660,
                                                     mem_43663, mem_43678)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31583_var,
                                   ((np.long(num_groups_31602) * np.long(segmap_group_sizze_31601)),),
                                   (np.long(segmap_group_sizze_31601),))
        if synchronous:
          sync(self)
      mem_43660 = None
      mem_43663 = None
      mem_43879 = opencl_alloc(self, bytes_43676, "mem_43879")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43879, np.int64(0),
                                                  mem_43678, np.int64(0),
                                                  np.int64(1), m_27773, N_27772)
      mem_43678 = None
      defunc_3_map_res_mem_43881 = mem_43879
    else:
      local_memory_capacity_44927 = self.max_local_memory
      if (sle64((bytes_43696 + bytes_43698),
                sext_i32_i64(local_memory_capacity_44927)) and suff_outer_par_31678):
        mem_43681 = opencl_alloc(self, bytes_43125, "mem_43681")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43681, np.int64(0),
                                                    mem_43139, np.int64(0),
                                                    np.int64(1), i32_res_27792,
                                                    N_27772)
        tk_div_tx_42174 = sdiv_up64(Tk_42173, Tx_42171)
        tk_div_ty_42175 = sdiv_up64(Tk_42173, Ty_42169)
        gridDim_x_42182 = sdiv_up64(N_27772, TxRx_42176)
        gridDim_y_42183 = sdiv_up64(m_27773, TyRy_42177)
        grid_sizze_42184 = (gridDim_x_42182 * gridDim_y_42183)
        full_tiles_42213 = squot64(i32_res_27792, Tk_42173)
        kk_42416 = (Tk_42173 * full_tiles_42213)
        mem_43871 = opencl_alloc(self, bytes_43676, "mem_43871")
        if ((1 * (np.long(grid_sizze_42184) * np.long(group_sizze_42185))) != 0):
          self.mainDetailedzisegmap_intragroup_42188_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_43698)),
                                                                  cl.LocalMemory(np.long(bytes_43696)),
                                                                  np.int64(N_27772),
                                                                  np.int64(m_27773),
                                                                  np.int64(i32_res_27792),
                                                                  np.int64(gridDim_x_42182),
                                                                  np.int64(full_tiles_42213),
                                                                  np.int64(kk_42416),
                                                                  defunc_4_map_res_mem_43657,
                                                                  mem_43681,
                                                                  mem_43871)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_42188_var,
                                     ((np.long(grid_sizze_42184) * np.long(group_sizze_42185)),),
                                     (np.long(group_sizze_42185),))
          if synchronous:
            sync(self)
        mem_43681 = None
        defunc_3_map_res_mem_43876 = mem_43871
      else:
        mem_43875 = opencl_alloc(self, bytes_43676, "mem_43875")
        if slt64((i32_res_27792 * np.int64(2)), segred_group_sizze_31693):
          segment_sizze_nonzzero_44867 = smax64(np.int64(1), i32_res_27792)
          num_threads_44868 = (num_groups_31694 * segred_group_sizze_31693)
          if ((1 * (np.long(num_groups_31694) * np.long(segred_group_sizze_31693))) != 0):
            self.mainDetailedzisegred_small_31647_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31693))),
                                                               np.int64(N_27772),
                                                               np.int64(m_27773),
                                                               np.int64(i32_res_27792),
                                                               np.int64(num_groups_31694),
                                                               mem_43139,
                                                               defunc_4_map_res_mem_43657,
                                                               mem_43875,
                                                               np.int64(segment_sizze_nonzzero_44867))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_31647_var,
                                       ((np.long(num_groups_31694) * np.long(segred_group_sizze_31693)),),
                                       (np.long(segred_group_sizze_31693),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44888 = sdiv_up64(num_groups_31694,
                                               smax64(np.int64(1),
                                                      (m_27773 * N_27772)))
          elements_per_thread_44889 = sdiv_up64(i32_res_27792,
                                                (segred_group_sizze_31693 * groups_per_segment_44888))
          virt_num_groups_44890 = (groups_per_segment_44888 * (m_27773 * N_27772))
          num_threads_44891 = (num_groups_31694 * segred_group_sizze_31693)
          threads_per_segment_44892 = (groups_per_segment_44888 * segred_group_sizze_31693)
          group_res_arr_mem_44893 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_31693 * virt_num_groups_44890)),
                                                 "group_res_arr_mem_44893")
          mainDetailedzicounter_mem_44895 = self.mainDetailedzicounter_mem_44895
          if ((1 * (np.long(num_groups_31694) * np.long(segred_group_sizze_31693))) != 0):
            self.mainDetailedzisegred_large_31647_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31693))),
                                                               np.int64(N_27772),
                                                               np.int64(i32_res_27792),
                                                               np.int64(num_groups_31694),
                                                               mem_43139,
                                                               defunc_4_map_res_mem_43657,
                                                               mem_43875,
                                                               np.int64(groups_per_segment_44888),
                                                               np.int64(elements_per_thread_44889),
                                                               np.int64(virt_num_groups_44890),
                                                               np.int64(threads_per_segment_44892),
                                                               group_res_arr_mem_44893,
                                                               mainDetailedzicounter_mem_44895)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_31647_var,
                                       ((np.long(num_groups_31694) * np.long(segred_group_sizze_31693)),),
                                       (np.long(segred_group_sizze_31693),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43876 = mem_43875
      defunc_3_map_res_mem_43881 = defunc_3_map_res_mem_43876
    mem_43139 = None
    defunc_4_map_res_mem_43657 = None
    i_28052 = (N_27772 - np.int64(1))
    x_28053 = sle64(np.int64(0), i_28052)
    y_28054 = slt64(i_28052, N_27772)
    bounds_check_28055 = (x_28053 and y_28054)
    index_certs_28056 = True
    assert bounds_check_28055, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:18:29-34\n   #1  helpers.fut:20:13-20\n   #2  bfastfinal.fut:76:30-91\n   #3  /prelude/soacs.fut:56:19-23\n   #4  /prelude/soacs.fut:56:3-37\n   #5  bfastfinal.fut:70:5-79:25\n   #6  bfastfinal.fut:176:3-56\n   #7  bfastfinal.fut:172:1-176:56\n" % ("Index [",
                                                                                                                                                                                                                                                                                                                                                     i_28052,
                                                                                                                                                                                                                                                                                                                                                     "] out of bounds for array of shape [",
                                                                                                                                                                                                                                                                                                                                                     N_27772,
                                                                                                                                                                                                                                                                                                                                                     "]."))
    fits_31823 = sle64(N_27772, max_group_sizze_30686)
    suff_intra_par_31821 = (self.sizes["mainDetailed.suff_intra_par_24"] <= N_27772)
    intra_suff_and_fits_31824 = (suff_intra_par_31821 and fits_31823)
    segscan_group_sizze_31973 = self.sizes["mainDetailed.segscan_group_size_31950"]
    max_num_groups_44929 = self.sizes["mainDetailed.segscan_num_groups_31952"]
    num_groups_31974 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(comparatee_31677,
                                                            segscan_group_sizze_31973),
                                                  sext_i32_i64(max_num_groups_44929))))
    segmap_group_sizze_31993 = self.sizes["mainDetailed.segmap_group_size_31941"]
    mem_43884 = opencl_alloc(self, bytes_43676, "mem_43884")
    self.futhark_builtinzhreplicate_f32(mem_43884, (m_27773 * N_27772), np.nan)
    mem_43887 = opencl_alloc(self, bytes_43676, "mem_43887")
    self.futhark_builtinzhreplicate_i32(mem_43887, (m_27773 * N_27772),
                                        np.int32(0))
    segmap_group_sizze_32029 = self.sizes["mainDetailed.segmap_group_size_31866"]
    bytes_43899 = (np.int64(4) * m_27773)
    bytes_43890 = (np.int64(8) * N_27772)
    bytes_43908 = (np.int64(8) * comparatee_31677)
    local_memory_capacity_45031 = self.max_local_memory
    if (sle64((((bytes_43890 + bytes_43662) + bytes_43662) + bytes_43662),
              sext_i32_i64(local_memory_capacity_45031)) and intra_suff_and_fits_31824):
      mem_43900 = opencl_alloc(self, bytes_43899, "mem_43900")
      mem_43903 = opencl_alloc(self, bytes_43676, "mem_43903")
      mem_43906 = opencl_alloc(self, bytes_43676, "mem_43906")
      if ((1 * (np.long(m_27773) * np.long(N_27772))) != 0):
        self.mainDetailedzisegmap_intragroup_31746_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_43662)),
                                                                cl.LocalMemory(np.long(bytes_43662)),
                                                                cl.LocalMemory(np.long(bytes_43662)),
                                                                cl.LocalMemory(np.long(bytes_43890)),
                                                                np.int64(N_27772),
                                                                np.int64(N_27774),
                                                                np.int64(i_28052),
                                                                images_mem_43123,
                                                                defunc_3_map_res_mem_43881,
                                                                mem_43900,
                                                                mem_43903,
                                                                mem_43906)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_31746_var,
                                   ((np.long(m_27773) * np.long(N_27772)),),
                                   (np.long(N_27772),))
        if synchronous:
          sync(self)
      defunc_4_map_res_mem_43918 = mem_43900
      defunc_4_map_res_mem_43919 = mem_43903
      defunc_4_map_res_mem_43920 = mem_43906
    else:
      mem_43910 = opencl_alloc(self, bytes_43908, "mem_43910")
      mem_43913 = opencl_alloc(self, bytes_43676, "mem_43913")
      if slt64(np.int64(0), (m_27773 * N_27772)):
        stage1_max_num_groups_44965 = self.max_group_size
        stage1_num_groups_44966 = smin64(stage1_max_num_groups_44965,
                                         num_groups_31974)
        num_threads_44967 = sext_i64_i32((stage1_num_groups_44966 * segscan_group_sizze_31973))
        if ((1 * (np.long(stage1_num_groups_44966) * np.long(segscan_group_sizze_31973))) != 0):
          self.mainDetailedziscan_stage1_31956_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                          (np.int32(8) * segscan_group_sizze_31973)))),
                                                            np.int64(N_27772),
                                                            np.int64(m_27773),
                                                            np.int64(N_27774),
                                                            images_mem_43123,
                                                            defunc_3_map_res_mem_43881,
                                                            mem_43910,
                                                            mem_43913,
                                                            np.int32(num_threads_44967))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage1_31956_var,
                                     ((np.long(stage1_num_groups_44966) * np.long(segscan_group_sizze_31973)),),
                                     (np.long(segscan_group_sizze_31973),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_44966))) != 0):
          self.mainDetailedziscan_stage2_31956_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                          (np.int32(8) * stage1_num_groups_44966)))),
                                                            np.int64(N_27772),
                                                            np.int64(m_27773),
                                                            mem_43910,
                                                            np.int64(stage1_num_groups_44966),
                                                            np.int32(num_threads_44967))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage2_31956_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_44966)),),
                                     (np.long(stage1_num_groups_44966),))
          if synchronous:
            sync(self)
        required_groups_45009 = sext_i64_i32(sdiv_up64((m_27773 * N_27772),
                                                       segscan_group_sizze_31973))
        if ((1 * (np.long(num_groups_31974) * np.long(segscan_group_sizze_31973))) != 0):
          self.mainDetailedziscan_stage3_31956_var.set_args(self.global_failure,
                                                            np.int64(N_27772),
                                                            np.int64(m_27773),
                                                            np.int64(num_groups_31974),
                                                            mem_43910,
                                                            np.int32(num_threads_44967),
                                                            np.int32(required_groups_45009))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage3_31956_var,
                                     ((np.long(num_groups_31974) * np.long(segscan_group_sizze_31973)),),
                                     (np.long(segscan_group_sizze_31973),))
          if synchronous:
            sync(self)
      segmap_usable_groups_31994 = sdiv_up64(m_27773, segmap_group_sizze_31993)
      mem_43916 = opencl_alloc(self, bytes_43899, "mem_43916")
      if ((1 * (np.long(segmap_usable_groups_31994) * np.long(segmap_group_sizze_31993))) != 0):
        self.mainDetailedzisegmap_31939_var.set_args(self.global_failure,
                                                     np.int64(N_27772),
                                                     np.int64(m_27773),
                                                     np.int64(i_28052),
                                                     mem_43910, mem_43916)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31939_var,
                                   ((np.long(segmap_usable_groups_31994) * np.long(segmap_group_sizze_31993)),),
                                   (np.long(segmap_group_sizze_31993),))
        if synchronous:
          sync(self)
      segmap_usable_groups_32030 = sdiv_up64(comparatee_31677,
                                             segmap_group_sizze_32029)
      if ((1 * (np.long(segmap_usable_groups_32030) * np.long(segmap_group_sizze_32029))) != 0):
        self.mainDetailedzisegmap_31863_var.set_args(self.global_failure,
                                                     np.int64(N_27772),
                                                     np.int64(m_27773),
                                                     mem_43884, mem_43887,
                                                     mem_43910, mem_43913)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31863_var,
                                   ((np.long(segmap_usable_groups_32030) * np.long(segmap_group_sizze_32029)),),
                                   (np.long(segmap_group_sizze_32029),))
        if synchronous:
          sync(self)
      mem_43910 = None
      mem_43913 = None
      defunc_4_map_res_mem_43918 = mem_43916
      defunc_4_map_res_mem_43919 = mem_43884
      defunc_4_map_res_mem_43920 = mem_43887
    mem_43884 = None
    mem_43887 = None
    suff_outer_par_32078 = (self.sizes["mainDetailed.suff_outer_par_28"] <= m_27773)
    fits_32156 = sle64(i32_res_27786, max_group_sizze_30686)
    suff_intra_par_32154 = (self.sizes["mainDetailed.suff_intra_par_29"] <= i32_res_27786)
    intra_suff_and_fits_32157 = (suff_intra_par_32154 and fits_32156)
    segmap_group_sizze_32121 = self.sizes["mainDetailed.segmap_group_size_32090"]
    nest_sizze_32244 = (m_27773 * i32_res_27786)
    segred_group_sizze_32245 = self.sizes["mainDetailed.segred_group_size_32228"]
    max_num_groups_45032 = self.sizes["mainDetailed.segred_num_groups_32230"]
    num_groups_32246 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_32244,
                                                            segred_group_sizze_32245),
                                                  sext_i32_i64(max_num_groups_45032))))
    segred_group_sizze_32259 = self.sizes["mainDetailed.segred_group_size_32207"]
    max_num_groups_45033 = self.sizes["mainDetailed.segred_num_groups_32209"]
    num_groups_32260 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_32244,
                                                            segred_group_sizze_32259),
                                                  sext_i32_i64(max_num_groups_45033))))
    segmap_group_sizze_32275 = self.sizes["mainDetailed.segmap_group_size_32192"]
    bytes_43929 = (np.int64(4) * segmap_group_sizze_32121)
    local_memory_capacity_45187 = self.max_local_memory
    if (sle64((bytes_43929 + bytes_43929),
              sext_i32_i64(local_memory_capacity_45187)) and suff_outer_par_32078):
      segmap_usable_groups_32122 = sdiv_up64(m_27773, segmap_group_sizze_32121)
      mem_43923 = opencl_alloc(self, bytes_43140, "mem_43923")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43923, np.int64(0),
                                                  images_mem_43123, np.int64(0),
                                                  np.int64(1), N_27774, m_27773)
      mem_43926 = opencl_alloc(self, bytes_43676, "mem_43926")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43926, np.int64(0),
                                                  defunc_4_map_res_mem_43919,
                                                  np.int64(0), np.int64(1),
                                                  N_27772, m_27773)
      num_whole_tiles_42630 = squot64(i32_res_27786, segmap_group_sizze_32121)
      residual_input_42751 = srem64(i32_res_27786, segmap_group_sizze_32121)
      cond_42752 = (residual_input_42751 == np.int64(0))
      mem_43954 = opencl_alloc(self, bytes_43899, "mem_43954")
      mem_43956 = opencl_alloc(self, bytes_43899, "mem_43956")
      mem_43958 = opencl_alloc(self, bytes_43899, "mem_43958")
      if ((1 * (np.long(segmap_usable_groups_32122) * np.long(segmap_group_sizze_32121))) != 0):
        self.mainDetailedzisegmap_intragroup_42622_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_43929)),
                                                                cl.LocalMemory(np.long(bytes_43929)),
                                                                np.int64(m_27773),
                                                                np.int32(n_27777),
                                                                np.float32(hfrac_27779),
                                                                np.int64(i32_res_27786),
                                                                np.int32(k2p2_27788),
                                                                np.int64(num_whole_tiles_42630),
                                                                np.int64(residual_input_42751),
                                                                np.byte(cond_42752),
                                                                mem_43923,
                                                                mem_43926,
                                                                mem_43954,
                                                                mem_43956,
                                                                mem_43958)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_42622_var,
                                   ((np.long(segmap_usable_groups_32122) * np.long(segmap_group_sizze_32121)),),
                                   (np.long(segmap_group_sizze_32121),))
        if synchronous:
          sync(self)
      mem_43923 = None
      mem_43926 = None
      defunc_3_map_res_mem_43982 = mem_43954
      defunc_3_map_res_mem_43983 = mem_43956
      defunc_3_map_res_mem_43984 = mem_43958
    else:
      local_memory_capacity_45186 = self.max_local_memory
      if (sle64(((np.int32(4) * i32_res_27786) + (np.int32(4) * i32_res_27786)),
                sext_i32_i64(local_memory_capacity_45186)) and intra_suff_and_fits_32157):
        mem_43963 = opencl_alloc(self, bytes_43899, "mem_43963")
        mem_43965 = opencl_alloc(self, bytes_43899, "mem_43965")
        mem_43967 = opencl_alloc(self, bytes_43899, "mem_43967")
        if ((1 * (np.long(m_27773) * np.long(i32_res_27786))) != 0):
          self.mainDetailedzisegmap_intragroup_32086_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long((np.int32(4) * i32_res_27786))),
                                                                  cl.LocalMemory(np.long((np.int32(4) * i32_res_27786))),
                                                                  np.int64(N_27772),
                                                                  np.int64(N_27774),
                                                                  np.float32(hfrac_27779),
                                                                  np.int64(i32_res_27786),
                                                                  np.int32(k2p2_27788),
                                                                  images_mem_43123,
                                                                  defunc_4_map_res_mem_43919,
                                                                  mem_43963,
                                                                  mem_43965,
                                                                  mem_43967)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_32086_var,
                                     ((np.long(m_27773) * np.long(i32_res_27786)),),
                                     (np.long(i32_res_27786),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43979 = mem_43963
        defunc_3_map_res_mem_43980 = mem_43965
        defunc_3_map_res_mem_43981 = mem_43967
      else:
        mem_43970 = opencl_alloc(self, bytes_43899, "mem_43970")
        if slt64((i32_res_27786 * np.int64(2)), segred_group_sizze_32245):
          segment_sizze_nonzzero_45061 = smax64(np.int64(1), i32_res_27786)
          num_threads_45062 = (num_groups_32246 * segred_group_sizze_32245)
          if ((1 * (np.long(num_groups_32246) * np.long(segred_group_sizze_32245))) != 0):
            self.mainDetailedzisegred_small_32234_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32245))),
                                                               np.int64(m_27773),
                                                               np.int64(N_27774),
                                                               np.int64(i32_res_27786),
                                                               np.int64(num_groups_32246),
                                                               images_mem_43123,
                                                               mem_43970,
                                                               np.int64(segment_sizze_nonzzero_45061))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_32234_var,
                                       ((np.long(num_groups_32246) * np.long(segred_group_sizze_32245)),),
                                       (np.long(segred_group_sizze_32245),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45082 = sdiv_up64(num_groups_32246,
                                               smax64(np.int64(1), m_27773))
          elements_per_thread_45083 = sdiv_up64(i32_res_27786,
                                                (segred_group_sizze_32245 * groups_per_segment_45082))
          virt_num_groups_45084 = (groups_per_segment_45082 * m_27773)
          num_threads_45085 = (num_groups_32246 * segred_group_sizze_32245)
          threads_per_segment_45086 = (groups_per_segment_45082 * segred_group_sizze_32245)
          group_res_arr_mem_45087 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_32245 * virt_num_groups_45084)),
                                                 "group_res_arr_mem_45087")
          mainDetailedzicounter_mem_45089 = self.mainDetailedzicounter_mem_45089
          if ((1 * (np.long(num_groups_32246) * np.long(segred_group_sizze_32245))) != 0):
            self.mainDetailedzisegred_large_32234_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32245))),
                                                               np.int64(N_27774),
                                                               np.int64(i32_res_27786),
                                                               np.int64(num_groups_32246),
                                                               images_mem_43123,
                                                               mem_43970,
                                                               np.int64(groups_per_segment_45082),
                                                               np.int64(elements_per_thread_45083),
                                                               np.int64(virt_num_groups_45084),
                                                               np.int64(threads_per_segment_45086),
                                                               group_res_arr_mem_45087,
                                                               mainDetailedzicounter_mem_45089)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_32234_var,
                                       ((np.long(num_groups_32246) * np.long(segred_group_sizze_32245)),),
                                       (np.long(segred_group_sizze_32245),))
            if synchronous:
              sync(self)
        mem_43973 = opencl_alloc(self, bytes_43899, "mem_43973")
        if slt64((i32_res_27786 * np.int64(2)), segred_group_sizze_32259):
          segment_sizze_nonzzero_45121 = smax64(np.int64(1), i32_res_27786)
          num_threads_45122 = (num_groups_32260 * segred_group_sizze_32259)
          if ((1 * (np.long(num_groups_32260) * np.long(segred_group_sizze_32259))) != 0):
            self.mainDetailedzisegred_small_32213_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32259))),
                                                               np.int64(N_27772),
                                                               np.int64(m_27773),
                                                               np.int64(i32_res_27786),
                                                               np.int64(num_groups_32260),
                                                               defunc_4_map_res_mem_43919,
                                                               mem_43970,
                                                               mem_43973,
                                                               np.int64(segment_sizze_nonzzero_45121))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_32213_var,
                                       ((np.long(num_groups_32260) * np.long(segred_group_sizze_32259)),),
                                       (np.long(segred_group_sizze_32259),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45142 = sdiv_up64(num_groups_32260,
                                               smax64(np.int64(1), m_27773))
          elements_per_thread_45143 = sdiv_up64(i32_res_27786,
                                                (segred_group_sizze_32259 * groups_per_segment_45142))
          virt_num_groups_45144 = (groups_per_segment_45142 * m_27773)
          num_threads_45145 = (num_groups_32260 * segred_group_sizze_32259)
          threads_per_segment_45146 = (groups_per_segment_45142 * segred_group_sizze_32259)
          group_res_arr_mem_45147 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_32259 * virt_num_groups_45144)),
                                                 "group_res_arr_mem_45147")
          mainDetailedzicounter_mem_45149 = self.mainDetailedzicounter_mem_45149
          if ((1 * (np.long(num_groups_32260) * np.long(segred_group_sizze_32259))) != 0):
            self.mainDetailedzisegred_large_32213_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32259))),
                                                               np.int64(N_27772),
                                                               np.int64(i32_res_27786),
                                                               np.int64(num_groups_32260),
                                                               defunc_4_map_res_mem_43919,
                                                               mem_43970,
                                                               mem_43973,
                                                               np.int64(groups_per_segment_45142),
                                                               np.int64(elements_per_thread_45143),
                                                               np.int64(virt_num_groups_45144),
                                                               np.int64(threads_per_segment_45146),
                                                               group_res_arr_mem_45147,
                                                               mainDetailedzicounter_mem_45149)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_32213_var,
                                       ((np.long(num_groups_32260) * np.long(segred_group_sizze_32259)),),
                                       (np.long(segred_group_sizze_32259),))
            if synchronous:
              sync(self)
        segmap_usable_groups_32276 = sdiv_up64(m_27773,
                                               segmap_group_sizze_32275)
        mem_43976 = opencl_alloc(self, bytes_43899, "mem_43976")
        mem_43978 = opencl_alloc(self, bytes_43899, "mem_43978")
        if ((1 * (np.long(segmap_usable_groups_32276) * np.long(segmap_group_sizze_32275))) != 0):
          self.mainDetailedzisegmap_32190_var.set_args(self.global_failure,
                                                       np.int64(m_27773),
                                                       np.float32(hfrac_27779),
                                                       np.int32(k2p2_27788),
                                                       mem_43970, mem_43973,
                                                       mem_43976, mem_43978)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_32190_var,
                                     ((np.long(segmap_usable_groups_32276) * np.long(segmap_group_sizze_32275)),),
                                     (np.long(segmap_group_sizze_32275),))
          if synchronous:
            sync(self)
        mem_43973 = None
        defunc_3_map_res_mem_43979 = mem_43976
        defunc_3_map_res_mem_43980 = mem_43970
        defunc_3_map_res_mem_43981 = mem_43978
      defunc_3_map_res_mem_43982 = defunc_3_map_res_mem_43979
      defunc_3_map_res_mem_43983 = defunc_3_map_res_mem_43980
      defunc_3_map_res_mem_43984 = defunc_3_map_res_mem_43981
    segred_group_sizze_32296 = self.sizes["mainDetailed.segred_group_size_32295"]
    max_num_groups_45188 = self.sizes["mainDetailed.segred_num_groups_32297"]
    num_groups_32298 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27773,
                                                            segred_group_sizze_32296),
                                                  sext_i32_i64(max_num_groups_45188))))
    mem_43987 = opencl_alloc(self, np.int64(4), "mem_43987")
    mainDetailedzicounter_mem_45189 = self.mainDetailedzicounter_mem_45189
    group_res_arr_mem_45191 = opencl_alloc(self,
                                           (np.int32(4) * (segred_group_sizze_32296 * num_groups_32298)),
                                           "group_res_arr_mem_45191")
    num_threads_45193 = (num_groups_32298 * segred_group_sizze_32296)
    if ((1 * (np.long(num_groups_32298) * np.long(segred_group_sizze_32296))) != 0):
      self.mainDetailedzisegred_nonseg_32303_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32296))),
                                                          cl.LocalMemory(np.long(np.int32(1))),
                                                          np.int64(m_27773),
                                                          np.int64(num_groups_32298),
                                                          defunc_3_map_res_mem_43982,
                                                          mem_43987,
                                                          mainDetailedzicounter_mem_45189,
                                                          group_res_arr_mem_45191,
                                                          np.int64(num_threads_45193))
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegred_nonseg_32303_var,
                                 ((np.long(num_groups_32298) * np.long(segred_group_sizze_32296)),),
                                 (np.long(segred_group_sizze_32296),))
      if synchronous:
        sync(self)
    read_res_45544 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45544, mem_43987,
                    device_offset=(np.long(np.int64(0)) * 4),
                    is_blocking=synchronous)
    sync(self)
    defunc_2_reduce_comm_res_28142 = read_res_45544[0]
    mem_43987 = None
    i32_res_28147 = sext_i32_i64(defunc_2_reduce_comm_res_28142)
    bounds_invalid_upwards_28148 = slt64(i32_res_28147, np.int64(0))
    valid_28149 = not(bounds_invalid_upwards_28148)
    range_valid_c_28150 = True
    assert valid_28149, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:5:3-18\n   #2  bfastfinal.fut:104:34-46\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:99:17-106:24\n   #5  bfastfinal.fut:176:3-56\n   #6  bfastfinal.fut:172:1-176:56\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                                                                                                                   "..",
                                                                                                                                                                                                                                                                                                                   np.int64(1),
                                                                                                                                                                                                                                                                                                                   "..<",
                                                                                                                                                                                                                                                                                                                   i32_res_28147,
                                                                                                                                                                                                                                                                                                                   " is invalid."))
    suff_outer_par_32335 = (self.sizes["mainDetailed.suff_outer_par_31"] <= m_27773)
    segmap_group_sizze_32358 = self.sizes["mainDetailed.segmap_group_size_32339"]
    nest_sizze_32401 = (m_27773 * i32_res_28147)
    segred_group_sizze_32402 = self.sizes["mainDetailed.segred_group_size_32379"]
    max_num_groups_45219 = self.sizes["mainDetailed.segred_num_groups_32381"]
    num_groups_32403 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_32401,
                                                            segred_group_sizze_32402),
                                                  sext_i32_i64(max_num_groups_45219))))
    bytes_43990 = (np.int64(4) * segmap_group_sizze_32358)
    local_memory_capacity_45290 = self.max_local_memory
    if (sle64((bytes_43990 + bytes_43990),
              sext_i32_i64(local_memory_capacity_45290)) and suff_outer_par_32335):
      segmap_usable_groups_32359 = sdiv_up64(m_27773, segmap_group_sizze_32358)
      num_whole_tiles_42874 = squot64(i32_res_28147, segmap_group_sizze_32358)
      residual_input_42973 = srem64(i32_res_28147, segmap_group_sizze_32358)
      cond_42974 = (residual_input_42973 == np.int64(0))
      mem_44013 = opencl_alloc(self, bytes_43899, "mem_44013")
      if ((1 * (np.long(segmap_usable_groups_32359) * np.long(segmap_group_sizze_32358))) != 0):
        self.mainDetailedzisegmap_intragroup_42854_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_43990)),
                                                                cl.LocalMemory(np.long(bytes_43990)),
                                                                np.int64(N_27772),
                                                                np.int64(m_27773),
                                                                np.int64(i32_res_28147),
                                                                np.int64(num_whole_tiles_42874),
                                                                np.int64(residual_input_42973),
                                                                np.byte(cond_42974),
                                                                defunc_4_map_res_mem_43919,
                                                                defunc_3_map_res_mem_43982,
                                                                defunc_3_map_res_mem_43983,
                                                                mem_44013)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_42854_var,
                                   ((np.long(segmap_usable_groups_32359) * np.long(segmap_group_sizze_32358)),),
                                   (np.long(segmap_group_sizze_32358),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_44017 = mem_44013
    else:
      mem_44016 = opencl_alloc(self, bytes_43899, "mem_44016")
      if slt64((i32_res_28147 * np.int64(2)), segred_group_sizze_32402):
        segment_sizze_nonzzero_45230 = smax64(np.int64(1), i32_res_28147)
        num_threads_45231 = (num_groups_32403 * segred_group_sizze_32402)
        if ((1 * (np.long(num_groups_32403) * np.long(segred_group_sizze_32402))) != 0):
          self.mainDetailedzisegred_small_32385_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32402))),
                                                             np.int64(N_27772),
                                                             np.int64(m_27773),
                                                             np.int64(i32_res_28147),
                                                             np.int64(num_groups_32403),
                                                             defunc_4_map_res_mem_43919,
                                                             defunc_3_map_res_mem_43982,
                                                             defunc_3_map_res_mem_43983,
                                                             mem_44016,
                                                             np.int64(segment_sizze_nonzzero_45230))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegred_small_32385_var,
                                     ((np.long(num_groups_32403) * np.long(segred_group_sizze_32402)),),
                                     (np.long(segred_group_sizze_32402),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_45251 = sdiv_up64(num_groups_32403,
                                             smax64(np.int64(1), m_27773))
        elements_per_thread_45252 = sdiv_up64(i32_res_28147,
                                              (segred_group_sizze_32402 * groups_per_segment_45251))
        virt_num_groups_45253 = (groups_per_segment_45251 * m_27773)
        num_threads_45254 = (num_groups_32403 * segred_group_sizze_32402)
        threads_per_segment_45255 = (groups_per_segment_45251 * segred_group_sizze_32402)
        group_res_arr_mem_45256 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_32402 * virt_num_groups_45253)),
                                               "group_res_arr_mem_45256")
        mainDetailedzicounter_mem_45258 = self.mainDetailedzicounter_mem_45258
        if ((1 * (np.long(num_groups_32403) * np.long(segred_group_sizze_32402))) != 0):
          self.mainDetailedzisegred_large_32385_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(np.int32(1))),
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32402))),
                                                             np.int64(N_27772),
                                                             np.int64(i32_res_28147),
                                                             np.int64(num_groups_32403),
                                                             defunc_4_map_res_mem_43919,
                                                             defunc_3_map_res_mem_43982,
                                                             defunc_3_map_res_mem_43983,
                                                             mem_44016,
                                                             np.int64(groups_per_segment_45251),
                                                             np.int64(elements_per_thread_45252),
                                                             np.int64(virt_num_groups_45253),
                                                             np.int64(threads_per_segment_45255),
                                                             group_res_arr_mem_45256,
                                                             mainDetailedzicounter_mem_45258)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegred_large_32385_var,
                                     ((np.long(num_groups_32403) * np.long(segred_group_sizze_32402)),),
                                     (np.long(segred_group_sizze_32402),))
          if synchronous:
            sync(self)
      defunc_0_f_res_mem_44017 = mem_44016
    iota32_arg_28172 = (N_27772 - i32_res_27786)
    bounds_invalid_upwards_28173 = slt64(iota32_arg_28172, np.int64(0))
    valid_28174 = not(bounds_invalid_upwards_28173)
    range_valid_c_28175 = True
    assert valid_28174, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:112:22-35\n   #3  bfastfinal.fut:176:3-56\n   #4  bfastfinal.fut:172:1-176:56\n" % ("Range ",
                                                                                                                                                                                                                                      np.int64(0),
                                                                                                                                                                                                                                      "..",
                                                                                                                                                                                                                                      np.int64(1),
                                                                                                                                                                                                                                      "..<",
                                                                                                                                                                                                                                      iota32_arg_28172,
                                                                                                                                                                                                                                      " is invalid."))
    x_28177 = (np.int32(1) + n_27777)
    i_28178 = (n_27777 - np.int32(1))
    i_28179 = sext_i32_i64(i_28178)
    x_28180 = sle64(np.int64(0), i_28179)
    y_28181 = slt64(i_28179, N_27772)
    bounds_check_28182 = (x_28180 and y_28181)
    index_certs_28183 = True
    assert bounds_check_28182, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:110:64-84\n   #1  bfastfinal.fut:108:15-112:36\n   #2  bfastfinal.fut:176:3-56\n   #3  bfastfinal.fut:172:1-176:56\n" % ("Index [",
                                                                                                                                                                                                                 i_28179,
                                                                                                                                                                                                                 "] out of bounds for array of shape [",
                                                                                                                                                                                                                 N_27772,
                                                                                                                                                                                                                 "]."))
    read_res_45546 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45546, mappingindices_mem_43122,
                    device_offset=(np.long(i_28179) * 4),
                    is_blocking=synchronous)
    sync(self)
    r32_arg_28184 = read_res_45546[0]
    i32_res_28185 = sitofp_i32_f32(r32_arg_28184)
    range_valid_c_28186 = True
    assert valid_28174, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:122:20-35\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:117:20-133:9\n   #5  bfastfinal.fut:176:3-56\n   #6  bfastfinal.fut:172:1-176:56\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                                                                  iota32_arg_28172,
                                                                                                                                                                                                                                                                                                                  " is invalid."))
    segmap_group_sizze_32480 = self.sizes["mainDetailed.segmap_group_size_32463"]
    segmap_usable_groups_32481 = sdiv_up64(iota32_arg_28172,
                                           segmap_group_sizze_32480)
    bytes_44019 = (np.int64(4) * iota32_arg_28172)
    mem_44020 = opencl_alloc(self, bytes_44019, "mem_44020")
    mem_44022 = opencl_alloc(self, bytes_44019, "mem_44022")
    if ((1 * (np.long(segmap_usable_groups_32481) * np.long(segmap_group_sizze_32480))) != 0):
      self.mainDetailedzisegmap_32461_var.set_args(self.global_failure,
                                                   np.float32(lam_27780),
                                                   np.int64(iota32_arg_28172),
                                                   np.int32(x_28177),
                                                   np.float32(i32_res_28185),
                                                   mappingindices_mem_43122,
                                                   mem_44020, mem_44022)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_32461_var,
                                 ((np.long(segmap_usable_groups_32481) * np.long(segmap_group_sizze_32480)),),
                                 (np.long(segmap_group_sizze_32480),))
      if synchronous:
        sync(self)
    mem_44020 = None
    max_res_28202 = smax64(np.int64(1), iota32_arg_28172)
    bounds_invalid_upwards_28203 = slt64(max_res_28202, np.int64(1))
    distance_28204 = (max_res_28202 - np.int64(1))
    valid_28205 = not(bounds_invalid_upwards_28203)
    range_valid_c_28206 = True
    assert valid_28205, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:16:30-45\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:119:13-124:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:117:20-133:9\n   #5  bfastfinal.fut:176:3-56\n   #6  bfastfinal.fut:172:1-176:56\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                                                              np.int64(1),
                                                                                                                                                                                                                                                                                                                                                              "..<",
                                                                                                                                                                                                                                                                                                                                                              max_res_28202,
                                                                                                                                                                                                                                                                                                                                                              " is invalid."))
    segmap_group_sizze_32900 = self.sizes["mainDetailed.segmap_group_size_32893"]
    segmap_usable_groups_32901 = sdiv_up64(m_27773, segmap_group_sizze_32900)
    mem_44025 = opencl_alloc(self, bytes_43899, "mem_44025")
    if ((1 * (np.long(segmap_usable_groups_32901) * np.long(segmap_group_sizze_32900))) != 0):
      self.mainDetailedzisegmap_32891_var.set_args(self.global_failure,
                                                   np.int64(m_27773),
                                                   defunc_4_map_res_mem_43918,
                                                   defunc_3_map_res_mem_43983,
                                                   mem_44025)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_32891_var,
                                 ((np.long(segmap_usable_groups_32901) * np.long(segmap_group_sizze_32900)),),
                                 (np.long(segmap_group_sizze_32900),))
      if synchronous:
        sync(self)
    nest_sizze_32914 = (m_27773 * iota32_arg_28172)
    segmap_group_sizze_32915 = self.sizes["mainDetailed.segmap_group_size_32836"]
    segmap_usable_groups_32916 = sdiv_up64(nest_sizze_32914,
                                           segmap_group_sizze_32915)
    bytes_44027 = (np.int64(4) * nest_sizze_32914)
    mem_44029 = opencl_alloc(self, bytes_44027, "mem_44029")
    if ((1 * (np.long(segmap_usable_groups_32916) * np.long(segmap_group_sizze_32915))) != 0):
      self.mainDetailedzisegmap_32833_var.set_args(self.global_failure,
                                                   self.failure_is_an_option,
                                                   self.global_failure_args,
                                                   np.int64(N_27772),
                                                   np.int64(m_27773),
                                                   np.int64(iota32_arg_28172),
                                                   defunc_4_map_res_mem_43919,
                                                   defunc_3_map_res_mem_43983,
                                                   mem_44025, mem_44029)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_32833_var,
                                 ((np.long(segmap_usable_groups_32916) * np.long(segmap_group_sizze_32915)),),
                                 (np.long(segmap_group_sizze_32915),))
      if synchronous:
        sync(self)
    self.failure_is_an_option = np.int32(1)
    segmap_group_sizze_32944 = self.sizes["mainDetailed.segmap_group_size_32714"]
    segmap_usable_groups_32945 = sdiv_up64(m_27773, segmap_group_sizze_32944)
    mem_44032 = opencl_alloc(self, bytes_44027, "mem_44032")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_44032, np.int64(0),
                                                mem_44029, np.int64(0),
                                                np.int64(1), iota32_arg_28172,
                                                m_27773)
    mem_44029 = None
    mem_44063 = opencl_alloc(self, bytes_43899, "mem_44063")
    num_threads_44241 = (segmap_group_sizze_32944 * segmap_usable_groups_32945)
    total_sizze_44242 = (bytes_44019 * num_threads_44241)
    mem_44043 = opencl_alloc(self, total_sizze_44242, "mem_44043")
    if ((1 * (np.long(segmap_usable_groups_32945) * np.long(segmap_group_sizze_32944))) != 0):
      self.mainDetailedzisegmap_32712_var.set_args(self.global_failure,
                                                   self.failure_is_an_option,
                                                   self.global_failure_args,
                                                   np.int64(m_27773),
                                                   np.int64(iota32_arg_28172),
                                                   np.int64(distance_28204),
                                                   np.int64(segmap_usable_groups_32945),
                                                   defunc_4_map_res_mem_43918,
                                                   defunc_3_map_res_mem_43983,
                                                   mem_44025, mem_44032,
                                                   mem_44043, mem_44063)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_32712_var,
                                 ((np.long(segmap_usable_groups_32945) * np.long(segmap_group_sizze_32944)),),
                                 (np.long(segmap_group_sizze_32944),))
      if synchronous:
        sync(self)
    self.failure_is_an_option = np.int32(1)
    mem_44025 = None
    mem_44032 = None
    mem_44043 = None
    fits_33312 = sle64(iota32_arg_28172, max_group_sizze_30686)
    suff_intra_par_33310 = (self.sizes["mainDetailed.suff_intra_par_37"] <= iota32_arg_28172)
    intra_suff_and_fits_33313 = (suff_intra_par_33310 and fits_33312)
    segmap_group_sizze_33666 = self.sizes["mainDetailed.segmap_group_size_33646"]
    max_num_groups_45316 = self.sizes["mainDetailed.segmap_num_groups_33648"]
    num_groups_33667 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27773,
                                                            segmap_group_sizze_33666),
                                                  sext_i32_i64(max_num_groups_45316))))
    segscan_group_sizze_33689 = self.sizes["mainDetailed.segscan_group_size_33605"]
    max_num_groups_45317 = self.sizes["mainDetailed.segscan_num_groups_33607"]
    num_groups_33690 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_32914,
                                                            segscan_group_sizze_33689),
                                                  sext_i32_i64(max_num_groups_45317))))
    segred_group_sizze_33727 = self.sizes["mainDetailed.segred_group_size_33551"]
    max_num_groups_45318 = self.sizes["mainDetailed.segred_num_groups_33553"]
    num_groups_33728 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_32914,
                                                            segred_group_sizze_33727),
                                                  sext_i32_i64(max_num_groups_45318))))
    segmap_group_sizze_33767 = self.sizes["mainDetailed.segmap_group_size_33525"]
    segmap_group_sizze_33790 = self.sizes["mainDetailed.segmap_group_size_33490"]
    mem_44066 = opencl_alloc(self, bytes_44027, "mem_44066")
    self.futhark_builtinzhreplicate_f32(mem_44066, (m_27773 * iota32_arg_28172),
                                        np.nan)
    segmap_group_sizze_33834 = self.sizes["mainDetailed.segmap_group_size_33438"]
    local_memory_capacity_45521 = self.max_local_memory
    if (sle64((((((bytes_44019 + bytes_44019) + (np.int32(1) * iota32_arg_28172)) + (np.int32(4) * iota32_arg_28172)) + (np.int32(4) * iota32_arg_28172)) + bytes_44019),
              sext_i32_i64(local_memory_capacity_45521)) and intra_suff_and_fits_33313):
      mem_44079 = opencl_alloc(self, bytes_44027, "mem_44079")
      mem_44082 = opencl_alloc(self, bytes_44027, "mem_44082")
      mem_44084 = opencl_alloc(self, bytes_43899, "mem_44084")
      mem_44086 = opencl_alloc(self, bytes_43899, "mem_44086")
      if ((1 * (np.long(m_27773) * np.long(iota32_arg_28172))) != 0):
        self.mainDetailedzisegmap_intragroup_33066_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_44019)),
                                                                cl.LocalMemory(np.long((np.int32(4) * iota32_arg_28172))),
                                                                cl.LocalMemory(np.long((np.int32(4) * iota32_arg_28172))),
                                                                cl.LocalMemory(np.long((np.int32(1) * iota32_arg_28172))),
                                                                cl.LocalMemory(np.long(bytes_44019)),
                                                                cl.LocalMemory(np.long(bytes_44019)),
                                                                np.int64(N_27772),
                                                                np.int32(n_27777),
                                                                np.int64(iota32_arg_28172),
                                                                defunc_4_map_res_mem_43918,
                                                                defunc_4_map_res_mem_43919,
                                                                defunc_4_map_res_mem_43920,
                                                                defunc_3_map_res_mem_43982,
                                                                defunc_3_map_res_mem_43983,
                                                                defunc_3_map_res_mem_43984,
                                                                defunc_0_f_res_mem_44017,
                                                                mem_44022,
                                                                mem_44079,
                                                                mem_44082,
                                                                mem_44084,
                                                                mem_44086)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_33066_var,
                                   ((np.long(m_27773) * np.long(iota32_arg_28172)),),
                                   (np.long(iota32_arg_28172),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_44117 = mem_44079
      defunc_0_f_res_mem_44118 = mem_44082
      defunc_0_f_res_mem_44119 = mem_44084
      defunc_0_f_res_mem_44120 = mem_44086
    else:
      mem_44089 = opencl_alloc(self, bytes_43899, "mem_44089")
      mem_44091 = opencl_alloc(self, bytes_43899, "mem_44091")
      if ((1 * (np.long(num_groups_33667) * np.long(segmap_group_sizze_33666))) != 0):
        self.mainDetailedzisegmap_33644_var.set_args(self.global_failure,
                                                     np.int64(m_27773),
                                                     np.int64(num_groups_33667),
                                                     defunc_4_map_res_mem_43918,
                                                     defunc_3_map_res_mem_43983,
                                                     defunc_3_map_res_mem_43984,
                                                     mem_44089, mem_44091)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33644_var,
                                   ((np.long(num_groups_33667) * np.long(segmap_group_sizze_33666)),),
                                   (np.long(segmap_group_sizze_33666),))
        if synchronous:
          sync(self)
      mem_44095 = opencl_alloc(self, bytes_44027, "mem_44095")
      if slt64(np.int64(0), (m_27773 * iota32_arg_28172)):
        stage1_max_num_groups_45352 = self.max_group_size
        stage1_num_groups_45353 = smin64(stage1_max_num_groups_45352,
                                         num_groups_33690)
        num_threads_45354 = sext_i64_i32((stage1_num_groups_45353 * segscan_group_sizze_33689))
        if ((1 * (np.long(stage1_num_groups_45353) * np.long(segscan_group_sizze_33689))) != 0):
          self.mainDetailedziscan_stage1_33611_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                          (np.int32(4) * segscan_group_sizze_33689)))),
                                                            np.int64(N_27772),
                                                            np.int64(m_27773),
                                                            np.int64(iota32_arg_28172),
                                                            defunc_4_map_res_mem_43919,
                                                            defunc_3_map_res_mem_43982,
                                                            defunc_3_map_res_mem_43983,
                                                            defunc_0_f_res_mem_44017,
                                                            mem_44091,
                                                            mem_44095,
                                                            np.int32(num_threads_45354))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage1_33611_var,
                                     ((np.long(stage1_num_groups_45353) * np.long(segscan_group_sizze_33689)),),
                                     (np.long(segscan_group_sizze_33689),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_45353))) != 0):
          self.mainDetailedziscan_stage2_33611_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                          (np.int32(4) * stage1_num_groups_45353)))),
                                                            np.int64(m_27773),
                                                            np.int64(iota32_arg_28172),
                                                            mem_44095,
                                                            np.int64(stage1_num_groups_45353),
                                                            np.int32(num_threads_45354))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage2_33611_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_45353)),),
                                     (np.long(stage1_num_groups_45353),))
          if synchronous:
            sync(self)
        required_groups_45396 = sext_i64_i32(sdiv_up64((m_27773 * iota32_arg_28172),
                                                       segscan_group_sizze_33689))
        if ((1 * (np.long(num_groups_33690) * np.long(segscan_group_sizze_33689))) != 0):
          self.mainDetailedziscan_stage3_33611_var.set_args(self.global_failure,
                                                            np.int64(m_27773),
                                                            np.int64(iota32_arg_28172),
                                                            np.int64(num_groups_33690),
                                                            mem_44095,
                                                            np.int32(num_threads_45354),
                                                            np.int32(required_groups_45396))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage3_33611_var,
                                     ((np.long(num_groups_33690) * np.long(segscan_group_sizze_33689)),),
                                     (np.long(segscan_group_sizze_33689),))
          if synchronous:
            sync(self)
      mem_44098 = opencl_alloc(self, m_27773, "mem_44098")
      mem_44100 = opencl_alloc(self, bytes_43899, "mem_44100")
      mem_44102 = opencl_alloc(self, bytes_43899, "mem_44102")
      mem_44105 = opencl_alloc(self, bytes_44027, "mem_44105")
      if slt64((iota32_arg_28172 * np.int64(2)), segred_group_sizze_33727):
        segment_sizze_nonzzero_45408 = smax64(np.int64(1), iota32_arg_28172)
        num_threads_45409 = (num_groups_33728 * segred_group_sizze_33727)
        if ((1 * (np.long(num_groups_33728) * np.long(segred_group_sizze_33727))) != 0):
          self.mainDetailedzisegred_small_33557_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33727))),
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33727))),
                                                             cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_33727))),
                                                             np.int64(m_27773),
                                                             np.int64(iota32_arg_28172),
                                                             np.int64(num_groups_33728),
                                                             mem_44022,
                                                             mem_44089,
                                                             mem_44091,
                                                             mem_44095,
                                                             mem_44098,
                                                             mem_44100,
                                                             mem_44102,
                                                             mem_44105,
                                                             np.int64(segment_sizze_nonzzero_45408))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegred_small_33557_var,
                                     ((np.long(num_groups_33728) * np.long(segred_group_sizze_33727)),),
                                     (np.long(segred_group_sizze_33727),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_45444 = sdiv_up64(num_groups_33728,
                                             smax64(np.int64(1), m_27773))
        elements_per_thread_45445 = sdiv_up64(iota32_arg_28172,
                                              (segred_group_sizze_33727 * groups_per_segment_45444))
        virt_num_groups_45446 = (groups_per_segment_45444 * m_27773)
        num_threads_45447 = (num_groups_33728 * segred_group_sizze_33727)
        threads_per_segment_45448 = (groups_per_segment_45444 * segred_group_sizze_33727)
        group_res_arr_mem_45449 = opencl_alloc(self,
                                               (np.int32(1) * (segred_group_sizze_33727 * virt_num_groups_45446)),
                                               "group_res_arr_mem_45449")
        group_res_arr_mem_45451 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_33727 * virt_num_groups_45446)),
                                               "group_res_arr_mem_45451")
        group_res_arr_mem_45453 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_33727 * virt_num_groups_45446)),
                                               "group_res_arr_mem_45453")
        mainDetailedzicounter_mem_45455 = self.mainDetailedzicounter_mem_45455
        if ((1 * (np.long(num_groups_33728) * np.long(segred_group_sizze_33727))) != 0):
          self.mainDetailedzisegred_large_33557_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(np.int32(1))),
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33727))),
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33727))),
                                                             cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_33727))),
                                                             np.int64(iota32_arg_28172),
                                                             np.int64(num_groups_33728),
                                                             mem_44022,
                                                             mem_44089,
                                                             mem_44091,
                                                             mem_44095,
                                                             mem_44098,
                                                             mem_44100,
                                                             mem_44102,
                                                             mem_44105,
                                                             np.int64(groups_per_segment_45444),
                                                             np.int64(elements_per_thread_45445),
                                                             np.int64(virt_num_groups_45446),
                                                             group_res_arr_mem_45449,
                                                             group_res_arr_mem_45451,
                                                             group_res_arr_mem_45453,
                                                             mainDetailedzicounter_mem_45455)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegred_large_33557_var,
                                     ((np.long(num_groups_33728) * np.long(segred_group_sizze_33727)),),
                                     (np.long(segred_group_sizze_33727),))
          if synchronous:
            sync(self)
      mem_44089 = None
      mem_44095 = None
      segmap_usable_groups_33768 = sdiv_up64(m_27773, segmap_group_sizze_33767)
      mem_44108 = opencl_alloc(self, m_27773, "mem_44108")
      mem_44110 = opencl_alloc(self, bytes_43899, "mem_44110")
      if ((1 * (np.long(segmap_usable_groups_33768) * np.long(segmap_group_sizze_33767))) != 0):
        self.mainDetailedzisegmap_33523_var.set_args(self.global_failure,
                                                     np.int64(m_27773),
                                                     mem_44098, mem_44100,
                                                     mem_44108, mem_44110)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33523_var,
                                   ((np.long(segmap_usable_groups_33768) * np.long(segmap_group_sizze_33767)),),
                                   (np.long(segmap_group_sizze_33767),))
        if synchronous:
          sync(self)
      mem_44098 = None
      mem_44100 = None
      segmap_usable_groups_33791 = sdiv_up64(m_27773, segmap_group_sizze_33790)
      mem_44113 = opencl_alloc(self, bytes_43899, "mem_44113")
      mem_44115 = opencl_alloc(self, bytes_43899, "mem_44115")
      if ((1 * (np.long(segmap_usable_groups_33791) * np.long(segmap_group_sizze_33790))) != 0):
        self.mainDetailedzisegmap_33488_var.set_args(self.global_failure,
                                                     np.int64(N_27772),
                                                     np.int64(m_27773),
                                                     np.int32(n_27777),
                                                     defunc_4_map_res_mem_43920,
                                                     defunc_3_map_res_mem_43983,
                                                     mem_44091, mem_44102,
                                                     mem_44108, mem_44110,
                                                     mem_44113, mem_44115)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33488_var,
                                   ((np.long(segmap_usable_groups_33791) * np.long(segmap_group_sizze_33790)),),
                                   (np.long(segmap_group_sizze_33790),))
        if synchronous:
          sync(self)
      mem_44102 = None
      mem_44108 = None
      mem_44110 = None
      segmap_usable_groups_33835 = sdiv_up64(nest_sizze_32914,
                                             segmap_group_sizze_33834)
      if ((1 * (np.long(segmap_usable_groups_33835) * np.long(segmap_group_sizze_33834))) != 0):
        self.mainDetailedzisegmap_33435_var.set_args(self.global_failure,
                                                     np.int64(N_27772),
                                                     np.int64(m_27773),
                                                     np.int32(n_27777),
                                                     np.int64(iota32_arg_28172),
                                                     defunc_4_map_res_mem_43920,
                                                     defunc_3_map_res_mem_43983,
                                                     mem_44066, mem_44091,
                                                     mem_44105)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33435_var,
                                   ((np.long(segmap_usable_groups_33835) * np.long(segmap_group_sizze_33834)),),
                                   (np.long(segmap_group_sizze_33834),))
        if synchronous:
          sync(self)
      mem_44091 = None
      defunc_0_f_res_mem_44117 = mem_44066
      defunc_0_f_res_mem_44118 = mem_44105
      defunc_0_f_res_mem_44119 = mem_44113
      defunc_0_f_res_mem_44120 = mem_44115
    defunc_4_map_res_mem_43920 = None
    defunc_3_map_res_mem_43982 = None
    mem_44066 = None
    out_arrsizze_44347 = m_27773
    out_arrsizze_44349 = m_27773
    out_arrsizze_44351 = m_27773
    out_arrsizze_44353 = m_27773
    out_arrsizze_44355 = m_27773
    out_arrsizze_44356 = iota32_arg_28172
    out_arrsizze_44358 = m_27773
    out_arrsizze_44359 = iota32_arg_28172
    out_arrsizze_44361 = iota32_arg_28172
    out_arrsizze_44363 = m_27773
    out_arrsizze_44365 = m_27773
    out_arrsizze_44367 = m_27773
    out_arrsizze_44369 = m_27773
    out_arrsizze_44370 = N_27772
    out_arrsizze_44372 = m_27773
    out_arrsizze_44373 = N_27772
    out_mem_44346 = defunc_0_f_res_mem_44017
    out_mem_44348 = defunc_4_map_res_mem_43918
    out_mem_44350 = defunc_3_map_res_mem_43983
    out_mem_44352 = defunc_3_map_res_mem_43984
    out_mem_44354 = defunc_0_f_res_mem_44117
    out_mem_44357 = defunc_0_f_res_mem_44118
    out_mem_44360 = mem_44022
    out_mem_44362 = defunc_0_f_res_mem_44119
    out_mem_44364 = defunc_0_f_res_mem_44120
    out_mem_44366 = mem_44063
    out_mem_44368 = defunc_4_map_res_mem_43919
    out_mem_44371 = defunc_3_map_res_mem_43881
    return (out_mem_44346, out_arrsizze_44347, out_mem_44348,
            out_arrsizze_44349, out_mem_44350, out_arrsizze_44351,
            out_mem_44352, out_arrsizze_44353, out_mem_44354,
            out_arrsizze_44355, out_arrsizze_44356, out_mem_44357,
            out_arrsizze_44358, out_arrsizze_44359, out_mem_44360,
            out_arrsizze_44361, out_mem_44362, out_arrsizze_44363,
            out_mem_44364, out_arrsizze_44365, out_mem_44366,
            out_arrsizze_44367, out_mem_44368, out_arrsizze_44369,
            out_arrsizze_44370, out_mem_44371, out_arrsizze_44372,
            out_arrsizze_44373)
  def futhark_mainMagnitude(self, mappingindices_mem_43122, images_mem_43123,
                            N_28473, m_28474, N_28475, trend_28476, k_28477,
                            n_28478, freq_28479, hfrac_28480, lam_28481):
    dim_match_28484 = (N_28473 == N_28475)
    empty_or_match_cert_28485 = True
    assert dim_match_28484, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:178:1-184:32\n" % ("function arguments of wrong shape",))
    i32_res_28487 = sext_i32_i64(n_28478)
    x_28488 = (np.int32(2) * k_28477)
    k2p2_28489 = (np.int32(2) + x_28488)
    cond_28490 = slt32(np.int32(0), trend_28476)
    if cond_28490:
      k2p2zq_28491 = k2p2_28489
    else:
      k2p2zq_f_res_28492 = (k2p2_28489 - np.int32(1))
      k2p2zq_28491 = k2p2zq_f_res_28492
    i32_res_28493 = sext_i32_i64(k2p2zq_28491)
    binop_x_43126 = (N_28473 * i32_res_28493)
    bytes_43125 = (np.int64(4) * binop_x_43126)
    if cond_28490:
      bounds_invalid_upwards_28495 = slt64(i32_res_28493, np.int64(0))
      valid_28496 = not(bounds_invalid_upwards_28495)
      range_valid_c_28497 = True
      assert valid_28496, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:37:10-20\n   #3  bfastfinal.fut:27:17-66\n   #4  bfastfinal.fut:183:5-58\n   #5  bfastfinal.fut:178:1-184:32\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_28493,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_34017 = self.sizes["mainMagnitude.segmap_group_size_33947"]
      segmap_usable_groups_34018 = sdiv_up64(binop_x_43126,
                                             segmap_group_sizze_34017)
      mem_43127 = opencl_alloc(self, bytes_43125, "mem_43127")
      if ((1 * (np.long(segmap_usable_groups_34018) * np.long(segmap_group_sizze_34017))) != 0):
        self.mainMagnitudezisegmap_33944_var.set_args(self.global_failure,
                                                      np.int64(N_28473),
                                                      np.float32(freq_28479),
                                                      np.int64(i32_res_28493),
                                                      mappingindices_mem_43122,
                                                      mem_43127)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_33944_var,
                                   ((np.long(segmap_usable_groups_34018) * np.long(segmap_group_sizze_34017)),),
                                   (np.long(segmap_group_sizze_34017),))
        if synchronous:
          sync(self)
      binop_p_mem_43132 = mem_43127
    else:
      bounds_invalid_upwards_28521 = slt64(i32_res_28493, np.int64(0))
      valid_28522 = not(bounds_invalid_upwards_28521)
      range_valid_c_28523 = True
      assert valid_28522, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:49:10-22\n   #3  bfastfinal.fut:28:17-64\n   #4  bfastfinal.fut:183:5-58\n   #5  bfastfinal.fut:178:1-184:32\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_28493,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_34191 = self.sizes["mainMagnitude.segmap_group_size_34125"]
      segmap_usable_groups_34192 = sdiv_up64(binop_x_43126,
                                             segmap_group_sizze_34191)
      mem_43131 = opencl_alloc(self, bytes_43125, "mem_43131")
      if ((1 * (np.long(segmap_usable_groups_34192) * np.long(segmap_group_sizze_34191))) != 0):
        self.mainMagnitudezisegmap_34122_var.set_args(self.global_failure,
                                                      np.int64(N_28473),
                                                      np.float32(freq_28479),
                                                      np.int64(i32_res_28493),
                                                      mappingindices_mem_43122,
                                                      mem_43131)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_34122_var,
                                   ((np.long(segmap_usable_groups_34192) * np.long(segmap_group_sizze_34191)),),
                                   (np.long(segmap_group_sizze_34191),))
        if synchronous:
          sync(self)
      binop_p_mem_43132 = mem_43131
    x_28546 = (N_28473 * N_28473)
    y_28547 = (np.int64(2) * N_28473)
    x_28548 = (x_28546 + y_28547)
    x_28549 = (np.int64(1) + x_28548)
    y_28550 = (np.int64(1) + N_28473)
    zzero_28551 = (y_28550 == np.int64(0))
    nonzzero_28552 = not(zzero_28551)
    nonzzero_cert_28553 = True
    assert nonzzero_28552, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:34:32-60\n   #1  bfastfinal.fut:183:5-58\n   #2  bfastfinal.fut:178:1-184:32\n" % ("division by zero",))
    x_28554 = sdiv64(x_28549, y_28550)
    x_28555 = (x_28554 - N_28473)
    binop_p_28556 = (x_28555 - np.int64(1))
    defunc_0_f_res_28557 = sext_i64_i32(binop_p_28556)
    i32_res_28558 = sitofp_i32_f32(defunc_0_f_res_28557)
    segmap_group_sizze_34274 = self.sizes["mainMagnitude.segmap_group_size_34253"]
    segmap_usable_groups_34275 = sdiv_up64(binop_x_43126,
                                           segmap_group_sizze_34274)
    mem_43135 = opencl_alloc(self, bytes_43125, "mem_43135")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_43135, np.int64(0),
                                                binop_p_mem_43132, np.int64(0),
                                                np.int64(1), N_28473,
                                                i32_res_28493)
    mem_43139 = opencl_alloc(self, bytes_43125, "mem_43139")
    if ((1 * (np.long(segmap_usable_groups_34275) * np.long(segmap_group_sizze_34274))) != 0):
      self.mainMagnitudezisegmap_34250_var.set_args(self.global_failure,
                                                    np.int64(N_28473),
                                                    np.int64(i32_res_28493),
                                                    np.float32(i32_res_28558),
                                                    mem_43135, mem_43139)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_34250_var,
                                 ((np.long(segmap_usable_groups_34275) * np.long(segmap_group_sizze_34274)),),
                                 (np.long(segmap_group_sizze_34274),))
      if synchronous:
        sync(self)
    eq_x_y_28566 = (np.int64(0) == i32_res_28493)
    p_and_eq_x_y_28567 = (cond_28490 and eq_x_y_28566)
    not_p_28568 = not(cond_28490)
    p_and_eq_x_y_28569 = (eq_x_y_28566 and not_p_28568)
    empty_slice_28570 = (p_and_eq_x_y_28567 or p_and_eq_x_y_28569)
    m_28571 = (i32_res_28493 - np.int64(1))
    zzero_leq_i_p_m_t_s_28572 = sle64(np.int64(0), m_28571)
    i_p_m_t_s_leq_w_28573 = slt64(m_28571, i32_res_28493)
    i_lte_j_28574 = sle64(np.int64(0), i32_res_28493)
    y_28575 = (zzero_leq_i_p_m_t_s_28572 and i_p_m_t_s_leq_w_28573)
    y_28576 = (i_lte_j_28574 and y_28575)
    ok_or_empty_28577 = (empty_slice_28570 or y_28576)
    empty_slice_28578 = (i32_res_28487 == np.int64(0))
    m_28579 = (i32_res_28487 - np.int64(1))
    zzero_leq_i_p_m_t_s_28580 = sle64(np.int64(0), m_28579)
    i_p_m_t_s_leq_w_28581 = slt64(m_28579, N_28473)
    i_lte_j_28582 = sle64(np.int64(0), i32_res_28487)
    y_28583 = (zzero_leq_i_p_m_t_s_28580 and i_p_m_t_s_leq_w_28581)
    y_28584 = (i_lte_j_28582 and y_28583)
    ok_or_empty_28585 = (empty_slice_28578 or y_28584)
    index_ok_28586 = (ok_or_empty_28577 and ok_or_empty_28585)
    index_certs_28587 = True
    assert index_ok_28586, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:37:15-23\n   #1  bfastfinal.fut:183:5-58\n   #2  bfastfinal.fut:178:1-184:32\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_28487,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               i32_res_28493,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_28473,
                                                                                                                                                                               "]."))
    empty_slice_28589 = (i32_res_28493 == np.int64(0))
    ok_or_empty_28590 = (y_28576 or empty_slice_28589)
    index_ok_28591 = (ok_or_empty_28585 and ok_or_empty_28590)
    index_certs_28592 = True
    assert index_ok_28591, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:38:15-24\n   #1  bfastfinal.fut:183:5-58\n   #2  bfastfinal.fut:178:1-184:32\n" % ("Index [:",
                                                                                                                                                                               i32_res_28487,
                                                                                                                                                                               ", ",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":] out of bounds for array of shape [",
                                                                                                                                                                               N_28473,
                                                                                                                                                                               "][",
                                                                                                                                                                               i32_res_28493,
                                                                                                                                                                               "]."))
    empty_slice_28594 = (m_28474 == np.int64(0))
    m_28595 = (m_28474 - np.int64(1))
    zzero_leq_i_p_m_t_s_28596 = sle64(np.int64(0), m_28595)
    i_p_m_t_s_leq_w_28597 = slt64(m_28595, m_28474)
    i_lte_j_28598 = sle64(np.int64(0), m_28474)
    y_28599 = (zzero_leq_i_p_m_t_s_28596 and i_p_m_t_s_leq_w_28597)
    y_28600 = (i_lte_j_28598 and y_28599)
    ok_or_empty_28601 = (empty_slice_28594 or y_28600)
    index_ok_28602 = (ok_or_empty_28585 and ok_or_empty_28601)
    index_certs_28603 = True
    assert index_ok_28602, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:39:15-28\n   #1  bfastfinal.fut:183:5-58\n   #2  bfastfinal.fut:178:1-184:32\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_28487,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               m_28474,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_28473,
                                                                                                                                                                               "]."))
    suff_outer_par_34281 = (self.sizes["mainMagnitude.suff_outer_par_6"] <= m_28474)
    segmap_group_sizze_34307 = self.sizes["mainMagnitude.segmap_group_size_34285"]
    max_num_groups_44367 = self.sizes["mainMagnitude.segmap_num_groups_34287"]
    num_groups_34308 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28474,
                                                            segmap_group_sizze_34307),
                                                  sext_i32_i64(max_num_groups_44367))))
    nest_sizze_34483 = (m_28474 * i32_res_28493)
    segmap_group_sizze_34484 = self.sizes["mainMagnitude.segmap_group_size_34332"]
    max_num_groups_44368 = self.sizes["mainMagnitude.segmap_num_groups_34334"]
    num_groups_34485 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_34483,
                                                            segmap_group_sizze_34484),
                                                  sext_i32_i64(max_num_groups_44368))))
    suff_outer_par_34489 = (self.sizes["mainMagnitude.suff_outer_par_7"] <= nest_sizze_34483)
    y_34513 = (i32_res_28493 * i32_res_28493)
    comparatee_34514 = (m_28474 * y_34513)
    suff_outer_par_34515 = (self.sizes["mainMagnitude.suff_outer_par_8"] <= comparatee_34514)
    nest_sizze_34535 = (i32_res_28487 * comparatee_34514)
    segred_group_sizze_34536 = self.sizes["mainMagnitude.segred_group_size_34392"]
    max_num_groups_44369 = self.sizes["mainMagnitude.segred_num_groups_34394"]
    num_groups_34537 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_34535,
                                                            segred_group_sizze_34536),
                                                  sext_i32_i64(max_num_groups_44369))))
    Tx_41280 = self.sizes["mainMagnitude.Tx_41278"]
    Ty_41281 = self.sizes["mainMagnitude.Ty_41279"]
    Ty_41282 = smin64(i32_res_28493, Ty_41281)
    Tx_41283 = smin64(i32_res_28493, Tx_41280)
    gridDim_zz_41286 = sdiv_up64(m_28474, np.int64(30))
    group_sizze_41289 = (Ty_41282 * Tx_41283)
    binop_x_43141 = (m_28474 * N_28475)
    bytes_43140 = (np.int64(4) * binop_x_43141)
    bytes_43185 = (np.int64(4) * comparatee_34514)
    bytes_43144 = (np.int64(4) * y_34513)
    binop_x_43288 = (i32_res_28493 * nest_sizze_34483)
    bytes_43286 = (np.int64(4) * binop_x_43288)
    bytes_43190 = (np.int64(4) * i32_res_28493)
    binop_x_43219 = (np.int64(30) * group_sizze_41289)
    bytes_43217 = (np.int64(4) * binop_x_43219)
    binop_x_44121 = (np.int64(4) * Ty_41282)
    binop_x_44122 = (Tx_41283 * binop_x_44121)
    sizze_44123 = (np.int64(30) * binop_x_44122)
    num_threads_44253 = (segmap_group_sizze_34307 * num_groups_34308)
    total_sizze_44254 = (bytes_43144 * num_threads_44253)
    num_threads_44255 = (segmap_group_sizze_34484 * num_groups_34485)
    total_sizze_44256 = (bytes_43190 * num_threads_44255)
    local_memory_capacity_44491 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44491)) and suff_outer_par_34281):
      mem_43142 = opencl_alloc(self, bytes_43140, "mem_43142")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43142, np.int64(0),
                                                  images_mem_43123, np.int64(0),
                                                  np.int64(1), N_28475, m_28474)
      mem_43188 = opencl_alloc(self, bytes_43185, "mem_43188")
      mem_43146 = opencl_alloc(self, total_sizze_44254, "mem_43146")
      if ((1 * (np.long(num_groups_34308) * np.long(segmap_group_sizze_34307))) != 0):
        self.mainMagnitudezisegmap_34283_var.set_args(self.global_failure,
                                                      np.int64(N_28473),
                                                      np.int64(m_28474),
                                                      np.int32(n_28478),
                                                      np.int32(k2p2zq_28491),
                                                      np.int64(i32_res_28493),
                                                      np.int64(num_groups_34308),
                                                      binop_p_mem_43132,
                                                      mem_43139, mem_43142,
                                                      mem_43146, mem_43188)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_34283_var,
                                   ((np.long(num_groups_34308) * np.long(segmap_group_sizze_34307)),),
                                   (np.long(segmap_group_sizze_34307),))
        if synchronous:
          sync(self)
      mem_43142 = None
      mem_43146 = None
      mem_43289 = opencl_alloc(self, bytes_43286, "mem_43289")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43289, np.int64(0),
                                                  mem_43188, np.int64(0),
                                                  np.int64(1), m_28474,
                                                  (i32_res_28493 * i32_res_28493))
      mem_43188 = None
      defunc_3_map_res_mem_43291 = mem_43289
    else:
      local_memory_capacity_44490 = self.max_local_memory
      if (sle64(np.int64(0),
                sext_i32_i64(local_memory_capacity_44490)) and suff_outer_par_34489):
        mem_43207 = opencl_alloc(self, bytes_43286, "mem_43207")
        mem_43191 = opencl_alloc(self, total_sizze_44256, "mem_43191")
        if ((1 * (np.long(num_groups_34485) * np.long(segmap_group_sizze_34484))) != 0):
          self.mainMagnitudezisegmap_34329_var.set_args(self.global_failure,
                                                        np.int64(m_28474),
                                                        np.int64(N_28475),
                                                        np.int32(n_28478),
                                                        np.int32(k2p2zq_28491),
                                                        np.int64(i32_res_28493),
                                                        np.int64(num_groups_34485),
                                                        images_mem_43123,
                                                        mem_43135, mem_43139,
                                                        mem_43191, mem_43207)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_34329_var,
                                     ((np.long(num_groups_34485) * np.long(segmap_group_sizze_34484)),),
                                     (np.long(segmap_group_sizze_34484),))
          if synchronous:
            sync(self)
        mem_43191 = None
        mem_43283 = opencl_alloc(self, bytes_43286, "mem_43283")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43283, np.int64(0),
                                                    mem_43207, np.int64(0),
                                                    np.int64(1),
                                                    (m_28474 * i32_res_28493),
                                                    i32_res_28493)
        mem_43207 = None
        defunc_3_map_res_mem_43285 = mem_43283
      else:
        local_memory_capacity_44489 = self.max_local_memory
        if (sle64(np.int64(120),
                  sext_i32_i64(local_memory_capacity_44489)) and suff_outer_par_34515):
          mem_43210 = opencl_alloc(self, bytes_43140, "mem_43210")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_43210, np.int64(0),
                                                      images_mem_43123,
                                                      np.int64(0), np.int64(1),
                                                      N_28475, m_28474)
          gridDim_x_41284 = sdiv_up64(i32_res_28493, Tx_41283)
          gridDim_y_41285 = sdiv_up64(i32_res_28493, Ty_41282)
          binop_x_41287 = (gridDim_y_41285 * gridDim_zz_41286)
          grid_sizze_41288 = (gridDim_x_41284 * binop_x_41287)
          count_shmem_41290 = sdiv_up64(np.int64(30), group_sizze_41289)
          mem_43270 = opencl_alloc(self, bytes_43286, "mem_43270")
          if ((1 * (np.long(grid_sizze_41288) * np.long(group_sizze_41289))) != 0):
            self.mainMagnitudezisegmap_intragroup_41294_var.set_args(self.global_failure,
                                                                     cl.LocalMemory(np.long(np.int64(120))),
                                                                     np.int64(m_28474),
                                                                     np.int32(n_28478),
                                                                     np.int64(i32_res_28493),
                                                                     np.int64(Ty_41282),
                                                                     np.int64(Tx_41283),
                                                                     np.int64(gridDim_x_41284),
                                                                     np.int64(gridDim_y_41285),
                                                                     np.int64(group_sizze_41289),
                                                                     np.int64(count_shmem_41290),
                                                                     mem_43135,
                                                                     mem_43139,
                                                                     mem_43210,
                                                                     mem_43270)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_intragroup_41294_var,
                                       ((np.long(grid_sizze_41288) * np.long(group_sizze_41289)),),
                                       (np.long(group_sizze_41289),))
            if synchronous:
              sync(self)
          mem_43210 = None
          defunc_3_map_res_mem_43279 = mem_43270
        else:
          mem_43273 = opencl_alloc(self, bytes_43125, "mem_43273")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_43273, np.int64(0),
                                                      mem_43139, np.int64(0),
                                                      np.int64(1),
                                                      i32_res_28493, N_28473)
          mem_43278 = opencl_alloc(self, bytes_43286, "mem_43278")
          if slt64((i32_res_28487 * np.int64(2)), segred_group_sizze_34536):
            segment_sizze_nonzzero_44429 = smax64(np.int64(1), i32_res_28487)
            num_threads_44430 = (num_groups_34537 * segred_group_sizze_34536)
            if ((1 * (np.long(num_groups_34537) * np.long(segred_group_sizze_34536))) != 0):
              self.mainMagnitudezisegred_small_34398_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34536))),
                                                                  np.int64(N_28473),
                                                                  np.int64(m_28474),
                                                                  np.int64(N_28475),
                                                                  np.int64(i32_res_28487),
                                                                  np.int64(i32_res_28493),
                                                                  np.int64(num_groups_34537),
                                                                  images_mem_43123,
                                                                  binop_p_mem_43132,
                                                                  mem_43273,
                                                                  mem_43278,
                                                                  np.int64(segment_sizze_nonzzero_44429))
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainMagnitudezisegred_small_34398_var,
                                         ((np.long(num_groups_34537) * np.long(segred_group_sizze_34536)),),
                                         (np.long(segred_group_sizze_34536),))
              if synchronous:
                sync(self)
          else:
            groups_per_segment_44450 = sdiv_up64(num_groups_34537,
                                                 smax64(np.int64(1),
                                                        ((m_28474 * i32_res_28493) * i32_res_28493)))
            elements_per_thread_44451 = sdiv_up64(i32_res_28487,
                                                  (segred_group_sizze_34536 * groups_per_segment_44450))
            virt_num_groups_44452 = (groups_per_segment_44450 * ((m_28474 * i32_res_28493) * i32_res_28493))
            num_threads_44453 = (num_groups_34537 * segred_group_sizze_34536)
            threads_per_segment_44454 = (groups_per_segment_44450 * segred_group_sizze_34536)
            group_res_arr_mem_44455 = opencl_alloc(self,
                                                   (np.int32(4) * (segred_group_sizze_34536 * virt_num_groups_44452)),
                                                   "group_res_arr_mem_44455")
            mainMagnitudezicounter_mem_44457 = self.mainMagnitudezicounter_mem_44457
            if ((1 * (np.long(num_groups_34537) * np.long(segred_group_sizze_34536))) != 0):
              self.mainMagnitudezisegred_large_34398_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(np.int32(1))),
                                                                  cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34536))),
                                                                  np.int64(N_28473),
                                                                  np.int64(N_28475),
                                                                  np.int64(i32_res_28487),
                                                                  np.int64(i32_res_28493),
                                                                  np.int64(num_groups_34537),
                                                                  images_mem_43123,
                                                                  binop_p_mem_43132,
                                                                  mem_43273,
                                                                  mem_43278,
                                                                  np.int64(groups_per_segment_44450),
                                                                  np.int64(elements_per_thread_44451),
                                                                  np.int64(virt_num_groups_44452),
                                                                  np.int64(threads_per_segment_44454),
                                                                  group_res_arr_mem_44455,
                                                                  mainMagnitudezicounter_mem_44457)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainMagnitudezisegred_large_34398_var,
                                         ((np.long(num_groups_34537) * np.long(segred_group_sizze_34536)),),
                                         (np.long(segred_group_sizze_34536),))
              if synchronous:
                sync(self)
          mem_43273 = None
          defunc_3_map_res_mem_43279 = mem_43278
        defunc_3_map_res_mem_43285 = defunc_3_map_res_mem_43279
      defunc_3_map_res_mem_43291 = defunc_3_map_res_mem_43285
    m_28624 = (np.int32(2) * k2p2zq_28491)
    nm_28625 = (k2p2zq_28491 * m_28624)
    i32_res_28626 = sext_i32_i64(nm_28625)
    bounds_invalid_upwards_28627 = slt64(i32_res_28626, np.int64(0))
    valid_28628 = not(bounds_invalid_upwards_28627)
    range_valid_c_28629 = True
    assert valid_28628, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:78:34-50\n   #2  bfastfinal.fut:49:35-50\n   #3  bfastfinal.fut:183:5-58\n   #4  bfastfinal.fut:178:1-184:32\n" % ("Range ",
                                                                                                                                                                                                                                        np.int64(0),
                                                                                                                                                                                                                                        "..",
                                                                                                                                                                                                                                        np.int64(1),
                                                                                                                                                                                                                                        "..<",
                                                                                                                                                                                                                                        i32_res_28626,
                                                                                                                                                                                                                                        " is invalid."))
    zzero_28634 = (m_28624 == np.int32(0))
    nonzzero_28635 = not(zzero_28634)
    nonzzero_cert_28636 = True
    assert nonzzero_28635, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:73:41-47\n   #1  helpers.fut:73:14-78:52\n   #2  bfastfinal.fut:49:35-50\n   #3  bfastfinal.fut:183:5-58\n   #4  bfastfinal.fut:178:1-184:32\n" % ("division by zero",))
    loop_nonempty_28637 = slt32(np.int32(0), k2p2zq_28491)
    loop_not_taken_28638 = not(loop_nonempty_28637)
    protect_assert_disj_28639 = (nonzzero_28635 or loop_not_taken_28638)
    nonzzero_cert_28640 = True
    assert protect_assert_disj_28639, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:59:43-49\n   #1  helpers.fut:59:16-65:44\n   #2  helpers.fut:79:15-33\n   #3  bfastfinal.fut:49:35-50\n   #4  bfastfinal.fut:183:5-58\n   #5  bfastfinal.fut:178:1-184:32\n" % ("division by zero",))
    i32_res_28641 = sext_i32_i64(m_28624)
    x_28642 = (i32_res_28493 * i32_res_28641)
    dim_ok_28643 = (x_28642 == i32_res_28626)
    dim_ok_cert_28644 = True
    assert dim_ok_28643, ("Error: %s\n\nBacktrace:\n-> #0  /prelude/array.fut:95:3-33\n   #1  helpers.fut:81:9-45\n   #2  bfastfinal.fut:49:35-50\n   #3  bfastfinal.fut:183:5-58\n   #4  bfastfinal.fut:178:1-184:32\n" % ("new shape has different number of elements than old shape",))
    j_m_i_28645 = (i32_res_28641 - i32_res_28493)
    empty_slice_28646 = (j_m_i_28645 == np.int64(0))
    m_28647 = (j_m_i_28645 - np.int64(1))
    i_p_m_t_s_28648 = (i32_res_28493 + m_28647)
    zzero_leq_i_p_m_t_s_28649 = sle64(np.int64(0), i_p_m_t_s_28648)
    i_p_m_t_s_leq_w_28650 = slt64(i_p_m_t_s_28648, i32_res_28641)
    i_lte_j_28651 = sle64(i32_res_28493, i32_res_28641)
    y_28652 = (i_lte_j_28574 and i_p_m_t_s_leq_w_28650)
    y_28653 = (zzero_leq_i_p_m_t_s_28649 and y_28652)
    y_28654 = (i_lte_j_28651 and y_28653)
    forwards_ok_28655 = (i_lte_j_28574 and y_28654)
    ok_or_empty_28656 = (empty_slice_28646 or forwards_ok_28655)
    index_ok_28657 = (ok_or_empty_28590 and ok_or_empty_28656)
    index_certs_28658 = True
    assert index_ok_28657, ("Error: %s%d%s%d%s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-88\n   #1  bfastfinal.fut:49:35-50\n   #2  bfastfinal.fut:183:5-58\n   #3  bfastfinal.fut:178:1-184:32\n" % ("Index [",
                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_28493,
                                                                                                                                                                                                                   ", ",
                                                                                                                                                                                                                   i32_res_28493,
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_28641,
                                                                                                                                                                                                                   "] out of bounds for array of shape [",
                                                                                                                                                                                                                   i32_res_28493,
                                                                                                                                                                                                                   "][",
                                                                                                                                                                                                                   i32_res_28641,
                                                                                                                                                                                                                   "]."))
    dim_match_28659 = (i32_res_28493 == j_m_i_28645)
    empty_or_match_cert_28660 = True
    assert dim_match_28659, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-103\n   #1  bfastfinal.fut:49:35-50\n   #2  bfastfinal.fut:183:5-58\n   #3  bfastfinal.fut:178:1-184:32\n" % ("Value of (core language) shape (",
                                                                                                                                                                                                             i32_res_28493,
                                                                                                                                                                                                             ", ",
                                                                                                                                                                                                             j_m_i_28645,
                                                                                                                                                                                                             ") cannot match shape of type `[",
                                                                                                                                                                                                             i32_res_28493,
                                                                                                                                                                                                             "][",
                                                                                                                                                                                                             i32_res_28493,
                                                                                                                                                                                                             "]f32`."))
    max_group_sizze_34751 = self.max_group_size
    fits_34752 = sle64(i32_res_28626, max_group_sizze_34751)
    suff_intra_par_34750 = (self.sizes["mainMagnitude.suff_intra_par_11"] <= i32_res_28626)
    intra_suff_and_fits_34753 = (suff_intra_par_34750 and fits_34752)
    nest_sizze_35237 = (m_28474 * i32_res_28626)
    segmap_group_sizze_35238 = self.sizes["mainMagnitude.segmap_group_size_35197"]
    suff_intra_par_35265 = (self.sizes["mainMagnitude.suff_intra_par_13"] <= i32_res_28626)
    intra_suff_and_fits_35266 = (fits_34752 and suff_intra_par_35265)
    segmap_group_sizze_35302 = self.sizes["mainMagnitude.segmap_group_size_35103"]
    segmap_group_sizze_35318 = self.sizes["mainMagnitude.segmap_group_size_35036"]
    segmap_group_sizze_35352 = self.sizes["mainMagnitude.segmap_group_size_34982"]
    y_35362 = (i32_res_28493 * j_m_i_28645)
    nest_sizze_35363 = (m_28474 * y_35362)
    segmap_group_sizze_35364 = self.sizes["mainMagnitude.segmap_group_size_34817"]
    segmap_usable_groups_35303 = sdiv_up_safe64(m_28474,
                                                segmap_group_sizze_35302)
    segmap_usable_groups_35319 = sdiv_up_safe64(nest_sizze_35237,
                                                segmap_group_sizze_35318)
    segmap_usable_groups_35353 = sdiv_up_safe64(nest_sizze_35237,
                                                segmap_group_sizze_35352)
    bytes_43294 = (np.int64(4) * i32_res_28626)
    bytes_43317 = (np.int64(4) * nest_sizze_35237)
    binop_x_43368 = (j_m_i_28645 * nest_sizze_34483)
    bytes_43366 = (np.int64(4) * binop_x_43368)
    local_memory_capacity_44554 = self.max_local_memory
    if (sle64((bytes_43294 + bytes_43294),
              sext_i32_i64(local_memory_capacity_44554)) and intra_suff_and_fits_34753):
      mem_43315 = opencl_alloc(self, bytes_43286, "mem_43315")
      if ((1 * (np.long(m_28474) * np.long(i32_res_28626))) != 0):
        self.mainMagnitudezisegmap_intragroup_34633_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(bytes_43294)),
                                                                 cl.LocalMemory(np.long(bytes_43294)),
                                                                 np.int32(k2p2zq_28491),
                                                                 np.int64(i32_res_28493),
                                                                 np.int32(m_28624),
                                                                 np.int64(i32_res_28626),
                                                                 np.int64(i32_res_28641),
                                                                 defunc_3_map_res_mem_43291,
                                                                 mem_43315)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_34633_var,
                                   ((np.long(m_28474) * np.long(i32_res_28626)),),
                                   (np.long(i32_res_28626),))
        if synchronous:
          sync(self)
      defunc_3_map_res_mem_43370 = mem_43315
    else:
      segmap_usable_groups_35239 = sdiv_up64(nest_sizze_35237,
                                             segmap_group_sizze_35238)
      mem_43319 = opencl_alloc(self, bytes_43317, "mem_43319")
      if ((1 * (np.long(segmap_usable_groups_35239) * np.long(segmap_group_sizze_35238))) != 0):
        self.mainMagnitudezisegmap_35194_var.set_args(self.global_failure,
                                                      np.int64(m_28474),
                                                      np.int32(k2p2zq_28491),
                                                      np.int64(i32_res_28493),
                                                      np.int32(m_28624),
                                                      np.int64(i32_res_28626),
                                                      defunc_3_map_res_mem_43291,
                                                      mem_43319)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_35194_var,
                                   ((np.long(segmap_usable_groups_35239) * np.long(segmap_group_sizze_35238)),),
                                   (np.long(segmap_group_sizze_35238),))
        if synchronous:
          sync(self)
      ctx_param_ext_43320 = m_28474
      ctx_param_ext_43321 = i32_res_28626
      ctx_param_ext_43322 = np.int64(0)
      ctx_param_ext_43323 = i32_res_28626
      ctx_param_ext_43324 = m_28474
      ctx_param_ext_43325 = np.int64(1)
      ctx_param_ext_43326 = i32_res_28626
      mem_param_43327 = mem_43319
      i_35255 = np.int32(0)
      one_45550 = np.int32(1)
      for counter_45549 in range(k2p2zq_28491):
        i32_res_35257 = sext_i32_i64(i_35255)
        local_memory_capacity_44514 = self.max_local_memory
        if intra_suff_and_fits_35266:
          gauss_jordan_res_ixfn_43349 = m_28474
        else:
          gauss_jordan_res_ixfn_43349 = ctx_param_ext_43324
        local_memory_capacity_44515 = self.max_local_memory
        if intra_suff_and_fits_35266:
          gauss_jordan_res_ixfn_43350 = i32_res_28626
        else:
          gauss_jordan_res_ixfn_43350 = ctx_param_ext_43326
        local_memory_capacity_44516 = self.max_local_memory
        if intra_suff_and_fits_35266:
          gauss_jordan_res_ixfn_43351 = m_28474
        else:
          gauss_jordan_res_ixfn_43351 = ctx_param_ext_43320
        local_memory_capacity_44517 = self.max_local_memory
        if intra_suff_and_fits_35266:
          gauss_jordan_res_ixfn_43352 = i32_res_28626
        else:
          gauss_jordan_res_ixfn_43352 = ctx_param_ext_43321
        local_memory_capacity_44518 = self.max_local_memory
        if intra_suff_and_fits_35266:
          gauss_jordan_res_ixfn_43353 = i32_res_28626
        else:
          gauss_jordan_res_ixfn_43353 = ctx_param_ext_43323
        local_memory_capacity_44519 = self.max_local_memory
        if intra_suff_and_fits_35266:
          gauss_jordan_res_ixfn_43354 = np.int64(1)
        else:
          gauss_jordan_res_ixfn_43354 = ctx_param_ext_43325
        local_memory_capacity_44520 = self.max_local_memory
        if intra_suff_and_fits_35266:
          gauss_jordan_res_ixfn_43355 = np.int64(0)
        else:
          gauss_jordan_res_ixfn_43355 = ctx_param_ext_43322
        local_memory_capacity_44548 = self.max_local_memory
        if ((sle64(np.int64(0),
                   sext_i32_i64(local_memory_capacity_44548)) and sle64(bytes_43294,
                                                                        sext_i32_i64(local_memory_capacity_44548))) and intra_suff_and_fits_35266):
          mem_43332 = opencl_alloc(self, bytes_43317, "mem_43332")
          group_sizze_44524 = self.sizes["mainMagnitude.group_size_44524"]
          num_groups_44525 = sdiv_up64((m_28474 * i32_res_28626),
                                       group_sizze_44524)
          if ((1 * (np.long(num_groups_44525) * np.long(group_sizze_44524))) != 0):
            self.mainMagnitudezicopy_44521_var.set_args(np.int64(m_28474),
                                                        np.int64(i32_res_28626),
                                                        np.int64(ctx_param_ext_43322),
                                                        np.int64(ctx_param_ext_43323),
                                                        np.int64(ctx_param_ext_43325),
                                                        mem_param_43327,
                                                        mem_43332)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezicopy_44521_var,
                                       ((np.long(num_groups_44525) * np.long(group_sizze_44524)),),
                                       (np.long(group_sizze_44524),))
            if synchronous:
              sync(self)
          mem_43340 = opencl_alloc(self, bytes_43317, "mem_43340")
          if ((1 * (np.long(m_28474) * np.long(i32_res_28626))) != 0):
            self.mainMagnitudezisegmap_intragroup_34860_var.set_args(self.global_failure,
                                                                     cl.LocalMemory(np.long(bytes_43294)),
                                                                     np.int64(m_28474),
                                                                     np.int32(k2p2zq_28491),
                                                                     np.int32(m_28624),
                                                                     np.int64(i32_res_28626),
                                                                     np.int32(i_35255),
                                                                     np.int64(i32_res_35257),
                                                                     np.int64(ctx_param_ext_43322),
                                                                     np.int64(ctx_param_ext_43323),
                                                                     np.int64(ctx_param_ext_43325),
                                                                     mem_param_43327,
                                                                     mem_43332,
                                                                     mem_43340)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_intragroup_34860_var,
                                       ((np.long(m_28474) * np.long(i32_res_28626)),),
                                       (np.long(i32_res_28626),))
            if synchronous:
              sync(self)
          mem_43332 = None
          gauss_jordan_res_mem_43356 = mem_43340
        else:
          mem_43343 = opencl_alloc(self, m_28474, "mem_43343")
          if ((1 * (np.long(segmap_usable_groups_35303) * np.long(segmap_group_sizze_35302))) != 0):
            self.mainMagnitudezisegmap_35101_var.set_args(self.global_failure,
                                                          np.int64(m_28474),
                                                          np.int64(i32_res_35257),
                                                          np.int64(ctx_param_ext_43322),
                                                          np.int64(ctx_param_ext_43323),
                                                          np.int64(ctx_param_ext_43325),
                                                          mem_param_43327,
                                                          mem_43343)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_35101_var,
                                       ((np.long(segmap_usable_groups_35303) * np.long(segmap_group_sizze_35302)),),
                                       (np.long(segmap_group_sizze_35302),))
            if synchronous:
              sync(self)
          mem_43347 = opencl_alloc(self, bytes_43317, "mem_43347")
          if ((1 * (np.long(segmap_usable_groups_35319) * np.long(segmap_group_sizze_35318))) != 0):
            self.mainMagnitudezisegmap_35033_var.set_args(self.global_failure,
                                                          np.int64(m_28474),
                                                          np.int32(k2p2zq_28491),
                                                          np.int32(m_28624),
                                                          np.int64(i32_res_28626),
                                                          np.int32(i_35255),
                                                          np.int64(i32_res_35257),
                                                          np.int64(ctx_param_ext_43322),
                                                          np.int64(ctx_param_ext_43323),
                                                          np.int64(ctx_param_ext_43325),
                                                          mem_param_43327,
                                                          mem_43343, mem_43347)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_35033_var,
                                       ((np.long(segmap_usable_groups_35319) * np.long(segmap_group_sizze_35318)),),
                                       (np.long(segmap_group_sizze_35318),))
            if synchronous:
              sync(self)
          mem_43343 = None
          if ((1 * (np.long(segmap_usable_groups_35353) * np.long(segmap_group_sizze_35352))) != 0):
            self.mainMagnitudezisegmap_34979_var.set_args(self.global_failure,
                                                          np.int64(m_28474),
                                                          np.int64(i32_res_28626),
                                                          np.int64(ctx_param_ext_43322),
                                                          np.int64(ctx_param_ext_43323),
                                                          np.int64(ctx_param_ext_43325),
                                                          mem_param_43327,
                                                          mem_43347)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_34979_var,
                                       ((np.long(segmap_usable_groups_35353) * np.long(segmap_group_sizze_35352)),),
                                       (np.long(segmap_group_sizze_35352),))
            if synchronous:
              sync(self)
          mem_43347 = None
          gauss_jordan_res_mem_43356 = mem_param_43327
        ctx_param_ext_tmp_44505 = gauss_jordan_res_ixfn_43351
        ctx_param_ext_tmp_44506 = gauss_jordan_res_ixfn_43352
        ctx_param_ext_tmp_44507 = gauss_jordan_res_ixfn_43355
        ctx_param_ext_tmp_44508 = gauss_jordan_res_ixfn_43353
        ctx_param_ext_tmp_44509 = gauss_jordan_res_ixfn_43349
        ctx_param_ext_tmp_44510 = gauss_jordan_res_ixfn_43354
        ctx_param_ext_tmp_44511 = gauss_jordan_res_ixfn_43350
        mem_param_tmp_44512 = gauss_jordan_res_mem_43356
        ctx_param_ext_43320 = ctx_param_ext_tmp_44505
        ctx_param_ext_43321 = ctx_param_ext_tmp_44506
        ctx_param_ext_43322 = ctx_param_ext_tmp_44507
        ctx_param_ext_43323 = ctx_param_ext_tmp_44508
        ctx_param_ext_43324 = ctx_param_ext_tmp_44509
        ctx_param_ext_43325 = ctx_param_ext_tmp_44510
        ctx_param_ext_43326 = ctx_param_ext_tmp_44511
        mem_param_43327 = mem_param_tmp_44512
        i_35255 += one_45550
      gauss_jordan_res_r_ixfn_43357 = ctx_param_ext_43320
      gauss_jordan_res_r_ixfn_43358 = ctx_param_ext_43321
      gauss_jordan_res_r_ixfn_43359 = ctx_param_ext_43322
      gauss_jordan_res_r_ixfn_43360 = ctx_param_ext_43323
      gauss_jordan_res_r_ixfn_43361 = ctx_param_ext_43324
      gauss_jordan_res_r_ixfn_43362 = ctx_param_ext_43325
      gauss_jordan_res_r_ixfn_43363 = ctx_param_ext_43326
      gauss_jordan_res_r_mem_43364 = mem_param_43327
      mem_43319 = None
      segmap_usable_groups_35365 = sdiv_up64(nest_sizze_35363,
                                             segmap_group_sizze_35364)
      mem_43369 = opencl_alloc(self, bytes_43366, "mem_43369")
      if ((1 * (np.long(segmap_usable_groups_35365) * np.long(segmap_group_sizze_35364))) != 0):
        self.mainMagnitudezisegmap_34813_var.set_args(self.global_failure,
                                                      np.int64(m_28474),
                                                      np.int64(i32_res_28493),
                                                      np.int64(i32_res_28626),
                                                      np.int64(i32_res_28641),
                                                      np.int64(x_28642),
                                                      np.int64(j_m_i_28645),
                                                      np.int64(gauss_jordan_res_r_ixfn_43359),
                                                      np.int64(gauss_jordan_res_r_ixfn_43360),
                                                      np.int64(gauss_jordan_res_r_ixfn_43362),
                                                      gauss_jordan_res_r_mem_43364,
                                                      mem_43369)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_34813_var,
                                   ((np.long(segmap_usable_groups_35365) * np.long(segmap_group_sizze_35364)),),
                                   (np.long(segmap_group_sizze_35364),))
        if synchronous:
          sync(self)
      gauss_jordan_res_r_mem_43364 = None
      defunc_3_map_res_mem_43370 = mem_43369
    defunc_3_map_res_mem_43291 = None
    suff_outer_par_35373 = (self.sizes["mainMagnitude.suff_outer_par_16"] <= m_28474)
    segmap_group_sizze_35395 = self.sizes["mainMagnitude.segmap_group_size_35377"]
    max_num_groups_44555 = self.sizes["mainMagnitude.segmap_num_groups_35379"]
    num_groups_35396 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28474,
                                                            segmap_group_sizze_35395),
                                                  sext_i32_i64(max_num_groups_44555))))
    suff_outer_par_35480 = (self.sizes["mainMagnitude.suff_outer_par_17"] <= nest_sizze_34483)
    nest_sizze_35496 = (i32_res_28487 * nest_sizze_34483)
    segred_group_sizze_35497 = self.sizes["mainMagnitude.segred_group_size_35439"]
    max_num_groups_44556 = self.sizes["mainMagnitude.segred_num_groups_35441"]
    num_groups_35498 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_35496,
                                                            segred_group_sizze_35497),
                                                  sext_i32_i64(max_num_groups_44556))))
    Ty_41428 = self.sizes["mainMagnitude.Ty_41425"]
    Ry_41429 = self.sizes["mainMagnitude.Ry_41427"]
    Tx_41430 = self.sizes["mainMagnitude.Tx_41424"]
    Rx_41431 = self.sizes["mainMagnitude.Rx_41426"]
    Tk_41432 = self.sizes["mainMagnitude.Tk_41423"]
    TxRx_41435 = (Tx_41430 * Rx_41431)
    TyRy_41436 = (Ty_41428 * Ry_41429)
    a_loc_szz_41438 = (Tk_41432 * TyRy_41436)
    binop_x_41439 = (Tx_41430 * Tk_41432)
    b_loc_szz_41440 = (Rx_41431 * binop_x_41439)
    group_sizze_41444 = (Ty_41428 * Tx_41430)
    bytes_43389 = (np.int64(4) * nest_sizze_34483)
    binop_x_43403 = (Ry_41429 * group_sizze_41444)
    binop_x_43404 = (Rx_41431 * binop_x_43403)
    bytes_43401 = (np.int64(4) * binop_x_43404)
    binop_x_43395 = (Ry_41429 * Rx_41431)
    bytes_43394 = (np.int64(4) * binop_x_43395)
    bytes_43406 = (np.int64(4) * a_loc_szz_41438)
    bytes_43408 = (np.int64(4) * b_loc_szz_41440)
    bytes_43477 = (np.int64(4) * binop_x_43403)
    binop_x_43483 = (Rx_41431 * group_sizze_41444)
    bytes_43481 = (np.int64(4) * binop_x_43483)
    bytes_43469 = (np.int64(4) * Ry_41429)
    bytes_43471 = (np.int64(4) * Rx_41431)
    binop_x_44138 = (np.int64(4) * Ty_41428)
    binop_x_44139 = (Tx_41430 * binop_x_44138)
    binop_x_44140 = (Ry_41429 * binop_x_44139)
    sizze_44141 = (Rx_41431 * binop_x_44140)
    num_threads_44266 = (segmap_group_sizze_35395 * num_groups_35396)
    total_sizze_44267 = (bytes_43190 * num_threads_44266)
    local_memory_capacity_44686 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44686)) and suff_outer_par_35373):
      mem_43373 = opencl_alloc(self, bytes_43140, "mem_43373")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43373, np.int64(0),
                                                  images_mem_43123, np.int64(0),
                                                  np.int64(1), N_28475, m_28474)
      mem_43391 = opencl_alloc(self, bytes_43389, "mem_43391")
      mem_43376 = opencl_alloc(self, total_sizze_44267, "mem_43376")
      if ((1 * (np.long(num_groups_35396) * np.long(segmap_group_sizze_35395))) != 0):
        self.mainMagnitudezisegmap_35375_var.set_args(self.global_failure,
                                                      np.int64(N_28473),
                                                      np.int64(m_28474),
                                                      np.int32(n_28478),
                                                      np.int32(k2p2zq_28491),
                                                      np.int64(i32_res_28493),
                                                      np.int64(num_groups_35396),
                                                      binop_p_mem_43132,
                                                      mem_43373, mem_43376,
                                                      mem_43391)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_35375_var,
                                   ((np.long(num_groups_35396) * np.long(segmap_group_sizze_35395)),),
                                   (np.long(segmap_group_sizze_35395),))
        if synchronous:
          sync(self)
      mem_43373 = None
      mem_43376 = None
      mem_43589 = opencl_alloc(self, bytes_43389, "mem_43589")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43589, np.int64(0),
                                                  mem_43391, np.int64(0),
                                                  np.int64(1), m_28474,
                                                  i32_res_28493)
      mem_43391 = None
      defunc_3_map_res_mem_43591 = mem_43589
    else:
      local_memory_capacity_44685 = self.max_local_memory
      if (sle64((bytes_43406 + bytes_43408),
                sext_i32_i64(local_memory_capacity_44685)) and suff_outer_par_35480):
        tk_div_tx_41433 = sdiv_up64(Tk_41432, Tx_41430)
        tk_div_ty_41434 = sdiv_up64(Tk_41432, Ty_41428)
        gridDim_x_41441 = sdiv_up64(i32_res_28493, TxRx_41435)
        gridDim_y_41442 = sdiv_up64(m_28474, TyRy_41436)
        grid_sizze_41443 = (gridDim_x_41441 * gridDim_y_41442)
        full_tiles_41472 = squot64(i32_res_28487, Tk_41432)
        kk_41679 = (Tk_41432 * full_tiles_41472)
        mem_43581 = opencl_alloc(self, bytes_43389, "mem_43581")
        if ((1 * (np.long(grid_sizze_41443) * np.long(group_sizze_41444))) != 0):
          self.mainMagnitudezisegmap_intragroup_41447_var.set_args(self.global_failure,
                                                                   cl.LocalMemory(np.long(bytes_43408)),
                                                                   cl.LocalMemory(np.long(bytes_43406)),
                                                                   np.int64(m_28474),
                                                                   np.int64(N_28475),
                                                                   np.int64(i32_res_28487),
                                                                   np.int64(i32_res_28493),
                                                                   np.int64(gridDim_x_41441),
                                                                   np.int64(full_tiles_41472),
                                                                   np.int64(kk_41679),
                                                                   images_mem_43123,
                                                                   mem_43135,
                                                                   mem_43581)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_intragroup_41447_var,
                                     ((np.long(grid_sizze_41443) * np.long(group_sizze_41444)),),
                                     (np.long(group_sizze_41444),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43586 = mem_43581
      else:
        mem_43585 = opencl_alloc(self, bytes_43389, "mem_43585")
        if slt64((i32_res_28487 * np.int64(2)), segred_group_sizze_35497):
          segment_sizze_nonzzero_44625 = smax64(np.int64(1), i32_res_28487)
          num_threads_44626 = (num_groups_35498 * segred_group_sizze_35497)
          if ((1 * (np.long(num_groups_35498) * np.long(segred_group_sizze_35497))) != 0):
            self.mainMagnitudezisegred_small_35445_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35497))),
                                                                np.int64(N_28473),
                                                                np.int64(m_28474),
                                                                np.int64(N_28475),
                                                                np.int64(i32_res_28487),
                                                                np.int64(i32_res_28493),
                                                                np.int64(num_groups_35498),
                                                                images_mem_43123,
                                                                binop_p_mem_43132,
                                                                mem_43585,
                                                                np.int64(segment_sizze_nonzzero_44625))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_35445_var,
                                       ((np.long(num_groups_35498) * np.long(segred_group_sizze_35497)),),
                                       (np.long(segred_group_sizze_35497),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44646 = sdiv_up64(num_groups_35498,
                                               smax64(np.int64(1),
                                                      (m_28474 * i32_res_28493)))
          elements_per_thread_44647 = sdiv_up64(i32_res_28487,
                                                (segred_group_sizze_35497 * groups_per_segment_44646))
          virt_num_groups_44648 = (groups_per_segment_44646 * (m_28474 * i32_res_28493))
          num_threads_44649 = (num_groups_35498 * segred_group_sizze_35497)
          threads_per_segment_44650 = (groups_per_segment_44646 * segred_group_sizze_35497)
          group_res_arr_mem_44651 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_35497 * virt_num_groups_44648)),
                                                 "group_res_arr_mem_44651")
          mainMagnitudezicounter_mem_44653 = self.mainMagnitudezicounter_mem_44653
          if ((1 * (np.long(num_groups_35498) * np.long(segred_group_sizze_35497))) != 0):
            self.mainMagnitudezisegred_large_35445_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35497))),
                                                                np.int64(N_28473),
                                                                np.int64(N_28475),
                                                                np.int64(i32_res_28487),
                                                                np.int64(i32_res_28493),
                                                                np.int64(num_groups_35498),
                                                                images_mem_43123,
                                                                binop_p_mem_43132,
                                                                mem_43585,
                                                                np.int64(groups_per_segment_44646),
                                                                np.int64(elements_per_thread_44647),
                                                                np.int64(virt_num_groups_44648),
                                                                np.int64(threads_per_segment_44650),
                                                                group_res_arr_mem_44651,
                                                                mainMagnitudezicounter_mem_44653)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_35445_var,
                                       ((np.long(num_groups_35498) * np.long(segred_group_sizze_35497)),),
                                       (np.long(segred_group_sizze_35497),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43586 = mem_43585
      defunc_3_map_res_mem_43591 = defunc_3_map_res_mem_43586
    binop_p_mem_43132 = None
    mem_43135 = None
    suff_outer_par_35514 = (self.sizes["mainMagnitude.suff_outer_par_18"] <= m_28474)
    segmap_group_sizze_35535 = self.sizes["mainMagnitude.segmap_group_size_35518"]
    max_num_groups_44687 = self.sizes["mainMagnitude.segmap_num_groups_35520"]
    num_groups_35536 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28474,
                                                            segmap_group_sizze_35535),
                                                  sext_i32_i64(max_num_groups_44687))))
    suff_outer_par_35615 = (self.sizes["mainMagnitude.suff_outer_par_19"] <= nest_sizze_34483)
    segred_group_sizze_35630 = self.sizes["mainMagnitude.segred_group_size_35576"]
    max_num_groups_44688 = self.sizes["mainMagnitude.segred_num_groups_35578"]
    num_groups_35631 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_43288,
                                                            segred_group_sizze_35630),
                                                  sext_i32_i64(max_num_groups_44688))))
    tile_sizze_41891 = self.sizes["mainMagnitude.tile_size_41890"]
    group_sizze_41892 = (tile_sizze_41891 * tile_sizze_41891)
    bytes_43623 = (np.int64(4) * group_sizze_41892)
    binop_x_44154 = (np.int64(4) * tile_sizze_41891)
    sizze_44155 = (tile_sizze_41891 * binop_x_44154)
    num_threads_44270 = (segmap_group_sizze_35535 * num_groups_35536)
    total_sizze_44271 = (bytes_43190 * num_threads_44270)
    local_memory_capacity_44774 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44774)) and suff_outer_par_35514):
      mem_43595 = opencl_alloc(self, bytes_43185, "mem_43595")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43595, np.int64(0),
                                                  defunc_3_map_res_mem_43370,
                                                  np.int64(0), np.int64(1),
                                                  (i32_res_28493 * i32_res_28493),
                                                  m_28474)
      mem_43598 = opencl_alloc(self, bytes_43389, "mem_43598")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43598, np.int64(0),
                                                  defunc_3_map_res_mem_43591,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_28493, m_28474)
      mem_43616 = opencl_alloc(self, bytes_43389, "mem_43616")
      mem_43601 = opencl_alloc(self, total_sizze_44271, "mem_43601")
      if ((1 * (np.long(num_groups_35536) * np.long(segmap_group_sizze_35535))) != 0):
        self.mainMagnitudezisegmap_35516_var.set_args(self.global_failure,
                                                      np.int64(m_28474),
                                                      np.int32(k2p2zq_28491),
                                                      np.int64(i32_res_28493),
                                                      np.int64(num_groups_35536),
                                                      mem_43595, mem_43598,
                                                      mem_43601, mem_43616)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_35516_var,
                                   ((np.long(num_groups_35536) * np.long(segmap_group_sizze_35535)),),
                                   (np.long(segmap_group_sizze_35535),))
        if synchronous:
          sync(self)
      mem_43595 = None
      mem_43598 = None
      mem_43601 = None
      mem_43655 = opencl_alloc(self, bytes_43389, "mem_43655")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43655, np.int64(0),
                                                  mem_43616, np.int64(0),
                                                  np.int64(1), m_28474,
                                                  i32_res_28493)
      mem_43616 = None
      defunc_4_map_res_mem_43657 = mem_43655
    else:
      local_memory_capacity_44773 = self.max_local_memory
      if (sle64((bytes_43623 + bytes_43623),
                sext_i32_i64(local_memory_capacity_44773)) and suff_outer_par_35615):
        mem_43620 = opencl_alloc(self, bytes_43286, "mem_43620")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43620, np.int64(0),
                                                    defunc_3_map_res_mem_43370,
                                                    np.int64(0), np.int64(1),
                                                    i32_res_28493,
                                                    (m_28474 * i32_res_28493))
        num_groups_x_41893 = sdiv_up64(m_28474, tile_sizze_41891)
        num_groups_y_41894 = sdiv_up64(i32_res_28493, tile_sizze_41891)
        num_groups_top_41895 = (num_groups_x_41893 * num_groups_y_41894)
        num_whole_tiles_41912 = squot64(i32_res_28493, tile_sizze_41891)
        residual_input_42039 = srem64(i32_res_28493, tile_sizze_41891)
        cond_42040 = (residual_input_42039 == np.int64(0))
        mem_43647 = opencl_alloc(self, bytes_43389, "mem_43647")
        if ((1 * (np.long(num_groups_top_41895) * np.long(group_sizze_41892))) != 0):
          self.mainMagnitudezisegmap_intragroup_41896_var.set_args(self.global_failure,
                                                                   cl.LocalMemory(np.long(bytes_43623)),
                                                                   cl.LocalMemory(np.long(bytes_43623)),
                                                                   np.int64(m_28474),
                                                                   np.int64(i32_res_28493),
                                                                   np.int64(num_groups_y_41894),
                                                                   np.int64(num_whole_tiles_41912),
                                                                   np.int64(residual_input_42039),
                                                                   np.byte(cond_42040),
                                                                   defunc_3_map_res_mem_43591,
                                                                   mem_43620,
                                                                   mem_43647)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_intragroup_41896_var,
                                     ((np.long(num_groups_top_41895) * np.long(group_sizze_41892)),),
                                     (np.long(group_sizze_41892),))
          if synchronous:
            sync(self)
        mem_43620 = None
        defunc_4_map_res_mem_43652 = mem_43647
      else:
        mem_43651 = opencl_alloc(self, bytes_43389, "mem_43651")
        if slt64((i32_res_28493 * np.int64(2)), segred_group_sizze_35630):
          segment_sizze_nonzzero_44713 = smax64(np.int64(1), i32_res_28493)
          num_threads_44714 = (num_groups_35631 * segred_group_sizze_35630)
          if ((1 * (np.long(num_groups_35631) * np.long(segred_group_sizze_35630))) != 0):
            self.mainMagnitudezisegred_small_35582_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35630))),
                                                                np.int64(m_28474),
                                                                np.int64(i32_res_28493),
                                                                np.int64(num_groups_35631),
                                                                defunc_3_map_res_mem_43370,
                                                                defunc_3_map_res_mem_43591,
                                                                mem_43651,
                                                                np.int64(segment_sizze_nonzzero_44713))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_35582_var,
                                       ((np.long(num_groups_35631) * np.long(segred_group_sizze_35630)),),
                                       (np.long(segred_group_sizze_35630),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44734 = sdiv_up64(num_groups_35631,
                                               smax64(np.int64(1),
                                                      (m_28474 * i32_res_28493)))
          elements_per_thread_44735 = sdiv_up64(i32_res_28493,
                                                (segred_group_sizze_35630 * groups_per_segment_44734))
          virt_num_groups_44736 = (groups_per_segment_44734 * (m_28474 * i32_res_28493))
          num_threads_44737 = (num_groups_35631 * segred_group_sizze_35630)
          threads_per_segment_44738 = (groups_per_segment_44734 * segred_group_sizze_35630)
          group_res_arr_mem_44739 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_35630 * virt_num_groups_44736)),
                                                 "group_res_arr_mem_44739")
          mainMagnitudezicounter_mem_44741 = self.mainMagnitudezicounter_mem_44741
          if ((1 * (np.long(num_groups_35631) * np.long(segred_group_sizze_35630))) != 0):
            self.mainMagnitudezisegred_large_35582_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35630))),
                                                                np.int64(i32_res_28493),
                                                                np.int64(num_groups_35631),
                                                                defunc_3_map_res_mem_43370,
                                                                defunc_3_map_res_mem_43591,
                                                                mem_43651,
                                                                np.int64(groups_per_segment_44734),
                                                                np.int64(elements_per_thread_44735),
                                                                np.int64(virt_num_groups_44736),
                                                                np.int64(threads_per_segment_44738),
                                                                group_res_arr_mem_44739,
                                                                mainMagnitudezicounter_mem_44741)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_35582_var,
                                       ((np.long(num_groups_35631) * np.long(segred_group_sizze_35630)),),
                                       (np.long(segred_group_sizze_35630),))
            if synchronous:
              sync(self)
        defunc_4_map_res_mem_43652 = mem_43651
      defunc_4_map_res_mem_43657 = defunc_4_map_res_mem_43652
    defunc_3_map_res_mem_43370 = None
    defunc_3_map_res_mem_43591 = None
    suff_outer_par_35646 = (self.sizes["mainMagnitude.suff_outer_par_20"] <= m_28474)
    segmap_group_sizze_35666 = self.sizes["mainMagnitude.segmap_group_size_35650"]
    max_num_groups_44775 = self.sizes["mainMagnitude.segmap_num_groups_35652"]
    num_groups_35667 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28474,
                                                            segmap_group_sizze_35666),
                                                  sext_i32_i64(max_num_groups_44775))))
    comparatee_35742 = (N_28473 * m_28474)
    suff_outer_par_35743 = (self.sizes["mainMagnitude.suff_outer_par_21"] <= comparatee_35742)
    nest_sizze_35757 = (i32_res_28493 * comparatee_35742)
    segred_group_sizze_35758 = self.sizes["mainMagnitude.segred_group_size_35706"]
    max_num_groups_44776 = self.sizes["mainMagnitude.segred_num_groups_35708"]
    num_groups_35759 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_35757,
                                                            segred_group_sizze_35758),
                                                  sext_i32_i64(max_num_groups_44776))))
    Ty_42169 = self.sizes["mainMagnitude.Ty_42166"]
    Ry_42170 = self.sizes["mainMagnitude.Ry_42168"]
    Tx_42171 = self.sizes["mainMagnitude.Tx_42165"]
    Rx_42172 = self.sizes["mainMagnitude.Rx_42167"]
    Tk_42173 = self.sizes["mainMagnitude.Tk_42164"]
    TxRx_42176 = (Tx_42171 * Rx_42172)
    TyRy_42177 = (Ty_42169 * Ry_42170)
    a_loc_szz_42179 = (Tk_42173 * TyRy_42177)
    binop_x_42180 = (Tx_42171 * Tk_42173)
    b_loc_szz_42181 = (Rx_42172 * binop_x_42180)
    group_sizze_42185 = (Ty_42169 * Tx_42171)
    bytes_43676 = (np.int64(4) * comparatee_35742)
    bytes_43662 = (np.int64(4) * N_28473)
    binop_x_43693 = (Ry_42170 * group_sizze_42185)
    binop_x_43694 = (Rx_42172 * binop_x_43693)
    bytes_43691 = (np.int64(4) * binop_x_43694)
    binop_x_43685 = (Ry_42170 * Rx_42172)
    bytes_43684 = (np.int64(4) * binop_x_43685)
    bytes_43696 = (np.int64(4) * a_loc_szz_42179)
    bytes_43698 = (np.int64(4) * b_loc_szz_42181)
    bytes_43767 = (np.int64(4) * binop_x_43693)
    binop_x_43773 = (Rx_42172 * group_sizze_42185)
    bytes_43771 = (np.int64(4) * binop_x_43773)
    bytes_43759 = (np.int64(4) * Ry_42170)
    bytes_43761 = (np.int64(4) * Rx_42172)
    binop_x_44168 = (np.int64(4) * Ty_42169)
    binop_x_44169 = (Tx_42171 * binop_x_44168)
    binop_x_44170 = (Ry_42170 * binop_x_44169)
    sizze_44171 = (Rx_42172 * binop_x_44170)
    num_threads_44274 = (segmap_group_sizze_35666 * num_groups_35667)
    total_sizze_44275 = (bytes_43662 * num_threads_44274)
    local_memory_capacity_44906 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44906)) and suff_outer_par_35646):
      mem_43660 = opencl_alloc(self, bytes_43389, "mem_43660")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43660, np.int64(0),
                                                  defunc_4_map_res_mem_43657,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_28493, m_28474)
      mem_43678 = opencl_alloc(self, bytes_43676, "mem_43678")
      mem_43663 = opencl_alloc(self, total_sizze_44275, "mem_43663")
      if ((1 * (np.long(num_groups_35667) * np.long(segmap_group_sizze_35666))) != 0):
        self.mainMagnitudezisegmap_35648_var.set_args(self.global_failure,
                                                      np.int64(N_28473),
                                                      np.int64(m_28474),
                                                      np.int32(k2p2zq_28491),
                                                      np.int64(i32_res_28493),
                                                      np.int64(num_groups_35667),
                                                      mem_43139, mem_43660,
                                                      mem_43663, mem_43678)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_35648_var,
                                   ((np.long(num_groups_35667) * np.long(segmap_group_sizze_35666)),),
                                   (np.long(segmap_group_sizze_35666),))
        if synchronous:
          sync(self)
      mem_43660 = None
      mem_43663 = None
      mem_43879 = opencl_alloc(self, bytes_43676, "mem_43879")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43879, np.int64(0),
                                                  mem_43678, np.int64(0),
                                                  np.int64(1), m_28474, N_28473)
      mem_43678 = None
      defunc_3_map_res_mem_43881 = mem_43879
    else:
      local_memory_capacity_44905 = self.max_local_memory
      if (sle64((bytes_43696 + bytes_43698),
                sext_i32_i64(local_memory_capacity_44905)) and suff_outer_par_35743):
        mem_43681 = opencl_alloc(self, bytes_43125, "mem_43681")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43681, np.int64(0),
                                                    mem_43139, np.int64(0),
                                                    np.int64(1), i32_res_28493,
                                                    N_28473)
        tk_div_tx_42174 = sdiv_up64(Tk_42173, Tx_42171)
        tk_div_ty_42175 = sdiv_up64(Tk_42173, Ty_42169)
        gridDim_x_42182 = sdiv_up64(N_28473, TxRx_42176)
        gridDim_y_42183 = sdiv_up64(m_28474, TyRy_42177)
        grid_sizze_42184 = (gridDim_x_42182 * gridDim_y_42183)
        full_tiles_42213 = squot64(i32_res_28493, Tk_42173)
        kk_42416 = (Tk_42173 * full_tiles_42213)
        mem_43871 = opencl_alloc(self, bytes_43676, "mem_43871")
        if ((1 * (np.long(grid_sizze_42184) * np.long(group_sizze_42185))) != 0):
          self.mainMagnitudezisegmap_intragroup_42188_var.set_args(self.global_failure,
                                                                   cl.LocalMemory(np.long(bytes_43698)),
                                                                   cl.LocalMemory(np.long(bytes_43696)),
                                                                   np.int64(N_28473),
                                                                   np.int64(m_28474),
                                                                   np.int64(i32_res_28493),
                                                                   np.int64(gridDim_x_42182),
                                                                   np.int64(full_tiles_42213),
                                                                   np.int64(kk_42416),
                                                                   defunc_4_map_res_mem_43657,
                                                                   mem_43681,
                                                                   mem_43871)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_intragroup_42188_var,
                                     ((np.long(grid_sizze_42184) * np.long(group_sizze_42185)),),
                                     (np.long(group_sizze_42185),))
          if synchronous:
            sync(self)
        mem_43681 = None
        defunc_3_map_res_mem_43876 = mem_43871
      else:
        mem_43875 = opencl_alloc(self, bytes_43676, "mem_43875")
        if slt64((i32_res_28493 * np.int64(2)), segred_group_sizze_35758):
          segment_sizze_nonzzero_44845 = smax64(np.int64(1), i32_res_28493)
          num_threads_44846 = (num_groups_35759 * segred_group_sizze_35758)
          if ((1 * (np.long(num_groups_35759) * np.long(segred_group_sizze_35758))) != 0):
            self.mainMagnitudezisegred_small_35712_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35758))),
                                                                np.int64(N_28473),
                                                                np.int64(m_28474),
                                                                np.int64(i32_res_28493),
                                                                np.int64(num_groups_35759),
                                                                mem_43139,
                                                                defunc_4_map_res_mem_43657,
                                                                mem_43875,
                                                                np.int64(segment_sizze_nonzzero_44845))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_35712_var,
                                       ((np.long(num_groups_35759) * np.long(segred_group_sizze_35758)),),
                                       (np.long(segred_group_sizze_35758),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44866 = sdiv_up64(num_groups_35759,
                                               smax64(np.int64(1),
                                                      (m_28474 * N_28473)))
          elements_per_thread_44867 = sdiv_up64(i32_res_28493,
                                                (segred_group_sizze_35758 * groups_per_segment_44866))
          virt_num_groups_44868 = (groups_per_segment_44866 * (m_28474 * N_28473))
          num_threads_44869 = (num_groups_35759 * segred_group_sizze_35758)
          threads_per_segment_44870 = (groups_per_segment_44866 * segred_group_sizze_35758)
          group_res_arr_mem_44871 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_35758 * virt_num_groups_44868)),
                                                 "group_res_arr_mem_44871")
          mainMagnitudezicounter_mem_44873 = self.mainMagnitudezicounter_mem_44873
          if ((1 * (np.long(num_groups_35759) * np.long(segred_group_sizze_35758))) != 0):
            self.mainMagnitudezisegred_large_35712_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35758))),
                                                                np.int64(N_28473),
                                                                np.int64(i32_res_28493),
                                                                np.int64(num_groups_35759),
                                                                mem_43139,
                                                                defunc_4_map_res_mem_43657,
                                                                mem_43875,
                                                                np.int64(groups_per_segment_44866),
                                                                np.int64(elements_per_thread_44867),
                                                                np.int64(virt_num_groups_44868),
                                                                np.int64(threads_per_segment_44870),
                                                                group_res_arr_mem_44871,
                                                                mainMagnitudezicounter_mem_44873)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_35712_var,
                                       ((np.long(num_groups_35759) * np.long(segred_group_sizze_35758)),),
                                       (np.long(segred_group_sizze_35758),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43876 = mem_43875
      defunc_3_map_res_mem_43881 = defunc_3_map_res_mem_43876
    mem_43139 = None
    defunc_4_map_res_mem_43657 = None
    i_28753 = (N_28473 - np.int64(1))
    x_28754 = sle64(np.int64(0), i_28753)
    y_28755 = slt64(i_28753, N_28473)
    bounds_check_28756 = (x_28754 and y_28755)
    index_certs_28757 = True
    assert bounds_check_28756, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:18:29-34\n   #1  helpers.fut:20:13-20\n   #2  bfastfinal.fut:76:30-91\n   #3  /prelude/soacs.fut:56:19-23\n   #4  /prelude/soacs.fut:56:3-37\n   #5  bfastfinal.fut:70:5-79:25\n   #6  bfastfinal.fut:183:5-58\n   #7  bfastfinal.fut:178:1-184:32\n" % ("Index [",
                                                                                                                                                                                                                                                                                                                                                     i_28753,
                                                                                                                                                                                                                                                                                                                                                     "] out of bounds for array of shape [",
                                                                                                                                                                                                                                                                                                                                                     N_28473,
                                                                                                                                                                                                                                                                                                                                                     "]."))
    fits_35888 = sle64(N_28473, max_group_sizze_34751)
    suff_intra_par_35886 = (self.sizes["mainMagnitude.suff_intra_par_24"] <= N_28473)
    intra_suff_and_fits_35889 = (suff_intra_par_35886 and fits_35888)
    segscan_group_sizze_36038 = self.sizes["mainMagnitude.segscan_group_size_36015"]
    max_num_groups_44907 = self.sizes["mainMagnitude.segscan_num_groups_36017"]
    num_groups_36039 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(comparatee_35742,
                                                            segscan_group_sizze_36038),
                                                  sext_i32_i64(max_num_groups_44907))))
    segmap_group_sizze_36058 = self.sizes["mainMagnitude.segmap_group_size_36006"]
    mem_43884 = opencl_alloc(self, bytes_43676, "mem_43884")
    self.futhark_builtinzhreplicate_f32(mem_43884, (m_28474 * N_28473), np.nan)
    mem_43887 = opencl_alloc(self, bytes_43676, "mem_43887")
    self.futhark_builtinzhreplicate_i32(mem_43887, (m_28474 * N_28473),
                                        np.int32(0))
    segmap_group_sizze_36094 = self.sizes["mainMagnitude.segmap_group_size_35931"]
    bytes_43899 = (np.int64(4) * m_28474)
    bytes_43890 = (np.int64(8) * N_28473)
    bytes_43908 = (np.int64(8) * comparatee_35742)
    local_memory_capacity_45009 = self.max_local_memory
    if (sle64((((bytes_43890 + bytes_43662) + bytes_43662) + bytes_43662),
              sext_i32_i64(local_memory_capacity_45009)) and intra_suff_and_fits_35889):
      mem_43900 = opencl_alloc(self, bytes_43899, "mem_43900")
      mem_43903 = opencl_alloc(self, bytes_43676, "mem_43903")
      mem_43906 = opencl_alloc(self, bytes_43676, "mem_43906")
      if ((1 * (np.long(m_28474) * np.long(N_28473))) != 0):
        self.mainMagnitudezisegmap_intragroup_35811_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(bytes_43662)),
                                                                 cl.LocalMemory(np.long(bytes_43662)),
                                                                 cl.LocalMemory(np.long(bytes_43662)),
                                                                 cl.LocalMemory(np.long(bytes_43890)),
                                                                 np.int64(N_28473),
                                                                 np.int64(N_28475),
                                                                 np.int64(i_28753),
                                                                 images_mem_43123,
                                                                 defunc_3_map_res_mem_43881,
                                                                 mem_43900,
                                                                 mem_43903,
                                                                 mem_43906)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_35811_var,
                                   ((np.long(m_28474) * np.long(N_28473)),),
                                   (np.long(N_28473),))
        if synchronous:
          sync(self)
      defunc_4_map_res_mem_43918 = mem_43900
      defunc_4_map_res_mem_43919 = mem_43903
      defunc_4_map_res_mem_43920 = mem_43906
    else:
      mem_43910 = opencl_alloc(self, bytes_43908, "mem_43910")
      mem_43913 = opencl_alloc(self, bytes_43676, "mem_43913")
      if slt64(np.int64(0), (m_28474 * N_28473)):
        stage1_max_num_groups_44943 = self.max_group_size
        stage1_num_groups_44944 = smin64(stage1_max_num_groups_44943,
                                         num_groups_36039)
        num_threads_44945 = sext_i64_i32((stage1_num_groups_44944 * segscan_group_sizze_36038))
        if ((1 * (np.long(stage1_num_groups_44944) * np.long(segscan_group_sizze_36038))) != 0):
          self.mainMagnitudeziscan_stage1_36021_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                           (np.int32(8) * segscan_group_sizze_36038)))),
                                                             np.int64(N_28473),
                                                             np.int64(m_28474),
                                                             np.int64(N_28475),
                                                             images_mem_43123,
                                                             defunc_3_map_res_mem_43881,
                                                             mem_43910,
                                                             mem_43913,
                                                             np.int32(num_threads_44945))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage1_36021_var,
                                     ((np.long(stage1_num_groups_44944) * np.long(segscan_group_sizze_36038)),),
                                     (np.long(segscan_group_sizze_36038),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_44944))) != 0):
          self.mainMagnitudeziscan_stage2_36021_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                           (np.int32(8) * stage1_num_groups_44944)))),
                                                             np.int64(N_28473),
                                                             np.int64(m_28474),
                                                             mem_43910,
                                                             np.int64(stage1_num_groups_44944),
                                                             np.int32(num_threads_44945))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage2_36021_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_44944)),),
                                     (np.long(stage1_num_groups_44944),))
          if synchronous:
            sync(self)
        required_groups_44987 = sext_i64_i32(sdiv_up64((m_28474 * N_28473),
                                                       segscan_group_sizze_36038))
        if ((1 * (np.long(num_groups_36039) * np.long(segscan_group_sizze_36038))) != 0):
          self.mainMagnitudeziscan_stage3_36021_var.set_args(self.global_failure,
                                                             np.int64(N_28473),
                                                             np.int64(m_28474),
                                                             np.int64(num_groups_36039),
                                                             mem_43910,
                                                             np.int32(num_threads_44945),
                                                             np.int32(required_groups_44987))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage3_36021_var,
                                     ((np.long(num_groups_36039) * np.long(segscan_group_sizze_36038)),),
                                     (np.long(segscan_group_sizze_36038),))
          if synchronous:
            sync(self)
      segmap_usable_groups_36059 = sdiv_up64(m_28474, segmap_group_sizze_36058)
      mem_43916 = opencl_alloc(self, bytes_43899, "mem_43916")
      if ((1 * (np.long(segmap_usable_groups_36059) * np.long(segmap_group_sizze_36058))) != 0):
        self.mainMagnitudezisegmap_36004_var.set_args(self.global_failure,
                                                      np.int64(N_28473),
                                                      np.int64(m_28474),
                                                      np.int64(i_28753),
                                                      mem_43910, mem_43916)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_36004_var,
                                   ((np.long(segmap_usable_groups_36059) * np.long(segmap_group_sizze_36058)),),
                                   (np.long(segmap_group_sizze_36058),))
        if synchronous:
          sync(self)
      segmap_usable_groups_36095 = sdiv_up64(comparatee_35742,
                                             segmap_group_sizze_36094)
      if ((1 * (np.long(segmap_usable_groups_36095) * np.long(segmap_group_sizze_36094))) != 0):
        self.mainMagnitudezisegmap_35928_var.set_args(self.global_failure,
                                                      np.int64(N_28473),
                                                      np.int64(m_28474),
                                                      mem_43884, mem_43887,
                                                      mem_43910, mem_43913)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_35928_var,
                                   ((np.long(segmap_usable_groups_36095) * np.long(segmap_group_sizze_36094)),),
                                   (np.long(segmap_group_sizze_36094),))
        if synchronous:
          sync(self)
      mem_43910 = None
      mem_43913 = None
      defunc_4_map_res_mem_43918 = mem_43916
      defunc_4_map_res_mem_43919 = mem_43884
      defunc_4_map_res_mem_43920 = mem_43887
    defunc_3_map_res_mem_43881 = None
    mem_43884 = None
    mem_43887 = None
    suff_outer_par_36143 = (self.sizes["mainMagnitude.suff_outer_par_28"] <= m_28474)
    fits_36221 = sle64(i32_res_28487, max_group_sizze_34751)
    suff_intra_par_36219 = (self.sizes["mainMagnitude.suff_intra_par_29"] <= i32_res_28487)
    intra_suff_and_fits_36222 = (suff_intra_par_36219 and fits_36221)
    segmap_group_sizze_36186 = self.sizes["mainMagnitude.segmap_group_size_36155"]
    nest_sizze_36309 = (m_28474 * i32_res_28487)
    segred_group_sizze_36310 = self.sizes["mainMagnitude.segred_group_size_36293"]
    max_num_groups_45010 = self.sizes["mainMagnitude.segred_num_groups_36295"]
    num_groups_36311 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36309,
                                                            segred_group_sizze_36310),
                                                  sext_i32_i64(max_num_groups_45010))))
    segred_group_sizze_36324 = self.sizes["mainMagnitude.segred_group_size_36272"]
    max_num_groups_45011 = self.sizes["mainMagnitude.segred_num_groups_36274"]
    num_groups_36325 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36309,
                                                            segred_group_sizze_36324),
                                                  sext_i32_i64(max_num_groups_45011))))
    segmap_group_sizze_36340 = self.sizes["mainMagnitude.segmap_group_size_36257"]
    bytes_43929 = (np.int64(4) * segmap_group_sizze_36186)
    local_memory_capacity_45165 = self.max_local_memory
    if (sle64((bytes_43929 + bytes_43929),
              sext_i32_i64(local_memory_capacity_45165)) and suff_outer_par_36143):
      segmap_usable_groups_36187 = sdiv_up64(m_28474, segmap_group_sizze_36186)
      mem_43923 = opencl_alloc(self, bytes_43140, "mem_43923")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43923, np.int64(0),
                                                  images_mem_43123, np.int64(0),
                                                  np.int64(1), N_28475, m_28474)
      mem_43926 = opencl_alloc(self, bytes_43676, "mem_43926")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43926, np.int64(0),
                                                  defunc_4_map_res_mem_43919,
                                                  np.int64(0), np.int64(1),
                                                  N_28473, m_28474)
      num_whole_tiles_42630 = squot64(i32_res_28487, segmap_group_sizze_36186)
      residual_input_42751 = srem64(i32_res_28487, segmap_group_sizze_36186)
      cond_42752 = (residual_input_42751 == np.int64(0))
      mem_43954 = opencl_alloc(self, bytes_43899, "mem_43954")
      mem_43956 = opencl_alloc(self, bytes_43899, "mem_43956")
      mem_43958 = opencl_alloc(self, bytes_43899, "mem_43958")
      if ((1 * (np.long(segmap_usable_groups_36187) * np.long(segmap_group_sizze_36186))) != 0):
        self.mainMagnitudezisegmap_intragroup_42622_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(bytes_43929)),
                                                                 cl.LocalMemory(np.long(bytes_43929)),
                                                                 np.int64(m_28474),
                                                                 np.int32(n_28478),
                                                                 np.float32(hfrac_28480),
                                                                 np.int64(i32_res_28487),
                                                                 np.int32(k2p2_28489),
                                                                 np.int64(num_whole_tiles_42630),
                                                                 np.int64(residual_input_42751),
                                                                 np.byte(cond_42752),
                                                                 mem_43923,
                                                                 mem_43926,
                                                                 mem_43954,
                                                                 mem_43956,
                                                                 mem_43958)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_42622_var,
                                   ((np.long(segmap_usable_groups_36187) * np.long(segmap_group_sizze_36186)),),
                                   (np.long(segmap_group_sizze_36186),))
        if synchronous:
          sync(self)
      mem_43923 = None
      mem_43926 = None
      defunc_3_map_res_mem_43982 = mem_43954
      defunc_3_map_res_mem_43983 = mem_43956
      defunc_3_map_res_mem_43984 = mem_43958
    else:
      local_memory_capacity_45164 = self.max_local_memory
      if (sle64(((np.int32(4) * i32_res_28487) + (np.int32(4) * i32_res_28487)),
                sext_i32_i64(local_memory_capacity_45164)) and intra_suff_and_fits_36222):
        mem_43963 = opencl_alloc(self, bytes_43899, "mem_43963")
        mem_43965 = opencl_alloc(self, bytes_43899, "mem_43965")
        mem_43967 = opencl_alloc(self, bytes_43899, "mem_43967")
        if ((1 * (np.long(m_28474) * np.long(i32_res_28487))) != 0):
          self.mainMagnitudezisegmap_intragroup_36151_var.set_args(self.global_failure,
                                                                   cl.LocalMemory(np.long((np.int32(4) * i32_res_28487))),
                                                                   cl.LocalMemory(np.long((np.int32(4) * i32_res_28487))),
                                                                   np.int64(N_28473),
                                                                   np.int64(N_28475),
                                                                   np.float32(hfrac_28480),
                                                                   np.int64(i32_res_28487),
                                                                   np.int32(k2p2_28489),
                                                                   images_mem_43123,
                                                                   defunc_4_map_res_mem_43919,
                                                                   mem_43963,
                                                                   mem_43965,
                                                                   mem_43967)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_intragroup_36151_var,
                                     ((np.long(m_28474) * np.long(i32_res_28487)),),
                                     (np.long(i32_res_28487),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43979 = mem_43963
        defunc_3_map_res_mem_43980 = mem_43965
        defunc_3_map_res_mem_43981 = mem_43967
      else:
        mem_43970 = opencl_alloc(self, bytes_43899, "mem_43970")
        if slt64((i32_res_28487 * np.int64(2)), segred_group_sizze_36310):
          segment_sizze_nonzzero_45039 = smax64(np.int64(1), i32_res_28487)
          num_threads_45040 = (num_groups_36311 * segred_group_sizze_36310)
          if ((1 * (np.long(num_groups_36311) * np.long(segred_group_sizze_36310))) != 0):
            self.mainMagnitudezisegred_small_36299_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36310))),
                                                                np.int64(m_28474),
                                                                np.int64(N_28475),
                                                                np.int64(i32_res_28487),
                                                                np.int64(num_groups_36311),
                                                                images_mem_43123,
                                                                mem_43970,
                                                                np.int64(segment_sizze_nonzzero_45039))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_36299_var,
                                       ((np.long(num_groups_36311) * np.long(segred_group_sizze_36310)),),
                                       (np.long(segred_group_sizze_36310),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45060 = sdiv_up64(num_groups_36311,
                                               smax64(np.int64(1), m_28474))
          elements_per_thread_45061 = sdiv_up64(i32_res_28487,
                                                (segred_group_sizze_36310 * groups_per_segment_45060))
          virt_num_groups_45062 = (groups_per_segment_45060 * m_28474)
          num_threads_45063 = (num_groups_36311 * segred_group_sizze_36310)
          threads_per_segment_45064 = (groups_per_segment_45060 * segred_group_sizze_36310)
          group_res_arr_mem_45065 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_36310 * virt_num_groups_45062)),
                                                 "group_res_arr_mem_45065")
          mainMagnitudezicounter_mem_45067 = self.mainMagnitudezicounter_mem_45067
          if ((1 * (np.long(num_groups_36311) * np.long(segred_group_sizze_36310))) != 0):
            self.mainMagnitudezisegred_large_36299_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36310))),
                                                                np.int64(N_28475),
                                                                np.int64(i32_res_28487),
                                                                np.int64(num_groups_36311),
                                                                images_mem_43123,
                                                                mem_43970,
                                                                np.int64(groups_per_segment_45060),
                                                                np.int64(elements_per_thread_45061),
                                                                np.int64(virt_num_groups_45062),
                                                                np.int64(threads_per_segment_45064),
                                                                group_res_arr_mem_45065,
                                                                mainMagnitudezicounter_mem_45067)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_36299_var,
                                       ((np.long(num_groups_36311) * np.long(segred_group_sizze_36310)),),
                                       (np.long(segred_group_sizze_36310),))
            if synchronous:
              sync(self)
        mem_43973 = opencl_alloc(self, bytes_43899, "mem_43973")
        if slt64((i32_res_28487 * np.int64(2)), segred_group_sizze_36324):
          segment_sizze_nonzzero_45099 = smax64(np.int64(1), i32_res_28487)
          num_threads_45100 = (num_groups_36325 * segred_group_sizze_36324)
          if ((1 * (np.long(num_groups_36325) * np.long(segred_group_sizze_36324))) != 0):
            self.mainMagnitudezisegred_small_36278_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36324))),
                                                                np.int64(N_28473),
                                                                np.int64(m_28474),
                                                                np.int64(i32_res_28487),
                                                                np.int64(num_groups_36325),
                                                                defunc_4_map_res_mem_43919,
                                                                mem_43970,
                                                                mem_43973,
                                                                np.int64(segment_sizze_nonzzero_45099))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_36278_var,
                                       ((np.long(num_groups_36325) * np.long(segred_group_sizze_36324)),),
                                       (np.long(segred_group_sizze_36324),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_45120 = sdiv_up64(num_groups_36325,
                                               smax64(np.int64(1), m_28474))
          elements_per_thread_45121 = sdiv_up64(i32_res_28487,
                                                (segred_group_sizze_36324 * groups_per_segment_45120))
          virt_num_groups_45122 = (groups_per_segment_45120 * m_28474)
          num_threads_45123 = (num_groups_36325 * segred_group_sizze_36324)
          threads_per_segment_45124 = (groups_per_segment_45120 * segred_group_sizze_36324)
          group_res_arr_mem_45125 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_36324 * virt_num_groups_45122)),
                                                 "group_res_arr_mem_45125")
          mainMagnitudezicounter_mem_45127 = self.mainMagnitudezicounter_mem_45127
          if ((1 * (np.long(num_groups_36325) * np.long(segred_group_sizze_36324))) != 0):
            self.mainMagnitudezisegred_large_36278_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36324))),
                                                                np.int64(N_28473),
                                                                np.int64(i32_res_28487),
                                                                np.int64(num_groups_36325),
                                                                defunc_4_map_res_mem_43919,
                                                                mem_43970,
                                                                mem_43973,
                                                                np.int64(groups_per_segment_45120),
                                                                np.int64(elements_per_thread_45121),
                                                                np.int64(virt_num_groups_45122),
                                                                np.int64(threads_per_segment_45124),
                                                                group_res_arr_mem_45125,
                                                                mainMagnitudezicounter_mem_45127)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_36278_var,
                                       ((np.long(num_groups_36325) * np.long(segred_group_sizze_36324)),),
                                       (np.long(segred_group_sizze_36324),))
            if synchronous:
              sync(self)
        segmap_usable_groups_36341 = sdiv_up64(m_28474,
                                               segmap_group_sizze_36340)
        mem_43976 = opencl_alloc(self, bytes_43899, "mem_43976")
        mem_43978 = opencl_alloc(self, bytes_43899, "mem_43978")
        if ((1 * (np.long(segmap_usable_groups_36341) * np.long(segmap_group_sizze_36340))) != 0):
          self.mainMagnitudezisegmap_36255_var.set_args(self.global_failure,
                                                        np.int64(m_28474),
                                                        np.float32(hfrac_28480),
                                                        np.int32(k2p2_28489),
                                                        mem_43970, mem_43973,
                                                        mem_43976, mem_43978)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_36255_var,
                                     ((np.long(segmap_usable_groups_36341) * np.long(segmap_group_sizze_36340)),),
                                     (np.long(segmap_group_sizze_36340),))
          if synchronous:
            sync(self)
        mem_43973 = None
        defunc_3_map_res_mem_43979 = mem_43976
        defunc_3_map_res_mem_43980 = mem_43970
        defunc_3_map_res_mem_43981 = mem_43978
      defunc_3_map_res_mem_43982 = defunc_3_map_res_mem_43979
      defunc_3_map_res_mem_43983 = defunc_3_map_res_mem_43980
      defunc_3_map_res_mem_43984 = defunc_3_map_res_mem_43981
    segred_group_sizze_36361 = self.sizes["mainMagnitude.segred_group_size_36360"]
    max_num_groups_45166 = self.sizes["mainMagnitude.segred_num_groups_36362"]
    num_groups_36363 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28474,
                                                            segred_group_sizze_36361),
                                                  sext_i32_i64(max_num_groups_45166))))
    mem_43987 = opencl_alloc(self, np.int64(4), "mem_43987")
    mainMagnitudezicounter_mem_45167 = self.mainMagnitudezicounter_mem_45167
    group_res_arr_mem_45169 = opencl_alloc(self,
                                           (np.int32(4) * (segred_group_sizze_36361 * num_groups_36363)),
                                           "group_res_arr_mem_45169")
    num_threads_45171 = (num_groups_36363 * segred_group_sizze_36361)
    if ((1 * (np.long(num_groups_36363) * np.long(segred_group_sizze_36361))) != 0):
      self.mainMagnitudezisegred_nonseg_36368_var.set_args(self.global_failure,
                                                           cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36361))),
                                                           cl.LocalMemory(np.long(np.int32(1))),
                                                           np.int64(m_28474),
                                                           np.int64(num_groups_36363),
                                                           defunc_3_map_res_mem_43982,
                                                           mem_43987,
                                                           mainMagnitudezicounter_mem_45167,
                                                           group_res_arr_mem_45169,
                                                           np.int64(num_threads_45171))
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegred_nonseg_36368_var,
                                 ((np.long(num_groups_36363) * np.long(segred_group_sizze_36361)),),
                                 (np.long(segred_group_sizze_36361),))
      if synchronous:
        sync(self)
    read_res_45557 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45557, mem_43987,
                    device_offset=(np.long(np.int64(0)) * 4),
                    is_blocking=synchronous)
    sync(self)
    defunc_2_reduce_comm_res_28843 = read_res_45557[0]
    mem_43987 = None
    i32_res_28848 = sext_i32_i64(defunc_2_reduce_comm_res_28843)
    bounds_invalid_upwards_28849 = slt64(i32_res_28848, np.int64(0))
    valid_28850 = not(bounds_invalid_upwards_28849)
    range_valid_c_28851 = True
    assert valid_28850, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:5:3-18\n   #2  bfastfinal.fut:104:34-46\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:99:17-106:24\n   #5  bfastfinal.fut:183:5-58\n   #6  bfastfinal.fut:178:1-184:32\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                                                                                                                   "..",
                                                                                                                                                                                                                                                                                                                   np.int64(1),
                                                                                                                                                                                                                                                                                                                   "..<",
                                                                                                                                                                                                                                                                                                                   i32_res_28848,
                                                                                                                                                                                                                                                                                                                   " is invalid."))
    suff_outer_par_36400 = (self.sizes["mainMagnitude.suff_outer_par_31"] <= m_28474)
    segmap_group_sizze_36423 = self.sizes["mainMagnitude.segmap_group_size_36404"]
    nest_sizze_36466 = (m_28474 * i32_res_28848)
    segred_group_sizze_36467 = self.sizes["mainMagnitude.segred_group_size_36444"]
    max_num_groups_45197 = self.sizes["mainMagnitude.segred_num_groups_36446"]
    num_groups_36468 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36466,
                                                            segred_group_sizze_36467),
                                                  sext_i32_i64(max_num_groups_45197))))
    bytes_43990 = (np.int64(4) * segmap_group_sizze_36423)
    local_memory_capacity_45268 = self.max_local_memory
    if (sle64((bytes_43990 + bytes_43990),
              sext_i32_i64(local_memory_capacity_45268)) and suff_outer_par_36400):
      segmap_usable_groups_36424 = sdiv_up64(m_28474, segmap_group_sizze_36423)
      num_whole_tiles_42874 = squot64(i32_res_28848, segmap_group_sizze_36423)
      residual_input_42973 = srem64(i32_res_28848, segmap_group_sizze_36423)
      cond_42974 = (residual_input_42973 == np.int64(0))
      mem_44013 = opencl_alloc(self, bytes_43899, "mem_44013")
      if ((1 * (np.long(segmap_usable_groups_36424) * np.long(segmap_group_sizze_36423))) != 0):
        self.mainMagnitudezisegmap_intragroup_42854_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(bytes_43990)),
                                                                 cl.LocalMemory(np.long(bytes_43990)),
                                                                 np.int64(N_28473),
                                                                 np.int64(m_28474),
                                                                 np.int64(i32_res_28848),
                                                                 np.int64(num_whole_tiles_42874),
                                                                 np.int64(residual_input_42973),
                                                                 np.byte(cond_42974),
                                                                 defunc_4_map_res_mem_43919,
                                                                 defunc_3_map_res_mem_43982,
                                                                 defunc_3_map_res_mem_43983,
                                                                 mem_44013)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_42854_var,
                                   ((np.long(segmap_usable_groups_36424) * np.long(segmap_group_sizze_36423)),),
                                   (np.long(segmap_group_sizze_36423),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_44017 = mem_44013
    else:
      mem_44016 = opencl_alloc(self, bytes_43899, "mem_44016")
      if slt64((i32_res_28848 * np.int64(2)), segred_group_sizze_36467):
        segment_sizze_nonzzero_45208 = smax64(np.int64(1), i32_res_28848)
        num_threads_45209 = (num_groups_36468 * segred_group_sizze_36467)
        if ((1 * (np.long(num_groups_36468) * np.long(segred_group_sizze_36467))) != 0):
          self.mainMagnitudezisegred_small_36450_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36467))),
                                                              np.int64(N_28473),
                                                              np.int64(m_28474),
                                                              np.int64(i32_res_28848),
                                                              np.int64(num_groups_36468),
                                                              defunc_4_map_res_mem_43919,
                                                              defunc_3_map_res_mem_43982,
                                                              defunc_3_map_res_mem_43983,
                                                              mem_44016,
                                                              np.int64(segment_sizze_nonzzero_45208))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegred_small_36450_var,
                                     ((np.long(num_groups_36468) * np.long(segred_group_sizze_36467)),),
                                     (np.long(segred_group_sizze_36467),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_45229 = sdiv_up64(num_groups_36468,
                                             smax64(np.int64(1), m_28474))
        elements_per_thread_45230 = sdiv_up64(i32_res_28848,
                                              (segred_group_sizze_36467 * groups_per_segment_45229))
        virt_num_groups_45231 = (groups_per_segment_45229 * m_28474)
        num_threads_45232 = (num_groups_36468 * segred_group_sizze_36467)
        threads_per_segment_45233 = (groups_per_segment_45229 * segred_group_sizze_36467)
        group_res_arr_mem_45234 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_36467 * virt_num_groups_45231)),
                                               "group_res_arr_mem_45234")
        mainMagnitudezicounter_mem_45236 = self.mainMagnitudezicounter_mem_45236
        if ((1 * (np.long(num_groups_36468) * np.long(segred_group_sizze_36467))) != 0):
          self.mainMagnitudezisegred_large_36450_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long(np.int32(1))),
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36467))),
                                                              np.int64(N_28473),
                                                              np.int64(i32_res_28848),
                                                              np.int64(num_groups_36468),
                                                              defunc_4_map_res_mem_43919,
                                                              defunc_3_map_res_mem_43982,
                                                              defunc_3_map_res_mem_43983,
                                                              mem_44016,
                                                              np.int64(groups_per_segment_45229),
                                                              np.int64(elements_per_thread_45230),
                                                              np.int64(virt_num_groups_45231),
                                                              np.int64(threads_per_segment_45233),
                                                              group_res_arr_mem_45234,
                                                              mainMagnitudezicounter_mem_45236)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegred_large_36450_var,
                                     ((np.long(num_groups_36468) * np.long(segred_group_sizze_36467)),),
                                     (np.long(segred_group_sizze_36467),))
          if synchronous:
            sync(self)
      defunc_0_f_res_mem_44017 = mem_44016
    iota32_arg_28873 = (N_28473 - i32_res_28487)
    bounds_invalid_upwards_28874 = slt64(iota32_arg_28873, np.int64(0))
    valid_28875 = not(bounds_invalid_upwards_28874)
    range_valid_c_28876 = True
    assert valid_28875, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:112:22-35\n   #3  bfastfinal.fut:183:5-58\n   #4  bfastfinal.fut:178:1-184:32\n" % ("Range ",
                                                                                                                                                                                                                                      np.int64(0),
                                                                                                                                                                                                                                      "..",
                                                                                                                                                                                                                                      np.int64(1),
                                                                                                                                                                                                                                      "..<",
                                                                                                                                                                                                                                      iota32_arg_28873,
                                                                                                                                                                                                                                      " is invalid."))
    x_28878 = (np.int32(1) + n_28478)
    i_28879 = (n_28478 - np.int32(1))
    i_28880 = sext_i32_i64(i_28879)
    x_28881 = sle64(np.int64(0), i_28880)
    y_28882 = slt64(i_28880, N_28473)
    bounds_check_28883 = (x_28881 and y_28882)
    index_certs_28884 = True
    assert bounds_check_28883, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:110:64-84\n   #1  bfastfinal.fut:108:15-112:36\n   #2  bfastfinal.fut:183:5-58\n   #3  bfastfinal.fut:178:1-184:32\n" % ("Index [",
                                                                                                                                                                                                                 i_28880,
                                                                                                                                                                                                                 "] out of bounds for array of shape [",
                                                                                                                                                                                                                 N_28473,
                                                                                                                                                                                                                 "]."))
    read_res_45559 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45559, mappingindices_mem_43122,
                    device_offset=(np.long(i_28880) * 4),
                    is_blocking=synchronous)
    sync(self)
    r32_arg_28885 = read_res_45559[0]
    i32_res_28886 = sitofp_i32_f32(r32_arg_28885)
    range_valid_c_28887 = True
    assert valid_28875, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:122:20-35\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:117:20-133:9\n   #5  bfastfinal.fut:183:5-58\n   #6  bfastfinal.fut:178:1-184:32\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                                                                  iota32_arg_28873,
                                                                                                                                                                                                                                                                                                                  " is invalid."))
    segmap_group_sizze_36545 = self.sizes["mainMagnitude.segmap_group_size_36528"]
    segmap_usable_groups_36546 = sdiv_up64(iota32_arg_28873,
                                           segmap_group_sizze_36545)
    bytes_44019 = (np.int64(4) * iota32_arg_28873)
    mem_44020 = opencl_alloc(self, bytes_44019, "mem_44020")
    mem_44022 = opencl_alloc(self, bytes_44019, "mem_44022")
    if ((1 * (np.long(segmap_usable_groups_36546) * np.long(segmap_group_sizze_36545))) != 0):
      self.mainMagnitudezisegmap_36526_var.set_args(self.global_failure,
                                                    np.float32(lam_28481),
                                                    np.int64(iota32_arg_28873),
                                                    np.int32(x_28878),
                                                    np.float32(i32_res_28886),
                                                    mappingindices_mem_43122,
                                                    mem_44020, mem_44022)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_36526_var,
                                 ((np.long(segmap_usable_groups_36546) * np.long(segmap_group_sizze_36545)),),
                                 (np.long(segmap_group_sizze_36545),))
      if synchronous:
        sync(self)
    mem_44020 = None
    max_res_28903 = smax64(np.int64(1), iota32_arg_28873)
    bounds_invalid_upwards_28904 = slt64(max_res_28903, np.int64(1))
    distance_28905 = (max_res_28903 - np.int64(1))
    valid_28906 = not(bounds_invalid_upwards_28904)
    range_valid_c_28907 = True
    assert valid_28906, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:16:30-45\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:119:13-124:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:117:20-133:9\n   #5  bfastfinal.fut:183:5-58\n   #6  bfastfinal.fut:178:1-184:32\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                                                              np.int64(1),
                                                                                                                                                                                                                                                                                                                                                              "..<",
                                                                                                                                                                                                                                                                                                                                                              max_res_28903,
                                                                                                                                                                                                                                                                                                                                                              " is invalid."))
    segmap_group_sizze_36965 = self.sizes["mainMagnitude.segmap_group_size_36958"]
    segmap_usable_groups_36966 = sdiv_up64(m_28474, segmap_group_sizze_36965)
    mem_44025 = opencl_alloc(self, bytes_43899, "mem_44025")
    if ((1 * (np.long(segmap_usable_groups_36966) * np.long(segmap_group_sizze_36965))) != 0):
      self.mainMagnitudezisegmap_36956_var.set_args(self.global_failure,
                                                    np.int64(m_28474),
                                                    defunc_4_map_res_mem_43918,
                                                    defunc_3_map_res_mem_43983,
                                                    mem_44025)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_36956_var,
                                 ((np.long(segmap_usable_groups_36966) * np.long(segmap_group_sizze_36965)),),
                                 (np.long(segmap_group_sizze_36965),))
      if synchronous:
        sync(self)
    nest_sizze_36979 = (m_28474 * iota32_arg_28873)
    segmap_group_sizze_36980 = self.sizes["mainMagnitude.segmap_group_size_36901"]
    segmap_usable_groups_36981 = sdiv_up64(nest_sizze_36979,
                                           segmap_group_sizze_36980)
    bytes_44027 = (np.int64(4) * nest_sizze_36979)
    mem_44029 = opencl_alloc(self, bytes_44027, "mem_44029")
    if ((1 * (np.long(segmap_usable_groups_36981) * np.long(segmap_group_sizze_36980))) != 0):
      self.mainMagnitudezisegmap_36898_var.set_args(self.global_failure,
                                                    self.failure_is_an_option,
                                                    self.global_failure_args,
                                                    np.int64(N_28473),
                                                    np.int64(m_28474),
                                                    np.int64(iota32_arg_28873),
                                                    defunc_4_map_res_mem_43919,
                                                    defunc_3_map_res_mem_43983,
                                                    mem_44025, mem_44029)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_36898_var,
                                 ((np.long(segmap_usable_groups_36981) * np.long(segmap_group_sizze_36980)),),
                                 (np.long(segmap_group_sizze_36980),))
      if synchronous:
        sync(self)
    self.failure_is_an_option = np.int32(1)
    segmap_group_sizze_37009 = self.sizes["mainMagnitude.segmap_group_size_36779"]
    segmap_usable_groups_37010 = sdiv_up64(m_28474, segmap_group_sizze_37009)
    mem_44032 = opencl_alloc(self, bytes_44027, "mem_44032")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_44032, np.int64(0),
                                                mem_44029, np.int64(0),
                                                np.int64(1), iota32_arg_28873,
                                                m_28474)
    mem_44029 = None
    mem_44063 = opencl_alloc(self, bytes_43899, "mem_44063")
    num_threads_44293 = (segmap_group_sizze_37009 * segmap_usable_groups_37010)
    total_sizze_44294 = (bytes_44019 * num_threads_44293)
    mem_44043 = opencl_alloc(self, total_sizze_44294, "mem_44043")
    if ((1 * (np.long(segmap_usable_groups_37010) * np.long(segmap_group_sizze_37009))) != 0):
      self.mainMagnitudezisegmap_36777_var.set_args(self.global_failure,
                                                    self.failure_is_an_option,
                                                    self.global_failure_args,
                                                    np.int64(m_28474),
                                                    np.int64(iota32_arg_28873),
                                                    np.int64(distance_28905),
                                                    np.int64(segmap_usable_groups_37010),
                                                    defunc_4_map_res_mem_43918,
                                                    defunc_3_map_res_mem_43983,
                                                    mem_44025, mem_44032,
                                                    mem_44043, mem_44063)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_36777_var,
                                 ((np.long(segmap_usable_groups_37010) * np.long(segmap_group_sizze_37009)),),
                                 (np.long(segmap_group_sizze_37009),))
      if synchronous:
        sync(self)
    self.failure_is_an_option = np.int32(1)
    mem_44025 = None
    mem_44032 = None
    mem_44043 = None
    fits_37344 = sle64(iota32_arg_28873, max_group_sizze_34751)
    suff_intra_par_37342 = (self.sizes["mainMagnitude.suff_intra_par_37"] <= iota32_arg_28873)
    intra_suff_and_fits_37345 = (suff_intra_par_37342 and fits_37344)
    segmap_group_sizze_37618 = self.sizes["mainMagnitude.segmap_group_size_37598"]
    max_num_groups_45294 = self.sizes["mainMagnitude.segmap_num_groups_37600"]
    num_groups_37619 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28474,
                                                            segmap_group_sizze_37618),
                                                  sext_i32_i64(max_num_groups_45294))))
    segscan_group_sizze_37641 = self.sizes["mainMagnitude.segscan_group_size_37557"]
    max_num_groups_45295 = self.sizes["mainMagnitude.segscan_num_groups_37559"]
    num_groups_37642 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36979,
                                                            segscan_group_sizze_37641),
                                                  sext_i32_i64(max_num_groups_45295))))
    segred_group_sizze_37679 = self.sizes["mainMagnitude.segred_group_size_37503"]
    max_num_groups_45296 = self.sizes["mainMagnitude.segred_num_groups_37505"]
    num_groups_37680 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36979,
                                                            segred_group_sizze_37679),
                                                  sext_i32_i64(max_num_groups_45296))))
    segmap_group_sizze_37718 = self.sizes["mainMagnitude.segmap_group_size_37456"]
    local_memory_capacity_45489 = self.max_local_memory
    if (sle64((((bytes_44019 + (np.int32(1) * iota32_arg_28873)) + (np.int32(4) * iota32_arg_28873)) + (np.int32(4) * iota32_arg_28873)),
              sext_i32_i64(local_memory_capacity_45489)) and intra_suff_and_fits_37345):
      mem_44070 = opencl_alloc(self, bytes_43899, "mem_44070")
      mem_44072 = opencl_alloc(self, bytes_43899, "mem_44072")
      if ((1 * (np.long(m_28474) * np.long(iota32_arg_28873))) != 0):
        self.mainMagnitudezisegmap_intragroup_37129_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long((np.int32(4) * iota32_arg_28873))),
                                                                 cl.LocalMemory(np.long((np.int32(4) * iota32_arg_28873))),
                                                                 cl.LocalMemory(np.long((np.int32(1) * iota32_arg_28873))),
                                                                 cl.LocalMemory(np.long(bytes_44019)),
                                                                 np.int64(N_28473),
                                                                 np.int32(n_28478),
                                                                 np.int64(iota32_arg_28873),
                                                                 defunc_4_map_res_mem_43918,
                                                                 defunc_4_map_res_mem_43919,
                                                                 defunc_4_map_res_mem_43920,
                                                                 defunc_3_map_res_mem_43982,
                                                                 defunc_3_map_res_mem_43983,
                                                                 defunc_3_map_res_mem_43984,
                                                                 defunc_0_f_res_mem_44017,
                                                                 mem_44022,
                                                                 mem_44070,
                                                                 mem_44072)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_37129_var,
                                   ((np.long(m_28474) * np.long(iota32_arg_28873)),),
                                   (np.long(iota32_arg_28873),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_44094 = mem_44070
      defunc_0_f_res_mem_44095 = mem_44072
    else:
      mem_44075 = opencl_alloc(self, bytes_43899, "mem_44075")
      mem_44077 = opencl_alloc(self, bytes_43899, "mem_44077")
      if ((1 * (np.long(num_groups_37619) * np.long(segmap_group_sizze_37618))) != 0):
        self.mainMagnitudezisegmap_37596_var.set_args(self.global_failure,
                                                      np.int64(m_28474),
                                                      np.int64(num_groups_37619),
                                                      defunc_4_map_res_mem_43918,
                                                      defunc_3_map_res_mem_43983,
                                                      defunc_3_map_res_mem_43984,
                                                      mem_44075, mem_44077)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_37596_var,
                                   ((np.long(num_groups_37619) * np.long(segmap_group_sizze_37618)),),
                                   (np.long(segmap_group_sizze_37618),))
        if synchronous:
          sync(self)
      mem_44081 = opencl_alloc(self, bytes_44027, "mem_44081")
      if slt64(np.int64(0), (m_28474 * iota32_arg_28873)):
        stage1_max_num_groups_45330 = self.max_group_size
        stage1_num_groups_45331 = smin64(stage1_max_num_groups_45330,
                                         num_groups_37642)
        num_threads_45332 = sext_i64_i32((stage1_num_groups_45331 * segscan_group_sizze_37641))
        if ((1 * (np.long(stage1_num_groups_45331) * np.long(segscan_group_sizze_37641))) != 0):
          self.mainMagnitudeziscan_stage1_37563_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                           (np.int32(4) * segscan_group_sizze_37641)))),
                                                             np.int64(N_28473),
                                                             np.int64(m_28474),
                                                             np.int64(iota32_arg_28873),
                                                             defunc_4_map_res_mem_43919,
                                                             defunc_3_map_res_mem_43982,
                                                             defunc_3_map_res_mem_43983,
                                                             defunc_0_f_res_mem_44017,
                                                             mem_44077,
                                                             mem_44081,
                                                             np.int32(num_threads_45332))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage1_37563_var,
                                     ((np.long(stage1_num_groups_45331) * np.long(segscan_group_sizze_37641)),),
                                     (np.long(segscan_group_sizze_37641),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_45331))) != 0):
          self.mainMagnitudeziscan_stage2_37563_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                           (np.int32(4) * stage1_num_groups_45331)))),
                                                             np.int64(m_28474),
                                                             np.int64(iota32_arg_28873),
                                                             mem_44081,
                                                             np.int64(stage1_num_groups_45331),
                                                             np.int32(num_threads_45332))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage2_37563_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_45331)),),
                                     (np.long(stage1_num_groups_45331),))
          if synchronous:
            sync(self)
        required_groups_45374 = sext_i64_i32(sdiv_up64((m_28474 * iota32_arg_28873),
                                                       segscan_group_sizze_37641))
        if ((1 * (np.long(num_groups_37642) * np.long(segscan_group_sizze_37641))) != 0):
          self.mainMagnitudeziscan_stage3_37563_var.set_args(self.global_failure,
                                                             np.int64(m_28474),
                                                             np.int64(iota32_arg_28873),
                                                             np.int64(num_groups_37642),
                                                             mem_44081,
                                                             np.int32(num_threads_45332),
                                                             np.int32(required_groups_45374))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage3_37563_var,
                                     ((np.long(num_groups_37642) * np.long(segscan_group_sizze_37641)),),
                                     (np.long(segscan_group_sizze_37641),))
          if synchronous:
            sync(self)
      mem_44084 = opencl_alloc(self, m_28474, "mem_44084")
      mem_44086 = opencl_alloc(self, bytes_43899, "mem_44086")
      mem_44088 = opencl_alloc(self, bytes_43899, "mem_44088")
      if slt64((iota32_arg_28873 * np.int64(2)), segred_group_sizze_37679):
        segment_sizze_nonzzero_45386 = smax64(np.int64(1), iota32_arg_28873)
        num_threads_45387 = (num_groups_37680 * segred_group_sizze_37679)
        if ((1 * (np.long(num_groups_37680) * np.long(segred_group_sizze_37679))) != 0):
          self.mainMagnitudezisegred_small_37509_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37679))),
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37679))),
                                                              cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_37679))),
                                                              np.int64(m_28474),
                                                              np.int64(iota32_arg_28873),
                                                              np.int64(num_groups_37680),
                                                              mem_44022,
                                                              mem_44075,
                                                              mem_44077,
                                                              mem_44081,
                                                              mem_44084,
                                                              mem_44086,
                                                              mem_44088,
                                                              np.int64(segment_sizze_nonzzero_45386))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegred_small_37509_var,
                                     ((np.long(num_groups_37680) * np.long(segred_group_sizze_37679)),),
                                     (np.long(segred_group_sizze_37679),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_45422 = sdiv_up64(num_groups_37680,
                                             smax64(np.int64(1), m_28474))
        elements_per_thread_45423 = sdiv_up64(iota32_arg_28873,
                                              (segred_group_sizze_37679 * groups_per_segment_45422))
        virt_num_groups_45424 = (groups_per_segment_45422 * m_28474)
        num_threads_45425 = (num_groups_37680 * segred_group_sizze_37679)
        threads_per_segment_45426 = (groups_per_segment_45422 * segred_group_sizze_37679)
        group_res_arr_mem_45427 = opencl_alloc(self,
                                               (np.int32(1) * (segred_group_sizze_37679 * virt_num_groups_45424)),
                                               "group_res_arr_mem_45427")
        group_res_arr_mem_45429 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_37679 * virt_num_groups_45424)),
                                               "group_res_arr_mem_45429")
        group_res_arr_mem_45431 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_37679 * virt_num_groups_45424)),
                                               "group_res_arr_mem_45431")
        mainMagnitudezicounter_mem_45433 = self.mainMagnitudezicounter_mem_45433
        if ((1 * (np.long(num_groups_37680) * np.long(segred_group_sizze_37679))) != 0):
          self.mainMagnitudezisegred_large_37509_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long(np.int32(1))),
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37679))),
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37679))),
                                                              cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_37679))),
                                                              np.int64(iota32_arg_28873),
                                                              np.int64(num_groups_37680),
                                                              mem_44022,
                                                              mem_44075,
                                                              mem_44077,
                                                              mem_44081,
                                                              mem_44084,
                                                              mem_44086,
                                                              mem_44088,
                                                              np.int64(groups_per_segment_45422),
                                                              np.int64(elements_per_thread_45423),
                                                              np.int64(virt_num_groups_45424),
                                                              group_res_arr_mem_45427,
                                                              group_res_arr_mem_45429,
                                                              group_res_arr_mem_45431,
                                                              mainMagnitudezicounter_mem_45433)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegred_large_37509_var,
                                     ((np.long(num_groups_37680) * np.long(segred_group_sizze_37679)),),
                                     (np.long(segred_group_sizze_37679),))
          if synchronous:
            sync(self)
      mem_44075 = None
      mem_44081 = None
      segmap_usable_groups_37719 = sdiv_up64(m_28474, segmap_group_sizze_37718)
      mem_44091 = opencl_alloc(self, bytes_43899, "mem_44091")
      mem_44093 = opencl_alloc(self, bytes_43899, "mem_44093")
      if ((1 * (np.long(segmap_usable_groups_37719) * np.long(segmap_group_sizze_37718))) != 0):
        self.mainMagnitudezisegmap_37454_var.set_args(self.global_failure,
                                                      np.int64(N_28473),
                                                      np.int64(m_28474),
                                                      np.int32(n_28478),
                                                      defunc_4_map_res_mem_43920,
                                                      defunc_3_map_res_mem_43983,
                                                      mem_44077, mem_44084,
                                                      mem_44086, mem_44088,
                                                      mem_44091, mem_44093)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_37454_var,
                                   ((np.long(segmap_usable_groups_37719) * np.long(segmap_group_sizze_37718)),),
                                   (np.long(segmap_group_sizze_37718),))
        if synchronous:
          sync(self)
      mem_44077 = None
      mem_44084 = None
      mem_44086 = None
      mem_44088 = None
      defunc_0_f_res_mem_44094 = mem_44091
      defunc_0_f_res_mem_44095 = mem_44093
    defunc_4_map_res_mem_43918 = None
    defunc_4_map_res_mem_43919 = None
    defunc_4_map_res_mem_43920 = None
    defunc_3_map_res_mem_43982 = None
    defunc_3_map_res_mem_43983 = None
    defunc_3_map_res_mem_43984 = None
    defunc_0_f_res_mem_44017 = None
    mem_44022 = None
    out_arrsizze_44347 = m_28474
    out_arrsizze_44349 = m_28474
    out_arrsizze_44351 = m_28474
    out_mem_44346 = defunc_0_f_res_mem_44094
    out_mem_44348 = defunc_0_f_res_mem_44095
    out_mem_44350 = mem_44063
    return (out_mem_44346, out_arrsizze_44347, out_mem_44348,
            out_arrsizze_44349, out_mem_44350, out_arrsizze_44351)
  def futhark_remove_nans(self, images_mem_43122, m_27758, n_27759, p_27760,
                          nan_value_27761):
    y_29779 = (n_27759 * p_27760)
    nest_sizze_29780 = (m_27758 * y_29779)
    segmap_group_sizze_29781 = self.sizes["remove_nans.segmap_group_size_29724"]
    segmap_usable_groups_29782 = sdiv_up64(nest_sizze_29780,
                                           segmap_group_sizze_29781)
    binop_x_43125 = (m_27758 * n_27759)
    binop_x_43126 = (p_27760 * binop_x_43125)
    bytes_43124 = (np.int64(4) * binop_x_43126)
    mem_43127 = opencl_alloc(self, bytes_43124, "mem_43127")
    if ((1 * (np.long(segmap_usable_groups_29782) * np.long(segmap_group_sizze_29781))) != 0):
      self.remove_nanszisegmap_29720_var.set_args(self.global_failure,
                                                  np.int64(m_27758),
                                                  np.int64(n_27759),
                                                  np.int64(p_27760),
                                                  np.int16(nan_value_27761),
                                                  images_mem_43122, mem_43127)
      cl.enqueue_nd_range_kernel(self.queue, self.remove_nanszisegmap_29720_var,
                                 ((np.long(segmap_usable_groups_29782) * np.long(segmap_group_sizze_29781)),),
                                 (np.long(segmap_group_sizze_29781),))
      if synchronous:
        sync(self)
    out_arrsizze_44347 = m_27758
    out_arrsizze_44348 = n_27759
    out_arrsizze_44349 = p_27760
    out_mem_44346 = mem_43127
    return (out_mem_44346, out_arrsizze_44347, out_arrsizze_44348,
            out_arrsizze_44349)
  def futhark_reshapeTransp(self, images_mem_43122, m_27751, n_27752, p_27753):
    flatten_to_arg_27755 = (n_27752 * p_27753)
    binop_x_43124 = (m_27751 * flatten_to_arg_27755)
    bytes_43123 = (np.int64(4) * binop_x_43124)
    mem_43125 = opencl_alloc(self, bytes_43123, "mem_43125")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_43125, np.int64(0),
                                                images_mem_43122, np.int64(0),
                                                np.int64(1),
                                                flatten_to_arg_27755, m_27751)
    out_arrsizze_44347 = flatten_to_arg_27755
    out_arrsizze_44348 = m_27751
    out_mem_44346 = mem_43125
    return (out_mem_44346, out_arrsizze_44347, out_arrsizze_44348)
  def main(self, trend_29118_ext, k_29119_ext, n_29120_ext, freq_29121_ext,
           hfrac_29122_ext, lam_29123_ext, mappingindices_mem_43122_ext,
           images_mem_43123_ext):
    try:
      trend_29118 = np.int32(ct.c_int32(trend_29118_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(trend_29118_ext),
                                                                                                                            trend_29118_ext))
    try:
      k_29119 = np.int32(ct.c_int32(k_29119_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(k_29119_ext),
                                                                                                                            k_29119_ext))
    try:
      n_29120 = np.int32(ct.c_int32(n_29120_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(n_29120_ext),
                                                                                                                            n_29120_ext))
    try:
      freq_29121 = np.float32(ct.c_float(freq_29121_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(freq_29121_ext),
                                                                                                                            freq_29121_ext))
    try:
      hfrac_29122 = np.float32(ct.c_float(hfrac_29122_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(hfrac_29122_ext),
                                                                                                                            hfrac_29122_ext))
    try:
      lam_29123 = np.float32(ct.c_float(lam_29123_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #5 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(lam_29123_ext),
                                                                                                                            lam_29123_ext))
    try:
      assert ((type(mappingindices_mem_43122_ext) in [np.ndarray,
                                                      cl.array.Array]) and (mappingindices_mem_43122_ext.dtype == np.int32)), "Parameter has unexpected type"
      N_29115 = np.int64(mappingindices_mem_43122_ext.shape[0])
      if (type(mappingindices_mem_43122_ext) == cl.array.Array):
        mappingindices_mem_43122 = mappingindices_mem_43122_ext.data
      else:
        mappingindices_mem_43122 = opencl_alloc(self,
                                                np.int64(mappingindices_mem_43122_ext.nbytes),
                                                "mappingindices_mem_43122")
        if (np.int64(mappingindices_mem_43122_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, mappingindices_mem_43122,
                          normaliseArray(mappingindices_mem_43122_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #6 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[]i32",
                                                                                                                            type(mappingindices_mem_43122_ext),
                                                                                                                            mappingindices_mem_43122_ext))
    try:
      assert ((type(images_mem_43123_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_43123_ext.dtype == np.float32)), "Parameter has unexpected type"
      m_29116 = np.int64(images_mem_43123_ext.shape[0])
      N_29117 = np.int64(images_mem_43123_ext.shape[1])
      if (type(images_mem_43123_ext) == cl.array.Array):
        images_mem_43123 = images_mem_43123_ext.data
      else:
        images_mem_43123 = opencl_alloc(self,
                                        np.int64(images_mem_43123_ext.nbytes),
                                        "images_mem_43123")
        if (np.int64(images_mem_43123_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_43123,
                          normaliseArray(images_mem_43123_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #7 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][]f32",
                                                                                                                            type(images_mem_43123_ext),
                                                                                                                            images_mem_43123_ext))
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_44346, out_arrsizze_44347, out_mem_44348,
       out_arrsizze_44349) = self.futhark_main(mappingindices_mem_43122,
                                               images_mem_43123, N_29115,
                                               m_29116, N_29117, trend_29118,
                                               k_29119, n_29120, freq_29121,
                                               hfrac_29122, lam_29123)
    sync(self)
    return (cl.array.Array(self.queue, (out_arrsizze_44347,), ct.c_int32,
                           data=out_mem_44346), cl.array.Array(self.queue,
                                                               (out_arrsizze_44349,),
                                                               ct.c_float,
                                                               data=out_mem_44348))
  def mainDetailed(self, trend_27775_ext, k_27776_ext, n_27777_ext,
                   freq_27778_ext, hfrac_27779_ext, lam_27780_ext,
                   mappingindices_mem_43122_ext, images_mem_43123_ext):
    try:
      trend_27775 = np.int32(ct.c_int32(trend_27775_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(trend_27775_ext),
                                                                                                                            trend_27775_ext))
    try:
      k_27776 = np.int32(ct.c_int32(k_27776_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(k_27776_ext),
                                                                                                                            k_27776_ext))
    try:
      n_27777 = np.int32(ct.c_int32(n_27777_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(n_27777_ext),
                                                                                                                            n_27777_ext))
    try:
      freq_27778 = np.float32(ct.c_float(freq_27778_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(freq_27778_ext),
                                                                                                                            freq_27778_ext))
    try:
      hfrac_27779 = np.float32(ct.c_float(hfrac_27779_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(hfrac_27779_ext),
                                                                                                                            hfrac_27779_ext))
    try:
      lam_27780 = np.float32(ct.c_float(lam_27780_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #5 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(lam_27780_ext),
                                                                                                                            lam_27780_ext))
    try:
      assert ((type(mappingindices_mem_43122_ext) in [np.ndarray,
                                                      cl.array.Array]) and (mappingindices_mem_43122_ext.dtype == np.int32)), "Parameter has unexpected type"
      N_27772 = np.int64(mappingindices_mem_43122_ext.shape[0])
      if (type(mappingindices_mem_43122_ext) == cl.array.Array):
        mappingindices_mem_43122 = mappingindices_mem_43122_ext.data
      else:
        mappingindices_mem_43122 = opencl_alloc(self,
                                                np.int64(mappingindices_mem_43122_ext.nbytes),
                                                "mappingindices_mem_43122")
        if (np.int64(mappingindices_mem_43122_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, mappingindices_mem_43122,
                          normaliseArray(mappingindices_mem_43122_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #6 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[]i32",
                                                                                                                            type(mappingindices_mem_43122_ext),
                                                                                                                            mappingindices_mem_43122_ext))
    try:
      assert ((type(images_mem_43123_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_43123_ext.dtype == np.float32)), "Parameter has unexpected type"
      m_27773 = np.int64(images_mem_43123_ext.shape[0])
      N_27774 = np.int64(images_mem_43123_ext.shape[1])
      if (type(images_mem_43123_ext) == cl.array.Array):
        images_mem_43123 = images_mem_43123_ext.data
      else:
        images_mem_43123 = opencl_alloc(self,
                                        np.int64(images_mem_43123_ext.nbytes),
                                        "images_mem_43123")
        if (np.int64(images_mem_43123_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_43123,
                          normaliseArray(images_mem_43123_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #7 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][]f32",
                                                                                                                            type(images_mem_43123_ext),
                                                                                                                            images_mem_43123_ext))
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_44346, out_arrsizze_44347, out_mem_44348, out_arrsizze_44349,
       out_mem_44350, out_arrsizze_44351, out_mem_44352, out_arrsizze_44353,
       out_mem_44354, out_arrsizze_44355, out_arrsizze_44356, out_mem_44357,
       out_arrsizze_44358, out_arrsizze_44359, out_mem_44360,
       out_arrsizze_44361, out_mem_44362, out_arrsizze_44363, out_mem_44364,
       out_arrsizze_44365, out_mem_44366, out_arrsizze_44367, out_mem_44368,
       out_arrsizze_44369, out_arrsizze_44370, out_mem_44371,
       out_arrsizze_44372,
       out_arrsizze_44373) = self.futhark_mainDetailed(mappingindices_mem_43122,
                                                       images_mem_43123,
                                                       N_27772, m_27773,
                                                       N_27774, trend_27775,
                                                       k_27776, n_27777,
                                                       freq_27778, hfrac_27779,
                                                       lam_27780)
    sync(self)
    return (cl.array.Array(self.queue, (out_arrsizze_44347,), ct.c_float,
                           data=out_mem_44346), cl.array.Array(self.queue,
                                                               (out_arrsizze_44349,),
                                                               ct.c_int32,
                                                               data=out_mem_44348),
            cl.array.Array(self.queue, (out_arrsizze_44351,), ct.c_int32,
                           data=out_mem_44350), cl.array.Array(self.queue,
                                                               (out_arrsizze_44353,),
                                                               ct.c_float,
                                                               data=out_mem_44352),
            cl.array.Array(self.queue, (out_arrsizze_44355, out_arrsizze_44356),
                           ct.c_float, data=out_mem_44354),
            cl.array.Array(self.queue, (out_arrsizze_44358, out_arrsizze_44359),
                           ct.c_float, data=out_mem_44357),
            cl.array.Array(self.queue, (out_arrsizze_44361,), ct.c_float,
                           data=out_mem_44360), cl.array.Array(self.queue,
                                                               (out_arrsizze_44363,),
                                                               ct.c_int32,
                                                               data=out_mem_44362),
            cl.array.Array(self.queue, (out_arrsizze_44365,), ct.c_float,
                           data=out_mem_44364), cl.array.Array(self.queue,
                                                               (out_arrsizze_44367,),
                                                               ct.c_float,
                                                               data=out_mem_44366),
            cl.array.Array(self.queue, (out_arrsizze_44369, out_arrsizze_44370),
                           ct.c_float, data=out_mem_44368),
            cl.array.Array(self.queue, (out_arrsizze_44372, out_arrsizze_44373),
                           ct.c_float, data=out_mem_44371))
  def mainMagnitude(self, trend_28476_ext, k_28477_ext, n_28478_ext,
                    freq_28479_ext, hfrac_28480_ext, lam_28481_ext,
                    mappingindices_mem_43122_ext, images_mem_43123_ext):
    try:
      trend_28476 = np.int32(ct.c_int32(trend_28476_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(trend_28476_ext),
                                                                                                                            trend_28476_ext))
    try:
      k_28477 = np.int32(ct.c_int32(k_28477_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(k_28477_ext),
                                                                                                                            k_28477_ext))
    try:
      n_28478 = np.int32(ct.c_int32(n_28478_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(n_28478_ext),
                                                                                                                            n_28478_ext))
    try:
      freq_28479 = np.float32(ct.c_float(freq_28479_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(freq_28479_ext),
                                                                                                                            freq_28479_ext))
    try:
      hfrac_28480 = np.float32(ct.c_float(hfrac_28480_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(hfrac_28480_ext),
                                                                                                                            hfrac_28480_ext))
    try:
      lam_28481 = np.float32(ct.c_float(lam_28481_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #5 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(lam_28481_ext),
                                                                                                                            lam_28481_ext))
    try:
      assert ((type(mappingindices_mem_43122_ext) in [np.ndarray,
                                                      cl.array.Array]) and (mappingindices_mem_43122_ext.dtype == np.int32)), "Parameter has unexpected type"
      N_28473 = np.int64(mappingindices_mem_43122_ext.shape[0])
      if (type(mappingindices_mem_43122_ext) == cl.array.Array):
        mappingindices_mem_43122 = mappingindices_mem_43122_ext.data
      else:
        mappingindices_mem_43122 = opencl_alloc(self,
                                                np.int64(mappingindices_mem_43122_ext.nbytes),
                                                "mappingindices_mem_43122")
        if (np.int64(mappingindices_mem_43122_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, mappingindices_mem_43122,
                          normaliseArray(mappingindices_mem_43122_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #6 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[]i32",
                                                                                                                            type(mappingindices_mem_43122_ext),
                                                                                                                            mappingindices_mem_43122_ext))
    try:
      assert ((type(images_mem_43123_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_43123_ext.dtype == np.float32)), "Parameter has unexpected type"
      m_28474 = np.int64(images_mem_43123_ext.shape[0])
      N_28475 = np.int64(images_mem_43123_ext.shape[1])
      if (type(images_mem_43123_ext) == cl.array.Array):
        images_mem_43123 = images_mem_43123_ext.data
      else:
        images_mem_43123 = opencl_alloc(self,
                                        np.int64(images_mem_43123_ext.nbytes),
                                        "images_mem_43123")
        if (np.int64(images_mem_43123_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_43123,
                          normaliseArray(images_mem_43123_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #7 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][]f32",
                                                                                                                            type(images_mem_43123_ext),
                                                                                                                            images_mem_43123_ext))
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_44346, out_arrsizze_44347, out_mem_44348, out_arrsizze_44349,
       out_mem_44350,
       out_arrsizze_44351) = self.futhark_mainMagnitude(mappingindices_mem_43122,
                                                        images_mem_43123,
                                                        N_28473, m_28474,
                                                        N_28475, trend_28476,
                                                        k_28477, n_28478,
                                                        freq_28479, hfrac_28480,
                                                        lam_28481)
    sync(self)
    return (cl.array.Array(self.queue, (out_arrsizze_44347,), ct.c_int32,
                           data=out_mem_44346), cl.array.Array(self.queue,
                                                               (out_arrsizze_44349,),
                                                               ct.c_float,
                                                               data=out_mem_44348),
            cl.array.Array(self.queue, (out_arrsizze_44351,), ct.c_float,
                           data=out_mem_44350))
  def remove_nans(self, nan_value_27761_ext, images_mem_43122_ext):
    try:
      nan_value_27761 = np.int16(ct.c_int16(nan_value_27761_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i16",
                                                                                                                            type(nan_value_27761_ext),
                                                                                                                            nan_value_27761_ext))
    try:
      assert ((type(images_mem_43122_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_43122_ext.dtype == np.int16)), "Parameter has unexpected type"
      m_27758 = np.int64(images_mem_43122_ext.shape[0])
      n_27759 = np.int64(images_mem_43122_ext.shape[1])
      p_27760 = np.int64(images_mem_43122_ext.shape[2])
      if (type(images_mem_43122_ext) == cl.array.Array):
        images_mem_43122 = images_mem_43122_ext.data
      else:
        images_mem_43122 = opencl_alloc(self,
                                        np.int64(images_mem_43122_ext.nbytes),
                                        "images_mem_43122")
        if (np.int64(images_mem_43122_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_43122,
                          normaliseArray(images_mem_43122_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][][]i16",
                                                                                                                            type(images_mem_43122_ext),
                                                                                                                            images_mem_43122_ext))
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_44346, out_arrsizze_44347, out_arrsizze_44348,
       out_arrsizze_44349) = self.futhark_remove_nans(images_mem_43122, m_27758,
                                                      n_27759, p_27760,
                                                      nan_value_27761)
    sync(self)
    return cl.array.Array(self.queue, (out_arrsizze_44347, out_arrsizze_44348,
                                       out_arrsizze_44349), ct.c_float,
                          data=out_mem_44346)
  def reshapeTransp(self, images_mem_43122_ext):
    try:
      assert ((type(images_mem_43122_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_43122_ext.dtype == np.float32)), "Parameter has unexpected type"
      m_27751 = np.int64(images_mem_43122_ext.shape[0])
      n_27752 = np.int64(images_mem_43122_ext.shape[1])
      p_27753 = np.int64(images_mem_43122_ext.shape[2])
      if (type(images_mem_43122_ext) == cl.array.Array):
        images_mem_43122 = images_mem_43122_ext.data
      else:
        images_mem_43122 = opencl_alloc(self,
                                        np.int64(images_mem_43122_ext.nbytes),
                                        "images_mem_43122")
        if (np.int64(images_mem_43122_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_43122,
                          normaliseArray(images_mem_43122_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][][]f32",
                                                                                                                            type(images_mem_43122_ext),
                                                                                                                            images_mem_43122_ext))
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_44346, out_arrsizze_44347,
       out_arrsizze_44348) = self.futhark_reshapeTransp(images_mem_43122,
                                                        m_27751, n_27752,
                                                        p_27753)
    sync(self)
    return cl.array.Array(self.queue, (out_arrsizze_44347, out_arrsizze_44348),
                          ct.c_float, data=out_mem_44346)
