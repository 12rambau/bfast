import sys
import numpy as np
import ctypes as ct
# Stub code for OpenCL setup.

import pyopencl as cl
import numpy as np
import sys

if cl.version.VERSION < (2015,2):
    raise Exception('Futhark requires at least PyOpenCL version 2015.2.  Installed version is %s.' %
                    cl.version.VERSION_TEXT)

def parse_preferred_device(s):
    pref_num = 0
    if len(s) > 1 and s[0] == '#':
        i = 1
        while i < len(s):
            if not s[i].isdigit():
                break
            else:
                pref_num = pref_num * 10 + int(s[i])
            i += 1
        while i < len(s) and s[i].isspace():
            i += 1
        return (s[i:], pref_num)
    else:
        return (s, 0)

def get_prefered_context(interactive=False, platform_pref=None, device_pref=None):
    if device_pref != None:
        (device_pref, device_num) = parse_preferred_device(device_pref)
    else:
        device_num = 0

    if interactive:
        return cl.create_some_context(interactive=True)

    def blacklisted(p, d):
        return platform_pref == None and device_pref == None and \
            p.name == "Apple" and d.name.find("Intel(R) Core(TM)") >= 0
    def platform_ok(p):
        return not platform_pref or p.name.find(platform_pref) >= 0
    def device_ok(d):
        return not device_pref or d.name.find(device_pref) >= 0

    device_matches = 0

    for p in cl.get_platforms():
        if not platform_ok(p):
            continue
        for d in p.get_devices():
            if blacklisted(p,d) or not device_ok(d):
                continue
            if device_matches == device_num:
                return cl.Context(devices=[d])
            else:
                device_matches += 1
    raise Exception('No OpenCL platform and device matching constraints found.')

def size_assignment(s):
    name, value = s.split('=')
    return (name, int(value))

def check_types(self, required_types):
    if 'f64' in required_types:
        if self.device.get_info(cl.device_info.PREFERRED_VECTOR_WIDTH_DOUBLE) == 0:
            raise Exception('Program uses double-precision floats, but this is not supported on chosen device: %s' % self.device.name)

def apply_size_heuristics(self, size_heuristics, sizes):
    for (platform_name, device_type, size, valuef) in size_heuristics:
        if sizes[size] == None \
           and self.platform.name.find(platform_name) >= 0 \
           and (self.device.type & device_type) == device_type:
               sizes[size] = valuef(self.device)
    return sizes

def initialise_opencl_object(self,
                             program_src='',
                             command_queue=None,
                             interactive=False,
                             platform_pref=None,
                             device_pref=None,
                             default_group_size=None,
                             default_num_groups=None,
                             default_tile_size=None,
                             default_threshold=None,
                             size_heuristics=[],
                             required_types=[],
                             all_sizes={},
                             user_sizes={}):
    if command_queue is None:
        self.ctx = get_prefered_context(interactive, platform_pref, device_pref)
        self.queue = cl.CommandQueue(self.ctx)
    else:
        self.ctx = command_queue.context
        self.queue = command_queue
    self.device = self.queue.device
    self.platform = self.device.platform
    self.pool = cl.tools.MemoryPool(cl.tools.ImmediateAllocator(self.queue))
    device_type = self.device.type

    check_types(self, required_types)

    max_group_size = int(self.device.max_work_group_size)
    max_tile_size = int(np.sqrt(self.device.max_work_group_size))

    self.max_group_size = max_group_size
    self.max_tile_size = max_tile_size
    self.max_threshold = 0
    self.max_num_groups = 0

    self.max_local_memory = int(self.device.local_mem_size)

    # Futhark reserves 4 bytes of local memory for its own purposes.
    self.max_local_memory -= 4

    # See comment in rts/c/opencl.h.
    if self.platform.name.find('NVIDIA CUDA') >= 0:
        self.max_local_memory -= 12
    elif self.platform.name.find('AMD') >= 0:
        self.max_local_memory -= 16

    self.free_list = {}

    self.global_failure = self.pool.allocate(np.int32().itemsize)
    cl.enqueue_fill_buffer(self.queue, self.global_failure, np.int32(-1), 0, np.int32().itemsize)
    self.global_failure_args = self.pool.allocate(np.int64().itemsize *
                                                  (self.global_failure_args_max+1))
    self.failure_is_an_option = np.int32(0)

    if 'default_group_size' in sizes:
        default_group_size = sizes['default_group_size']
        del sizes['default_group_size']

    if 'default_num_groups' in sizes:
        default_num_groups = sizes['default_num_groups']
        del sizes['default_num_groups']

    if 'default_tile_size' in sizes:
        default_tile_size = sizes['default_tile_size']
        del sizes['default_tile_size']

    if 'default_threshold' in sizes:
        default_threshold = sizes['default_threshold']
        del sizes['default_threshold']

    default_group_size_set = default_group_size != None
    default_tile_size_set = default_tile_size != None
    default_sizes = apply_size_heuristics(self, size_heuristics,
                                          {'group_size': default_group_size,
                                           'tile_size': default_tile_size,
                                           'num_groups': default_num_groups,
                                           'lockstep_width': None,
                                           'threshold': default_threshold})
    default_group_size = default_sizes['group_size']
    default_num_groups = default_sizes['num_groups']
    default_threshold = default_sizes['threshold']
    default_tile_size = default_sizes['tile_size']
    lockstep_width = default_sizes['lockstep_width']

    if default_group_size > max_group_size:
        if default_group_size_set:
            sys.stderr.write('Note: Device limits group size to {} (down from {})\n'.
                             format(max_tile_size, default_group_size))
        default_group_size = max_group_size

    if default_tile_size > max_tile_size:
        if default_tile_size_set:
            sys.stderr.write('Note: Device limits tile size to {} (down from {})\n'.
                             format(max_tile_size, default_tile_size))
        default_tile_size = max_tile_size

    for (k,v) in user_sizes.items():
        if k in all_sizes:
            all_sizes[k]['value'] = v
        else:
            raise Exception('Unknown size: {}\nKnown sizes: {}'.format(k, ' '.join(all_sizes.keys())))

    self.sizes = {}
    for (k,v) in all_sizes.items():
        if v['class'] == 'group_size':
            max_value = max_group_size
            default_value = default_group_size
        elif v['class'] == 'num_groups':
            max_value = max_group_size # Intentional!
            default_value = default_num_groups
        elif v['class'] == 'tile_size':
            max_value = max_tile_size
            default_value = default_tile_size
        elif v['class'].startswith('threshold'):
            max_value = None
            default_value = default_threshold
        else:
            # Bespoke sizes have no limit or default.
            max_value = None
        if v['value'] == None:
            self.sizes[k] = default_value
        elif max_value != None and v['value'] > max_value:
            sys.stderr.write('Note: Device limits {} to {} (down from {}\n'.
                             format(k, max_value, v['value']))
            self.sizes[k] = max_value
        else:
            self.sizes[k] = v['value']

    # XXX: we perform only a subset of z-encoding here.  Really, the
    # compiler should provide us with the variables to which
    # parameters are mapped.
    if (len(program_src) >= 0):
        return cl.Program(self.ctx, program_src).build(
            ["-DLOCKSTEP_WIDTH={}".format(lockstep_width)]
            + ["-D{}={}".format(s.replace('z', 'zz').replace('.', 'zi').replace('#', 'zh'),v) for (s,v) in self.sizes.items()])

def opencl_alloc(self, min_size, tag):
    min_size = 1 if min_size == 0 else min_size
    assert min_size > 0
    return self.pool.allocate(min_size)

def opencl_free_all(self):
    self.pool.free_held()

def sync(self):
    failure = np.empty(1, dtype=np.int32)
    cl.enqueue_copy(self.queue, failure, self.global_failure, is_blocking=True)
    self.failure_is_an_option = np.int32(0)
    if failure[0] >= 0:
        # Reset failure information.
        cl.enqueue_fill_buffer(self.queue, self.global_failure, np.int32(-1), 0, np.int32().itemsize)

        # Read failure args.
        failure_args = np.empty(self.global_failure_args_max+1, dtype=np.int64)
        cl.enqueue_copy(self.queue, failure_args, self.global_failure_args, is_blocking=True)

        raise Exception(self.failure_msgs[failure[0]].format(*failure_args))
import pyopencl.array
import time
import argparse
sizes = {}
synchronous = False
preferred_platform = None
preferred_device = None
default_threshold = None
default_group_size = None
default_num_groups = None
default_tile_size = None
default_reg_tile_size = None
fut_opencl_src = """#ifdef cl_clang_storage_class_specifiers
#pragma OPENCL EXTENSION cl_clang_storage_class_specifiers : enable
#endif
#pragma OPENCL EXTENSION cl_khr_byte_addressable_store : enable
__kernel void dummy_kernel(__global unsigned char *dummy, int n)
{
    const int thread_gid = get_global_id(0);
    
    if (thread_gid >= n)
        return;
}
typedef char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef long int64_t;
typedef uchar uint8_t;
typedef ushort uint16_t;
typedef uint uint32_t;
typedef ulong uint64_t;
#ifdef cl_nv_pragma_unroll
static inline void mem_fence_global()
{
    asm("membar.gl;");
}
#else
static inline void mem_fence_global()
{
    mem_fence(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
}
#endif
static inline void mem_fence_local()
{
    mem_fence(CLK_LOCAL_MEM_FENCE);
}
static inline uint8_t add8(uint8_t x, uint8_t y)
{
    return x + y;
}
static inline uint16_t add16(uint16_t x, uint16_t y)
{
    return x + y;
}
static inline uint32_t add32(uint32_t x, uint32_t y)
{
    return x + y;
}
static inline uint64_t add64(uint64_t x, uint64_t y)
{
    return x + y;
}
static inline uint8_t sub8(uint8_t x, uint8_t y)
{
    return x - y;
}
static inline uint16_t sub16(uint16_t x, uint16_t y)
{
    return x - y;
}
static inline uint32_t sub32(uint32_t x, uint32_t y)
{
    return x - y;
}
static inline uint64_t sub64(uint64_t x, uint64_t y)
{
    return x - y;
}
static inline uint8_t mul8(uint8_t x, uint8_t y)
{
    return x * y;
}
static inline uint16_t mul16(uint16_t x, uint16_t y)
{
    return x * y;
}
static inline uint32_t mul32(uint32_t x, uint32_t y)
{
    return x * y;
}
static inline uint64_t mul64(uint64_t x, uint64_t y)
{
    return x * y;
}
static inline uint8_t udiv8(uint8_t x, uint8_t y)
{
    return x / y;
}
static inline uint16_t udiv16(uint16_t x, uint16_t y)
{
    return x / y;
}
static inline uint32_t udiv32(uint32_t x, uint32_t y)
{
    return x / y;
}
static inline uint64_t udiv64(uint64_t x, uint64_t y)
{
    return x / y;
}
static inline uint8_t udiv_up8(uint8_t x, uint8_t y)
{
    return (x + y - 1) / y;
}
static inline uint16_t udiv_up16(uint16_t x, uint16_t y)
{
    return (x + y - 1) / y;
}
static inline uint32_t udiv_up32(uint32_t x, uint32_t y)
{
    return (x + y - 1) / y;
}
static inline uint64_t udiv_up64(uint64_t x, uint64_t y)
{
    return (x + y - 1) / y;
}
static inline uint8_t umod8(uint8_t x, uint8_t y)
{
    return x % y;
}
static inline uint16_t umod16(uint16_t x, uint16_t y)
{
    return x % y;
}
static inline uint32_t umod32(uint32_t x, uint32_t y)
{
    return x % y;
}
static inline uint64_t umod64(uint64_t x, uint64_t y)
{
    return x % y;
}
static inline uint8_t udiv_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint16_t udiv_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint32_t udiv_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint64_t udiv_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint8_t udiv_up_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint16_t udiv_up_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint32_t udiv_up_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint64_t udiv_up_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint8_t umod_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint16_t umod_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint32_t umod_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint64_t umod_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int8_t sdiv8(int8_t x, int8_t y)
{
    int8_t q = x / y;
    int8_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int16_t sdiv16(int16_t x, int16_t y)
{
    int16_t q = x / y;
    int16_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int32_t sdiv32(int32_t x, int32_t y)
{
    int32_t q = x / y;
    int32_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int64_t sdiv64(int64_t x, int64_t y)
{
    int64_t q = x / y;
    int64_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int8_t sdiv_up8(int8_t x, int8_t y)
{
    return sdiv8(x + y - 1, y);
}
static inline int16_t sdiv_up16(int16_t x, int16_t y)
{
    return sdiv16(x + y - 1, y);
}
static inline int32_t sdiv_up32(int32_t x, int32_t y)
{
    return sdiv32(x + y - 1, y);
}
static inline int64_t sdiv_up64(int64_t x, int64_t y)
{
    return sdiv64(x + y - 1, y);
}
static inline int8_t smod8(int8_t x, int8_t y)
{
    int8_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int16_t smod16(int16_t x, int16_t y)
{
    int16_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int32_t smod32(int32_t x, int32_t y)
{
    int32_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int64_t smod64(int64_t x, int64_t y)
{
    int64_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int8_t sdiv_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : sdiv8(x, y);
}
static inline int16_t sdiv_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : sdiv16(x, y);
}
static inline int32_t sdiv_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : sdiv32(x, y);
}
static inline int64_t sdiv_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : sdiv64(x, y);
}
static inline int8_t sdiv_up_safe8(int8_t x, int8_t y)
{
    return sdiv_safe8(x + y - 1, y);
}
static inline int16_t sdiv_up_safe16(int16_t x, int16_t y)
{
    return sdiv_safe16(x + y - 1, y);
}
static inline int32_t sdiv_up_safe32(int32_t x, int32_t y)
{
    return sdiv_safe32(x + y - 1, y);
}
static inline int64_t sdiv_up_safe64(int64_t x, int64_t y)
{
    return sdiv_safe64(x + y - 1, y);
}
static inline int8_t smod_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : smod8(x, y);
}
static inline int16_t smod_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : smod16(x, y);
}
static inline int32_t smod_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : smod32(x, y);
}
static inline int64_t smod_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : smod64(x, y);
}
static inline int8_t squot8(int8_t x, int8_t y)
{
    return x / y;
}
static inline int16_t squot16(int16_t x, int16_t y)
{
    return x / y;
}
static inline int32_t squot32(int32_t x, int32_t y)
{
    return x / y;
}
static inline int64_t squot64(int64_t x, int64_t y)
{
    return x / y;
}
static inline int8_t srem8(int8_t x, int8_t y)
{
    return x % y;
}
static inline int16_t srem16(int16_t x, int16_t y)
{
    return x % y;
}
static inline int32_t srem32(int32_t x, int32_t y)
{
    return x % y;
}
static inline int64_t srem64(int64_t x, int64_t y)
{
    return x % y;
}
static inline int8_t squot_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int16_t squot_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int32_t squot_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int64_t squot_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int8_t srem_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int16_t srem_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int32_t srem_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int64_t srem_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int8_t smin8(int8_t x, int8_t y)
{
    return x < y ? x : y;
}
static inline int16_t smin16(int16_t x, int16_t y)
{
    return x < y ? x : y;
}
static inline int32_t smin32(int32_t x, int32_t y)
{
    return x < y ? x : y;
}
static inline int64_t smin64(int64_t x, int64_t y)
{
    return x < y ? x : y;
}
static inline uint8_t umin8(uint8_t x, uint8_t y)
{
    return x < y ? x : y;
}
static inline uint16_t umin16(uint16_t x, uint16_t y)
{
    return x < y ? x : y;
}
static inline uint32_t umin32(uint32_t x, uint32_t y)
{
    return x < y ? x : y;
}
static inline uint64_t umin64(uint64_t x, uint64_t y)
{
    return x < y ? x : y;
}
static inline int8_t smax8(int8_t x, int8_t y)
{
    return x < y ? y : x;
}
static inline int16_t smax16(int16_t x, int16_t y)
{
    return x < y ? y : x;
}
static inline int32_t smax32(int32_t x, int32_t y)
{
    return x < y ? y : x;
}
static inline int64_t smax64(int64_t x, int64_t y)
{
    return x < y ? y : x;
}
static inline uint8_t umax8(uint8_t x, uint8_t y)
{
    return x < y ? y : x;
}
static inline uint16_t umax16(uint16_t x, uint16_t y)
{
    return x < y ? y : x;
}
static inline uint32_t umax32(uint32_t x, uint32_t y)
{
    return x < y ? y : x;
}
static inline uint64_t umax64(uint64_t x, uint64_t y)
{
    return x < y ? y : x;
}
static inline uint8_t shl8(uint8_t x, uint8_t y)
{
    return x << y;
}
static inline uint16_t shl16(uint16_t x, uint16_t y)
{
    return x << y;
}
static inline uint32_t shl32(uint32_t x, uint32_t y)
{
    return x << y;
}
static inline uint64_t shl64(uint64_t x, uint64_t y)
{
    return x << y;
}
static inline uint8_t lshr8(uint8_t x, uint8_t y)
{
    return x >> y;
}
static inline uint16_t lshr16(uint16_t x, uint16_t y)
{
    return x >> y;
}
static inline uint32_t lshr32(uint32_t x, uint32_t y)
{
    return x >> y;
}
static inline uint64_t lshr64(uint64_t x, uint64_t y)
{
    return x >> y;
}
static inline int8_t ashr8(int8_t x, int8_t y)
{
    return x >> y;
}
static inline int16_t ashr16(int16_t x, int16_t y)
{
    return x >> y;
}
static inline int32_t ashr32(int32_t x, int32_t y)
{
    return x >> y;
}
static inline int64_t ashr64(int64_t x, int64_t y)
{
    return x >> y;
}
static inline uint8_t and8(uint8_t x, uint8_t y)
{
    return x & y;
}
static inline uint16_t and16(uint16_t x, uint16_t y)
{
    return x & y;
}
static inline uint32_t and32(uint32_t x, uint32_t y)
{
    return x & y;
}
static inline uint64_t and64(uint64_t x, uint64_t y)
{
    return x & y;
}
static inline uint8_t or8(uint8_t x, uint8_t y)
{
    return x | y;
}
static inline uint16_t or16(uint16_t x, uint16_t y)
{
    return x | y;
}
static inline uint32_t or32(uint32_t x, uint32_t y)
{
    return x | y;
}
static inline uint64_t or64(uint64_t x, uint64_t y)
{
    return x | y;
}
static inline uint8_t xor8(uint8_t x, uint8_t y)
{
    return x ^ y;
}
static inline uint16_t xor16(uint16_t x, uint16_t y)
{
    return x ^ y;
}
static inline uint32_t xor32(uint32_t x, uint32_t y)
{
    return x ^ y;
}
static inline uint64_t xor64(uint64_t x, uint64_t y)
{
    return x ^ y;
}
static inline bool ult8(uint8_t x, uint8_t y)
{
    return x < y;
}
static inline bool ult16(uint16_t x, uint16_t y)
{
    return x < y;
}
static inline bool ult32(uint32_t x, uint32_t y)
{
    return x < y;
}
static inline bool ult64(uint64_t x, uint64_t y)
{
    return x < y;
}
static inline bool ule8(uint8_t x, uint8_t y)
{
    return x <= y;
}
static inline bool ule16(uint16_t x, uint16_t y)
{
    return x <= y;
}
static inline bool ule32(uint32_t x, uint32_t y)
{
    return x <= y;
}
static inline bool ule64(uint64_t x, uint64_t y)
{
    return x <= y;
}
static inline bool slt8(int8_t x, int8_t y)
{
    return x < y;
}
static inline bool slt16(int16_t x, int16_t y)
{
    return x < y;
}
static inline bool slt32(int32_t x, int32_t y)
{
    return x < y;
}
static inline bool slt64(int64_t x, int64_t y)
{
    return x < y;
}
static inline bool sle8(int8_t x, int8_t y)
{
    return x <= y;
}
static inline bool sle16(int16_t x, int16_t y)
{
    return x <= y;
}
static inline bool sle32(int32_t x, int32_t y)
{
    return x <= y;
}
static inline bool sle64(int64_t x, int64_t y)
{
    return x <= y;
}
static inline int8_t pow8(int8_t x, int8_t y)
{
    int8_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int16_t pow16(int16_t x, int16_t y)
{
    int16_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int32_t pow32(int32_t x, int32_t y)
{
    int32_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int64_t pow64(int64_t x, int64_t y)
{
    int64_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline bool itob_i8_bool(int8_t x)
{
    return x;
}
static inline bool itob_i16_bool(int16_t x)
{
    return x;
}
static inline bool itob_i32_bool(int32_t x)
{
    return x;
}
static inline bool itob_i64_bool(int64_t x)
{
    return x;
}
static inline int8_t btoi_bool_i8(bool x)
{
    return x;
}
static inline int16_t btoi_bool_i16(bool x)
{
    return x;
}
static inline int32_t btoi_bool_i32(bool x)
{
    return x;
}
static inline int64_t btoi_bool_i64(bool x)
{
    return x;
}
#define sext_i8_i8(x) ((int8_t) (int8_t) x)
#define sext_i8_i16(x) ((int16_t) (int8_t) x)
#define sext_i8_i32(x) ((int32_t) (int8_t) x)
#define sext_i8_i64(x) ((int64_t) (int8_t) x)
#define sext_i16_i8(x) ((int8_t) (int16_t) x)
#define sext_i16_i16(x) ((int16_t) (int16_t) x)
#define sext_i16_i32(x) ((int32_t) (int16_t) x)
#define sext_i16_i64(x) ((int64_t) (int16_t) x)
#define sext_i32_i8(x) ((int8_t) (int32_t) x)
#define sext_i32_i16(x) ((int16_t) (int32_t) x)
#define sext_i32_i32(x) ((int32_t) (int32_t) x)
#define sext_i32_i64(x) ((int64_t) (int32_t) x)
#define sext_i64_i8(x) ((int8_t) (int64_t) x)
#define sext_i64_i16(x) ((int16_t) (int64_t) x)
#define sext_i64_i32(x) ((int32_t) (int64_t) x)
#define sext_i64_i64(x) ((int64_t) (int64_t) x)
#define zext_i8_i8(x) ((int8_t) (uint8_t) x)
#define zext_i8_i16(x) ((int16_t) (uint8_t) x)
#define zext_i8_i32(x) ((int32_t) (uint8_t) x)
#define zext_i8_i64(x) ((int64_t) (uint8_t) x)
#define zext_i16_i8(x) ((int8_t) (uint16_t) x)
#define zext_i16_i16(x) ((int16_t) (uint16_t) x)
#define zext_i16_i32(x) ((int32_t) (uint16_t) x)
#define zext_i16_i64(x) ((int64_t) (uint16_t) x)
#define zext_i32_i8(x) ((int8_t) (uint32_t) x)
#define zext_i32_i16(x) ((int16_t) (uint32_t) x)
#define zext_i32_i32(x) ((int32_t) (uint32_t) x)
#define zext_i32_i64(x) ((int64_t) (uint32_t) x)
#define zext_i64_i8(x) ((int8_t) (uint64_t) x)
#define zext_i64_i16(x) ((int16_t) (uint64_t) x)
#define zext_i64_i32(x) ((int32_t) (uint64_t) x)
#define zext_i64_i64(x) ((int64_t) (uint64_t) x)
#if defined(__OPENCL_VERSION__)
static int32_t futrts_popc8(int8_t x)
{
    return popcount(x);
}
static int32_t futrts_popc16(int16_t x)
{
    return popcount(x);
}
static int32_t futrts_popc32(int32_t x)
{
    return popcount(x);
}
static int32_t futrts_popc64(int64_t x)
{
    return popcount(x);
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_popc8(int8_t x)
{
    return __popc(zext_i8_i32(x));
}
static int32_t futrts_popc16(int16_t x)
{
    return __popc(zext_i16_i32(x));
}
static int32_t futrts_popc32(int32_t x)
{
    return __popc(x);
}
static int32_t futrts_popc64(int64_t x)
{
    return __popcll(x);
}
#else
static int32_t futrts_popc8(int8_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc16(int16_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc32(int32_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc64(int64_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
#endif
#if defined(__OPENCL_VERSION__)
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    return mul_hi(a, b);
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    return mul_hi(a, b);
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    return mul_hi(a, b);
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    return mul_hi(a, b);
}
#elif defined(__CUDA_ARCH__)
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    uint16_t aa = a;
    uint16_t bb = b;
    
    return aa * bb >> 8;
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    uint32_t aa = a;
    uint32_t bb = b;
    
    return aa * bb >> 16;
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    return mulhi(a, b);
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    return mul64hi(a, b);
}
#else
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    uint16_t aa = a;
    uint16_t bb = b;
    
    return aa * bb >> 8;
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    uint32_t aa = a;
    uint32_t bb = b;
    
    return aa * bb >> 16;
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    uint64_t aa = a;
    uint64_t bb = b;
    
    return aa * bb >> 32;
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    __uint128_t aa = a;
    __uint128_t bb = b;
    
    return aa * bb >> 64;
}
#endif
#if defined(__OPENCL_VERSION__)
static uint8_t futrts_mad_hi8(uint8_t a, uint8_t b, uint8_t c)
{
    return mad_hi(a, b, c);
}
static uint16_t futrts_mad_hi16(uint16_t a, uint16_t b, uint16_t c)
{
    return mad_hi(a, b, c);
}
static uint32_t futrts_mad_hi32(uint32_t a, uint32_t b, uint32_t c)
{
    return mad_hi(a, b, c);
}
static uint64_t futrts_mad_hi64(uint64_t a, uint64_t b, uint64_t c)
{
    return mad_hi(a, b, c);
}
#else
static uint8_t futrts_mad_hi8(uint8_t a, uint8_t b, uint8_t c)
{
    return futrts_mul_hi8(a, b) + c;
}
static uint16_t futrts_mad_hi16(uint16_t a, uint16_t b, uint16_t c)
{
    return futrts_mul_hi16(a, b) + c;
}
static uint32_t futrts_mad_hi32(uint32_t a, uint32_t b, uint32_t c)
{
    return futrts_mul_hi32(a, b) + c;
}
static uint64_t futrts_mad_hi64(uint64_t a, uint64_t b, uint64_t c)
{
    return futrts_mul_hi64(a, b) + c;
}
#endif
#if defined(__OPENCL_VERSION__)
static int32_t futrts_clzz8(int8_t x)
{
    return clz(x);
}
static int32_t futrts_clzz16(int16_t x)
{
    return clz(x);
}
static int32_t futrts_clzz32(int32_t x)
{
    return clz(x);
}
static int32_t futrts_clzz64(int64_t x)
{
    return clz(x);
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_clzz8(int8_t x)
{
    return __clz(zext_i8_i32(x)) - 24;
}
static int32_t futrts_clzz16(int16_t x)
{
    return __clz(zext_i16_i32(x)) - 16;
}
static int32_t futrts_clzz32(int32_t x)
{
    return __clz(x);
}
static int32_t futrts_clzz64(int64_t x)
{
    return __clzll(x);
}
#else
static int32_t futrts_clzz8(int8_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz16(int16_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz32(int32_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz64(int64_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
#endif
#if defined(__OPENCL_VERSION__)
static int32_t futrts_ctzz8(int8_t x)
{
    int i = 0;
    
    for (; i < 8 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz16(int16_t x)
{
    int i = 0;
    
    for (; i < 16 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz32(int32_t x)
{
    int i = 0;
    
    for (; i < 32 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz64(int64_t x)
{
    int i = 0;
    
    for (; i < 64 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_ctzz8(int8_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 8 : y - 1;
}
static int32_t futrts_ctzz16(int16_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 16 : y - 1;
}
static int32_t futrts_ctzz32(int32_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 32 : y - 1;
}
static int32_t futrts_ctzz64(int64_t x)
{
    int y = __ffsll(x);
    
    return y == 0 ? 64 : y - 1;
}
#else
static int32_t futrts_ctzz8(int8_t x)
{
    return x == 0 ? 8 : __builtin_ctz((uint32_t) x);
}
static int32_t futrts_ctzz16(int16_t x)
{
    return x == 0 ? 16 : __builtin_ctz((uint32_t) x);
}
static int32_t futrts_ctzz32(int32_t x)
{
    return x == 0 ? 32 : __builtin_ctz(x);
}
static int32_t futrts_ctzz64(int64_t x)
{
    return x == 0 ? 64 : __builtin_ctzl(x);
}
#endif
static inline float fdiv32(float x, float y)
{
    return x / y;
}
static inline float fadd32(float x, float y)
{
    return x + y;
}
static inline float fsub32(float x, float y)
{
    return x - y;
}
static inline float fmul32(float x, float y)
{
    return x * y;
}
static inline float fmin32(float x, float y)
{
    return fmin(x, y);
}
static inline float fmax32(float x, float y)
{
    return fmax(x, y);
}
static inline float fpow32(float x, float y)
{
    return pow(x, y);
}
static inline bool cmplt32(float x, float y)
{
    return x < y;
}
static inline bool cmple32(float x, float y)
{
    return x <= y;
}
static inline float sitofp_i8_f32(int8_t x)
{
    return (float) x;
}
static inline float sitofp_i16_f32(int16_t x)
{
    return (float) x;
}
static inline float sitofp_i32_f32(int32_t x)
{
    return (float) x;
}
static inline float sitofp_i64_f32(int64_t x)
{
    return (float) x;
}
static inline float uitofp_i8_f32(uint8_t x)
{
    return (float) x;
}
static inline float uitofp_i16_f32(uint16_t x)
{
    return (float) x;
}
static inline float uitofp_i32_f32(uint32_t x)
{
    return (float) x;
}
static inline float uitofp_i64_f32(uint64_t x)
{
    return (float) x;
}
static inline int8_t fptosi_f32_i8(float x)
{
    return (int8_t) x;
}
static inline int16_t fptosi_f32_i16(float x)
{
    return (int16_t) x;
}
static inline int32_t fptosi_f32_i32(float x)
{
    return (int32_t) x;
}
static inline int64_t fptosi_f32_i64(float x)
{
    return (int64_t) x;
}
static inline uint8_t fptoui_f32_i8(float x)
{
    return (uint8_t) x;
}
static inline uint16_t fptoui_f32_i16(float x)
{
    return (uint16_t) x;
}
static inline uint32_t fptoui_f32_i32(float x)
{
    return (uint32_t) x;
}
static inline uint64_t fptoui_f32_i64(float x)
{
    return (uint64_t) x;
}
static inline float futrts_log32(float x)
{
    return log(x);
}
static inline float futrts_log2_32(float x)
{
    return log2(x);
}
static inline float futrts_log10_32(float x)
{
    return log10(x);
}
static inline float futrts_sqrt32(float x)
{
    return sqrt(x);
}
static inline float futrts_exp32(float x)
{
    return exp(x);
}
static inline float futrts_cos32(float x)
{
    return cos(x);
}
static inline float futrts_sin32(float x)
{
    return sin(x);
}
static inline float futrts_tan32(float x)
{
    return tan(x);
}
static inline float futrts_acos32(float x)
{
    return acos(x);
}
static inline float futrts_asin32(float x)
{
    return asin(x);
}
static inline float futrts_atan32(float x)
{
    return atan(x);
}
static inline float futrts_cosh32(float x)
{
    return cosh(x);
}
static inline float futrts_sinh32(float x)
{
    return sinh(x);
}
static inline float futrts_tanh32(float x)
{
    return tanh(x);
}
static inline float futrts_acosh32(float x)
{
    return acosh(x);
}
static inline float futrts_asinh32(float x)
{
    return asinh(x);
}
static inline float futrts_atanh32(float x)
{
    return atanh(x);
}
static inline float futrts_atan2_32(float x, float y)
{
    return atan2(x, y);
}
static inline float futrts_gamma32(float x)
{
    return tgamma(x);
}
static inline float futrts_lgamma32(float x)
{
    return lgamma(x);
}
static inline bool futrts_isnan32(float x)
{
    return isnan(x);
}
static inline bool futrts_isinf32(float x)
{
    return isinf(x);
}
static inline int32_t futrts_to_bits32(float x)
{
    union {
        float f;
        int32_t t;
    } p;
    
    p.f = x;
    return p.t;
}
static inline float futrts_from_bits32(int32_t x)
{
    union {
        int32_t f;
        float t;
    } p;
    
    p.f = x;
    return p.t;
}
#ifdef __OPENCL_VERSION__
static inline float fmod32(float x, float y)
{
    return fmod(x, y);
}
static inline float futrts_round32(float x)
{
    return rint(x);
}
static inline float futrts_floor32(float x)
{
    return floor(x);
}
static inline float futrts_ceil32(float x)
{
    return ceil(x);
}
static inline float futrts_lerp32(float v0, float v1, float t)
{
    return mix(v0, v1, t);
}
static inline float futrts_mad32(float a, float b, float c)
{
    return mad(a, b, c);
}
static inline float futrts_fma32(float a, float b, float c)
{
    return fma(a, b, c);
}
#else
static inline float fmod32(float x, float y)
{
    return fmodf(x, y);
}
static inline float futrts_round32(float x)
{
    return rintf(x);
}
static inline float futrts_floor32(float x)
{
    return floorf(x);
}
static inline float futrts_ceil32(float x)
{
    return ceilf(x);
}
static inline float futrts_lerp32(float v0, float v1, float t)
{
    return v0 + (v1 - v0) * t;
}
static inline float futrts_mad32(float a, float b, float c)
{
    return a * b + c;
}
static inline float futrts_fma32(float a, float b, float c)
{
    return fmaf(a, b, c);
}
#endif
// Start of atomics.h

inline int32_t atomic_add_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((int32_t*)p, x);
#else
  return atomic_add(p, x);
#endif
}

inline int32_t atomic_add_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((int32_t*)p, x);
#else
  return atomic_add(p, x);
#endif
}

inline float atomic_fadd_f32_global(volatile __global float *p, float x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((float*)p, x);
#else
  union { int32_t i; float f; } old;
  union { int32_t i; float f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg((volatile __global int32_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline float atomic_fadd_f32_local(volatile __local float *p, float x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((float*)p, x);
#else
  union { int32_t i; float f; } old;
  union { int32_t i; float f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg((volatile __local int32_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline int32_t atomic_smax_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline int32_t atomic_smax_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline int32_t atomic_smin_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline int32_t atomic_smin_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline uint32_t atomic_umax_i32_global(volatile __global uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline uint32_t atomic_umax_i32_local(volatile __local uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline uint32_t atomic_umin_i32_global(volatile __global uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline uint32_t atomic_umin_i32_local(volatile __local uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline int32_t atomic_and_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int32_t*)p, x);
#else
  return atomic_and(p, x);
#endif
}

inline int32_t atomic_and_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int32_t*)p, x);
#else
  return atomic_and(p, x);
#endif
}

inline int32_t atomic_or_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int32_t*)p, x);
#else
  return atomic_or(p, x);
#endif
}

inline int32_t atomic_or_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int32_t*)p, x);
#else
  return atomic_or(p, x);
#endif
}

inline int32_t atomic_xor_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_xor_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_xchg_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_xchg_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_cmpxchg_i32_global(volatile __global int32_t *p,
                                         int32_t cmp, int32_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((int32_t*)p, cmp, val);
#else
  return atomic_cmpxchg(p, cmp, val);
#endif
}

inline int32_t atomic_cmpxchg_i32_local(volatile __local int32_t *p,
                                         int32_t cmp, int32_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((int32_t*)p, cmp, val);
#else
  return atomic_cmpxchg(p, cmp, val);
#endif
}

// End of atomics.h




__kernel void builtinzhreplicate_f32zireplicate_40450(__global
                                                      unsigned char *mem_40446,
                                                      int32_t num_elems_40447,
                                                      float val_40448)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t replicate_gtid_40450;
    int32_t replicate_ltid_40451;
    int32_t replicate_gid_40452;
    
    replicate_gtid_40450 = get_global_id(0);
    replicate_ltid_40451 = get_local_id(0);
    replicate_gid_40452 = get_group_id(0);
    if (slt64(replicate_gtid_40450, num_elems_40447)) {
        ((__global float *) mem_40446)[sext_i32_i64(replicate_gtid_40450)] =
            val_40448;
    }
    
  error_0:
    return;
}
__kernel void builtinzhreplicate_i32zireplicate_40459(__global
                                                      unsigned char *mem_40455,
                                                      int32_t num_elems_40456,
                                                      int32_t val_40457)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t replicate_gtid_40459;
    int32_t replicate_ltid_40460;
    int32_t replicate_gid_40461;
    
    replicate_gtid_40459 = get_global_id(0);
    replicate_ltid_40460 = get_local_id(0);
    replicate_gid_40461 = get_group_id(0);
    if (slt64(replicate_gtid_40459, num_elems_40456)) {
        ((__global int32_t *) mem_40455)[sext_i32_i64(replicate_gtid_40459)] =
            val_40457;
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32(__local volatile
                                    int64_t *block_9_backing_aligned_0,
                                    int32_t destoffset_1, int32_t srcoffset_3,
                                    int32_t num_arrays_4, int32_t x_elems_5,
                                    int32_t y_elems_6, int32_t mulx_7,
                                    int32_t muly_8, __global
                                    unsigned char *destmem_0, __global
                                    unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_global_id_0_37;
    int32_t y_index_32 = get_group_id_1_41 * 32 + get_local_id_1_39;
    
    if (slt32(x_index_31, x_elems_5)) {
        for (int32_t j_43 = 0; j_43 < 4; j_43++) {
            int32_t index_in_35 = (y_index_32 + j_43 * 8) * x_elems_5 +
                    x_index_31;
            
            if (slt32(y_index_32 + j_43 * 8, y_elems_6)) {
                ((__local float *) block_9)[sext_i32_i64((get_local_id_1_39 +
                                                          j_43 * 8) * 33 +
                                            get_local_id_0_38)] = ((__global
                                                                    float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                                       index_in_35)];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 32 + get_local_id_0_38;
    y_index_32 = get_group_id_0_40 * 32 + get_local_id_1_39;
    if (slt32(x_index_31, y_elems_6)) {
        for (int32_t j_43 = 0; j_43 < 4; j_43++) {
            int32_t index_out_36 = (y_index_32 + j_43 * 8) * y_elems_6 +
                    x_index_31;
            
            if (slt32(y_index_32 + j_43 * 8, x_elems_5)) {
                ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                               index_out_36)] = ((__local
                                                                  float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                                    33 +
                                                                                    get_local_id_1_39 +
                                                                                    j_43 *
                                                                                    8)];
            }
        }
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_low_height(__local volatile
                                               int64_t *block_9_backing_aligned_0,
                                               int32_t destoffset_1,
                                               int32_t srcoffset_3,
                                               int32_t num_arrays_4,
                                               int32_t x_elems_5,
                                               int32_t y_elems_6,
                                               int32_t mulx_7, int32_t muly_8,
                                               __global
                                               unsigned char *destmem_0,
                                               __global unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_group_id_0_40 * 16 * mulx_7 + get_local_id_0_38 +
            srem32(get_local_id_1_39, mulx_7) * 16;
    int32_t y_index_32 = get_group_id_1_41 * 16 + squot32(get_local_id_1_39,
                                                          mulx_7);
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    
    if (slt32(x_index_31, x_elems_5) && slt32(y_index_32, y_elems_6)) {
        ((__local float *) block_9)[sext_i32_i64(get_local_id_1_39 * 17 +
                                    get_local_id_0_38)] = ((__global
                                                            float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                               index_in_35)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 16 + squot32(get_local_id_0_38, mulx_7);
    y_index_32 = get_group_id_0_40 * 16 * mulx_7 + get_local_id_1_39 +
        srem32(get_local_id_0_38, mulx_7) * 16;
    
    int32_t index_out_36 = y_index_32 * y_elems_6 + x_index_31;
    
    if (slt32(x_index_31, y_elems_6) && slt32(y_index_32, x_elems_5)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__local
                                                          float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                            17 +
                                                                            get_local_id_1_39)];
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_low_width(__local volatile
                                              int64_t *block_9_backing_aligned_0,
                                              int32_t destoffset_1,
                                              int32_t srcoffset_3,
                                              int32_t num_arrays_4,
                                              int32_t x_elems_5,
                                              int32_t y_elems_6, int32_t mulx_7,
                                              int32_t muly_8, __global
                                              unsigned char *destmem_0, __global
                                              unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_group_id_0_40 * 16 + squot32(get_local_id_0_38,
                                                          muly_8);
    int32_t y_index_32 = get_group_id_1_41 * 16 * muly_8 + get_local_id_1_39 +
            srem32(get_local_id_0_38, muly_8) * 16;
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    
    if (slt32(x_index_31, x_elems_5) && slt32(y_index_32, y_elems_6)) {
        ((__local float *) block_9)[sext_i32_i64(get_local_id_1_39 * 17 +
                                    get_local_id_0_38)] = ((__global
                                                            float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                               index_in_35)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 16 * muly_8 + get_local_id_0_38 +
        srem32(get_local_id_1_39, muly_8) * 16;
    y_index_32 = get_group_id_0_40 * 16 + squot32(get_local_id_1_39, muly_8);
    
    int32_t index_out_36 = y_index_32 * y_elems_6 + x_index_31;
    
    if (slt32(x_index_31, y_elems_6) && slt32(y_index_32, x_elems_5)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__local
                                                          float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                            17 +
                                                                            get_local_id_1_39)];
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_small(__local volatile
                                          int64_t *block_9_backing_aligned_0,
                                          int32_t destoffset_1,
                                          int32_t srcoffset_3,
                                          int32_t num_arrays_4,
                                          int32_t x_elems_5, int32_t y_elems_6,
                                          int32_t mulx_7, int32_t muly_8,
                                          __global unsigned char *destmem_0,
                                          __global unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = squot32(get_global_id_0_37, y_elems_6 *
                                          x_elems_5) * (y_elems_6 * x_elems_5);
    int32_t x_index_31 = squot32(srem32(get_global_id_0_37, y_elems_6 *
                                        x_elems_5), y_elems_6);
    int32_t y_index_32 = srem32(get_global_id_0_37, y_elems_6);
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    int32_t index_out_36 = x_index_31 * y_elems_6 + y_index_32;
    
    if (slt32(get_global_id_0_37, x_elems_5 * y_elems_6 * num_arrays_4)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__global
                                                          float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                             index_in_35)];
    }
    
  error_0:
    return;
}
__kernel void mainzicopy_40059(int64_t m_27809, int64_t i32_res_27961,
                               int64_t ctx_param_ext_38881,
                               int64_t ctx_param_ext_38882,
                               int64_t ctx_param_ext_38884, __global
                               unsigned char *mem_param_38886, __global
                               unsigned char *mem_38891)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_40059;
    int32_t copy_ltid_40060;
    int32_t copy_gid_40061;
    
    copy_gtid_40059 = get_global_id(0);
    copy_ltid_40060 = get_local_id(0);
    copy_gid_40061 = get_group_id(0);
    if (slt64(sext_i32_i64(copy_gtid_40059), m_27809 * i32_res_27961)) {
        ((__global float *) mem_38891)[(sext_i32_i64(copy_gtid_40059) -
                                        squot64(sext_i32_i64(copy_gtid_40059),
                                                i32_res_27961) *
                                        i32_res_27961) * m_27809 +
                                       squot64(sext_i32_i64(copy_gtid_40059),
                                               i32_res_27961)] = ((__global
                                                                   float *) mem_param_38886)[ctx_param_ext_38881 +
                                                                                             (squot64(sext_i32_i64(copy_gtid_40059),
                                                                                                      i32_res_27961) *
                                                                                              ctx_param_ext_38882 +
                                                                                              (sext_i32_i64(copy_gtid_40059) -
                                                                                               squot64(sext_i32_i64(copy_gtid_40059),
                                                                                                       i32_res_27961) *
                                                                                               i32_res_27961) *
                                                                                              ctx_param_ext_38884)];
    }
    
  error_0:
    return;
}
__kernel void mainziscan_stage1_34868(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_40489_backing_aligned_0,
                                      int64_t N_27808, int64_t m_27809,
                                      int64_t N_27810, __global
                                      unsigned char *images_mem_38682, __global
                                      unsigned char *defunc_3_map_res_mem_39440,
                                      __global unsigned char *mem_39469,
                                      __global unsigned char *mem_39472,
                                      int32_t num_threads_40483)
{
    #define segscan_group_sizze_34885 (mainzisegscan_group_sizze_34862)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_40489_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_40489_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40484;
    int32_t local_tid_40485;
    int64_t group_sizze_40488;
    int32_t wave_sizze_40487;
    int32_t group_tid_40486;
    
    global_tid_40484 = get_global_id(0);
    local_tid_40485 = get_local_id(0);
    group_sizze_40488 = get_local_size(0);
    wave_sizze_40487 = LOCKSTEP_WIDTH;
    group_tid_40486 = get_group_id(0);
    
    int32_t phys_tid_34868;
    
    phys_tid_34868 = global_tid_40484;
    
    __local char *scan_arr_mem_40489;
    
    scan_arr_mem_40489 = (__local char *) scan_arr_mem_40489_backing_0;
    
    int64_t x_34890;
    int64_t x_34891;
    
    x_34890 = 0;
    for (int64_t j_40491 = 0; j_40491 < sdiv_up64(m_27809 * N_27808,
                                                  sext_i32_i64(num_threads_40483));
         j_40491++) {
        int64_t chunk_offset_40492 = segscan_group_sizze_34885 * j_40491 +
                sext_i32_i64(group_tid_40486) * (segscan_group_sizze_34885 *
                                                 sdiv_up64(m_27809 * N_27808,
                                                           sext_i32_i64(num_threads_40483)));
        int64_t flat_idx_40493 = chunk_offset_40492 +
                sext_i32_i64(local_tid_40485);
        int64_t gtid_34859 = squot64(flat_idx_40493, N_27808);
        int64_t gtid_34867 = flat_idx_40493 - squot64(flat_idx_40493, N_27808) *
                N_27808;
        
        // threads in bounds read input
        {
            if (slt64(gtid_34859, m_27809) && slt64(gtid_34867, N_27808)) {
                float x_34895 = ((__global
                                  float *) images_mem_38682)[gtid_34859 *
                                                             N_27810 +
                                                             gtid_34867];
                bool isnan_res_34897;
                
                isnan_res_34897 = futrts_isnan32(x_34895);
                
                bool cond_34898 = !isnan_res_34897;
                float defunc_0_f_res_34899;
                
                if (cond_34898) {
                    float x_34896 = ((__global
                                      float *) defunc_3_map_res_mem_39440)[gtid_34859 *
                                                                           N_27808 +
                                                                           gtid_34867];
                    float defunc_0_f_res_t_res_34900 = x_34895 - x_34896;
                    
                    defunc_0_f_res_34899 = defunc_0_f_res_t_res_34900;
                } else {
                    defunc_0_f_res_34899 = NAN;
                }
                
                bool isnan_res_34901;
                
                isnan_res_34901 = futrts_isnan32(defunc_0_f_res_34899);
                
                bool defunc_0_p_res_34902 = !isnan_res_34901;
                int64_t defunc_0_f_res_34903 =
                        btoi_bool_i64(defunc_0_p_res_34902);
                
                // write to-scan values to parameters
                {
                    x_34891 = defunc_0_f_res_34903;
                }
                // write mapped values results to global memory
                {
                    ((__global float *) mem_39472)[gtid_34859 * N_27808 +
                                                   gtid_34867] =
                        defunc_0_f_res_34899;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_34859, m_27809) && slt64(gtid_34867,
                                                          N_27808))) {
                    x_34891 = 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_34892 = add64(x_34890, x_34891);
                
                ((__local
                  int64_t *) scan_arr_mem_40489)[sext_i32_i64(local_tid_40485)] =
                    defunc_1_op_res_34892;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_40494;
            int64_t x_40495;
            int64_t x_40497;
            int64_t x_40498;
            bool ltid_in_bounds_40500;
            
            ltid_in_bounds_40500 = slt64(sext_i32_i64(local_tid_40485),
                                         segscan_group_sizze_34885);
            
            int32_t skip_threads_40501;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_40500) {
                    x_40495 = ((volatile __local
                                int64_t *) scan_arr_mem_40489)[sext_i32_i64(local_tid_40485)];
                    if ((local_tid_40485 - squot32(local_tid_40485, 32) * 32) ==
                        0) {
                        x_40494 = x_40495;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_40501 = 1;
                while (slt32(skip_threads_40501, 32)) {
                    if (sle32(skip_threads_40501, local_tid_40485 -
                              squot32(local_tid_40485, 32) * 32) &&
                        ltid_in_bounds_40500) {
                        // read operands
                        {
                            x_40494 = ((volatile __local
                                        int64_t *) scan_arr_mem_40489)[sext_i32_i64(local_tid_40485) -
                                                                       sext_i32_i64(skip_threads_40501)];
                        }
                        // perform operation
                        {
                            bool inactive_40502 =
                                 slt64(srem64(sext_i32_i64(local_tid_40485) +
                                              chunk_offset_40492, N_27808),
                                       sext_i32_i64(local_tid_40485) +
                                       chunk_offset_40492 -
                                       (sext_i32_i64(local_tid_40485 -
                                        skip_threads_40501) +
                                        chunk_offset_40492));
                            
                            if (inactive_40502) {
                                x_40494 = x_40495;
                            }
                            if (!inactive_40502) {
                                int64_t defunc_1_op_res_40496 = add64(x_40494,
                                                                      x_40495);
                                
                                x_40494 = defunc_1_op_res_40496;
                            }
                        }
                    }
                    if (sle32(wave_sizze_40487, skip_threads_40501)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_40501, local_tid_40485 -
                              squot32(local_tid_40485, 32) * 32) &&
                        ltid_in_bounds_40500) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_40489)[sext_i32_i64(local_tid_40485)] =
                                x_40494;
                            x_40495 = x_40494;
                        }
                    }
                    if (sle32(wave_sizze_40487, skip_threads_40501)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_40501 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_40485 - squot32(local_tid_40485, 32) * 32) ==
                    31 && ltid_in_bounds_40500) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_40489)[sext_i32_i64(squot32(local_tid_40485,
                                                                          32))] =
                        x_40494;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_40503;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_40485, 32) == 0 &&
                        ltid_in_bounds_40500) {
                        x_40498 = ((volatile __local
                                    int64_t *) scan_arr_mem_40489)[sext_i32_i64(local_tid_40485)];
                        if ((local_tid_40485 - squot32(local_tid_40485, 32) *
                             32) == 0) {
                            x_40497 = x_40498;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_40503 = 1;
                    while (slt32(skip_threads_40503, 32)) {
                        if (sle32(skip_threads_40503, local_tid_40485 -
                                  squot32(local_tid_40485, 32) * 32) &&
                            (squot32(local_tid_40485, 32) == 0 &&
                             ltid_in_bounds_40500)) {
                            // read operands
                            {
                                x_40497 = ((volatile __local
                                            int64_t *) scan_arr_mem_40489)[sext_i32_i64(local_tid_40485) -
                                                                           sext_i32_i64(skip_threads_40503)];
                            }
                            // perform operation
                            {
                                bool inactive_40504 =
                                     slt64(srem64(sext_i32_i64(local_tid_40485 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_40492, N_27808),
                                           sext_i32_i64(local_tid_40485 * 32 +
                                           32 - 1) + chunk_offset_40492 -
                                           (sext_i32_i64((local_tid_40485 -
                                                          skip_threads_40503) *
                                            32 + 32 - 1) + chunk_offset_40492));
                                
                                if (inactive_40504) {
                                    x_40497 = x_40498;
                                }
                                if (!inactive_40504) {
                                    int64_t defunc_1_op_res_40499 =
                                            add64(x_40497, x_40498);
                                    
                                    x_40497 = defunc_1_op_res_40499;
                                }
                            }
                        }
                        if (sle32(wave_sizze_40487, skip_threads_40503)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_40503, local_tid_40485 -
                                  squot32(local_tid_40485, 32) * 32) &&
                            (squot32(local_tid_40485, 32) == 0 &&
                             ltid_in_bounds_40500)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_40489)[sext_i32_i64(local_tid_40485)] =
                                    x_40497;
                                x_40498 = x_40497;
                            }
                        }
                        if (sle32(wave_sizze_40487, skip_threads_40503)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_40503 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_40485, 32) == 0 ||
                      !ltid_in_bounds_40500)) {
                    // read operands
                    {
                        x_40495 = x_40494;
                        x_40494 = ((__local
                                    int64_t *) scan_arr_mem_40489)[sext_i32_i64(squot32(local_tid_40485,
                                                                                        32)) -
                                                                   1];
                    }
                    // perform operation
                    {
                        bool inactive_40505 =
                             slt64(srem64(sext_i32_i64(local_tid_40485) +
                                          chunk_offset_40492, N_27808),
                                   sext_i32_i64(local_tid_40485) +
                                   chunk_offset_40492 -
                                   (sext_i32_i64(squot32(local_tid_40485, 32) *
                                    32 - 1) + chunk_offset_40492));
                        
                        if (inactive_40505) {
                            x_40494 = x_40495;
                        }
                        if (!inactive_40505) {
                            int64_t defunc_1_op_res_40496 = add64(x_40494,
                                                                  x_40495);
                            
                            x_40494 = defunc_1_op_res_40496;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_40489)[sext_i32_i64(local_tid_40485)] =
                            x_40494;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_40485, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_40489)[sext_i32_i64(local_tid_40485)] =
                        x_40495;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_34859, m_27809) && slt64(gtid_34867, N_27808)) {
                    ((__global int64_t *) mem_39469)[gtid_34859 * N_27808 +
                                                     gtid_34867] = ((__local
                                                                     int64_t *) scan_arr_mem_40489)[sext_i32_i64(local_tid_40485)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_40506 = slt64(srem64(chunk_offset_40492 +
                                                          segscan_group_sizze_34885,
                                                          N_27808),
                                                   chunk_offset_40492 +
                                                   segscan_group_sizze_34885 -
                                                   (chunk_offset_40492 +
                                                    segscan_group_sizze_34885 -
                                                    1));
                bool should_load_carry_40507 = local_tid_40485 == 0 &&
                     !crosses_segment_40506;
                
                if (should_load_carry_40507) {
                    x_34890 = ((__local
                                int64_t *) scan_arr_mem_40489)[segscan_group_sizze_34885 -
                                                               1];
                }
                if (!should_load_carry_40507) {
                    x_34890 = 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_34885
}
__kernel void mainziscan_stage1_36347(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_40860_backing_aligned_0,
                                      int64_t N_27808, int64_t m_27809,
                                      int64_t iota32_arg_28208, __global
                                      unsigned char *defunc_4_map_res_mem_39478,
                                      __global
                                      unsigned char *defunc_3_map_res_mem_39541,
                                      __global
                                      unsigned char *defunc_3_map_res_mem_39542,
                                      __global
                                      unsigned char *defunc_0_f_res_mem_39576,
                                      __global unsigned char *mem_39624,
                                      __global unsigned char *mem_39628,
                                      int32_t num_threads_40854)
{
    #define segscan_group_sizze_36425 (mainzisegscan_group_sizze_36341)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_40860_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_40860_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40855;
    int32_t local_tid_40856;
    int64_t group_sizze_40859;
    int32_t wave_sizze_40858;
    int32_t group_tid_40857;
    
    global_tid_40855 = get_global_id(0);
    local_tid_40856 = get_local_id(0);
    group_sizze_40859 = get_local_size(0);
    wave_sizze_40858 = LOCKSTEP_WIDTH;
    group_tid_40857 = get_group_id(0);
    
    int32_t phys_tid_36347;
    
    phys_tid_36347 = global_tid_40855;
    
    __local char *scan_arr_mem_40860;
    
    scan_arr_mem_40860 = (__local char *) scan_arr_mem_40860_backing_0;
    
    float x_36429;
    float x_36430;
    
    x_36429 = 0.0F;
    for (int64_t j_40862 = 0; j_40862 < sdiv_up64(m_27809 * iota32_arg_28208,
                                                  sext_i32_i64(num_threads_40854));
         j_40862++) {
        int64_t chunk_offset_40863 = segscan_group_sizze_36425 * j_40862 +
                sext_i32_i64(group_tid_40857) * (segscan_group_sizze_36425 *
                                                 sdiv_up64(m_27809 *
                                                           iota32_arg_28208,
                                                           sext_i32_i64(num_threads_40854)));
        int64_t flat_idx_40864 = chunk_offset_40863 +
                sext_i32_i64(local_tid_40856);
        int64_t gtid_36338 = squot64(flat_idx_40864, iota32_arg_28208);
        int64_t gtid_36346 = flat_idx_40864 - squot64(flat_idx_40864,
                                                      iota32_arg_28208) *
                iota32_arg_28208;
        
        // threads in bounds read input
        {
            if (slt64(gtid_36338, m_27809) && slt64(gtid_36346,
                                                    iota32_arg_28208)) {
                int32_t y_36436 = ((__global int32_t *) mem_39624)[gtid_36338];
                int32_t index_primexp_36740 = sext_i64_i32(gtid_36346);
                bool cond_36439 = sle32(y_36436, index_primexp_36740);
                float defunc_0_f_res_36440;
                
                if (cond_36439) {
                    defunc_0_f_res_36440 = 0.0F;
                } else {
                    int32_t x_36432 = ((__global
                                        int32_t *) defunc_3_map_res_mem_39542)[gtid_36338];
                    int32_t x_36433 = ((__global
                                        int32_t *) defunc_3_map_res_mem_39541)[gtid_36338];
                    float x_36434 = ((__global
                                      float *) defunc_0_f_res_mem_39576)[gtid_36338];
                    bool cond_36441 = index_primexp_36740 == 0;
                    float defunc_0_f_res_f_res_36442;
                    
                    if (cond_36441) {
                        defunc_0_f_res_f_res_36442 = x_36434;
                    } else {
                        int32_t i_36443 = add32(x_36432, index_primexp_36740);
                        int64_t i_36444 = sext_i32_i64(i_36443);
                        float x_36445 = ((__global
                                          float *) defunc_4_map_res_mem_39478)[gtid_36338 *
                                                                               N_27808 +
                                                                               i_36444];
                        int32_t x_36446 = sub32(x_36432, x_36433);
                        int32_t i_36447 = add32(x_36446, index_primexp_36740);
                        int64_t i_36448 = sext_i32_i64(i_36447);
                        float y_36449 = ((__global
                                          float *) defunc_4_map_res_mem_39478)[gtid_36338 *
                                                                               N_27808 +
                                                                               i_36448];
                        float defunc_0_f_res_f_res_f_res_36450 = x_36445 -
                              y_36449;
                        
                        defunc_0_f_res_f_res_36442 =
                            defunc_0_f_res_f_res_f_res_36450;
                    }
                    defunc_0_f_res_36440 = defunc_0_f_res_f_res_36442;
                }
                // write to-scan values to parameters
                {
                    x_36430 = defunc_0_f_res_36440;
                }
                // write mapped values results to global memory
                { }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_36338, m_27809) && slt64(gtid_36346,
                                                          iota32_arg_28208))) {
                    x_36430 = 0.0F;
                }
            }
            // combine with carry and write to local memory
            {
                float defunc_1_op_res_36431 = x_36429 + x_36430;
                
                ((__local
                  float *) scan_arr_mem_40860)[sext_i32_i64(local_tid_40856)] =
                    defunc_1_op_res_36431;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float x_40865;
            float x_40866;
            float x_40868;
            float x_40869;
            bool ltid_in_bounds_40871;
            
            ltid_in_bounds_40871 = slt64(sext_i32_i64(local_tid_40856),
                                         segscan_group_sizze_36425);
            
            int32_t skip_threads_40872;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_40871) {
                    x_40866 = ((volatile __local
                                float *) scan_arr_mem_40860)[sext_i32_i64(local_tid_40856)];
                    if ((local_tid_40856 - squot32(local_tid_40856, 32) * 32) ==
                        0) {
                        x_40865 = x_40866;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_40872 = 1;
                while (slt32(skip_threads_40872, 32)) {
                    if (sle32(skip_threads_40872, local_tid_40856 -
                              squot32(local_tid_40856, 32) * 32) &&
                        ltid_in_bounds_40871) {
                        // read operands
                        {
                            x_40865 = ((volatile __local
                                        float *) scan_arr_mem_40860)[sext_i32_i64(local_tid_40856) -
                                                                     sext_i32_i64(skip_threads_40872)];
                        }
                        // perform operation
                        {
                            bool inactive_40873 =
                                 slt64(srem64(sext_i32_i64(local_tid_40856) +
                                              chunk_offset_40863,
                                              iota32_arg_28208),
                                       sext_i32_i64(local_tid_40856) +
                                       chunk_offset_40863 -
                                       (sext_i32_i64(local_tid_40856 -
                                        skip_threads_40872) +
                                        chunk_offset_40863));
                            
                            if (inactive_40873) {
                                x_40865 = x_40866;
                            }
                            if (!inactive_40873) {
                                float defunc_1_op_res_40867 = x_40865 + x_40866;
                                
                                x_40865 = defunc_1_op_res_40867;
                            }
                        }
                    }
                    if (sle32(wave_sizze_40858, skip_threads_40872)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_40872, local_tid_40856 -
                              squot32(local_tid_40856, 32) * 32) &&
                        ltid_in_bounds_40871) {
                        // write result
                        {
                            ((volatile __local
                              float *) scan_arr_mem_40860)[sext_i32_i64(local_tid_40856)] =
                                x_40865;
                            x_40866 = x_40865;
                        }
                    }
                    if (sle32(wave_sizze_40858, skip_threads_40872)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_40872 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_40856 - squot32(local_tid_40856, 32) * 32) ==
                    31 && ltid_in_bounds_40871) {
                    ((volatile __local
                      float *) scan_arr_mem_40860)[sext_i32_i64(squot32(local_tid_40856,
                                                                        32))] =
                        x_40865;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_40874;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_40856, 32) == 0 &&
                        ltid_in_bounds_40871) {
                        x_40869 = ((volatile __local
                                    float *) scan_arr_mem_40860)[sext_i32_i64(local_tid_40856)];
                        if ((local_tid_40856 - squot32(local_tid_40856, 32) *
                             32) == 0) {
                            x_40868 = x_40869;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_40874 = 1;
                    while (slt32(skip_threads_40874, 32)) {
                        if (sle32(skip_threads_40874, local_tid_40856 -
                                  squot32(local_tid_40856, 32) * 32) &&
                            (squot32(local_tid_40856, 32) == 0 &&
                             ltid_in_bounds_40871)) {
                            // read operands
                            {
                                x_40868 = ((volatile __local
                                            float *) scan_arr_mem_40860)[sext_i32_i64(local_tid_40856) -
                                                                         sext_i32_i64(skip_threads_40874)];
                            }
                            // perform operation
                            {
                                bool inactive_40875 =
                                     slt64(srem64(sext_i32_i64(local_tid_40856 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_40863,
                                                  iota32_arg_28208),
                                           sext_i32_i64(local_tid_40856 * 32 +
                                           32 - 1) + chunk_offset_40863 -
                                           (sext_i32_i64((local_tid_40856 -
                                                          skip_threads_40874) *
                                            32 + 32 - 1) + chunk_offset_40863));
                                
                                if (inactive_40875) {
                                    x_40868 = x_40869;
                                }
                                if (!inactive_40875) {
                                    float defunc_1_op_res_40870 = x_40868 +
                                          x_40869;
                                    
                                    x_40868 = defunc_1_op_res_40870;
                                }
                            }
                        }
                        if (sle32(wave_sizze_40858, skip_threads_40874)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_40874, local_tid_40856 -
                                  squot32(local_tid_40856, 32) * 32) &&
                            (squot32(local_tid_40856, 32) == 0 &&
                             ltid_in_bounds_40871)) {
                            // write result
                            {
                                ((volatile __local
                                  float *) scan_arr_mem_40860)[sext_i32_i64(local_tid_40856)] =
                                    x_40868;
                                x_40869 = x_40868;
                            }
                        }
                        if (sle32(wave_sizze_40858, skip_threads_40874)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_40874 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_40856, 32) == 0 ||
                      !ltid_in_bounds_40871)) {
                    // read operands
                    {
                        x_40866 = x_40865;
                        x_40865 = ((__local
                                    float *) scan_arr_mem_40860)[sext_i32_i64(squot32(local_tid_40856,
                                                                                      32)) -
                                                                 1];
                    }
                    // perform operation
                    {
                        bool inactive_40876 =
                             slt64(srem64(sext_i32_i64(local_tid_40856) +
                                          chunk_offset_40863, iota32_arg_28208),
                                   sext_i32_i64(local_tid_40856) +
                                   chunk_offset_40863 -
                                   (sext_i32_i64(squot32(local_tid_40856, 32) *
                                    32 - 1) + chunk_offset_40863));
                        
                        if (inactive_40876) {
                            x_40865 = x_40866;
                        }
                        if (!inactive_40876) {
                            float defunc_1_op_res_40867 = x_40865 + x_40866;
                            
                            x_40865 = defunc_1_op_res_40867;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          float *) scan_arr_mem_40860)[sext_i32_i64(local_tid_40856)] =
                            x_40865;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_40856, 32) == 0) {
                    ((__local
                      float *) scan_arr_mem_40860)[sext_i32_i64(local_tid_40856)] =
                        x_40866;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_36338, m_27809) && slt64(gtid_36346,
                                                        iota32_arg_28208)) {
                    ((__global float *) mem_39628)[gtid_36338 *
                                                   iota32_arg_28208 +
                                                   gtid_36346] = ((__local
                                                                   float *) scan_arr_mem_40860)[sext_i32_i64(local_tid_40856)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_40877 = slt64(srem64(chunk_offset_40863 +
                                                          segscan_group_sizze_36425,
                                                          iota32_arg_28208),
                                                   chunk_offset_40863 +
                                                   segscan_group_sizze_36425 -
                                                   (chunk_offset_40863 +
                                                    segscan_group_sizze_36425 -
                                                    1));
                bool should_load_carry_40878 = local_tid_40856 == 0 &&
                     !crosses_segment_40877;
                
                if (should_load_carry_40878) {
                    x_36429 = ((__local
                                float *) scan_arr_mem_40860)[segscan_group_sizze_36425 -
                                                             1];
                }
                if (!should_load_carry_40878) {
                    x_36429 = 0.0F;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_36425
}
__kernel void mainziscan_stage2_34868(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_40513_backing_aligned_0,
                                      int64_t N_27808, int64_t m_27809, __global
                                      unsigned char *mem_39469,
                                      int64_t stage1_num_groups_40482,
                                      int32_t num_threads_40483)
{
    #define segscan_group_sizze_34885 (mainzisegscan_group_sizze_34862)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_40513_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_40513_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40508;
    int32_t local_tid_40509;
    int64_t group_sizze_40512;
    int32_t wave_sizze_40511;
    int32_t group_tid_40510;
    
    global_tid_40508 = get_global_id(0);
    local_tid_40509 = get_local_id(0);
    group_sizze_40512 = get_local_size(0);
    wave_sizze_40511 = LOCKSTEP_WIDTH;
    group_tid_40510 = get_group_id(0);
    
    int32_t phys_tid_34868;
    
    phys_tid_34868 = global_tid_40508;
    
    __local char *scan_arr_mem_40513;
    
    scan_arr_mem_40513 = (__local char *) scan_arr_mem_40513_backing_0;
    
    int64_t flat_idx_40515;
    
    flat_idx_40515 = (sext_i32_i64(local_tid_40509) + 1) *
        (segscan_group_sizze_34885 * sdiv_up64(m_27809 * N_27808,
                                               sext_i32_i64(num_threads_40483))) -
        1;
    
    int64_t gtid_34859;
    
    gtid_34859 = squot64(flat_idx_40515, N_27808);
    
    int64_t gtid_34867;
    
    gtid_34867 = flat_idx_40515 - squot64(flat_idx_40515, N_27808) * N_27808;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_34859, m_27809) && slt64(gtid_34867, N_27808)) {
            ((__local
              int64_t *) scan_arr_mem_40513)[sext_i32_i64(local_tid_40509)] =
                ((__global int64_t *) mem_39469)[gtid_34859 * N_27808 +
                                                 gtid_34867];
        } else {
            ((__local
              int64_t *) scan_arr_mem_40513)[sext_i32_i64(local_tid_40509)] = 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_34890;
    int64_t x_34891;
    int64_t x_40516;
    int64_t x_40517;
    bool ltid_in_bounds_40519;
    
    ltid_in_bounds_40519 = slt64(sext_i32_i64(local_tid_40509),
                                 stage1_num_groups_40482);
    
    int32_t skip_threads_40520;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_40519) {
            x_34891 = ((volatile __local
                        int64_t *) scan_arr_mem_40513)[sext_i32_i64(local_tid_40509)];
            if ((local_tid_40509 - squot32(local_tid_40509, 32) * 32) == 0) {
                x_34890 = x_34891;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_40520 = 1;
        while (slt32(skip_threads_40520, 32)) {
            if (sle32(skip_threads_40520, local_tid_40509 -
                      squot32(local_tid_40509, 32) * 32) &&
                ltid_in_bounds_40519) {
                // read operands
                {
                    x_34890 = ((volatile __local
                                int64_t *) scan_arr_mem_40513)[sext_i32_i64(local_tid_40509) -
                                                               sext_i32_i64(skip_threads_40520)];
                }
                // perform operation
                {
                    bool inactive_40521 =
                         slt64(srem64((sext_i32_i64(local_tid_40509) + 1) *
                                      (segscan_group_sizze_34885 *
                                       sdiv_up64(m_27809 * N_27808,
                                                 sext_i32_i64(num_threads_40483))) -
                                      1, N_27808),
                               (sext_i32_i64(local_tid_40509) + 1) *
                               (segscan_group_sizze_34885 * sdiv_up64(m_27809 *
                                                                      N_27808,
                                                                      sext_i32_i64(num_threads_40483))) -
                               1 - ((sext_i32_i64(local_tid_40509 -
                                     skip_threads_40520) + 1) *
                                    (segscan_group_sizze_34885 *
                                     sdiv_up64(m_27809 * N_27808,
                                               sext_i32_i64(num_threads_40483))) -
                                    1));
                    
                    if (inactive_40521) {
                        x_34890 = x_34891;
                    }
                    if (!inactive_40521) {
                        int64_t defunc_1_op_res_34892 = add64(x_34890, x_34891);
                        
                        x_34890 = defunc_1_op_res_34892;
                    }
                }
            }
            if (sle32(wave_sizze_40511, skip_threads_40520)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_40520, local_tid_40509 -
                      squot32(local_tid_40509, 32) * 32) &&
                ltid_in_bounds_40519) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_40513)[sext_i32_i64(local_tid_40509)] =
                        x_34890;
                    x_34891 = x_34890;
                }
            }
            if (sle32(wave_sizze_40511, skip_threads_40520)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_40520 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_40509 - squot32(local_tid_40509, 32) * 32) == 31 &&
            ltid_in_bounds_40519) {
            ((volatile __local
              int64_t *) scan_arr_mem_40513)[sext_i32_i64(squot32(local_tid_40509,
                                                                  32))] =
                x_34890;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_40522;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_40509, 32) == 0 && ltid_in_bounds_40519) {
                x_40517 = ((volatile __local
                            int64_t *) scan_arr_mem_40513)[sext_i32_i64(local_tid_40509)];
                if ((local_tid_40509 - squot32(local_tid_40509, 32) * 32) ==
                    0) {
                    x_40516 = x_40517;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_40522 = 1;
            while (slt32(skip_threads_40522, 32)) {
                if (sle32(skip_threads_40522, local_tid_40509 -
                          squot32(local_tid_40509, 32) * 32) &&
                    (squot32(local_tid_40509, 32) == 0 &&
                     ltid_in_bounds_40519)) {
                    // read operands
                    {
                        x_40516 = ((volatile __local
                                    int64_t *) scan_arr_mem_40513)[sext_i32_i64(local_tid_40509) -
                                                                   sext_i32_i64(skip_threads_40522)];
                    }
                    // perform operation
                    {
                        bool inactive_40523 =
                             slt64(srem64((sext_i32_i64(local_tid_40509 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_34885 *
                                           sdiv_up64(m_27809 * N_27808,
                                                     sext_i32_i64(num_threads_40483))) -
                                          1, N_27808),
                                   (sext_i32_i64(local_tid_40509 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_34885 *
                                               sdiv_up64(m_27809 * N_27808,
                                                         sext_i32_i64(num_threads_40483))) -
                                   1 - ((sext_i32_i64((local_tid_40509 -
                                                       skip_threads_40522) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_34885 *
                                         sdiv_up64(m_27809 * N_27808,
                                                   sext_i32_i64(num_threads_40483))) -
                                        1));
                        
                        if (inactive_40523) {
                            x_40516 = x_40517;
                        }
                        if (!inactive_40523) {
                            int64_t defunc_1_op_res_40518 = add64(x_40516,
                                                                  x_40517);
                            
                            x_40516 = defunc_1_op_res_40518;
                        }
                    }
                }
                if (sle32(wave_sizze_40511, skip_threads_40522)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_40522, local_tid_40509 -
                          squot32(local_tid_40509, 32) * 32) &&
                    (squot32(local_tid_40509, 32) == 0 &&
                     ltid_in_bounds_40519)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_40513)[sext_i32_i64(local_tid_40509)] =
                            x_40516;
                        x_40517 = x_40516;
                    }
                }
                if (sle32(wave_sizze_40511, skip_threads_40522)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_40522 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_40509, 32) == 0 || !ltid_in_bounds_40519)) {
            // read operands
            {
                x_34891 = x_34890;
                x_34890 = ((__local
                            int64_t *) scan_arr_mem_40513)[sext_i32_i64(squot32(local_tid_40509,
                                                                                32)) -
                                                           1];
            }
            // perform operation
            {
                bool inactive_40524 =
                     slt64(srem64((sext_i32_i64(local_tid_40509) + 1) *
                                  (segscan_group_sizze_34885 *
                                   sdiv_up64(m_27809 * N_27808,
                                             sext_i32_i64(num_threads_40483))) -
                                  1, N_27808), (sext_i32_i64(local_tid_40509) +
                                                1) *
                           (segscan_group_sizze_34885 * sdiv_up64(m_27809 *
                                                                  N_27808,
                                                                  sext_i32_i64(num_threads_40483))) -
                           1 - ((sext_i32_i64(squot32(local_tid_40509, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_34885 *
                                                 sdiv_up64(m_27809 * N_27808,
                                                           sext_i32_i64(num_threads_40483))) -
                                1));
                
                if (inactive_40524) {
                    x_34890 = x_34891;
                }
                if (!inactive_40524) {
                    int64_t defunc_1_op_res_34892 = add64(x_34890, x_34891);
                    
                    x_34890 = defunc_1_op_res_34892;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_40513)[sext_i32_i64(local_tid_40509)] =
                    x_34890;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_40509, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_40513)[sext_i32_i64(local_tid_40509)] =
                x_34891;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_34859, m_27809) && slt64(gtid_34867, N_27808)) {
            ((__global int64_t *) mem_39469)[gtid_34859 * N_27808 +
                                             gtid_34867] = ((__local
                                                             int64_t *) scan_arr_mem_40513)[sext_i32_i64(local_tid_40509)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_34885
}
__kernel void mainziscan_stage2_36347(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_40884_backing_aligned_0,
                                      int64_t m_27809, int64_t iota32_arg_28208,
                                      __global unsigned char *mem_39628,
                                      int64_t stage1_num_groups_40853,
                                      int32_t num_threads_40854)
{
    #define segscan_group_sizze_36425 (mainzisegscan_group_sizze_36341)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_40884_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_40884_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40879;
    int32_t local_tid_40880;
    int64_t group_sizze_40883;
    int32_t wave_sizze_40882;
    int32_t group_tid_40881;
    
    global_tid_40879 = get_global_id(0);
    local_tid_40880 = get_local_id(0);
    group_sizze_40883 = get_local_size(0);
    wave_sizze_40882 = LOCKSTEP_WIDTH;
    group_tid_40881 = get_group_id(0);
    
    int32_t phys_tid_36347;
    
    phys_tid_36347 = global_tid_40879;
    
    __local char *scan_arr_mem_40884;
    
    scan_arr_mem_40884 = (__local char *) scan_arr_mem_40884_backing_0;
    
    int64_t flat_idx_40886;
    
    flat_idx_40886 = (sext_i32_i64(local_tid_40880) + 1) *
        (segscan_group_sizze_36425 * sdiv_up64(m_27809 * iota32_arg_28208,
                                               sext_i32_i64(num_threads_40854))) -
        1;
    
    int64_t gtid_36338;
    
    gtid_36338 = squot64(flat_idx_40886, iota32_arg_28208);
    
    int64_t gtid_36346;
    
    gtid_36346 = flat_idx_40886 - squot64(flat_idx_40886, iota32_arg_28208) *
        iota32_arg_28208;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_36338, m_27809) && slt64(gtid_36346, iota32_arg_28208)) {
            ((__local
              float *) scan_arr_mem_40884)[sext_i32_i64(local_tid_40880)] =
                ((__global float *) mem_39628)[gtid_36338 * iota32_arg_28208 +
                                               gtid_36346];
        } else {
            ((__local
              float *) scan_arr_mem_40884)[sext_i32_i64(local_tid_40880)] =
                0.0F;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float x_36429;
    float x_36430;
    float x_40887;
    float x_40888;
    bool ltid_in_bounds_40890;
    
    ltid_in_bounds_40890 = slt64(sext_i32_i64(local_tid_40880),
                                 stage1_num_groups_40853);
    
    int32_t skip_threads_40891;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_40890) {
            x_36430 = ((volatile __local
                        float *) scan_arr_mem_40884)[sext_i32_i64(local_tid_40880)];
            if ((local_tid_40880 - squot32(local_tid_40880, 32) * 32) == 0) {
                x_36429 = x_36430;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_40891 = 1;
        while (slt32(skip_threads_40891, 32)) {
            if (sle32(skip_threads_40891, local_tid_40880 -
                      squot32(local_tid_40880, 32) * 32) &&
                ltid_in_bounds_40890) {
                // read operands
                {
                    x_36429 = ((volatile __local
                                float *) scan_arr_mem_40884)[sext_i32_i64(local_tid_40880) -
                                                             sext_i32_i64(skip_threads_40891)];
                }
                // perform operation
                {
                    bool inactive_40892 =
                         slt64(srem64((sext_i32_i64(local_tid_40880) + 1) *
                                      (segscan_group_sizze_36425 *
                                       sdiv_up64(m_27809 * iota32_arg_28208,
                                                 sext_i32_i64(num_threads_40854))) -
                                      1, iota32_arg_28208),
                               (sext_i32_i64(local_tid_40880) + 1) *
                               (segscan_group_sizze_36425 * sdiv_up64(m_27809 *
                                                                      iota32_arg_28208,
                                                                      sext_i32_i64(num_threads_40854))) -
                               1 - ((sext_i32_i64(local_tid_40880 -
                                     skip_threads_40891) + 1) *
                                    (segscan_group_sizze_36425 *
                                     sdiv_up64(m_27809 * iota32_arg_28208,
                                               sext_i32_i64(num_threads_40854))) -
                                    1));
                    
                    if (inactive_40892) {
                        x_36429 = x_36430;
                    }
                    if (!inactive_40892) {
                        float defunc_1_op_res_36431 = x_36429 + x_36430;
                        
                        x_36429 = defunc_1_op_res_36431;
                    }
                }
            }
            if (sle32(wave_sizze_40882, skip_threads_40891)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_40891, local_tid_40880 -
                      squot32(local_tid_40880, 32) * 32) &&
                ltid_in_bounds_40890) {
                // write result
                {
                    ((volatile __local
                      float *) scan_arr_mem_40884)[sext_i32_i64(local_tid_40880)] =
                        x_36429;
                    x_36430 = x_36429;
                }
            }
            if (sle32(wave_sizze_40882, skip_threads_40891)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_40891 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_40880 - squot32(local_tid_40880, 32) * 32) == 31 &&
            ltid_in_bounds_40890) {
            ((volatile __local
              float *) scan_arr_mem_40884)[sext_i32_i64(squot32(local_tid_40880,
                                                                32))] = x_36429;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_40893;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_40880, 32) == 0 && ltid_in_bounds_40890) {
                x_40888 = ((volatile __local
                            float *) scan_arr_mem_40884)[sext_i32_i64(local_tid_40880)];
                if ((local_tid_40880 - squot32(local_tid_40880, 32) * 32) ==
                    0) {
                    x_40887 = x_40888;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_40893 = 1;
            while (slt32(skip_threads_40893, 32)) {
                if (sle32(skip_threads_40893, local_tid_40880 -
                          squot32(local_tid_40880, 32) * 32) &&
                    (squot32(local_tid_40880, 32) == 0 &&
                     ltid_in_bounds_40890)) {
                    // read operands
                    {
                        x_40887 = ((volatile __local
                                    float *) scan_arr_mem_40884)[sext_i32_i64(local_tid_40880) -
                                                                 sext_i32_i64(skip_threads_40893)];
                    }
                    // perform operation
                    {
                        bool inactive_40894 =
                             slt64(srem64((sext_i32_i64(local_tid_40880 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_36425 *
                                           sdiv_up64(m_27809 * iota32_arg_28208,
                                                     sext_i32_i64(num_threads_40854))) -
                                          1, iota32_arg_28208),
                                   (sext_i32_i64(local_tid_40880 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_36425 *
                                               sdiv_up64(m_27809 *
                                                         iota32_arg_28208,
                                                         sext_i32_i64(num_threads_40854))) -
                                   1 - ((sext_i32_i64((local_tid_40880 -
                                                       skip_threads_40893) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_36425 *
                                         sdiv_up64(m_27809 * iota32_arg_28208,
                                                   sext_i32_i64(num_threads_40854))) -
                                        1));
                        
                        if (inactive_40894) {
                            x_40887 = x_40888;
                        }
                        if (!inactive_40894) {
                            float defunc_1_op_res_40889 = x_40887 + x_40888;
                            
                            x_40887 = defunc_1_op_res_40889;
                        }
                    }
                }
                if (sle32(wave_sizze_40882, skip_threads_40893)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_40893, local_tid_40880 -
                          squot32(local_tid_40880, 32) * 32) &&
                    (squot32(local_tid_40880, 32) == 0 &&
                     ltid_in_bounds_40890)) {
                    // write result
                    {
                        ((volatile __local
                          float *) scan_arr_mem_40884)[sext_i32_i64(local_tid_40880)] =
                            x_40887;
                        x_40888 = x_40887;
                    }
                }
                if (sle32(wave_sizze_40882, skip_threads_40893)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_40893 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_40880, 32) == 0 || !ltid_in_bounds_40890)) {
            // read operands
            {
                x_36430 = x_36429;
                x_36429 = ((__local
                            float *) scan_arr_mem_40884)[sext_i32_i64(squot32(local_tid_40880,
                                                                              32)) -
                                                         1];
            }
            // perform operation
            {
                bool inactive_40895 =
                     slt64(srem64((sext_i32_i64(local_tid_40880) + 1) *
                                  (segscan_group_sizze_36425 *
                                   sdiv_up64(m_27809 * iota32_arg_28208,
                                             sext_i32_i64(num_threads_40854))) -
                                  1, iota32_arg_28208),
                           (sext_i32_i64(local_tid_40880) + 1) *
                           (segscan_group_sizze_36425 * sdiv_up64(m_27809 *
                                                                  iota32_arg_28208,
                                                                  sext_i32_i64(num_threads_40854))) -
                           1 - ((sext_i32_i64(squot32(local_tid_40880, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_36425 *
                                                 sdiv_up64(m_27809 *
                                                           iota32_arg_28208,
                                                           sext_i32_i64(num_threads_40854))) -
                                1));
                
                if (inactive_40895) {
                    x_36429 = x_36430;
                }
                if (!inactive_40895) {
                    float defunc_1_op_res_36431 = x_36429 + x_36430;
                    
                    x_36429 = defunc_1_op_res_36431;
                }
            }
            // write final result
            {
                ((__local
                  float *) scan_arr_mem_40884)[sext_i32_i64(local_tid_40880)] =
                    x_36429;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_40880, 32) == 0) {
            ((__local
              float *) scan_arr_mem_40884)[sext_i32_i64(local_tid_40880)] =
                x_36430;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_36338, m_27809) && slt64(gtid_36346, iota32_arg_28208)) {
            ((__global float *) mem_39628)[gtid_36338 * iota32_arg_28208 +
                                           gtid_36346] = ((__local
                                                           float *) scan_arr_mem_40884)[sext_i32_i64(local_tid_40880)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_36425
}
__kernel void mainziscan_stage3_34868(__global int *global_failure,
                                      int64_t N_27808, int64_t m_27809,
                                      int64_t num_groups_34886, __global
                                      unsigned char *mem_39469,
                                      int32_t num_threads_40483,
                                      int32_t required_groups_40525)
{
    #define segscan_group_sizze_34885 (mainzisegscan_group_sizze_34862)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40526;
    int32_t local_tid_40527;
    int64_t group_sizze_40530;
    int32_t wave_sizze_40529;
    int32_t group_tid_40528;
    
    global_tid_40526 = get_global_id(0);
    local_tid_40527 = get_local_id(0);
    group_sizze_40530 = get_local_size(0);
    wave_sizze_40529 = LOCKSTEP_WIDTH;
    group_tid_40528 = get_group_id(0);
    
    int32_t phys_tid_34868;
    
    phys_tid_34868 = global_tid_40526;
    
    int32_t phys_group_id_40531;
    
    phys_group_id_40531 = get_group_id(0);
    for (int32_t i_40532 = 0; i_40532 < sdiv_up32(required_groups_40525 -
                                                  phys_group_id_40531,
                                                  sext_i64_i32(num_groups_34886));
         i_40532++) {
        int32_t virt_group_id_40533 = phys_group_id_40531 + i_40532 *
                sext_i64_i32(num_groups_34886);
        int64_t flat_idx_40534 = sext_i32_i64(virt_group_id_40533) *
                segscan_group_sizze_34885 + sext_i32_i64(local_tid_40527);
        int64_t gtid_34859 = squot64(flat_idx_40534, N_27808);
        int64_t gtid_34867 = flat_idx_40534 - squot64(flat_idx_40534, N_27808) *
                N_27808;
        int64_t orig_group_40535 = squot64(flat_idx_40534,
                                           segscan_group_sizze_34885 *
                                           sdiv_up64(m_27809 * N_27808,
                                                     sext_i32_i64(num_threads_40483)));
        int64_t carry_in_flat_idx_40536 = orig_group_40535 *
                (segscan_group_sizze_34885 * sdiv_up64(m_27809 * N_27808,
                                                       sext_i32_i64(num_threads_40483))) -
                1;
        
        if (slt64(gtid_34859, m_27809) && slt64(gtid_34867, N_27808)) {
            if (!(orig_group_40535 == 0 || (flat_idx_40534 ==
                                            (orig_group_40535 + 1) *
                                            (segscan_group_sizze_34885 *
                                             sdiv_up64(m_27809 * N_27808,
                                                       sext_i32_i64(num_threads_40483))) -
                                            1 || slt64(srem64(flat_idx_40534,
                                                              N_27808),
                                                       flat_idx_40534 -
                                                       carry_in_flat_idx_40536)))) {
                int64_t x_34890;
                int64_t x_34891;
                
                x_34890 = ((__global
                            int64_t *) mem_39469)[squot64(carry_in_flat_idx_40536,
                                                          N_27808) * N_27808 +
                                                  (carry_in_flat_idx_40536 -
                                                   squot64(carry_in_flat_idx_40536,
                                                           N_27808) * N_27808)];
                x_34891 = ((__global int64_t *) mem_39469)[gtid_34859 *
                                                           N_27808 +
                                                           gtid_34867];
                
                int64_t defunc_1_op_res_34892;
                
                defunc_1_op_res_34892 = add64(x_34890, x_34891);
                x_34890 = defunc_1_op_res_34892;
                ((__global int64_t *) mem_39469)[gtid_34859 * N_27808 +
                                                 gtid_34867] = x_34890;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_34885
}
__kernel void mainziscan_stage3_36347(__global int *global_failure,
                                      int64_t m_27809, int64_t iota32_arg_28208,
                                      int64_t num_groups_36426, __global
                                      unsigned char *mem_39628,
                                      int32_t num_threads_40854,
                                      int32_t required_groups_40896)
{
    #define segscan_group_sizze_36425 (mainzisegscan_group_sizze_36341)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40897;
    int32_t local_tid_40898;
    int64_t group_sizze_40901;
    int32_t wave_sizze_40900;
    int32_t group_tid_40899;
    
    global_tid_40897 = get_global_id(0);
    local_tid_40898 = get_local_id(0);
    group_sizze_40901 = get_local_size(0);
    wave_sizze_40900 = LOCKSTEP_WIDTH;
    group_tid_40899 = get_group_id(0);
    
    int32_t phys_tid_36347;
    
    phys_tid_36347 = global_tid_40897;
    
    int32_t phys_group_id_40902;
    
    phys_group_id_40902 = get_group_id(0);
    for (int32_t i_40903 = 0; i_40903 < sdiv_up32(required_groups_40896 -
                                                  phys_group_id_40902,
                                                  sext_i64_i32(num_groups_36426));
         i_40903++) {
        int32_t virt_group_id_40904 = phys_group_id_40902 + i_40903 *
                sext_i64_i32(num_groups_36426);
        int64_t flat_idx_40905 = sext_i32_i64(virt_group_id_40904) *
                segscan_group_sizze_36425 + sext_i32_i64(local_tid_40898);
        int64_t gtid_36338 = squot64(flat_idx_40905, iota32_arg_28208);
        int64_t gtid_36346 = flat_idx_40905 - squot64(flat_idx_40905,
                                                      iota32_arg_28208) *
                iota32_arg_28208;
        int64_t orig_group_40906 = squot64(flat_idx_40905,
                                           segscan_group_sizze_36425 *
                                           sdiv_up64(m_27809 * iota32_arg_28208,
                                                     sext_i32_i64(num_threads_40854)));
        int64_t carry_in_flat_idx_40907 = orig_group_40906 *
                (segscan_group_sizze_36425 * sdiv_up64(m_27809 *
                                                       iota32_arg_28208,
                                                       sext_i32_i64(num_threads_40854))) -
                1;
        
        if (slt64(gtid_36338, m_27809) && slt64(gtid_36346, iota32_arg_28208)) {
            if (!(orig_group_40906 == 0 || (flat_idx_40905 ==
                                            (orig_group_40906 + 1) *
                                            (segscan_group_sizze_36425 *
                                             sdiv_up64(m_27809 *
                                                       iota32_arg_28208,
                                                       sext_i32_i64(num_threads_40854))) -
                                            1 || slt64(srem64(flat_idx_40905,
                                                              iota32_arg_28208),
                                                       flat_idx_40905 -
                                                       carry_in_flat_idx_40907)))) {
                float x_36429;
                float x_36430;
                
                x_36429 = ((__global
                            float *) mem_39628)[squot64(carry_in_flat_idx_40907,
                                                        iota32_arg_28208) *
                                                iota32_arg_28208 +
                                                (carry_in_flat_idx_40907 -
                                                 squot64(carry_in_flat_idx_40907,
                                                         iota32_arg_28208) *
                                                 iota32_arg_28208)];
                x_36430 = ((__global float *) mem_39628)[gtid_36338 *
                                                         iota32_arg_28208 +
                                                         gtid_36346];
                
                float defunc_1_op_res_36431;
                
                defunc_1_op_res_36431 = x_36429 + x_36430;
                x_36429 = defunc_1_op_res_36431;
                ((__global float *) mem_39628)[gtid_36338 * iota32_arg_28208 +
                                               gtid_36346] = x_36429;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_36425
}
__kernel void mainzisegmap_32791(__global int *global_failure, int64_t N_27808,
                                 float freq_27814, int64_t i32_res_27828,
                                 __global
                                 unsigned char *mappingindices_mem_38681,
                                 __global unsigned char *mem_38686)
{
    #define segmap_group_sizze_32864 (mainzisegmap_group_sizze_32794)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_39890;
    int32_t local_tid_39891;
    int64_t group_sizze_39894;
    int32_t wave_sizze_39893;
    int32_t group_tid_39892;
    
    global_tid_39890 = get_global_id(0);
    local_tid_39891 = get_local_id(0);
    group_sizze_39894 = get_local_size(0);
    wave_sizze_39893 = LOCKSTEP_WIDTH;
    group_tid_39892 = get_group_id(0);
    
    int32_t phys_tid_32791;
    
    phys_tid_32791 = global_tid_39890;
    
    int64_t gtid_32789;
    
    gtid_32789 = squot64(sext_i32_i64(group_tid_39892) *
                         segmap_group_sizze_32864 +
                         sext_i32_i64(local_tid_39891), N_27808);
    
    int64_t gtid_32790;
    
    gtid_32790 = sext_i32_i64(group_tid_39892) * segmap_group_sizze_32864 +
        sext_i32_i64(local_tid_39891) - squot64(sext_i32_i64(group_tid_39892) *
                                                segmap_group_sizze_32864 +
                                                sext_i32_i64(local_tid_39891),
                                                N_27808) * N_27808;
    if (slt64(gtid_32789, i32_res_27828) && slt64(gtid_32790, N_27808)) {
        int32_t index_primexp_36676 = sext_i64_i32(gtid_32789);
        bool index_primexp_36673 = index_primexp_36676 == 0;
        float defunc_0_f_res_32870;
        
        if (index_primexp_36673) {
            defunc_0_f_res_32870 = 1.0F;
        } else {
            int32_t x_32869 = ((__global
                                int32_t *) mappingindices_mem_38681)[gtid_32790];
            bool cond_32871 = index_primexp_36676 == 1;
            float defunc_0_f_res_f_res_32872;
            
            if (cond_32871) {
                float i32_res_32873 = sitofp_i32_f32(x_32869);
                
                defunc_0_f_res_f_res_32872 = i32_res_32873;
            } else {
                int32_t r32_arg_32874 = sdiv32(index_primexp_36676, 2);
                float i32_res_32875 = sitofp_i32_f32(r32_arg_32874);
                float i32_res_32876 = sitofp_i32_f32(x_32869);
                float x_32877 = 6.2831855F * i32_res_32875;
                float x_32878 = i32_res_32876 * x_32877;
                float angle_32879 = x_32878 / freq_27814;
                int32_t x_32880 = smod32(index_primexp_36676, 2);
                bool cond_32881 = x_32880 == 0;
                float defunc_0_f_res_f_res_f_res_32882;
                
                if (cond_32881) {
                    float sin_res_32883;
                    
                    sin_res_32883 = futrts_sin32(angle_32879);
                    defunc_0_f_res_f_res_f_res_32882 = sin_res_32883;
                } else {
                    float cos_res_32884;
                    
                    cos_res_32884 = futrts_cos32(angle_32879);
                    defunc_0_f_res_f_res_f_res_32882 = cos_res_32884;
                }
                defunc_0_f_res_f_res_32872 = defunc_0_f_res_f_res_f_res_32882;
            }
            defunc_0_f_res_32870 = defunc_0_f_res_f_res_32872;
        }
        ((__global float *) mem_38686)[gtid_32789 * N_27808 + gtid_32790] =
            defunc_0_f_res_32870;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32864
}
__kernel void mainzisegmap_32969(__global int *global_failure, int64_t N_27808,
                                 float freq_27814, int64_t i32_res_27828,
                                 __global
                                 unsigned char *mappingindices_mem_38681,
                                 __global unsigned char *mem_38690)
{
    #define segmap_group_sizze_33038 (mainzisegmap_group_sizze_32972)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_39895;
    int32_t local_tid_39896;
    int64_t group_sizze_39899;
    int32_t wave_sizze_39898;
    int32_t group_tid_39897;
    
    global_tid_39895 = get_global_id(0);
    local_tid_39896 = get_local_id(0);
    group_sizze_39899 = get_local_size(0);
    wave_sizze_39898 = LOCKSTEP_WIDTH;
    group_tid_39897 = get_group_id(0);
    
    int32_t phys_tid_32969;
    
    phys_tid_32969 = global_tid_39895;
    
    int64_t gtid_32967;
    
    gtid_32967 = squot64(sext_i32_i64(group_tid_39897) *
                         segmap_group_sizze_33038 +
                         sext_i32_i64(local_tid_39896), N_27808);
    
    int64_t gtid_32968;
    
    gtid_32968 = sext_i32_i64(group_tid_39897) * segmap_group_sizze_33038 +
        sext_i32_i64(local_tid_39896) - squot64(sext_i32_i64(group_tid_39897) *
                                                segmap_group_sizze_33038 +
                                                sext_i32_i64(local_tid_39896),
                                                N_27808) * N_27808;
    if (slt64(gtid_32967, i32_res_27828) && slt64(gtid_32968, N_27808)) {
        int32_t index_primexp_36685 = sext_i64_i32(gtid_32967);
        bool index_primexp_36682 = index_primexp_36685 == 0;
        float defunc_0_f_res_33044;
        
        if (index_primexp_36682) {
            defunc_0_f_res_33044 = 1.0F;
        } else {
            int32_t x_33043 = ((__global
                                int32_t *) mappingindices_mem_38681)[gtid_32968];
            int32_t i_33045 = add32(1, index_primexp_36685);
            int32_t r32_arg_33046 = sdiv32(i_33045, 2);
            float i32_res_33047 = sitofp_i32_f32(r32_arg_33046);
            float i32_res_33048 = sitofp_i32_f32(x_33043);
            float x_33049 = 6.2831855F * i32_res_33047;
            float x_33050 = i32_res_33048 * x_33049;
            float angle_33051 = x_33050 / freq_27814;
            int32_t x_33052 = smod32(i_33045, 2);
            bool cond_33053 = x_33052 == 0;
            float defunc_0_f_res_f_res_33054;
            
            if (cond_33053) {
                float sin_res_33055;
                
                sin_res_33055 = futrts_sin32(angle_33051);
                defunc_0_f_res_f_res_33054 = sin_res_33055;
            } else {
                float cos_res_33056;
                
                cos_res_33056 = futrts_cos32(angle_33051);
                defunc_0_f_res_f_res_33054 = cos_res_33056;
            }
            defunc_0_f_res_33044 = defunc_0_f_res_f_res_33054;
        }
        ((__global float *) mem_38690)[gtid_32967 * N_27808 + gtid_32968] =
            defunc_0_f_res_33044;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33038
}
__kernel void mainzisegmap_33097(__global int *global_failure, int64_t N_27808,
                                 int64_t i32_res_27828, float i32_res_27893,
                                 __global unsigned char *mem_38694, __global
                                 unsigned char *mem_38698)
{
    #define segmap_group_sizze_33121 (mainzisegmap_group_sizze_33100)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_39900;
    int32_t local_tid_39901;
    int64_t group_sizze_39904;
    int32_t wave_sizze_39903;
    int32_t group_tid_39902;
    
    global_tid_39900 = get_global_id(0);
    local_tid_39901 = get_local_id(0);
    group_sizze_39904 = get_local_size(0);
    wave_sizze_39903 = LOCKSTEP_WIDTH;
    group_tid_39902 = get_group_id(0);
    
    int32_t phys_tid_33097;
    
    phys_tid_33097 = global_tid_39900;
    
    int64_t gtid_33095;
    
    gtid_33095 = squot64(sext_i32_i64(group_tid_39902) *
                         segmap_group_sizze_33121 +
                         sext_i32_i64(local_tid_39901), i32_res_27828);
    
    int64_t gtid_33096;
    
    gtid_33096 = sext_i32_i64(group_tid_39902) * segmap_group_sizze_33121 +
        sext_i32_i64(local_tid_39901) - squot64(sext_i32_i64(group_tid_39902) *
                                                segmap_group_sizze_33121 +
                                                sext_i32_i64(local_tid_39901),
                                                i32_res_27828) * i32_res_27828;
    if (slt64(gtid_33095, N_27808) && slt64(gtid_33096, i32_res_27828)) {
        float x_33124 = ((__global float *) mem_38694)[gtid_33095 *
                                                       i32_res_27828 +
                                                       gtid_33096];
        float defunc_0_f_res_33125 = i32_res_27893 + x_33124;
        
        ((__global float *) mem_38698)[gtid_33095 * i32_res_27828 +
                                       gtid_33096] = defunc_0_f_res_33125;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33121
}
__kernel void mainzisegmap_33130(__global int *global_failure, int64_t N_27808,
                                 int64_t m_27809, int32_t n_27813,
                                 int32_t k2p2zq_27826, int64_t i32_res_27828,
                                 int64_t num_groups_33155, __global
                                 unsigned char *binop_p_mem_38691, __global
                                 unsigned char *mem_38698, __global
                                 unsigned char *mem_38701, __global
                                 unsigned char *mem_38705, __global
                                 unsigned char *mem_38747)
{
    #define segmap_group_sizze_33154 (mainzisegmap_group_sizze_33132)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_39908;
    int32_t local_tid_39909;
    int64_t group_sizze_39912;
    int32_t wave_sizze_39911;
    int32_t group_tid_39910;
    
    global_tid_39908 = get_global_id(0);
    local_tid_39909 = get_local_id(0);
    group_sizze_39912 = get_local_size(0);
    wave_sizze_39911 = LOCKSTEP_WIDTH;
    group_tid_39910 = get_group_id(0);
    
    int32_t phys_tid_33130;
    
    phys_tid_33130 = global_tid_39908;
    
    int32_t phys_group_id_39913;
    
    phys_group_id_39913 = get_group_id(0);
    for (int32_t i_39914 = 0; i_39914 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27809, segmap_group_sizze_33154)) -
                   phys_group_id_39913, sext_i64_i32(num_groups_33155));
         i_39914++) {
        int32_t virt_group_id_39915 = phys_group_id_39913 + i_39914 *
                sext_i64_i32(num_groups_33155);
        int64_t gtid_33129 = sext_i32_i64(virt_group_id_39915) *
                segmap_group_sizze_33154 + sext_i32_i64(local_tid_39909);
        
        if (slt64(gtid_33129, m_27809)) {
            for (int32_t i_38663 = 0; i_38663 < k2p2zq_27826; i_38663++) {
                int64_t i_38611 = sext_i32_i64(i_38663);
                
                for (int32_t i_38662 = 0; i_38662 < k2p2zq_27826; i_38662++) {
                    int64_t i_38615 = sext_i32_i64(i_38662);
                    float defunc_2_reduce_res_33163;
                    float redout_38617 = 0.0F;
                    
                    for (int32_t i_38661 = 0; i_38661 < n_27813; i_38661++) {
                        int64_t i_38618 = sext_i32_i64(i_38661);
                        float x_33167 = ((__global float *) mem_38701)[i_38618 *
                                                                       m_27809 +
                                                                       gtid_33129];
                        float x_33168 = ((__global
                                          float *) binop_p_mem_38691)[i_38611 *
                                                                      N_27808 +
                                                                      i_38618];
                        float x_33169 = ((__global float *) mem_38698)[i_38618 *
                                                                       i32_res_27828 +
                                                                       i_38615];
                        float x_33170 = x_33168 * x_33169;
                        bool isnan_res_33171;
                        
                        isnan_res_33171 = futrts_isnan32(x_33167);
                        
                        float y_33172;
                        
                        if (isnan_res_33171) {
                            y_33172 = 0.0F;
                        } else {
                            y_33172 = 1.0F;
                        }
                        
                        float defunc_2_f_res_33173 = x_33170 * y_33172;
                        float defunc_1_op_res_33166 = defunc_2_f_res_33173 +
                              redout_38617;
                        float redout_tmp_39918 = defunc_1_op_res_33166;
                        
                        redout_38617 = redout_tmp_39918;
                    }
                    defunc_2_reduce_res_33163 = redout_38617;
                    ((__global float *) mem_38705)[phys_tid_33130 + (i_38611 *
                                                                     (num_groups_33155 *
                                                                      segmap_group_sizze_33154 *
                                                                      i32_res_27828) +
                                                                     i_38615 *
                                                                     (num_groups_33155 *
                                                                      segmap_group_sizze_33154))] =
                        defunc_2_reduce_res_33163;
                }
            }
            for (int64_t i_39919 = 0; i_39919 < i32_res_27828; i_39919++) {
                for (int64_t i_39920 = 0; i_39920 < i32_res_27828; i_39920++) {
                    ((__global float *) mem_38747)[i_39919 * (m_27809 *
                                                              i32_res_27828) +
                                                   i_39920 * m_27809 +
                                                   gtid_33129] = ((__global
                                                                   float *) mem_38705)[phys_tid_33130 +
                                                                                       (i_39919 *
                                                                                        (num_groups_33155 *
                                                                                         segmap_group_sizze_33154 *
                                                                                         i32_res_27828) +
                                                                                        i_39920 *
                                                                                        (num_groups_33155 *
                                                                                         segmap_group_sizze_33154))];
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33154
}
__kernel void mainzisegmap_33176(__global int *global_failure, int64_t m_27809,
                                 int64_t N_27810, int32_t n_27813,
                                 int32_t k2p2zq_27826, int64_t i32_res_27828,
                                 int64_t num_groups_33332, __global
                                 unsigned char *images_mem_38682, __global
                                 unsigned char *mem_38694, __global
                                 unsigned char *mem_38698, __global
                                 unsigned char *mem_38750, __global
                                 unsigned char *mem_38766)
{
    #define segmap_group_sizze_33331 (mainzisegmap_group_sizze_33179)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_39921;
    int32_t local_tid_39922;
    int64_t group_sizze_39925;
    int32_t wave_sizze_39924;
    int32_t group_tid_39923;
    
    global_tid_39921 = get_global_id(0);
    local_tid_39922 = get_local_id(0);
    group_sizze_39925 = get_local_size(0);
    wave_sizze_39924 = LOCKSTEP_WIDTH;
    group_tid_39923 = get_group_id(0);
    
    int32_t phys_tid_33176;
    
    phys_tid_33176 = global_tid_39921;
    
    int32_t phys_group_id_39926;
    
    phys_group_id_39926 = get_group_id(0);
    for (int32_t i_39927 = 0; i_39927 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27809 * i32_res_27828,
                                          segmap_group_sizze_33331)) -
                   phys_group_id_39926, sext_i64_i32(num_groups_33332));
         i_39927++) {
        int32_t virt_group_id_39928 = phys_group_id_39926 + i_39927 *
                sext_i64_i32(num_groups_33332);
        int64_t gtid_33174 = squot64(sext_i32_i64(virt_group_id_39928) *
                                     segmap_group_sizze_33331 +
                                     sext_i32_i64(local_tid_39922),
                                     i32_res_27828);
        int64_t gtid_33175 = sext_i32_i64(virt_group_id_39928) *
                segmap_group_sizze_33331 + sext_i32_i64(local_tid_39922) -
                squot64(sext_i32_i64(virt_group_id_39928) *
                        segmap_group_sizze_33331 +
                        sext_i32_i64(local_tid_39922), i32_res_27828) *
                i32_res_27828;
        
        if (slt64(gtid_33174, m_27809) && slt64(gtid_33175, i32_res_27828)) {
            for (int32_t i_38665 = 0; i_38665 < k2p2zq_27826; i_38665++) {
                int64_t i_38621 = sext_i32_i64(i_38665);
                float defunc_2_reduce_res_33343;
                float redout_38623 = 0.0F;
                
                for (int32_t i_38664 = 0; i_38664 < n_27813; i_38664++) {
                    int64_t i_38624 = sext_i32_i64(i_38664);
                    float x_33347 = ((__global
                                      float *) images_mem_38682)[gtid_33174 *
                                                                 N_27810 +
                                                                 i_38624];
                    float x_33348 = ((__global float *) mem_38694)[i_38624 *
                                                                   i32_res_27828 +
                                                                   gtid_33175];
                    float x_33349 = ((__global float *) mem_38698)[i_38624 *
                                                                   i32_res_27828 +
                                                                   i_38621];
                    float x_33350 = x_33348 * x_33349;
                    bool isnan_res_33351;
                    
                    isnan_res_33351 = futrts_isnan32(x_33347);
                    
                    float y_33352;
                    
                    if (isnan_res_33351) {
                        y_33352 = 0.0F;
                    } else {
                        y_33352 = 1.0F;
                    }
                    
                    float defunc_2_f_res_33353 = x_33350 * y_33352;
                    float defunc_1_op_res_33346 = defunc_2_f_res_33353 +
                          redout_38623;
                    float redout_tmp_39930 = defunc_1_op_res_33346;
                    
                    redout_38623 = redout_tmp_39930;
                }
                defunc_2_reduce_res_33343 = redout_38623;
                ((__global float *) mem_38750)[phys_tid_33176 + i_38621 *
                                               (num_groups_33332 *
                                                segmap_group_sizze_33331)] =
                    defunc_2_reduce_res_33343;
            }
            for (int64_t i_39931 = 0; i_39931 < i32_res_27828; i_39931++) {
                ((__global float *) mem_38766)[i_39931 * (i32_res_27828 *
                                                          m_27809) +
                                               gtid_33174 * i32_res_27828 +
                                               gtid_33175] = ((__global
                                                               float *) mem_38750)[phys_tid_33176 +
                                                                                   i_39931 *
                                                                                   (num_groups_33332 *
                                                                                    segmap_group_sizze_33331)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33331
}
__kernel void mainzisegmap_33660(__global int *global_failure, int64_t m_27809,
                                 int64_t i32_res_27828, int64_t i32_res_27961,
                                 int64_t i32_res_27976, int64_t x_27977,
                                 int64_t j_m_i_27980,
                                 int64_t gauss_jordan_res_r_ixfn_38918,
                                 int64_t gauss_jordan_res_r_ixfn_38919,
                                 int64_t gauss_jordan_res_r_ixfn_38921, __global
                                 unsigned char *gauss_jordan_res_r_mem_38923,
                                 __global unsigned char *mem_38928)
{
    #define segmap_group_sizze_34211 (mainzisegmap_group_sizze_33664)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40087;
    int32_t local_tid_40088;
    int64_t group_sizze_40091;
    int32_t wave_sizze_40090;
    int32_t group_tid_40089;
    
    global_tid_40087 = get_global_id(0);
    local_tid_40088 = get_local_id(0);
    group_sizze_40091 = get_local_size(0);
    wave_sizze_40090 = LOCKSTEP_WIDTH;
    group_tid_40089 = get_group_id(0);
    
    int32_t phys_tid_33660;
    
    phys_tid_33660 = global_tid_40087;
    
    int64_t gtid_33657;
    
    gtid_33657 = squot64(sext_i32_i64(group_tid_40089) *
                         segmap_group_sizze_34211 +
                         sext_i32_i64(local_tid_40088), i32_res_27828 *
                         j_m_i_27980);
    
    int64_t gtid_slice_33655;
    
    gtid_slice_33655 = squot64(sext_i32_i64(group_tid_40089) *
                               segmap_group_sizze_34211 +
                               sext_i32_i64(local_tid_40088) -
                               squot64(sext_i32_i64(group_tid_40089) *
                                       segmap_group_sizze_34211 +
                                       sext_i32_i64(local_tid_40088),
                                       i32_res_27828 * j_m_i_27980) *
                               (i32_res_27828 * j_m_i_27980), j_m_i_27980);
    
    int64_t gtid_slice_33656;
    
    gtid_slice_33656 = sext_i32_i64(group_tid_40089) *
        segmap_group_sizze_34211 + sext_i32_i64(local_tid_40088) -
        squot64(sext_i32_i64(group_tid_40089) * segmap_group_sizze_34211 +
                sext_i32_i64(local_tid_40088), i32_res_27828 * j_m_i_27980) *
        (i32_res_27828 * j_m_i_27980) - squot64(sext_i32_i64(group_tid_40089) *
                                                segmap_group_sizze_34211 +
                                                sext_i32_i64(local_tid_40088) -
                                                squot64(sext_i32_i64(group_tid_40089) *
                                                        segmap_group_sizze_34211 +
                                                        sext_i32_i64(local_tid_40088),
                                                        i32_res_27828 *
                                                        j_m_i_27980) *
                                                (i32_res_27828 * j_m_i_27980),
                                                j_m_i_27980) * j_m_i_27980;
    if ((slt64(gtid_33657, m_27809) && slt64(gtid_slice_33655,
                                             i32_res_27828)) &&
        slt64(gtid_slice_33656, j_m_i_27980)) {
        int64_t slice_34215 = i32_res_27828 + gtid_slice_33656;
        int64_t binop_x_36749 = x_27977 * gtid_33657;
        int64_t binop_y_36750 = i32_res_27976 * gtid_slice_33655;
        int64_t binop_x_36751 = binop_x_36749 + binop_y_36750;
        int64_t binop_x_36752 = slice_34215 + binop_x_36751;
        int64_t new_index_36753 = squot64(binop_x_36752, i32_res_27961);
        int64_t binop_y_36765 = i32_res_27961 * new_index_36753;
        int64_t new_index_36766 = binop_x_36752 - binop_y_36765;
        float v_34216 = ((__global
                          float *) gauss_jordan_res_r_mem_38923)[gauss_jordan_res_r_ixfn_38918 +
                                                                 (new_index_36753 *
                                                                  gauss_jordan_res_r_ixfn_38919 +
                                                                  new_index_36766 *
                                                                  gauss_jordan_res_r_ixfn_38921)];
        
        ((__global float *) mem_38928)[gtid_33657 * (j_m_i_27980 *
                                                     i32_res_27828) +
                                       gtid_slice_33655 * j_m_i_27980 +
                                       gtid_slice_33656] = v_34216;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34211
}
__kernel void mainzisegmap_33826(__global int *global_failure, int64_t m_27809,
                                 int64_t i32_res_27961,
                                 int64_t ctx_param_ext_38881,
                                 int64_t ctx_param_ext_38882,
                                 int64_t ctx_param_ext_38884, __global
                                 unsigned char *mem_param_38886, __global
                                 unsigned char *mem_38906)
{
    #define segmap_group_sizze_34199 (mainzisegmap_group_sizze_33829)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40081;
    int32_t local_tid_40082;
    int64_t group_sizze_40085;
    int32_t wave_sizze_40084;
    int32_t group_tid_40083;
    
    global_tid_40081 = get_global_id(0);
    local_tid_40082 = get_local_id(0);
    group_sizze_40085 = get_local_size(0);
    wave_sizze_40084 = LOCKSTEP_WIDTH;
    group_tid_40083 = get_group_id(0);
    
    int32_t phys_tid_33826;
    
    phys_tid_33826 = global_tid_40081;
    
    int64_t gtid_33824;
    
    gtid_33824 = squot64(sext_i32_i64(group_tid_40083) *
                         segmap_group_sizze_34199 +
                         sext_i32_i64(local_tid_40082), i32_res_27961);
    
    int64_t gtid_33825;
    
    gtid_33825 = sext_i32_i64(group_tid_40083) * segmap_group_sizze_34199 +
        sext_i32_i64(local_tid_40082) - squot64(sext_i32_i64(group_tid_40083) *
                                                segmap_group_sizze_34199 +
                                                sext_i32_i64(local_tid_40082),
                                                i32_res_27961) * i32_res_27961;
    if (slt64(gtid_33824, m_27809) && slt64(gtid_33825, i32_res_27961)) {
        float write_value_34205 = ((__global float *) mem_38906)[gtid_33824 *
                                                                 i32_res_27961 +
                                                                 gtid_33825];
        
        if ((sle64(0, gtid_33824) && slt64(gtid_33824, m_27809)) && (sle64(0,
                                                                           gtid_33825) &&
                                                                     slt64(gtid_33825,
                                                                           i32_res_27961))) {
            ((__global float *) mem_param_38886)[ctx_param_ext_38881 +
                                                 (gtid_33824 *
                                                  ctx_param_ext_38882 +
                                                  gtid_33825 *
                                                  ctx_param_ext_38884)] =
                write_value_34205;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34199
}
__kernel void mainzisegmap_33880(__global int *global_failure, int64_t m_27809,
                                 int32_t k2p2zq_27826, int32_t m_27959,
                                 int64_t i32_res_27961, int32_t i_34102,
                                 int64_t i32_res_34104,
                                 int64_t ctx_param_ext_38881,
                                 int64_t ctx_param_ext_38882,
                                 int64_t ctx_param_ext_38884, __global
                                 unsigned char *mem_param_38886, __global
                                 unsigned char *mem_38902, __global
                                 unsigned char *mem_38906)
{
    #define segmap_group_sizze_34165 (mainzisegmap_group_sizze_33883)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40076;
    int32_t local_tid_40077;
    int64_t group_sizze_40080;
    int32_t wave_sizze_40079;
    int32_t group_tid_40078;
    
    global_tid_40076 = get_global_id(0);
    local_tid_40077 = get_local_id(0);
    group_sizze_40080 = get_local_size(0);
    wave_sizze_40079 = LOCKSTEP_WIDTH;
    group_tid_40078 = get_group_id(0);
    
    int32_t phys_tid_33880;
    
    phys_tid_33880 = global_tid_40076;
    
    int64_t gtid_33878;
    
    gtid_33878 = squot64(sext_i32_i64(group_tid_40078) *
                         segmap_group_sizze_34165 +
                         sext_i32_i64(local_tid_40077), i32_res_27961);
    
    int64_t gtid_33879;
    
    gtid_33879 = sext_i32_i64(group_tid_40078) * segmap_group_sizze_34165 +
        sext_i32_i64(local_tid_40077) - squot64(sext_i32_i64(group_tid_40078) *
                                                segmap_group_sizze_34165 +
                                                sext_i32_i64(local_tid_40077),
                                                i32_res_27961) * i32_res_27961;
    if (slt64(gtid_33878, m_27809) && slt64(gtid_33879, i32_res_27961)) {
        bool cond_34170 = ((__global bool *) mem_38902)[gtid_33878];
        int32_t defunc_0_f_res_34172 = sext_i64_i32(gtid_33879);
        int32_t defunc_0_f_res_34173 = sdiv32(defunc_0_f_res_34172, m_27959);
        int32_t defunc_0_f_res_34174 = smod32(defunc_0_f_res_34172, m_27959);
        float defunc_0_f_res_34175;
        
        if (cond_34170) {
            int32_t x_34176 = mul32(m_27959, defunc_0_f_res_34173);
            int32_t i32_arg_34177 = add32(defunc_0_f_res_34174, x_34176);
            int64_t i32_res_34178 = sext_i32_i64(i32_arg_34177);
            float defunc_0_f_res_t_res_34179 = ((__global
                                                 float *) mem_param_38886)[ctx_param_ext_38881 +
                                                                           (gtid_33878 *
                                                                            ctx_param_ext_38882 +
                                                                            i32_res_34178 *
                                                                            ctx_param_ext_38884)];
            
            defunc_0_f_res_34175 = defunc_0_f_res_t_res_34179;
        } else {
            float v1_34169 = ((__global
                               float *) mem_param_38886)[ctx_param_ext_38881 +
                                                         (gtid_33878 *
                                                          ctx_param_ext_38882 +
                                                          i32_res_34104 *
                                                          ctx_param_ext_38884)];
            int64_t i32_res_34180 = sext_i32_i64(defunc_0_f_res_34174);
            float x_34181 = ((__global
                              float *) mem_param_38886)[ctx_param_ext_38881 +
                                                        (gtid_33878 *
                                                         ctx_param_ext_38882 +
                                                         i32_res_34180 *
                                                         ctx_param_ext_38884)];
            float x_34182 = x_34181 / v1_34169;
            int32_t y_34183 = sub32(k2p2zq_27826, 1);
            bool cond_34184 = slt32(defunc_0_f_res_34173, y_34183);
            float defunc_0_f_res_f_res_34185;
            
            if (cond_34184) {
                int32_t x_34186 = add32(1, defunc_0_f_res_34173);
                int32_t x_34187 = mul32(m_27959, x_34186);
                int32_t i32_arg_34188 = add32(defunc_0_f_res_34174, x_34187);
                int64_t i32_res_34189 = sext_i32_i64(i32_arg_34188);
                float x_34190 = ((__global
                                  float *) mem_param_38886)[ctx_param_ext_38881 +
                                                            (gtid_33878 *
                                                             ctx_param_ext_38882 +
                                                             i32_res_34189 *
                                                             ctx_param_ext_38884)];
                int32_t i32_arg_34191 = add32(i_34102, x_34187);
                int64_t i32_res_34192 = sext_i32_i64(i32_arg_34191);
                float x_34193 = ((__global
                                  float *) mem_param_38886)[ctx_param_ext_38881 +
                                                            (gtid_33878 *
                                                             ctx_param_ext_38882 +
                                                             i32_res_34192 *
                                                             ctx_param_ext_38884)];
                float y_34194 = x_34182 * x_34193;
                float defunc_0_f_res_f_res_t_res_34195 = x_34190 - y_34194;
                
                defunc_0_f_res_f_res_34185 = defunc_0_f_res_f_res_t_res_34195;
            } else {
                defunc_0_f_res_f_res_34185 = x_34182;
            }
            defunc_0_f_res_34175 = defunc_0_f_res_f_res_34185;
        }
        ((__global float *) mem_38906)[gtid_33878 * i32_res_27961 +
                                       gtid_33879] = defunc_0_f_res_34175;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34165
}
__kernel void mainzisegmap_33948(__global int *global_failure, int64_t m_27809,
                                 int64_t i32_res_34104,
                                 int64_t ctx_param_ext_38881,
                                 int64_t ctx_param_ext_38882,
                                 int64_t ctx_param_ext_38884, __global
                                 unsigned char *mem_param_38886, __global
                                 unsigned char *mem_38902)
{
    #define segmap_group_sizze_34149 (mainzisegmap_group_sizze_33950)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40071;
    int32_t local_tid_40072;
    int64_t group_sizze_40075;
    int32_t wave_sizze_40074;
    int32_t group_tid_40073;
    
    global_tid_40071 = get_global_id(0);
    local_tid_40072 = get_local_id(0);
    group_sizze_40075 = get_local_size(0);
    wave_sizze_40074 = LOCKSTEP_WIDTH;
    group_tid_40073 = get_group_id(0);
    
    int32_t phys_tid_33948;
    
    phys_tid_33948 = global_tid_40071;
    
    int64_t gtid_33947;
    
    gtid_33947 = sext_i32_i64(group_tid_40073) * segmap_group_sizze_34149 +
        sext_i32_i64(local_tid_40072);
    if (slt64(gtid_33947, m_27809)) {
        float v1_34154 = ((__global
                           float *) mem_param_38886)[ctx_param_ext_38881 +
                                                     (gtid_33947 *
                                                      ctx_param_ext_38882 +
                                                      i32_res_34104 *
                                                      ctx_param_ext_38884)];
        bool cond_34155 = v1_34154 == 0.0F;
        
        ((__global bool *) mem_38902)[gtid_33947] = cond_34155;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34149
}
__kernel void mainzisegmap_34041(__global int *global_failure, int64_t m_27809,
                                 int32_t k2p2zq_27826, int64_t i32_res_27828,
                                 int32_t m_27959, int64_t i32_res_27961,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_38850,
                                 __global unsigned char *mem_38878)
{
    #define segmap_group_sizze_34085 (mainzisegmap_group_sizze_34044)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40038;
    int32_t local_tid_40039;
    int64_t group_sizze_40042;
    int32_t wave_sizze_40041;
    int32_t group_tid_40040;
    
    global_tid_40038 = get_global_id(0);
    local_tid_40039 = get_local_id(0);
    group_sizze_40042 = get_local_size(0);
    wave_sizze_40041 = LOCKSTEP_WIDTH;
    group_tid_40040 = get_group_id(0);
    
    int32_t phys_tid_34041;
    
    phys_tid_34041 = global_tid_40038;
    
    int64_t gtid_34039;
    
    gtid_34039 = squot64(sext_i32_i64(group_tid_40040) *
                         segmap_group_sizze_34085 +
                         sext_i32_i64(local_tid_40039), i32_res_27961);
    
    int64_t gtid_34040;
    
    gtid_34040 = sext_i32_i64(group_tid_40040) * segmap_group_sizze_34085 +
        sext_i32_i64(local_tid_40039) - squot64(sext_i32_i64(group_tid_40040) *
                                                segmap_group_sizze_34085 +
                                                sext_i32_i64(local_tid_40039),
                                                i32_res_27961) * i32_res_27961;
    if (slt64(gtid_34039, m_27809) && slt64(gtid_34040, i32_res_27961)) {
        int32_t index_primexp_36697 = sext_i64_i32(gtid_34040);
        int32_t defunc_0_f_res_34090 = sdiv32(index_primexp_36697, m_27959);
        int32_t defunc_0_f_res_34091 = smod32(index_primexp_36697, m_27959);
        bool cond_34092 = slt32(defunc_0_f_res_34091, k2p2zq_27826);
        float defunc_0_f_res_34093;
        
        if (cond_34092) {
            int64_t i_34094 = sext_i32_i64(defunc_0_f_res_34090);
            int64_t j_34095 = sext_i32_i64(defunc_0_f_res_34091);
            float defunc_0_f_res_t_res_34096 = ((__global
                                                 float *) defunc_3_map_res_mem_38850)[gtid_34039 *
                                                                                      (i32_res_27828 *
                                                                                       i32_res_27828) +
                                                                                      i_34094 *
                                                                                      i32_res_27828 +
                                                                                      j_34095];
            
            defunc_0_f_res_34093 = defunc_0_f_res_t_res_34096;
        } else {
            int32_t y_34097 = add32(k2p2zq_27826, defunc_0_f_res_34090);
            bool cond_34098 = defunc_0_f_res_34091 == y_34097;
            float defunc_0_f_res_f_res_34099;
            
            if (cond_34098) {
                defunc_0_f_res_f_res_34099 = 1.0F;
            } else {
                defunc_0_f_res_f_res_34099 = 0.0F;
            }
            defunc_0_f_res_34093 = defunc_0_f_res_f_res_34099;
        }
        ((__global float *) mem_38878)[gtid_34039 * i32_res_27961 +
                                       gtid_34040] = defunc_0_f_res_34093;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34085
}
__kernel void mainzisegmap_34222(__global int *global_failure, int64_t N_27808,
                                 int64_t m_27809, int32_t n_27813,
                                 int32_t k2p2zq_27826, int64_t i32_res_27828,
                                 int64_t num_groups_34243, __global
                                 unsigned char *binop_p_mem_38691, __global
                                 unsigned char *mem_38932, __global
                                 unsigned char *mem_38935, __global
                                 unsigned char *mem_38950)
{
    #define segmap_group_sizze_34242 (mainzisegmap_group_sizze_34224)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40095;
    int32_t local_tid_40096;
    int64_t group_sizze_40099;
    int32_t wave_sizze_40098;
    int32_t group_tid_40097;
    
    global_tid_40095 = get_global_id(0);
    local_tid_40096 = get_local_id(0);
    group_sizze_40099 = get_local_size(0);
    wave_sizze_40098 = LOCKSTEP_WIDTH;
    group_tid_40097 = get_group_id(0);
    
    int32_t phys_tid_34222;
    
    phys_tid_34222 = global_tid_40095;
    
    int32_t phys_group_id_40100;
    
    phys_group_id_40100 = get_group_id(0);
    for (int32_t i_40101 = 0; i_40101 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27809, segmap_group_sizze_34242)) -
                   phys_group_id_40100, sext_i64_i32(num_groups_34243));
         i_40101++) {
        int32_t virt_group_id_40102 = phys_group_id_40100 + i_40101 *
                sext_i64_i32(num_groups_34243);
        int64_t gtid_34221 = sext_i32_i64(virt_group_id_40102) *
                segmap_group_sizze_34242 + sext_i32_i64(local_tid_40096);
        
        if (slt64(gtid_34221, m_27809)) {
            for (int32_t i_38667 = 0; i_38667 < k2p2zq_27826; i_38667++) {
                int64_t i_38627 = sext_i32_i64(i_38667);
                float defunc_2_reduce_res_34249;
                float redout_38629 = 0.0F;
                
                for (int32_t i_38666 = 0; i_38666 < n_27813; i_38666++) {
                    int64_t i_38630 = sext_i32_i64(i_38666);
                    float x_34254 = ((__global float *) mem_38932)[i_38630 *
                                                                   m_27809 +
                                                                   gtid_34221];
                    bool isnan_res_34255;
                    
                    isnan_res_34255 = futrts_isnan32(x_34254);
                    
                    float defunc_1_f_res_34256;
                    
                    if (isnan_res_34255) {
                        defunc_1_f_res_34256 = 0.0F;
                    } else {
                        float x_34253 = ((__global
                                          float *) binop_p_mem_38691)[i_38627 *
                                                                      N_27808 +
                                                                      i_38630];
                        float defunc_1_f_res_f_res_34257 = x_34253 * x_34254;
                        
                        defunc_1_f_res_34256 = defunc_1_f_res_f_res_34257;
                    }
                    
                    float defunc_1_op_res_34252 = defunc_1_f_res_34256 +
                          redout_38629;
                    float redout_tmp_40104 = defunc_1_op_res_34252;
                    
                    redout_38629 = redout_tmp_40104;
                }
                defunc_2_reduce_res_34249 = redout_38629;
                ((__global float *) mem_38935)[phys_tid_34222 + i_38627 *
                                               (num_groups_34243 *
                                                segmap_group_sizze_34242)] =
                    defunc_2_reduce_res_34249;
            }
            for (int64_t i_40105 = 0; i_40105 < i32_res_27828; i_40105++) {
                ((__global float *) mem_38950)[i_40105 * m_27809 + gtid_34221] =
                    ((__global float *) mem_38935)[phys_tid_34222 + i_40105 *
                                                   (num_groups_34243 *
                                                    segmap_group_sizze_34242)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34242
}
__kernel void mainzisegmap_34363(__global int *global_failure, int64_t m_27809,
                                 int32_t k2p2zq_27826, int64_t i32_res_27828,
                                 int64_t num_groups_34383, __global
                                 unsigned char *mem_39154, __global
                                 unsigned char *mem_39157, __global
                                 unsigned char *mem_39160, __global
                                 unsigned char *mem_39175)
{
    #define segmap_group_sizze_34382 (mainzisegmap_group_sizze_34365)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40227;
    int32_t local_tid_40228;
    int64_t group_sizze_40231;
    int32_t wave_sizze_40230;
    int32_t group_tid_40229;
    
    global_tid_40227 = get_global_id(0);
    local_tid_40228 = get_local_id(0);
    group_sizze_40231 = get_local_size(0);
    wave_sizze_40230 = LOCKSTEP_WIDTH;
    group_tid_40229 = get_group_id(0);
    
    int32_t phys_tid_34363;
    
    phys_tid_34363 = global_tid_40227;
    
    int32_t phys_group_id_40232;
    
    phys_group_id_40232 = get_group_id(0);
    for (int32_t i_40233 = 0; i_40233 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27809, segmap_group_sizze_34382)) -
                   phys_group_id_40232, sext_i64_i32(num_groups_34383));
         i_40233++) {
        int32_t virt_group_id_40234 = phys_group_id_40232 + i_40233 *
                sext_i64_i32(num_groups_34383);
        int64_t gtid_34362 = sext_i32_i64(virt_group_id_40234) *
                segmap_group_sizze_34382 + sext_i32_i64(local_tid_40228);
        
        if (slt64(gtid_34362, m_27809)) {
            for (int32_t i_38669 = 0; i_38669 < k2p2zq_27826; i_38669++) {
                int64_t i_38633 = sext_i32_i64(i_38669);
                float defunc_0_f_res_34390;
                float redout_38635 = 0.0F;
                
                for (int32_t i_38668 = 0; i_38668 < k2p2zq_27826; i_38668++) {
                    int64_t i_38636 = sext_i32_i64(i_38668);
                    float x_34394 = ((__global float *) mem_39157)[i_38636 *
                                                                   m_27809 +
                                                                   gtid_34362];
                    float x_34395 = ((__global float *) mem_39154)[i_38633 *
                                                                   (m_27809 *
                                                                    i32_res_27828) +
                                                                   i_38636 *
                                                                   m_27809 +
                                                                   gtid_34362];
                    float defunc_1_f_res_34396 = x_34394 * x_34395;
                    float defunc_1_op_res_34393 = defunc_1_f_res_34396 +
                          redout_38635;
                    float redout_tmp_40236 = defunc_1_op_res_34393;
                    
                    redout_38635 = redout_tmp_40236;
                }
                defunc_0_f_res_34390 = redout_38635;
                ((__global float *) mem_39160)[phys_tid_34363 + i_38633 *
                                               (num_groups_34383 *
                                                segmap_group_sizze_34382)] =
                    defunc_0_f_res_34390;
            }
            for (int64_t i_40237 = 0; i_40237 < i32_res_27828; i_40237++) {
                ((__global float *) mem_39175)[i_40237 * m_27809 + gtid_34362] =
                    ((__global float *) mem_39160)[phys_tid_34363 + i_40237 *
                                                   (num_groups_34383 *
                                                    segmap_group_sizze_34382)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34382
}
__kernel void mainzisegmap_34495(__global int *global_failure, int64_t N_27808,
                                 int64_t m_27809, int32_t k2p2zq_27826,
                                 int64_t i32_res_27828,
                                 int64_t num_groups_34514, __global
                                 unsigned char *mem_38698, __global
                                 unsigned char *mem_39219, __global
                                 unsigned char *mem_39222, __global
                                 unsigned char *mem_39237)
{
    #define segmap_group_sizze_34513 (mainzisegmap_group_sizze_34497)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40315;
    int32_t local_tid_40316;
    int64_t group_sizze_40319;
    int32_t wave_sizze_40318;
    int32_t group_tid_40317;
    
    global_tid_40315 = get_global_id(0);
    local_tid_40316 = get_local_id(0);
    group_sizze_40319 = get_local_size(0);
    wave_sizze_40318 = LOCKSTEP_WIDTH;
    group_tid_40317 = get_group_id(0);
    
    int32_t phys_tid_34495;
    
    phys_tid_34495 = global_tid_40315;
    
    int32_t phys_group_id_40320;
    
    phys_group_id_40320 = get_group_id(0);
    for (int32_t i_40321 = 0; i_40321 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27809, segmap_group_sizze_34513)) -
                   phys_group_id_40320, sext_i64_i32(num_groups_34514));
         i_40321++) {
        int32_t virt_group_id_40322 = phys_group_id_40320 + i_40321 *
                sext_i64_i32(num_groups_34514);
        int64_t gtid_34494 = sext_i32_i64(virt_group_id_40322) *
                segmap_group_sizze_34513 + sext_i32_i64(local_tid_40316);
        
        if (slt64(gtid_34494, m_27809)) {
            for (int64_t i_38643 = 0; i_38643 < N_27808; i_38643++) {
                float defunc_0_f_res_34520;
                float redout_38645 = 0.0F;
                
                for (int32_t i_38672 = 0; i_38672 < k2p2zq_27826; i_38672++) {
                    int64_t i_38646 = sext_i32_i64(i_38672);
                    float x_34524 = ((__global float *) mem_39219)[i_38646 *
                                                                   m_27809 +
                                                                   gtid_34494];
                    float x_34525 = ((__global float *) mem_38698)[i_38643 *
                                                                   i32_res_27828 +
                                                                   i_38646];
                    float defunc_1_f_res_34526 = x_34524 * x_34525;
                    float defunc_1_op_res_34523 = defunc_1_f_res_34526 +
                          redout_38645;
                    float redout_tmp_40324 = defunc_1_op_res_34523;
                    
                    redout_38645 = redout_tmp_40324;
                }
                defunc_0_f_res_34520 = redout_38645;
                ((__global float *) mem_39222)[phys_tid_34495 + i_38643 *
                                               (num_groups_34514 *
                                                segmap_group_sizze_34513)] =
                    defunc_0_f_res_34520;
            }
            for (int64_t i_40325 = 0; i_40325 < N_27808; i_40325++) {
                ((__global float *) mem_39237)[i_40325 * m_27809 + gtid_34494] =
                    ((__global float *) mem_39222)[phys_tid_34495 + i_40325 *
                                                   (num_groups_34514 *
                                                    segmap_group_sizze_34513)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34513
}
__kernel void mainzisegmap_34775(__global int *global_failure, int64_t N_27808,
                                 int64_t m_27809, __global
                                 unsigned char *mem_39443, __global
                                 unsigned char *mem_39446, __global
                                 unsigned char *mem_39469, __global
                                 unsigned char *mem_39472)
{
    #define segmap_group_sizze_34941 (mainzisegmap_group_sizze_34778)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40542;
    int32_t local_tid_40543;
    int64_t group_sizze_40546;
    int32_t wave_sizze_40545;
    int32_t group_tid_40544;
    
    global_tid_40542 = get_global_id(0);
    local_tid_40543 = get_local_id(0);
    group_sizze_40546 = get_local_size(0);
    wave_sizze_40545 = LOCKSTEP_WIDTH;
    group_tid_40544 = get_group_id(0);
    
    int32_t phys_tid_34775;
    
    phys_tid_34775 = global_tid_40542;
    
    int64_t gtid_34773;
    
    gtid_34773 = squot64(sext_i32_i64(group_tid_40544) *
                         segmap_group_sizze_34941 +
                         sext_i32_i64(local_tid_40543), N_27808);
    
    int64_t gtid_34774;
    
    gtid_34774 = sext_i32_i64(group_tid_40544) * segmap_group_sizze_34941 +
        sext_i32_i64(local_tid_40543) - squot64(sext_i32_i64(group_tid_40544) *
                                                segmap_group_sizze_34941 +
                                                sext_i32_i64(local_tid_40543),
                                                N_27808) * N_27808;
    if (slt64(gtid_34773, m_27809) && slt64(gtid_34774, N_27808)) {
        float x_34949 = ((__global float *) mem_39472)[gtid_34773 * N_27808 +
                                                       gtid_34774];
        int32_t index_primexp_36713 = sext_i64_i32(gtid_34774);
        bool isnan_res_34952;
        
        isnan_res_34952 = futrts_isnan32(x_34949);
        
        bool defunc_0_p_res_34953 = !isnan_res_34952;
        int64_t defunc_1_f_res_34954;
        
        if (defunc_0_p_res_34953) {
            int64_t x_34950 = ((__global int64_t *) mem_39469)[gtid_34773 *
                                                               N_27808 +
                                                               gtid_34774];
            int64_t defunc_1_f_res_t_res_34955 = sub64(x_34950, 1);
            
            defunc_1_f_res_34954 = defunc_1_f_res_t_res_34955;
        } else {
            defunc_1_f_res_34954 = -1;
        }
        if ((sle64(0, gtid_34773) && slt64(gtid_34773, m_27809)) && (sle64(0,
                                                                           defunc_1_f_res_34954) &&
                                                                     slt64(defunc_1_f_res_34954,
                                                                           N_27808))) {
            ((__global int32_t *) mem_39446)[gtid_34773 * N_27808 +
                                             defunc_1_f_res_34954] =
                index_primexp_36713;
        }
        if ((sle64(0, gtid_34773) && slt64(gtid_34773, m_27809)) && (sle64(0,
                                                                           defunc_1_f_res_34954) &&
                                                                     slt64(defunc_1_f_res_34954,
                                                                           N_27808))) {
            ((__global float *) mem_39443)[gtid_34773 * N_27808 +
                                           defunc_1_f_res_34954] = x_34949;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34941
}
__kernel void mainzisegmap_34851(__global int *global_failure, int64_t N_27808,
                                 int64_t m_27809, int64_t i_28088, __global
                                 unsigned char *mem_39469, __global
                                 unsigned char *mem_39475)
{
    #define segmap_group_sizze_34905 (mainzisegmap_group_sizze_34853)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40537;
    int32_t local_tid_40538;
    int64_t group_sizze_40541;
    int32_t wave_sizze_40540;
    int32_t group_tid_40539;
    
    global_tid_40537 = get_global_id(0);
    local_tid_40538 = get_local_id(0);
    group_sizze_40541 = get_local_size(0);
    wave_sizze_40540 = LOCKSTEP_WIDTH;
    group_tid_40539 = get_group_id(0);
    
    int32_t phys_tid_34851;
    
    phys_tid_34851 = global_tid_40537;
    
    int64_t gtid_34850;
    
    gtid_34850 = sext_i32_i64(group_tid_40539) * segmap_group_sizze_34905 +
        sext_i32_i64(local_tid_40538);
    if (slt64(gtid_34850, m_27809)) {
        int64_t last_res_34909 = ((__global int64_t *) mem_39469)[gtid_34850 *
                                                                  N_27808 +
                                                                  i_28088];
        int32_t defunc_0_f_res_34910 = sext_i64_i32(last_res_34909);
        
        ((__global int32_t *) mem_39475)[gtid_34850] = defunc_0_f_res_34910;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34905
}
__kernel void mainzisegmap_35102(__global int *global_failure, int64_t m_27809,
                                 float hfrac_27815, int32_t k2p2_27824, __global
                                 unsigned char *mem_39529, __global
                                 unsigned char *mem_39532, __global
                                 unsigned char *mem_39535, __global
                                 unsigned char *mem_39537)
{
    #define segmap_group_sizze_35187 (mainzisegmap_group_sizze_35104)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40697;
    int32_t local_tid_40698;
    int64_t group_sizze_40701;
    int32_t wave_sizze_40700;
    int32_t group_tid_40699;
    
    global_tid_40697 = get_global_id(0);
    local_tid_40698 = get_local_id(0);
    group_sizze_40701 = get_local_size(0);
    wave_sizze_40700 = LOCKSTEP_WIDTH;
    group_tid_40699 = get_group_id(0);
    
    int32_t phys_tid_35102;
    
    phys_tid_35102 = global_tid_40697;
    
    int64_t gtid_35101;
    
    gtid_35101 = sext_i32_i64(group_tid_40699) * segmap_group_sizze_35187 +
        sext_i32_i64(local_tid_40698);
    if (slt64(gtid_35101, m_27809)) {
        int32_t defunc_0_f_res_35191 = ((__global
                                         int32_t *) mem_39529)[gtid_35101];
        float defunc_0_f_res_35192 = ((__global float *) mem_39532)[gtid_35101];
        int32_t r32_arg_35193 = sub32(defunc_0_f_res_35191, k2p2_27824);
        float i32_res_35194 = sitofp_i32_f32(r32_arg_35193);
        float sqrt_arg_35195 = defunc_0_f_res_35192 / i32_res_35194;
        float sqrt_res_35196;
        
        sqrt_res_35196 = futrts_sqrt32(sqrt_arg_35195);
        
        float i32_res_35197 = sitofp_i32_f32(defunc_0_f_res_35191);
        float t32_arg_35198 = hfrac_27815 * i32_res_35197;
        int32_t f32_res_35199 = fptosi_f32_i32(t32_arg_35198);
        
        ((__global int32_t *) mem_39535)[gtid_35101] = f32_res_35199;
        ((__global float *) mem_39537)[gtid_35101] = sqrt_res_35196;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35187
}
__kernel void mainzisegmap_35373(__global int *global_failure, float lam_27816,
                                 int64_t iota32_arg_28208, int32_t x_28213,
                                 float i32_res_28221, __global
                                 unsigned char *mappingindices_mem_38681,
                                 __global unsigned char *mem_39579, __global
                                 unsigned char *mem_39581)
{
    #define segmap_group_sizze_35392 (mainzisegmap_group_sizze_35375)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40807;
    int32_t local_tid_40808;
    int64_t group_sizze_40811;
    int32_t wave_sizze_40810;
    int32_t group_tid_40809;
    
    global_tid_40807 = get_global_id(0);
    local_tid_40808 = get_local_id(0);
    group_sizze_40811 = get_local_size(0);
    wave_sizze_40810 = LOCKSTEP_WIDTH;
    group_tid_40809 = get_group_id(0);
    
    int32_t phys_tid_35373;
    
    phys_tid_35373 = global_tid_40807;
    
    int64_t gtid_35372;
    
    gtid_35372 = sext_i32_i64(group_tid_40809) * segmap_group_sizze_35392 +
        sext_i32_i64(local_tid_40808);
    if (slt64(gtid_35372, iota32_arg_28208)) {
        int32_t defunc_0_f_res_35397 = sext_i64_i32(gtid_35372);
        int32_t t_35398 = add32(x_28213, defunc_0_f_res_35397);
        int32_t i_35399 = sub32(t_35398, 1);
        int64_t i_35400 = sext_i32_i64(i_35399);
        int32_t time_35401 = ((__global
                               int32_t *) mappingindices_mem_38681)[i_35400];
        float i32_res_35402 = sitofp_i32_f32(time_35401);
        float logplus_arg_35403 = i32_res_35402 / i32_res_28221;
        bool cond_35404 = 2.7182817F < logplus_arg_35403;
        float logplus_res_35405;
        
        if (cond_35404) {
            float log_res_35406;
            
            log_res_35406 = futrts_log32(logplus_arg_35403);
            logplus_res_35405 = log_res_35406;
        } else {
            logplus_res_35405 = 1.0F;
        }
        
        float sqrt_res_35407;
        
        sqrt_res_35407 = futrts_sqrt32(logplus_res_35405);
        
        float defunc_0_f_res_35408 = lam_27816 * sqrt_res_35407;
        
        ((__global int32_t *) mem_39579)[gtid_35372] = defunc_0_f_res_35397;
        ((__global float *) mem_39581)[gtid_35372] = defunc_0_f_res_35408;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35392
}
__kernel void mainzisegmap_36054(__global int *global_failure,
                                 int failure_is_an_option, __global
                                 int64_t *global_failure_args, int64_t N_27808,
                                 int64_t m_27809, int32_t n_27813,
                                 int64_t iota32_arg_28208,
                                 int64_t distance_28240,
                                 int64_t segmap_usable_groups_36567, __global
                                 unsigned char *defunc_4_map_res_mem_39477,
                                 __global
                                 unsigned char *defunc_4_map_res_mem_39479,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_39542,
                                 __global unsigned char *mem_39624, __global
                                 unsigned char *mem_39638, __global
                                 unsigned char *mem_39640, __global
                                 unsigned char *mem_39649, __global
                                 unsigned char *mem_39660, __global
                                 unsigned char *mem_39680, __global
                                 unsigned char *mem_39682)
{
    #define segmap_group_sizze_36566 (mainzisegmap_group_sizze_36056)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_41016;
    int32_t local_tid_41017;
    int64_t group_sizze_41020;
    int32_t wave_sizze_41019;
    int32_t group_tid_41018;
    
    global_tid_41016 = get_global_id(0);
    local_tid_41017 = get_local_id(0);
    group_sizze_41020 = get_local_size(0);
    wave_sizze_41019 = LOCKSTEP_WIDTH;
    group_tid_41018 = get_group_id(0);
    
    int32_t phys_tid_36054;
    
    phys_tid_36054 = global_tid_41016;
    
    int64_t gtid_36053;
    
    gtid_36053 = sext_i32_i64(group_tid_41018) * segmap_group_sizze_36566 +
        sext_i32_i64(local_tid_41017);
    if (slt64(gtid_36053, m_27809)) {
        int32_t x_36570 = ((__global
                            int32_t *) defunc_4_map_res_mem_39477)[gtid_36053];
        int32_t x_36571 = ((__global
                            int32_t *) defunc_3_map_res_mem_39542)[gtid_36053];
        int32_t y_36573 = ((__global int32_t *) mem_39624)[gtid_36053];
        bool defunc_0_f_res_36574 = ((__global bool *) mem_39638)[gtid_36053];
        
        for (int64_t i_41021 = 0; i_41021 < iota32_arg_28208; i_41021++) {
            ((__global float *) mem_39660)[phys_tid_36054 + i_41021 *
                                           (segmap_usable_groups_36567 *
                                            segmap_group_sizze_36566)] =
                ((__global float *) mem_39649)[gtid_36053 + i_41021 * m_27809];
        }
        for (int64_t i_36578 = 0; i_36578 < distance_28240; i_36578++) {
            int64_t index_primexp_36580 = add64(1, i_36578);
            bool cond_36581 = slt64(0, index_primexp_36580);
            bool loop_cond_36582;
            
            if (cond_36581) {
                bool x_36583 = sle64(0, index_primexp_36580);
                bool y_36584 = slt64(index_primexp_36580, iota32_arg_28208);
                bool bounds_check_36585 = x_36583 && y_36584;
                bool index_certs_36586;
                
                if (!bounds_check_36585) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 13) ==
                            -1) {
                            global_failure_args[0] = index_primexp_36580;
                            global_failure_args[1] = iota32_arg_28208;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_2_lifted_gt_arg_36587 = ((__global
                                                       float *) mem_39660)[phys_tid_36054 +
                                                                           index_primexp_36580 *
                                                                           (segmap_usable_groups_36567 *
                                                                            segmap_group_sizze_36566)];
                bool y_36588 = slt64(i_36578, iota32_arg_28208);
                bool index_certs_36589;
                
                if (!y_36588) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 14) ==
                            -1) {
                            global_failure_args[0] = i_36578;
                            global_failure_args[1] = iota32_arg_28208;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_1_lifted_gt_arg_36590 = ((__global
                                                       float *) mem_39660)[phys_tid_36054 +
                                                                           i_36578 *
                                                                           (segmap_usable_groups_36567 *
                                                                            segmap_group_sizze_36566)];
                bool defunc_1_zlze_res_36591 = defunc_1_lifted_gt_arg_36590 <=
                     defunc_2_lifted_gt_arg_36587;
                bool defunc_2_lifted_gt_res_36592 = !defunc_1_zlze_res_36591;
                
                loop_cond_36582 = defunc_2_lifted_gt_res_36592;
            } else {
                loop_cond_36582 = 0;
            }
            
            bool xszq_36593;
            int64_t xszq_36594;
            bool loop_while_36596;
            int64_t j_36597;
            
            loop_while_36596 = loop_cond_36582;
            j_36597 = index_primexp_36580;
            while (loop_while_36596) {
                int64_t loopres_36599 = sub64(j_36597, 1);
                bool x_36600 = sle64(0, j_36597);
                bool y_36601 = slt64(j_36597, iota32_arg_28208);
                bool bounds_check_36602 = x_36600 && y_36601;
                bool index_certs_36603;
                
                if (!bounds_check_36602) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 15) ==
                            -1) {
                            global_failure_args[0] = j_36597;
                            global_failure_args[1] = iota32_arg_28208;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_36604 = ((__global
                                         float *) mem_39660)[phys_tid_36054 +
                                                             j_36597 *
                                                             (segmap_usable_groups_36567 *
                                                              segmap_group_sizze_36566)];
                bool x_36605 = sle64(0, loopres_36599);
                bool y_36606 = slt64(loopres_36599, iota32_arg_28208);
                bool bounds_check_36607 = x_36605 && y_36606;
                bool index_certs_36608;
                
                if (!bounds_check_36607) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 16) ==
                            -1) {
                            global_failure_args[0] = loopres_36599;
                            global_failure_args[1] = iota32_arg_28208;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_36609 = ((__global
                                         float *) mem_39660)[phys_tid_36054 +
                                                             loopres_36599 *
                                                             (segmap_usable_groups_36567 *
                                                              segmap_group_sizze_36566)];
                
                ((__global float *) mem_39660)[phys_tid_36054 + j_36597 *
                                               (segmap_usable_groups_36567 *
                                                segmap_group_sizze_36566)] =
                    copy_arg_36609;
                ((__global float *) mem_39660)[phys_tid_36054 + loopres_36599 *
                                               (segmap_usable_groups_36567 *
                                                segmap_group_sizze_36566)] =
                    copy_arg_36604;
                
                bool cond_36612 = slt64(0, loopres_36599);
                bool loop_cond_36613;
                
                if (cond_36612) {
                    bool index_certs_36614;
                    
                    if (!bounds_check_36607) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          17) == -1) {
                                global_failure_args[0] = loopres_36599;
                                global_failure_args[1] = iota32_arg_28208;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_2_lifted_gt_arg_36615 = ((__global
                                                           float *) mem_39660)[phys_tid_36054 +
                                                                               loopres_36599 *
                                                                               (segmap_usable_groups_36567 *
                                                                                segmap_group_sizze_36566)];
                    int64_t i_36616 = sub64(loopres_36599, 1);
                    bool x_36617 = sle64(0, i_36616);
                    bool y_36618 = slt64(i_36616, iota32_arg_28208);
                    bool bounds_check_36619 = x_36617 && y_36618;
                    bool index_certs_36620;
                    
                    if (!bounds_check_36619) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          18) == -1) {
                                global_failure_args[0] = i_36616;
                                global_failure_args[1] = iota32_arg_28208;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_1_lifted_gt_arg_36621 = ((__global
                                                           float *) mem_39660)[phys_tid_36054 +
                                                                               i_36616 *
                                                                               (segmap_usable_groups_36567 *
                                                                                segmap_group_sizze_36566)];
                    bool defunc_1_zlze_res_36622 =
                         defunc_1_lifted_gt_arg_36621 <=
                         defunc_2_lifted_gt_arg_36615;
                    bool defunc_2_lifted_gt_res_36623 =
                         !defunc_1_zlze_res_36622;
                    
                    loop_cond_36613 = defunc_2_lifted_gt_res_36623;
                } else {
                    loop_cond_36613 = 0;
                }
                
                bool loop_while_tmp_41023 = loop_cond_36613;
                int64_t j_tmp_41024 = loopres_36599;
                
                loop_while_36596 = loop_while_tmp_41023;
                j_36597 = j_tmp_41024;
            }
            xszq_36593 = loop_while_36596;
            xszq_36594 = j_36597;
        }
        
        int32_t i_36624 = sdiv32(y_36573, 2);
        int32_t j_36625 = sub32(i_36624, 1);
        bool cond_36626 = x_36570 == x_36571;
        float defunc_0_f_res_36627;
        
        if (cond_36626) {
            defunc_0_f_res_36627 = 0.0F;
        } else {
            int32_t x_36628 = smod32(y_36573, 2);
            bool cond_36629 = x_36628 == 0;
            float defunc_0_f_res_f_res_36630;
            
            if (cond_36629) {
                int64_t j_36631 = sext_i32_i64(j_36625);
                bool x_36632 = sle64(0, j_36631);
                bool y_36633 = slt64(j_36631, iota32_arg_28208);
                bool bounds_check_36634 = x_36632 && y_36633;
                bool index_certs_36635;
                
                if (!bounds_check_36634) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 19) ==
                            -1) {
                            global_failure_args[0] = j_36631;
                            global_failure_args[1] = iota32_arg_28208;
                            ;
                        }
                        return;
                    }
                }
                
                float x_36636 = ((__global float *) mem_39660)[phys_tid_36054 +
                                                               j_36631 *
                                                               (segmap_usable_groups_36567 *
                                                                segmap_group_sizze_36566)];
                int64_t i_36637 = sext_i32_i64(i_36624);
                bool x_36638 = sle64(0, i_36637);
                bool y_36639 = slt64(i_36637, iota32_arg_28208);
                bool bounds_check_36640 = x_36638 && y_36639;
                bool index_certs_36641;
                
                if (!bounds_check_36640) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 20) ==
                            -1) {
                            global_failure_args[0] = i_36637;
                            global_failure_args[1] = iota32_arg_28208;
                            ;
                        }
                        return;
                    }
                }
                
                float y_36642 = ((__global float *) mem_39660)[phys_tid_36054 +
                                                               i_36637 *
                                                               (segmap_usable_groups_36567 *
                                                                segmap_group_sizze_36566)];
                float x_36643 = x_36636 + y_36642;
                float defunc_0_f_res_f_res_t_res_36644 = x_36643 / 2.0F;
                
                defunc_0_f_res_f_res_36630 = defunc_0_f_res_f_res_t_res_36644;
            } else {
                int64_t i_36645 = sext_i32_i64(i_36624);
                bool x_36646 = sle64(0, i_36645);
                bool y_36647 = slt64(i_36645, iota32_arg_28208);
                bool bounds_check_36648 = x_36646 && y_36647;
                bool index_certs_36649;
                
                if (!bounds_check_36648) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 21) ==
                            -1) {
                            global_failure_args[0] = i_36645;
                            global_failure_args[1] = iota32_arg_28208;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_0_f_res_f_res_f_res_36650 = ((__global
                                                           float *) mem_39660)[phys_tid_36054 +
                                                                               i_36645 *
                                                                               (segmap_usable_groups_36567 *
                                                                                segmap_group_sizze_36566)];
                
                defunc_0_f_res_f_res_36630 = defunc_0_f_res_f_res_f_res_36650;
            }
            defunc_0_f_res_36627 = defunc_0_f_res_f_res_36630;
        }
        
        bool cond_36651 = !defunc_0_f_res_36574;
        int32_t fst_breakzq_36652;
        
        if (cond_36651) {
            fst_breakzq_36652 = -1;
        } else {
            int32_t defunc_0_f_res_36575 = ((__global
                                             int32_t *) mem_39640)[gtid_36053];
            bool cond_36653 = slt32(defunc_0_f_res_36575, y_36573);
            int32_t adjustValInds_res_36654;
            
            if (cond_36653) {
                int32_t i_36655 = add32(x_36571, defunc_0_f_res_36575);
                int64_t i_36656 = sext_i32_i64(i_36655);
                int32_t x_36657 = ((__global
                                    int32_t *) defunc_4_map_res_mem_39479)[gtid_36053 *
                                                                           N_27808 +
                                                                           i_36656];
                int32_t adjustValInds_res_t_res_36658 = sub32(x_36657, n_27813);
                
                adjustValInds_res_36654 = adjustValInds_res_t_res_36658;
            } else {
                adjustValInds_res_36654 = -1;
            }
            fst_breakzq_36652 = adjustValInds_res_36654;
        }
        
        bool cond_36659 = sle32(x_36571, 5);
        bool cond_f_res_36660 = sle32(y_36573, 5);
        bool x_36661 = !cond_36659;
        bool y_36662 = cond_f_res_36660 && x_36661;
        bool cond_36663 = cond_36659 || y_36662;
        int32_t fst_breakzq_36664;
        
        if (cond_36663) {
            fst_breakzq_36664 = -2;
        } else {
            fst_breakzq_36664 = fst_breakzq_36652;
        }
        ((__global int32_t *) mem_39680)[gtid_36053] = fst_breakzq_36664;
        ((__global float *) mem_39682)[gtid_36053] = defunc_0_f_res_36627;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36566
}
__kernel void mainzisegmap_36192(__global int *global_failure,
                                 int failure_is_an_option, __global
                                 int64_t *global_failure_args, int64_t N_27808,
                                 int64_t m_27809, int64_t iota32_arg_28208,
                                 __global
                                 unsigned char *defunc_4_map_res_mem_39478,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_39542,
                                 __global unsigned char *mem_39624, __global
                                 unsigned char *mem_39646)
{
    #define segmap_group_sizze_36537 (mainzisegmap_group_sizze_36195)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_41011;
    int32_t local_tid_41012;
    int64_t group_sizze_41015;
    int32_t wave_sizze_41014;
    int32_t group_tid_41013;
    
    global_tid_41011 = get_global_id(0);
    local_tid_41012 = get_local_id(0);
    group_sizze_41015 = get_local_size(0);
    wave_sizze_41014 = LOCKSTEP_WIDTH;
    group_tid_41013 = get_group_id(0);
    
    int32_t phys_tid_36192;
    
    phys_tid_36192 = global_tid_41011;
    
    int64_t gtid_36190;
    
    gtid_36190 = squot64(sext_i32_i64(group_tid_41013) *
                         segmap_group_sizze_36537 +
                         sext_i32_i64(local_tid_41012), iota32_arg_28208);
    
    int64_t gtid_36191;
    
    gtid_36191 = sext_i32_i64(group_tid_41013) * segmap_group_sizze_36537 +
        sext_i32_i64(local_tid_41012) - squot64(sext_i32_i64(group_tid_41013) *
                                                segmap_group_sizze_36537 +
                                                sext_i32_i64(local_tid_41012),
                                                iota32_arg_28208) *
        iota32_arg_28208;
    if (slt64(gtid_36190, m_27809) && slt64(gtid_36191, iota32_arg_28208)) {
        int32_t x_36540 = ((__global
                            int32_t *) defunc_3_map_res_mem_39542)[gtid_36190];
        int32_t y_36542 = ((__global int32_t *) mem_39624)[gtid_36190];
        int32_t index_primexp_36746 = sext_i64_i32(gtid_36191);
        bool cond_36544 = slt32(index_primexp_36746, y_36542);
        bool cond_36545;
        
        if (cond_36544) {
            int32_t i_36546 = add32(x_36540, index_primexp_36746);
            int64_t i_36547 = sext_i32_i64(i_36546);
            bool x_36548 = sle64(0, i_36547);
            bool y_36549 = slt64(i_36547, N_27808);
            bool bounds_check_36550 = x_36548 && y_36549;
            bool index_certs_36551;
            
            if (!bounds_check_36550) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 11) ==
                        -1) {
                        global_failure_args[0] = i_36547;
                        global_failure_args[1] = N_27808;
                        ;
                    }
                    return;
                }
            }
            
            float isnan_arg_36552 = ((__global
                                      float *) defunc_4_map_res_mem_39478)[gtid_36190 *
                                                                           N_27808 +
                                                                           i_36547];
            bool isnan_res_36553;
            
            isnan_res_36553 = futrts_isnan32(isnan_arg_36552);
            
            bool cond_t_res_36554 = !isnan_res_36553;
            
            cond_36545 = cond_t_res_36554;
        } else {
            cond_36545 = 0;
        }
        
        float defunc_0_f_res_36555;
        
        if (cond_36545) {
            int32_t i_36556 = add32(x_36540, index_primexp_36746);
            int64_t i_36557 = sext_i32_i64(i_36556);
            bool x_36558 = sle64(0, i_36557);
            bool y_36559 = slt64(i_36557, N_27808);
            bool bounds_check_36560 = x_36558 && y_36559;
            bool index_certs_36561;
            
            if (!bounds_check_36560) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 12) ==
                        -1) {
                        global_failure_args[0] = i_36557;
                        global_failure_args[1] = N_27808;
                        ;
                    }
                    return;
                }
            }
            
            float defunc_0_f_res_t_res_36562 = ((__global
                                                 float *) defunc_4_map_res_mem_39478)[gtid_36190 *
                                                                                      N_27808 +
                                                                                      i_36557];
            
            defunc_0_f_res_36555 = defunc_0_f_res_t_res_36562;
        } else {
            defunc_0_f_res_36555 = INFINITY;
        }
        ((__global float *) mem_39646)[gtid_36190 * iota32_arg_28208 +
                                       gtid_36191] = defunc_0_f_res_36555;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36537
}
__kernel void mainzisegmap_36254(__global int *global_failure, int64_t m_27809,
                                 __global unsigned char *mem_39624, __global
                                 unsigned char *mem_39631, __global
                                 unsigned char *mem_39633, __global
                                 unsigned char *mem_39635, __global
                                 unsigned char *mem_39638, __global
                                 unsigned char *mem_39640, __global
                                 unsigned char *mem_39642)
{
    #define segmap_group_sizze_36502 (mainzisegmap_group_sizze_36256)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_41006;
    int32_t local_tid_41007;
    int64_t group_sizze_41010;
    int32_t wave_sizze_41009;
    int32_t group_tid_41008;
    
    global_tid_41006 = get_global_id(0);
    local_tid_41007 = get_local_id(0);
    group_sizze_41010 = get_local_size(0);
    wave_sizze_41009 = LOCKSTEP_WIDTH;
    group_tid_41008 = get_group_id(0);
    
    int32_t phys_tid_36254;
    
    phys_tid_36254 = global_tid_41006;
    
    int64_t gtid_36253;
    
    gtid_36253 = sext_i32_i64(group_tid_41008) * segmap_group_sizze_36502 +
        sext_i32_i64(local_tid_41007);
    if (slt64(gtid_36253, m_27809)) {
        int32_t y_36507 = ((__global int32_t *) mem_39624)[gtid_36253];
        bool acc0_36509 = ((__global bool *) mem_39631)[gtid_36253];
        bool x_36514 = acc0_36509 && acc0_36509;
        int32_t defunc_1_op_res_f_res_36518;
        
        if (acc0_36509) {
            int32_t acc0_36510 = ((__global int32_t *) mem_39633)[gtid_36253];
            
            defunc_1_op_res_f_res_36518 = acc0_36510;
        } else {
            defunc_1_op_res_f_res_36518 = -1;
        }
        
        bool cond_36524 = y_36507 == 0;
        float defunc_0_f_res_36525;
        
        if (cond_36524) {
            defunc_0_f_res_36525 = 0.0F;
        } else {
            float acc0_36511 = ((__global float *) mem_39635)[gtid_36253];
            float i32_res_36526 = sitofp_i32_f32(y_36507);
            float defunc_0_f_res_f_res_36527 = acc0_36511 / i32_res_36526;
            
            defunc_0_f_res_36525 = defunc_0_f_res_f_res_36527;
        }
        ((__global bool *) mem_39638)[gtid_36253] = x_36514;
        ((__global int32_t *) mem_39640)[gtid_36253] =
            defunc_1_op_res_f_res_36518;
        ((__global float *) mem_39642)[gtid_36253] = defunc_0_f_res_36525;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36502
}
__kernel void mainzisegmap_36380(__global int *global_failure, int64_t m_27809,
                                 int64_t num_groups_36403, __global
                                 unsigned char *defunc_4_map_res_mem_39477,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_39542,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_39543,
                                 __global unsigned char *mem_39622, __global
                                 unsigned char *mem_39624)
{
    #define segmap_group_sizze_36402 (mainzisegmap_group_sizze_36382)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40844;
    int32_t local_tid_40845;
    int64_t group_sizze_40848;
    int32_t wave_sizze_40847;
    int32_t group_tid_40846;
    
    global_tid_40844 = get_global_id(0);
    local_tid_40845 = get_local_id(0);
    group_sizze_40848 = get_local_size(0);
    wave_sizze_40847 = LOCKSTEP_WIDTH;
    group_tid_40846 = get_group_id(0);
    
    int32_t phys_tid_36380;
    
    phys_tid_36380 = global_tid_40844;
    
    int32_t phys_group_id_40849;
    
    phys_group_id_40849 = get_group_id(0);
    for (int32_t i_40850 = 0; i_40850 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27809, segmap_group_sizze_36402)) -
                   phys_group_id_40849, sext_i64_i32(num_groups_36403));
         i_40850++) {
        int32_t virt_group_id_40851 = phys_group_id_40849 + i_40850 *
                sext_i64_i32(num_groups_36403);
        int64_t gtid_36379 = sext_i32_i64(virt_group_id_40851) *
                segmap_group_sizze_36402 + sext_i32_i64(local_tid_40845);
        
        if (slt64(gtid_36379, m_27809)) {
            int32_t x_36409 = ((__global
                                int32_t *) defunc_4_map_res_mem_39477)[gtid_36379];
            int32_t x_36410 = ((__global
                                int32_t *) defunc_3_map_res_mem_39542)[gtid_36379];
            float x_36411 = ((__global
                              float *) defunc_3_map_res_mem_39543)[gtid_36379];
            int32_t y_36412 = sub32(x_36409, x_36410);
            float i32_res_36413 = sitofp_i32_f32(x_36410);
            float sqrt_res_36414;
            
            sqrt_res_36414 = futrts_sqrt32(i32_res_36413);
            
            float y_36415 = x_36411 * sqrt_res_36414;
            
            ((__global float *) mem_39622)[gtid_36379] = y_36415;
            ((__global int32_t *) mem_39624)[gtid_36379] = y_36412;
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36402
}
__kernel void mainzisegmap_intragroup_33480(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_38864_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_38854_backing_aligned_1,
                                            int32_t k2p2zq_27826,
                                            int64_t i32_res_27828,
                                            int32_t m_27959,
                                            int64_t i32_res_27961,
                                            int64_t i32_res_27976, __global
                                            unsigned char *defunc_3_map_res_mem_38850,
                                            __global unsigned char *mem_38874)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_38864_backing_1 = (__local volatile
                                                           char *) mem_38864_backing_aligned_0;
    __local volatile char *restrict mem_38854_backing_0 = (__local volatile
                                                           char *) mem_38854_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40030;
    int32_t local_tid_40031;
    int64_t group_sizze_40034;
    int32_t wave_sizze_40033;
    int32_t group_tid_40032;
    
    global_tid_40030 = get_global_id(0);
    local_tid_40031 = get_local_id(0);
    group_sizze_40034 = get_local_size(0);
    wave_sizze_40033 = LOCKSTEP_WIDTH;
    group_tid_40032 = get_group_id(0);
    
    int32_t phys_tid_33480;
    
    phys_tid_33480 = group_tid_40032;
    
    int32_t ltid_pre_40035;
    
    ltid_pre_40035 = local_tid_40031;
    
    int64_t gtid_33435;
    
    gtid_33435 = sext_i32_i64(group_tid_40032);
    
    __local char *mem_38854;
    
    mem_38854 = (__local char *) mem_38854_backing_0;
    
    int64_t gtid_33438 = sext_i32_i64(ltid_pre_40035);
    int32_t phys_tid_33439 = local_tid_40031;
    int32_t index_primexp_36690 = sext_i64_i32(gtid_33438);
    int32_t defunc_0_f_res_33605 = sdiv32(index_primexp_36690, m_27959);
    int32_t defunc_0_f_res_33606 = smod32(index_primexp_36690, m_27959);
    bool cond_33607 = slt32(defunc_0_f_res_33606, k2p2zq_27826);
    float defunc_0_f_res_33608;
    
    if (cond_33607) {
        int64_t i_33609 = sext_i32_i64(defunc_0_f_res_33605);
        int64_t j_33610 = sext_i32_i64(defunc_0_f_res_33606);
        float defunc_0_f_res_t_res_33611 = ((__global
                                             float *) defunc_3_map_res_mem_38850)[gtid_33435 *
                                                                                  (i32_res_27828 *
                                                                                   i32_res_27828) +
                                                                                  i_33609 *
                                                                                  i32_res_27828 +
                                                                                  j_33610];
        
        defunc_0_f_res_33608 = defunc_0_f_res_t_res_33611;
    } else {
        int32_t y_33612 = add32(k2p2zq_27826, defunc_0_f_res_33605);
        bool cond_33613 = defunc_0_f_res_33606 == y_33612;
        float defunc_0_f_res_f_res_33614;
        
        if (cond_33613) {
            defunc_0_f_res_f_res_33614 = 1.0F;
        } else {
            defunc_0_f_res_f_res_33614 = 0.0F;
        }
        defunc_0_f_res_33608 = defunc_0_f_res_f_res_33614;
    }
    ((__local float *) mem_38854)[gtid_33438] = defunc_0_f_res_33608;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_38864;
    
    mem_38864 = (__local char *) mem_38864_backing_1;
    for (int32_t i_33616 = 0; i_33616 < k2p2zq_27826; i_33616++) {
        int64_t i32_res_33618 = sext_i32_i64(i_33616);
        float v1_33619 = ((__local float *) mem_38854)[i32_res_33618];
        bool cond_33620 = v1_33619 == 0.0F;
        int64_t gtid_33451 = sext_i32_i64(ltid_pre_40035);
        int32_t phys_tid_33452 = local_tid_40031;
        int32_t defunc_0_f_res_33623 = sext_i64_i32(gtid_33451);
        int32_t defunc_0_f_res_33624 = sdiv32(defunc_0_f_res_33623, m_27959);
        int32_t defunc_0_f_res_33625 = smod32(defunc_0_f_res_33623, m_27959);
        float defunc_0_f_res_33626;
        
        if (cond_33620) {
            int32_t x_33627 = mul32(m_27959, defunc_0_f_res_33624);
            int32_t i32_arg_33628 = add32(defunc_0_f_res_33625, x_33627);
            int64_t i32_res_33629 = sext_i32_i64(i32_arg_33628);
            float defunc_0_f_res_t_res_33630 = ((__local
                                                 float *) mem_38854)[i32_res_33629];
            
            defunc_0_f_res_33626 = defunc_0_f_res_t_res_33630;
        } else {
            int64_t i32_res_33631 = sext_i32_i64(defunc_0_f_res_33625);
            float x_33632 = ((__local float *) mem_38854)[i32_res_33631];
            float x_33633 = x_33632 / v1_33619;
            int32_t y_33634 = sub32(k2p2zq_27826, 1);
            bool cond_33635 = slt32(defunc_0_f_res_33624, y_33634);
            float defunc_0_f_res_f_res_33636;
            
            if (cond_33635) {
                int32_t x_33637 = add32(1, defunc_0_f_res_33624);
                int32_t x_33638 = mul32(m_27959, x_33637);
                int32_t i32_arg_33639 = add32(defunc_0_f_res_33625, x_33638);
                int64_t i32_res_33640 = sext_i32_i64(i32_arg_33639);
                float x_33641 = ((__local float *) mem_38854)[i32_res_33640];
                int32_t i32_arg_33642 = add32(i_33616, x_33638);
                int64_t i32_res_33643 = sext_i32_i64(i32_arg_33642);
                float x_33644 = ((__local float *) mem_38854)[i32_res_33643];
                float y_33645 = x_33633 * x_33644;
                float defunc_0_f_res_f_res_t_res_33646 = x_33641 - y_33645;
                
                defunc_0_f_res_f_res_33636 = defunc_0_f_res_f_res_t_res_33646;
            } else {
                defunc_0_f_res_f_res_33636 = x_33633;
            }
            defunc_0_f_res_33626 = defunc_0_f_res_f_res_33636;
        }
        ((__local float *) mem_38864)[gtid_33451] = defunc_0_f_res_33626;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_33478 = sext_i32_i64(ltid_pre_40035);
        int32_t phys_tid_33479 = local_tid_40031;
        float write_value_33649 = ((__local float *) mem_38864)[write_i_33478];
        
        if (sle64(0, write_i_33478) && slt64(write_i_33478, i32_res_27961)) {
            ((__local float *) mem_38854)[write_i_33478] = write_value_33649;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    for (int64_t i_40037 = 0; i_40037 < sdiv_up64(i32_res_27828 *
                                                  i32_res_27828 -
                                                  sext_i32_i64(local_tid_40031),
                                                  i32_res_27961); i_40037++) {
        ((__global float *) mem_38874)[gtid_33435 * (i32_res_27828 *
                                                     i32_res_27828) +
                                       squot64(i_40037 * i32_res_27961 +
                                               sext_i32_i64(local_tid_40031),
                                               i32_res_27828) * i32_res_27828 +
                                       (i_40037 * i32_res_27961 +
                                        sext_i32_i64(local_tid_40031) -
                                        squot64(i_40037 * i32_res_27961 +
                                                sext_i32_i64(local_tid_40031),
                                                i32_res_27828) *
                                        i32_res_27828)] = ((__local
                                                            float *) mem_38854)[i32_res_27828 +
                                                                                (squot64(i_40037 *
                                                                                         i32_res_27961 +
                                                                                         sext_i32_i64(local_tid_40031),
                                                                                         i32_res_27828) *
                                                                                 i32_res_27976 +
                                                                                 (i_40037 *
                                                                                  i32_res_27961 +
                                                                                  sext_i32_i64(local_tid_40031) -
                                                                                  squot64(i_40037 *
                                                                                          i32_res_27961 +
                                                                                          sext_i32_i64(local_tid_40031),
                                                                                          i32_res_27828) *
                                                                                  i32_res_27828))];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_3:
    return;
}
__kernel void mainzisegmap_intragroup_33707(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_38895_backing_aligned_0,
                                            int64_t m_27809,
                                            int32_t k2p2zq_27826,
                                            int32_t m_27959,
                                            int64_t i32_res_27961,
                                            int32_t i_34102,
                                            int64_t i32_res_34104,
                                            int64_t ctx_param_ext_38881,
                                            int64_t ctx_param_ext_38882,
                                            int64_t ctx_param_ext_38884,
                                            __global
                                            unsigned char *mem_param_38886,
                                            __global unsigned char *mem_38891,
                                            __global unsigned char *mem_38899)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_38895_backing_0 = (__local volatile
                                                           char *) mem_38895_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40064;
    int32_t local_tid_40065;
    int64_t group_sizze_40068;
    int32_t wave_sizze_40067;
    int32_t group_tid_40066;
    
    global_tid_40064 = get_global_id(0);
    local_tid_40065 = get_local_id(0);
    group_sizze_40068 = get_local_size(0);
    wave_sizze_40067 = LOCKSTEP_WIDTH;
    group_tid_40066 = get_group_id(0);
    
    int32_t phys_tid_33707;
    
    phys_tid_33707 = group_tid_40066;
    
    int32_t ltid_pre_40069;
    
    ltid_pre_40069 = local_tid_40065;
    
    int64_t gtid_33675;
    
    gtid_33675 = sext_i32_i64(group_tid_40066);
    
    float v1_34117 = ((__global float *) mem_param_38886)[ctx_param_ext_38881 +
                                                          (gtid_33675 *
                                                           ctx_param_ext_38882 +
                                                           i32_res_34104 *
                                                           ctx_param_ext_38884)];
    bool cond_34118 = v1_34117 == 0.0F;
    __local char *mem_38895;
    
    mem_38895 = (__local char *) mem_38895_backing_0;
    
    int64_t gtid_33678 = sext_i32_i64(ltid_pre_40069);
    int32_t phys_tid_33679 = local_tid_40065;
    int32_t defunc_0_f_res_34121 = sext_i64_i32(gtid_33678);
    int32_t defunc_0_f_res_34122 = sdiv32(defunc_0_f_res_34121, m_27959);
    int32_t defunc_0_f_res_34123 = smod32(defunc_0_f_res_34121, m_27959);
    float defunc_0_f_res_34124;
    
    if (cond_34118) {
        int32_t x_34125 = mul32(m_27959, defunc_0_f_res_34122);
        int32_t i32_arg_34126 = add32(defunc_0_f_res_34123, x_34125);
        int64_t i32_res_34127 = sext_i32_i64(i32_arg_34126);
        float defunc_0_f_res_t_res_34128 = ((__global
                                             float *) mem_param_38886)[ctx_param_ext_38881 +
                                                                       (gtid_33675 *
                                                                        ctx_param_ext_38882 +
                                                                        i32_res_34127 *
                                                                        ctx_param_ext_38884)];
        
        defunc_0_f_res_34124 = defunc_0_f_res_t_res_34128;
    } else {
        int64_t i32_res_34129 = sext_i32_i64(defunc_0_f_res_34123);
        float x_34130 = ((__global
                          float *) mem_param_38886)[ctx_param_ext_38881 +
                                                    (gtid_33675 *
                                                     ctx_param_ext_38882 +
                                                     i32_res_34129 *
                                                     ctx_param_ext_38884)];
        float x_34131 = x_34130 / v1_34117;
        int32_t y_34132 = sub32(k2p2zq_27826, 1);
        bool cond_34133 = slt32(defunc_0_f_res_34122, y_34132);
        float defunc_0_f_res_f_res_34134;
        
        if (cond_34133) {
            int32_t x_34135 = add32(1, defunc_0_f_res_34122);
            int32_t x_34136 = mul32(m_27959, x_34135);
            int32_t i32_arg_34137 = add32(defunc_0_f_res_34123, x_34136);
            int64_t i32_res_34138 = sext_i32_i64(i32_arg_34137);
            float x_34139 = ((__global
                              float *) mem_param_38886)[ctx_param_ext_38881 +
                                                        (gtid_33675 *
                                                         ctx_param_ext_38882 +
                                                         i32_res_34138 *
                                                         ctx_param_ext_38884)];
            int32_t i32_arg_34140 = add32(i_34102, x_34136);
            int64_t i32_res_34141 = sext_i32_i64(i32_arg_34140);
            float x_34142 = ((__global
                              float *) mem_param_38886)[ctx_param_ext_38881 +
                                                        (gtid_33675 *
                                                         ctx_param_ext_38882 +
                                                         i32_res_34141 *
                                                         ctx_param_ext_38884)];
            float y_34143 = x_34131 * x_34142;
            float defunc_0_f_res_f_res_t_res_34144 = x_34139 - y_34143;
            
            defunc_0_f_res_f_res_34134 = defunc_0_f_res_f_res_t_res_34144;
        } else {
            defunc_0_f_res_f_res_34134 = x_34131;
        }
        defunc_0_f_res_34124 = defunc_0_f_res_f_res_34134;
    }
    ((__local float *) mem_38895)[gtid_33678] = defunc_0_f_res_34124;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_33705 = sext_i32_i64(ltid_pre_40069);
    int32_t phys_tid_33706 = local_tid_40065;
    float write_value_34147 = ((__local float *) mem_38895)[write_i_33705];
    
    if (sle64(0, write_i_33705) && slt64(write_i_33705, i32_res_27961)) {
        ((__global float *) mem_38891)[gtid_33675 + write_i_33705 * m_27809] =
            write_value_34147;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_40065 == 0) {
        for (int64_t i_40070 = 0; i_40070 < i32_res_27961; i_40070++) {
            ((__global float *) mem_38899)[gtid_33675 * i32_res_27961 +
                                           i_40070] = ((__global
                                                        float *) mem_38891)[gtid_33675 +
                                                                            i_40070 *
                                                                            m_27809];
        }
    }
    
  error_2:
    return;
}
__kernel void mainzisegmap_intragroup_34658(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_39456_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_39454_backing_aligned_1,
                                            __local volatile
                                            int64_t *mem_39452_backing_aligned_2,
                                            __local volatile
                                            int64_t *mem_39450_backing_aligned_3,
                                            int64_t N_27808, int64_t N_27810,
                                            int64_t i_28088, __global
                                            unsigned char *images_mem_38682,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_39440,
                                            __global unsigned char *mem_39459,
                                            __global unsigned char *mem_39462,
                                            __global unsigned char *mem_39465)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_39456_backing_3 = (__local volatile
                                                           char *) mem_39456_backing_aligned_0;
    __local volatile char *restrict mem_39454_backing_2 = (__local volatile
                                                           char *) mem_39454_backing_aligned_1;
    __local volatile char *restrict mem_39452_backing_1 = (__local volatile
                                                           char *) mem_39452_backing_aligned_2;
    __local volatile char *restrict mem_39450_backing_0 = (__local volatile
                                                           char *) mem_39450_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40464;
    int32_t local_tid_40465;
    int64_t group_sizze_40468;
    int32_t wave_sizze_40467;
    int32_t group_tid_40466;
    
    global_tid_40464 = get_global_id(0);
    local_tid_40465 = get_local_id(0);
    group_sizze_40468 = get_local_size(0);
    wave_sizze_40467 = LOCKSTEP_WIDTH;
    group_tid_40466 = get_group_id(0);
    
    int32_t phys_tid_34658;
    
    phys_tid_34658 = group_tid_40466;
    
    int32_t ltid_pre_40469;
    
    ltid_pre_40469 = local_tid_40465;
    
    int64_t gtid_34651;
    
    gtid_34651 = sext_i32_i64(group_tid_40466);
    
    __local char *mem_39450;
    
    mem_39450 = (__local char *) mem_39450_backing_0;
    
    __local char *mem_39452;
    
    mem_39452 = (__local char *) mem_39452_backing_1;
    
    int64_t gtid_34654 = sext_i32_i64(ltid_pre_40469);
    int32_t phys_tid_34655 = local_tid_40465;
    float x_34747 = ((__global float *) images_mem_38682)[gtid_34651 * N_27810 +
                                                          gtid_34654];
    bool isnan_res_34749;
    
    isnan_res_34749 = futrts_isnan32(x_34747);
    
    bool cond_34750 = !isnan_res_34749;
    float defunc_0_f_res_34751;
    
    if (cond_34750) {
        float x_34748 = ((__global
                          float *) defunc_3_map_res_mem_39440)[gtid_34651 *
                                                               N_27808 +
                                                               gtid_34654];
        float defunc_0_f_res_t_res_34752 = x_34747 - x_34748;
        
        defunc_0_f_res_34751 = defunc_0_f_res_t_res_34752;
    } else {
        defunc_0_f_res_34751 = NAN;
    }
    
    bool isnan_res_34753;
    
    isnan_res_34753 = futrts_isnan32(defunc_0_f_res_34751);
    
    bool defunc_0_p_res_34754 = !isnan_res_34753;
    int64_t defunc_0_f_res_34755 = btoi_bool_i64(defunc_0_p_res_34754);
    
    ((__local int64_t *) mem_39450)[gtid_34654] = defunc_0_f_res_34755;
    ((__local float *) mem_39452)[gtid_34654] = defunc_0_f_res_34751;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_40470;
    
    dims_flat_40470 = N_27808;
    
    int64_t x_34744;
    int64_t x_34745;
    int64_t x_40472;
    int64_t x_40473;
    bool ltid_in_bounds_40475;
    
    ltid_in_bounds_40475 = slt64(sext_i32_i64(local_tid_40465), N_27808);
    
    int32_t skip_threads_40476;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_40475) {
            x_34745 = ((volatile __local
                        int64_t *) mem_39450)[sext_i32_i64(local_tid_40465)];
            if ((local_tid_40465 - squot32(local_tid_40465, 32) * 32) == 0) {
                x_34744 = x_34745;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_40476 = 1;
        while (slt32(skip_threads_40476, 32)) {
            if (sle32(skip_threads_40476, local_tid_40465 -
                      squot32(local_tid_40465, 32) * 32) &&
                ltid_in_bounds_40475) {
                // read operands
                {
                    x_34744 = ((volatile __local
                                int64_t *) mem_39450)[sext_i32_i64(local_tid_40465) -
                                                      sext_i32_i64(skip_threads_40476)];
                }
                // perform operation
                {
                    bool inactive_40477 =
                         slt64(srem64(sext_i32_i64(local_tid_40465), N_27808),
                               sext_i32_i64(local_tid_40465) -
                               sext_i32_i64(local_tid_40465 -
                               skip_threads_40476));
                    
                    if (inactive_40477) {
                        x_34744 = x_34745;
                    }
                    if (!inactive_40477) {
                        int64_t defunc_1_op_res_34746 = add64(x_34744, x_34745);
                        
                        x_34744 = defunc_1_op_res_34746;
                    }
                }
            }
            if (sle32(wave_sizze_40467, skip_threads_40476)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_40476, local_tid_40465 -
                      squot32(local_tid_40465, 32) * 32) &&
                ltid_in_bounds_40475) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_39450)[sext_i32_i64(local_tid_40465)] =
                        x_34744;
                    x_34745 = x_34744;
                }
            }
            if (sle32(wave_sizze_40467, skip_threads_40476)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_40476 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_40465 - squot32(local_tid_40465, 32) * 32) == 31 &&
            ltid_in_bounds_40475) {
            ((volatile __local
              int64_t *) mem_39450)[sext_i32_i64(squot32(local_tid_40465,
                                                         32))] = x_34744;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_40478;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_40465, 32) == 0 && ltid_in_bounds_40475) {
                x_40473 = ((volatile __local
                            int64_t *) mem_39450)[sext_i32_i64(local_tid_40465)];
                if ((local_tid_40465 - squot32(local_tid_40465, 32) * 32) ==
                    0) {
                    x_40472 = x_40473;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_40478 = 1;
            while (slt32(skip_threads_40478, 32)) {
                if (sle32(skip_threads_40478, local_tid_40465 -
                          squot32(local_tid_40465, 32) * 32) &&
                    (squot32(local_tid_40465, 32) == 0 &&
                     ltid_in_bounds_40475)) {
                    // read operands
                    {
                        x_40472 = ((volatile __local
                                    int64_t *) mem_39450)[sext_i32_i64(local_tid_40465) -
                                                          sext_i32_i64(skip_threads_40478)];
                    }
                    // perform operation
                    {
                        bool inactive_40479 =
                             slt64(srem64(sext_i32_i64(local_tid_40465 * 32 +
                                          32 - 1), N_27808),
                                   sext_i32_i64(local_tid_40465 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_40465 -
                                                 skip_threads_40478) * 32 + 32 -
                                   1));
                        
                        if (inactive_40479) {
                            x_40472 = x_40473;
                        }
                        if (!inactive_40479) {
                            int64_t defunc_1_op_res_40474 = add64(x_40472,
                                                                  x_40473);
                            
                            x_40472 = defunc_1_op_res_40474;
                        }
                    }
                }
                if (sle32(wave_sizze_40467, skip_threads_40478)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_40478, local_tid_40465 -
                          squot32(local_tid_40465, 32) * 32) &&
                    (squot32(local_tid_40465, 32) == 0 &&
                     ltid_in_bounds_40475)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_39450)[sext_i32_i64(local_tid_40465)] =
                            x_40472;
                        x_40473 = x_40472;
                    }
                }
                if (sle32(wave_sizze_40467, skip_threads_40478)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_40478 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_40465, 32) == 0 || !ltid_in_bounds_40475)) {
            // read operands
            {
                x_34745 = x_34744;
                x_34744 = ((__local
                            int64_t *) mem_39450)[sext_i32_i64(squot32(local_tid_40465,
                                                                       32)) -
                                                  1];
            }
            // perform operation
            {
                bool inactive_40480 =
                     slt64(srem64(sext_i32_i64(local_tid_40465), N_27808),
                           sext_i32_i64(local_tid_40465) -
                           sext_i32_i64(squot32(local_tid_40465, 32) * 32 - 1));
                
                if (inactive_40480) {
                    x_34744 = x_34745;
                }
                if (!inactive_40480) {
                    int64_t defunc_1_op_res_34746 = add64(x_34744, x_34745);
                    
                    x_34744 = defunc_1_op_res_34746;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_39450)[sext_i32_i64(local_tid_40465)] =
                    x_34744;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_40465, 32) == 0) {
            ((__local int64_t *) mem_39450)[sext_i32_i64(local_tid_40465)] =
                x_34745;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_34756 = ((__local int64_t *) mem_39450)[i_28088];
    int32_t defunc_0_f_res_34757 = sext_i64_i32(last_res_34756);
    __local char *mem_39454;
    
    mem_39454 = (__local char *) mem_39454_backing_2;
    ((__local float *) mem_39454)[sext_i32_i64(local_tid_40465)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_39456;
    
    mem_39456 = (__local char *) mem_39456_backing_3;
    ((__local int32_t *) mem_39456)[sext_i32_i64(local_tid_40465)] = 0;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_34656 = sext_i32_i64(ltid_pre_40469);
    int32_t phys_tid_34657 = local_tid_40465;
    float x_34762 = ((__local float *) mem_39452)[write_i_34656];
    int32_t index_primexp_36710 = sext_i64_i32(write_i_34656);
    bool isnan_res_34765;
    
    isnan_res_34765 = futrts_isnan32(x_34762);
    
    bool defunc_0_p_res_34766 = !isnan_res_34765;
    int64_t defunc_1_f_res_34767;
    
    if (defunc_0_p_res_34766) {
        int64_t x_34763 = ((__local int64_t *) mem_39450)[write_i_34656];
        int64_t defunc_1_f_res_t_res_34768 = sub64(x_34763, 1);
        
        defunc_1_f_res_34767 = defunc_1_f_res_t_res_34768;
    } else {
        defunc_1_f_res_34767 = -1;
    }
    if (sle64(0, defunc_1_f_res_34767) && slt64(defunc_1_f_res_34767,
                                                N_27808)) {
        ((__local int32_t *) mem_39456)[defunc_1_f_res_34767] =
            index_primexp_36710;
    }
    if (sle64(0, defunc_1_f_res_34767) && slt64(defunc_1_f_res_34767,
                                                N_27808)) {
        ((__local float *) mem_39454)[defunc_1_f_res_34767] = x_34762;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_40465 == 0) {
        ((__global int32_t *) mem_39459)[gtid_34651] = defunc_0_f_res_34757;
    }
    ((__global float *) mem_39462)[gtid_34651 * N_27808 +
                                   sext_i32_i64(local_tid_40465)] = ((__local
                                                                      float *) mem_39454)[sext_i32_i64(local_tid_40465)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global int32_t *) mem_39465)[gtid_34651 * N_27808 +
                                     sext_i32_i64(local_tid_40465)] = ((__local
                                                                        int32_t *) mem_39456)[sext_i32_i64(local_tid_40465)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainzisegmap_intragroup_34998(__global int *global_failure,
                                            __local volatile
                                            int64_t *red_arr_mem_40573_backing_aligned_0,
                                            __local volatile
                                            int64_t *red_arr_mem_40569_backing_aligned_1,
                                            int64_t N_27808, int64_t N_27810,
                                            float hfrac_27815,
                                            int64_t i32_res_27822,
                                            int32_t k2p2_27824, __global
                                            unsigned char *images_mem_38682,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_39478,
                                            __global unsigned char *mem_39522,
                                            __global unsigned char *mem_39524,
                                            __global unsigned char *mem_39526)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_40573_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_40573_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_40569_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40569_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40563;
    int32_t local_tid_40564;
    int64_t group_sizze_40567;
    int32_t wave_sizze_40566;
    int32_t group_tid_40565;
    
    global_tid_40563 = get_global_id(0);
    local_tid_40564 = get_local_id(0);
    group_sizze_40567 = get_local_size(0);
    wave_sizze_40566 = LOCKSTEP_WIDTH;
    group_tid_40565 = get_group_id(0);
    
    int32_t phys_tid_34998;
    
    phys_tid_34998 = group_tid_40565;
    
    int32_t ltid_pre_40568;
    
    ltid_pre_40568 = local_tid_40564;
    
    int64_t gtid_34991;
    
    gtid_34991 = sext_i32_i64(group_tid_40565);
    
    int32_t defunc_0_f_res_35075;
    int64_t gtid_34994 = sext_i32_i64(ltid_pre_40568);
    int32_t phys_tid_34995 = local_tid_40564;
    __local char *red_arr_mem_40569;
    
    red_arr_mem_40569 = (__local char *) red_arr_mem_40569_backing_0;
    
    float x_35079;
    
    x_35079 = ((__global float *) images_mem_38682)[gtid_34991 * N_27810 +
                                                    gtid_34994];
    
    bool isnan_res_35080;
    
    isnan_res_35080 = futrts_isnan32(x_35079);
    
    bool cond_35081 = !isnan_res_35080;
    int32_t defunc_0_f_res_35082 = btoi_bool_i32(cond_35081);
    
    ((__local int32_t *) red_arr_mem_40569)[gtid_34994] = defunc_0_f_res_35082;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_40571;
    int32_t skip_waves_40572;
    
    skip_waves_40572 = 1;
    
    int32_t x_35076;
    int32_t x_35077;
    
    offset_40571 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_40564, sext_i64_i32(i32_res_27822))) {
            x_35076 = ((__local
                        int32_t *) red_arr_mem_40569)[sext_i32_i64(local_tid_40564 +
                                                      offset_40571)];
        }
    }
    offset_40571 = 1;
    while (slt32(offset_40571, wave_sizze_40566)) {
        if (slt32(local_tid_40564 + offset_40571,
                  sext_i64_i32(i32_res_27822)) && ((local_tid_40564 -
                                                    squot32(local_tid_40564,
                                                            wave_sizze_40566) *
                                                    wave_sizze_40566) & (2 *
                                                                         offset_40571 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_35077 = ((volatile __local
                            int32_t *) red_arr_mem_40569)[sext_i32_i64(local_tid_40564 +
                                                          offset_40571)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_35078 = add32(x_35076, x_35077);
                
                x_35076 = defunc_1_op_res_35078;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_40569)[sext_i32_i64(local_tid_40564)] =
                    x_35076;
            }
        }
        offset_40571 *= 2;
    }
    while (slt32(skip_waves_40572, squot32(sext_i64_i32(i32_res_27822) +
                                           wave_sizze_40566 - 1,
                                           wave_sizze_40566))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_40571 = skip_waves_40572 * wave_sizze_40566;
        if (slt32(local_tid_40564 + offset_40571,
                  sext_i64_i32(i32_res_27822)) && ((local_tid_40564 -
                                                    squot32(local_tid_40564,
                                                            wave_sizze_40566) *
                                                    wave_sizze_40566) == 0 &&
                                                   (squot32(local_tid_40564,
                                                            wave_sizze_40566) &
                                                    (2 * skip_waves_40572 -
                                                     1)) == 0)) {
            // read array element
            {
                x_35077 = ((__local
                            int32_t *) red_arr_mem_40569)[sext_i32_i64(local_tid_40564 +
                                                          offset_40571)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_35078 = add32(x_35076, x_35077);
                
                x_35076 = defunc_1_op_res_35078;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_40569)[sext_i32_i64(local_tid_40564)] =
                    x_35076;
            }
        }
        skip_waves_40572 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_35075 = ((__local int32_t *) red_arr_mem_40569)[0];
    
    float defunc_0_f_res_35083;
    int64_t gtid_34996 = sext_i32_i64(ltid_pre_40568);
    int32_t phys_tid_34997 = local_tid_40564;
    __local char *red_arr_mem_40573;
    
    red_arr_mem_40573 = (__local char *) red_arr_mem_40573_backing_1;
    
    int32_t index_primexp_36718;
    
    index_primexp_36718 = sext_i64_i32(gtid_34996);
    
    bool cond_35088 = slt32(index_primexp_36718, defunc_0_f_res_35075);
    float defunc_0_f_res_35089;
    
    if (cond_35088) {
        int64_t i_35090 = sext_i32_i64(index_primexp_36718);
        float defunc_0_f_res_t_res_35091 = ((__global
                                             float *) defunc_4_map_res_mem_39478)[gtid_34991 *
                                                                                  N_27808 +
                                                                                  i_35090];
        
        defunc_0_f_res_35089 = defunc_0_f_res_t_res_35091;
    } else {
        defunc_0_f_res_35089 = 0.0F;
    }
    
    float defunc_0_f_res_35092 = defunc_0_f_res_35089 * defunc_0_f_res_35089;
    
    ((__local float *) red_arr_mem_40573)[gtid_34996] = defunc_0_f_res_35092;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_40575;
    int32_t skip_waves_40576;
    
    skip_waves_40576 = 1;
    
    float x_35084;
    float x_35085;
    
    offset_40575 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_40564, sext_i64_i32(i32_res_27822))) {
            x_35084 = ((__local
                        float *) red_arr_mem_40573)[sext_i32_i64(local_tid_40564 +
                                                    offset_40575)];
        }
    }
    offset_40575 = 1;
    while (slt32(offset_40575, wave_sizze_40566)) {
        if (slt32(local_tid_40564 + offset_40575,
                  sext_i64_i32(i32_res_27822)) && ((local_tid_40564 -
                                                    squot32(local_tid_40564,
                                                            wave_sizze_40566) *
                                                    wave_sizze_40566) & (2 *
                                                                         offset_40575 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_35085 = ((volatile __local
                            float *) red_arr_mem_40573)[sext_i32_i64(local_tid_40564 +
                                                        offset_40575)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_35086 = x_35084 + x_35085;
                
                x_35084 = defunc_1_op_res_35086;
            }
            // write result of operation
            {
                ((volatile __local
                  float *) red_arr_mem_40573)[sext_i32_i64(local_tid_40564)] =
                    x_35084;
            }
        }
        offset_40575 *= 2;
    }
    while (slt32(skip_waves_40576, squot32(sext_i64_i32(i32_res_27822) +
                                           wave_sizze_40566 - 1,
                                           wave_sizze_40566))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_40575 = skip_waves_40576 * wave_sizze_40566;
        if (slt32(local_tid_40564 + offset_40575,
                  sext_i64_i32(i32_res_27822)) && ((local_tid_40564 -
                                                    squot32(local_tid_40564,
                                                            wave_sizze_40566) *
                                                    wave_sizze_40566) == 0 &&
                                                   (squot32(local_tid_40564,
                                                            wave_sizze_40566) &
                                                    (2 * skip_waves_40576 -
                                                     1)) == 0)) {
            // read array element
            {
                x_35085 = ((__local
                            float *) red_arr_mem_40573)[sext_i32_i64(local_tid_40564 +
                                                        offset_40575)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_35086 = x_35084 + x_35085;
                
                x_35084 = defunc_1_op_res_35086;
            }
            // write result of operation
            {
                ((__local
                  float *) red_arr_mem_40573)[sext_i32_i64(local_tid_40564)] =
                    x_35084;
            }
        }
        skip_waves_40576 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_35083 = ((__local float *) red_arr_mem_40573)[0];
    
    int32_t r32_arg_35093 = sub32(defunc_0_f_res_35075, k2p2_27824);
    float i32_res_35094 = sitofp_i32_f32(r32_arg_35093);
    float sqrt_arg_35095 = defunc_0_f_res_35083 / i32_res_35094;
    float sqrt_res_35096;
    
    sqrt_res_35096 = futrts_sqrt32(sqrt_arg_35095);
    
    float i32_res_35097 = sitofp_i32_f32(defunc_0_f_res_35075);
    float t32_arg_35098 = hfrac_27815 * i32_res_35097;
    int32_t f32_res_35099 = fptosi_f32_i32(t32_arg_35098);
    
    if (local_tid_40564 == 0) {
        ((__global int32_t *) mem_39522)[gtid_34991] = f32_res_35099;
    }
    if (local_tid_40564 == 0) {
        ((__global int32_t *) mem_39524)[gtid_34991] = defunc_0_f_res_35075;
    }
    if (local_tid_40564 == 0) {
        ((__global float *) mem_39526)[gtid_34991] = sqrt_res_35096;
    }
    
  error_4:
    return;
}
__kernel void mainzisegmap_intragroup_35440(__global int *global_failure,
                                            int failure_is_an_option, __global
                                            int64_t *global_failure_args,
                                            __local volatile
                                            int64_t *mem_39591_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_39589_backing_aligned_1,
                                            __local volatile
                                            int64_t *red_arr_mem_40836_backing_aligned_2,
                                            __local volatile
                                            int64_t *red_arr_mem_40834_backing_aligned_3,
                                            __local volatile
                                            int64_t *red_arr_mem_40832_backing_aligned_4,
                                            __local volatile
                                            int64_t *mem_39585_backing_aligned_5,
                                            int64_t N_27808, int32_t n_27813,
                                            int64_t iota32_arg_28208,
                                            int64_t distance_28240, __global
                                            unsigned char *defunc_4_map_res_mem_39477,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_39478,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_39479,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_39541,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_39542,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_39543,
                                            __global
                                            unsigned char *defunc_0_f_res_mem_39576,
                                            __global unsigned char *mem_39581,
                                            __global unsigned char *mem_39615,
                                            __global unsigned char *mem_39617,
                                            __global unsigned char *mem_39619)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_39591_backing_5 = (__local volatile
                                                           char *) mem_39591_backing_aligned_0;
    __local volatile char *restrict mem_39589_backing_4 = (__local volatile
                                                           char *) mem_39589_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_40836_backing_3 =
                          (__local volatile
                           char *) red_arr_mem_40836_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_40834_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_40834_backing_aligned_3;
    __local volatile char *restrict red_arr_mem_40832_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_40832_backing_aligned_4;
    __local volatile char *restrict mem_39585_backing_0 = (__local volatile
                                                           char *) mem_39585_backing_aligned_5;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_40815;
    int32_t local_tid_40816;
    int64_t group_sizze_40819;
    int32_t wave_sizze_40818;
    int32_t group_tid_40817;
    
    global_tid_40815 = get_global_id(0);
    local_tid_40816 = get_local_id(0);
    group_sizze_40819 = get_local_size(0);
    wave_sizze_40818 = LOCKSTEP_WIDTH;
    group_tid_40817 = get_group_id(0);
    
    int32_t phys_tid_35440;
    
    phys_tid_35440 = group_tid_40817;
    
    int32_t ltid_pre_40820;
    
    ltid_pre_40820 = local_tid_40816;
    
    int64_t gtid_35411;
    
    gtid_35411 = sext_i32_i64(group_tid_40817);
    
    int32_t x_35853;
    
    x_35853 = ((__global int32_t *) defunc_4_map_res_mem_39477)[gtid_35411];
    
    int32_t x_35854 = ((__global
                        int32_t *) defunc_3_map_res_mem_39542)[gtid_35411];
    float x_35855 = ((__global float *) defunc_3_map_res_mem_39543)[gtid_35411];
    int32_t x_35856 = ((__global
                        int32_t *) defunc_3_map_res_mem_39541)[gtid_35411];
    float x_35857 = ((__global float *) defunc_0_f_res_mem_39576)[gtid_35411];
    int32_t y_35860 = sub32(x_35853, x_35854);
    float i32_res_35861 = sitofp_i32_f32(x_35854);
    float sqrt_res_35862;
    
    sqrt_res_35862 = futrts_sqrt32(i32_res_35861);
    
    float y_35863 = x_35855 * sqrt_res_35862;
    __local char *mem_39585;
    
    mem_39585 = (__local char *) mem_39585_backing_0;
    
    int64_t gtid_35414 = sext_i32_i64(ltid_pre_40820);
    int32_t phys_tid_35415 = local_tid_40816;
    int32_t index_primexp_36731 = sext_i64_i32(gtid_35414);
    bool cond_35876 = sle32(y_35860, index_primexp_36731);
    float defunc_0_f_res_35877;
    
    if (cond_35876) {
        defunc_0_f_res_35877 = 0.0F;
    } else {
        bool cond_35878 = index_primexp_36731 == 0;
        float defunc_0_f_res_f_res_35879;
        
        if (cond_35878) {
            defunc_0_f_res_f_res_35879 = x_35857;
        } else {
            int32_t i_35880 = add32(x_35854, index_primexp_36731);
            int64_t i_35881 = sext_i32_i64(i_35880);
            float x_35882 = ((__global
                              float *) defunc_4_map_res_mem_39478)[gtid_35411 *
                                                                   N_27808 +
                                                                   i_35881];
            int32_t x_35883 = sub32(x_35854, x_35856);
            int32_t i_35884 = add32(x_35883, index_primexp_36731);
            int64_t i_35885 = sext_i32_i64(i_35884);
            float y_35886 = ((__global
                              float *) defunc_4_map_res_mem_39478)[gtid_35411 *
                                                                   N_27808 +
                                                                   i_35885];
            float defunc_0_f_res_f_res_f_res_35887 = x_35882 - y_35886;
            
            defunc_0_f_res_f_res_35879 = defunc_0_f_res_f_res_f_res_35887;
        }
        defunc_0_f_res_35877 = defunc_0_f_res_f_res_35879;
    }
    ((__local float *) mem_39585)[gtid_35414] = defunc_0_f_res_35877;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_40821;
    
    dims_flat_40821 = iota32_arg_28208;
    
    float x_35872;
    float x_35873;
    float x_40823;
    float x_40824;
    bool ltid_in_bounds_40826;
    
    ltid_in_bounds_40826 = slt64(sext_i32_i64(local_tid_40816),
                                 iota32_arg_28208);
    
    int32_t skip_threads_40827;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_40826) {
            x_35873 = ((volatile __local
                        float *) mem_39585)[sext_i32_i64(local_tid_40816)];
            if ((local_tid_40816 - squot32(local_tid_40816, 32) * 32) == 0) {
                x_35872 = x_35873;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_40827 = 1;
        while (slt32(skip_threads_40827, 32)) {
            if (sle32(skip_threads_40827, local_tid_40816 -
                      squot32(local_tid_40816, 32) * 32) &&
                ltid_in_bounds_40826) {
                // read operands
                {
                    x_35872 = ((volatile __local
                                float *) mem_39585)[sext_i32_i64(local_tid_40816) -
                                                    sext_i32_i64(skip_threads_40827)];
                }
                // perform operation
                {
                    bool inactive_40828 =
                         slt64(srem64(sext_i32_i64(local_tid_40816),
                                      iota32_arg_28208),
                               sext_i32_i64(local_tid_40816) -
                               sext_i32_i64(local_tid_40816 -
                               skip_threads_40827));
                    
                    if (inactive_40828) {
                        x_35872 = x_35873;
                    }
                    if (!inactive_40828) {
                        float defunc_1_op_res_35874 = x_35872 + x_35873;
                        
                        x_35872 = defunc_1_op_res_35874;
                    }
                }
            }
            if (sle32(wave_sizze_40818, skip_threads_40827)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_40827, local_tid_40816 -
                      squot32(local_tid_40816, 32) * 32) &&
                ltid_in_bounds_40826) {
                // write result
                {
                    ((volatile __local
                      float *) mem_39585)[sext_i32_i64(local_tid_40816)] =
                        x_35872;
                    x_35873 = x_35872;
                }
            }
            if (sle32(wave_sizze_40818, skip_threads_40827)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_40827 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_40816 - squot32(local_tid_40816, 32) * 32) == 31 &&
            ltid_in_bounds_40826) {
            ((volatile __local
              float *) mem_39585)[sext_i32_i64(squot32(local_tid_40816, 32))] =
                x_35872;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_40829;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_40816, 32) == 0 && ltid_in_bounds_40826) {
                x_40824 = ((volatile __local
                            float *) mem_39585)[sext_i32_i64(local_tid_40816)];
                if ((local_tid_40816 - squot32(local_tid_40816, 32) * 32) ==
                    0) {
                    x_40823 = x_40824;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_40829 = 1;
            while (slt32(skip_threads_40829, 32)) {
                if (sle32(skip_threads_40829, local_tid_40816 -
                          squot32(local_tid_40816, 32) * 32) &&
                    (squot32(local_tid_40816, 32) == 0 &&
                     ltid_in_bounds_40826)) {
                    // read operands
                    {
                        x_40823 = ((volatile __local
                                    float *) mem_39585)[sext_i32_i64(local_tid_40816) -
                                                        sext_i32_i64(skip_threads_40829)];
                    }
                    // perform operation
                    {
                        bool inactive_40830 =
                             slt64(srem64(sext_i32_i64(local_tid_40816 * 32 +
                                          32 - 1), iota32_arg_28208),
                                   sext_i32_i64(local_tid_40816 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_40816 -
                                                 skip_threads_40829) * 32 + 32 -
                                   1));
                        
                        if (inactive_40830) {
                            x_40823 = x_40824;
                        }
                        if (!inactive_40830) {
                            float defunc_1_op_res_40825 = x_40823 + x_40824;
                            
                            x_40823 = defunc_1_op_res_40825;
                        }
                    }
                }
                if (sle32(wave_sizze_40818, skip_threads_40829)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_40829, local_tid_40816 -
                          squot32(local_tid_40816, 32) * 32) &&
                    (squot32(local_tid_40816, 32) == 0 &&
                     ltid_in_bounds_40826)) {
                    // write result
                    {
                        ((volatile __local
                          float *) mem_39585)[sext_i32_i64(local_tid_40816)] =
                            x_40823;
                        x_40824 = x_40823;
                    }
                }
                if (sle32(wave_sizze_40818, skip_threads_40829)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_40829 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_40816, 32) == 0 || !ltid_in_bounds_40826)) {
            // read operands
            {
                x_35873 = x_35872;
                x_35872 = ((__local
                            float *) mem_39585)[sext_i32_i64(squot32(local_tid_40816,
                                                                     32)) - 1];
            }
            // perform operation
            {
                bool inactive_40831 =
                     slt64(srem64(sext_i32_i64(local_tid_40816),
                                  iota32_arg_28208),
                           sext_i32_i64(local_tid_40816) -
                           sext_i32_i64(squot32(local_tid_40816, 32) * 32 - 1));
                
                if (inactive_40831) {
                    x_35872 = x_35873;
                }
                if (!inactive_40831) {
                    float defunc_1_op_res_35874 = x_35872 + x_35873;
                    
                    x_35872 = defunc_1_op_res_35874;
                }
            }
            // write final result
            {
                ((__local float *) mem_39585)[sext_i32_i64(local_tid_40816)] =
                    x_35872;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_40816, 32) == 0) {
            ((__local float *) mem_39585)[sext_i32_i64(local_tid_40816)] =
                x_35873;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    bool acc0_35893;
    int32_t acc0_35894;
    float acc0_35895;
    int64_t gtid_35416 = sext_i32_i64(ltid_pre_40820);
    int32_t phys_tid_35417 = local_tid_40816;
    __local char *red_arr_mem_40832;
    
    red_arr_mem_40832 = (__local char *) red_arr_mem_40832_backing_1;
    
    __local char *red_arr_mem_40834;
    
    red_arr_mem_40834 = (__local char *) red_arr_mem_40834_backing_2;
    
    __local char *red_arr_mem_40836;
    
    red_arr_mem_40836 = (__local char *) red_arr_mem_40836_backing_3;
    
    float x_35910;
    
    x_35910 = ((__local float *) mem_39585)[gtid_35416];
    
    float x_35911 = ((__global float *) mem_39581)[gtid_35416];
    int32_t index_primexp_36734 = sext_i64_i32(gtid_35416);
    float defunc_0_f_res_35914 = x_35910 / y_35863;
    bool cond_35915 = slt32(index_primexp_36734, y_35860);
    bool isnan_res_35916;
    
    isnan_res_35916 = futrts_isnan32(defunc_0_f_res_35914);
    
    bool cond_t_res_35917 = !isnan_res_35916;
    bool x_35918 = cond_35915 && cond_t_res_35917;
    float abs_res_35919 = (float) fabs(defunc_0_f_res_35914);
    bool defunc_2_f_res_t_res_35920 = x_35911 < abs_res_35919;
    bool x_35921 = x_35918 && defunc_2_f_res_t_res_35920;
    float defunc_1_f_res_35922;
    
    if (cond_35915) {
        defunc_1_f_res_35922 = defunc_0_f_res_35914;
    } else {
        defunc_1_f_res_35922 = 0.0F;
    }
    ((__local bool *) red_arr_mem_40832)[gtid_35416] = x_35921;
    ((__local int32_t *) red_arr_mem_40834)[gtid_35416] = index_primexp_36734;
    ((__local float *) red_arr_mem_40836)[gtid_35416] = defunc_1_f_res_35922;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_40838;
    int32_t skip_waves_40839;
    
    skip_waves_40839 = 1;
    
    bool x_35896;
    int32_t x_35897;
    float x_35898;
    bool x_35899;
    int32_t x_35900;
    float x_35901;
    
    offset_40838 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_40816, sext_i64_i32(iota32_arg_28208))) {
            x_35896 = ((__local
                        bool *) red_arr_mem_40832)[sext_i32_i64(local_tid_40816 +
                                                   offset_40838)];
            x_35897 = ((__local
                        int32_t *) red_arr_mem_40834)[sext_i32_i64(local_tid_40816 +
                                                      offset_40838)];
            x_35898 = ((__local
                        float *) red_arr_mem_40836)[sext_i32_i64(local_tid_40816 +
                                                    offset_40838)];
        }
    }
    offset_40838 = 1;
    while (slt32(offset_40838, wave_sizze_40818)) {
        if (slt32(local_tid_40816 + offset_40838,
                  sext_i64_i32(iota32_arg_28208)) && ((local_tid_40816 -
                                                       squot32(local_tid_40816,
                                                               wave_sizze_40818) *
                                                       wave_sizze_40818) & (2 *
                                                                            offset_40838 -
                                                                            1)) ==
            0) {
            // read array element
            {
                x_35899 = ((volatile __local
                            bool *) red_arr_mem_40832)[sext_i32_i64(local_tid_40816 +
                                                       offset_40838)];
                x_35900 = ((volatile __local
                            int32_t *) red_arr_mem_40834)[sext_i32_i64(local_tid_40816 +
                                                          offset_40838)];
                x_35901 = ((volatile __local
                            float *) red_arr_mem_40836)[sext_i32_i64(local_tid_40816 +
                                                        offset_40838)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_35902;
                int32_t defunc_1_op_res_35903;
                
                if (x_35896) {
                    defunc_1_op_res_35902 = x_35896;
                    defunc_1_op_res_35903 = x_35897;
                } else {
                    bool x_35904 = x_35899 && x_35899;
                    bool x_35905 = !x_35899;
                    bool y_35906 = x_35896 && x_35905;
                    bool defunc_1_op_res_f_res_35907 = x_35904 || y_35906;
                    int32_t defunc_1_op_res_f_res_35908;
                    
                    if (x_35899) {
                        defunc_1_op_res_f_res_35908 = x_35900;
                    } else {
                        defunc_1_op_res_f_res_35908 = x_35897;
                    }
                    defunc_1_op_res_35902 = defunc_1_op_res_f_res_35907;
                    defunc_1_op_res_35903 = defunc_1_op_res_f_res_35908;
                }
                
                float defunc_1_op_res_35909 = x_35898 + x_35901;
                
                x_35896 = defunc_1_op_res_35902;
                x_35897 = defunc_1_op_res_35903;
                x_35898 = defunc_1_op_res_35909;
            }
            // write result of operation
            {
                ((volatile __local
                  bool *) red_arr_mem_40832)[sext_i32_i64(local_tid_40816)] =
                    x_35896;
                ((volatile __local
                  int32_t *) red_arr_mem_40834)[sext_i32_i64(local_tid_40816)] =
                    x_35897;
                ((volatile __local
                  float *) red_arr_mem_40836)[sext_i32_i64(local_tid_40816)] =
                    x_35898;
            }
        }
        offset_40838 *= 2;
    }
    while (slt32(skip_waves_40839, squot32(sext_i64_i32(iota32_arg_28208) +
                                           wave_sizze_40818 - 1,
                                           wave_sizze_40818))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_40838 = skip_waves_40839 * wave_sizze_40818;
        if (slt32(local_tid_40816 + offset_40838,
                  sext_i64_i32(iota32_arg_28208)) && ((local_tid_40816 -
                                                       squot32(local_tid_40816,
                                                               wave_sizze_40818) *
                                                       wave_sizze_40818) == 0 &&
                                                      (squot32(local_tid_40816,
                                                               wave_sizze_40818) &
                                                       (2 * skip_waves_40839 -
                                                        1)) == 0)) {
            // read array element
            {
                x_35899 = ((__local
                            bool *) red_arr_mem_40832)[sext_i32_i64(local_tid_40816 +
                                                       offset_40838)];
                x_35900 = ((__local
                            int32_t *) red_arr_mem_40834)[sext_i32_i64(local_tid_40816 +
                                                          offset_40838)];
                x_35901 = ((__local
                            float *) red_arr_mem_40836)[sext_i32_i64(local_tid_40816 +
                                                        offset_40838)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_35902;
                int32_t defunc_1_op_res_35903;
                
                if (x_35896) {
                    defunc_1_op_res_35902 = x_35896;
                    defunc_1_op_res_35903 = x_35897;
                } else {
                    bool x_35904 = x_35899 && x_35899;
                    bool x_35905 = !x_35899;
                    bool y_35906 = x_35896 && x_35905;
                    bool defunc_1_op_res_f_res_35907 = x_35904 || y_35906;
                    int32_t defunc_1_op_res_f_res_35908;
                    
                    if (x_35899) {
                        defunc_1_op_res_f_res_35908 = x_35900;
                    } else {
                        defunc_1_op_res_f_res_35908 = x_35897;
                    }
                    defunc_1_op_res_35902 = defunc_1_op_res_f_res_35907;
                    defunc_1_op_res_35903 = defunc_1_op_res_f_res_35908;
                }
                
                float defunc_1_op_res_35909 = x_35898 + x_35901;
                
                x_35896 = defunc_1_op_res_35902;
                x_35897 = defunc_1_op_res_35903;
                x_35898 = defunc_1_op_res_35909;
            }
            // write result of operation
            {
                ((__local
                  bool *) red_arr_mem_40832)[sext_i32_i64(local_tid_40816)] =
                    x_35896;
                ((__local
                  int32_t *) red_arr_mem_40834)[sext_i32_i64(local_tid_40816)] =
                    x_35897;
                ((__local
                  float *) red_arr_mem_40836)[sext_i32_i64(local_tid_40816)] =
                    x_35898;
            }
        }
        skip_waves_40839 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    acc0_35893 = ((__local bool *) red_arr_mem_40832)[0];
    acc0_35894 = ((__local int32_t *) red_arr_mem_40834)[0];
    acc0_35895 = ((__local float *) red_arr_mem_40836)[0];
    
    bool x_35925 = acc0_35893 && acc0_35893;
    int32_t defunc_1_op_res_f_res_35929;
    
    if (acc0_35893) {
        defunc_1_op_res_f_res_35929 = acc0_35894;
    } else {
        defunc_1_op_res_f_res_35929 = -1;
    }
    
    bool cond_35935 = y_35860 == 0;
    float defunc_0_f_res_35936;
    
    if (cond_35935) {
        defunc_0_f_res_35936 = 0.0F;
    } else {
        float i32_res_35937 = sitofp_i32_f32(y_35860);
        float defunc_0_f_res_f_res_35938 = acc0_35895 / i32_res_35937;
        
        defunc_0_f_res_35936 = defunc_0_f_res_f_res_35938;
    }
    
    __local char *mem_39589;
    
    mem_39589 = (__local char *) mem_39589_backing_4;
    
    int64_t gtid_35418 = sext_i32_i64(ltid_pre_40820);
    int32_t phys_tid_35419 = local_tid_40816;
    int32_t index_primexp_36737 = sext_i64_i32(gtid_35418);
    bool cond_35941 = slt32(index_primexp_36737, y_35860);
    bool cond_35942;
    
    if (cond_35941) {
        int32_t i_35943 = add32(x_35854, index_primexp_36737);
        int64_t i_35944 = sext_i32_i64(i_35943);
        bool x_35945 = sle64(0, i_35944);
        bool y_35946 = slt64(i_35944, N_27808);
        bool bounds_check_35947 = x_35945 && y_35946;
        bool index_certs_35948;
        
        if (!bounds_check_35947) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 0) == -1) {
                    global_failure_args[0] = i_35944;
                    global_failure_args[1] = N_27808;
                    ;
                }
                local_failure = true;
                goto error_3;
            }
        }
        
        float isnan_arg_35949 = ((__global
                                  float *) defunc_4_map_res_mem_39478)[gtid_35411 *
                                                                       N_27808 +
                                                                       i_35944];
        bool isnan_res_35950;
        
        isnan_res_35950 = futrts_isnan32(isnan_arg_35949);
        
        bool cond_t_res_35951 = !isnan_res_35950;
        
        cond_35942 = cond_t_res_35951;
    } else {
        cond_35942 = 0;
    }
    
    float defunc_0_f_res_35952;
    
    if (cond_35942) {
        int32_t i_35953 = add32(x_35854, index_primexp_36737);
        int64_t i_35954 = sext_i32_i64(i_35953);
        bool x_35955 = sle64(0, i_35954);
        bool y_35956 = slt64(i_35954, N_27808);
        bool bounds_check_35957 = x_35955 && y_35956;
        bool index_certs_35958;
        
        if (!bounds_check_35957) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 1) == -1) {
                    global_failure_args[0] = i_35954;
                    global_failure_args[1] = N_27808;
                    ;
                }
                local_failure = true;
                goto error_3;
            }
        }
        
        float defunc_0_f_res_t_res_35959 = ((__global
                                             float *) defunc_4_map_res_mem_39478)[gtid_35411 *
                                                                                  N_27808 +
                                                                                  i_35954];
        
        defunc_0_f_res_35952 = defunc_0_f_res_t_res_35959;
    } else {
        defunc_0_f_res_35952 = INFINITY;
    }
    ((__local float *) mem_39589)[gtid_35418] = defunc_0_f_res_35952;
    
  error_3:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_39591;
    
    mem_39591 = (__local char *) mem_39591_backing_5;
    ((__local float *) mem_39591)[sext_i32_i64(local_tid_40816)] = ((__local
                                                                     float *) mem_39589)[sext_i32_i64(local_tid_40816)];
    barrier(CLK_LOCAL_MEM_FENCE);
    for (int64_t i_35962 = 0; i_35962 < distance_28240; i_35962++) {
        int64_t index_primexp_35964 = add64(1, i_35962);
        bool cond_35965 = slt64(0, index_primexp_35964);
        bool loop_cond_35966;
        
        if (cond_35965) {
            bool x_35967 = sle64(0, index_primexp_35964);
            bool y_35968 = slt64(index_primexp_35964, iota32_arg_28208);
            bool bounds_check_35969 = x_35967 && y_35968;
            bool index_certs_35970;
            
            if (!bounds_check_35969) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 2) ==
                        -1) {
                        global_failure_args[0] = index_primexp_35964;
                        global_failure_args[1] = iota32_arg_28208;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float defunc_2_lifted_gt_arg_35971 = ((__local
                                                   float *) mem_39591)[index_primexp_35964];
            bool y_35972 = slt64(i_35962, iota32_arg_28208);
            bool index_certs_35973;
            
            if (!y_35972) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 3) ==
                        -1) {
                        global_failure_args[0] = i_35962;
                        global_failure_args[1] = iota32_arg_28208;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float defunc_1_lifted_gt_arg_35974 = ((__local
                                                   float *) mem_39591)[i_35962];
            bool defunc_1_zlze_res_35975 = defunc_1_lifted_gt_arg_35974 <=
                 defunc_2_lifted_gt_arg_35971;
            bool defunc_2_lifted_gt_res_35976 = !defunc_1_zlze_res_35975;
            
            loop_cond_35966 = defunc_2_lifted_gt_res_35976;
        } else {
            loop_cond_35966 = 0;
        }
        
        bool xszq_35977;
        int64_t xszq_35978;
        bool loop_while_35980;
        int64_t j_35981;
        
        loop_while_35980 = loop_cond_35966;
        j_35981 = index_primexp_35964;
        while (loop_while_35980) {
            int64_t loopres_35983 = sub64(j_35981, 1);
            bool x_35984 = sle64(0, j_35981);
            bool y_35985 = slt64(j_35981, iota32_arg_28208);
            bool bounds_check_35986 = x_35984 && y_35985;
            bool index_certs_35987;
            
            if (!bounds_check_35986) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 4) ==
                        -1) {
                        global_failure_args[0] = j_35981;
                        global_failure_args[1] = iota32_arg_28208;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float copy_arg_35988 = ((__local float *) mem_39591)[j_35981];
            bool x_35989 = sle64(0, loopres_35983);
            bool y_35990 = slt64(loopres_35983, iota32_arg_28208);
            bool bounds_check_35991 = x_35989 && y_35990;
            bool index_certs_35992;
            
            if (!bounds_check_35991) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 5) ==
                        -1) {
                        global_failure_args[0] = loopres_35983;
                        global_failure_args[1] = iota32_arg_28208;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float copy_arg_35993 = ((__local float *) mem_39591)[loopres_35983];
            
            barrier(CLK_LOCAL_MEM_FENCE);
            if (local_tid_40816 == 0) {
                ((__local float *) mem_39591)[j_35981] = copy_arg_35993;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            barrier(CLK_LOCAL_MEM_FENCE);
            if (local_tid_40816 == 0) {
                ((__local float *) mem_39591)[loopres_35983] = copy_arg_35988;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            bool cond_35996 = slt64(0, loopres_35983);
            bool loop_cond_35997;
            
            if (cond_35996) {
                bool index_certs_35998;
                
                if (!bounds_check_35991) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 6) ==
                            -1) {
                            global_failure_args[0] = loopres_35983;
                            global_failure_args[1] = iota32_arg_28208;
                            ;
                        }
                        local_failure = true;
                        goto error_4;
                    }
                }
                
                float defunc_2_lifted_gt_arg_35999 = ((__local
                                                       float *) mem_39591)[loopres_35983];
                int64_t i_36000 = sub64(loopres_35983, 1);
                bool x_36001 = sle64(0, i_36000);
                bool y_36002 = slt64(i_36000, iota32_arg_28208);
                bool bounds_check_36003 = x_36001 && y_36002;
                bool index_certs_36004;
                
                if (!bounds_check_36003) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 7) ==
                            -1) {
                            global_failure_args[0] = i_36000;
                            global_failure_args[1] = iota32_arg_28208;
                            ;
                        }
                        local_failure = true;
                        goto error_4;
                    }
                }
                
                float defunc_1_lifted_gt_arg_36005 = ((__local
                                                       float *) mem_39591)[i_36000];
                bool defunc_1_zlze_res_36006 = defunc_1_lifted_gt_arg_36005 <=
                     defunc_2_lifted_gt_arg_35999;
                bool defunc_2_lifted_gt_res_36007 = !defunc_1_zlze_res_36006;
                
                loop_cond_35997 = defunc_2_lifted_gt_res_36007;
            } else {
                loop_cond_35997 = 0;
            }
            
            bool loop_while_tmp_40841 = loop_cond_35997;
            int64_t j_tmp_40842 = loopres_35983;
            
            loop_while_35980 = loop_while_tmp_40841;
            j_35981 = j_tmp_40842;
        }
        xszq_35977 = loop_while_35980;
        xszq_35978 = j_35981;
    }
    
    int32_t i_36008 = sdiv32(y_35860, 2);
    int32_t j_36009 = sub32(i_36008, 1);
    bool cond_36010 = x_35853 == x_35854;
    float defunc_0_f_res_36011;
    
    if (cond_36010) {
        defunc_0_f_res_36011 = 0.0F;
    } else {
        int32_t x_36012 = smod32(y_35860, 2);
        bool cond_36013 = x_36012 == 0;
        float defunc_0_f_res_f_res_36014;
        
        if (cond_36013) {
            int64_t j_36015 = sext_i32_i64(j_36009);
            bool x_36016 = sle64(0, j_36015);
            bool y_36017 = slt64(j_36015, iota32_arg_28208);
            bool bounds_check_36018 = x_36016 && y_36017;
            bool index_certs_36019;
            
            if (!bounds_check_36018) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 8) ==
                        -1) {
                        global_failure_args[0] = j_36015;
                        global_failure_args[1] = iota32_arg_28208;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float x_36020 = ((__local float *) mem_39591)[j_36015];
            int64_t i_36021 = sext_i32_i64(i_36008);
            bool x_36022 = sle64(0, i_36021);
            bool y_36023 = slt64(i_36021, iota32_arg_28208);
            bool bounds_check_36024 = x_36022 && y_36023;
            bool index_certs_36025;
            
            if (!bounds_check_36024) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 9) ==
                        -1) {
                        global_failure_args[0] = i_36021;
                        global_failure_args[1] = iota32_arg_28208;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float y_36026 = ((__local float *) mem_39591)[i_36021];
            float x_36027 = x_36020 + y_36026;
            float defunc_0_f_res_f_res_t_res_36028 = x_36027 / 2.0F;
            
            defunc_0_f_res_f_res_36014 = defunc_0_f_res_f_res_t_res_36028;
        } else {
            int64_t i_36029 = sext_i32_i64(i_36008);
            bool x_36030 = sle64(0, i_36029);
            bool y_36031 = slt64(i_36029, iota32_arg_28208);
            bool bounds_check_36032 = x_36030 && y_36031;
            bool index_certs_36033;
            
            if (!bounds_check_36032) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 10) ==
                        -1) {
                        global_failure_args[0] = i_36029;
                        global_failure_args[1] = iota32_arg_28208;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float defunc_0_f_res_f_res_f_res_36034 = ((__local
                                                       float *) mem_39591)[i_36029];
            
            defunc_0_f_res_f_res_36014 = defunc_0_f_res_f_res_f_res_36034;
        }
        defunc_0_f_res_36011 = defunc_0_f_res_f_res_36014;
    }
    
    bool cond_36035 = !x_35925;
    int32_t fst_breakzq_36036;
    
    if (cond_36035) {
        fst_breakzq_36036 = -1;
    } else {
        bool cond_36037 = slt32(defunc_1_op_res_f_res_35929, y_35860);
        int32_t adjustValInds_res_36038;
        
        if (cond_36037) {
            int32_t i_36039 = add32(x_35854, defunc_1_op_res_f_res_35929);
            int64_t i_36040 = sext_i32_i64(i_36039);
            int32_t x_36041 = ((__global
                                int32_t *) defunc_4_map_res_mem_39479)[gtid_35411 *
                                                                       N_27808 +
                                                                       i_36040];
            int32_t adjustValInds_res_t_res_36042 = sub32(x_36041, n_27813);
            
            adjustValInds_res_36038 = adjustValInds_res_t_res_36042;
        } else {
            adjustValInds_res_36038 = -1;
        }
        fst_breakzq_36036 = adjustValInds_res_36038;
    }
    
    bool cond_36043 = sle32(x_35854, 5);
    bool cond_f_res_36044 = sle32(y_35860, 5);
    bool x_36045 = !cond_36043;
    bool y_36046 = cond_f_res_36044 && x_36045;
    bool cond_36047 = cond_36043 || y_36046;
    int32_t fst_breakzq_36048;
    
    if (cond_36047) {
        fst_breakzq_36048 = -2;
    } else {
        fst_breakzq_36048 = fst_breakzq_36036;
    }
    if (local_tid_40816 == 0) {
        ((__global int32_t *) mem_39615)[gtid_35411] = fst_breakzq_36048;
    }
    if (local_tid_40816 == 0) {
        ((__global float *) mem_39617)[gtid_35411] = defunc_0_f_res_35936;
    }
    if (local_tid_40816 == 0) {
        ((__global float *) mem_39619)[gtid_35411] = defunc_0_f_res_36011;
    }
    
  error_4:
    return;
}
__kernel void mainzisegmap_intragroup_36853(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_38781_backing_aligned_0,
                                            int64_t m_27809, int32_t n_27813,
                                            int64_t i32_res_27828,
                                            int64_t Ty_36841, int64_t Tx_36842,
                                            int64_t gridDim_x_36843,
                                            int64_t gridDim_y_36844,
                                            int64_t group_sizze_36848,
                                            int64_t count_shmem_36849, __global
                                            unsigned char *mem_38694, __global
                                            unsigned char *mem_38698, __global
                                            unsigned char *mem_38769, __global
                                            unsigned char *mem_38829)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_38781_backing_0 = (__local volatile
                                                           char *) mem_38781_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_39932;
    int32_t local_tid_39933;
    int64_t group_sizze_39936;
    int32_t wave_sizze_39935;
    int32_t group_tid_39934;
    
    global_tid_39932 = get_global_id(0);
    local_tid_39933 = get_local_id(0);
    group_sizze_39936 = get_local_size(0);
    wave_sizze_39935 = LOCKSTEP_WIDTH;
    group_tid_39934 = get_group_id(0);
    
    int32_t gid_flat_36853;
    
    gid_flat_36853 = group_tid_39934;
    
    int32_t ltid_pre_39937;
    
    ltid_pre_39937 = squot32(local_tid_39933, sext_i64_i32(Ty_36841) *
                             sext_i64_i32(Tx_36842));
    
    int32_t ltid_pre_39938;
    
    ltid_pre_39938 = squot32(local_tid_39933 - squot32(local_tid_39933,
                                                       sext_i64_i32(Ty_36841) *
                                                       sext_i64_i32(Tx_36842)) *
                             (sext_i64_i32(Ty_36841) * sext_i64_i32(Tx_36842)),
                             sext_i64_i32(Tx_36842));
    
    int32_t ltid_pre_39939;
    
    ltid_pre_39939 = local_tid_39933 - squot32(local_tid_39933,
                                               sext_i64_i32(Ty_36841) *
                                               sext_i64_i32(Tx_36842)) *
        (sext_i64_i32(Ty_36841) * sext_i64_i32(Tx_36842)) -
        squot32(local_tid_39933 - squot32(local_tid_39933,
                                          sext_i64_i32(Ty_36841) *
                                          sext_i64_i32(Tx_36842)) *
                (sext_i64_i32(Ty_36841) * sext_i64_i32(Tx_36842)),
                sext_i64_i32(Tx_36842)) * sext_i64_i32(Tx_36842);
    
    int32_t ltid_pre_39940;
    
    ltid_pre_39940 = squot32(local_tid_39933, sext_i64_i32(Tx_36842));
    
    int32_t ltid_pre_39941;
    
    ltid_pre_39941 = local_tid_39933 - squot32(local_tid_39933,
                                               sext_i64_i32(Tx_36842)) *
        sext_i64_i32(Tx_36842);
    
    int32_t ltid_pre_39942;
    
    ltid_pre_39942 = local_tid_39933;
    
    int64_t gid_zz_36852;
    
    gid_zz_36852 = squot64(sext_i32_i64(group_tid_39934), gridDim_y_36844 *
                           gridDim_x_36843);
    
    int64_t gid_y_36851;
    
    gid_y_36851 = squot64(sext_i32_i64(group_tid_39934) -
                          squot64(sext_i32_i64(group_tid_39934),
                                  gridDim_y_36844 * gridDim_x_36843) *
                          (gridDim_y_36844 * gridDim_x_36843), gridDim_x_36843);
    
    int64_t gid_x_36850;
    
    gid_x_36850 = sext_i32_i64(group_tid_39934) -
        squot64(sext_i32_i64(group_tid_39934), gridDim_y_36844 *
                gridDim_x_36843) * (gridDim_y_36844 * gridDim_x_36843) -
        squot64(sext_i32_i64(group_tid_39934) -
                squot64(sext_i32_i64(group_tid_39934), gridDim_y_36844 *
                        gridDim_x_36843) * (gridDim_y_36844 * gridDim_x_36843),
                gridDim_x_36843) * gridDim_x_36843;
    
    int64_t ii_36854;
    
    ii_36854 = 30 * gid_zz_36852;
    
    int64_t jj1_36855 = Ty_36841 * gid_y_36851;
    int64_t jj2_36856 = Tx_36842 * gid_x_36850;
    float mem_38779[30];
    int64_t ltid_y_36859 = sext_i32_i64(ltid_pre_39940);
    int64_t ltid_x_36857 = sext_i32_i64(ltid_pre_39941);
    int32_t ltid_flat_36858 = local_tid_39933;
    float mem_38773[30];
    
    for (int32_t i_38592 = 0; i_38592 < 30; i_38592++) {
        int64_t i_36867 = sext_i32_i64(i_38592);
        
        mem_38773[i_36867] = 0.0F;
    }
    for (int64_t i_39944 = 0; i_39944 < 30; i_39944++) {
        mem_38779[i_39944] = mem_38773[i_39944];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_38781;
    
    mem_38781 = (__local char *) mem_38781_backing_0;
    
    float loop_mem_38811[30];
    float mem_param_38782[30];
    
    for (int32_t i_1 = 0; i_1 < 30; i_1++)
        mem_param_38782[i_1] = mem_38779[i_1];
    for (int32_t i_38594 = 0; i_38594 < n_27813; i_38594++) {
        int64_t i_36872 = sext_i32_i64(i_38594);
        
        for (int64_t i_36875 = 0; i_36875 < count_shmem_36849; i_36875++) {
            int64_t offs_36888 = group_sizze_36848 * i_36875;
            int64_t ltid_36878 = sext_i32_i64(ltid_pre_39942);
            int32_t ltid_flat_36877 = local_tid_39933;
            int64_t loc_ind_36889 = ltid_36878 + offs_36888;
            int64_t gtid_36890 = ii_36854 + loc_ind_36889;
            bool cond_36891 = slt64(gtid_36890, m_27809);
            float y_elem_36892;
            
            if (cond_36891) {
                float Y_elem_36894 = ((__global float *) mem_38769)[i_36872 *
                                                                    m_27809 +
                                                                    gtid_36890];
                
                y_elem_36892 = Y_elem_36894;
            } else {
                y_elem_36892 = 0.0F;
            }
            
            bool cond_36896 = slt64(loc_ind_36889, 30);
            int64_t y_loc_ind_36897;
            
            if (cond_36896) {
                y_loc_ind_36897 = loc_ind_36889;
            } else {
                y_loc_ind_36897 = -1;
            }
            if (sle64(0, y_loc_ind_36897) && slt64(y_loc_ind_36897, 30)) {
                ((__local float *) mem_38781)[y_loc_ind_36897] = y_elem_36892;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
        
        float mem_38810[30];
        int64_t ltid_y_36903 = sext_i32_i64(ltid_pre_39940);
        int64_t ltid_x_36901 = sext_i32_i64(ltid_pre_39941);
        int32_t ltid_flat_36902 = local_tid_39933;
        int64_t gtid_36930 = jj1_36855 + ltid_y_36903;
        int64_t gtid_36931 = jj2_36856 + ltid_x_36901;
        bool binop_x_36933 = slt64(gtid_36930, i32_res_27828);
        bool binop_y_36934 = slt64(gtid_36931, i32_res_27828);
        bool cond_36935 = binop_x_36933 && binop_y_36934;
        float mem_39710[30];
        
        if (cond_36935) {
            float x_36938 = ((__global float *) mem_38694)[i_36872 *
                                                           i32_res_27828 +
                                                           gtid_36930];
            float x_36940 = ((__global float *) mem_38698)[i_36872 *
                                                           i32_res_27828 +
                                                           gtid_36931];
            
            for (int32_t i_38593 = 0; i_38593 < 30; i_38593++) {
                int64_t i_36942 = sext_i32_i64(i_38593);
                int64_t gtid_36944 = ii_36854 + i_36942;
                bool cond_36945 = slt64(gtid_36944, m_27809);
                
                if (cond_36945) {
                    float inp_reg_var2zz_36947 = ((__local
                                                   float *) mem_38781)[i_36942];
                    float res_reg_var2zz_36948 = mem_param_38782[i_36942];
                    float x_36952 = x_36938 * x_36940;
                    bool isnan_res_36953;
                    
                    isnan_res_36953 = futrts_isnan32(inp_reg_var2zz_36947);
                    
                    float y_36954;
                    
                    if (isnan_res_36953) {
                        y_36954 = 0.0F;
                    } else {
                        y_36954 = 1.0F;
                    }
                    
                    float defunc_2_f_res_36955 = x_36952 * y_36954;
                    float defunc_1_op_res_36959 = res_reg_var2zz_36948 +
                          defunc_2_f_res_36955;
                    
                    mem_param_38782[i_36942] = defunc_1_op_res_36959;
                }
            }
            for (int64_t i_39950 = 0; i_39950 < 30; i_39950++) {
                mem_39710[i_39950] = mem_param_38782[i_39950];
            }
        } else {
            for (int64_t i_39951 = 0; i_39951 < 30; i_39951++) {
                mem_39710[i_39951] = mem_param_38782[i_39951];
            }
        }
        for (int64_t i_39952 = 0; i_39952 < 30; i_39952++) {
            mem_38810[i_39952] = mem_39710[i_39952];
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_39945[30];
        
        for (int32_t i_2 = 0; i_2 < 30; i_2++)
            mem_param_tmp_39945[i_2] = mem_38810[i_2];
        for (int32_t i_3 = 0; i_3 < 30; i_3++)
            mem_param_38782[i_3] = mem_param_tmp_39945[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 30; i_4++)
        loop_mem_38811[i_4] = mem_param_38782[i_4];
    
    float mem_38825[30 * 1 * 1];
    int64_t ltid_zz_36968 = sext_i32_i64(ltid_pre_39937);
    int64_t ltid_y_36967 = sext_i32_i64(ltid_pre_39938);
    int64_t ltid_x_36965 = sext_i32_i64(ltid_pre_39939);
    int32_t ltid_flat_36966 = local_tid_39933;
    float mem_38819[30 * 1 * 1];
    
    for (int32_t i_38596 = 0; i_38596 < 30; i_38596++) {
        int64_t i_36977 = sext_i32_i64(i_38596);
        
        for (int64_t i_39954 = 0; i_39954 < 1; i_39954++) {
            mem_38819[i_36977 + i_39954] = loop_mem_38811[i_36977 + i_39954];
        }
    }
    for (int64_t i_39955 = 0; i_39955 < 30; i_39955++) {
        for (int64_t i_39956 = 0; i_39956 < 1; i_39956++) {
            for (int64_t i_39957 = 0; i_39957 < 1; i_39957++) {
                mem_38825[i_39955 + i_39956 + i_39957] = mem_38819[i_39955 +
                                                                   i_39956 +
                                                                   i_39957];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t reg_tile_i_39958 = squot64(sext_i32_i64(local_tid_39933), Ty_36841 *
                                       Tx_36842);
    int64_t reg_tile_i_39959 = squot64(sext_i32_i64(local_tid_39933) -
                                       squot64(sext_i32_i64(local_tid_39933),
                                               Ty_36841 * Tx_36842) *
                                       (Ty_36841 * Tx_36842), Tx_36842);
    int64_t reg_tile_i_39960 = sext_i32_i64(local_tid_39933) -
            squot64(sext_i32_i64(local_tid_39933), Ty_36841 * Tx_36842) *
            (Ty_36841 * Tx_36842) - squot64(sext_i32_i64(local_tid_39933) -
                                            squot64(sext_i32_i64(local_tid_39933),
                                                    Ty_36841 * Tx_36842) *
                                            (Ty_36841 * Tx_36842), Tx_36842) *
            Tx_36842;
    int64_t tile_dim_start_39961 = 30 * (gid_zz_36852 + reg_tile_i_39958);
    int64_t tile_dim_start_39962 = Ty_36841 * gid_y_36851 + reg_tile_i_39959;
    int64_t tile_dim_start_39963 = Tx_36842 * gid_x_36850 + reg_tile_i_39960;
    
    for (int64_t nest_i_39964 = 0; nest_i_39964 < 30; nest_i_39964++) {
        for (int64_t nest_i_39965 = 0; nest_i_39965 < 1; nest_i_39965++) {
            for (int64_t nest_i_39966 = 0; nest_i_39966 < 1; nest_i_39966++) {
                if ((slt64(tile_dim_start_39961 + nest_i_39964, m_27809) &&
                     slt64(tile_dim_start_39962 + nest_i_39965,
                           i32_res_27828)) && slt64(tile_dim_start_39963 +
                                                    nest_i_39966,
                                                    i32_res_27828)) {
                    ((__global float *) mem_38829)[(tile_dim_start_39961 +
                                                    nest_i_39964) *
                                                   (i32_res_27828 *
                                                    i32_res_27828) +
                                                   (tile_dim_start_39962 +
                                                    nest_i_39965) *
                                                   i32_res_27828 +
                                                   (tile_dim_start_39963 +
                                                    nest_i_39966)] =
                        mem_38825[nest_i_39964 + nest_i_39965 + nest_i_39966];
                }
            }
        }
    }
    
  error_4:
    return;
}
__kernel void mainzisegmap_intragroup_37006(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_38968_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_38966_backing_aligned_1,
                                            int64_t m_27809, int64_t N_27810,
                                            int64_t i32_res_27822,
                                            int64_t i32_res_27828,
                                            int64_t gridDim_x_37000,
                                            int64_t full_tiles_37031,
                                            int64_t kk_37238, __global
                                            unsigned char *images_mem_38682,
                                            __global unsigned char *mem_38694,
                                            __global unsigned char *mem_39140)
{
    #define Ty_36987 (mainziTy_36984)
    #define Ry_36988 (mainziRy_36986)
    #define Tx_36989 (mainziTx_36983)
    #define Rx_36990 (mainziRx_36985)
    #define Tk_36991 (mainziTk_36982)
    #define tk_div_tx_36992 (sdiv_up64(mainziTk_36982, mainziTx_36983))
    #define tk_div_ty_36993 (sdiv_up64(mainziTk_36982, mainziTy_36984))
    #define TxRx_36994 (mainziTx_36983 * mainziRx_36985)
    #define TyRy_36995 (mainziTy_36984 * mainziRy_36986)
    #define a_loc_szz_36997 (mainziTk_36982 * (mainziTy_36984 * mainziRy_36986))
    #define b_loc_szz_36999 (mainziRx_36985 * (mainziTx_36983 * mainziTk_36982))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_38968_backing_1 = (__local volatile
                                                           char *) mem_38968_backing_aligned_0;
    __local volatile char *restrict mem_38966_backing_0 = (__local volatile
                                                           char *) mem_38966_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40106;
    int32_t local_tid_40107;
    int64_t group_sizze_40110;
    int32_t wave_sizze_40109;
    int32_t group_tid_40108;
    
    global_tid_40106 = get_global_id(0);
    local_tid_40107 = get_local_id(0);
    group_sizze_40110 = get_local_size(0);
    wave_sizze_40109 = LOCKSTEP_WIDTH;
    group_tid_40108 = get_group_id(0);
    
    int32_t gid_flat_37006;
    
    gid_flat_37006 = group_tid_40108;
    
    int32_t ltid_pre_40111;
    
    ltid_pre_40111 = squot32(local_tid_40107, sext_i64_i32(Tx_36989));
    
    int32_t ltid_pre_40112;
    
    ltid_pre_40112 = local_tid_40107 - squot32(local_tid_40107,
                                               sext_i64_i32(Tx_36989)) *
        sext_i64_i32(Tx_36989);
    
    int64_t gid_y_37005;
    
    gid_y_37005 = squot64(sext_i32_i64(group_tid_40108), gridDim_x_37000);
    
    int64_t gid_x_37004;
    
    gid_x_37004 = sext_i32_i64(group_tid_40108) -
        squot64(sext_i32_i64(group_tid_40108), gridDim_x_37000) *
        gridDim_x_37000;
    
    int64_t iii_37007;
    
    iii_37007 = TyRy_36995 * gid_y_37005;
    
    int64_t jjj_37008 = TxRx_36994 * gid_x_37004;
    float mem_38964[Ry_36988 * Rx_36990];
    int64_t ltid_y_37011 = sext_i32_i64(ltid_pre_40111);
    int64_t ltid_x_37009 = sext_i32_i64(ltid_pre_40112);
    int32_t ltid_flat_37010 = local_tid_40107;
    float mem_38955[Ry_36988 * Rx_36990];
    
    for (int64_t i_37022 = 0; i_37022 < Ry_36988; i_37022++) {
        for (int64_t i_37025 = 0; i_37025 < Rx_36990; i_37025++) {
            mem_38955[i_37022 * Rx_36990 + i_37025] = 0.0F;
        }
    }
    for (int64_t i_40115 = 0; i_40115 < Ry_36988; i_40115++) {
        for (int64_t i_40116 = 0; i_40116 < Rx_36990; i_40116++) {
            mem_38964[i_40115 * Rx_36990 + i_40116] = mem_38955[i_40115 *
                                                                Rx_36990 +
                                                                i_40116];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_38966;
    
    mem_38966 = (__local char *) mem_38966_backing_0;
    
    __local char *mem_38968;
    
    mem_38968 = (__local char *) mem_38968_backing_1;
    
    float mem_39039[Ry_36988];
    float mem_39043[Rx_36990];
    float loop_mem_39055[Ry_36988 * Rx_36990];
    float mem_param_38969[Ry_36988 * Rx_36990];
    
    for (int32_t i_2 = 0; i_2 < Ry_36988 * Rx_36990; i_2++)
        mem_param_38969[i_2] = mem_38964[i_2];
    for (int64_t i_37032 = 0; i_37032 < full_tiles_37031; i_37032++) {
        int64_t kk_37036 = Tk_36991 * i_37032;
        
        for (int64_t i_37037 = 0; i_37037 < Ry_36988; i_37037++) {
            int64_t binop_y_37060 = Ty_36987 * i_37037;
            
            for (int64_t i_37039 = 0; i_37039 < tk_div_tx_36992; i_37039++) {
                int64_t binop_y_37058 = Tx_36989 * i_37039;
                int64_t ltid_x_37041 = sext_i32_i64(ltid_pre_40111);
                int64_t ltid_y_37042 = sext_i32_i64(ltid_pre_40112);
                int32_t ltid_flat_37043 = local_tid_40107;
                int64_t k_37059 = ltid_y_37042 + binop_y_37058;
                int64_t i_37061 = ltid_x_37041 + binop_y_37060;
                int64_t gtid_37062 = iii_37007 + i_37061;
                int64_t A_col_idx_37063 = kk_37036 + k_37059;
                bool cond_37064 = slt64(gtid_37062, m_27809);
                float A_elem_37065;
                
                if (cond_37064) {
                    float A_elem_37067 = ((__global
                                           float *) images_mem_38682)[gtid_37062 *
                                                                      N_27810 +
                                                                      A_col_idx_37063];
                    
                    A_elem_37065 = A_elem_37067;
                } else {
                    A_elem_37065 = 0.0F;
                }
                
                bool cond_37069 = slt64(k_37059, Tk_36991);
                int64_t a_loc_ind_37070;
                
                if (cond_37069) {
                    int64_t binop_y_37071 = Tk_36991 * i_37061;
                    int64_t loc_fi_37072 = k_37059 + binop_y_37071;
                    
                    a_loc_ind_37070 = loc_fi_37072;
                } else {
                    a_loc_ind_37070 = -1;
                }
                if (sle64(0, a_loc_ind_37070) && slt64(a_loc_ind_37070,
                                                       a_loc_szz_36997)) {
                    ((__local float *) mem_38966)[a_loc_ind_37070] =
                        A_elem_37065;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_37077 = 0; i_37077 < tk_div_ty_36993; i_37077++) {
            int64_t binop_y_37098 = Ty_36987 * i_37077;
            
            for (int64_t i_37079 = 0; i_37079 < Rx_36990; i_37079++) {
                int64_t binop_y_37100 = Tx_36989 * i_37079;
                int64_t ltid_x_37081 = sext_i32_i64(ltid_pre_40111);
                int64_t ltid_y_37082 = sext_i32_i64(ltid_pre_40112);
                int32_t ltid_flat_37083 = local_tid_40107;
                int64_t k_37099 = ltid_x_37081 + binop_y_37098;
                int64_t j_37101 = ltid_y_37082 + binop_y_37100;
                int64_t gtid_37102 = jjj_37008 + j_37101;
                int64_t B_row_idx_37103 = kk_37036 + k_37099;
                bool cond_37104 = slt64(gtid_37102, i32_res_27828);
                float B_elem_37105;
                
                if (cond_37104) {
                    float B_elem_37107 = ((__global
                                           float *) mem_38694)[B_row_idx_37103 *
                                                               i32_res_27828 +
                                                               gtid_37102];
                    
                    B_elem_37105 = B_elem_37107;
                } else {
                    B_elem_37105 = 0.0F;
                }
                
                bool cond_37109 = slt64(k_37099, Tk_36991);
                int64_t b_loc_ind_37110;
                
                if (cond_37109) {
                    int64_t binop_y_37111 = TxRx_36994 * k_37099;
                    int64_t loc_fi_37112 = j_37101 + binop_y_37111;
                    
                    b_loc_ind_37110 = loc_fi_37112;
                } else {
                    b_loc_ind_37110 = -1;
                }
                if (sle64(0, b_loc_ind_37110) && slt64(b_loc_ind_37110,
                                                       b_loc_szz_36999)) {
                    ((__local float *) mem_38968)[b_loc_ind_37110] =
                        B_elem_37105;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_39054[Ry_36988 * Rx_36990];
        float mem_param_39026[Ry_36988 * Rx_36990];
        
        for (int32_t i_3 = 0; i_3 < Ry_36988 * Rx_36990; i_3++)
            mem_param_39026[i_3] = mem_param_38969[i_3];
        for (int64_t i_37117 = 0; i_37117 < Tk_36991; i_37117++) {
            int64_t binop_y_37156 = TxRx_36994 * i_37117;
            int64_t ltid_y_37121 = sext_i32_i64(ltid_pre_40111);
            int64_t ltid_x_37119 = sext_i32_i64(ltid_pre_40112);
            int32_t ltid_flat_37120 = local_tid_40107;
            float mem_39029[Ry_36988];
            float mem_39031[Rx_36990];
            int64_t binop_x_37147 = Ry_36988 * ltid_y_37121;
            
            for (int64_t i_37145 = 0; i_37145 < Ry_36988; i_37145++) {
                int64_t binop_x_37148 = i_37145 + binop_x_37147;
                int64_t binop_y_37149 = Tk_36991 * binop_x_37148;
                int64_t a_loc_ind_37150 = i_37117 + binop_y_37149;
                
                for (int64_t i_40128 = 0; i_40128 < 1; i_40128++) {
                    mem_39029[i_37145 + i_40128] = ((__local
                                                     float *) mem_38966)[a_loc_ind_37150 +
                                                                         i_40128];
                }
            }
            
            int64_t binop_y_37158 = Rx_36990 * ltid_x_37119;
            
            for (int64_t i_37154 = 0; i_37154 < Rx_36990; i_37154++) {
                int64_t binop_x_37157 = i_37154 + binop_y_37156;
                int64_t b_loc_ind_37159 = binop_x_37157 + binop_y_37158;
                
                for (int64_t i_40130 = 0; i_40130 < 1; i_40130++) {
                    mem_39031[i_37154 + i_40130] = ((__local
                                                     float *) mem_38968)[b_loc_ind_37159 +
                                                                         i_40130];
                }
            }
            for (int64_t i_40131 = 0; i_40131 < Ry_36988; i_40131++) {
                mem_39039[i_40131] = mem_39029[i_40131];
            }
            for (int64_t i_40132 = 0; i_40132 < Rx_36990; i_40132++) {
                mem_39043[i_40132] = mem_39031[i_40132];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_39053[Ry_36988 * Rx_36990];
            int64_t ltid_y_37166 = sext_i32_i64(ltid_pre_40111);
            int64_t ltid_x_37164 = sext_i32_i64(ltid_pre_40112);
            int32_t ltid_flat_37165 = local_tid_40107;
            int64_t binop_y_37209 = Ry_36988 * ltid_y_37166;
            int64_t binop_y_37213 = Rx_36990 * ltid_x_37164;
            
            for (int64_t i_37203 = 0; i_37203 < Ry_36988; i_37203++) {
                int64_t binop_x_37208 = iii_37007 + i_37203;
                int64_t cmpop_x_37210 = binop_x_37208 + binop_y_37209;
                bool binop_x_37211 = slt64(cmpop_x_37210, m_27809);
                
                for (int64_t i_37206 = 0; i_37206 < Rx_36990; i_37206++) {
                    int64_t binop_x_37212 = jjj_37008 + i_37206;
                    int64_t cmpop_x_37214 = binop_x_37212 + binop_y_37213;
                    bool binop_y_37215 = slt64(cmpop_x_37214, i32_res_27828);
                    bool cond_37216 = binop_x_37211 && binop_y_37215;
                    
                    if (cond_37216) {
                        float a_37218 = mem_39039[i_37203];
                        float c_37220 = mem_param_39026[i_37203 * Rx_36990 +
                                                        i_37206];
                        bool isnan_res_37223;
                        
                        isnan_res_37223 = futrts_isnan32(a_37218);
                        
                        float defunc_1_f_res_37224;
                        
                        if (isnan_res_37223) {
                            defunc_1_f_res_37224 = 0.0F;
                        } else {
                            float b_37219 = mem_39043[i_37206];
                            float defunc_1_f_res_f_res_37225 = a_37218 *
                                  b_37219;
                            
                            defunc_1_f_res_37224 = defunc_1_f_res_f_res_37225;
                        }
                        
                        float defunc_1_op_res_37229 = c_37220 +
                              defunc_1_f_res_37224;
                        
                        mem_param_39026[i_37203 * Rx_36990 + i_37206] =
                            defunc_1_op_res_37229;
                    }
                }
            }
            for (int64_t i_40135 = 0; i_40135 < Ry_36988; i_40135++) {
                for (int64_t i_40136 = 0; i_40136 < Rx_36990; i_40136++) {
                    mem_39053[i_40135 * Rx_36990 + i_40136] =
                        mem_param_39026[i_40135 * Rx_36990 + i_40136];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_40125[Ry_36988 * Rx_36990];
            
            for (int32_t i_4 = 0; i_4 < Ry_36988 * Rx_36990; i_4++)
                mem_param_tmp_40125[i_4] = mem_39053[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_36988 * Rx_36990; i_5++)
                mem_param_39026[i_5] = mem_param_tmp_40125[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_36988 * Rx_36990; i_6++)
            loop_mem_39054[i_6] = mem_param_39026[i_6];
        
        float mem_param_tmp_40117[Ry_36988 * Rx_36990];
        
        for (int32_t i_7 = 0; i_7 < Ry_36988 * Rx_36990; i_7++)
            mem_param_tmp_40117[i_7] = loop_mem_39054[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_36988 * Rx_36990; i_8++)
            mem_param_38969[i_8] = mem_param_tmp_40117[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_36988 * Rx_36990; i_9++)
        loop_mem_39055[i_9] = mem_param_38969[i_9];
    for (int64_t i_37239 = 0; i_37239 < Ry_36988; i_37239++) {
        int64_t binop_y_37264 = Ty_36987 * i_37239;
        
        for (int64_t i_37241 = 0; i_37241 < tk_div_tx_36992; i_37241++) {
            int64_t binop_y_37262 = Tx_36989 * i_37241;
            int64_t ltid_x_37243 = sext_i32_i64(ltid_pre_40111);
            int64_t ltid_y_37244 = sext_i32_i64(ltid_pre_40112);
            int32_t ltid_flat_37245 = local_tid_40107;
            int64_t k_37263 = ltid_y_37244 + binop_y_37262;
            int64_t i_37265 = ltid_x_37243 + binop_y_37264;
            int64_t gtid_37266 = iii_37007 + i_37265;
            int64_t A_col_idx_37267 = kk_37238 + k_37263;
            bool binop_x_37268 = slt64(gtid_37266, m_27809);
            bool binop_y_37269 = slt64(A_col_idx_37267, i32_res_27822);
            bool cond_37270 = binop_x_37268 && binop_y_37269;
            float A_elem_37271;
            
            if (cond_37270) {
                float A_elem_37273 = ((__global
                                       float *) images_mem_38682)[gtid_37266 *
                                                                  N_27810 +
                                                                  A_col_idx_37267];
                
                A_elem_37271 = A_elem_37273;
            } else {
                A_elem_37271 = 0.0F;
            }
            
            bool cond_37275 = slt64(k_37263, Tk_36991);
            int64_t a_loc_ind_37276;
            
            if (cond_37275) {
                int64_t binop_y_37277 = Tk_36991 * i_37265;
                int64_t loc_fi_37278 = k_37263 + binop_y_37277;
                
                a_loc_ind_37276 = loc_fi_37278;
            } else {
                a_loc_ind_37276 = -1;
            }
            if (sle64(0, a_loc_ind_37276) && slt64(a_loc_ind_37276,
                                                   a_loc_szz_36997)) {
                ((__local float *) mem_38966)[a_loc_ind_37276] = A_elem_37271;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_37283 = 0; i_37283 < tk_div_ty_36993; i_37283++) {
        int64_t binop_y_37306 = Ty_36987 * i_37283;
        
        for (int64_t i_37285 = 0; i_37285 < Rx_36990; i_37285++) {
            int64_t binop_y_37308 = Tx_36989 * i_37285;
            int64_t ltid_x_37287 = sext_i32_i64(ltid_pre_40111);
            int64_t ltid_y_37288 = sext_i32_i64(ltid_pre_40112);
            int32_t ltid_flat_37289 = local_tid_40107;
            int64_t k_37307 = ltid_x_37287 + binop_y_37306;
            int64_t j_37309 = ltid_y_37288 + binop_y_37308;
            int64_t gtid_37310 = jjj_37008 + j_37309;
            int64_t B_row_idx_37311 = kk_37238 + k_37307;
            bool binop_x_37312 = slt64(gtid_37310, i32_res_27828);
            bool binop_y_37313 = slt64(B_row_idx_37311, i32_res_27822);
            bool cond_37314 = binop_x_37312 && binop_y_37313;
            float B_elem_37315;
            
            if (cond_37314) {
                float B_elem_37317 = ((__global
                                       float *) mem_38694)[B_row_idx_37311 *
                                                           i32_res_27828 +
                                                           gtid_37310];
                
                B_elem_37315 = B_elem_37317;
            } else {
                B_elem_37315 = 0.0F;
            }
            
            bool cond_37319 = slt64(k_37307, Tk_36991);
            int64_t b_loc_ind_37320;
            
            if (cond_37319) {
                int64_t binop_y_37321 = TxRx_36994 * k_37307;
                int64_t loc_fi_37322 = j_37309 + binop_y_37321;
                
                b_loc_ind_37320 = loc_fi_37322;
            } else {
                b_loc_ind_37320 = -1;
            }
            if (sle64(0, b_loc_ind_37320) && slt64(b_loc_ind_37320,
                                                   b_loc_szz_36999)) {
                ((__local float *) mem_38968)[b_loc_ind_37320] = B_elem_37315;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_39121[Ry_36988];
    float mem_39125[Rx_36990];
    float mem_39135[Ry_36988 * Rx_36990];
    float loop_mem_39137[Ry_36988 * Rx_36990];
    float mem_param_39108[Ry_36988 * Rx_36990];
    
    for (int32_t i_10 = 0; i_10 < Ry_36988 * Rx_36990; i_10++)
        mem_param_39108[i_10] = loop_mem_39055[i_10];
    for (int64_t i_37327 = 0; i_37327 < Tk_36991; i_37327++) {
        int64_t cmpop_x_37329 = kk_37238 + i_37327;
        bool cond_37330 = slt64(cmpop_x_37329, i32_res_27822);
        float mem_39728[Ry_36988 * Rx_36990];
        
        if (cond_37330) {
            int64_t binop_y_37368 = TxRx_36994 * i_37327;
            int64_t bytes_39110 = 4 * Ry_36988;
            int64_t bytes_39112 = 4 * Rx_36990;
            int64_t ltid_y_37333 = sext_i32_i64(ltid_pre_40111);
            int64_t ltid_x_37331 = sext_i32_i64(ltid_pre_40112);
            int32_t ltid_flat_37332 = local_tid_40107;
            float mem_39111[Ry_36988];
            float mem_39113[Rx_36990];
            int64_t binop_x_37359 = Ry_36988 * ltid_y_37333;
            
            for (int64_t i_37357 = 0; i_37357 < Ry_36988; i_37357++) {
                int64_t binop_x_37360 = i_37357 + binop_x_37359;
                int64_t binop_y_37361 = Tk_36991 * binop_x_37360;
                int64_t a_loc_ind_37362 = i_37327 + binop_y_37361;
                
                for (int64_t i_40144 = 0; i_40144 < 1; i_40144++) {
                    mem_39111[i_37357 + i_40144] = ((__local
                                                     float *) mem_38966)[a_loc_ind_37362 +
                                                                         i_40144];
                }
            }
            
            int64_t binop_y_37370 = Rx_36990 * ltid_x_37331;
            
            for (int64_t i_37366 = 0; i_37366 < Rx_36990; i_37366++) {
                int64_t binop_x_37369 = i_37366 + binop_y_37368;
                int64_t b_loc_ind_37371 = binop_x_37369 + binop_y_37370;
                
                for (int64_t i_40146 = 0; i_40146 < 1; i_40146++) {
                    mem_39113[i_37366 + i_40146] = ((__local
                                                     float *) mem_38968)[b_loc_ind_37371 +
                                                                         i_40146];
                }
            }
            for (int64_t i_40147 = 0; i_40147 < Ry_36988; i_40147++) {
                mem_39121[i_40147] = mem_39111[i_40147];
            }
            for (int64_t i_40148 = 0; i_40148 < Rx_36990; i_40148++) {
                mem_39125[i_40148] = mem_39113[i_40148];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_37378 = sext_i32_i64(ltid_pre_40111);
            int64_t ltid_x_37376 = sext_i32_i64(ltid_pre_40112);
            int32_t ltid_flat_37377 = local_tid_40107;
            int64_t binop_y_37421 = Ry_36988 * ltid_y_37378;
            int64_t binop_y_37425 = Rx_36990 * ltid_x_37376;
            
            for (int64_t i_37415 = 0; i_37415 < Ry_36988; i_37415++) {
                int64_t binop_x_37420 = iii_37007 + i_37415;
                int64_t cmpop_x_37422 = binop_x_37420 + binop_y_37421;
                bool binop_x_37423 = slt64(cmpop_x_37422, m_27809);
                
                for (int64_t i_37418 = 0; i_37418 < Rx_36990; i_37418++) {
                    int64_t binop_x_37424 = jjj_37008 + i_37418;
                    int64_t cmpop_x_37426 = binop_x_37424 + binop_y_37425;
                    bool binop_y_37427 = slt64(cmpop_x_37426, i32_res_27828);
                    bool cond_37428 = binop_x_37423 && binop_y_37427;
                    
                    if (cond_37428) {
                        float a_37430 = mem_39121[i_37415];
                        float c_37432 = mem_param_39108[i_37415 * Rx_36990 +
                                                        i_37418];
                        bool isnan_res_37435;
                        
                        isnan_res_37435 = futrts_isnan32(a_37430);
                        
                        float defunc_1_f_res_37436;
                        
                        if (isnan_res_37435) {
                            defunc_1_f_res_37436 = 0.0F;
                        } else {
                            float b_37431 = mem_39125[i_37418];
                            float defunc_1_f_res_f_res_37437 = a_37430 *
                                  b_37431;
                            
                            defunc_1_f_res_37436 = defunc_1_f_res_f_res_37437;
                        }
                        
                        float defunc_1_op_res_37441 = c_37432 +
                              defunc_1_f_res_37436;
                        
                        mem_param_39108[i_37415 * Rx_36990 + i_37418] =
                            defunc_1_op_res_37441;
                    }
                }
            }
            for (int64_t i_40151 = 0; i_40151 < Ry_36988; i_40151++) {
                for (int64_t i_40152 = 0; i_40152 < Rx_36990; i_40152++) {
                    mem_39135[i_40151 * Rx_36990 + i_40152] =
                        mem_param_39108[i_40151 * Rx_36990 + i_40152];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_40153 = 0; i_40153 < Ry_36988; i_40153++) {
                for (int64_t i_40154 = 0; i_40154 < Rx_36990; i_40154++) {
                    mem_39728[i_40153 * Rx_36990 + i_40154] =
                        mem_39135[i_40153 * Rx_36990 + i_40154];
                }
            }
        } else {
            for (int64_t i_40155 = 0; i_40155 < Ry_36988; i_40155++) {
                for (int64_t i_40156 = 0; i_40156 < Rx_36990; i_40156++) {
                    mem_39728[i_40155 * Rx_36990 + i_40156] =
                        mem_param_39108[i_40155 * Rx_36990 + i_40156];
                }
            }
        }
        
        float mem_param_tmp_40141[Ry_36988 * Rx_36990];
        
        for (int32_t i_11 = 0; i_11 < Ry_36988 * Rx_36990; i_11++)
            mem_param_tmp_40141[i_11] = mem_39728[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_36988 * Rx_36990; i_12++)
            mem_param_39108[i_12] = mem_param_tmp_40141[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_36988 * Rx_36990; i_13++)
        loop_mem_39137[i_13] = mem_param_39108[i_13];
    
    int64_t reg_tile_i_40157 = squot64(sext_i32_i64(local_tid_40107), Tx_36989);
    int64_t reg_tile_i_40158 = sext_i32_i64(local_tid_40107) -
            squot64(sext_i32_i64(local_tid_40107), Tx_36989) * Tx_36989;
    int64_t tile_dim_start_40159 = Ry_36988 * (Ty_36987 * gid_y_37005 +
                                               reg_tile_i_40157);
    int64_t tile_dim_start_40160 = Rx_36990 * (Tx_36989 * gid_x_37004 +
                                               reg_tile_i_40158);
    
    for (int64_t nest_i_40161 = 0; nest_i_40161 < Ry_36988; nest_i_40161++) {
        for (int64_t nest_i_40162 = 0; nest_i_40162 < Rx_36990;
             nest_i_40162++) {
            if (slt64(tile_dim_start_40159 + nest_i_40161, m_27809) &&
                slt64(tile_dim_start_40160 + nest_i_40162, i32_res_27828)) {
                ((__global float *) mem_39140)[(tile_dim_start_40159 +
                                                nest_i_40161) * i32_res_27828 +
                                               (tile_dim_start_40160 +
                                                nest_i_40162)] =
                    loop_mem_39137[nest_i_40161 * Rx_36990 + nest_i_40162];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_36987
    #undef Ry_36988
    #undef Tx_36989
    #undef Rx_36990
    #undef Tk_36991
    #undef tk_div_tx_36992
    #undef tk_div_ty_36993
    #undef TxRx_36994
    #undef TyRy_36995
    #undef a_loc_szz_36997
    #undef b_loc_szz_36999
}
__kernel void mainzisegmap_intragroup_37455(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_39198_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_39189_backing_aligned_1,
                                            int64_t m_27809,
                                            int64_t i32_res_27828,
                                            int64_t num_groups_y_37453,
                                            int64_t num_whole_tiles_37471,
                                            int64_t residual_input_37598,
                                            unsigned char cond_37599, __global
                                            unsigned char *defunc_3_map_res_mem_39150,
                                            __global unsigned char *mem_39179,
                                            __global unsigned char *mem_39206)
{
    #define tile_sizze_37450 (mainzitile_sizze_37449)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_39198_backing_5 = (__local volatile
                                                           char *) mem_39198_backing_aligned_0;
    __local volatile char *restrict mem_39189_backing_0 = (__local volatile
                                                           char *) mem_39189_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40238;
    int32_t local_tid_40239;
    int64_t group_sizze_40242;
    int32_t wave_sizze_40241;
    int32_t group_tid_40240;
    
    global_tid_40238 = get_global_id(0);
    local_tid_40239 = get_local_id(0);
    group_sizze_40242 = get_local_size(0);
    wave_sizze_40241 = LOCKSTEP_WIDTH;
    group_tid_40240 = get_group_id(0);
    
    int32_t gid_flat_37455;
    
    gid_flat_37455 = group_tid_40240;
    
    int32_t ltid_pre_40243;
    
    ltid_pre_40243 = squot32(local_tid_40239, sext_i64_i32(tile_sizze_37450));
    
    int32_t ltid_pre_40244;
    
    ltid_pre_40244 = local_tid_40239 - squot32(local_tid_40239,
                                               sext_i64_i32(tile_sizze_37450)) *
        sext_i64_i32(tile_sizze_37450);
    
    int64_t gid_x_37447;
    
    gid_x_37447 = squot64(sext_i32_i64(group_tid_40240), num_groups_y_37453);
    
    int64_t gid_y_37448;
    
    gid_y_37448 = sext_i32_i64(group_tid_40240) -
        squot64(sext_i32_i64(group_tid_40240), num_groups_y_37453) *
        num_groups_y_37453;
    
    float mem_39184[1];
    int64_t ltid_x_37472 = sext_i32_i64(ltid_pre_40243);
    int64_t ltid_y_37473 = sext_i32_i64(ltid_pre_40244);
    int32_t ltid_flat_37474 = local_tid_40239;
    
    if (slt64(ltid_x_37472, tile_sizze_37450) && slt64(ltid_y_37473,
                                                       tile_sizze_37450)) {
        mem_39184[0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_37557 = gid_x_37447 * tile_sizze_37450;
    int64_t binop_x_37572 = gid_y_37448 * tile_sizze_37450;
    __local char *mem_39189;
    
    mem_39189 = (__local char *) mem_39189_backing_0;
    
    float accs_mem_39194[1];
    float mem_param_39185[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_39185[i_1] = mem_39184[i_1];
    for (int64_t tile_id_37483 = 0; tile_id_37483 < num_whole_tiles_37471;
         tile_id_37483++) {
        int64_t binop_x_37555 = tile_sizze_37450 * tile_id_37483;
        int64_t ltid_x_37484 = sext_i32_i64(ltid_pre_40243);
        int64_t ltid_y_37485 = sext_i32_i64(ltid_pre_40244);
        int32_t ltid_flat_37486 = local_tid_40239;
        int64_t j_37556 = ltid_y_37485 + binop_x_37555;
        int64_t gtid_37558 = ltid_x_37484 + binop_x_37557;
        bool binop_x_37563 = slt64(j_37556, i32_res_27828);
        bool binop_y_37564 = slt64(gtid_37558, m_27809);
        bool cond_37565 = binop_x_37563 && binop_y_37564;
        float pre_37566;
        
        if (cond_37565) {
            float x_37567 = ((__global
                              float *) defunc_3_map_res_mem_39150)[gtid_37558 *
                                                                   i32_res_27828 +
                                                                   j_37556];
            
            pre_37566 = x_37567;
        } else {
            pre_37566 = 0.0F;
        }
        ((__local float *) mem_39189)[ltid_x_37484 * tile_sizze_37450 +
                                      ltid_y_37485] = pre_37566;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_39193[1];
        int64_t ltid_x_37516 = sext_i32_i64(ltid_pre_40243);
        int64_t ltid_y_37517 = sext_i32_i64(ltid_pre_40244);
        int32_t ltid_flat_37518 = local_tid_40239;
        int64_t gtid_37571 = ltid_x_37516 + binop_x_37557;
        int64_t gtid_37573 = ltid_y_37517 + binop_x_37572;
        float acc_37576 = mem_param_39185[0];
        bool binop_x_37580 = slt64(gtid_37571, m_27809);
        bool binop_y_37581 = slt64(gtid_37573, i32_res_27828);
        bool cond_37582 = binop_x_37580 && binop_y_37581;
        float acc_37583;
        
        if (cond_37582) {
            float x_37584;
            float redout_38637 = acc_37576;
            
            for (int64_t i_38638 = 0; i_38638 < tile_sizze_37450; i_38638++) {
                float x_37588 = ((__local float *) mem_39189)[ltid_x_37516 *
                                                              tile_sizze_37450 +
                                                              i_38638];
                int64_t slice_38670 = binop_x_37555 + i_38638;
                float x_37589 = ((__global float *) mem_39179)[slice_38670 *
                                                               (i32_res_27828 *
                                                                m_27809) +
                                                               gtid_37571 *
                                                               i32_res_27828 +
                                                               gtid_37573];
                float defunc_1_f_res_37590 = x_37588 * x_37589;
                float defunc_1_op_res_37587 = defunc_1_f_res_37590 +
                      redout_38637;
                float redout_tmp_40247 = defunc_1_op_res_37587;
                
                redout_38637 = redout_tmp_40247;
            }
            x_37584 = redout_38637;
            acc_37583 = x_37584;
        } else {
            acc_37583 = acc_37576;
        }
        mem_39193[0] = acc_37583;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_40245[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_40245[i_2] = mem_39193[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_39185[i_3] = mem_param_tmp_40245[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_39194[i_4] = mem_param_39185[i_4];
    
    __local char *mem_39198;
    
    mem_39198 = (__local char *) mem_39198_backing_5;
    
    float mem_39202[1];
    float mem_39742[1];
    
    if (cond_37599) {
        mem_39742[0] = accs_mem_39194[0];
    } else {
        int64_t binop_x_37672 = tile_sizze_37450 * num_whole_tiles_37471;
        int64_t ltid_x_37600 = sext_i32_i64(ltid_pre_40243);
        int64_t ltid_y_37601 = sext_i32_i64(ltid_pre_40244);
        int32_t ltid_flat_37602 = local_tid_40239;
        int64_t j_37673 = ltid_y_37601 + binop_x_37672;
        int64_t gtid_37675 = binop_x_37557 + ltid_x_37600;
        bool binop_x_37680 = slt64(j_37673, i32_res_27828);
        bool binop_y_37681 = slt64(gtid_37675, m_27809);
        bool cond_37682 = binop_x_37680 && binop_y_37681;
        float pre_37683;
        
        if (cond_37682) {
            float x_37684 = ((__global
                              float *) defunc_3_map_res_mem_39150)[gtid_37675 *
                                                                   i32_res_27828 +
                                                                   j_37673];
            
            pre_37683 = x_37684;
        } else {
            pre_37683 = 0.0F;
        }
        ((__local float *) mem_39198)[ltid_x_37600 * tile_sizze_37450 +
                                      ltid_y_37601] = pre_37683;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_x_37633 = sext_i32_i64(ltid_pre_40243);
        int64_t ltid_y_37634 = sext_i32_i64(ltid_pre_40244);
        int32_t ltid_flat_37635 = local_tid_40239;
        int64_t gtid_37689 = binop_x_37557 + ltid_x_37633;
        int64_t gtid_37691 = binop_x_37572 + ltid_y_37634;
        float acc_37694 = accs_mem_39194[0];
        bool binop_x_37698 = slt64(gtid_37689, m_27809);
        bool binop_y_37699 = slt64(gtid_37691, i32_res_27828);
        bool cond_37700 = binop_x_37698 && binop_y_37699;
        float acc_37701;
        
        if (cond_37700) {
            float x_37702;
            float redout_38639 = acc_37694;
            
            for (int64_t i_38640 = 0; i_38640 < residual_input_37598;
                 i_38640++) {
                float x_37706 = ((__local float *) mem_39198)[ltid_x_37633 *
                                                              tile_sizze_37450 +
                                                              i_38640];
                int64_t slice_38671 = binop_x_37672 + i_38640;
                float x_37707 = ((__global float *) mem_39179)[slice_38671 *
                                                               (i32_res_27828 *
                                                                m_27809) +
                                                               gtid_37689 *
                                                               i32_res_27828 +
                                                               gtid_37691];
                float defunc_1_f_res_37708 = x_37706 * x_37707;
                float defunc_1_op_res_37705 = defunc_1_f_res_37708 +
                      redout_38639;
                float redout_tmp_40248 = defunc_1_op_res_37705;
                
                redout_38639 = redout_tmp_40248;
            }
            x_37702 = redout_38639;
            acc_37701 = x_37702;
        } else {
            acc_37701 = acc_37694;
        }
        mem_39202[0] = acc_37701;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_39742[0] = mem_39202[0];
    }
    
    int64_t thread_out_index_40249 = gid_x_37447 * tile_sizze_37450 +
            sext_i32_i64(ltid_pre_40243);
    int64_t thread_out_index_40250 = gid_y_37448 * tile_sizze_37450 +
            sext_i32_i64(ltid_pre_40244);
    
    if (slt64(thread_out_index_40249, m_27809) && slt64(thread_out_index_40250,
                                                        i32_res_27828)) {
        ((__global float *) mem_39206)[thread_out_index_40249 * i32_res_27828 +
                                       thread_out_index_40250] = mem_39742[0];
    }
    
  error_5:
    return;
    #undef tile_sizze_37450
}
__kernel void mainzisegmap_intragroup_37747(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_39258_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_39256_backing_aligned_1,
                                            int64_t N_27808, int64_t m_27809,
                                            int64_t i32_res_27828,
                                            int64_t gridDim_x_37741,
                                            int64_t full_tiles_37772,
                                            int64_t kk_37975, __global
                                            unsigned char *defunc_4_map_res_mem_39216,
                                            __global unsigned char *mem_39240,
                                            __global unsigned char *mem_39430)
{
    #define Ty_37728 (mainziTy_37725)
    #define Ry_37729 (mainziRy_37727)
    #define Tx_37730 (mainziTx_37724)
    #define Rx_37731 (mainziRx_37726)
    #define Tk_37732 (mainziTk_37723)
    #define tk_div_tx_37733 (sdiv_up64(mainziTk_37723, mainziTx_37724))
    #define tk_div_ty_37734 (sdiv_up64(mainziTk_37723, mainziTy_37725))
    #define TxRx_37735 (mainziTx_37724 * mainziRx_37726)
    #define TyRy_37736 (mainziTy_37725 * mainziRy_37727)
    #define a_loc_szz_37738 (mainziTk_37723 * (mainziTy_37725 * mainziRy_37727))
    #define b_loc_szz_37740 (mainziRx_37726 * (mainziTx_37724 * mainziTk_37723))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_39258_backing_1 = (__local volatile
                                                           char *) mem_39258_backing_aligned_0;
    __local volatile char *restrict mem_39256_backing_0 = (__local volatile
                                                           char *) mem_39256_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40326;
    int32_t local_tid_40327;
    int64_t group_sizze_40330;
    int32_t wave_sizze_40329;
    int32_t group_tid_40328;
    
    global_tid_40326 = get_global_id(0);
    local_tid_40327 = get_local_id(0);
    group_sizze_40330 = get_local_size(0);
    wave_sizze_40329 = LOCKSTEP_WIDTH;
    group_tid_40328 = get_group_id(0);
    
    int32_t gid_flat_37747;
    
    gid_flat_37747 = group_tid_40328;
    
    int32_t ltid_pre_40331;
    
    ltid_pre_40331 = squot32(local_tid_40327, sext_i64_i32(Tx_37730));
    
    int32_t ltid_pre_40332;
    
    ltid_pre_40332 = local_tid_40327 - squot32(local_tid_40327,
                                               sext_i64_i32(Tx_37730)) *
        sext_i64_i32(Tx_37730);
    
    int64_t gid_y_37746;
    
    gid_y_37746 = squot64(sext_i32_i64(group_tid_40328), gridDim_x_37741);
    
    int64_t gid_x_37745;
    
    gid_x_37745 = sext_i32_i64(group_tid_40328) -
        squot64(sext_i32_i64(group_tid_40328), gridDim_x_37741) *
        gridDim_x_37741;
    
    int64_t iii_37748;
    
    iii_37748 = TyRy_37736 * gid_y_37746;
    
    int64_t jjj_37749 = TxRx_37735 * gid_x_37745;
    float mem_39254[Ry_37729 * Rx_37731];
    int64_t ltid_y_37752 = sext_i32_i64(ltid_pre_40331);
    int64_t ltid_x_37750 = sext_i32_i64(ltid_pre_40332);
    int32_t ltid_flat_37751 = local_tid_40327;
    float mem_39245[Ry_37729 * Rx_37731];
    
    for (int64_t i_37763 = 0; i_37763 < Ry_37729; i_37763++) {
        for (int64_t i_37766 = 0; i_37766 < Rx_37731; i_37766++) {
            mem_39245[i_37763 * Rx_37731 + i_37766] = 0.0F;
        }
    }
    for (int64_t i_40335 = 0; i_40335 < Ry_37729; i_40335++) {
        for (int64_t i_40336 = 0; i_40336 < Rx_37731; i_40336++) {
            mem_39254[i_40335 * Rx_37731 + i_40336] = mem_39245[i_40335 *
                                                                Rx_37731 +
                                                                i_40336];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_39256;
    
    mem_39256 = (__local char *) mem_39256_backing_0;
    
    __local char *mem_39258;
    
    mem_39258 = (__local char *) mem_39258_backing_1;
    
    float mem_39329[Ry_37729];
    float mem_39333[Rx_37731];
    float loop_mem_39345[Ry_37729 * Rx_37731];
    float mem_param_39259[Ry_37729 * Rx_37731];
    
    for (int32_t i_2 = 0; i_2 < Ry_37729 * Rx_37731; i_2++)
        mem_param_39259[i_2] = mem_39254[i_2];
    for (int64_t i_37773 = 0; i_37773 < full_tiles_37772; i_37773++) {
        int64_t kk_37777 = Tk_37732 * i_37773;
        
        for (int64_t i_37778 = 0; i_37778 < Ry_37729; i_37778++) {
            int64_t binop_y_37801 = Ty_37728 * i_37778;
            
            for (int64_t i_37780 = 0; i_37780 < tk_div_tx_37733; i_37780++) {
                int64_t binop_y_37799 = Tx_37730 * i_37780;
                int64_t ltid_x_37782 = sext_i32_i64(ltid_pre_40331);
                int64_t ltid_y_37783 = sext_i32_i64(ltid_pre_40332);
                int32_t ltid_flat_37784 = local_tid_40327;
                int64_t k_37800 = ltid_y_37783 + binop_y_37799;
                int64_t i_37802 = ltid_x_37782 + binop_y_37801;
                int64_t gtid_37803 = iii_37748 + i_37802;
                int64_t A_col_idx_37804 = kk_37777 + k_37800;
                bool cond_37805 = slt64(gtid_37803, m_27809);
                float A_elem_37806;
                
                if (cond_37805) {
                    float A_elem_37808 = ((__global
                                           float *) defunc_4_map_res_mem_39216)[gtid_37803 *
                                                                                i32_res_27828 +
                                                                                A_col_idx_37804];
                    
                    A_elem_37806 = A_elem_37808;
                } else {
                    A_elem_37806 = 0.0F;
                }
                
                bool cond_37810 = slt64(k_37800, Tk_37732);
                int64_t a_loc_ind_37811;
                
                if (cond_37810) {
                    int64_t binop_y_37812 = Tk_37732 * i_37802;
                    int64_t loc_fi_37813 = k_37800 + binop_y_37812;
                    
                    a_loc_ind_37811 = loc_fi_37813;
                } else {
                    a_loc_ind_37811 = -1;
                }
                if (sle64(0, a_loc_ind_37811) && slt64(a_loc_ind_37811,
                                                       a_loc_szz_37738)) {
                    ((__local float *) mem_39256)[a_loc_ind_37811] =
                        A_elem_37806;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_37818 = 0; i_37818 < tk_div_ty_37734; i_37818++) {
            int64_t binop_y_37839 = Ty_37728 * i_37818;
            
            for (int64_t i_37820 = 0; i_37820 < Rx_37731; i_37820++) {
                int64_t binop_y_37841 = Tx_37730 * i_37820;
                int64_t ltid_x_37822 = sext_i32_i64(ltid_pre_40331);
                int64_t ltid_y_37823 = sext_i32_i64(ltid_pre_40332);
                int32_t ltid_flat_37824 = local_tid_40327;
                int64_t k_37840 = ltid_x_37822 + binop_y_37839;
                int64_t j_37842 = ltid_y_37823 + binop_y_37841;
                int64_t gtid_37843 = jjj_37749 + j_37842;
                int64_t B_row_idx_37844 = kk_37777 + k_37840;
                bool cond_37845 = slt64(gtid_37843, N_27808);
                float B_elem_37846;
                
                if (cond_37845) {
                    float B_elem_37848 = ((__global
                                           float *) mem_39240)[B_row_idx_37844 *
                                                               N_27808 +
                                                               gtid_37843];
                    
                    B_elem_37846 = B_elem_37848;
                } else {
                    B_elem_37846 = 0.0F;
                }
                
                bool cond_37850 = slt64(k_37840, Tk_37732);
                int64_t b_loc_ind_37851;
                
                if (cond_37850) {
                    int64_t binop_y_37852 = TxRx_37735 * k_37840;
                    int64_t loc_fi_37853 = j_37842 + binop_y_37852;
                    
                    b_loc_ind_37851 = loc_fi_37853;
                } else {
                    b_loc_ind_37851 = -1;
                }
                if (sle64(0, b_loc_ind_37851) && slt64(b_loc_ind_37851,
                                                       b_loc_szz_37740)) {
                    ((__local float *) mem_39258)[b_loc_ind_37851] =
                        B_elem_37846;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_39344[Ry_37729 * Rx_37731];
        float mem_param_39316[Ry_37729 * Rx_37731];
        
        for (int32_t i_3 = 0; i_3 < Ry_37729 * Rx_37731; i_3++)
            mem_param_39316[i_3] = mem_param_39259[i_3];
        for (int64_t i_37858 = 0; i_37858 < Tk_37732; i_37858++) {
            int64_t binop_y_37897 = TxRx_37735 * i_37858;
            int64_t ltid_y_37862 = sext_i32_i64(ltid_pre_40331);
            int64_t ltid_x_37860 = sext_i32_i64(ltid_pre_40332);
            int32_t ltid_flat_37861 = local_tid_40327;
            float mem_39319[Ry_37729];
            float mem_39321[Rx_37731];
            int64_t binop_x_37888 = Ry_37729 * ltid_y_37862;
            
            for (int64_t i_37886 = 0; i_37886 < Ry_37729; i_37886++) {
                int64_t binop_x_37889 = i_37886 + binop_x_37888;
                int64_t binop_y_37890 = Tk_37732 * binop_x_37889;
                int64_t a_loc_ind_37891 = i_37858 + binop_y_37890;
                
                for (int64_t i_40348 = 0; i_40348 < 1; i_40348++) {
                    mem_39319[i_37886 + i_40348] = ((__local
                                                     float *) mem_39256)[a_loc_ind_37891 +
                                                                         i_40348];
                }
            }
            
            int64_t binop_y_37899 = Rx_37731 * ltid_x_37860;
            
            for (int64_t i_37895 = 0; i_37895 < Rx_37731; i_37895++) {
                int64_t binop_x_37898 = i_37895 + binop_y_37897;
                int64_t b_loc_ind_37900 = binop_x_37898 + binop_y_37899;
                
                for (int64_t i_40350 = 0; i_40350 < 1; i_40350++) {
                    mem_39321[i_37895 + i_40350] = ((__local
                                                     float *) mem_39258)[b_loc_ind_37900 +
                                                                         i_40350];
                }
            }
            for (int64_t i_40351 = 0; i_40351 < Ry_37729; i_40351++) {
                mem_39329[i_40351] = mem_39319[i_40351];
            }
            for (int64_t i_40352 = 0; i_40352 < Rx_37731; i_40352++) {
                mem_39333[i_40352] = mem_39321[i_40352];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_39343[Ry_37729 * Rx_37731];
            int64_t ltid_y_37907 = sext_i32_i64(ltid_pre_40331);
            int64_t ltid_x_37905 = sext_i32_i64(ltid_pre_40332);
            int32_t ltid_flat_37906 = local_tid_40327;
            int64_t binop_y_37948 = Ry_37729 * ltid_y_37907;
            int64_t binop_y_37952 = Rx_37731 * ltid_x_37905;
            
            for (int64_t i_37942 = 0; i_37942 < Ry_37729; i_37942++) {
                int64_t binop_x_37947 = iii_37748 + i_37942;
                int64_t cmpop_x_37949 = binop_x_37947 + binop_y_37948;
                bool binop_x_37950 = slt64(cmpop_x_37949, m_27809);
                
                for (int64_t i_37945 = 0; i_37945 < Rx_37731; i_37945++) {
                    int64_t binop_x_37951 = jjj_37749 + i_37945;
                    int64_t cmpop_x_37953 = binop_x_37951 + binop_y_37952;
                    bool binop_y_37954 = slt64(cmpop_x_37953, N_27808);
                    bool cond_37955 = binop_x_37950 && binop_y_37954;
                    
                    if (cond_37955) {
                        float a_37957 = mem_39329[i_37942];
                        float b_37958 = mem_39333[i_37945];
                        float c_37959 = mem_param_39316[i_37942 * Rx_37731 +
                                                        i_37945];
                        float defunc_1_f_res_37962 = a_37957 * b_37958;
                        float defunc_1_op_res_37966 = c_37959 +
                              defunc_1_f_res_37962;
                        
                        mem_param_39316[i_37942 * Rx_37731 + i_37945] =
                            defunc_1_op_res_37966;
                    }
                }
            }
            for (int64_t i_40355 = 0; i_40355 < Ry_37729; i_40355++) {
                for (int64_t i_40356 = 0; i_40356 < Rx_37731; i_40356++) {
                    mem_39343[i_40355 * Rx_37731 + i_40356] =
                        mem_param_39316[i_40355 * Rx_37731 + i_40356];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_40345[Ry_37729 * Rx_37731];
            
            for (int32_t i_4 = 0; i_4 < Ry_37729 * Rx_37731; i_4++)
                mem_param_tmp_40345[i_4] = mem_39343[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_37729 * Rx_37731; i_5++)
                mem_param_39316[i_5] = mem_param_tmp_40345[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_37729 * Rx_37731; i_6++)
            loop_mem_39344[i_6] = mem_param_39316[i_6];
        
        float mem_param_tmp_40337[Ry_37729 * Rx_37731];
        
        for (int32_t i_7 = 0; i_7 < Ry_37729 * Rx_37731; i_7++)
            mem_param_tmp_40337[i_7] = loop_mem_39344[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_37729 * Rx_37731; i_8++)
            mem_param_39259[i_8] = mem_param_tmp_40337[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_37729 * Rx_37731; i_9++)
        loop_mem_39345[i_9] = mem_param_39259[i_9];
    for (int64_t i_37976 = 0; i_37976 < Ry_37729; i_37976++) {
        int64_t binop_y_38001 = Ty_37728 * i_37976;
        
        for (int64_t i_37978 = 0; i_37978 < tk_div_tx_37733; i_37978++) {
            int64_t binop_y_37999 = Tx_37730 * i_37978;
            int64_t ltid_x_37980 = sext_i32_i64(ltid_pre_40331);
            int64_t ltid_y_37981 = sext_i32_i64(ltid_pre_40332);
            int32_t ltid_flat_37982 = local_tid_40327;
            int64_t k_38000 = ltid_y_37981 + binop_y_37999;
            int64_t i_38002 = ltid_x_37980 + binop_y_38001;
            int64_t gtid_38003 = iii_37748 + i_38002;
            int64_t A_col_idx_38004 = kk_37975 + k_38000;
            bool binop_x_38005 = slt64(gtid_38003, m_27809);
            bool binop_y_38006 = slt64(A_col_idx_38004, i32_res_27828);
            bool cond_38007 = binop_x_38005 && binop_y_38006;
            float A_elem_38008;
            
            if (cond_38007) {
                float A_elem_38010 = ((__global
                                       float *) defunc_4_map_res_mem_39216)[gtid_38003 *
                                                                            i32_res_27828 +
                                                                            A_col_idx_38004];
                
                A_elem_38008 = A_elem_38010;
            } else {
                A_elem_38008 = 0.0F;
            }
            
            bool cond_38012 = slt64(k_38000, Tk_37732);
            int64_t a_loc_ind_38013;
            
            if (cond_38012) {
                int64_t binop_y_38014 = Tk_37732 * i_38002;
                int64_t loc_fi_38015 = k_38000 + binop_y_38014;
                
                a_loc_ind_38013 = loc_fi_38015;
            } else {
                a_loc_ind_38013 = -1;
            }
            if (sle64(0, a_loc_ind_38013) && slt64(a_loc_ind_38013,
                                                   a_loc_szz_37738)) {
                ((__local float *) mem_39256)[a_loc_ind_38013] = A_elem_38008;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_38020 = 0; i_38020 < tk_div_ty_37734; i_38020++) {
        int64_t binop_y_38043 = Ty_37728 * i_38020;
        
        for (int64_t i_38022 = 0; i_38022 < Rx_37731; i_38022++) {
            int64_t binop_y_38045 = Tx_37730 * i_38022;
            int64_t ltid_x_38024 = sext_i32_i64(ltid_pre_40331);
            int64_t ltid_y_38025 = sext_i32_i64(ltid_pre_40332);
            int32_t ltid_flat_38026 = local_tid_40327;
            int64_t k_38044 = ltid_x_38024 + binop_y_38043;
            int64_t j_38046 = ltid_y_38025 + binop_y_38045;
            int64_t gtid_38047 = jjj_37749 + j_38046;
            int64_t B_row_idx_38048 = kk_37975 + k_38044;
            bool binop_x_38049 = slt64(gtid_38047, N_27808);
            bool binop_y_38050 = slt64(B_row_idx_38048, i32_res_27828);
            bool cond_38051 = binop_x_38049 && binop_y_38050;
            float B_elem_38052;
            
            if (cond_38051) {
                float B_elem_38054 = ((__global
                                       float *) mem_39240)[B_row_idx_38048 *
                                                           N_27808 +
                                                           gtid_38047];
                
                B_elem_38052 = B_elem_38054;
            } else {
                B_elem_38052 = 0.0F;
            }
            
            bool cond_38056 = slt64(k_38044, Tk_37732);
            int64_t b_loc_ind_38057;
            
            if (cond_38056) {
                int64_t binop_y_38058 = TxRx_37735 * k_38044;
                int64_t loc_fi_38059 = j_38046 + binop_y_38058;
                
                b_loc_ind_38057 = loc_fi_38059;
            } else {
                b_loc_ind_38057 = -1;
            }
            if (sle64(0, b_loc_ind_38057) && slt64(b_loc_ind_38057,
                                                   b_loc_szz_37740)) {
                ((__local float *) mem_39258)[b_loc_ind_38057] = B_elem_38052;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_39411[Ry_37729];
    float mem_39415[Rx_37731];
    float mem_39425[Ry_37729 * Rx_37731];
    float loop_mem_39427[Ry_37729 * Rx_37731];
    float mem_param_39398[Ry_37729 * Rx_37731];
    
    for (int32_t i_10 = 0; i_10 < Ry_37729 * Rx_37731; i_10++)
        mem_param_39398[i_10] = loop_mem_39345[i_10];
    for (int64_t i_38064 = 0; i_38064 < Tk_37732; i_38064++) {
        int64_t cmpop_x_38066 = kk_37975 + i_38064;
        bool cond_38067 = slt64(cmpop_x_38066, i32_res_27828);
        float mem_39758[Ry_37729 * Rx_37731];
        
        if (cond_38067) {
            int64_t binop_y_38105 = TxRx_37735 * i_38064;
            int64_t bytes_39400 = 4 * Ry_37729;
            int64_t bytes_39402 = 4 * Rx_37731;
            int64_t ltid_y_38070 = sext_i32_i64(ltid_pre_40331);
            int64_t ltid_x_38068 = sext_i32_i64(ltid_pre_40332);
            int32_t ltid_flat_38069 = local_tid_40327;
            float mem_39401[Ry_37729];
            float mem_39403[Rx_37731];
            int64_t binop_x_38096 = Ry_37729 * ltid_y_38070;
            
            for (int64_t i_38094 = 0; i_38094 < Ry_37729; i_38094++) {
                int64_t binop_x_38097 = i_38094 + binop_x_38096;
                int64_t binop_y_38098 = Tk_37732 * binop_x_38097;
                int64_t a_loc_ind_38099 = i_38064 + binop_y_38098;
                
                for (int64_t i_40364 = 0; i_40364 < 1; i_40364++) {
                    mem_39401[i_38094 + i_40364] = ((__local
                                                     float *) mem_39256)[a_loc_ind_38099 +
                                                                         i_40364];
                }
            }
            
            int64_t binop_y_38107 = Rx_37731 * ltid_x_38068;
            
            for (int64_t i_38103 = 0; i_38103 < Rx_37731; i_38103++) {
                int64_t binop_x_38106 = i_38103 + binop_y_38105;
                int64_t b_loc_ind_38108 = binop_x_38106 + binop_y_38107;
                
                for (int64_t i_40366 = 0; i_40366 < 1; i_40366++) {
                    mem_39403[i_38103 + i_40366] = ((__local
                                                     float *) mem_39258)[b_loc_ind_38108 +
                                                                         i_40366];
                }
            }
            for (int64_t i_40367 = 0; i_40367 < Ry_37729; i_40367++) {
                mem_39411[i_40367] = mem_39401[i_40367];
            }
            for (int64_t i_40368 = 0; i_40368 < Rx_37731; i_40368++) {
                mem_39415[i_40368] = mem_39403[i_40368];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_38115 = sext_i32_i64(ltid_pre_40331);
            int64_t ltid_x_38113 = sext_i32_i64(ltid_pre_40332);
            int32_t ltid_flat_38114 = local_tid_40327;
            int64_t binop_y_38156 = Ry_37729 * ltid_y_38115;
            int64_t binop_y_38160 = Rx_37731 * ltid_x_38113;
            
            for (int64_t i_38150 = 0; i_38150 < Ry_37729; i_38150++) {
                int64_t binop_x_38155 = iii_37748 + i_38150;
                int64_t cmpop_x_38157 = binop_x_38155 + binop_y_38156;
                bool binop_x_38158 = slt64(cmpop_x_38157, m_27809);
                
                for (int64_t i_38153 = 0; i_38153 < Rx_37731; i_38153++) {
                    int64_t binop_x_38159 = jjj_37749 + i_38153;
                    int64_t cmpop_x_38161 = binop_x_38159 + binop_y_38160;
                    bool binop_y_38162 = slt64(cmpop_x_38161, N_27808);
                    bool cond_38163 = binop_x_38158 && binop_y_38162;
                    
                    if (cond_38163) {
                        float a_38165 = mem_39411[i_38150];
                        float b_38166 = mem_39415[i_38153];
                        float c_38167 = mem_param_39398[i_38150 * Rx_37731 +
                                                        i_38153];
                        float defunc_1_f_res_38170 = a_38165 * b_38166;
                        float defunc_1_op_res_38174 = c_38167 +
                              defunc_1_f_res_38170;
                        
                        mem_param_39398[i_38150 * Rx_37731 + i_38153] =
                            defunc_1_op_res_38174;
                    }
                }
            }
            for (int64_t i_40371 = 0; i_40371 < Ry_37729; i_40371++) {
                for (int64_t i_40372 = 0; i_40372 < Rx_37731; i_40372++) {
                    mem_39425[i_40371 * Rx_37731 + i_40372] =
                        mem_param_39398[i_40371 * Rx_37731 + i_40372];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_40373 = 0; i_40373 < Ry_37729; i_40373++) {
                for (int64_t i_40374 = 0; i_40374 < Rx_37731; i_40374++) {
                    mem_39758[i_40373 * Rx_37731 + i_40374] =
                        mem_39425[i_40373 * Rx_37731 + i_40374];
                }
            }
        } else {
            for (int64_t i_40375 = 0; i_40375 < Ry_37729; i_40375++) {
                for (int64_t i_40376 = 0; i_40376 < Rx_37731; i_40376++) {
                    mem_39758[i_40375 * Rx_37731 + i_40376] =
                        mem_param_39398[i_40375 * Rx_37731 + i_40376];
                }
            }
        }
        
        float mem_param_tmp_40361[Ry_37729 * Rx_37731];
        
        for (int32_t i_11 = 0; i_11 < Ry_37729 * Rx_37731; i_11++)
            mem_param_tmp_40361[i_11] = mem_39758[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_37729 * Rx_37731; i_12++)
            mem_param_39398[i_12] = mem_param_tmp_40361[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_37729 * Rx_37731; i_13++)
        loop_mem_39427[i_13] = mem_param_39398[i_13];
    
    int64_t reg_tile_i_40377 = squot64(sext_i32_i64(local_tid_40327), Tx_37730);
    int64_t reg_tile_i_40378 = sext_i32_i64(local_tid_40327) -
            squot64(sext_i32_i64(local_tid_40327), Tx_37730) * Tx_37730;
    int64_t tile_dim_start_40379 = Ry_37729 * (Ty_37728 * gid_y_37746 +
                                               reg_tile_i_40377);
    int64_t tile_dim_start_40380 = Rx_37731 * (Tx_37730 * gid_x_37745 +
                                               reg_tile_i_40378);
    
    for (int64_t nest_i_40381 = 0; nest_i_40381 < Ry_37729; nest_i_40381++) {
        for (int64_t nest_i_40382 = 0; nest_i_40382 < Rx_37731;
             nest_i_40382++) {
            if (slt64(tile_dim_start_40379 + nest_i_40381, m_27809) &&
                slt64(tile_dim_start_40380 + nest_i_40382, N_27808)) {
                ((__global float *) mem_39430)[(tile_dim_start_40379 +
                                                nest_i_40381) * N_27808 +
                                               (tile_dim_start_40380 +
                                                nest_i_40382)] =
                    loop_mem_39427[nest_i_40381 * Rx_37731 + nest_i_40382];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_37728
    #undef Ry_37729
    #undef Tx_37730
    #undef Rx_37731
    #undef Tk_37732
    #undef tk_div_tx_37733
    #undef tk_div_ty_37734
    #undef TxRx_37735
    #undef TyRy_37736
    #undef a_loc_szz_37738
    #undef b_loc_szz_37740
}
__kernel void mainzisegmap_intragroup_38181(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_39500_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_39493_backing_aligned_1,
                                            int64_t m_27809, int32_t n_27813,
                                            float hfrac_27815,
                                            int64_t i32_res_27822,
                                            int32_t k2p2_27824,
                                            int64_t num_whole_tiles_38189,
                                            int64_t residual_input_38310,
                                            unsigned char cond_38311, __global
                                            unsigned char *mem_39482, __global
                                            unsigned char *mem_39485, __global
                                            unsigned char *mem_39513, __global
                                            unsigned char *mem_39515, __global
                                            unsigned char *mem_39517)
{
    #define segmap_group_sizze_35033 (mainzisegmap_group_sizze_35002)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_39500_backing_5 = (__local volatile
                                                           char *) mem_39500_backing_aligned_0;
    __local volatile char *restrict mem_39493_backing_0 = (__local volatile
                                                           char *) mem_39493_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40550;
    int32_t local_tid_40551;
    int64_t group_sizze_40554;
    int32_t wave_sizze_40553;
    int32_t group_tid_40552;
    
    global_tid_40550 = get_global_id(0);
    local_tid_40551 = get_local_id(0);
    group_sizze_40554 = get_local_size(0);
    wave_sizze_40553 = LOCKSTEP_WIDTH;
    group_tid_40552 = get_group_id(0);
    
    int32_t gid_flat_38181;
    
    gid_flat_38181 = group_tid_40552;
    
    int32_t ltid_pre_40555;
    
    ltid_pre_40555 = local_tid_40551;
    
    int64_t gid_38180;
    
    gid_38180 = sext_i32_i64(group_tid_40552);
    
    float mem_39489[1];
    int64_t ltid_38190 = sext_i32_i64(ltid_pre_40555);
    int32_t ltid_flat_38191 = local_tid_40551;
    
    mem_39489[0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_38276 = segmap_group_sizze_35033 * gid_38180;
    __local char *mem_39493;
    
    mem_39493 = (__local char *) mem_39493_backing_0;
    
    float accs_mem_39497[1];
    float mem_param_39490[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_39490[i_1] = mem_39489[i_1];
    for (int64_t tile_id_38197 = 0; tile_id_38197 < num_whole_tiles_38189;
         tile_id_38197++) {
        int64_t binop_x_38258 = segmap_group_sizze_35033 * tile_id_38197;
        int64_t ltid_38198 = sext_i32_i64(ltid_pre_40555);
        int32_t ltid_flat_38199 = local_tid_40551;
        int64_t j_38259 = ltid_38198 + binop_x_38258;
        bool cond_38271 = slt64(j_38259, i32_res_27822);
        int32_t pre_38272;
        
        if (cond_38271) {
            int32_t index_primexp_38605 = sext_i64_i32(j_38259);
            
            pre_38272 = index_primexp_38605;
        } else {
            pre_38272 = 0;
        }
        ((__local int32_t *) mem_39493)[ltid_38198] = pre_38272;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_39496[1];
        int64_t ltid_38225 = sext_i32_i64(ltid_pre_40555);
        int32_t ltid_flat_38226 = local_tid_40551;
        int64_t gtid_38277 = ltid_38225 + binop_x_38276;
        int32_t defunc_0_f_res_38279;
        int32_t redout_38647 = 0;
        
        for (int32_t i_38673 = 0; i_38673 < n_27813; i_38673++) {
            int64_t i_38648 = sext_i32_i64(i_38673);
            float x_38283 = ((__global float *) mem_39482)[i_38648 * m_27809 +
                                                           gtid_38277];
            bool isnan_res_38284;
            
            isnan_res_38284 = futrts_isnan32(x_38283);
            
            bool cond_38285 = !isnan_res_38284;
            int32_t defunc_0_f_res_38286 = btoi_bool_i32(cond_38285);
            int32_t defunc_1_op_res_38282 = add32(defunc_0_f_res_38286,
                                                  redout_38647);
            int32_t redout_tmp_40558 = defunc_1_op_res_38282;
            
            redout_38647 = redout_tmp_40558;
        }
        defunc_0_f_res_38279 = redout_38647;
        
        float acc_38287 = mem_param_39490[0];
        bool cond_38288 = slt64(gtid_38277, m_27809);
        float acc_38289;
        
        if (cond_38288) {
            float x_38290;
            float redout_38649 = acc_38287;
            
            for (int64_t i_38650 = 0; i_38650 < segmap_group_sizze_35033;
                 i_38650++) {
                int32_t x_38294 = ((__local int32_t *) mem_39493)[i_38650];
                bool cond_38295 = slt32(x_38294, defunc_0_f_res_38279);
                float defunc_0_f_res_38296;
                
                if (cond_38295) {
                    int64_t i_38297 = sext_i32_i64(x_38294);
                    float defunc_0_f_res_t_res_38298 = ((__global
                                                         float *) mem_39485)[i_38297 *
                                                                             m_27809 +
                                                                             gtid_38277];
                    
                    defunc_0_f_res_38296 = defunc_0_f_res_t_res_38298;
                } else {
                    defunc_0_f_res_38296 = 0.0F;
                }
                
                float defunc_0_f_res_38299 = defunc_0_f_res_38296 *
                      defunc_0_f_res_38296;
                float defunc_1_op_res_38293 = defunc_0_f_res_38299 +
                      redout_38649;
                float redout_tmp_40559 = defunc_1_op_res_38293;
                
                redout_38649 = redout_tmp_40559;
            }
            x_38290 = redout_38649;
            acc_38289 = x_38290;
        } else {
            acc_38289 = acc_38287;
        }
        mem_39496[0] = acc_38289;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_40556[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_40556[i_2] = mem_39496[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_39490[i_3] = mem_param_tmp_40556[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_39497[i_4] = mem_param_39490[i_4];
    
    __local char *mem_39500;
    
    mem_39500 = (__local char *) mem_39500_backing_5;
    
    float mem_39503[1];
    float mem_39771[1];
    
    if (cond_38311) {
        mem_39771[0] = accs_mem_39497[0];
    } else {
        int64_t binop_x_38321 = segmap_group_sizze_35033 *
                num_whole_tiles_38189;
        int64_t ltid_38312 = sext_i32_i64(ltid_pre_40555);
        int32_t ltid_flat_38313 = local_tid_40551;
        int64_t j_38322 = ltid_38312 + binop_x_38321;
        bool cond_38334 = slt64(j_38322, i32_res_27822);
        int32_t pre_38335;
        
        if (cond_38334) {
            int32_t index_primexp_38606 = sext_i64_i32(j_38322);
            
            pre_38335 = index_primexp_38606;
        } else {
            pre_38335 = 0;
        }
        ((__local int32_t *) mem_39500)[ltid_38312] = pre_38335;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_38340 = sext_i32_i64(ltid_pre_40555);
        int32_t ltid_flat_38341 = local_tid_40551;
        int64_t gtid_38348 = binop_x_38276 + ltid_38340;
        int32_t defunc_0_f_res_38350;
        int32_t redout_38651 = 0;
        
        for (int32_t i_38674 = 0; i_38674 < n_27813; i_38674++) {
            int64_t i_38652 = sext_i32_i64(i_38674);
            float x_38354 = ((__global float *) mem_39482)[i_38652 * m_27809 +
                                                           gtid_38348];
            bool isnan_res_38355;
            
            isnan_res_38355 = futrts_isnan32(x_38354);
            
            bool cond_38356 = !isnan_res_38355;
            int32_t defunc_0_f_res_38357 = btoi_bool_i32(cond_38356);
            int32_t defunc_1_op_res_38353 = add32(defunc_0_f_res_38357,
                                                  redout_38651);
            int32_t redout_tmp_40560 = defunc_1_op_res_38353;
            
            redout_38651 = redout_tmp_40560;
        }
        defunc_0_f_res_38350 = redout_38651;
        
        float acc_38358 = accs_mem_39497[0];
        bool cond_38359 = slt64(gtid_38348, m_27809);
        float acc_38360;
        
        if (cond_38359) {
            float x_38361;
            float redout_38653 = acc_38358;
            
            for (int64_t i_38654 = 0; i_38654 < residual_input_38310;
                 i_38654++) {
                int32_t x_38365 = ((__local int32_t *) mem_39500)[i_38654];
                bool cond_38366 = slt32(x_38365, defunc_0_f_res_38350);
                float defunc_0_f_res_38367;
                
                if (cond_38366) {
                    int64_t i_38368 = sext_i32_i64(x_38365);
                    float defunc_0_f_res_t_res_38369 = ((__global
                                                         float *) mem_39485)[i_38368 *
                                                                             m_27809 +
                                                                             gtid_38348];
                    
                    defunc_0_f_res_38367 = defunc_0_f_res_t_res_38369;
                } else {
                    defunc_0_f_res_38367 = 0.0F;
                }
                
                float defunc_0_f_res_38370 = defunc_0_f_res_38367 *
                      defunc_0_f_res_38367;
                float defunc_1_op_res_38364 = defunc_0_f_res_38370 +
                      redout_38653;
                float redout_tmp_40561 = defunc_1_op_res_38364;
                
                redout_38653 = redout_tmp_40561;
            }
            x_38361 = redout_38653;
            acc_38360 = x_38361;
        } else {
            acc_38360 = acc_38358;
        }
        mem_39503[0] = acc_38360;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_39771[0] = mem_39503[0];
    }
    
    int32_t mem_39507[1];
    int32_t mem_39509[1];
    float mem_39511[1];
    int64_t ltid_38373 = sext_i32_i64(ltid_pre_40555);
    int32_t ltid_flat_38374 = local_tid_40551;
    int64_t gtid_38384 = binop_x_38276 + ltid_38373;
    bool cond_38386 = slt64(gtid_38384, m_27809);
    int32_t postlude_38387;
    int32_t postlude_38388;
    float postlude_38389;
    
    if (cond_38386) {
        float defunc_0_f_res_38385 = mem_39771[0];
        int32_t defunc_0_f_res_38391;
        int32_t redout_38655 = 0;
        
        for (int32_t i_38675 = 0; i_38675 < n_27813; i_38675++) {
            int64_t i_38656 = sext_i32_i64(i_38675);
            float x_38395 = ((__global float *) mem_39482)[i_38656 * m_27809 +
                                                           gtid_38384];
            bool isnan_res_38396;
            
            isnan_res_38396 = futrts_isnan32(x_38395);
            
            bool cond_38397 = !isnan_res_38396;
            int32_t defunc_0_f_res_38398 = btoi_bool_i32(cond_38397);
            int32_t defunc_1_op_res_38394 = add32(defunc_0_f_res_38398,
                                                  redout_38655);
            int32_t redout_tmp_40562 = defunc_1_op_res_38394;
            
            redout_38655 = redout_tmp_40562;
        }
        defunc_0_f_res_38391 = redout_38655;
        
        int32_t r32_arg_38399 = sub32(defunc_0_f_res_38391, k2p2_27824);
        float i32_res_38400 = sitofp_i32_f32(r32_arg_38399);
        float sqrt_arg_38401 = defunc_0_f_res_38385 / i32_res_38400;
        float sqrt_res_38402;
        
        sqrt_res_38402 = futrts_sqrt32(sqrt_arg_38401);
        
        float i32_res_38403 = sitofp_i32_f32(defunc_0_f_res_38391);
        float t32_arg_38404 = hfrac_27815 * i32_res_38403;
        int32_t f32_res_38405 = fptosi_f32_i32(t32_arg_38404);
        
        postlude_38387 = f32_res_38405;
        postlude_38388 = defunc_0_f_res_38391;
        postlude_38389 = sqrt_res_38402;
    } else {
        postlude_38387 = 0;
        postlude_38388 = 0;
        postlude_38389 = 0.0F;
    }
    mem_39507[0] = postlude_38387;
    mem_39509[0] = postlude_38388;
    mem_39511[0] = postlude_38389;
    barrier(CLK_LOCAL_MEM_FENCE);
    if (slt64(sext_i32_i64(local_tid_40551) + segmap_group_sizze_35033 *
              sext_i32_i64(group_tid_40552), m_27809)) {
        ((__global int32_t *) mem_39513)[sext_i32_i64(local_tid_40551) +
                                         segmap_group_sizze_35033 *
                                         sext_i32_i64(group_tid_40552)] =
            mem_39507[0];
    }
    if (slt64(sext_i32_i64(local_tid_40551) + segmap_group_sizze_35033 *
              sext_i32_i64(group_tid_40552), m_27809)) {
        ((__global int32_t *) mem_39515)[sext_i32_i64(local_tid_40551) +
                                         segmap_group_sizze_35033 *
                                         sext_i32_i64(group_tid_40552)] =
            mem_39509[0];
    }
    if (slt64(sext_i32_i64(local_tid_40551) + segmap_group_sizze_35033 *
              sext_i32_i64(group_tid_40552), m_27809)) {
        ((__global float *) mem_39517)[sext_i32_i64(local_tid_40551) +
                                       segmap_group_sizze_35033 *
                                       sext_i32_i64(group_tid_40552)] =
            mem_39511[0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_35033
}
__kernel void mainzisegmap_intragroup_38413(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_39566_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_39559_backing_aligned_1,
                                            int64_t N_27808, int64_t m_27809,
                                            int64_t i32_res_28183,
                                            int64_t num_whole_tiles_38433,
                                            int64_t residual_input_38532,
                                            unsigned char cond_38533, __global
                                            unsigned char *defunc_4_map_res_mem_39478,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_39541,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_39542,
                                            __global unsigned char *mem_39572)
{
    #define segmap_group_sizze_35270 (mainzisegmap_group_sizze_35251)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_39566_backing_5 = (__local volatile
                                                           char *) mem_39566_backing_aligned_0;
    __local volatile char *restrict mem_39559_backing_0 = (__local volatile
                                                           char *) mem_39559_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40736;
    int32_t local_tid_40737;
    int64_t group_sizze_40740;
    int32_t wave_sizze_40739;
    int32_t group_tid_40738;
    
    global_tid_40736 = get_global_id(0);
    local_tid_40737 = get_local_id(0);
    group_sizze_40740 = get_local_size(0);
    wave_sizze_40739 = LOCKSTEP_WIDTH;
    group_tid_40738 = get_group_id(0);
    
    int32_t gid_flat_38413;
    
    gid_flat_38413 = group_tid_40738;
    
    int32_t ltid_pre_40741;
    
    ltid_pre_40741 = local_tid_40737;
    
    int64_t gid_38412;
    
    gid_38412 = sext_i32_i64(group_tid_40738);
    
    int64_t binop_x_38422;
    
    binop_x_38422 = segmap_group_sizze_35270 * gid_38412;
    
    int32_t mem_39550[1];
    int32_t mem_39552[1];
    int64_t ltid_38414 = sext_i32_i64(ltid_pre_40741);
    int32_t ltid_flat_38415 = local_tid_40737;
    int64_t gtid_38423 = ltid_38414 + binop_x_38422;
    bool cond_38424 = slt64(gtid_38423, m_27809);
    int32_t pre_38425;
    int32_t pre_38426;
    
    if (cond_38424) {
        int32_t x_38427 = ((__global
                            int32_t *) defunc_3_map_res_mem_39542)[gtid_38423];
        int32_t x_38428 = ((__global
                            int32_t *) defunc_3_map_res_mem_39541)[gtid_38423];
        
        pre_38425 = x_38427;
        pre_38426 = x_38428;
    } else {
        pre_38425 = 0;
        pre_38426 = 0;
    }
    mem_39550[0] = pre_38425;
    mem_39552[0] = pre_38426;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_39555[1];
    int64_t ltid_38434 = sext_i32_i64(ltid_pre_40741);
    int32_t ltid_flat_38435 = local_tid_40737;
    
    mem_39555[0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_39559;
    
    mem_39559 = (__local char *) mem_39559_backing_0;
    
    float accs_mem_39563[1];
    float mem_param_39556[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_39556[i_1] = mem_39555[i_1];
    for (int64_t tile_id_38441 = 0; tile_id_38441 < num_whole_tiles_38433;
         tile_id_38441++) {
        int64_t binop_x_38490 = segmap_group_sizze_35270 * tile_id_38441;
        int64_t ltid_38442 = sext_i32_i64(ltid_pre_40741);
        int32_t ltid_flat_38443 = local_tid_40737;
        int64_t j_38491 = ltid_38442 + binop_x_38490;
        bool cond_38496 = slt64(j_38491, i32_res_28183);
        int32_t pre_38497;
        
        if (cond_38496) {
            int32_t index_primexp_38607 = sext_i64_i32(j_38491);
            int32_t tile_elem_38498 = index_primexp_38607;
            
            pre_38497 = tile_elem_38498;
        } else {
            pre_38497 = 0;
        }
        ((__local int32_t *) mem_39559)[ltid_38442] = pre_38497;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_39562[1];
        int64_t ltid_38462 = sext_i32_i64(ltid_pre_40741);
        int32_t ltid_flat_38463 = local_tid_40737;
        int64_t gtid_38502 = binop_x_38422 + ltid_38462;
        float acc_38505 = mem_param_39556[0];
        bool cond_38506 = slt64(gtid_38502, m_27809);
        float acc_38507;
        
        if (cond_38506) {
            int32_t x_38503 = mem_39550[0];
            int32_t x_38504 = mem_39552[0];
            float x_38508;
            float redout_38657 = acc_38505;
            
            for (int64_t i_38658 = 0; i_38658 < segmap_group_sizze_35270;
                 i_38658++) {
                int32_t x_38512 = ((__local int32_t *) mem_39559)[i_38658];
                bool cond_38513 = slt32(x_38512, x_38504);
                float defunc_0_f_res_38514;
                
                if (cond_38513) {
                    int32_t x_38515 = add32(x_38503, x_38512);
                    int32_t x_38516 = sub32(x_38515, x_38504);
                    int32_t i_38517 = add32(1, x_38516);
                    int64_t i_38518 = sext_i32_i64(i_38517);
                    float defunc_0_f_res_t_res_38519 = ((__global
                                                         float *) defunc_4_map_res_mem_39478)[gtid_38502 *
                                                                                              N_27808 +
                                                                                              i_38518];
                    
                    defunc_0_f_res_38514 = defunc_0_f_res_t_res_38519;
                } else {
                    defunc_0_f_res_38514 = 0.0F;
                }
                
                float defunc_1_op_res_38511 = defunc_0_f_res_38514 +
                      redout_38657;
                float redout_tmp_40744 = defunc_1_op_res_38511;
                
                redout_38657 = redout_tmp_40744;
            }
            x_38508 = redout_38657;
            acc_38507 = x_38508;
        } else {
            acc_38507 = acc_38505;
        }
        mem_39562[0] = acc_38507;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_40742[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_40742[i_2] = mem_39562[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_39556[i_3] = mem_param_tmp_40742[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_39563[i_4] = mem_param_39556[i_4];
    
    __local char *mem_39566;
    
    mem_39566 = (__local char *) mem_39566_backing_5;
    
    float mem_39569[1];
    float mem_39780[1];
    
    if (cond_38533) {
        mem_39780[0] = accs_mem_39563[0];
    } else {
        int64_t binop_x_38543 = segmap_group_sizze_35270 *
                num_whole_tiles_38433;
        int64_t ltid_38534 = sext_i32_i64(ltid_pre_40741);
        int32_t ltid_flat_38535 = local_tid_40737;
        int64_t j_38544 = ltid_38534 + binop_x_38543;
        bool cond_38549 = slt64(j_38544, i32_res_28183);
        int32_t pre_38550;
        
        if (cond_38549) {
            int32_t index_primexp_38608 = sext_i64_i32(j_38544);
            int32_t tile_elem_38551 = index_primexp_38608;
            
            pre_38550 = tile_elem_38551;
        } else {
            pre_38550 = 0;
        }
        ((__local int32_t *) mem_39566)[ltid_38534] = pre_38550;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_38555 = sext_i32_i64(ltid_pre_40741);
        int32_t ltid_flat_38556 = local_tid_40737;
        int64_t gtid_38563 = binop_x_38422 + ltid_38555;
        float acc_38566 = accs_mem_39563[0];
        bool cond_38567 = slt64(gtid_38563, m_27809);
        float acc_38568;
        
        if (cond_38567) {
            int32_t x_38564 = mem_39550[0];
            int32_t x_38565 = mem_39552[0];
            float x_38569;
            float redout_38659 = acc_38566;
            
            for (int64_t i_38660 = 0; i_38660 < residual_input_38532;
                 i_38660++) {
                int32_t x_38573 = ((__local int32_t *) mem_39566)[i_38660];
                bool cond_38574 = slt32(x_38573, x_38565);
                float defunc_0_f_res_38575;
                
                if (cond_38574) {
                    int32_t x_38576 = add32(x_38564, x_38573);
                    int32_t x_38577 = sub32(x_38576, x_38565);
                    int32_t i_38578 = add32(1, x_38577);
                    int64_t i_38579 = sext_i32_i64(i_38578);
                    float defunc_0_f_res_t_res_38580 = ((__global
                                                         float *) defunc_4_map_res_mem_39478)[gtid_38563 *
                                                                                              N_27808 +
                                                                                              i_38579];
                    
                    defunc_0_f_res_38575 = defunc_0_f_res_t_res_38580;
                } else {
                    defunc_0_f_res_38575 = 0.0F;
                }
                
                float defunc_1_op_res_38572 = defunc_0_f_res_38575 +
                      redout_38659;
                float redout_tmp_40745 = defunc_1_op_res_38572;
                
                redout_38659 = redout_tmp_40745;
            }
            x_38569 = redout_38659;
            acc_38568 = x_38569;
        } else {
            acc_38568 = acc_38566;
        }
        mem_39569[0] = acc_38568;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_39780[0] = mem_39569[0];
    }
    if (slt64(sext_i32_i64(local_tid_40737) + segmap_group_sizze_35270 *
              sext_i32_i64(group_tid_40738), m_27809)) {
        ((__global float *) mem_39572)[sext_i32_i64(local_tid_40737) +
                                       segmap_group_sizze_35270 *
                                       sext_i32_i64(group_tid_40738)] =
            mem_39780[0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_35270
}
__kernel void mainzisegred_large_33245(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_40004_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_40002_backing_aligned_1,
                                       int64_t N_27808, int64_t N_27810,
                                       int64_t i32_res_27822,
                                       int64_t i32_res_27828,
                                       int64_t num_groups_33384, __global
                                       unsigned char *images_mem_38682, __global
                                       unsigned char *binop_p_mem_38691,
                                       __global unsigned char *mem_38832,
                                       __global unsigned char *mem_38837,
                                       int64_t groups_per_segment_39988,
                                       int64_t elements_per_thread_39989,
                                       int64_t virt_num_groups_39990,
                                       int64_t threads_per_segment_39992,
                                       __global
                                       unsigned char *group_res_arr_mem_39993,
                                       __global
                                       unsigned char *mainzicounter_mem_39995)
{
    #define segred_group_sizze_33383 (mainzisegred_group_sizze_33239)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_40004_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_40004_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_40002_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40002_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_39997;
    int32_t local_tid_39998;
    int64_t group_sizze_40001;
    int32_t wave_sizze_40000;
    int32_t group_tid_39999;
    
    global_tid_39997 = get_global_id(0);
    local_tid_39998 = get_local_id(0);
    group_sizze_40001 = get_local_size(0);
    wave_sizze_40000 = LOCKSTEP_WIDTH;
    group_tid_39999 = get_group_id(0);
    
    int32_t phys_tid_33245;
    
    phys_tid_33245 = global_tid_39997;
    
    __local char *red_arr_mem_40002;
    
    red_arr_mem_40002 = (__local char *) red_arr_mem_40002_backing_0;
    
    __local char *sync_arr_mem_40004;
    
    sync_arr_mem_40004 = (__local char *) sync_arr_mem_40004_backing_1;
    
    int32_t phys_group_id_40006;
    
    phys_group_id_40006 = get_group_id(0);
    for (int32_t i_40007 = 0; i_40007 <
         sdiv_up32(sext_i64_i32(virt_num_groups_39990) - phys_group_id_40006,
                   sext_i64_i32(num_groups_33384)); i_40007++) {
        int32_t virt_group_id_40008 = phys_group_id_40006 + i_40007 *
                sext_i64_i32(num_groups_33384);
        int32_t flat_segment_id_40009 = squot32(virt_group_id_40008,
                                                sext_i64_i32(groups_per_segment_39988));
        int64_t global_tid_40010 = srem64(sext_i32_i64(virt_group_id_40008) *
                                          segred_group_sizze_33383 +
                                          sext_i32_i64(local_tid_39998),
                                          segred_group_sizze_33383 *
                                          groups_per_segment_39988);
        int64_t gtid_33232 = squot64(sext_i32_i64(flat_segment_id_40009),
                                     i32_res_27828 * i32_res_27828);
        int64_t gtid_33233 = squot64(sext_i32_i64(flat_segment_id_40009) -
                                     squot64(sext_i32_i64(flat_segment_id_40009),
                                             i32_res_27828 * i32_res_27828) *
                                     (i32_res_27828 * i32_res_27828),
                                     i32_res_27828);
        int64_t gtid_33234 = sext_i32_i64(flat_segment_id_40009) -
                squot64(sext_i32_i64(flat_segment_id_40009), i32_res_27828 *
                        i32_res_27828) * (i32_res_27828 * i32_res_27828) -
                squot64(sext_i32_i64(flat_segment_id_40009) -
                        squot64(sext_i32_i64(flat_segment_id_40009),
                                i32_res_27828 * i32_res_27828) *
                        (i32_res_27828 * i32_res_27828), i32_res_27828) *
                i32_res_27828;
        int64_t gtid_33244;
        float x_acc_40011;
        int64_t chunk_sizze_40012;
        
        chunk_sizze_40012 = smin64(elements_per_thread_39989,
                                   sdiv_up64(i32_res_27822 -
                                             sext_i32_i64(sext_i64_i32(global_tid_40010)),
                                             threads_per_segment_39992));
        
        float x_33387;
        float x_33388;
        
        // neutral-initialise the accumulators
        {
            x_acc_40011 = 0.0F;
        }
        for (int64_t i_40016 = 0; i_40016 < chunk_sizze_40012; i_40016++) {
            gtid_33244 = sext_i32_i64(sext_i64_i32(global_tid_40010)) +
                threads_per_segment_39992 * i_40016;
            // apply map function
            {
                float x_33393 = ((__global
                                  float *) images_mem_38682)[gtid_33232 *
                                                             N_27810 +
                                                             gtid_33244];
                float x_33394 = ((__global
                                  float *) binop_p_mem_38691)[gtid_33233 *
                                                              N_27808 +
                                                              gtid_33244];
                float x_33395 = ((__global float *) mem_38832)[gtid_33234 *
                                                               N_27808 +
                                                               gtid_33244];
                float x_33396 = x_33394 * x_33395;
                bool isnan_res_33397;
                
                isnan_res_33397 = futrts_isnan32(x_33393);
                
                float y_33398;
                
                if (isnan_res_33397) {
                    y_33398 = 0.0F;
                } else {
                    y_33398 = 1.0F;
                }
                
                float defunc_2_f_res_33399 = x_33396 * y_33398;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_33387 = x_acc_40011;
                }
                // load new values
                {
                    x_33388 = defunc_2_f_res_33399;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_33389 = x_33387 + x_33388;
                    
                    // store in accumulator
                    {
                        x_acc_40011 = defunc_1_op_res_33389;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_33387 = x_acc_40011;
            ((__local
              float *) red_arr_mem_40002)[sext_i32_i64(local_tid_39998)] =
                x_33387;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_40017;
        int32_t skip_waves_40018;
        
        skip_waves_40018 = 1;
        
        float x_40013;
        float x_40014;
        
        offset_40017 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_39998,
                      sext_i64_i32(segred_group_sizze_33383))) {
                x_40013 = ((__local
                            float *) red_arr_mem_40002)[sext_i32_i64(local_tid_39998 +
                                                        offset_40017)];
            }
        }
        offset_40017 = 1;
        while (slt32(offset_40017, wave_sizze_40000)) {
            if (slt32(local_tid_39998 + offset_40017,
                      sext_i64_i32(segred_group_sizze_33383)) &&
                ((local_tid_39998 - squot32(local_tid_39998, wave_sizze_40000) *
                  wave_sizze_40000) & (2 * offset_40017 - 1)) == 0) {
                // read array element
                {
                    x_40014 = ((volatile __local
                                float *) red_arr_mem_40002)[sext_i32_i64(local_tid_39998 +
                                                            offset_40017)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_40015 = x_40013 + x_40014;
                    
                    x_40013 = defunc_1_op_res_40015;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_40002)[sext_i32_i64(local_tid_39998)] =
                        x_40013;
                }
            }
            offset_40017 *= 2;
        }
        while (slt32(skip_waves_40018,
                     squot32(sext_i64_i32(segred_group_sizze_33383) +
                             wave_sizze_40000 - 1, wave_sizze_40000))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_40017 = skip_waves_40018 * wave_sizze_40000;
            if (slt32(local_tid_39998 + offset_40017,
                      sext_i64_i32(segred_group_sizze_33383)) &&
                ((local_tid_39998 - squot32(local_tid_39998, wave_sizze_40000) *
                  wave_sizze_40000) == 0 && (squot32(local_tid_39998,
                                                     wave_sizze_40000) & (2 *
                                                                          skip_waves_40018 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_40014 = ((__local
                                float *) red_arr_mem_40002)[sext_i32_i64(local_tid_39998 +
                                                            offset_40017)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_40015 = x_40013 + x_40014;
                    
                    x_40013 = defunc_1_op_res_40015;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_40002)[sext_i32_i64(local_tid_39998)] =
                        x_40013;
                }
            }
            skip_waves_40018 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_39998) == 0) {
                x_acc_40011 = x_40013;
            }
        }
        if (groups_per_segment_39988 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_39998 == 0) {
                    ((__global float *) mem_38837)[gtid_33232 * (i32_res_27828 *
                                                                 i32_res_27828) +
                                                   gtid_33233 * i32_res_27828 +
                                                   gtid_33234] = x_acc_40011;
                }
            }
        } else {
            int32_t old_counter_40019;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_39998 == 0) {
                    ((__global
                      float *) group_res_arr_mem_39993)[sext_i32_i64(virt_group_id_40008) *
                                                        segred_group_sizze_33383] =
                        x_acc_40011;
                    mem_fence_global();
                    old_counter_40019 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_39995)[sext_i32_i64(srem32(flat_segment_id_40009,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_40004)[0] =
                        old_counter_40019 == groups_per_segment_39988 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_40020;
            
            is_last_group_40020 = ((__local bool *) sync_arr_mem_40004)[0];
            if (is_last_group_40020) {
                if (local_tid_39998 == 0) {
                    old_counter_40019 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_39995)[sext_i32_i64(srem32(flat_segment_id_40009,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_39988));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_40021 =
                            sdiv_up64(groups_per_segment_39988,
                                      segred_group_sizze_33383);
                    
                    x_33387 = 0.0F;
                    for (int64_t i_40022 = 0; i_40022 < read_per_thread_40021;
                         i_40022++) {
                        int64_t group_res_id_40023 =
                                sext_i32_i64(local_tid_39998) *
                                read_per_thread_40021 + i_40022;
                        int64_t index_of_group_res_40024 =
                                sext_i32_i64(flat_segment_id_40009) *
                                groups_per_segment_39988 + group_res_id_40023;
                        
                        if (slt64(group_res_id_40023,
                                  groups_per_segment_39988)) {
                            x_33388 = ((__global
                                        float *) group_res_arr_mem_39993)[index_of_group_res_40024 *
                                                                          segred_group_sizze_33383];
                            
                            float defunc_1_op_res_33389;
                            
                            defunc_1_op_res_33389 = x_33387 + x_33388;
                            x_33387 = defunc_1_op_res_33389;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_40002)[sext_i32_i64(local_tid_39998)] =
                    x_33387;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_40025;
                    int32_t skip_waves_40026;
                    
                    skip_waves_40026 = 1;
                    
                    float x_40013;
                    float x_40014;
                    
                    offset_40025 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_39998,
                                  sext_i64_i32(segred_group_sizze_33383))) {
                            x_40013 = ((__local
                                        float *) red_arr_mem_40002)[sext_i32_i64(local_tid_39998 +
                                                                    offset_40025)];
                        }
                    }
                    offset_40025 = 1;
                    while (slt32(offset_40025, wave_sizze_40000)) {
                        if (slt32(local_tid_39998 + offset_40025,
                                  sext_i64_i32(segred_group_sizze_33383)) &&
                            ((local_tid_39998 - squot32(local_tid_39998,
                                                        wave_sizze_40000) *
                              wave_sizze_40000) & (2 * offset_40025 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_40014 = ((volatile __local
                                            float *) red_arr_mem_40002)[sext_i32_i64(local_tid_39998 +
                                                                        offset_40025)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_40015 = x_40013 + x_40014;
                                
                                x_40013 = defunc_1_op_res_40015;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_40002)[sext_i32_i64(local_tid_39998)] =
                                    x_40013;
                            }
                        }
                        offset_40025 *= 2;
                    }
                    while (slt32(skip_waves_40026,
                                 squot32(sext_i64_i32(segred_group_sizze_33383) +
                                         wave_sizze_40000 - 1,
                                         wave_sizze_40000))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_40025 = skip_waves_40026 * wave_sizze_40000;
                        if (slt32(local_tid_39998 + offset_40025,
                                  sext_i64_i32(segred_group_sizze_33383)) &&
                            ((local_tid_39998 - squot32(local_tid_39998,
                                                        wave_sizze_40000) *
                              wave_sizze_40000) == 0 &&
                             (squot32(local_tid_39998, wave_sizze_40000) & (2 *
                                                                            skip_waves_40026 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_40014 = ((__local
                                            float *) red_arr_mem_40002)[sext_i32_i64(local_tid_39998 +
                                                                        offset_40025)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_40015 = x_40013 + x_40014;
                                
                                x_40013 = defunc_1_op_res_40015;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_40002)[sext_i32_i64(local_tid_39998)] =
                                    x_40013;
                            }
                        }
                        skip_waves_40026 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_39998 == 0) {
                            ((__global float *) mem_38837)[gtid_33232 *
                                                           (i32_res_27828 *
                                                            i32_res_27828) +
                                                           gtid_33233 *
                                                           i32_res_27828 +
                                                           gtid_33234] =
                                x_40013;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33383
}
__kernel void mainzisegred_large_34292(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_40200_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_40198_backing_aligned_1,
                                       int64_t N_27808, int64_t N_27810,
                                       int64_t i32_res_27822,
                                       int64_t i32_res_27828,
                                       int64_t num_groups_34345, __global
                                       unsigned char *images_mem_38682, __global
                                       unsigned char *binop_p_mem_38691,
                                       __global unsigned char *mem_39144,
                                       int64_t groups_per_segment_40184,
                                       int64_t elements_per_thread_40185,
                                       int64_t virt_num_groups_40186,
                                       int64_t threads_per_segment_40188,
                                       __global
                                       unsigned char *group_res_arr_mem_40189,
                                       __global
                                       unsigned char *mainzicounter_mem_40191)
{
    #define segred_group_sizze_34344 (mainzisegred_group_sizze_34286)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_40200_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_40200_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_40198_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40198_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40193;
    int32_t local_tid_40194;
    int64_t group_sizze_40197;
    int32_t wave_sizze_40196;
    int32_t group_tid_40195;
    
    global_tid_40193 = get_global_id(0);
    local_tid_40194 = get_local_id(0);
    group_sizze_40197 = get_local_size(0);
    wave_sizze_40196 = LOCKSTEP_WIDTH;
    group_tid_40195 = get_group_id(0);
    
    int32_t phys_tid_34292;
    
    phys_tid_34292 = global_tid_40193;
    
    __local char *red_arr_mem_40198;
    
    red_arr_mem_40198 = (__local char *) red_arr_mem_40198_backing_0;
    
    __local char *sync_arr_mem_40200;
    
    sync_arr_mem_40200 = (__local char *) sync_arr_mem_40200_backing_1;
    
    int32_t phys_group_id_40202;
    
    phys_group_id_40202 = get_group_id(0);
    for (int32_t i_40203 = 0; i_40203 <
         sdiv_up32(sext_i64_i32(virt_num_groups_40186) - phys_group_id_40202,
                   sext_i64_i32(num_groups_34345)); i_40203++) {
        int32_t virt_group_id_40204 = phys_group_id_40202 + i_40203 *
                sext_i64_i32(num_groups_34345);
        int32_t flat_segment_id_40205 = squot32(virt_group_id_40204,
                                                sext_i64_i32(groups_per_segment_40184));
        int64_t global_tid_40206 = srem64(sext_i32_i64(virt_group_id_40204) *
                                          segred_group_sizze_34344 +
                                          sext_i32_i64(local_tid_40194),
                                          segred_group_sizze_34344 *
                                          groups_per_segment_40184);
        int64_t gtid_34281 = squot64(sext_i32_i64(flat_segment_id_40205),
                                     i32_res_27828);
        int64_t gtid_34282 = sext_i32_i64(flat_segment_id_40205) -
                squot64(sext_i32_i64(flat_segment_id_40205), i32_res_27828) *
                i32_res_27828;
        int64_t gtid_34291;
        float x_acc_40207;
        int64_t chunk_sizze_40208;
        
        chunk_sizze_40208 = smin64(elements_per_thread_40185,
                                   sdiv_up64(i32_res_27822 -
                                             sext_i32_i64(sext_i64_i32(global_tid_40206)),
                                             threads_per_segment_40188));
        
        float x_34348;
        float x_34349;
        
        // neutral-initialise the accumulators
        {
            x_acc_40207 = 0.0F;
        }
        for (int64_t i_40212 = 0; i_40212 < chunk_sizze_40208; i_40212++) {
            gtid_34291 = sext_i32_i64(sext_i64_i32(global_tid_40206)) +
                threads_per_segment_40188 * i_40212;
            // apply map function
            {
                float x_34354 = ((__global
                                  float *) images_mem_38682)[gtid_34281 *
                                                             N_27810 +
                                                             gtid_34291];
                bool isnan_res_34355;
                
                isnan_res_34355 = futrts_isnan32(x_34354);
                
                float defunc_1_f_res_34356;
                
                if (isnan_res_34355) {
                    defunc_1_f_res_34356 = 0.0F;
                } else {
                    float x_34353 = ((__global
                                      float *) binop_p_mem_38691)[gtid_34282 *
                                                                  N_27808 +
                                                                  gtid_34291];
                    float defunc_1_f_res_f_res_34357 = x_34353 * x_34354;
                    
                    defunc_1_f_res_34356 = defunc_1_f_res_f_res_34357;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_34348 = x_acc_40207;
                }
                // load new values
                {
                    x_34349 = defunc_1_f_res_34356;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_34350 = x_34348 + x_34349;
                    
                    // store in accumulator
                    {
                        x_acc_40207 = defunc_1_op_res_34350;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_34348 = x_acc_40207;
            ((__local
              float *) red_arr_mem_40198)[sext_i32_i64(local_tid_40194)] =
                x_34348;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_40213;
        int32_t skip_waves_40214;
        
        skip_waves_40214 = 1;
        
        float x_40209;
        float x_40210;
        
        offset_40213 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_40194,
                      sext_i64_i32(segred_group_sizze_34344))) {
                x_40209 = ((__local
                            float *) red_arr_mem_40198)[sext_i32_i64(local_tid_40194 +
                                                        offset_40213)];
            }
        }
        offset_40213 = 1;
        while (slt32(offset_40213, wave_sizze_40196)) {
            if (slt32(local_tid_40194 + offset_40213,
                      sext_i64_i32(segred_group_sizze_34344)) &&
                ((local_tid_40194 - squot32(local_tid_40194, wave_sizze_40196) *
                  wave_sizze_40196) & (2 * offset_40213 - 1)) == 0) {
                // read array element
                {
                    x_40210 = ((volatile __local
                                float *) red_arr_mem_40198)[sext_i32_i64(local_tid_40194 +
                                                            offset_40213)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_40211 = x_40209 + x_40210;
                    
                    x_40209 = defunc_1_op_res_40211;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_40198)[sext_i32_i64(local_tid_40194)] =
                        x_40209;
                }
            }
            offset_40213 *= 2;
        }
        while (slt32(skip_waves_40214,
                     squot32(sext_i64_i32(segred_group_sizze_34344) +
                             wave_sizze_40196 - 1, wave_sizze_40196))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_40213 = skip_waves_40214 * wave_sizze_40196;
            if (slt32(local_tid_40194 + offset_40213,
                      sext_i64_i32(segred_group_sizze_34344)) &&
                ((local_tid_40194 - squot32(local_tid_40194, wave_sizze_40196) *
                  wave_sizze_40196) == 0 && (squot32(local_tid_40194,
                                                     wave_sizze_40196) & (2 *
                                                                          skip_waves_40214 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_40210 = ((__local
                                float *) red_arr_mem_40198)[sext_i32_i64(local_tid_40194 +
                                                            offset_40213)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_40211 = x_40209 + x_40210;
                    
                    x_40209 = defunc_1_op_res_40211;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_40198)[sext_i32_i64(local_tid_40194)] =
                        x_40209;
                }
            }
            skip_waves_40214 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_40194) == 0) {
                x_acc_40207 = x_40209;
            }
        }
        if (groups_per_segment_40184 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_40194 == 0) {
                    ((__global float *) mem_39144)[gtid_34281 * i32_res_27828 +
                                                   gtid_34282] = x_acc_40207;
                }
            }
        } else {
            int32_t old_counter_40215;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_40194 == 0) {
                    ((__global
                      float *) group_res_arr_mem_40189)[sext_i32_i64(virt_group_id_40204) *
                                                        segred_group_sizze_34344] =
                        x_acc_40207;
                    mem_fence_global();
                    old_counter_40215 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_40191)[sext_i32_i64(srem32(flat_segment_id_40205,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_40200)[0] =
                        old_counter_40215 == groups_per_segment_40184 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_40216;
            
            is_last_group_40216 = ((__local bool *) sync_arr_mem_40200)[0];
            if (is_last_group_40216) {
                if (local_tid_40194 == 0) {
                    old_counter_40215 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_40191)[sext_i32_i64(srem32(flat_segment_id_40205,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_40184));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_40217 =
                            sdiv_up64(groups_per_segment_40184,
                                      segred_group_sizze_34344);
                    
                    x_34348 = 0.0F;
                    for (int64_t i_40218 = 0; i_40218 < read_per_thread_40217;
                         i_40218++) {
                        int64_t group_res_id_40219 =
                                sext_i32_i64(local_tid_40194) *
                                read_per_thread_40217 + i_40218;
                        int64_t index_of_group_res_40220 =
                                sext_i32_i64(flat_segment_id_40205) *
                                groups_per_segment_40184 + group_res_id_40219;
                        
                        if (slt64(group_res_id_40219,
                                  groups_per_segment_40184)) {
                            x_34349 = ((__global
                                        float *) group_res_arr_mem_40189)[index_of_group_res_40220 *
                                                                          segred_group_sizze_34344];
                            
                            float defunc_1_op_res_34350;
                            
                            defunc_1_op_res_34350 = x_34348 + x_34349;
                            x_34348 = defunc_1_op_res_34350;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_40198)[sext_i32_i64(local_tid_40194)] =
                    x_34348;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_40221;
                    int32_t skip_waves_40222;
                    
                    skip_waves_40222 = 1;
                    
                    float x_40209;
                    float x_40210;
                    
                    offset_40221 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_40194,
                                  sext_i64_i32(segred_group_sizze_34344))) {
                            x_40209 = ((__local
                                        float *) red_arr_mem_40198)[sext_i32_i64(local_tid_40194 +
                                                                    offset_40221)];
                        }
                    }
                    offset_40221 = 1;
                    while (slt32(offset_40221, wave_sizze_40196)) {
                        if (slt32(local_tid_40194 + offset_40221,
                                  sext_i64_i32(segred_group_sizze_34344)) &&
                            ((local_tid_40194 - squot32(local_tid_40194,
                                                        wave_sizze_40196) *
                              wave_sizze_40196) & (2 * offset_40221 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_40210 = ((volatile __local
                                            float *) red_arr_mem_40198)[sext_i32_i64(local_tid_40194 +
                                                                        offset_40221)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_40211 = x_40209 + x_40210;
                                
                                x_40209 = defunc_1_op_res_40211;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_40198)[sext_i32_i64(local_tid_40194)] =
                                    x_40209;
                            }
                        }
                        offset_40221 *= 2;
                    }
                    while (slt32(skip_waves_40222,
                                 squot32(sext_i64_i32(segred_group_sizze_34344) +
                                         wave_sizze_40196 - 1,
                                         wave_sizze_40196))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_40221 = skip_waves_40222 * wave_sizze_40196;
                        if (slt32(local_tid_40194 + offset_40221,
                                  sext_i64_i32(segred_group_sizze_34344)) &&
                            ((local_tid_40194 - squot32(local_tid_40194,
                                                        wave_sizze_40196) *
                              wave_sizze_40196) == 0 &&
                             (squot32(local_tid_40194, wave_sizze_40196) & (2 *
                                                                            skip_waves_40222 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_40210 = ((__local
                                            float *) red_arr_mem_40198)[sext_i32_i64(local_tid_40194 +
                                                                        offset_40221)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_40211 = x_40209 + x_40210;
                                
                                x_40209 = defunc_1_op_res_40211;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_40198)[sext_i32_i64(local_tid_40194)] =
                                    x_40209;
                            }
                        }
                        skip_waves_40222 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_40194 == 0) {
                            ((__global float *) mem_39144)[gtid_34281 *
                                                           i32_res_27828 +
                                                           gtid_34282] =
                                x_40209;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34344
}
__kernel void mainzisegred_large_34429(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_40288_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_40286_backing_aligned_1,
                                       int64_t i32_res_27828,
                                       int64_t num_groups_34478, __global
                                       unsigned char *defunc_3_map_res_mem_38929,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_39150,
                                       __global unsigned char *mem_39210,
                                       int64_t groups_per_segment_40272,
                                       int64_t elements_per_thread_40273,
                                       int64_t virt_num_groups_40274,
                                       int64_t threads_per_segment_40276,
                                       __global
                                       unsigned char *group_res_arr_mem_40277,
                                       __global
                                       unsigned char *mainzicounter_mem_40279)
{
    #define segred_group_sizze_34477 (mainzisegred_group_sizze_34423)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_40288_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_40288_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_40286_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40286_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40281;
    int32_t local_tid_40282;
    int64_t group_sizze_40285;
    int32_t wave_sizze_40284;
    int32_t group_tid_40283;
    
    global_tid_40281 = get_global_id(0);
    local_tid_40282 = get_local_id(0);
    group_sizze_40285 = get_local_size(0);
    wave_sizze_40284 = LOCKSTEP_WIDTH;
    group_tid_40283 = get_group_id(0);
    
    int32_t phys_tid_34429;
    
    phys_tid_34429 = global_tid_40281;
    
    __local char *red_arr_mem_40286;
    
    red_arr_mem_40286 = (__local char *) red_arr_mem_40286_backing_0;
    
    __local char *sync_arr_mem_40288;
    
    sync_arr_mem_40288 = (__local char *) sync_arr_mem_40288_backing_1;
    
    int32_t phys_group_id_40290;
    
    phys_group_id_40290 = get_group_id(0);
    for (int32_t i_40291 = 0; i_40291 <
         sdiv_up32(sext_i64_i32(virt_num_groups_40274) - phys_group_id_40290,
                   sext_i64_i32(num_groups_34478)); i_40291++) {
        int32_t virt_group_id_40292 = phys_group_id_40290 + i_40291 *
                sext_i64_i32(num_groups_34478);
        int32_t flat_segment_id_40293 = squot32(virt_group_id_40292,
                                                sext_i64_i32(groups_per_segment_40272));
        int64_t global_tid_40294 = srem64(sext_i32_i64(virt_group_id_40292) *
                                          segred_group_sizze_34477 +
                                          sext_i32_i64(local_tid_40282),
                                          segred_group_sizze_34477 *
                                          groups_per_segment_40272);
        int64_t gtid_34418 = squot64(sext_i32_i64(flat_segment_id_40293),
                                     i32_res_27828);
        int64_t gtid_34419 = sext_i32_i64(flat_segment_id_40293) -
                squot64(sext_i32_i64(flat_segment_id_40293), i32_res_27828) *
                i32_res_27828;
        int64_t gtid_34428;
        float x_acc_40295;
        int64_t chunk_sizze_40296;
        
        chunk_sizze_40296 = smin64(elements_per_thread_40273,
                                   sdiv_up64(i32_res_27828 -
                                             sext_i32_i64(sext_i64_i32(global_tid_40294)),
                                             threads_per_segment_40276));
        
        float x_34481;
        float x_34482;
        
        // neutral-initialise the accumulators
        {
            x_acc_40295 = 0.0F;
        }
        for (int64_t i_40300 = 0; i_40300 < chunk_sizze_40296; i_40300++) {
            gtid_34428 = sext_i32_i64(sext_i64_i32(global_tid_40294)) +
                threads_per_segment_40276 * i_40300;
            // apply map function
            {
                float x_34487 = ((__global
                                  float *) defunc_3_map_res_mem_39150)[gtid_34418 *
                                                                       i32_res_27828 +
                                                                       gtid_34428];
                float x_34488 = ((__global
                                  float *) defunc_3_map_res_mem_38929)[gtid_34418 *
                                                                       (i32_res_27828 *
                                                                        i32_res_27828) +
                                                                       gtid_34419 *
                                                                       i32_res_27828 +
                                                                       gtid_34428];
                float defunc_1_f_res_34489 = x_34487 * x_34488;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_34481 = x_acc_40295;
                }
                // load new values
                {
                    x_34482 = defunc_1_f_res_34489;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_34483 = x_34481 + x_34482;
                    
                    // store in accumulator
                    {
                        x_acc_40295 = defunc_1_op_res_34483;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_34481 = x_acc_40295;
            ((__local
              float *) red_arr_mem_40286)[sext_i32_i64(local_tid_40282)] =
                x_34481;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_40301;
        int32_t skip_waves_40302;
        
        skip_waves_40302 = 1;
        
        float x_40297;
        float x_40298;
        
        offset_40301 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_40282,
                      sext_i64_i32(segred_group_sizze_34477))) {
                x_40297 = ((__local
                            float *) red_arr_mem_40286)[sext_i32_i64(local_tid_40282 +
                                                        offset_40301)];
            }
        }
        offset_40301 = 1;
        while (slt32(offset_40301, wave_sizze_40284)) {
            if (slt32(local_tid_40282 + offset_40301,
                      sext_i64_i32(segred_group_sizze_34477)) &&
                ((local_tid_40282 - squot32(local_tid_40282, wave_sizze_40284) *
                  wave_sizze_40284) & (2 * offset_40301 - 1)) == 0) {
                // read array element
                {
                    x_40298 = ((volatile __local
                                float *) red_arr_mem_40286)[sext_i32_i64(local_tid_40282 +
                                                            offset_40301)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_40299 = x_40297 + x_40298;
                    
                    x_40297 = defunc_1_op_res_40299;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_40286)[sext_i32_i64(local_tid_40282)] =
                        x_40297;
                }
            }
            offset_40301 *= 2;
        }
        while (slt32(skip_waves_40302,
                     squot32(sext_i64_i32(segred_group_sizze_34477) +
                             wave_sizze_40284 - 1, wave_sizze_40284))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_40301 = skip_waves_40302 * wave_sizze_40284;
            if (slt32(local_tid_40282 + offset_40301,
                      sext_i64_i32(segred_group_sizze_34477)) &&
                ((local_tid_40282 - squot32(local_tid_40282, wave_sizze_40284) *
                  wave_sizze_40284) == 0 && (squot32(local_tid_40282,
                                                     wave_sizze_40284) & (2 *
                                                                          skip_waves_40302 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_40298 = ((__local
                                float *) red_arr_mem_40286)[sext_i32_i64(local_tid_40282 +
                                                            offset_40301)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_40299 = x_40297 + x_40298;
                    
                    x_40297 = defunc_1_op_res_40299;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_40286)[sext_i32_i64(local_tid_40282)] =
                        x_40297;
                }
            }
            skip_waves_40302 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_40282) == 0) {
                x_acc_40295 = x_40297;
            }
        }
        if (groups_per_segment_40272 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_40282 == 0) {
                    ((__global float *) mem_39210)[gtid_34418 * i32_res_27828 +
                                                   gtid_34419] = x_acc_40295;
                }
            }
        } else {
            int32_t old_counter_40303;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_40282 == 0) {
                    ((__global
                      float *) group_res_arr_mem_40277)[sext_i32_i64(virt_group_id_40292) *
                                                        segred_group_sizze_34477] =
                        x_acc_40295;
                    mem_fence_global();
                    old_counter_40303 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_40279)[sext_i32_i64(srem32(flat_segment_id_40293,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_40288)[0] =
                        old_counter_40303 == groups_per_segment_40272 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_40304;
            
            is_last_group_40304 = ((__local bool *) sync_arr_mem_40288)[0];
            if (is_last_group_40304) {
                if (local_tid_40282 == 0) {
                    old_counter_40303 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_40279)[sext_i32_i64(srem32(flat_segment_id_40293,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_40272));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_40305 =
                            sdiv_up64(groups_per_segment_40272,
                                      segred_group_sizze_34477);
                    
                    x_34481 = 0.0F;
                    for (int64_t i_40306 = 0; i_40306 < read_per_thread_40305;
                         i_40306++) {
                        int64_t group_res_id_40307 =
                                sext_i32_i64(local_tid_40282) *
                                read_per_thread_40305 + i_40306;
                        int64_t index_of_group_res_40308 =
                                sext_i32_i64(flat_segment_id_40293) *
                                groups_per_segment_40272 + group_res_id_40307;
                        
                        if (slt64(group_res_id_40307,
                                  groups_per_segment_40272)) {
                            x_34482 = ((__global
                                        float *) group_res_arr_mem_40277)[index_of_group_res_40308 *
                                                                          segred_group_sizze_34477];
                            
                            float defunc_1_op_res_34483;
                            
                            defunc_1_op_res_34483 = x_34481 + x_34482;
                            x_34481 = defunc_1_op_res_34483;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_40286)[sext_i32_i64(local_tid_40282)] =
                    x_34481;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_40309;
                    int32_t skip_waves_40310;
                    
                    skip_waves_40310 = 1;
                    
                    float x_40297;
                    float x_40298;
                    
                    offset_40309 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_40282,
                                  sext_i64_i32(segred_group_sizze_34477))) {
                            x_40297 = ((__local
                                        float *) red_arr_mem_40286)[sext_i32_i64(local_tid_40282 +
                                                                    offset_40309)];
                        }
                    }
                    offset_40309 = 1;
                    while (slt32(offset_40309, wave_sizze_40284)) {
                        if (slt32(local_tid_40282 + offset_40309,
                                  sext_i64_i32(segred_group_sizze_34477)) &&
                            ((local_tid_40282 - squot32(local_tid_40282,
                                                        wave_sizze_40284) *
                              wave_sizze_40284) & (2 * offset_40309 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_40298 = ((volatile __local
                                            float *) red_arr_mem_40286)[sext_i32_i64(local_tid_40282 +
                                                                        offset_40309)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_40299 = x_40297 + x_40298;
                                
                                x_40297 = defunc_1_op_res_40299;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_40286)[sext_i32_i64(local_tid_40282)] =
                                    x_40297;
                            }
                        }
                        offset_40309 *= 2;
                    }
                    while (slt32(skip_waves_40310,
                                 squot32(sext_i64_i32(segred_group_sizze_34477) +
                                         wave_sizze_40284 - 1,
                                         wave_sizze_40284))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_40309 = skip_waves_40310 * wave_sizze_40284;
                        if (slt32(local_tid_40282 + offset_40309,
                                  sext_i64_i32(segred_group_sizze_34477)) &&
                            ((local_tid_40282 - squot32(local_tid_40282,
                                                        wave_sizze_40284) *
                              wave_sizze_40284) == 0 &&
                             (squot32(local_tid_40282, wave_sizze_40284) & (2 *
                                                                            skip_waves_40310 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_40298 = ((__local
                                            float *) red_arr_mem_40286)[sext_i32_i64(local_tid_40282 +
                                                                        offset_40309)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_40299 = x_40297 + x_40298;
                                
                                x_40297 = defunc_1_op_res_40299;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_40286)[sext_i32_i64(local_tid_40282)] =
                                    x_40297;
                            }
                        }
                        skip_waves_40310 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_40282 == 0) {
                            ((__global float *) mem_39210)[gtid_34418 *
                                                           i32_res_27828 +
                                                           gtid_34419] =
                                x_40297;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34477
}
__kernel void mainzisegred_large_34559(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_40420_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_40418_backing_aligned_1,
                                       int64_t N_27808, int64_t i32_res_27828,
                                       int64_t num_groups_34606, __global
                                       unsigned char *mem_38698, __global
                                       unsigned char *defunc_4_map_res_mem_39216,
                                       __global unsigned char *mem_39434,
                                       int64_t groups_per_segment_40404,
                                       int64_t elements_per_thread_40405,
                                       int64_t virt_num_groups_40406,
                                       int64_t threads_per_segment_40408,
                                       __global
                                       unsigned char *group_res_arr_mem_40409,
                                       __global
                                       unsigned char *mainzicounter_mem_40411)
{
    #define segred_group_sizze_34605 (mainzisegred_group_sizze_34553)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_40420_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_40420_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_40418_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40418_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40413;
    int32_t local_tid_40414;
    int64_t group_sizze_40417;
    int32_t wave_sizze_40416;
    int32_t group_tid_40415;
    
    global_tid_40413 = get_global_id(0);
    local_tid_40414 = get_local_id(0);
    group_sizze_40417 = get_local_size(0);
    wave_sizze_40416 = LOCKSTEP_WIDTH;
    group_tid_40415 = get_group_id(0);
    
    int32_t phys_tid_34559;
    
    phys_tid_34559 = global_tid_40413;
    
    __local char *red_arr_mem_40418;
    
    red_arr_mem_40418 = (__local char *) red_arr_mem_40418_backing_0;
    
    __local char *sync_arr_mem_40420;
    
    sync_arr_mem_40420 = (__local char *) sync_arr_mem_40420_backing_1;
    
    int32_t phys_group_id_40422;
    
    phys_group_id_40422 = get_group_id(0);
    for (int32_t i_40423 = 0; i_40423 <
         sdiv_up32(sext_i64_i32(virt_num_groups_40406) - phys_group_id_40422,
                   sext_i64_i32(num_groups_34606)); i_40423++) {
        int32_t virt_group_id_40424 = phys_group_id_40422 + i_40423 *
                sext_i64_i32(num_groups_34606);
        int32_t flat_segment_id_40425 = squot32(virt_group_id_40424,
                                                sext_i64_i32(groups_per_segment_40404));
        int64_t global_tid_40426 = srem64(sext_i32_i64(virt_group_id_40424) *
                                          segred_group_sizze_34605 +
                                          sext_i32_i64(local_tid_40414),
                                          segred_group_sizze_34605 *
                                          groups_per_segment_40404);
        int64_t gtid_34548 = squot64(sext_i32_i64(flat_segment_id_40425),
                                     N_27808);
        int64_t gtid_34549 = sext_i32_i64(flat_segment_id_40425) -
                squot64(sext_i32_i64(flat_segment_id_40425), N_27808) * N_27808;
        int64_t gtid_34558;
        float x_acc_40427;
        int64_t chunk_sizze_40428;
        
        chunk_sizze_40428 = smin64(elements_per_thread_40405,
                                   sdiv_up64(i32_res_27828 -
                                             sext_i32_i64(sext_i64_i32(global_tid_40426)),
                                             threads_per_segment_40408));
        
        float x_34609;
        float x_34610;
        
        // neutral-initialise the accumulators
        {
            x_acc_40427 = 0.0F;
        }
        for (int64_t i_40432 = 0; i_40432 < chunk_sizze_40428; i_40432++) {
            gtid_34558 = sext_i32_i64(sext_i64_i32(global_tid_40426)) +
                threads_per_segment_40408 * i_40432;
            // apply map function
            {
                float x_34614 = ((__global
                                  float *) defunc_4_map_res_mem_39216)[gtid_34548 *
                                                                       i32_res_27828 +
                                                                       gtid_34558];
                float x_34615 = ((__global float *) mem_38698)[gtid_34549 *
                                                               i32_res_27828 +
                                                               gtid_34558];
                float defunc_1_f_res_34616 = x_34614 * x_34615;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_34609 = x_acc_40427;
                }
                // load new values
                {
                    x_34610 = defunc_1_f_res_34616;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_34611 = x_34609 + x_34610;
                    
                    // store in accumulator
                    {
                        x_acc_40427 = defunc_1_op_res_34611;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_34609 = x_acc_40427;
            ((__local
              float *) red_arr_mem_40418)[sext_i32_i64(local_tid_40414)] =
                x_34609;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_40433;
        int32_t skip_waves_40434;
        
        skip_waves_40434 = 1;
        
        float x_40429;
        float x_40430;
        
        offset_40433 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_40414,
                      sext_i64_i32(segred_group_sizze_34605))) {
                x_40429 = ((__local
                            float *) red_arr_mem_40418)[sext_i32_i64(local_tid_40414 +
                                                        offset_40433)];
            }
        }
        offset_40433 = 1;
        while (slt32(offset_40433, wave_sizze_40416)) {
            if (slt32(local_tid_40414 + offset_40433,
                      sext_i64_i32(segred_group_sizze_34605)) &&
                ((local_tid_40414 - squot32(local_tid_40414, wave_sizze_40416) *
                  wave_sizze_40416) & (2 * offset_40433 - 1)) == 0) {
                // read array element
                {
                    x_40430 = ((volatile __local
                                float *) red_arr_mem_40418)[sext_i32_i64(local_tid_40414 +
                                                            offset_40433)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_40431 = x_40429 + x_40430;
                    
                    x_40429 = defunc_1_op_res_40431;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_40418)[sext_i32_i64(local_tid_40414)] =
                        x_40429;
                }
            }
            offset_40433 *= 2;
        }
        while (slt32(skip_waves_40434,
                     squot32(sext_i64_i32(segred_group_sizze_34605) +
                             wave_sizze_40416 - 1, wave_sizze_40416))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_40433 = skip_waves_40434 * wave_sizze_40416;
            if (slt32(local_tid_40414 + offset_40433,
                      sext_i64_i32(segred_group_sizze_34605)) &&
                ((local_tid_40414 - squot32(local_tid_40414, wave_sizze_40416) *
                  wave_sizze_40416) == 0 && (squot32(local_tid_40414,
                                                     wave_sizze_40416) & (2 *
                                                                          skip_waves_40434 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_40430 = ((__local
                                float *) red_arr_mem_40418)[sext_i32_i64(local_tid_40414 +
                                                            offset_40433)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_40431 = x_40429 + x_40430;
                    
                    x_40429 = defunc_1_op_res_40431;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_40418)[sext_i32_i64(local_tid_40414)] =
                        x_40429;
                }
            }
            skip_waves_40434 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_40414) == 0) {
                x_acc_40427 = x_40429;
            }
        }
        if (groups_per_segment_40404 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_40414 == 0) {
                    ((__global float *) mem_39434)[gtid_34548 * N_27808 +
                                                   gtid_34549] = x_acc_40427;
                }
            }
        } else {
            int32_t old_counter_40435;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_40414 == 0) {
                    ((__global
                      float *) group_res_arr_mem_40409)[sext_i32_i64(virt_group_id_40424) *
                                                        segred_group_sizze_34605] =
                        x_acc_40427;
                    mem_fence_global();
                    old_counter_40435 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_40411)[sext_i32_i64(srem32(flat_segment_id_40425,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_40420)[0] =
                        old_counter_40435 == groups_per_segment_40404 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_40436;
            
            is_last_group_40436 = ((__local bool *) sync_arr_mem_40420)[0];
            if (is_last_group_40436) {
                if (local_tid_40414 == 0) {
                    old_counter_40435 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_40411)[sext_i32_i64(srem32(flat_segment_id_40425,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_40404));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_40437 =
                            sdiv_up64(groups_per_segment_40404,
                                      segred_group_sizze_34605);
                    
                    x_34609 = 0.0F;
                    for (int64_t i_40438 = 0; i_40438 < read_per_thread_40437;
                         i_40438++) {
                        int64_t group_res_id_40439 =
                                sext_i32_i64(local_tid_40414) *
                                read_per_thread_40437 + i_40438;
                        int64_t index_of_group_res_40440 =
                                sext_i32_i64(flat_segment_id_40425) *
                                groups_per_segment_40404 + group_res_id_40439;
                        
                        if (slt64(group_res_id_40439,
                                  groups_per_segment_40404)) {
                            x_34610 = ((__global
                                        float *) group_res_arr_mem_40409)[index_of_group_res_40440 *
                                                                          segred_group_sizze_34605];
                            
                            float defunc_1_op_res_34611;
                            
                            defunc_1_op_res_34611 = x_34609 + x_34610;
                            x_34609 = defunc_1_op_res_34611;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_40418)[sext_i32_i64(local_tid_40414)] =
                    x_34609;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_40441;
                    int32_t skip_waves_40442;
                    
                    skip_waves_40442 = 1;
                    
                    float x_40429;
                    float x_40430;
                    
                    offset_40441 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_40414,
                                  sext_i64_i32(segred_group_sizze_34605))) {
                            x_40429 = ((__local
                                        float *) red_arr_mem_40418)[sext_i32_i64(local_tid_40414 +
                                                                    offset_40441)];
                        }
                    }
                    offset_40441 = 1;
                    while (slt32(offset_40441, wave_sizze_40416)) {
                        if (slt32(local_tid_40414 + offset_40441,
                                  sext_i64_i32(segred_group_sizze_34605)) &&
                            ((local_tid_40414 - squot32(local_tid_40414,
                                                        wave_sizze_40416) *
                              wave_sizze_40416) & (2 * offset_40441 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_40430 = ((volatile __local
                                            float *) red_arr_mem_40418)[sext_i32_i64(local_tid_40414 +
                                                                        offset_40441)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_40431 = x_40429 + x_40430;
                                
                                x_40429 = defunc_1_op_res_40431;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_40418)[sext_i32_i64(local_tid_40414)] =
                                    x_40429;
                            }
                        }
                        offset_40441 *= 2;
                    }
                    while (slt32(skip_waves_40442,
                                 squot32(sext_i64_i32(segred_group_sizze_34605) +
                                         wave_sizze_40416 - 1,
                                         wave_sizze_40416))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_40441 = skip_waves_40442 * wave_sizze_40416;
                        if (slt32(local_tid_40414 + offset_40441,
                                  sext_i64_i32(segred_group_sizze_34605)) &&
                            ((local_tid_40414 - squot32(local_tid_40414,
                                                        wave_sizze_40416) *
                              wave_sizze_40416) == 0 &&
                             (squot32(local_tid_40414, wave_sizze_40416) & (2 *
                                                                            skip_waves_40442 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_40430 = ((__local
                                            float *) red_arr_mem_40418)[sext_i32_i64(local_tid_40414 +
                                                                        offset_40441)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_40431 = x_40429 + x_40430;
                                
                                x_40429 = defunc_1_op_res_40431;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_40418)[sext_i32_i64(local_tid_40414)] =
                                    x_40429;
                            }
                        }
                        skip_waves_40442 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_40414 == 0) {
                            ((__global float *) mem_39434)[gtid_34548 *
                                                           N_27808 +
                                                           gtid_34549] =
                                x_40429;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34605
}
__kernel void mainzisegred_large_35125(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_40674_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_40672_backing_aligned_1,
                                       int64_t N_27808, int64_t i32_res_27822,
                                       int64_t num_groups_35172, __global
                                       unsigned char *defunc_4_map_res_mem_39478,
                                       __global unsigned char *mem_39529,
                                       __global unsigned char *mem_39532,
                                       int64_t groups_per_segment_40658,
                                       int64_t elements_per_thread_40659,
                                       int64_t virt_num_groups_40660,
                                       int64_t threads_per_segment_40662,
                                       __global
                                       unsigned char *group_res_arr_mem_40663,
                                       __global
                                       unsigned char *mainzicounter_mem_40665)
{
    #define segred_group_sizze_35171 (mainzisegred_group_sizze_35119)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_40674_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_40674_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_40672_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40672_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40667;
    int32_t local_tid_40668;
    int64_t group_sizze_40671;
    int32_t wave_sizze_40670;
    int32_t group_tid_40669;
    
    global_tid_40667 = get_global_id(0);
    local_tid_40668 = get_local_id(0);
    group_sizze_40671 = get_local_size(0);
    wave_sizze_40670 = LOCKSTEP_WIDTH;
    group_tid_40669 = get_group_id(0);
    
    int32_t phys_tid_35125;
    
    phys_tid_35125 = global_tid_40667;
    
    __local char *red_arr_mem_40672;
    
    red_arr_mem_40672 = (__local char *) red_arr_mem_40672_backing_0;
    
    __local char *sync_arr_mem_40674;
    
    sync_arr_mem_40674 = (__local char *) sync_arr_mem_40674_backing_1;
    
    int32_t phys_group_id_40676;
    
    phys_group_id_40676 = get_group_id(0);
    for (int32_t i_40677 = 0; i_40677 <
         sdiv_up32(sext_i64_i32(virt_num_groups_40660) - phys_group_id_40676,
                   sext_i64_i32(num_groups_35172)); i_40677++) {
        int32_t virt_group_id_40678 = phys_group_id_40676 + i_40677 *
                sext_i64_i32(num_groups_35172);
        int32_t flat_segment_id_40679 = squot32(virt_group_id_40678,
                                                sext_i64_i32(groups_per_segment_40658));
        int64_t global_tid_40680 = srem64(sext_i32_i64(virt_group_id_40678) *
                                          segred_group_sizze_35171 +
                                          sext_i32_i64(local_tid_40668),
                                          segred_group_sizze_35171 *
                                          groups_per_segment_40658);
        int64_t gtid_35116 = sext_i32_i64(flat_segment_id_40679);
        int64_t gtid_35124;
        float x_acc_40681;
        int64_t chunk_sizze_40682;
        
        chunk_sizze_40682 = smin64(elements_per_thread_40659,
                                   sdiv_up64(i32_res_27822 -
                                             sext_i32_i64(sext_i64_i32(global_tid_40680)),
                                             threads_per_segment_40662));
        
        float x_35175;
        float x_35176;
        
        // neutral-initialise the accumulators
        {
            x_acc_40681 = 0.0F;
        }
        for (int64_t i_40686 = 0; i_40686 < chunk_sizze_40682; i_40686++) {
            gtid_35124 = sext_i32_i64(sext_i64_i32(global_tid_40680)) +
                threads_per_segment_40662 * i_40686;
            // apply map function
            {
                int32_t defunc_0_f_res_35179 = ((__global
                                                 int32_t *) mem_39529)[gtid_35116];
                int32_t index_primexp_36721 = sext_i64_i32(gtid_35124);
                bool cond_35181 = slt32(index_primexp_36721,
                                        defunc_0_f_res_35179);
                float defunc_0_f_res_35182;
                
                if (cond_35181) {
                    int64_t i_35183 = sext_i32_i64(index_primexp_36721);
                    float defunc_0_f_res_t_res_35184 = ((__global
                                                         float *) defunc_4_map_res_mem_39478)[gtid_35116 *
                                                                                              N_27808 +
                                                                                              i_35183];
                    
                    defunc_0_f_res_35182 = defunc_0_f_res_t_res_35184;
                } else {
                    defunc_0_f_res_35182 = 0.0F;
                }
                
                float defunc_0_f_res_35185 = defunc_0_f_res_35182 *
                      defunc_0_f_res_35182;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_35175 = x_acc_40681;
                }
                // load new values
                {
                    x_35176 = defunc_0_f_res_35185;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_35177 = x_35175 + x_35176;
                    
                    // store in accumulator
                    {
                        x_acc_40681 = defunc_1_op_res_35177;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_35175 = x_acc_40681;
            ((__local
              float *) red_arr_mem_40672)[sext_i32_i64(local_tid_40668)] =
                x_35175;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_40687;
        int32_t skip_waves_40688;
        
        skip_waves_40688 = 1;
        
        float x_40683;
        float x_40684;
        
        offset_40687 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_40668,
                      sext_i64_i32(segred_group_sizze_35171))) {
                x_40683 = ((__local
                            float *) red_arr_mem_40672)[sext_i32_i64(local_tid_40668 +
                                                        offset_40687)];
            }
        }
        offset_40687 = 1;
        while (slt32(offset_40687, wave_sizze_40670)) {
            if (slt32(local_tid_40668 + offset_40687,
                      sext_i64_i32(segred_group_sizze_35171)) &&
                ((local_tid_40668 - squot32(local_tid_40668, wave_sizze_40670) *
                  wave_sizze_40670) & (2 * offset_40687 - 1)) == 0) {
                // read array element
                {
                    x_40684 = ((volatile __local
                                float *) red_arr_mem_40672)[sext_i32_i64(local_tid_40668 +
                                                            offset_40687)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_40685 = x_40683 + x_40684;
                    
                    x_40683 = defunc_1_op_res_40685;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_40672)[sext_i32_i64(local_tid_40668)] =
                        x_40683;
                }
            }
            offset_40687 *= 2;
        }
        while (slt32(skip_waves_40688,
                     squot32(sext_i64_i32(segred_group_sizze_35171) +
                             wave_sizze_40670 - 1, wave_sizze_40670))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_40687 = skip_waves_40688 * wave_sizze_40670;
            if (slt32(local_tid_40668 + offset_40687,
                      sext_i64_i32(segred_group_sizze_35171)) &&
                ((local_tid_40668 - squot32(local_tid_40668, wave_sizze_40670) *
                  wave_sizze_40670) == 0 && (squot32(local_tid_40668,
                                                     wave_sizze_40670) & (2 *
                                                                          skip_waves_40688 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_40684 = ((__local
                                float *) red_arr_mem_40672)[sext_i32_i64(local_tid_40668 +
                                                            offset_40687)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_40685 = x_40683 + x_40684;
                    
                    x_40683 = defunc_1_op_res_40685;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_40672)[sext_i32_i64(local_tid_40668)] =
                        x_40683;
                }
            }
            skip_waves_40688 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_40668) == 0) {
                x_acc_40681 = x_40683;
            }
        }
        if (groups_per_segment_40658 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_40668 == 0) {
                    ((__global float *) mem_39532)[gtid_35116] = x_acc_40681;
                }
            }
        } else {
            int32_t old_counter_40689;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_40668 == 0) {
                    ((__global
                      float *) group_res_arr_mem_40663)[sext_i32_i64(virt_group_id_40678) *
                                                        segred_group_sizze_35171] =
                        x_acc_40681;
                    mem_fence_global();
                    old_counter_40689 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_40665)[sext_i32_i64(srem32(flat_segment_id_40679,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_40674)[0] =
                        old_counter_40689 == groups_per_segment_40658 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_40690;
            
            is_last_group_40690 = ((__local bool *) sync_arr_mem_40674)[0];
            if (is_last_group_40690) {
                if (local_tid_40668 == 0) {
                    old_counter_40689 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_40665)[sext_i32_i64(srem32(flat_segment_id_40679,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_40658));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_40691 =
                            sdiv_up64(groups_per_segment_40658,
                                      segred_group_sizze_35171);
                    
                    x_35175 = 0.0F;
                    for (int64_t i_40692 = 0; i_40692 < read_per_thread_40691;
                         i_40692++) {
                        int64_t group_res_id_40693 =
                                sext_i32_i64(local_tid_40668) *
                                read_per_thread_40691 + i_40692;
                        int64_t index_of_group_res_40694 =
                                sext_i32_i64(flat_segment_id_40679) *
                                groups_per_segment_40658 + group_res_id_40693;
                        
                        if (slt64(group_res_id_40693,
                                  groups_per_segment_40658)) {
                            x_35176 = ((__global
                                        float *) group_res_arr_mem_40663)[index_of_group_res_40694 *
                                                                          segred_group_sizze_35171];
                            
                            float defunc_1_op_res_35177;
                            
                            defunc_1_op_res_35177 = x_35175 + x_35176;
                            x_35175 = defunc_1_op_res_35177;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_40672)[sext_i32_i64(local_tid_40668)] =
                    x_35175;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_40695;
                    int32_t skip_waves_40696;
                    
                    skip_waves_40696 = 1;
                    
                    float x_40683;
                    float x_40684;
                    
                    offset_40695 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_40668,
                                  sext_i64_i32(segred_group_sizze_35171))) {
                            x_40683 = ((__local
                                        float *) red_arr_mem_40672)[sext_i32_i64(local_tid_40668 +
                                                                    offset_40695)];
                        }
                    }
                    offset_40695 = 1;
                    while (slt32(offset_40695, wave_sizze_40670)) {
                        if (slt32(local_tid_40668 + offset_40695,
                                  sext_i64_i32(segred_group_sizze_35171)) &&
                            ((local_tid_40668 - squot32(local_tid_40668,
                                                        wave_sizze_40670) *
                              wave_sizze_40670) & (2 * offset_40695 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_40684 = ((volatile __local
                                            float *) red_arr_mem_40672)[sext_i32_i64(local_tid_40668 +
                                                                        offset_40695)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_40685 = x_40683 + x_40684;
                                
                                x_40683 = defunc_1_op_res_40685;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_40672)[sext_i32_i64(local_tid_40668)] =
                                    x_40683;
                            }
                        }
                        offset_40695 *= 2;
                    }
                    while (slt32(skip_waves_40696,
                                 squot32(sext_i64_i32(segred_group_sizze_35171) +
                                         wave_sizze_40670 - 1,
                                         wave_sizze_40670))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_40695 = skip_waves_40696 * wave_sizze_40670;
                        if (slt32(local_tid_40668 + offset_40695,
                                  sext_i64_i32(segred_group_sizze_35171)) &&
                            ((local_tid_40668 - squot32(local_tid_40668,
                                                        wave_sizze_40670) *
                              wave_sizze_40670) == 0 &&
                             (squot32(local_tid_40668, wave_sizze_40670) & (2 *
                                                                            skip_waves_40696 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_40684 = ((__local
                                            float *) red_arr_mem_40672)[sext_i32_i64(local_tid_40668 +
                                                                        offset_40695)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_40685 = x_40683 + x_40684;
                                
                                x_40683 = defunc_1_op_res_40685;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_40672)[sext_i32_i64(local_tid_40668)] =
                                    x_40683;
                            }
                        }
                        skip_waves_40696 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_40668 == 0) {
                            ((__global float *) mem_39532)[gtid_35116] =
                                x_40683;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35171
}
__kernel void mainzisegred_large_35146(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_40614_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_40612_backing_aligned_1,
                                       int64_t N_27810, int64_t i32_res_27822,
                                       int64_t num_groups_35158, __global
                                       unsigned char *images_mem_38682, __global
                                       unsigned char *mem_39529,
                                       int64_t groups_per_segment_40598,
                                       int64_t elements_per_thread_40599,
                                       int64_t virt_num_groups_40600,
                                       int64_t threads_per_segment_40602,
                                       __global
                                       unsigned char *group_res_arr_mem_40603,
                                       __global
                                       unsigned char *mainzicounter_mem_40605)
{
    #define segred_group_sizze_35157 (mainzisegred_group_sizze_35140)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_40614_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_40614_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_40612_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40612_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40607;
    int32_t local_tid_40608;
    int64_t group_sizze_40611;
    int32_t wave_sizze_40610;
    int32_t group_tid_40609;
    
    global_tid_40607 = get_global_id(0);
    local_tid_40608 = get_local_id(0);
    group_sizze_40611 = get_local_size(0);
    wave_sizze_40610 = LOCKSTEP_WIDTH;
    group_tid_40609 = get_group_id(0);
    
    int32_t phys_tid_35146;
    
    phys_tid_35146 = global_tid_40607;
    
    __local char *red_arr_mem_40612;
    
    red_arr_mem_40612 = (__local char *) red_arr_mem_40612_backing_0;
    
    __local char *sync_arr_mem_40614;
    
    sync_arr_mem_40614 = (__local char *) sync_arr_mem_40614_backing_1;
    
    int32_t phys_group_id_40616;
    
    phys_group_id_40616 = get_group_id(0);
    for (int32_t i_40617 = 0; i_40617 <
         sdiv_up32(sext_i64_i32(virt_num_groups_40600) - phys_group_id_40616,
                   sext_i64_i32(num_groups_35158)); i_40617++) {
        int32_t virt_group_id_40618 = phys_group_id_40616 + i_40617 *
                sext_i64_i32(num_groups_35158);
        int32_t flat_segment_id_40619 = squot32(virt_group_id_40618,
                                                sext_i64_i32(groups_per_segment_40598));
        int64_t global_tid_40620 = srem64(sext_i32_i64(virt_group_id_40618) *
                                          segred_group_sizze_35157 +
                                          sext_i32_i64(local_tid_40608),
                                          segred_group_sizze_35157 *
                                          groups_per_segment_40598);
        int64_t gtid_35137 = sext_i32_i64(flat_segment_id_40619);
        int64_t gtid_35145;
        int32_t x_acc_40621;
        int64_t chunk_sizze_40622;
        
        chunk_sizze_40622 = smin64(elements_per_thread_40599,
                                   sdiv_up64(i32_res_27822 -
                                             sext_i32_i64(sext_i64_i32(global_tid_40620)),
                                             threads_per_segment_40602));
        
        int32_t x_35161;
        int32_t x_35162;
        
        // neutral-initialise the accumulators
        {
            x_acc_40621 = 0;
        }
        for (int64_t i_40626 = 0; i_40626 < chunk_sizze_40622; i_40626++) {
            gtid_35145 = sext_i32_i64(sext_i64_i32(global_tid_40620)) +
                threads_per_segment_40602 * i_40626;
            // apply map function
            {
                float x_35165 = ((__global
                                  float *) images_mem_38682)[gtid_35137 *
                                                             N_27810 +
                                                             gtid_35145];
                bool isnan_res_35166;
                
                isnan_res_35166 = futrts_isnan32(x_35165);
                
                bool cond_35167 = !isnan_res_35166;
                int32_t defunc_0_f_res_35168 = btoi_bool_i32(cond_35167);
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_35161 = x_acc_40621;
                }
                // load new values
                {
                    x_35162 = defunc_0_f_res_35168;
                }
                // apply reduction operator
                {
                    int32_t defunc_1_op_res_35163 = add32(x_35161, x_35162);
                    
                    // store in accumulator
                    {
                        x_acc_40621 = defunc_1_op_res_35163;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_35161 = x_acc_40621;
            ((__local
              int32_t *) red_arr_mem_40612)[sext_i32_i64(local_tid_40608)] =
                x_35161;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_40627;
        int32_t skip_waves_40628;
        
        skip_waves_40628 = 1;
        
        int32_t x_40623;
        int32_t x_40624;
        
        offset_40627 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_40608,
                      sext_i64_i32(segred_group_sizze_35157))) {
                x_40623 = ((__local
                            int32_t *) red_arr_mem_40612)[sext_i32_i64(local_tid_40608 +
                                                          offset_40627)];
            }
        }
        offset_40627 = 1;
        while (slt32(offset_40627, wave_sizze_40610)) {
            if (slt32(local_tid_40608 + offset_40627,
                      sext_i64_i32(segred_group_sizze_35157)) &&
                ((local_tid_40608 - squot32(local_tid_40608, wave_sizze_40610) *
                  wave_sizze_40610) & (2 * offset_40627 - 1)) == 0) {
                // read array element
                {
                    x_40624 = ((volatile __local
                                int32_t *) red_arr_mem_40612)[sext_i32_i64(local_tid_40608 +
                                                              offset_40627)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_40625 = add32(x_40623, x_40624);
                    
                    x_40623 = defunc_1_op_res_40625;
                }
                // write result of operation
                {
                    ((volatile __local
                      int32_t *) red_arr_mem_40612)[sext_i32_i64(local_tid_40608)] =
                        x_40623;
                }
            }
            offset_40627 *= 2;
        }
        while (slt32(skip_waves_40628,
                     squot32(sext_i64_i32(segred_group_sizze_35157) +
                             wave_sizze_40610 - 1, wave_sizze_40610))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_40627 = skip_waves_40628 * wave_sizze_40610;
            if (slt32(local_tid_40608 + offset_40627,
                      sext_i64_i32(segred_group_sizze_35157)) &&
                ((local_tid_40608 - squot32(local_tid_40608, wave_sizze_40610) *
                  wave_sizze_40610) == 0 && (squot32(local_tid_40608,
                                                     wave_sizze_40610) & (2 *
                                                                          skip_waves_40628 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_40624 = ((__local
                                int32_t *) red_arr_mem_40612)[sext_i32_i64(local_tid_40608 +
                                                              offset_40627)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_40625 = add32(x_40623, x_40624);
                    
                    x_40623 = defunc_1_op_res_40625;
                }
                // write result of operation
                {
                    ((__local
                      int32_t *) red_arr_mem_40612)[sext_i32_i64(local_tid_40608)] =
                        x_40623;
                }
            }
            skip_waves_40628 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_40608) == 0) {
                x_acc_40621 = x_40623;
            }
        }
        if (groups_per_segment_40598 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_40608 == 0) {
                    ((__global int32_t *) mem_39529)[gtid_35137] = x_acc_40621;
                }
            }
        } else {
            int32_t old_counter_40629;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_40608 == 0) {
                    ((__global
                      int32_t *) group_res_arr_mem_40603)[sext_i32_i64(virt_group_id_40618) *
                                                          segred_group_sizze_35157] =
                        x_acc_40621;
                    mem_fence_global();
                    old_counter_40629 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_40605)[sext_i32_i64(srem32(flat_segment_id_40619,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_40614)[0] =
                        old_counter_40629 == groups_per_segment_40598 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_40630;
            
            is_last_group_40630 = ((__local bool *) sync_arr_mem_40614)[0];
            if (is_last_group_40630) {
                if (local_tid_40608 == 0) {
                    old_counter_40629 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_40605)[sext_i32_i64(srem32(flat_segment_id_40619,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_40598));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_40631 =
                            sdiv_up64(groups_per_segment_40598,
                                      segred_group_sizze_35157);
                    
                    x_35161 = 0;
                    for (int64_t i_40632 = 0; i_40632 < read_per_thread_40631;
                         i_40632++) {
                        int64_t group_res_id_40633 =
                                sext_i32_i64(local_tid_40608) *
                                read_per_thread_40631 + i_40632;
                        int64_t index_of_group_res_40634 =
                                sext_i32_i64(flat_segment_id_40619) *
                                groups_per_segment_40598 + group_res_id_40633;
                        
                        if (slt64(group_res_id_40633,
                                  groups_per_segment_40598)) {
                            x_35162 = ((__global
                                        int32_t *) group_res_arr_mem_40603)[index_of_group_res_40634 *
                                                                            segred_group_sizze_35157];
                            
                            int32_t defunc_1_op_res_35163;
                            
                            defunc_1_op_res_35163 = add32(x_35161, x_35162);
                            x_35161 = defunc_1_op_res_35163;
                        }
                    }
                }
                ((__local
                  int32_t *) red_arr_mem_40612)[sext_i32_i64(local_tid_40608)] =
                    x_35161;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_40635;
                    int32_t skip_waves_40636;
                    
                    skip_waves_40636 = 1;
                    
                    int32_t x_40623;
                    int32_t x_40624;
                    
                    offset_40635 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_40608,
                                  sext_i64_i32(segred_group_sizze_35157))) {
                            x_40623 = ((__local
                                        int32_t *) red_arr_mem_40612)[sext_i32_i64(local_tid_40608 +
                                                                      offset_40635)];
                        }
                    }
                    offset_40635 = 1;
                    while (slt32(offset_40635, wave_sizze_40610)) {
                        if (slt32(local_tid_40608 + offset_40635,
                                  sext_i64_i32(segred_group_sizze_35157)) &&
                            ((local_tid_40608 - squot32(local_tid_40608,
                                                        wave_sizze_40610) *
                              wave_sizze_40610) & (2 * offset_40635 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_40624 = ((volatile __local
                                            int32_t *) red_arr_mem_40612)[sext_i32_i64(local_tid_40608 +
                                                                          offset_40635)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_40625 = add32(x_40623,
                                                                      x_40624);
                                
                                x_40623 = defunc_1_op_res_40625;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_40612)[sext_i32_i64(local_tid_40608)] =
                                    x_40623;
                            }
                        }
                        offset_40635 *= 2;
                    }
                    while (slt32(skip_waves_40636,
                                 squot32(sext_i64_i32(segred_group_sizze_35157) +
                                         wave_sizze_40610 - 1,
                                         wave_sizze_40610))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_40635 = skip_waves_40636 * wave_sizze_40610;
                        if (slt32(local_tid_40608 + offset_40635,
                                  sext_i64_i32(segred_group_sizze_35157)) &&
                            ((local_tid_40608 - squot32(local_tid_40608,
                                                        wave_sizze_40610) *
                              wave_sizze_40610) == 0 &&
                             (squot32(local_tid_40608, wave_sizze_40610) & (2 *
                                                                            skip_waves_40636 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_40624 = ((__local
                                            int32_t *) red_arr_mem_40612)[sext_i32_i64(local_tid_40608 +
                                                                          offset_40635)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_40625 = add32(x_40623,
                                                                      x_40624);
                                
                                x_40623 = defunc_1_op_res_40625;
                            }
                            // write result of operation
                            {
                                ((__local
                                  int32_t *) red_arr_mem_40612)[sext_i32_i64(local_tid_40608)] =
                                    x_40623;
                            }
                        }
                        skip_waves_40636 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_40608 == 0) {
                            ((__global int32_t *) mem_39529)[gtid_35137] =
                                x_40623;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35157
}
__kernel void mainzisegred_large_35297(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_40783_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_40781_backing_aligned_1,
                                       int64_t N_27808, int64_t i32_res_28183,
                                       int64_t num_groups_35315, __global
                                       unsigned char *defunc_4_map_res_mem_39478,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_39541,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_39542,
                                       __global unsigned char *mem_39575,
                                       int64_t groups_per_segment_40767,
                                       int64_t elements_per_thread_40768,
                                       int64_t virt_num_groups_40769,
                                       int64_t threads_per_segment_40771,
                                       __global
                                       unsigned char *group_res_arr_mem_40772,
                                       __global
                                       unsigned char *mainzicounter_mem_40774)
{
    #define segred_group_sizze_35314 (mainzisegred_group_sizze_35291)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_40783_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_40783_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_40781_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40781_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40776;
    int32_t local_tid_40777;
    int64_t group_sizze_40780;
    int32_t wave_sizze_40779;
    int32_t group_tid_40778;
    
    global_tid_40776 = get_global_id(0);
    local_tid_40777 = get_local_id(0);
    group_sizze_40780 = get_local_size(0);
    wave_sizze_40779 = LOCKSTEP_WIDTH;
    group_tid_40778 = get_group_id(0);
    
    int32_t phys_tid_35297;
    
    phys_tid_35297 = global_tid_40776;
    
    __local char *red_arr_mem_40781;
    
    red_arr_mem_40781 = (__local char *) red_arr_mem_40781_backing_0;
    
    __local char *sync_arr_mem_40783;
    
    sync_arr_mem_40783 = (__local char *) sync_arr_mem_40783_backing_1;
    
    int32_t phys_group_id_40785;
    
    phys_group_id_40785 = get_group_id(0);
    for (int32_t i_40786 = 0; i_40786 <
         sdiv_up32(sext_i64_i32(virt_num_groups_40769) - phys_group_id_40785,
                   sext_i64_i32(num_groups_35315)); i_40786++) {
        int32_t virt_group_id_40787 = phys_group_id_40785 + i_40786 *
                sext_i64_i32(num_groups_35315);
        int32_t flat_segment_id_40788 = squot32(virt_group_id_40787,
                                                sext_i64_i32(groups_per_segment_40767));
        int64_t global_tid_40789 = srem64(sext_i32_i64(virt_group_id_40787) *
                                          segred_group_sizze_35314 +
                                          sext_i32_i64(local_tid_40777),
                                          segred_group_sizze_35314 *
                                          groups_per_segment_40767);
        int64_t gtid_35288 = sext_i32_i64(flat_segment_id_40788);
        int64_t gtid_35296;
        float x_acc_40790;
        int64_t chunk_sizze_40791;
        
        chunk_sizze_40791 = smin64(elements_per_thread_40768,
                                   sdiv_up64(i32_res_28183 -
                                             sext_i32_i64(sext_i64_i32(global_tid_40789)),
                                             threads_per_segment_40771));
        
        float x_35318;
        float x_35319;
        
        // neutral-initialise the accumulators
        {
            x_acc_40790 = 0.0F;
        }
        for (int64_t i_40795 = 0; i_40795 < chunk_sizze_40791; i_40795++) {
            gtid_35296 = sext_i32_i64(sext_i64_i32(global_tid_40789)) +
                threads_per_segment_40771 * i_40795;
            // apply map function
            {
                int32_t x_35323 = ((__global
                                    int32_t *) defunc_3_map_res_mem_39541)[gtid_35288];
                int32_t index_primexp_36726 = sext_i64_i32(gtid_35296);
                bool cond_35325 = slt32(index_primexp_36726, x_35323);
                float defunc_0_f_res_35326;
                
                if (cond_35325) {
                    int32_t x_35322 = ((__global
                                        int32_t *) defunc_3_map_res_mem_39542)[gtid_35288];
                    int32_t x_35327 = add32(x_35322, index_primexp_36726);
                    int32_t x_35328 = sub32(x_35327, x_35323);
                    int32_t i_35329 = add32(1, x_35328);
                    int64_t i_35330 = sext_i32_i64(i_35329);
                    float defunc_0_f_res_t_res_35331 = ((__global
                                                         float *) defunc_4_map_res_mem_39478)[gtid_35288 *
                                                                                              N_27808 +
                                                                                              i_35330];
                    
                    defunc_0_f_res_35326 = defunc_0_f_res_t_res_35331;
                } else {
                    defunc_0_f_res_35326 = 0.0F;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_35318 = x_acc_40790;
                }
                // load new values
                {
                    x_35319 = defunc_0_f_res_35326;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_35320 = x_35318 + x_35319;
                    
                    // store in accumulator
                    {
                        x_acc_40790 = defunc_1_op_res_35320;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_35318 = x_acc_40790;
            ((__local
              float *) red_arr_mem_40781)[sext_i32_i64(local_tid_40777)] =
                x_35318;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_40796;
        int32_t skip_waves_40797;
        
        skip_waves_40797 = 1;
        
        float x_40792;
        float x_40793;
        
        offset_40796 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_40777,
                      sext_i64_i32(segred_group_sizze_35314))) {
                x_40792 = ((__local
                            float *) red_arr_mem_40781)[sext_i32_i64(local_tid_40777 +
                                                        offset_40796)];
            }
        }
        offset_40796 = 1;
        while (slt32(offset_40796, wave_sizze_40779)) {
            if (slt32(local_tid_40777 + offset_40796,
                      sext_i64_i32(segred_group_sizze_35314)) &&
                ((local_tid_40777 - squot32(local_tid_40777, wave_sizze_40779) *
                  wave_sizze_40779) & (2 * offset_40796 - 1)) == 0) {
                // read array element
                {
                    x_40793 = ((volatile __local
                                float *) red_arr_mem_40781)[sext_i32_i64(local_tid_40777 +
                                                            offset_40796)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_40794 = x_40792 + x_40793;
                    
                    x_40792 = defunc_1_op_res_40794;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_40781)[sext_i32_i64(local_tid_40777)] =
                        x_40792;
                }
            }
            offset_40796 *= 2;
        }
        while (slt32(skip_waves_40797,
                     squot32(sext_i64_i32(segred_group_sizze_35314) +
                             wave_sizze_40779 - 1, wave_sizze_40779))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_40796 = skip_waves_40797 * wave_sizze_40779;
            if (slt32(local_tid_40777 + offset_40796,
                      sext_i64_i32(segred_group_sizze_35314)) &&
                ((local_tid_40777 - squot32(local_tid_40777, wave_sizze_40779) *
                  wave_sizze_40779) == 0 && (squot32(local_tid_40777,
                                                     wave_sizze_40779) & (2 *
                                                                          skip_waves_40797 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_40793 = ((__local
                                float *) red_arr_mem_40781)[sext_i32_i64(local_tid_40777 +
                                                            offset_40796)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_40794 = x_40792 + x_40793;
                    
                    x_40792 = defunc_1_op_res_40794;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_40781)[sext_i32_i64(local_tid_40777)] =
                        x_40792;
                }
            }
            skip_waves_40797 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_40777) == 0) {
                x_acc_40790 = x_40792;
            }
        }
        if (groups_per_segment_40767 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_40777 == 0) {
                    ((__global float *) mem_39575)[gtid_35288] = x_acc_40790;
                }
            }
        } else {
            int32_t old_counter_40798;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_40777 == 0) {
                    ((__global
                      float *) group_res_arr_mem_40772)[sext_i32_i64(virt_group_id_40787) *
                                                        segred_group_sizze_35314] =
                        x_acc_40790;
                    mem_fence_global();
                    old_counter_40798 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_40774)[sext_i32_i64(srem32(flat_segment_id_40788,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_40783)[0] =
                        old_counter_40798 == groups_per_segment_40767 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_40799;
            
            is_last_group_40799 = ((__local bool *) sync_arr_mem_40783)[0];
            if (is_last_group_40799) {
                if (local_tid_40777 == 0) {
                    old_counter_40798 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_40774)[sext_i32_i64(srem32(flat_segment_id_40788,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_40767));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_40800 =
                            sdiv_up64(groups_per_segment_40767,
                                      segred_group_sizze_35314);
                    
                    x_35318 = 0.0F;
                    for (int64_t i_40801 = 0; i_40801 < read_per_thread_40800;
                         i_40801++) {
                        int64_t group_res_id_40802 =
                                sext_i32_i64(local_tid_40777) *
                                read_per_thread_40800 + i_40801;
                        int64_t index_of_group_res_40803 =
                                sext_i32_i64(flat_segment_id_40788) *
                                groups_per_segment_40767 + group_res_id_40802;
                        
                        if (slt64(group_res_id_40802,
                                  groups_per_segment_40767)) {
                            x_35319 = ((__global
                                        float *) group_res_arr_mem_40772)[index_of_group_res_40803 *
                                                                          segred_group_sizze_35314];
                            
                            float defunc_1_op_res_35320;
                            
                            defunc_1_op_res_35320 = x_35318 + x_35319;
                            x_35318 = defunc_1_op_res_35320;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_40781)[sext_i32_i64(local_tid_40777)] =
                    x_35318;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_40804;
                    int32_t skip_waves_40805;
                    
                    skip_waves_40805 = 1;
                    
                    float x_40792;
                    float x_40793;
                    
                    offset_40804 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_40777,
                                  sext_i64_i32(segred_group_sizze_35314))) {
                            x_40792 = ((__local
                                        float *) red_arr_mem_40781)[sext_i32_i64(local_tid_40777 +
                                                                    offset_40804)];
                        }
                    }
                    offset_40804 = 1;
                    while (slt32(offset_40804, wave_sizze_40779)) {
                        if (slt32(local_tid_40777 + offset_40804,
                                  sext_i64_i32(segred_group_sizze_35314)) &&
                            ((local_tid_40777 - squot32(local_tid_40777,
                                                        wave_sizze_40779) *
                              wave_sizze_40779) & (2 * offset_40804 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_40793 = ((volatile __local
                                            float *) red_arr_mem_40781)[sext_i32_i64(local_tid_40777 +
                                                                        offset_40804)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_40794 = x_40792 + x_40793;
                                
                                x_40792 = defunc_1_op_res_40794;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_40781)[sext_i32_i64(local_tid_40777)] =
                                    x_40792;
                            }
                        }
                        offset_40804 *= 2;
                    }
                    while (slt32(skip_waves_40805,
                                 squot32(sext_i64_i32(segred_group_sizze_35314) +
                                         wave_sizze_40779 - 1,
                                         wave_sizze_40779))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_40804 = skip_waves_40805 * wave_sizze_40779;
                        if (slt32(local_tid_40777 + offset_40804,
                                  sext_i64_i32(segred_group_sizze_35314)) &&
                            ((local_tid_40777 - squot32(local_tid_40777,
                                                        wave_sizze_40779) *
                              wave_sizze_40779) == 0 &&
                             (squot32(local_tid_40777, wave_sizze_40779) & (2 *
                                                                            skip_waves_40805 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_40793 = ((__local
                                            float *) red_arr_mem_40781)[sext_i32_i64(local_tid_40777 +
                                                                        offset_40804)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_40794 = x_40792 + x_40793;
                                
                                x_40792 = defunc_1_op_res_40794;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_40781)[sext_i32_i64(local_tid_40777)] =
                                    x_40792;
                            }
                        }
                        skip_waves_40805 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_40777 == 0) {
                            ((__global float *) mem_39575)[gtid_35288] =
                                x_40792;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35314
}
__kernel void mainzisegred_large_36293(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_40968_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_40966_backing_aligned_1,
                                       __local volatile
                                       int64_t *red_arr_mem_40964_backing_aligned_2,
                                       __local volatile
                                       int64_t *red_arr_mem_40962_backing_aligned_3,
                                       int64_t iota32_arg_28208,
                                       int64_t num_groups_36464, __global
                                       unsigned char *mem_39581, __global
                                       unsigned char *mem_39622, __global
                                       unsigned char *mem_39624, __global
                                       unsigned char *mem_39628, __global
                                       unsigned char *mem_39631, __global
                                       unsigned char *mem_39633, __global
                                       unsigned char *mem_39635,
                                       int64_t groups_per_segment_40944,
                                       int64_t elements_per_thread_40945,
                                       int64_t virt_num_groups_40946, __global
                                       unsigned char *group_res_arr_mem_40949,
                                       __global
                                       unsigned char *group_res_arr_mem_40951,
                                       __global
                                       unsigned char *group_res_arr_mem_40953,
                                       __global
                                       unsigned char *mainzicounter_mem_40955)
{
    #define segred_group_sizze_36463 (mainzisegred_group_sizze_36287)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_40968_backing_3 =
                          (__local volatile
                           char *) sync_arr_mem_40968_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_40966_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_40966_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_40964_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_40964_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_40962_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40962_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40957;
    int32_t local_tid_40958;
    int64_t group_sizze_40961;
    int32_t wave_sizze_40960;
    int32_t group_tid_40959;
    
    global_tid_40957 = get_global_id(0);
    local_tid_40958 = get_local_id(0);
    group_sizze_40961 = get_local_size(0);
    wave_sizze_40960 = LOCKSTEP_WIDTH;
    group_tid_40959 = get_group_id(0);
    
    int32_t phys_tid_36293;
    
    phys_tid_36293 = global_tid_40957;
    
    __local char *red_arr_mem_40962;
    
    red_arr_mem_40962 = (__local char *) red_arr_mem_40962_backing_0;
    
    __local char *red_arr_mem_40964;
    
    red_arr_mem_40964 = (__local char *) red_arr_mem_40964_backing_1;
    
    __local char *red_arr_mem_40966;
    
    red_arr_mem_40966 = (__local char *) red_arr_mem_40966_backing_2;
    
    __local char *sync_arr_mem_40968;
    
    sync_arr_mem_40968 = (__local char *) sync_arr_mem_40968_backing_3;
    
    int32_t phys_group_id_40970;
    
    phys_group_id_40970 = get_group_id(0);
    for (int32_t i_40971 = 0; i_40971 <
         sdiv_up32(sext_i64_i32(virt_num_groups_40946) - phys_group_id_40970,
                   sext_i64_i32(num_groups_36464)); i_40971++) {
        int32_t virt_group_id_40972 = phys_group_id_40970 + i_40971 *
                sext_i64_i32(num_groups_36464);
        int32_t flat_segment_id_40973 = squot32(virt_group_id_40972,
                                                sext_i64_i32(groups_per_segment_40944));
        int64_t global_tid_40974 = srem64(sext_i32_i64(virt_group_id_40972) *
                                          segred_group_sizze_36463 +
                                          sext_i32_i64(local_tid_40958),
                                          segred_group_sizze_36463 *
                                          groups_per_segment_40944);
        int64_t gtid_36284 = sext_i32_i64(flat_segment_id_40973);
        int64_t gtid_36292;
        bool x_acc_40975;
        int32_t x_acc_40976;
        float x_acc_40977;
        int64_t chunk_sizze_40978;
        int64_t starting_point_40979;
        
        starting_point_40979 = sext_i32_i64(sext_i64_i32(global_tid_40974)) *
            elements_per_thread_40945;
        
        int64_t remaining_elements_40980;
        
        remaining_elements_40980 = iota32_arg_28208 - starting_point_40979;
        if (sle64(remaining_elements_40980, 0) || sle64(iota32_arg_28208,
                                                        starting_point_40979)) {
            chunk_sizze_40978 = 0;
        } else {
            if (slt64(iota32_arg_28208,
                      (sext_i32_i64(sext_i64_i32(global_tid_40974)) + 1) *
                      elements_per_thread_40945)) {
                chunk_sizze_40978 = iota32_arg_28208 -
                    sext_i32_i64(sext_i64_i32(global_tid_40974)) *
                    elements_per_thread_40945;
            } else {
                chunk_sizze_40978 = elements_per_thread_40945;
            }
        }
        
        bool x_36469;
        int32_t x_36470;
        float x_36471;
        bool x_36472;
        int32_t x_36473;
        float x_36474;
        
        // neutral-initialise the accumulators
        {
            x_acc_40975 = 0;
            x_acc_40976 = -1;
            x_acc_40977 = 0.0F;
        }
        for (int64_t i_40995 = 0; i_40995 < elements_per_thread_40945;
             i_40995++) {
            gtid_36292 = sext_i32_i64(local_tid_40958) +
                (sext_i32_i64(squot32(sext_i64_i32(global_tid_40974),
                                      sext_i64_i32(segred_group_sizze_36463))) *
                 elements_per_thread_40945 + i_40995) *
                segred_group_sizze_36463;
            if (slt64(gtid_36292, iota32_arg_28208)) {
                // apply map function
                {
                    int32_t y_36483 = ((__global
                                        int32_t *) mem_39624)[gtid_36284];
                    float y_36484 = ((__global float *) mem_39622)[gtid_36284];
                    float x_36488 = ((__global float *) mem_39628)[gtid_36284 *
                                                                   iota32_arg_28208 +
                                                                   gtid_36292];
                    float x_36489 = ((__global float *) mem_39581)[gtid_36292];
                    int32_t index_primexp_36743 = sext_i64_i32(gtid_36292);
                    float defunc_0_f_res_36492 = x_36488 / y_36484;
                    bool cond_36493 = slt32(index_primexp_36743, y_36483);
                    bool isnan_res_36494;
                    
                    isnan_res_36494 = futrts_isnan32(defunc_0_f_res_36492);
                    
                    bool cond_t_res_36495 = !isnan_res_36494;
                    bool x_36496 = cond_36493 && cond_t_res_36495;
                    float abs_res_36497 = (float) fabs(defunc_0_f_res_36492);
                    bool defunc_2_f_res_t_res_36498 = x_36489 < abs_res_36497;
                    bool x_36499 = x_36496 && defunc_2_f_res_t_res_36498;
                    float defunc_1_f_res_36500;
                    
                    if (cond_36493) {
                        defunc_1_f_res_36500 = defunc_0_f_res_36492;
                    } else {
                        defunc_1_f_res_36500 = 0.0F;
                    }
                    // save map-out results
                    { }
                    // load accumulator
                    {
                        x_36469 = x_acc_40975;
                        x_36470 = x_acc_40976;
                        x_36471 = x_acc_40977;
                    }
                    // load new values
                    {
                        x_36472 = x_36499;
                        x_36473 = index_primexp_36743;
                        x_36474 = defunc_1_f_res_36500;
                    }
                    // apply reduction operator
                    {
                        bool defunc_1_op_res_36475;
                        int32_t defunc_1_op_res_36476;
                        
                        if (x_36469) {
                            defunc_1_op_res_36475 = x_36469;
                            defunc_1_op_res_36476 = x_36470;
                        } else {
                            bool x_36477 = x_36472 && x_36472;
                            bool x_36478 = !x_36472;
                            bool y_36479 = x_36469 && x_36478;
                            bool defunc_1_op_res_f_res_36480 = x_36477 ||
                                 y_36479;
                            int32_t defunc_1_op_res_f_res_36481;
                            
                            if (x_36472) {
                                defunc_1_op_res_f_res_36481 = x_36473;
                            } else {
                                defunc_1_op_res_f_res_36481 = x_36470;
                            }
                            defunc_1_op_res_36475 = defunc_1_op_res_f_res_36480;
                            defunc_1_op_res_36476 = defunc_1_op_res_f_res_36481;
                        }
                        
                        float defunc_1_op_res_36482 = x_36471 + x_36474;
                        
                        // store in accumulator
                        {
                            x_acc_40975 = defunc_1_op_res_36475;
                            x_acc_40976 = defunc_1_op_res_36476;
                            x_acc_40977 = defunc_1_op_res_36482;
                        }
                    }
                }
            }
            // to reduce current chunk, first store our result in memory
            {
                x_36469 = x_acc_40975;
                x_36470 = x_acc_40976;
                x_36471 = x_acc_40977;
                ((__local
                  bool *) red_arr_mem_40962)[sext_i32_i64(local_tid_40958)] =
                    x_36469;
                ((__local
                  int32_t *) red_arr_mem_40964)[sext_i32_i64(local_tid_40958)] =
                    x_36470;
                ((__local
                  float *) red_arr_mem_40966)[sext_i32_i64(local_tid_40958)] =
                    x_36471;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t offset_40996;
            int32_t skip_waves_40997;
            
            skip_waves_40997 = 1;
            
            bool x_40981;
            int32_t x_40982;
            float x_40983;
            bool x_40984;
            int32_t x_40985;
            float x_40986;
            
            offset_40996 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_40958,
                          sext_i64_i32(segred_group_sizze_36463))) {
                    x_40981 = ((__local
                                bool *) red_arr_mem_40962)[sext_i32_i64(local_tid_40958 +
                                                           offset_40996)];
                    x_40982 = ((__local
                                int32_t *) red_arr_mem_40964)[sext_i32_i64(local_tid_40958 +
                                                              offset_40996)];
                    x_40983 = ((__local
                                float *) red_arr_mem_40966)[sext_i32_i64(local_tid_40958 +
                                                            offset_40996)];
                }
            }
            offset_40996 = 1;
            while (slt32(offset_40996, wave_sizze_40960)) {
                if (slt32(local_tid_40958 + offset_40996,
                          sext_i64_i32(segred_group_sizze_36463)) &&
                    ((local_tid_40958 - squot32(local_tid_40958,
                                                wave_sizze_40960) *
                      wave_sizze_40960) & (2 * offset_40996 - 1)) == 0) {
                    // read array element
                    {
                        x_40984 = ((volatile __local
                                    bool *) red_arr_mem_40962)[sext_i32_i64(local_tid_40958 +
                                                               offset_40996)];
                        x_40985 = ((volatile __local
                                    int32_t *) red_arr_mem_40964)[sext_i32_i64(local_tid_40958 +
                                                                  offset_40996)];
                        x_40986 = ((volatile __local
                                    float *) red_arr_mem_40966)[sext_i32_i64(local_tid_40958 +
                                                                offset_40996)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_40987;
                        int32_t defunc_1_op_res_40988;
                        
                        if (x_40981) {
                            defunc_1_op_res_40987 = x_40981;
                            defunc_1_op_res_40988 = x_40982;
                        } else {
                            bool x_40989 = x_40984 && x_40984;
                            bool x_40990 = !x_40984;
                            bool y_40991 = x_40981 && x_40990;
                            bool defunc_1_op_res_f_res_40992 = x_40989 ||
                                 y_40991;
                            int32_t defunc_1_op_res_f_res_40993;
                            
                            if (x_40984) {
                                defunc_1_op_res_f_res_40993 = x_40985;
                            } else {
                                defunc_1_op_res_f_res_40993 = x_40982;
                            }
                            defunc_1_op_res_40987 = defunc_1_op_res_f_res_40992;
                            defunc_1_op_res_40988 = defunc_1_op_res_f_res_40993;
                        }
                        
                        float defunc_1_op_res_40994 = x_40983 + x_40986;
                        
                        x_40981 = defunc_1_op_res_40987;
                        x_40982 = defunc_1_op_res_40988;
                        x_40983 = defunc_1_op_res_40994;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          bool *) red_arr_mem_40962)[sext_i32_i64(local_tid_40958)] =
                            x_40981;
                        ((volatile __local
                          int32_t *) red_arr_mem_40964)[sext_i32_i64(local_tid_40958)] =
                            x_40982;
                        ((volatile __local
                          float *) red_arr_mem_40966)[sext_i32_i64(local_tid_40958)] =
                            x_40983;
                    }
                }
                offset_40996 *= 2;
            }
            while (slt32(skip_waves_40997,
                         squot32(sext_i64_i32(segred_group_sizze_36463) +
                                 wave_sizze_40960 - 1, wave_sizze_40960))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_40996 = skip_waves_40997 * wave_sizze_40960;
                if (slt32(local_tid_40958 + offset_40996,
                          sext_i64_i32(segred_group_sizze_36463)) &&
                    ((local_tid_40958 - squot32(local_tid_40958,
                                                wave_sizze_40960) *
                      wave_sizze_40960) == 0 && (squot32(local_tid_40958,
                                                         wave_sizze_40960) &
                                                 (2 * skip_waves_40997 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_40984 = ((__local
                                    bool *) red_arr_mem_40962)[sext_i32_i64(local_tid_40958 +
                                                               offset_40996)];
                        x_40985 = ((__local
                                    int32_t *) red_arr_mem_40964)[sext_i32_i64(local_tid_40958 +
                                                                  offset_40996)];
                        x_40986 = ((__local
                                    float *) red_arr_mem_40966)[sext_i32_i64(local_tid_40958 +
                                                                offset_40996)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_40987;
                        int32_t defunc_1_op_res_40988;
                        
                        if (x_40981) {
                            defunc_1_op_res_40987 = x_40981;
                            defunc_1_op_res_40988 = x_40982;
                        } else {
                            bool x_40989 = x_40984 && x_40984;
                            bool x_40990 = !x_40984;
                            bool y_40991 = x_40981 && x_40990;
                            bool defunc_1_op_res_f_res_40992 = x_40989 ||
                                 y_40991;
                            int32_t defunc_1_op_res_f_res_40993;
                            
                            if (x_40984) {
                                defunc_1_op_res_f_res_40993 = x_40985;
                            } else {
                                defunc_1_op_res_f_res_40993 = x_40982;
                            }
                            defunc_1_op_res_40987 = defunc_1_op_res_f_res_40992;
                            defunc_1_op_res_40988 = defunc_1_op_res_f_res_40993;
                        }
                        
                        float defunc_1_op_res_40994 = x_40983 + x_40986;
                        
                        x_40981 = defunc_1_op_res_40987;
                        x_40982 = defunc_1_op_res_40988;
                        x_40983 = defunc_1_op_res_40994;
                    }
                    // write result of operation
                    {
                        ((__local
                          bool *) red_arr_mem_40962)[sext_i32_i64(local_tid_40958)] =
                            x_40981;
                        ((__local
                          int32_t *) red_arr_mem_40964)[sext_i32_i64(local_tid_40958)] =
                            x_40982;
                        ((__local
                          float *) red_arr_mem_40966)[sext_i32_i64(local_tid_40958)] =
                            x_40983;
                    }
                }
                skip_waves_40997 *= 2;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread saves the result in accumulator
            {
                if (sext_i32_i64(local_tid_40958) == 0) {
                    x_acc_40975 = x_40981;
                    x_acc_40976 = x_40982;
                    x_acc_40977 = x_40983;
                }
            }
            // first thread keeps accumulator; others reset to neutral element
            {
                if (!(sext_i32_i64(local_tid_40958) == 0)) {
                    x_acc_40975 = 0;
                    x_acc_40976 = -1;
                    x_acc_40977 = 0.0F;
                }
            }
        }
        x_36469 = x_acc_40975;
        x_36470 = x_acc_40976;
        x_36471 = x_acc_40977;
        if (groups_per_segment_40944 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_40958 == 0) {
                    ((__global bool *) mem_39631)[gtid_36284] = x_acc_40975;
                    ((__global int32_t *) mem_39633)[gtid_36284] = x_acc_40976;
                    ((__global float *) mem_39635)[gtid_36284] = x_acc_40977;
                }
            }
        } else {
            int32_t old_counter_40998;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_40958 == 0) {
                    ((__global
                      bool *) group_res_arr_mem_40949)[sext_i32_i64(virt_group_id_40972) *
                                                       segred_group_sizze_36463] =
                        x_acc_40975;
                    ((__global
                      int32_t *) group_res_arr_mem_40951)[sext_i32_i64(virt_group_id_40972) *
                                                          segred_group_sizze_36463] =
                        x_acc_40976;
                    ((__global
                      float *) group_res_arr_mem_40953)[sext_i32_i64(virt_group_id_40972) *
                                                        segred_group_sizze_36463] =
                        x_acc_40977;
                    mem_fence_global();
                    old_counter_40998 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_40955)[sext_i32_i64(srem32(flat_segment_id_40973,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_40968)[0] =
                        old_counter_40998 == groups_per_segment_40944 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_40999;
            
            is_last_group_40999 = ((__local bool *) sync_arr_mem_40968)[0];
            if (is_last_group_40999) {
                if (local_tid_40958 == 0) {
                    old_counter_40998 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_40955)[sext_i32_i64(srem32(flat_segment_id_40973,
                                                                                                     10240))],
                                              (int) (0 -
                                                     groups_per_segment_40944));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_41000 =
                            sdiv_up64(groups_per_segment_40944,
                                      segred_group_sizze_36463);
                    
                    x_36469 = 0;
                    x_36470 = -1;
                    x_36471 = 0.0F;
                    for (int64_t i_41001 = 0; i_41001 < read_per_thread_41000;
                         i_41001++) {
                        int64_t group_res_id_41002 =
                                sext_i32_i64(local_tid_40958) *
                                read_per_thread_41000 + i_41001;
                        int64_t index_of_group_res_41003 =
                                sext_i32_i64(flat_segment_id_40973) *
                                groups_per_segment_40944 + group_res_id_41002;
                        
                        if (slt64(group_res_id_41002,
                                  groups_per_segment_40944)) {
                            x_36472 = ((__global
                                        bool *) group_res_arr_mem_40949)[index_of_group_res_41003 *
                                                                         segred_group_sizze_36463];
                            x_36473 = ((__global
                                        int32_t *) group_res_arr_mem_40951)[index_of_group_res_41003 *
                                                                            segred_group_sizze_36463];
                            x_36474 = ((__global
                                        float *) group_res_arr_mem_40953)[index_of_group_res_41003 *
                                                                          segred_group_sizze_36463];
                            
                            bool defunc_1_op_res_36475;
                            int32_t defunc_1_op_res_36476;
                            
                            if (x_36469) {
                                defunc_1_op_res_36475 = x_36469;
                                defunc_1_op_res_36476 = x_36470;
                            } else {
                                bool x_36477 = x_36472 && x_36472;
                                bool x_36478 = !x_36472;
                                bool y_36479 = x_36469 && x_36478;
                                bool defunc_1_op_res_f_res_36480 = x_36477 ||
                                     y_36479;
                                int32_t defunc_1_op_res_f_res_36481;
                                
                                if (x_36472) {
                                    defunc_1_op_res_f_res_36481 = x_36473;
                                } else {
                                    defunc_1_op_res_f_res_36481 = x_36470;
                                }
                                defunc_1_op_res_36475 =
                                    defunc_1_op_res_f_res_36480;
                                defunc_1_op_res_36476 =
                                    defunc_1_op_res_f_res_36481;
                            }
                            
                            float defunc_1_op_res_36482 = x_36471 + x_36474;
                            
                            x_36469 = defunc_1_op_res_36475;
                            x_36470 = defunc_1_op_res_36476;
                            x_36471 = defunc_1_op_res_36482;
                        }
                    }
                }
                ((__local
                  bool *) red_arr_mem_40962)[sext_i32_i64(local_tid_40958)] =
                    x_36469;
                ((__local
                  int32_t *) red_arr_mem_40964)[sext_i32_i64(local_tid_40958)] =
                    x_36470;
                ((__local
                  float *) red_arr_mem_40966)[sext_i32_i64(local_tid_40958)] =
                    x_36471;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_41004;
                    int32_t skip_waves_41005;
                    
                    skip_waves_41005 = 1;
                    
                    bool x_40981;
                    int32_t x_40982;
                    float x_40983;
                    bool x_40984;
                    int32_t x_40985;
                    float x_40986;
                    
                    offset_41004 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_40958,
                                  sext_i64_i32(segred_group_sizze_36463))) {
                            x_40981 = ((__local
                                        bool *) red_arr_mem_40962)[sext_i32_i64(local_tid_40958 +
                                                                   offset_41004)];
                            x_40982 = ((__local
                                        int32_t *) red_arr_mem_40964)[sext_i32_i64(local_tid_40958 +
                                                                      offset_41004)];
                            x_40983 = ((__local
                                        float *) red_arr_mem_40966)[sext_i32_i64(local_tid_40958 +
                                                                    offset_41004)];
                        }
                    }
                    offset_41004 = 1;
                    while (slt32(offset_41004, wave_sizze_40960)) {
                        if (slt32(local_tid_40958 + offset_41004,
                                  sext_i64_i32(segred_group_sizze_36463)) &&
                            ((local_tid_40958 - squot32(local_tid_40958,
                                                        wave_sizze_40960) *
                              wave_sizze_40960) & (2 * offset_41004 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_40984 = ((volatile __local
                                            bool *) red_arr_mem_40962)[sext_i32_i64(local_tid_40958 +
                                                                       offset_41004)];
                                x_40985 = ((volatile __local
                                            int32_t *) red_arr_mem_40964)[sext_i32_i64(local_tid_40958 +
                                                                          offset_41004)];
                                x_40986 = ((volatile __local
                                            float *) red_arr_mem_40966)[sext_i32_i64(local_tid_40958 +
                                                                        offset_41004)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_40987;
                                int32_t defunc_1_op_res_40988;
                                
                                if (x_40981) {
                                    defunc_1_op_res_40987 = x_40981;
                                    defunc_1_op_res_40988 = x_40982;
                                } else {
                                    bool x_40989 = x_40984 && x_40984;
                                    bool x_40990 = !x_40984;
                                    bool y_40991 = x_40981 && x_40990;
                                    bool defunc_1_op_res_f_res_40992 =
                                         x_40989 || y_40991;
                                    int32_t defunc_1_op_res_f_res_40993;
                                    
                                    if (x_40984) {
                                        defunc_1_op_res_f_res_40993 = x_40985;
                                    } else {
                                        defunc_1_op_res_f_res_40993 = x_40982;
                                    }
                                    defunc_1_op_res_40987 =
                                        defunc_1_op_res_f_res_40992;
                                    defunc_1_op_res_40988 =
                                        defunc_1_op_res_f_res_40993;
                                }
                                
                                float defunc_1_op_res_40994 = x_40983 + x_40986;
                                
                                x_40981 = defunc_1_op_res_40987;
                                x_40982 = defunc_1_op_res_40988;
                                x_40983 = defunc_1_op_res_40994;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_40962)[sext_i32_i64(local_tid_40958)] =
                                    x_40981;
                                ((volatile __local
                                  int32_t *) red_arr_mem_40964)[sext_i32_i64(local_tid_40958)] =
                                    x_40982;
                                ((volatile __local
                                  float *) red_arr_mem_40966)[sext_i32_i64(local_tid_40958)] =
                                    x_40983;
                            }
                        }
                        offset_41004 *= 2;
                    }
                    while (slt32(skip_waves_41005,
                                 squot32(sext_i64_i32(segred_group_sizze_36463) +
                                         wave_sizze_40960 - 1,
                                         wave_sizze_40960))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_41004 = skip_waves_41005 * wave_sizze_40960;
                        if (slt32(local_tid_40958 + offset_41004,
                                  sext_i64_i32(segred_group_sizze_36463)) &&
                            ((local_tid_40958 - squot32(local_tid_40958,
                                                        wave_sizze_40960) *
                              wave_sizze_40960) == 0 &&
                             (squot32(local_tid_40958, wave_sizze_40960) & (2 *
                                                                            skip_waves_41005 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_40984 = ((__local
                                            bool *) red_arr_mem_40962)[sext_i32_i64(local_tid_40958 +
                                                                       offset_41004)];
                                x_40985 = ((__local
                                            int32_t *) red_arr_mem_40964)[sext_i32_i64(local_tid_40958 +
                                                                          offset_41004)];
                                x_40986 = ((__local
                                            float *) red_arr_mem_40966)[sext_i32_i64(local_tid_40958 +
                                                                        offset_41004)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_40987;
                                int32_t defunc_1_op_res_40988;
                                
                                if (x_40981) {
                                    defunc_1_op_res_40987 = x_40981;
                                    defunc_1_op_res_40988 = x_40982;
                                } else {
                                    bool x_40989 = x_40984 && x_40984;
                                    bool x_40990 = !x_40984;
                                    bool y_40991 = x_40981 && x_40990;
                                    bool defunc_1_op_res_f_res_40992 =
                                         x_40989 || y_40991;
                                    int32_t defunc_1_op_res_f_res_40993;
                                    
                                    if (x_40984) {
                                        defunc_1_op_res_f_res_40993 = x_40985;
                                    } else {
                                        defunc_1_op_res_f_res_40993 = x_40982;
                                    }
                                    defunc_1_op_res_40987 =
                                        defunc_1_op_res_f_res_40992;
                                    defunc_1_op_res_40988 =
                                        defunc_1_op_res_f_res_40993;
                                }
                                
                                float defunc_1_op_res_40994 = x_40983 + x_40986;
                                
                                x_40981 = defunc_1_op_res_40987;
                                x_40982 = defunc_1_op_res_40988;
                                x_40983 = defunc_1_op_res_40994;
                            }
                            // write result of operation
                            {
                                ((__local
                                  bool *) red_arr_mem_40962)[sext_i32_i64(local_tid_40958)] =
                                    x_40981;
                                ((__local
                                  int32_t *) red_arr_mem_40964)[sext_i32_i64(local_tid_40958)] =
                                    x_40982;
                                ((__local
                                  float *) red_arr_mem_40966)[sext_i32_i64(local_tid_40958)] =
                                    x_40983;
                            }
                        }
                        skip_waves_41005 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_40958 == 0) {
                            ((__global bool *) mem_39631)[gtid_36284] = x_40981;
                            ((__global int32_t *) mem_39633)[gtid_36284] =
                                x_40982;
                            ((__global float *) mem_39635)[gtid_36284] =
                                x_40983;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36463
}
__kernel void mainzisegred_nonseg_35215(__global int *global_failure,
                                        __local volatile
                                        int64_t *red_arr_mem_40717_backing_aligned_0,
                                        __local volatile
                                        int64_t *sync_arr_mem_40715_backing_aligned_1,
                                        int64_t m_27809,
                                        int64_t num_groups_35210, __global
                                        unsigned char *defunc_3_map_res_mem_39541,
                                        __global unsigned char *mem_39546,
                                        __global
                                        unsigned char *mainzicounter_mem_40705,
                                        __global
                                        unsigned char *group_res_arr_mem_40707,
                                        int64_t num_threads_40709)
{
    #define segred_group_sizze_35208 (mainzisegred_group_sizze_35207)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_40717_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_40717_backing_aligned_0;
    __local volatile char *restrict sync_arr_mem_40715_backing_0 =
                          (__local volatile
                           char *) sync_arr_mem_40715_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40710;
    int32_t local_tid_40711;
    int64_t group_sizze_40714;
    int32_t wave_sizze_40713;
    int32_t group_tid_40712;
    
    global_tid_40710 = get_global_id(0);
    local_tid_40711 = get_local_id(0);
    group_sizze_40714 = get_local_size(0);
    wave_sizze_40713 = LOCKSTEP_WIDTH;
    group_tid_40712 = get_group_id(0);
    
    int32_t phys_tid_35215;
    
    phys_tid_35215 = global_tid_40710;
    
    __local char *sync_arr_mem_40715;
    
    sync_arr_mem_40715 = (__local char *) sync_arr_mem_40715_backing_0;
    
    __local char *red_arr_mem_40717;
    
    red_arr_mem_40717 = (__local char *) red_arr_mem_40717_backing_1;
    
    int64_t dummy_35213;
    
    dummy_35213 = 0;
    
    int64_t gtid_35214;
    
    gtid_35214 = 0;
    
    int32_t x_acc_40719;
    int64_t chunk_sizze_40720;
    
    chunk_sizze_40720 = smin64(sdiv_up64(m_27809,
                                         sext_i32_i64(sext_i64_i32(segred_group_sizze_35208 *
                                         num_groups_35210))),
                               sdiv_up64(m_27809 - sext_i32_i64(phys_tid_35215),
                                         num_threads_40709));
    
    int32_t x_28179;
    int32_t x_28180;
    
    // neutral-initialise the accumulators
    {
        x_acc_40719 = 0;
    }
    for (int64_t i_40724 = 0; i_40724 < chunk_sizze_40720; i_40724++) {
        gtid_35214 = sext_i32_i64(phys_tid_35215) + num_threads_40709 * i_40724;
        // apply map function
        {
            int32_t x_28182 = ((__global
                                int32_t *) defunc_3_map_res_mem_39541)[gtid_35214];
            
            // save map-out results
            { }
            // load accumulator
            {
                x_28179 = x_acc_40719;
            }
            // load new values
            {
                x_28180 = x_28182;
            }
            // apply reduction operator
            {
                int32_t defunc_1_op_res_28181 = smax32(x_28179, x_28180);
                
                // store in accumulator
                {
                    x_acc_40719 = defunc_1_op_res_28181;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_28179 = x_acc_40719;
        ((__local int32_t *) red_arr_mem_40717)[sext_i32_i64(local_tid_40711)] =
            x_28179;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_40725;
    int32_t skip_waves_40726;
    
    skip_waves_40726 = 1;
    
    int32_t x_40721;
    int32_t x_40722;
    
    offset_40725 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_40711, sext_i64_i32(segred_group_sizze_35208))) {
            x_40721 = ((__local
                        int32_t *) red_arr_mem_40717)[sext_i32_i64(local_tid_40711 +
                                                      offset_40725)];
        }
    }
    offset_40725 = 1;
    while (slt32(offset_40725, wave_sizze_40713)) {
        if (slt32(local_tid_40711 + offset_40725,
                  sext_i64_i32(segred_group_sizze_35208)) && ((local_tid_40711 -
                                                               squot32(local_tid_40711,
                                                                       wave_sizze_40713) *
                                                               wave_sizze_40713) &
                                                              (2 *
                                                               offset_40725 -
                                                               1)) == 0) {
            // read array element
            {
                x_40722 = ((volatile __local
                            int32_t *) red_arr_mem_40717)[sext_i32_i64(local_tid_40711 +
                                                          offset_40725)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_40723 = smax32(x_40721, x_40722);
                
                x_40721 = defunc_1_op_res_40723;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_40717)[sext_i32_i64(local_tid_40711)] =
                    x_40721;
            }
        }
        offset_40725 *= 2;
    }
    while (slt32(skip_waves_40726,
                 squot32(sext_i64_i32(segred_group_sizze_35208) +
                         wave_sizze_40713 - 1, wave_sizze_40713))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_40725 = skip_waves_40726 * wave_sizze_40713;
        if (slt32(local_tid_40711 + offset_40725,
                  sext_i64_i32(segred_group_sizze_35208)) && ((local_tid_40711 -
                                                               squot32(local_tid_40711,
                                                                       wave_sizze_40713) *
                                                               wave_sizze_40713) ==
                                                              0 &&
                                                              (squot32(local_tid_40711,
                                                                       wave_sizze_40713) &
                                                               (2 *
                                                                skip_waves_40726 -
                                                                1)) == 0)) {
            // read array element
            {
                x_40722 = ((__local
                            int32_t *) red_arr_mem_40717)[sext_i32_i64(local_tid_40711 +
                                                          offset_40725)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_40723 = smax32(x_40721, x_40722);
                
                x_40721 = defunc_1_op_res_40723;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_40717)[sext_i32_i64(local_tid_40711)] =
                    x_40721;
            }
        }
        skip_waves_40726 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_40711) == 0) {
            x_acc_40719 = x_40721;
        }
    }
    
    int32_t old_counter_40727;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_40711 == 0) {
            ((__global
              int32_t *) group_res_arr_mem_40707)[sext_i32_i64(group_tid_40712) *
                                                  segred_group_sizze_35208] =
                x_acc_40719;
            mem_fence_global();
            old_counter_40727 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainzicounter_mem_40705)[0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_40715)[0] = old_counter_40727 ==
                num_groups_35210 - 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_40728;
    
    is_last_group_40728 = ((__local bool *) sync_arr_mem_40715)[0];
    if (is_last_group_40728) {
        if (local_tid_40711 == 0) {
            old_counter_40727 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainzicounter_mem_40705)[0],
                                                      (int) (0 -
                                                             num_groups_35210));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_40729 = sdiv_up64(num_groups_35210,
                                                      segred_group_sizze_35208);
            
            x_28179 = 0;
            for (int64_t i_40730 = 0; i_40730 < read_per_thread_40729;
                 i_40730++) {
                int64_t group_res_id_40731 = sext_i32_i64(local_tid_40711) *
                        read_per_thread_40729 + i_40730;
                int64_t index_of_group_res_40732 = group_res_id_40731;
                
                if (slt64(group_res_id_40731, num_groups_35210)) {
                    x_28180 = ((__global
                                int32_t *) group_res_arr_mem_40707)[index_of_group_res_40732 *
                                                                    segred_group_sizze_35208];
                    
                    int32_t defunc_1_op_res_28181;
                    
                    defunc_1_op_res_28181 = smax32(x_28179, x_28180);
                    x_28179 = defunc_1_op_res_28181;
                }
            }
        }
        ((__local int32_t *) red_arr_mem_40717)[sext_i32_i64(local_tid_40711)] =
            x_28179;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_40733;
            int32_t skip_waves_40734;
            
            skip_waves_40734 = 1;
            
            int32_t x_40721;
            int32_t x_40722;
            
            offset_40733 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_40711,
                          sext_i64_i32(segred_group_sizze_35208))) {
                    x_40721 = ((__local
                                int32_t *) red_arr_mem_40717)[sext_i32_i64(local_tid_40711 +
                                                              offset_40733)];
                }
            }
            offset_40733 = 1;
            while (slt32(offset_40733, wave_sizze_40713)) {
                if (slt32(local_tid_40711 + offset_40733,
                          sext_i64_i32(segred_group_sizze_35208)) &&
                    ((local_tid_40711 - squot32(local_tid_40711,
                                                wave_sizze_40713) *
                      wave_sizze_40713) & (2 * offset_40733 - 1)) == 0) {
                    // read array element
                    {
                        x_40722 = ((volatile __local
                                    int32_t *) red_arr_mem_40717)[sext_i32_i64(local_tid_40711 +
                                                                  offset_40733)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_40723 = smax32(x_40721,
                                                               x_40722);
                        
                        x_40721 = defunc_1_op_res_40723;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          int32_t *) red_arr_mem_40717)[sext_i32_i64(local_tid_40711)] =
                            x_40721;
                    }
                }
                offset_40733 *= 2;
            }
            while (slt32(skip_waves_40734,
                         squot32(sext_i64_i32(segred_group_sizze_35208) +
                                 wave_sizze_40713 - 1, wave_sizze_40713))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_40733 = skip_waves_40734 * wave_sizze_40713;
                if (slt32(local_tid_40711 + offset_40733,
                          sext_i64_i32(segred_group_sizze_35208)) &&
                    ((local_tid_40711 - squot32(local_tid_40711,
                                                wave_sizze_40713) *
                      wave_sizze_40713) == 0 && (squot32(local_tid_40711,
                                                         wave_sizze_40713) &
                                                 (2 * skip_waves_40734 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_40722 = ((__local
                                    int32_t *) red_arr_mem_40717)[sext_i32_i64(local_tid_40711 +
                                                                  offset_40733)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_40723 = smax32(x_40721,
                                                               x_40722);
                        
                        x_40721 = defunc_1_op_res_40723;
                    }
                    // write result of operation
                    {
                        ((__local
                          int32_t *) red_arr_mem_40717)[sext_i32_i64(local_tid_40711)] =
                            x_40721;
                    }
                }
                skip_waves_40734 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_40711 == 0) {
                    ((__global int32_t *) mem_39546)[0] = x_40721;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35208
}
__kernel void mainzisegred_small_33245(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_39974_backing_aligned_0,
                                       int64_t N_27808, int64_t m_27809,
                                       int64_t N_27810, int64_t i32_res_27822,
                                       int64_t i32_res_27828,
                                       int64_t num_groups_33384, __global
                                       unsigned char *images_mem_38682, __global
                                       unsigned char *binop_p_mem_38691,
                                       __global unsigned char *mem_38832,
                                       __global unsigned char *mem_38837,
                                       int64_t segment_sizze_nonzzero_39967)
{
    #define segred_group_sizze_33383 (mainzisegred_group_sizze_33239)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_39974_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_39974_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_39969;
    int32_t local_tid_39970;
    int64_t group_sizze_39973;
    int32_t wave_sizze_39972;
    int32_t group_tid_39971;
    
    global_tid_39969 = get_global_id(0);
    local_tid_39970 = get_local_id(0);
    group_sizze_39973 = get_local_size(0);
    wave_sizze_39972 = LOCKSTEP_WIDTH;
    group_tid_39971 = get_group_id(0);
    
    int32_t phys_tid_33245;
    
    phys_tid_33245 = global_tid_39969;
    
    __local char *red_arr_mem_39974;
    
    red_arr_mem_39974 = (__local char *) red_arr_mem_39974_backing_0;
    
    int32_t phys_group_id_39976;
    
    phys_group_id_39976 = get_group_id(0);
    for (int32_t i_39977 = 0; i_39977 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27809 * i32_res_27828 *
                                          i32_res_27828,
                                          squot64(segred_group_sizze_33383,
                                                  segment_sizze_nonzzero_39967))) -
                   phys_group_id_39976, sext_i64_i32(num_groups_33384));
         i_39977++) {
        int32_t virt_group_id_39978 = phys_group_id_39976 + i_39977 *
                sext_i64_i32(num_groups_33384);
        int64_t gtid_33232 = squot64(squot64(sext_i32_i64(local_tid_39970),
                                             segment_sizze_nonzzero_39967) +
                                     sext_i32_i64(virt_group_id_39978) *
                                     squot64(segred_group_sizze_33383,
                                             segment_sizze_nonzzero_39967),
                                     i32_res_27828 * i32_res_27828);
        int64_t gtid_33233 = squot64(squot64(sext_i32_i64(local_tid_39970),
                                             segment_sizze_nonzzero_39967) +
                                     sext_i32_i64(virt_group_id_39978) *
                                     squot64(segred_group_sizze_33383,
                                             segment_sizze_nonzzero_39967) -
                                     squot64(squot64(sext_i32_i64(local_tid_39970),
                                                     segment_sizze_nonzzero_39967) +
                                             sext_i32_i64(virt_group_id_39978) *
                                             squot64(segred_group_sizze_33383,
                                                     segment_sizze_nonzzero_39967),
                                             i32_res_27828 * i32_res_27828) *
                                     (i32_res_27828 * i32_res_27828),
                                     i32_res_27828);
        int64_t gtid_33234 = squot64(sext_i32_i64(local_tid_39970),
                                     segment_sizze_nonzzero_39967) +
                sext_i32_i64(virt_group_id_39978) *
                squot64(segred_group_sizze_33383,
                        segment_sizze_nonzzero_39967) -
                squot64(squot64(sext_i32_i64(local_tid_39970),
                                segment_sizze_nonzzero_39967) +
                        sext_i32_i64(virt_group_id_39978) *
                        squot64(segred_group_sizze_33383,
                                segment_sizze_nonzzero_39967), i32_res_27828 *
                        i32_res_27828) * (i32_res_27828 * i32_res_27828) -
                squot64(squot64(sext_i32_i64(local_tid_39970),
                                segment_sizze_nonzzero_39967) +
                        sext_i32_i64(virt_group_id_39978) *
                        squot64(segred_group_sizze_33383,
                                segment_sizze_nonzzero_39967) -
                        squot64(squot64(sext_i32_i64(local_tid_39970),
                                        segment_sizze_nonzzero_39967) +
                                sext_i32_i64(virt_group_id_39978) *
                                squot64(segred_group_sizze_33383,
                                        segment_sizze_nonzzero_39967),
                                i32_res_27828 * i32_res_27828) *
                        (i32_res_27828 * i32_res_27828), i32_res_27828) *
                i32_res_27828;
        int64_t gtid_33244 = srem64(sext_i32_i64(local_tid_39970),
                                    i32_res_27822);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_27822) && (((slt64(gtid_33232, m_27809) &&
                                              slt64(gtid_33233,
                                                    i32_res_27828)) &&
                                             slt64(gtid_33234,
                                                   i32_res_27828)) &&
                                            slt64(sext_i32_i64(local_tid_39970),
                                                  i32_res_27822 *
                                                  squot64(segred_group_sizze_33383,
                                                          segment_sizze_nonzzero_39967)))) {
                float x_33393 = ((__global
                                  float *) images_mem_38682)[gtid_33232 *
                                                             N_27810 +
                                                             gtid_33244];
                float x_33394 = ((__global
                                  float *) binop_p_mem_38691)[gtid_33233 *
                                                              N_27808 +
                                                              gtid_33244];
                float x_33395 = ((__global float *) mem_38832)[gtid_33234 *
                                                               N_27808 +
                                                               gtid_33244];
                float x_33396 = x_33394 * x_33395;
                bool isnan_res_33397;
                
                isnan_res_33397 = futrts_isnan32(x_33393);
                
                float y_33398;
                
                if (isnan_res_33397) {
                    y_33398 = 0.0F;
                } else {
                    y_33398 = 1.0F;
                }
                
                float defunc_2_f_res_33399 = x_33396 * y_33398;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_39974)[sext_i32_i64(local_tid_39970)] =
                        defunc_2_f_res_33399;
                }
            } else {
                ((__local
                  float *) red_arr_mem_39974)[sext_i32_i64(local_tid_39970)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_27822)) {
            // perform segmented scan to imitate reduction
            {
                float x_33387;
                float x_33388;
                float x_39979;
                float x_39980;
                bool ltid_in_bounds_39982;
                
                ltid_in_bounds_39982 = slt64(sext_i32_i64(local_tid_39970),
                                             i32_res_27822 *
                                             squot64(segred_group_sizze_33383,
                                                     segment_sizze_nonzzero_39967));
                
                int32_t skip_threads_39983;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_39982) {
                        x_33388 = ((volatile __local
                                    float *) red_arr_mem_39974)[sext_i32_i64(local_tid_39970)];
                        if ((local_tid_39970 - squot32(local_tid_39970, 32) *
                             32) == 0) {
                            x_33387 = x_33388;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_39983 = 1;
                    while (slt32(skip_threads_39983, 32)) {
                        if (sle32(skip_threads_39983, local_tid_39970 -
                                  squot32(local_tid_39970, 32) * 32) &&
                            ltid_in_bounds_39982) {
                            // read operands
                            {
                                x_33387 = ((volatile __local
                                            float *) red_arr_mem_39974)[sext_i32_i64(local_tid_39970) -
                                                                        sext_i32_i64(skip_threads_39983)];
                            }
                            // perform operation
                            {
                                bool inactive_39984 =
                                     slt64(srem64(sext_i32_i64(local_tid_39970),
                                                  i32_res_27822),
                                           sext_i32_i64(local_tid_39970) -
                                           sext_i32_i64(local_tid_39970 -
                                           skip_threads_39983));
                                
                                if (inactive_39984) {
                                    x_33387 = x_33388;
                                }
                                if (!inactive_39984) {
                                    float defunc_1_op_res_33389 = x_33387 +
                                          x_33388;
                                    
                                    x_33387 = defunc_1_op_res_33389;
                                }
                            }
                        }
                        if (sle32(wave_sizze_39972, skip_threads_39983)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_39983, local_tid_39970 -
                                  squot32(local_tid_39970, 32) * 32) &&
                            ltid_in_bounds_39982) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_39974)[sext_i32_i64(local_tid_39970)] =
                                    x_33387;
                                x_33388 = x_33387;
                            }
                        }
                        if (sle32(wave_sizze_39972, skip_threads_39983)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_39983 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_39970 - squot32(local_tid_39970, 32) * 32) ==
                        31 && ltid_in_bounds_39982) {
                        ((volatile __local
                          float *) red_arr_mem_39974)[sext_i32_i64(squot32(local_tid_39970,
                                                                           32))] =
                            x_33387;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_39985;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_39970, 32) == 0 &&
                            ltid_in_bounds_39982) {
                            x_39980 = ((volatile __local
                                        float *) red_arr_mem_39974)[sext_i32_i64(local_tid_39970)];
                            if ((local_tid_39970 - squot32(local_tid_39970,
                                                           32) * 32) == 0) {
                                x_39979 = x_39980;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_39985 = 1;
                        while (slt32(skip_threads_39985, 32)) {
                            if (sle32(skip_threads_39985, local_tid_39970 -
                                      squot32(local_tid_39970, 32) * 32) &&
                                (squot32(local_tid_39970, 32) == 0 &&
                                 ltid_in_bounds_39982)) {
                                // read operands
                                {
                                    x_39979 = ((volatile __local
                                                float *) red_arr_mem_39974)[sext_i32_i64(local_tid_39970) -
                                                                            sext_i32_i64(skip_threads_39985)];
                                }
                                // perform operation
                                {
                                    bool inactive_39986 =
                                         slt64(srem64(sext_i32_i64(local_tid_39970 *
                                                      32 + 32 - 1),
                                                      i32_res_27822),
                                               sext_i32_i64(local_tid_39970 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_39970 -
                                                             skip_threads_39985) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_39986) {
                                        x_39979 = x_39980;
                                    }
                                    if (!inactive_39986) {
                                        float defunc_1_op_res_39981 = x_39979 +
                                              x_39980;
                                        
                                        x_39979 = defunc_1_op_res_39981;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_39972, skip_threads_39985)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_39985, local_tid_39970 -
                                      squot32(local_tid_39970, 32) * 32) &&
                                (squot32(local_tid_39970, 32) == 0 &&
                                 ltid_in_bounds_39982)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_39974)[sext_i32_i64(local_tid_39970)] =
                                        x_39979;
                                    x_39980 = x_39979;
                                }
                            }
                            if (sle32(wave_sizze_39972, skip_threads_39985)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_39985 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_39970, 32) == 0 ||
                          !ltid_in_bounds_39982)) {
                        // read operands
                        {
                            x_33388 = x_33387;
                            x_33387 = ((__local
                                        float *) red_arr_mem_39974)[sext_i32_i64(squot32(local_tid_39970,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_39987 =
                                 slt64(srem64(sext_i32_i64(local_tid_39970),
                                              i32_res_27822),
                                       sext_i32_i64(local_tid_39970) -
                                       sext_i32_i64(squot32(local_tid_39970,
                                                            32) * 32 - 1));
                            
                            if (inactive_39987) {
                                x_33387 = x_33388;
                            }
                            if (!inactive_39987) {
                                float defunc_1_op_res_33389 = x_33387 + x_33388;
                                
                                x_33387 = defunc_1_op_res_33389;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_39974)[sext_i32_i64(local_tid_39970)] =
                                x_33387;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_39970, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_39974)[sext_i32_i64(local_tid_39970)] =
                            x_33388;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_39978) *
                      squot64(segred_group_sizze_33383,
                              segment_sizze_nonzzero_39967) +
                      sext_i32_i64(local_tid_39970), m_27809 * i32_res_27828 *
                      i32_res_27828) && slt64(sext_i32_i64(local_tid_39970),
                                              squot64(segred_group_sizze_33383,
                                                      segment_sizze_nonzzero_39967))) {
                ((__global
                  float *) mem_38837)[squot64(sext_i32_i64(virt_group_id_39978) *
                                              squot64(segred_group_sizze_33383,
                                                      segment_sizze_nonzzero_39967) +
                                              sext_i32_i64(local_tid_39970),
                                              i32_res_27828 * i32_res_27828) *
                                      (i32_res_27828 * i32_res_27828) +
                                      squot64(sext_i32_i64(virt_group_id_39978) *
                                              squot64(segred_group_sizze_33383,
                                                      segment_sizze_nonzzero_39967) +
                                              sext_i32_i64(local_tid_39970) -
                                              squot64(sext_i32_i64(virt_group_id_39978) *
                                                      squot64(segred_group_sizze_33383,
                                                              segment_sizze_nonzzero_39967) +
                                                      sext_i32_i64(local_tid_39970),
                                                      i32_res_27828 *
                                                      i32_res_27828) *
                                              (i32_res_27828 * i32_res_27828),
                                              i32_res_27828) * i32_res_27828 +
                                      (sext_i32_i64(virt_group_id_39978) *
                                       squot64(segred_group_sizze_33383,
                                               segment_sizze_nonzzero_39967) +
                                       sext_i32_i64(local_tid_39970) -
                                       squot64(sext_i32_i64(virt_group_id_39978) *
                                               squot64(segred_group_sizze_33383,
                                                       segment_sizze_nonzzero_39967) +
                                               sext_i32_i64(local_tid_39970),
                                               i32_res_27828 * i32_res_27828) *
                                       (i32_res_27828 * i32_res_27828) -
                                       squot64(sext_i32_i64(virt_group_id_39978) *
                                               squot64(segred_group_sizze_33383,
                                                       segment_sizze_nonzzero_39967) +
                                               sext_i32_i64(local_tid_39970) -
                                               squot64(sext_i32_i64(virt_group_id_39978) *
                                                       squot64(segred_group_sizze_33383,
                                                               segment_sizze_nonzzero_39967) +
                                                       sext_i32_i64(local_tid_39970),
                                                       i32_res_27828 *
                                                       i32_res_27828) *
                                               (i32_res_27828 * i32_res_27828),
                                               i32_res_27828) *
                                       i32_res_27828)] = ((__local
                                                           float *) red_arr_mem_39974)[(sext_i32_i64(local_tid_39970) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_39967 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33383
}
__kernel void mainzisegred_small_34292(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_40170_backing_aligned_0,
                                       int64_t N_27808, int64_t m_27809,
                                       int64_t N_27810, int64_t i32_res_27822,
                                       int64_t i32_res_27828,
                                       int64_t num_groups_34345, __global
                                       unsigned char *images_mem_38682, __global
                                       unsigned char *binop_p_mem_38691,
                                       __global unsigned char *mem_39144,
                                       int64_t segment_sizze_nonzzero_40163)
{
    #define segred_group_sizze_34344 (mainzisegred_group_sizze_34286)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_40170_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40170_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40165;
    int32_t local_tid_40166;
    int64_t group_sizze_40169;
    int32_t wave_sizze_40168;
    int32_t group_tid_40167;
    
    global_tid_40165 = get_global_id(0);
    local_tid_40166 = get_local_id(0);
    group_sizze_40169 = get_local_size(0);
    wave_sizze_40168 = LOCKSTEP_WIDTH;
    group_tid_40167 = get_group_id(0);
    
    int32_t phys_tid_34292;
    
    phys_tid_34292 = global_tid_40165;
    
    __local char *red_arr_mem_40170;
    
    red_arr_mem_40170 = (__local char *) red_arr_mem_40170_backing_0;
    
    int32_t phys_group_id_40172;
    
    phys_group_id_40172 = get_group_id(0);
    for (int32_t i_40173 = 0; i_40173 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27809 * i32_res_27828,
                                          squot64(segred_group_sizze_34344,
                                                  segment_sizze_nonzzero_40163))) -
                   phys_group_id_40172, sext_i64_i32(num_groups_34345));
         i_40173++) {
        int32_t virt_group_id_40174 = phys_group_id_40172 + i_40173 *
                sext_i64_i32(num_groups_34345);
        int64_t gtid_34281 = squot64(squot64(sext_i32_i64(local_tid_40166),
                                             segment_sizze_nonzzero_40163) +
                                     sext_i32_i64(virt_group_id_40174) *
                                     squot64(segred_group_sizze_34344,
                                             segment_sizze_nonzzero_40163),
                                     i32_res_27828);
        int64_t gtid_34282 = squot64(sext_i32_i64(local_tid_40166),
                                     segment_sizze_nonzzero_40163) +
                sext_i32_i64(virt_group_id_40174) *
                squot64(segred_group_sizze_34344,
                        segment_sizze_nonzzero_40163) -
                squot64(squot64(sext_i32_i64(local_tid_40166),
                                segment_sizze_nonzzero_40163) +
                        sext_i32_i64(virt_group_id_40174) *
                        squot64(segred_group_sizze_34344,
                                segment_sizze_nonzzero_40163), i32_res_27828) *
                i32_res_27828;
        int64_t gtid_34291 = srem64(sext_i32_i64(local_tid_40166),
                                    i32_res_27822);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_27822) && ((slt64(gtid_34281, m_27809) &&
                                             slt64(gtid_34282,
                                                   i32_res_27828)) &&
                                            slt64(sext_i32_i64(local_tid_40166),
                                                  i32_res_27822 *
                                                  squot64(segred_group_sizze_34344,
                                                          segment_sizze_nonzzero_40163)))) {
                float x_34354 = ((__global
                                  float *) images_mem_38682)[gtid_34281 *
                                                             N_27810 +
                                                             gtid_34291];
                bool isnan_res_34355;
                
                isnan_res_34355 = futrts_isnan32(x_34354);
                
                float defunc_1_f_res_34356;
                
                if (isnan_res_34355) {
                    defunc_1_f_res_34356 = 0.0F;
                } else {
                    float x_34353 = ((__global
                                      float *) binop_p_mem_38691)[gtid_34282 *
                                                                  N_27808 +
                                                                  gtid_34291];
                    float defunc_1_f_res_f_res_34357 = x_34353 * x_34354;
                    
                    defunc_1_f_res_34356 = defunc_1_f_res_f_res_34357;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_40170)[sext_i32_i64(local_tid_40166)] =
                        defunc_1_f_res_34356;
                }
            } else {
                ((__local
                  float *) red_arr_mem_40170)[sext_i32_i64(local_tid_40166)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_27822)) {
            // perform segmented scan to imitate reduction
            {
                float x_34348;
                float x_34349;
                float x_40175;
                float x_40176;
                bool ltid_in_bounds_40178;
                
                ltid_in_bounds_40178 = slt64(sext_i32_i64(local_tid_40166),
                                             i32_res_27822 *
                                             squot64(segred_group_sizze_34344,
                                                     segment_sizze_nonzzero_40163));
                
                int32_t skip_threads_40179;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_40178) {
                        x_34349 = ((volatile __local
                                    float *) red_arr_mem_40170)[sext_i32_i64(local_tid_40166)];
                        if ((local_tid_40166 - squot32(local_tid_40166, 32) *
                             32) == 0) {
                            x_34348 = x_34349;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_40179 = 1;
                    while (slt32(skip_threads_40179, 32)) {
                        if (sle32(skip_threads_40179, local_tid_40166 -
                                  squot32(local_tid_40166, 32) * 32) &&
                            ltid_in_bounds_40178) {
                            // read operands
                            {
                                x_34348 = ((volatile __local
                                            float *) red_arr_mem_40170)[sext_i32_i64(local_tid_40166) -
                                                                        sext_i32_i64(skip_threads_40179)];
                            }
                            // perform operation
                            {
                                bool inactive_40180 =
                                     slt64(srem64(sext_i32_i64(local_tid_40166),
                                                  i32_res_27822),
                                           sext_i32_i64(local_tid_40166) -
                                           sext_i32_i64(local_tid_40166 -
                                           skip_threads_40179));
                                
                                if (inactive_40180) {
                                    x_34348 = x_34349;
                                }
                                if (!inactive_40180) {
                                    float defunc_1_op_res_34350 = x_34348 +
                                          x_34349;
                                    
                                    x_34348 = defunc_1_op_res_34350;
                                }
                            }
                        }
                        if (sle32(wave_sizze_40168, skip_threads_40179)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_40179, local_tid_40166 -
                                  squot32(local_tid_40166, 32) * 32) &&
                            ltid_in_bounds_40178) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_40170)[sext_i32_i64(local_tid_40166)] =
                                    x_34348;
                                x_34349 = x_34348;
                            }
                        }
                        if (sle32(wave_sizze_40168, skip_threads_40179)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_40179 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_40166 - squot32(local_tid_40166, 32) * 32) ==
                        31 && ltid_in_bounds_40178) {
                        ((volatile __local
                          float *) red_arr_mem_40170)[sext_i32_i64(squot32(local_tid_40166,
                                                                           32))] =
                            x_34348;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_40181;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_40166, 32) == 0 &&
                            ltid_in_bounds_40178) {
                            x_40176 = ((volatile __local
                                        float *) red_arr_mem_40170)[sext_i32_i64(local_tid_40166)];
                            if ((local_tid_40166 - squot32(local_tid_40166,
                                                           32) * 32) == 0) {
                                x_40175 = x_40176;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_40181 = 1;
                        while (slt32(skip_threads_40181, 32)) {
                            if (sle32(skip_threads_40181, local_tid_40166 -
                                      squot32(local_tid_40166, 32) * 32) &&
                                (squot32(local_tid_40166, 32) == 0 &&
                                 ltid_in_bounds_40178)) {
                                // read operands
                                {
                                    x_40175 = ((volatile __local
                                                float *) red_arr_mem_40170)[sext_i32_i64(local_tid_40166) -
                                                                            sext_i32_i64(skip_threads_40181)];
                                }
                                // perform operation
                                {
                                    bool inactive_40182 =
                                         slt64(srem64(sext_i32_i64(local_tid_40166 *
                                                      32 + 32 - 1),
                                                      i32_res_27822),
                                               sext_i32_i64(local_tid_40166 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_40166 -
                                                             skip_threads_40181) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_40182) {
                                        x_40175 = x_40176;
                                    }
                                    if (!inactive_40182) {
                                        float defunc_1_op_res_40177 = x_40175 +
                                              x_40176;
                                        
                                        x_40175 = defunc_1_op_res_40177;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_40168, skip_threads_40181)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_40181, local_tid_40166 -
                                      squot32(local_tid_40166, 32) * 32) &&
                                (squot32(local_tid_40166, 32) == 0 &&
                                 ltid_in_bounds_40178)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_40170)[sext_i32_i64(local_tid_40166)] =
                                        x_40175;
                                    x_40176 = x_40175;
                                }
                            }
                            if (sle32(wave_sizze_40168, skip_threads_40181)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_40181 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_40166, 32) == 0 ||
                          !ltid_in_bounds_40178)) {
                        // read operands
                        {
                            x_34349 = x_34348;
                            x_34348 = ((__local
                                        float *) red_arr_mem_40170)[sext_i32_i64(squot32(local_tid_40166,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_40183 =
                                 slt64(srem64(sext_i32_i64(local_tid_40166),
                                              i32_res_27822),
                                       sext_i32_i64(local_tid_40166) -
                                       sext_i32_i64(squot32(local_tid_40166,
                                                            32) * 32 - 1));
                            
                            if (inactive_40183) {
                                x_34348 = x_34349;
                            }
                            if (!inactive_40183) {
                                float defunc_1_op_res_34350 = x_34348 + x_34349;
                                
                                x_34348 = defunc_1_op_res_34350;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_40170)[sext_i32_i64(local_tid_40166)] =
                                x_34348;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_40166, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_40170)[sext_i32_i64(local_tid_40166)] =
                            x_34349;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_40174) *
                      squot64(segred_group_sizze_34344,
                              segment_sizze_nonzzero_40163) +
                      sext_i32_i64(local_tid_40166), m_27809 * i32_res_27828) &&
                slt64(sext_i32_i64(local_tid_40166),
                      squot64(segred_group_sizze_34344,
                              segment_sizze_nonzzero_40163))) {
                ((__global
                  float *) mem_39144)[squot64(sext_i32_i64(virt_group_id_40174) *
                                              squot64(segred_group_sizze_34344,
                                                      segment_sizze_nonzzero_40163) +
                                              sext_i32_i64(local_tid_40166),
                                              i32_res_27828) * i32_res_27828 +
                                      (sext_i32_i64(virt_group_id_40174) *
                                       squot64(segred_group_sizze_34344,
                                               segment_sizze_nonzzero_40163) +
                                       sext_i32_i64(local_tid_40166) -
                                       squot64(sext_i32_i64(virt_group_id_40174) *
                                               squot64(segred_group_sizze_34344,
                                                       segment_sizze_nonzzero_40163) +
                                               sext_i32_i64(local_tid_40166),
                                               i32_res_27828) *
                                       i32_res_27828)] = ((__local
                                                           float *) red_arr_mem_40170)[(sext_i32_i64(local_tid_40166) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_40163 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34344
}
__kernel void mainzisegred_small_34429(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_40258_backing_aligned_0,
                                       int64_t m_27809, int64_t i32_res_27828,
                                       int64_t num_groups_34478, __global
                                       unsigned char *defunc_3_map_res_mem_38929,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_39150,
                                       __global unsigned char *mem_39210,
                                       int64_t segment_sizze_nonzzero_40251)
{
    #define segred_group_sizze_34477 (mainzisegred_group_sizze_34423)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_40258_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40258_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40253;
    int32_t local_tid_40254;
    int64_t group_sizze_40257;
    int32_t wave_sizze_40256;
    int32_t group_tid_40255;
    
    global_tid_40253 = get_global_id(0);
    local_tid_40254 = get_local_id(0);
    group_sizze_40257 = get_local_size(0);
    wave_sizze_40256 = LOCKSTEP_WIDTH;
    group_tid_40255 = get_group_id(0);
    
    int32_t phys_tid_34429;
    
    phys_tid_34429 = global_tid_40253;
    
    __local char *red_arr_mem_40258;
    
    red_arr_mem_40258 = (__local char *) red_arr_mem_40258_backing_0;
    
    int32_t phys_group_id_40260;
    
    phys_group_id_40260 = get_group_id(0);
    for (int32_t i_40261 = 0; i_40261 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27809 * i32_res_27828,
                                          squot64(segred_group_sizze_34477,
                                                  segment_sizze_nonzzero_40251))) -
                   phys_group_id_40260, sext_i64_i32(num_groups_34478));
         i_40261++) {
        int32_t virt_group_id_40262 = phys_group_id_40260 + i_40261 *
                sext_i64_i32(num_groups_34478);
        int64_t gtid_34418 = squot64(squot64(sext_i32_i64(local_tid_40254),
                                             segment_sizze_nonzzero_40251) +
                                     sext_i32_i64(virt_group_id_40262) *
                                     squot64(segred_group_sizze_34477,
                                             segment_sizze_nonzzero_40251),
                                     i32_res_27828);
        int64_t gtid_34419 = squot64(sext_i32_i64(local_tid_40254),
                                     segment_sizze_nonzzero_40251) +
                sext_i32_i64(virt_group_id_40262) *
                squot64(segred_group_sizze_34477,
                        segment_sizze_nonzzero_40251) -
                squot64(squot64(sext_i32_i64(local_tid_40254),
                                segment_sizze_nonzzero_40251) +
                        sext_i32_i64(virt_group_id_40262) *
                        squot64(segred_group_sizze_34477,
                                segment_sizze_nonzzero_40251), i32_res_27828) *
                i32_res_27828;
        int64_t gtid_34428 = srem64(sext_i32_i64(local_tid_40254),
                                    i32_res_27828);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_27828) && ((slt64(gtid_34418, m_27809) &&
                                             slt64(gtid_34419,
                                                   i32_res_27828)) &&
                                            slt64(sext_i32_i64(local_tid_40254),
                                                  i32_res_27828 *
                                                  squot64(segred_group_sizze_34477,
                                                          segment_sizze_nonzzero_40251)))) {
                float x_34487 = ((__global
                                  float *) defunc_3_map_res_mem_39150)[gtid_34418 *
                                                                       i32_res_27828 +
                                                                       gtid_34428];
                float x_34488 = ((__global
                                  float *) defunc_3_map_res_mem_38929)[gtid_34418 *
                                                                       (i32_res_27828 *
                                                                        i32_res_27828) +
                                                                       gtid_34419 *
                                                                       i32_res_27828 +
                                                                       gtid_34428];
                float defunc_1_f_res_34489 = x_34487 * x_34488;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_40258)[sext_i32_i64(local_tid_40254)] =
                        defunc_1_f_res_34489;
                }
            } else {
                ((__local
                  float *) red_arr_mem_40258)[sext_i32_i64(local_tid_40254)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_27828)) {
            // perform segmented scan to imitate reduction
            {
                float x_34481;
                float x_34482;
                float x_40263;
                float x_40264;
                bool ltid_in_bounds_40266;
                
                ltid_in_bounds_40266 = slt64(sext_i32_i64(local_tid_40254),
                                             i32_res_27828 *
                                             squot64(segred_group_sizze_34477,
                                                     segment_sizze_nonzzero_40251));
                
                int32_t skip_threads_40267;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_40266) {
                        x_34482 = ((volatile __local
                                    float *) red_arr_mem_40258)[sext_i32_i64(local_tid_40254)];
                        if ((local_tid_40254 - squot32(local_tid_40254, 32) *
                             32) == 0) {
                            x_34481 = x_34482;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_40267 = 1;
                    while (slt32(skip_threads_40267, 32)) {
                        if (sle32(skip_threads_40267, local_tid_40254 -
                                  squot32(local_tid_40254, 32) * 32) &&
                            ltid_in_bounds_40266) {
                            // read operands
                            {
                                x_34481 = ((volatile __local
                                            float *) red_arr_mem_40258)[sext_i32_i64(local_tid_40254) -
                                                                        sext_i32_i64(skip_threads_40267)];
                            }
                            // perform operation
                            {
                                bool inactive_40268 =
                                     slt64(srem64(sext_i32_i64(local_tid_40254),
                                                  i32_res_27828),
                                           sext_i32_i64(local_tid_40254) -
                                           sext_i32_i64(local_tid_40254 -
                                           skip_threads_40267));
                                
                                if (inactive_40268) {
                                    x_34481 = x_34482;
                                }
                                if (!inactive_40268) {
                                    float defunc_1_op_res_34483 = x_34481 +
                                          x_34482;
                                    
                                    x_34481 = defunc_1_op_res_34483;
                                }
                            }
                        }
                        if (sle32(wave_sizze_40256, skip_threads_40267)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_40267, local_tid_40254 -
                                  squot32(local_tid_40254, 32) * 32) &&
                            ltid_in_bounds_40266) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_40258)[sext_i32_i64(local_tid_40254)] =
                                    x_34481;
                                x_34482 = x_34481;
                            }
                        }
                        if (sle32(wave_sizze_40256, skip_threads_40267)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_40267 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_40254 - squot32(local_tid_40254, 32) * 32) ==
                        31 && ltid_in_bounds_40266) {
                        ((volatile __local
                          float *) red_arr_mem_40258)[sext_i32_i64(squot32(local_tid_40254,
                                                                           32))] =
                            x_34481;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_40269;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_40254, 32) == 0 &&
                            ltid_in_bounds_40266) {
                            x_40264 = ((volatile __local
                                        float *) red_arr_mem_40258)[sext_i32_i64(local_tid_40254)];
                            if ((local_tid_40254 - squot32(local_tid_40254,
                                                           32) * 32) == 0) {
                                x_40263 = x_40264;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_40269 = 1;
                        while (slt32(skip_threads_40269, 32)) {
                            if (sle32(skip_threads_40269, local_tid_40254 -
                                      squot32(local_tid_40254, 32) * 32) &&
                                (squot32(local_tid_40254, 32) == 0 &&
                                 ltid_in_bounds_40266)) {
                                // read operands
                                {
                                    x_40263 = ((volatile __local
                                                float *) red_arr_mem_40258)[sext_i32_i64(local_tid_40254) -
                                                                            sext_i32_i64(skip_threads_40269)];
                                }
                                // perform operation
                                {
                                    bool inactive_40270 =
                                         slt64(srem64(sext_i32_i64(local_tid_40254 *
                                                      32 + 32 - 1),
                                                      i32_res_27828),
                                               sext_i32_i64(local_tid_40254 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_40254 -
                                                             skip_threads_40269) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_40270) {
                                        x_40263 = x_40264;
                                    }
                                    if (!inactive_40270) {
                                        float defunc_1_op_res_40265 = x_40263 +
                                              x_40264;
                                        
                                        x_40263 = defunc_1_op_res_40265;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_40256, skip_threads_40269)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_40269, local_tid_40254 -
                                      squot32(local_tid_40254, 32) * 32) &&
                                (squot32(local_tid_40254, 32) == 0 &&
                                 ltid_in_bounds_40266)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_40258)[sext_i32_i64(local_tid_40254)] =
                                        x_40263;
                                    x_40264 = x_40263;
                                }
                            }
                            if (sle32(wave_sizze_40256, skip_threads_40269)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_40269 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_40254, 32) == 0 ||
                          !ltid_in_bounds_40266)) {
                        // read operands
                        {
                            x_34482 = x_34481;
                            x_34481 = ((__local
                                        float *) red_arr_mem_40258)[sext_i32_i64(squot32(local_tid_40254,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_40271 =
                                 slt64(srem64(sext_i32_i64(local_tid_40254),
                                              i32_res_27828),
                                       sext_i32_i64(local_tid_40254) -
                                       sext_i32_i64(squot32(local_tid_40254,
                                                            32) * 32 - 1));
                            
                            if (inactive_40271) {
                                x_34481 = x_34482;
                            }
                            if (!inactive_40271) {
                                float defunc_1_op_res_34483 = x_34481 + x_34482;
                                
                                x_34481 = defunc_1_op_res_34483;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_40258)[sext_i32_i64(local_tid_40254)] =
                                x_34481;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_40254, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_40258)[sext_i32_i64(local_tid_40254)] =
                            x_34482;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_40262) *
                      squot64(segred_group_sizze_34477,
                              segment_sizze_nonzzero_40251) +
                      sext_i32_i64(local_tid_40254), m_27809 * i32_res_27828) &&
                slt64(sext_i32_i64(local_tid_40254),
                      squot64(segred_group_sizze_34477,
                              segment_sizze_nonzzero_40251))) {
                ((__global
                  float *) mem_39210)[squot64(sext_i32_i64(virt_group_id_40262) *
                                              squot64(segred_group_sizze_34477,
                                                      segment_sizze_nonzzero_40251) +
                                              sext_i32_i64(local_tid_40254),
                                              i32_res_27828) * i32_res_27828 +
                                      (sext_i32_i64(virt_group_id_40262) *
                                       squot64(segred_group_sizze_34477,
                                               segment_sizze_nonzzero_40251) +
                                       sext_i32_i64(local_tid_40254) -
                                       squot64(sext_i32_i64(virt_group_id_40262) *
                                               squot64(segred_group_sizze_34477,
                                                       segment_sizze_nonzzero_40251) +
                                               sext_i32_i64(local_tid_40254),
                                               i32_res_27828) *
                                       i32_res_27828)] = ((__local
                                                           float *) red_arr_mem_40258)[(sext_i32_i64(local_tid_40254) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_40251 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34477
}
__kernel void mainzisegred_small_34559(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_40390_backing_aligned_0,
                                       int64_t N_27808, int64_t m_27809,
                                       int64_t i32_res_27828,
                                       int64_t num_groups_34606, __global
                                       unsigned char *mem_38698, __global
                                       unsigned char *defunc_4_map_res_mem_39216,
                                       __global unsigned char *mem_39434,
                                       int64_t segment_sizze_nonzzero_40383)
{
    #define segred_group_sizze_34605 (mainzisegred_group_sizze_34553)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_40390_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40390_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40385;
    int32_t local_tid_40386;
    int64_t group_sizze_40389;
    int32_t wave_sizze_40388;
    int32_t group_tid_40387;
    
    global_tid_40385 = get_global_id(0);
    local_tid_40386 = get_local_id(0);
    group_sizze_40389 = get_local_size(0);
    wave_sizze_40388 = LOCKSTEP_WIDTH;
    group_tid_40387 = get_group_id(0);
    
    int32_t phys_tid_34559;
    
    phys_tid_34559 = global_tid_40385;
    
    __local char *red_arr_mem_40390;
    
    red_arr_mem_40390 = (__local char *) red_arr_mem_40390_backing_0;
    
    int32_t phys_group_id_40392;
    
    phys_group_id_40392 = get_group_id(0);
    for (int32_t i_40393 = 0; i_40393 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27809 * N_27808,
                                          squot64(segred_group_sizze_34605,
                                                  segment_sizze_nonzzero_40383))) -
                   phys_group_id_40392, sext_i64_i32(num_groups_34606));
         i_40393++) {
        int32_t virt_group_id_40394 = phys_group_id_40392 + i_40393 *
                sext_i64_i32(num_groups_34606);
        int64_t gtid_34548 = squot64(squot64(sext_i32_i64(local_tid_40386),
                                             segment_sizze_nonzzero_40383) +
                                     sext_i32_i64(virt_group_id_40394) *
                                     squot64(segred_group_sizze_34605,
                                             segment_sizze_nonzzero_40383),
                                     N_27808);
        int64_t gtid_34549 = squot64(sext_i32_i64(local_tid_40386),
                                     segment_sizze_nonzzero_40383) +
                sext_i32_i64(virt_group_id_40394) *
                squot64(segred_group_sizze_34605,
                        segment_sizze_nonzzero_40383) -
                squot64(squot64(sext_i32_i64(local_tid_40386),
                                segment_sizze_nonzzero_40383) +
                        sext_i32_i64(virt_group_id_40394) *
                        squot64(segred_group_sizze_34605,
                                segment_sizze_nonzzero_40383), N_27808) *
                N_27808;
        int64_t gtid_34558 = srem64(sext_i32_i64(local_tid_40386),
                                    i32_res_27828);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_27828) && ((slt64(gtid_34548, m_27809) &&
                                             slt64(gtid_34549, N_27808)) &&
                                            slt64(sext_i32_i64(local_tid_40386),
                                                  i32_res_27828 *
                                                  squot64(segred_group_sizze_34605,
                                                          segment_sizze_nonzzero_40383)))) {
                float x_34614 = ((__global
                                  float *) defunc_4_map_res_mem_39216)[gtid_34548 *
                                                                       i32_res_27828 +
                                                                       gtid_34558];
                float x_34615 = ((__global float *) mem_38698)[gtid_34549 *
                                                               i32_res_27828 +
                                                               gtid_34558];
                float defunc_1_f_res_34616 = x_34614 * x_34615;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_40390)[sext_i32_i64(local_tid_40386)] =
                        defunc_1_f_res_34616;
                }
            } else {
                ((__local
                  float *) red_arr_mem_40390)[sext_i32_i64(local_tid_40386)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_27828)) {
            // perform segmented scan to imitate reduction
            {
                float x_34609;
                float x_34610;
                float x_40395;
                float x_40396;
                bool ltid_in_bounds_40398;
                
                ltid_in_bounds_40398 = slt64(sext_i32_i64(local_tid_40386),
                                             i32_res_27828 *
                                             squot64(segred_group_sizze_34605,
                                                     segment_sizze_nonzzero_40383));
                
                int32_t skip_threads_40399;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_40398) {
                        x_34610 = ((volatile __local
                                    float *) red_arr_mem_40390)[sext_i32_i64(local_tid_40386)];
                        if ((local_tid_40386 - squot32(local_tid_40386, 32) *
                             32) == 0) {
                            x_34609 = x_34610;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_40399 = 1;
                    while (slt32(skip_threads_40399, 32)) {
                        if (sle32(skip_threads_40399, local_tid_40386 -
                                  squot32(local_tid_40386, 32) * 32) &&
                            ltid_in_bounds_40398) {
                            // read operands
                            {
                                x_34609 = ((volatile __local
                                            float *) red_arr_mem_40390)[sext_i32_i64(local_tid_40386) -
                                                                        sext_i32_i64(skip_threads_40399)];
                            }
                            // perform operation
                            {
                                bool inactive_40400 =
                                     slt64(srem64(sext_i32_i64(local_tid_40386),
                                                  i32_res_27828),
                                           sext_i32_i64(local_tid_40386) -
                                           sext_i32_i64(local_tid_40386 -
                                           skip_threads_40399));
                                
                                if (inactive_40400) {
                                    x_34609 = x_34610;
                                }
                                if (!inactive_40400) {
                                    float defunc_1_op_res_34611 = x_34609 +
                                          x_34610;
                                    
                                    x_34609 = defunc_1_op_res_34611;
                                }
                            }
                        }
                        if (sle32(wave_sizze_40388, skip_threads_40399)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_40399, local_tid_40386 -
                                  squot32(local_tid_40386, 32) * 32) &&
                            ltid_in_bounds_40398) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_40390)[sext_i32_i64(local_tid_40386)] =
                                    x_34609;
                                x_34610 = x_34609;
                            }
                        }
                        if (sle32(wave_sizze_40388, skip_threads_40399)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_40399 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_40386 - squot32(local_tid_40386, 32) * 32) ==
                        31 && ltid_in_bounds_40398) {
                        ((volatile __local
                          float *) red_arr_mem_40390)[sext_i32_i64(squot32(local_tid_40386,
                                                                           32))] =
                            x_34609;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_40401;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_40386, 32) == 0 &&
                            ltid_in_bounds_40398) {
                            x_40396 = ((volatile __local
                                        float *) red_arr_mem_40390)[sext_i32_i64(local_tid_40386)];
                            if ((local_tid_40386 - squot32(local_tid_40386,
                                                           32) * 32) == 0) {
                                x_40395 = x_40396;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_40401 = 1;
                        while (slt32(skip_threads_40401, 32)) {
                            if (sle32(skip_threads_40401, local_tid_40386 -
                                      squot32(local_tid_40386, 32) * 32) &&
                                (squot32(local_tid_40386, 32) == 0 &&
                                 ltid_in_bounds_40398)) {
                                // read operands
                                {
                                    x_40395 = ((volatile __local
                                                float *) red_arr_mem_40390)[sext_i32_i64(local_tid_40386) -
                                                                            sext_i32_i64(skip_threads_40401)];
                                }
                                // perform operation
                                {
                                    bool inactive_40402 =
                                         slt64(srem64(sext_i32_i64(local_tid_40386 *
                                                      32 + 32 - 1),
                                                      i32_res_27828),
                                               sext_i32_i64(local_tid_40386 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_40386 -
                                                             skip_threads_40401) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_40402) {
                                        x_40395 = x_40396;
                                    }
                                    if (!inactive_40402) {
                                        float defunc_1_op_res_40397 = x_40395 +
                                              x_40396;
                                        
                                        x_40395 = defunc_1_op_res_40397;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_40388, skip_threads_40401)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_40401, local_tid_40386 -
                                      squot32(local_tid_40386, 32) * 32) &&
                                (squot32(local_tid_40386, 32) == 0 &&
                                 ltid_in_bounds_40398)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_40390)[sext_i32_i64(local_tid_40386)] =
                                        x_40395;
                                    x_40396 = x_40395;
                                }
                            }
                            if (sle32(wave_sizze_40388, skip_threads_40401)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_40401 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_40386, 32) == 0 ||
                          !ltid_in_bounds_40398)) {
                        // read operands
                        {
                            x_34610 = x_34609;
                            x_34609 = ((__local
                                        float *) red_arr_mem_40390)[sext_i32_i64(squot32(local_tid_40386,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_40403 =
                                 slt64(srem64(sext_i32_i64(local_tid_40386),
                                              i32_res_27828),
                                       sext_i32_i64(local_tid_40386) -
                                       sext_i32_i64(squot32(local_tid_40386,
                                                            32) * 32 - 1));
                            
                            if (inactive_40403) {
                                x_34609 = x_34610;
                            }
                            if (!inactive_40403) {
                                float defunc_1_op_res_34611 = x_34609 + x_34610;
                                
                                x_34609 = defunc_1_op_res_34611;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_40390)[sext_i32_i64(local_tid_40386)] =
                                x_34609;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_40386, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_40390)[sext_i32_i64(local_tid_40386)] =
                            x_34610;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_40394) *
                      squot64(segred_group_sizze_34605,
                              segment_sizze_nonzzero_40383) +
                      sext_i32_i64(local_tid_40386), m_27809 * N_27808) &&
                slt64(sext_i32_i64(local_tid_40386),
                      squot64(segred_group_sizze_34605,
                              segment_sizze_nonzzero_40383))) {
                ((__global
                  float *) mem_39434)[squot64(sext_i32_i64(virt_group_id_40394) *
                                              squot64(segred_group_sizze_34605,
                                                      segment_sizze_nonzzero_40383) +
                                              sext_i32_i64(local_tid_40386),
                                              N_27808) * N_27808 +
                                      (sext_i32_i64(virt_group_id_40394) *
                                       squot64(segred_group_sizze_34605,
                                               segment_sizze_nonzzero_40383) +
                                       sext_i32_i64(local_tid_40386) -
                                       squot64(sext_i32_i64(virt_group_id_40394) *
                                               squot64(segred_group_sizze_34605,
                                                       segment_sizze_nonzzero_40383) +
                                               sext_i32_i64(local_tid_40386),
                                               N_27808) * N_27808)] = ((__local
                                                                        float *) red_arr_mem_40390)[(sext_i32_i64(local_tid_40386) +
                                                                                                     1) *
                                                                                                    segment_sizze_nonzzero_40383 -
                                                                                                    1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34605
}
__kernel void mainzisegred_small_35125(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_40644_backing_aligned_0,
                                       int64_t N_27808, int64_t m_27809,
                                       int64_t i32_res_27822,
                                       int64_t num_groups_35172, __global
                                       unsigned char *defunc_4_map_res_mem_39478,
                                       __global unsigned char *mem_39529,
                                       __global unsigned char *mem_39532,
                                       int64_t segment_sizze_nonzzero_40637)
{
    #define segred_group_sizze_35171 (mainzisegred_group_sizze_35119)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_40644_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40644_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40639;
    int32_t local_tid_40640;
    int64_t group_sizze_40643;
    int32_t wave_sizze_40642;
    int32_t group_tid_40641;
    
    global_tid_40639 = get_global_id(0);
    local_tid_40640 = get_local_id(0);
    group_sizze_40643 = get_local_size(0);
    wave_sizze_40642 = LOCKSTEP_WIDTH;
    group_tid_40641 = get_group_id(0);
    
    int32_t phys_tid_35125;
    
    phys_tid_35125 = global_tid_40639;
    
    __local char *red_arr_mem_40644;
    
    red_arr_mem_40644 = (__local char *) red_arr_mem_40644_backing_0;
    
    int32_t phys_group_id_40646;
    
    phys_group_id_40646 = get_group_id(0);
    for (int32_t i_40647 = 0; i_40647 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27809,
                                          squot64(segred_group_sizze_35171,
                                                  segment_sizze_nonzzero_40637))) -
                   phys_group_id_40646, sext_i64_i32(num_groups_35172));
         i_40647++) {
        int32_t virt_group_id_40648 = phys_group_id_40646 + i_40647 *
                sext_i64_i32(num_groups_35172);
        int64_t gtid_35116 = squot64(sext_i32_i64(local_tid_40640),
                                     segment_sizze_nonzzero_40637) +
                sext_i32_i64(virt_group_id_40648) *
                squot64(segred_group_sizze_35171, segment_sizze_nonzzero_40637);
        int64_t gtid_35124 = srem64(sext_i32_i64(local_tid_40640),
                                    i32_res_27822);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_27822) && (slt64(gtid_35116, m_27809) &&
                                            slt64(sext_i32_i64(local_tid_40640),
                                                  i32_res_27822 *
                                                  squot64(segred_group_sizze_35171,
                                                          segment_sizze_nonzzero_40637)))) {
                int32_t defunc_0_f_res_35179 = ((__global
                                                 int32_t *) mem_39529)[gtid_35116];
                int32_t index_primexp_36721 = sext_i64_i32(gtid_35124);
                bool cond_35181 = slt32(index_primexp_36721,
                                        defunc_0_f_res_35179);
                float defunc_0_f_res_35182;
                
                if (cond_35181) {
                    int64_t i_35183 = sext_i32_i64(index_primexp_36721);
                    float defunc_0_f_res_t_res_35184 = ((__global
                                                         float *) defunc_4_map_res_mem_39478)[gtid_35116 *
                                                                                              N_27808 +
                                                                                              i_35183];
                    
                    defunc_0_f_res_35182 = defunc_0_f_res_t_res_35184;
                } else {
                    defunc_0_f_res_35182 = 0.0F;
                }
                
                float defunc_0_f_res_35185 = defunc_0_f_res_35182 *
                      defunc_0_f_res_35182;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_40644)[sext_i32_i64(local_tid_40640)] =
                        defunc_0_f_res_35185;
                }
            } else {
                ((__local
                  float *) red_arr_mem_40644)[sext_i32_i64(local_tid_40640)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_27822)) {
            // perform segmented scan to imitate reduction
            {
                float x_35175;
                float x_35176;
                float x_40649;
                float x_40650;
                bool ltid_in_bounds_40652;
                
                ltid_in_bounds_40652 = slt64(sext_i32_i64(local_tid_40640),
                                             i32_res_27822 *
                                             squot64(segred_group_sizze_35171,
                                                     segment_sizze_nonzzero_40637));
                
                int32_t skip_threads_40653;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_40652) {
                        x_35176 = ((volatile __local
                                    float *) red_arr_mem_40644)[sext_i32_i64(local_tid_40640)];
                        if ((local_tid_40640 - squot32(local_tid_40640, 32) *
                             32) == 0) {
                            x_35175 = x_35176;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_40653 = 1;
                    while (slt32(skip_threads_40653, 32)) {
                        if (sle32(skip_threads_40653, local_tid_40640 -
                                  squot32(local_tid_40640, 32) * 32) &&
                            ltid_in_bounds_40652) {
                            // read operands
                            {
                                x_35175 = ((volatile __local
                                            float *) red_arr_mem_40644)[sext_i32_i64(local_tid_40640) -
                                                                        sext_i32_i64(skip_threads_40653)];
                            }
                            // perform operation
                            {
                                bool inactive_40654 =
                                     slt64(srem64(sext_i32_i64(local_tid_40640),
                                                  i32_res_27822),
                                           sext_i32_i64(local_tid_40640) -
                                           sext_i32_i64(local_tid_40640 -
                                           skip_threads_40653));
                                
                                if (inactive_40654) {
                                    x_35175 = x_35176;
                                }
                                if (!inactive_40654) {
                                    float defunc_1_op_res_35177 = x_35175 +
                                          x_35176;
                                    
                                    x_35175 = defunc_1_op_res_35177;
                                }
                            }
                        }
                        if (sle32(wave_sizze_40642, skip_threads_40653)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_40653, local_tid_40640 -
                                  squot32(local_tid_40640, 32) * 32) &&
                            ltid_in_bounds_40652) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_40644)[sext_i32_i64(local_tid_40640)] =
                                    x_35175;
                                x_35176 = x_35175;
                            }
                        }
                        if (sle32(wave_sizze_40642, skip_threads_40653)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_40653 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_40640 - squot32(local_tid_40640, 32) * 32) ==
                        31 && ltid_in_bounds_40652) {
                        ((volatile __local
                          float *) red_arr_mem_40644)[sext_i32_i64(squot32(local_tid_40640,
                                                                           32))] =
                            x_35175;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_40655;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_40640, 32) == 0 &&
                            ltid_in_bounds_40652) {
                            x_40650 = ((volatile __local
                                        float *) red_arr_mem_40644)[sext_i32_i64(local_tid_40640)];
                            if ((local_tid_40640 - squot32(local_tid_40640,
                                                           32) * 32) == 0) {
                                x_40649 = x_40650;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_40655 = 1;
                        while (slt32(skip_threads_40655, 32)) {
                            if (sle32(skip_threads_40655, local_tid_40640 -
                                      squot32(local_tid_40640, 32) * 32) &&
                                (squot32(local_tid_40640, 32) == 0 &&
                                 ltid_in_bounds_40652)) {
                                // read operands
                                {
                                    x_40649 = ((volatile __local
                                                float *) red_arr_mem_40644)[sext_i32_i64(local_tid_40640) -
                                                                            sext_i32_i64(skip_threads_40655)];
                                }
                                // perform operation
                                {
                                    bool inactive_40656 =
                                         slt64(srem64(sext_i32_i64(local_tid_40640 *
                                                      32 + 32 - 1),
                                                      i32_res_27822),
                                               sext_i32_i64(local_tid_40640 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_40640 -
                                                             skip_threads_40655) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_40656) {
                                        x_40649 = x_40650;
                                    }
                                    if (!inactive_40656) {
                                        float defunc_1_op_res_40651 = x_40649 +
                                              x_40650;
                                        
                                        x_40649 = defunc_1_op_res_40651;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_40642, skip_threads_40655)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_40655, local_tid_40640 -
                                      squot32(local_tid_40640, 32) * 32) &&
                                (squot32(local_tid_40640, 32) == 0 &&
                                 ltid_in_bounds_40652)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_40644)[sext_i32_i64(local_tid_40640)] =
                                        x_40649;
                                    x_40650 = x_40649;
                                }
                            }
                            if (sle32(wave_sizze_40642, skip_threads_40655)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_40655 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_40640, 32) == 0 ||
                          !ltid_in_bounds_40652)) {
                        // read operands
                        {
                            x_35176 = x_35175;
                            x_35175 = ((__local
                                        float *) red_arr_mem_40644)[sext_i32_i64(squot32(local_tid_40640,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_40657 =
                                 slt64(srem64(sext_i32_i64(local_tid_40640),
                                              i32_res_27822),
                                       sext_i32_i64(local_tid_40640) -
                                       sext_i32_i64(squot32(local_tid_40640,
                                                            32) * 32 - 1));
                            
                            if (inactive_40657) {
                                x_35175 = x_35176;
                            }
                            if (!inactive_40657) {
                                float defunc_1_op_res_35177 = x_35175 + x_35176;
                                
                                x_35175 = defunc_1_op_res_35177;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_40644)[sext_i32_i64(local_tid_40640)] =
                                x_35175;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_40640, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_40644)[sext_i32_i64(local_tid_40640)] =
                            x_35176;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_40648) *
                      squot64(segred_group_sizze_35171,
                              segment_sizze_nonzzero_40637) +
                      sext_i32_i64(local_tid_40640), m_27809) &&
                slt64(sext_i32_i64(local_tid_40640),
                      squot64(segred_group_sizze_35171,
                              segment_sizze_nonzzero_40637))) {
                ((__global
                  float *) mem_39532)[sext_i32_i64(virt_group_id_40648) *
                                      squot64(segred_group_sizze_35171,
                                              segment_sizze_nonzzero_40637) +
                                      sext_i32_i64(local_tid_40640)] = ((__local
                                                                         float *) red_arr_mem_40644)[(sext_i32_i64(local_tid_40640) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_40637 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35171
}
__kernel void mainzisegred_small_35146(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_40584_backing_aligned_0,
                                       int64_t m_27809, int64_t N_27810,
                                       int64_t i32_res_27822,
                                       int64_t num_groups_35158, __global
                                       unsigned char *images_mem_38682, __global
                                       unsigned char *mem_39529,
                                       int64_t segment_sizze_nonzzero_40577)
{
    #define segred_group_sizze_35157 (mainzisegred_group_sizze_35140)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_40584_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40584_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40579;
    int32_t local_tid_40580;
    int64_t group_sizze_40583;
    int32_t wave_sizze_40582;
    int32_t group_tid_40581;
    
    global_tid_40579 = get_global_id(0);
    local_tid_40580 = get_local_id(0);
    group_sizze_40583 = get_local_size(0);
    wave_sizze_40582 = LOCKSTEP_WIDTH;
    group_tid_40581 = get_group_id(0);
    
    int32_t phys_tid_35146;
    
    phys_tid_35146 = global_tid_40579;
    
    __local char *red_arr_mem_40584;
    
    red_arr_mem_40584 = (__local char *) red_arr_mem_40584_backing_0;
    
    int32_t phys_group_id_40586;
    
    phys_group_id_40586 = get_group_id(0);
    for (int32_t i_40587 = 0; i_40587 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27809,
                                          squot64(segred_group_sizze_35157,
                                                  segment_sizze_nonzzero_40577))) -
                   phys_group_id_40586, sext_i64_i32(num_groups_35158));
         i_40587++) {
        int32_t virt_group_id_40588 = phys_group_id_40586 + i_40587 *
                sext_i64_i32(num_groups_35158);
        int64_t gtid_35137 = squot64(sext_i32_i64(local_tid_40580),
                                     segment_sizze_nonzzero_40577) +
                sext_i32_i64(virt_group_id_40588) *
                squot64(segred_group_sizze_35157, segment_sizze_nonzzero_40577);
        int64_t gtid_35145 = srem64(sext_i32_i64(local_tid_40580),
                                    i32_res_27822);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_27822) && (slt64(gtid_35137, m_27809) &&
                                            slt64(sext_i32_i64(local_tid_40580),
                                                  i32_res_27822 *
                                                  squot64(segred_group_sizze_35157,
                                                          segment_sizze_nonzzero_40577)))) {
                float x_35165 = ((__global
                                  float *) images_mem_38682)[gtid_35137 *
                                                             N_27810 +
                                                             gtid_35145];
                bool isnan_res_35166;
                
                isnan_res_35166 = futrts_isnan32(x_35165);
                
                bool cond_35167 = !isnan_res_35166;
                int32_t defunc_0_f_res_35168 = btoi_bool_i32(cond_35167);
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      int32_t *) red_arr_mem_40584)[sext_i32_i64(local_tid_40580)] =
                        defunc_0_f_res_35168;
                }
            } else {
                ((__local
                  int32_t *) red_arr_mem_40584)[sext_i32_i64(local_tid_40580)] =
                    0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_27822)) {
            // perform segmented scan to imitate reduction
            {
                int32_t x_35161;
                int32_t x_35162;
                int32_t x_40589;
                int32_t x_40590;
                bool ltid_in_bounds_40592;
                
                ltid_in_bounds_40592 = slt64(sext_i32_i64(local_tid_40580),
                                             i32_res_27822 *
                                             squot64(segred_group_sizze_35157,
                                                     segment_sizze_nonzzero_40577));
                
                int32_t skip_threads_40593;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_40592) {
                        x_35162 = ((volatile __local
                                    int32_t *) red_arr_mem_40584)[sext_i32_i64(local_tid_40580)];
                        if ((local_tid_40580 - squot32(local_tid_40580, 32) *
                             32) == 0) {
                            x_35161 = x_35162;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_40593 = 1;
                    while (slt32(skip_threads_40593, 32)) {
                        if (sle32(skip_threads_40593, local_tid_40580 -
                                  squot32(local_tid_40580, 32) * 32) &&
                            ltid_in_bounds_40592) {
                            // read operands
                            {
                                x_35161 = ((volatile __local
                                            int32_t *) red_arr_mem_40584)[sext_i32_i64(local_tid_40580) -
                                                                          sext_i32_i64(skip_threads_40593)];
                            }
                            // perform operation
                            {
                                bool inactive_40594 =
                                     slt64(srem64(sext_i32_i64(local_tid_40580),
                                                  i32_res_27822),
                                           sext_i32_i64(local_tid_40580) -
                                           sext_i32_i64(local_tid_40580 -
                                           skip_threads_40593));
                                
                                if (inactive_40594) {
                                    x_35161 = x_35162;
                                }
                                if (!inactive_40594) {
                                    int32_t defunc_1_op_res_35163 =
                                            add32(x_35161, x_35162);
                                    
                                    x_35161 = defunc_1_op_res_35163;
                                }
                            }
                        }
                        if (sle32(wave_sizze_40582, skip_threads_40593)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_40593, local_tid_40580 -
                                  squot32(local_tid_40580, 32) * 32) &&
                            ltid_in_bounds_40592) {
                            // write result
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_40584)[sext_i32_i64(local_tid_40580)] =
                                    x_35161;
                                x_35162 = x_35161;
                            }
                        }
                        if (sle32(wave_sizze_40582, skip_threads_40593)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_40593 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_40580 - squot32(local_tid_40580, 32) * 32) ==
                        31 && ltid_in_bounds_40592) {
                        ((volatile __local
                          int32_t *) red_arr_mem_40584)[sext_i32_i64(squot32(local_tid_40580,
                                                                             32))] =
                            x_35161;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_40595;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_40580, 32) == 0 &&
                            ltid_in_bounds_40592) {
                            x_40590 = ((volatile __local
                                        int32_t *) red_arr_mem_40584)[sext_i32_i64(local_tid_40580)];
                            if ((local_tid_40580 - squot32(local_tid_40580,
                                                           32) * 32) == 0) {
                                x_40589 = x_40590;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_40595 = 1;
                        while (slt32(skip_threads_40595, 32)) {
                            if (sle32(skip_threads_40595, local_tid_40580 -
                                      squot32(local_tid_40580, 32) * 32) &&
                                (squot32(local_tid_40580, 32) == 0 &&
                                 ltid_in_bounds_40592)) {
                                // read operands
                                {
                                    x_40589 = ((volatile __local
                                                int32_t *) red_arr_mem_40584)[sext_i32_i64(local_tid_40580) -
                                                                              sext_i32_i64(skip_threads_40595)];
                                }
                                // perform operation
                                {
                                    bool inactive_40596 =
                                         slt64(srem64(sext_i32_i64(local_tid_40580 *
                                                      32 + 32 - 1),
                                                      i32_res_27822),
                                               sext_i32_i64(local_tid_40580 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_40580 -
                                                             skip_threads_40595) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_40596) {
                                        x_40589 = x_40590;
                                    }
                                    if (!inactive_40596) {
                                        int32_t defunc_1_op_res_40591 =
                                                add32(x_40589, x_40590);
                                        
                                        x_40589 = defunc_1_op_res_40591;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_40582, skip_threads_40595)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_40595, local_tid_40580 -
                                      squot32(local_tid_40580, 32) * 32) &&
                                (squot32(local_tid_40580, 32) == 0 &&
                                 ltid_in_bounds_40592)) {
                                // write result
                                {
                                    ((volatile __local
                                      int32_t *) red_arr_mem_40584)[sext_i32_i64(local_tid_40580)] =
                                        x_40589;
                                    x_40590 = x_40589;
                                }
                            }
                            if (sle32(wave_sizze_40582, skip_threads_40595)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_40595 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_40580, 32) == 0 ||
                          !ltid_in_bounds_40592)) {
                        // read operands
                        {
                            x_35162 = x_35161;
                            x_35161 = ((__local
                                        int32_t *) red_arr_mem_40584)[sext_i32_i64(squot32(local_tid_40580,
                                                                                           32)) -
                                                                      1];
                        }
                        // perform operation
                        {
                            bool inactive_40597 =
                                 slt64(srem64(sext_i32_i64(local_tid_40580),
                                              i32_res_27822),
                                       sext_i32_i64(local_tid_40580) -
                                       sext_i32_i64(squot32(local_tid_40580,
                                                            32) * 32 - 1));
                            
                            if (inactive_40597) {
                                x_35161 = x_35162;
                            }
                            if (!inactive_40597) {
                                int32_t defunc_1_op_res_35163 = add32(x_35161,
                                                                      x_35162);
                                
                                x_35161 = defunc_1_op_res_35163;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              int32_t *) red_arr_mem_40584)[sext_i32_i64(local_tid_40580)] =
                                x_35161;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_40580, 32) == 0) {
                        ((__local
                          int32_t *) red_arr_mem_40584)[sext_i32_i64(local_tid_40580)] =
                            x_35162;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_40588) *
                      squot64(segred_group_sizze_35157,
                              segment_sizze_nonzzero_40577) +
                      sext_i32_i64(local_tid_40580), m_27809) &&
                slt64(sext_i32_i64(local_tid_40580),
                      squot64(segred_group_sizze_35157,
                              segment_sizze_nonzzero_40577))) {
                ((__global
                  int32_t *) mem_39529)[sext_i32_i64(virt_group_id_40588) *
                                        squot64(segred_group_sizze_35157,
                                                segment_sizze_nonzzero_40577) +
                                        sext_i32_i64(local_tid_40580)] =
                    ((__local
                      int32_t *) red_arr_mem_40584)[(sext_i32_i64(local_tid_40580) +
                                                     1) *
                                                    segment_sizze_nonzzero_40577 -
                                                    1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35157
}
__kernel void mainzisegred_small_35297(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_40753_backing_aligned_0,
                                       int64_t N_27808, int64_t m_27809,
                                       int64_t i32_res_28183,
                                       int64_t num_groups_35315, __global
                                       unsigned char *defunc_4_map_res_mem_39478,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_39541,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_39542,
                                       __global unsigned char *mem_39575,
                                       int64_t segment_sizze_nonzzero_40746)
{
    #define segred_group_sizze_35314 (mainzisegred_group_sizze_35291)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_40753_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40753_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40748;
    int32_t local_tid_40749;
    int64_t group_sizze_40752;
    int32_t wave_sizze_40751;
    int32_t group_tid_40750;
    
    global_tid_40748 = get_global_id(0);
    local_tid_40749 = get_local_id(0);
    group_sizze_40752 = get_local_size(0);
    wave_sizze_40751 = LOCKSTEP_WIDTH;
    group_tid_40750 = get_group_id(0);
    
    int32_t phys_tid_35297;
    
    phys_tid_35297 = global_tid_40748;
    
    __local char *red_arr_mem_40753;
    
    red_arr_mem_40753 = (__local char *) red_arr_mem_40753_backing_0;
    
    int32_t phys_group_id_40755;
    
    phys_group_id_40755 = get_group_id(0);
    for (int32_t i_40756 = 0; i_40756 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27809,
                                          squot64(segred_group_sizze_35314,
                                                  segment_sizze_nonzzero_40746))) -
                   phys_group_id_40755, sext_i64_i32(num_groups_35315));
         i_40756++) {
        int32_t virt_group_id_40757 = phys_group_id_40755 + i_40756 *
                sext_i64_i32(num_groups_35315);
        int64_t gtid_35288 = squot64(sext_i32_i64(local_tid_40749),
                                     segment_sizze_nonzzero_40746) +
                sext_i32_i64(virt_group_id_40757) *
                squot64(segred_group_sizze_35314, segment_sizze_nonzzero_40746);
        int64_t gtid_35296 = srem64(sext_i32_i64(local_tid_40749),
                                    i32_res_28183);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_28183) && (slt64(gtid_35288, m_27809) &&
                                            slt64(sext_i32_i64(local_tid_40749),
                                                  i32_res_28183 *
                                                  squot64(segred_group_sizze_35314,
                                                          segment_sizze_nonzzero_40746)))) {
                int32_t x_35323 = ((__global
                                    int32_t *) defunc_3_map_res_mem_39541)[gtid_35288];
                int32_t index_primexp_36726 = sext_i64_i32(gtid_35296);
                bool cond_35325 = slt32(index_primexp_36726, x_35323);
                float defunc_0_f_res_35326;
                
                if (cond_35325) {
                    int32_t x_35322 = ((__global
                                        int32_t *) defunc_3_map_res_mem_39542)[gtid_35288];
                    int32_t x_35327 = add32(x_35322, index_primexp_36726);
                    int32_t x_35328 = sub32(x_35327, x_35323);
                    int32_t i_35329 = add32(1, x_35328);
                    int64_t i_35330 = sext_i32_i64(i_35329);
                    float defunc_0_f_res_t_res_35331 = ((__global
                                                         float *) defunc_4_map_res_mem_39478)[gtid_35288 *
                                                                                              N_27808 +
                                                                                              i_35330];
                    
                    defunc_0_f_res_35326 = defunc_0_f_res_t_res_35331;
                } else {
                    defunc_0_f_res_35326 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_40753)[sext_i32_i64(local_tid_40749)] =
                        defunc_0_f_res_35326;
                }
            } else {
                ((__local
                  float *) red_arr_mem_40753)[sext_i32_i64(local_tid_40749)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_28183)) {
            // perform segmented scan to imitate reduction
            {
                float x_35318;
                float x_35319;
                float x_40758;
                float x_40759;
                bool ltid_in_bounds_40761;
                
                ltid_in_bounds_40761 = slt64(sext_i32_i64(local_tid_40749),
                                             i32_res_28183 *
                                             squot64(segred_group_sizze_35314,
                                                     segment_sizze_nonzzero_40746));
                
                int32_t skip_threads_40762;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_40761) {
                        x_35319 = ((volatile __local
                                    float *) red_arr_mem_40753)[sext_i32_i64(local_tid_40749)];
                        if ((local_tid_40749 - squot32(local_tid_40749, 32) *
                             32) == 0) {
                            x_35318 = x_35319;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_40762 = 1;
                    while (slt32(skip_threads_40762, 32)) {
                        if (sle32(skip_threads_40762, local_tid_40749 -
                                  squot32(local_tid_40749, 32) * 32) &&
                            ltid_in_bounds_40761) {
                            // read operands
                            {
                                x_35318 = ((volatile __local
                                            float *) red_arr_mem_40753)[sext_i32_i64(local_tid_40749) -
                                                                        sext_i32_i64(skip_threads_40762)];
                            }
                            // perform operation
                            {
                                bool inactive_40763 =
                                     slt64(srem64(sext_i32_i64(local_tid_40749),
                                                  i32_res_28183),
                                           sext_i32_i64(local_tid_40749) -
                                           sext_i32_i64(local_tid_40749 -
                                           skip_threads_40762));
                                
                                if (inactive_40763) {
                                    x_35318 = x_35319;
                                }
                                if (!inactive_40763) {
                                    float defunc_1_op_res_35320 = x_35318 +
                                          x_35319;
                                    
                                    x_35318 = defunc_1_op_res_35320;
                                }
                            }
                        }
                        if (sle32(wave_sizze_40751, skip_threads_40762)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_40762, local_tid_40749 -
                                  squot32(local_tid_40749, 32) * 32) &&
                            ltid_in_bounds_40761) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_40753)[sext_i32_i64(local_tid_40749)] =
                                    x_35318;
                                x_35319 = x_35318;
                            }
                        }
                        if (sle32(wave_sizze_40751, skip_threads_40762)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_40762 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_40749 - squot32(local_tid_40749, 32) * 32) ==
                        31 && ltid_in_bounds_40761) {
                        ((volatile __local
                          float *) red_arr_mem_40753)[sext_i32_i64(squot32(local_tid_40749,
                                                                           32))] =
                            x_35318;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_40764;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_40749, 32) == 0 &&
                            ltid_in_bounds_40761) {
                            x_40759 = ((volatile __local
                                        float *) red_arr_mem_40753)[sext_i32_i64(local_tid_40749)];
                            if ((local_tid_40749 - squot32(local_tid_40749,
                                                           32) * 32) == 0) {
                                x_40758 = x_40759;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_40764 = 1;
                        while (slt32(skip_threads_40764, 32)) {
                            if (sle32(skip_threads_40764, local_tid_40749 -
                                      squot32(local_tid_40749, 32) * 32) &&
                                (squot32(local_tid_40749, 32) == 0 &&
                                 ltid_in_bounds_40761)) {
                                // read operands
                                {
                                    x_40758 = ((volatile __local
                                                float *) red_arr_mem_40753)[sext_i32_i64(local_tid_40749) -
                                                                            sext_i32_i64(skip_threads_40764)];
                                }
                                // perform operation
                                {
                                    bool inactive_40765 =
                                         slt64(srem64(sext_i32_i64(local_tid_40749 *
                                                      32 + 32 - 1),
                                                      i32_res_28183),
                                               sext_i32_i64(local_tid_40749 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_40749 -
                                                             skip_threads_40764) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_40765) {
                                        x_40758 = x_40759;
                                    }
                                    if (!inactive_40765) {
                                        float defunc_1_op_res_40760 = x_40758 +
                                              x_40759;
                                        
                                        x_40758 = defunc_1_op_res_40760;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_40751, skip_threads_40764)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_40764, local_tid_40749 -
                                      squot32(local_tid_40749, 32) * 32) &&
                                (squot32(local_tid_40749, 32) == 0 &&
                                 ltid_in_bounds_40761)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_40753)[sext_i32_i64(local_tid_40749)] =
                                        x_40758;
                                    x_40759 = x_40758;
                                }
                            }
                            if (sle32(wave_sizze_40751, skip_threads_40764)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_40764 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_40749, 32) == 0 ||
                          !ltid_in_bounds_40761)) {
                        // read operands
                        {
                            x_35319 = x_35318;
                            x_35318 = ((__local
                                        float *) red_arr_mem_40753)[sext_i32_i64(squot32(local_tid_40749,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_40766 =
                                 slt64(srem64(sext_i32_i64(local_tid_40749),
                                              i32_res_28183),
                                       sext_i32_i64(local_tid_40749) -
                                       sext_i32_i64(squot32(local_tid_40749,
                                                            32) * 32 - 1));
                            
                            if (inactive_40766) {
                                x_35318 = x_35319;
                            }
                            if (!inactive_40766) {
                                float defunc_1_op_res_35320 = x_35318 + x_35319;
                                
                                x_35318 = defunc_1_op_res_35320;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_40753)[sext_i32_i64(local_tid_40749)] =
                                x_35318;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_40749, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_40753)[sext_i32_i64(local_tid_40749)] =
                            x_35319;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_40757) *
                      squot64(segred_group_sizze_35314,
                              segment_sizze_nonzzero_40746) +
                      sext_i32_i64(local_tid_40749), m_27809) &&
                slt64(sext_i32_i64(local_tid_40749),
                      squot64(segred_group_sizze_35314,
                              segment_sizze_nonzzero_40746))) {
                ((__global
                  float *) mem_39575)[sext_i32_i64(virt_group_id_40757) *
                                      squot64(segred_group_sizze_35314,
                                              segment_sizze_nonzzero_40746) +
                                      sext_i32_i64(local_tid_40749)] = ((__local
                                                                         float *) red_arr_mem_40753)[(sext_i32_i64(local_tid_40749) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_40746 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35314
}
__kernel void mainzisegred_small_36293(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_40919_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_40917_backing_aligned_1,
                                       __local volatile
                                       int64_t *red_arr_mem_40915_backing_aligned_2,
                                       int64_t m_27809,
                                       int64_t iota32_arg_28208,
                                       int64_t num_groups_36464, __global
                                       unsigned char *mem_39581, __global
                                       unsigned char *mem_39622, __global
                                       unsigned char *mem_39624, __global
                                       unsigned char *mem_39628, __global
                                       unsigned char *mem_39631, __global
                                       unsigned char *mem_39633, __global
                                       unsigned char *mem_39635,
                                       int64_t segment_sizze_nonzzero_40908)
{
    #define segred_group_sizze_36463 (mainzisegred_group_sizze_36287)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_40919_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_40919_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_40917_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_40917_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_40915_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40915_backing_aligned_2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40910;
    int32_t local_tid_40911;
    int64_t group_sizze_40914;
    int32_t wave_sizze_40913;
    int32_t group_tid_40912;
    
    global_tid_40910 = get_global_id(0);
    local_tid_40911 = get_local_id(0);
    group_sizze_40914 = get_local_size(0);
    wave_sizze_40913 = LOCKSTEP_WIDTH;
    group_tid_40912 = get_group_id(0);
    
    int32_t phys_tid_36293;
    
    phys_tid_36293 = global_tid_40910;
    
    __local char *red_arr_mem_40915;
    
    red_arr_mem_40915 = (__local char *) red_arr_mem_40915_backing_0;
    
    __local char *red_arr_mem_40917;
    
    red_arr_mem_40917 = (__local char *) red_arr_mem_40917_backing_1;
    
    __local char *red_arr_mem_40919;
    
    red_arr_mem_40919 = (__local char *) red_arr_mem_40919_backing_2;
    
    int32_t phys_group_id_40921;
    
    phys_group_id_40921 = get_group_id(0);
    for (int32_t i_40922 = 0; i_40922 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27809,
                                          squot64(segred_group_sizze_36463,
                                                  segment_sizze_nonzzero_40908))) -
                   phys_group_id_40921, sext_i64_i32(num_groups_36464));
         i_40922++) {
        int32_t virt_group_id_40923 = phys_group_id_40921 + i_40922 *
                sext_i64_i32(num_groups_36464);
        int64_t gtid_36284 = squot64(sext_i32_i64(local_tid_40911),
                                     segment_sizze_nonzzero_40908) +
                sext_i32_i64(virt_group_id_40923) *
                squot64(segred_group_sizze_36463, segment_sizze_nonzzero_40908);
        int64_t gtid_36292 = srem64(sext_i32_i64(local_tid_40911),
                                    iota32_arg_28208);
        
        // apply map function if in bounds
        {
            if (slt64(0, iota32_arg_28208) && (slt64(gtid_36284, m_27809) &&
                                               slt64(sext_i32_i64(local_tid_40911),
                                                     iota32_arg_28208 *
                                                     squot64(segred_group_sizze_36463,
                                                             segment_sizze_nonzzero_40908)))) {
                int32_t y_36483 = ((__global int32_t *) mem_39624)[gtid_36284];
                float y_36484 = ((__global float *) mem_39622)[gtid_36284];
                float x_36488 = ((__global float *) mem_39628)[gtid_36284 *
                                                               iota32_arg_28208 +
                                                               gtid_36292];
                float x_36489 = ((__global float *) mem_39581)[gtid_36292];
                int32_t index_primexp_36743 = sext_i64_i32(gtid_36292);
                float defunc_0_f_res_36492 = x_36488 / y_36484;
                bool cond_36493 = slt32(index_primexp_36743, y_36483);
                bool isnan_res_36494;
                
                isnan_res_36494 = futrts_isnan32(defunc_0_f_res_36492);
                
                bool cond_t_res_36495 = !isnan_res_36494;
                bool x_36496 = cond_36493 && cond_t_res_36495;
                float abs_res_36497 = (float) fabs(defunc_0_f_res_36492);
                bool defunc_2_f_res_t_res_36498 = x_36489 < abs_res_36497;
                bool x_36499 = x_36496 && defunc_2_f_res_t_res_36498;
                float defunc_1_f_res_36500;
                
                if (cond_36493) {
                    defunc_1_f_res_36500 = defunc_0_f_res_36492;
                } else {
                    defunc_1_f_res_36500 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      bool *) red_arr_mem_40915)[sext_i32_i64(local_tid_40911)] =
                        x_36499;
                    ((__local
                      int32_t *) red_arr_mem_40917)[sext_i32_i64(local_tid_40911)] =
                        index_primexp_36743;
                    ((__local
                      float *) red_arr_mem_40919)[sext_i32_i64(local_tid_40911)] =
                        defunc_1_f_res_36500;
                }
            } else {
                ((__local
                  bool *) red_arr_mem_40915)[sext_i32_i64(local_tid_40911)] = 0;
                ((__local
                  int32_t *) red_arr_mem_40917)[sext_i32_i64(local_tid_40911)] =
                    -1;
                ((__local
                  float *) red_arr_mem_40919)[sext_i32_i64(local_tid_40911)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, iota32_arg_28208)) {
            // perform segmented scan to imitate reduction
            {
                bool x_36469;
                int32_t x_36470;
                float x_36471;
                bool x_36472;
                int32_t x_36473;
                float x_36474;
                bool x_40924;
                int32_t x_40925;
                float x_40926;
                bool x_40927;
                int32_t x_40928;
                float x_40929;
                bool ltid_in_bounds_40938;
                
                ltid_in_bounds_40938 = slt64(sext_i32_i64(local_tid_40911),
                                             iota32_arg_28208 *
                                             squot64(segred_group_sizze_36463,
                                                     segment_sizze_nonzzero_40908));
                
                int32_t skip_threads_40939;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_40938) {
                        x_36472 = ((volatile __local
                                    bool *) red_arr_mem_40915)[sext_i32_i64(local_tid_40911)];
                        x_36473 = ((volatile __local
                                    int32_t *) red_arr_mem_40917)[sext_i32_i64(local_tid_40911)];
                        x_36474 = ((volatile __local
                                    float *) red_arr_mem_40919)[sext_i32_i64(local_tid_40911)];
                        if ((local_tid_40911 - squot32(local_tid_40911, 32) *
                             32) == 0) {
                            x_36469 = x_36472;
                            x_36470 = x_36473;
                            x_36471 = x_36474;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_40939 = 1;
                    while (slt32(skip_threads_40939, 32)) {
                        if (sle32(skip_threads_40939, local_tid_40911 -
                                  squot32(local_tid_40911, 32) * 32) &&
                            ltid_in_bounds_40938) {
                            // read operands
                            {
                                x_36469 = ((volatile __local
                                            bool *) red_arr_mem_40915)[sext_i32_i64(local_tid_40911) -
                                                                       sext_i32_i64(skip_threads_40939)];
                                x_36470 = ((volatile __local
                                            int32_t *) red_arr_mem_40917)[sext_i32_i64(local_tid_40911) -
                                                                          sext_i32_i64(skip_threads_40939)];
                                x_36471 = ((volatile __local
                                            float *) red_arr_mem_40919)[sext_i32_i64(local_tid_40911) -
                                                                        sext_i32_i64(skip_threads_40939)];
                            }
                            // perform operation
                            {
                                bool inactive_40940 =
                                     slt64(srem64(sext_i32_i64(local_tid_40911),
                                                  iota32_arg_28208),
                                           sext_i32_i64(local_tid_40911) -
                                           sext_i32_i64(local_tid_40911 -
                                           skip_threads_40939));
                                
                                if (inactive_40940) {
                                    x_36469 = x_36472;
                                    x_36470 = x_36473;
                                    x_36471 = x_36474;
                                }
                                if (!inactive_40940) {
                                    bool defunc_1_op_res_36475;
                                    int32_t defunc_1_op_res_36476;
                                    
                                    if (x_36469) {
                                        defunc_1_op_res_36475 = x_36469;
                                        defunc_1_op_res_36476 = x_36470;
                                    } else {
                                        bool x_36477 = x_36472 && x_36472;
                                        bool x_36478 = !x_36472;
                                        bool y_36479 = x_36469 && x_36478;
                                        bool defunc_1_op_res_f_res_36480 =
                                             x_36477 || y_36479;
                                        int32_t defunc_1_op_res_f_res_36481;
                                        
                                        if (x_36472) {
                                            defunc_1_op_res_f_res_36481 =
                                                x_36473;
                                        } else {
                                            defunc_1_op_res_f_res_36481 =
                                                x_36470;
                                        }
                                        defunc_1_op_res_36475 =
                                            defunc_1_op_res_f_res_36480;
                                        defunc_1_op_res_36476 =
                                            defunc_1_op_res_f_res_36481;
                                    }
                                    
                                    float defunc_1_op_res_36482 = x_36471 +
                                          x_36474;
                                    
                                    x_36469 = defunc_1_op_res_36475;
                                    x_36470 = defunc_1_op_res_36476;
                                    x_36471 = defunc_1_op_res_36482;
                                }
                            }
                        }
                        if (sle32(wave_sizze_40913, skip_threads_40939)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_40939, local_tid_40911 -
                                  squot32(local_tid_40911, 32) * 32) &&
                            ltid_in_bounds_40938) {
                            // write result
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_40915)[sext_i32_i64(local_tid_40911)] =
                                    x_36469;
                                x_36472 = x_36469;
                                ((volatile __local
                                  int32_t *) red_arr_mem_40917)[sext_i32_i64(local_tid_40911)] =
                                    x_36470;
                                x_36473 = x_36470;
                                ((volatile __local
                                  float *) red_arr_mem_40919)[sext_i32_i64(local_tid_40911)] =
                                    x_36471;
                                x_36474 = x_36471;
                            }
                        }
                        if (sle32(wave_sizze_40913, skip_threads_40939)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_40939 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_40911 - squot32(local_tid_40911, 32) * 32) ==
                        31 && ltid_in_bounds_40938) {
                        ((volatile __local
                          bool *) red_arr_mem_40915)[sext_i32_i64(squot32(local_tid_40911,
                                                                          32))] =
                            x_36469;
                        ((volatile __local
                          int32_t *) red_arr_mem_40917)[sext_i32_i64(squot32(local_tid_40911,
                                                                             32))] =
                            x_36470;
                        ((volatile __local
                          float *) red_arr_mem_40919)[sext_i32_i64(squot32(local_tid_40911,
                                                                           32))] =
                            x_36471;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_40941;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_40911, 32) == 0 &&
                            ltid_in_bounds_40938) {
                            x_40927 = ((volatile __local
                                        bool *) red_arr_mem_40915)[sext_i32_i64(local_tid_40911)];
                            x_40928 = ((volatile __local
                                        int32_t *) red_arr_mem_40917)[sext_i32_i64(local_tid_40911)];
                            x_40929 = ((volatile __local
                                        float *) red_arr_mem_40919)[sext_i32_i64(local_tid_40911)];
                            if ((local_tid_40911 - squot32(local_tid_40911,
                                                           32) * 32) == 0) {
                                x_40924 = x_40927;
                                x_40925 = x_40928;
                                x_40926 = x_40929;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_40941 = 1;
                        while (slt32(skip_threads_40941, 32)) {
                            if (sle32(skip_threads_40941, local_tid_40911 -
                                      squot32(local_tid_40911, 32) * 32) &&
                                (squot32(local_tid_40911, 32) == 0 &&
                                 ltid_in_bounds_40938)) {
                                // read operands
                                {
                                    x_40924 = ((volatile __local
                                                bool *) red_arr_mem_40915)[sext_i32_i64(local_tid_40911) -
                                                                           sext_i32_i64(skip_threads_40941)];
                                    x_40925 = ((volatile __local
                                                int32_t *) red_arr_mem_40917)[sext_i32_i64(local_tid_40911) -
                                                                              sext_i32_i64(skip_threads_40941)];
                                    x_40926 = ((volatile __local
                                                float *) red_arr_mem_40919)[sext_i32_i64(local_tid_40911) -
                                                                            sext_i32_i64(skip_threads_40941)];
                                }
                                // perform operation
                                {
                                    bool inactive_40942 =
                                         slt64(srem64(sext_i32_i64(local_tid_40911 *
                                                      32 + 32 - 1),
                                                      iota32_arg_28208),
                                               sext_i32_i64(local_tid_40911 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_40911 -
                                                             skip_threads_40941) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_40942) {
                                        x_40924 = x_40927;
                                        x_40925 = x_40928;
                                        x_40926 = x_40929;
                                    }
                                    if (!inactive_40942) {
                                        bool defunc_1_op_res_40930;
                                        int32_t defunc_1_op_res_40931;
                                        
                                        if (x_40924) {
                                            defunc_1_op_res_40930 = x_40924;
                                            defunc_1_op_res_40931 = x_40925;
                                        } else {
                                            bool x_40932 = x_40927 && x_40927;
                                            bool x_40933 = !x_40927;
                                            bool y_40934 = x_40924 && x_40933;
                                            bool defunc_1_op_res_f_res_40935 =
                                                 x_40932 || y_40934;
                                            int32_t defunc_1_op_res_f_res_40936;
                                            
                                            if (x_40927) {
                                                defunc_1_op_res_f_res_40936 =
                                                    x_40928;
                                            } else {
                                                defunc_1_op_res_f_res_40936 =
                                                    x_40925;
                                            }
                                            defunc_1_op_res_40930 =
                                                defunc_1_op_res_f_res_40935;
                                            defunc_1_op_res_40931 =
                                                defunc_1_op_res_f_res_40936;
                                        }
                                        
                                        float defunc_1_op_res_40937 = x_40926 +
                                              x_40929;
                                        
                                        x_40924 = defunc_1_op_res_40930;
                                        x_40925 = defunc_1_op_res_40931;
                                        x_40926 = defunc_1_op_res_40937;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_40913, skip_threads_40941)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_40941, local_tid_40911 -
                                      squot32(local_tid_40911, 32) * 32) &&
                                (squot32(local_tid_40911, 32) == 0 &&
                                 ltid_in_bounds_40938)) {
                                // write result
                                {
                                    ((volatile __local
                                      bool *) red_arr_mem_40915)[sext_i32_i64(local_tid_40911)] =
                                        x_40924;
                                    x_40927 = x_40924;
                                    ((volatile __local
                                      int32_t *) red_arr_mem_40917)[sext_i32_i64(local_tid_40911)] =
                                        x_40925;
                                    x_40928 = x_40925;
                                    ((volatile __local
                                      float *) red_arr_mem_40919)[sext_i32_i64(local_tid_40911)] =
                                        x_40926;
                                    x_40929 = x_40926;
                                }
                            }
                            if (sle32(wave_sizze_40913, skip_threads_40941)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_40941 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_40911, 32) == 0 ||
                          !ltid_in_bounds_40938)) {
                        // read operands
                        {
                            x_36472 = x_36469;
                            x_36473 = x_36470;
                            x_36474 = x_36471;
                            x_36469 = ((__local
                                        bool *) red_arr_mem_40915)[sext_i32_i64(squot32(local_tid_40911,
                                                                                        32)) -
                                                                   1];
                            x_36470 = ((__local
                                        int32_t *) red_arr_mem_40917)[sext_i32_i64(squot32(local_tid_40911,
                                                                                           32)) -
                                                                      1];
                            x_36471 = ((__local
                                        float *) red_arr_mem_40919)[sext_i32_i64(squot32(local_tid_40911,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_40943 =
                                 slt64(srem64(sext_i32_i64(local_tid_40911),
                                              iota32_arg_28208),
                                       sext_i32_i64(local_tid_40911) -
                                       sext_i32_i64(squot32(local_tid_40911,
                                                            32) * 32 - 1));
                            
                            if (inactive_40943) {
                                x_36469 = x_36472;
                                x_36470 = x_36473;
                                x_36471 = x_36474;
                            }
                            if (!inactive_40943) {
                                bool defunc_1_op_res_36475;
                                int32_t defunc_1_op_res_36476;
                                
                                if (x_36469) {
                                    defunc_1_op_res_36475 = x_36469;
                                    defunc_1_op_res_36476 = x_36470;
                                } else {
                                    bool x_36477 = x_36472 && x_36472;
                                    bool x_36478 = !x_36472;
                                    bool y_36479 = x_36469 && x_36478;
                                    bool defunc_1_op_res_f_res_36480 =
                                         x_36477 || y_36479;
                                    int32_t defunc_1_op_res_f_res_36481;
                                    
                                    if (x_36472) {
                                        defunc_1_op_res_f_res_36481 = x_36473;
                                    } else {
                                        defunc_1_op_res_f_res_36481 = x_36470;
                                    }
                                    defunc_1_op_res_36475 =
                                        defunc_1_op_res_f_res_36480;
                                    defunc_1_op_res_36476 =
                                        defunc_1_op_res_f_res_36481;
                                }
                                
                                float defunc_1_op_res_36482 = x_36471 + x_36474;
                                
                                x_36469 = defunc_1_op_res_36475;
                                x_36470 = defunc_1_op_res_36476;
                                x_36471 = defunc_1_op_res_36482;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              bool *) red_arr_mem_40915)[sext_i32_i64(local_tid_40911)] =
                                x_36469;
                            ((__local
                              int32_t *) red_arr_mem_40917)[sext_i32_i64(local_tid_40911)] =
                                x_36470;
                            ((__local
                              float *) red_arr_mem_40919)[sext_i32_i64(local_tid_40911)] =
                                x_36471;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_40911, 32) == 0) {
                        ((__local
                          bool *) red_arr_mem_40915)[sext_i32_i64(local_tid_40911)] =
                            x_36472;
                        ((__local
                          int32_t *) red_arr_mem_40917)[sext_i32_i64(local_tid_40911)] =
                            x_36473;
                        ((__local
                          float *) red_arr_mem_40919)[sext_i32_i64(local_tid_40911)] =
                            x_36474;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_40923) *
                      squot64(segred_group_sizze_36463,
                              segment_sizze_nonzzero_40908) +
                      sext_i32_i64(local_tid_40911), m_27809) &&
                slt64(sext_i32_i64(local_tid_40911),
                      squot64(segred_group_sizze_36463,
                              segment_sizze_nonzzero_40908))) {
                ((__global
                  bool *) mem_39631)[sext_i32_i64(virt_group_id_40923) *
                                     squot64(segred_group_sizze_36463,
                                             segment_sizze_nonzzero_40908) +
                                     sext_i32_i64(local_tid_40911)] = ((__local
                                                                        bool *) red_arr_mem_40915)[(sext_i32_i64(local_tid_40911) +
                                                                                                    1) *
                                                                                                   segment_sizze_nonzzero_40908 -
                                                                                                   1];
                ((__global
                  int32_t *) mem_39633)[sext_i32_i64(virt_group_id_40923) *
                                        squot64(segred_group_sizze_36463,
                                                segment_sizze_nonzzero_40908) +
                                        sext_i32_i64(local_tid_40911)] =
                    ((__local
                      int32_t *) red_arr_mem_40917)[(sext_i32_i64(local_tid_40911) +
                                                     1) *
                                                    segment_sizze_nonzzero_40908 -
                                                    1];
                ((__global
                  float *) mem_39635)[sext_i32_i64(virt_group_id_40923) *
                                      squot64(segred_group_sizze_36463,
                                              segment_sizze_nonzzero_40908) +
                                      sext_i32_i64(local_tid_40911)] = ((__local
                                                                         float *) red_arr_mem_40919)[(sext_i32_i64(local_tid_40911) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_40908 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36463
}
__kernel void mainDetailedzicopy_40081(int64_t m_27116, int64_t i32_res_27268,
                                       int64_t ctx_param_ext_38881,
                                       int64_t ctx_param_ext_38882,
                                       int64_t ctx_param_ext_38884, __global
                                       unsigned char *mem_param_38886, __global
                                       unsigned char *mem_38891)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_40081;
    int32_t copy_ltid_40082;
    int32_t copy_gid_40083;
    
    copy_gtid_40081 = get_global_id(0);
    copy_ltid_40082 = get_local_id(0);
    copy_gid_40083 = get_group_id(0);
    if (slt64(sext_i32_i64(copy_gtid_40081), m_27116 * i32_res_27268)) {
        ((__global float *) mem_38891)[(sext_i32_i64(copy_gtid_40081) -
                                        squot64(sext_i32_i64(copy_gtid_40081),
                                                i32_res_27268) *
                                        i32_res_27268) * m_27116 +
                                       squot64(sext_i32_i64(copy_gtid_40081),
                                               i32_res_27268)] = ((__global
                                                                   float *) mem_param_38886)[ctx_param_ext_38881 +
                                                                                             (squot64(sext_i32_i64(copy_gtid_40081),
                                                                                                      i32_res_27268) *
                                                                                              ctx_param_ext_38882 +
                                                                                              (sext_i32_i64(copy_gtid_40081) -
                                                                                               squot64(sext_i32_i64(copy_gtid_40081),
                                                                                                       i32_res_27268) *
                                                                                               i32_res_27268) *
                                                                                              ctx_param_ext_38884)];
    }
    
  error_0:
    return;
}
__kernel void mainDetailedziscan_stage1_30751(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_40511_backing_aligned_0,
                                              int64_t N_27115, int64_t m_27116,
                                              int64_t N_27117, __global
                                              unsigned char *images_mem_38682,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_39440,
                                              __global unsigned char *mem_39469,
                                              __global unsigned char *mem_39472,
                                              int32_t num_threads_40505)
{
    #define segscan_group_sizze_30768 (mainDetailedzisegscan_group_sizze_30745)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_40511_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_40511_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40506;
    int32_t local_tid_40507;
    int64_t group_sizze_40510;
    int32_t wave_sizze_40509;
    int32_t group_tid_40508;
    
    global_tid_40506 = get_global_id(0);
    local_tid_40507 = get_local_id(0);
    group_sizze_40510 = get_local_size(0);
    wave_sizze_40509 = LOCKSTEP_WIDTH;
    group_tid_40508 = get_group_id(0);
    
    int32_t phys_tid_30751;
    
    phys_tid_30751 = global_tid_40506;
    
    __local char *scan_arr_mem_40511;
    
    scan_arr_mem_40511 = (__local char *) scan_arr_mem_40511_backing_0;
    
    int64_t x_30773;
    int64_t x_30774;
    
    x_30773 = 0;
    for (int64_t j_40513 = 0; j_40513 < sdiv_up64(m_27116 * N_27115,
                                                  sext_i32_i64(num_threads_40505));
         j_40513++) {
        int64_t chunk_offset_40514 = segscan_group_sizze_30768 * j_40513 +
                sext_i32_i64(group_tid_40508) * (segscan_group_sizze_30768 *
                                                 sdiv_up64(m_27116 * N_27115,
                                                           sext_i32_i64(num_threads_40505)));
        int64_t flat_idx_40515 = chunk_offset_40514 +
                sext_i32_i64(local_tid_40507);
        int64_t gtid_30742 = squot64(flat_idx_40515, N_27115);
        int64_t gtid_30750 = flat_idx_40515 - squot64(flat_idx_40515, N_27115) *
                N_27115;
        
        // threads in bounds read input
        {
            if (slt64(gtid_30742, m_27116) && slt64(gtid_30750, N_27115)) {
                float x_30778 = ((__global
                                  float *) images_mem_38682)[gtid_30742 *
                                                             N_27117 +
                                                             gtid_30750];
                bool isnan_res_30780;
                
                isnan_res_30780 = futrts_isnan32(x_30778);
                
                bool cond_30781 = !isnan_res_30780;
                float defunc_0_f_res_30782;
                
                if (cond_30781) {
                    float x_30779 = ((__global
                                      float *) defunc_3_map_res_mem_39440)[gtid_30742 *
                                                                           N_27115 +
                                                                           gtid_30750];
                    float defunc_0_f_res_t_res_30783 = x_30778 - x_30779;
                    
                    defunc_0_f_res_30782 = defunc_0_f_res_t_res_30783;
                } else {
                    defunc_0_f_res_30782 = NAN;
                }
                
                bool isnan_res_30784;
                
                isnan_res_30784 = futrts_isnan32(defunc_0_f_res_30782);
                
                bool defunc_0_p_res_30785 = !isnan_res_30784;
                int64_t defunc_0_f_res_30786 =
                        btoi_bool_i64(defunc_0_p_res_30785);
                
                // write to-scan values to parameters
                {
                    x_30774 = defunc_0_f_res_30786;
                }
                // write mapped values results to global memory
                {
                    ((__global float *) mem_39472)[gtid_30742 * N_27115 +
                                                   gtid_30750] =
                        defunc_0_f_res_30782;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_30742, m_27116) && slt64(gtid_30750,
                                                          N_27115))) {
                    x_30774 = 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_30775 = add64(x_30773, x_30774);
                
                ((__local
                  int64_t *) scan_arr_mem_40511)[sext_i32_i64(local_tid_40507)] =
                    defunc_1_op_res_30775;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_40516;
            int64_t x_40517;
            int64_t x_40519;
            int64_t x_40520;
            bool ltid_in_bounds_40522;
            
            ltid_in_bounds_40522 = slt64(sext_i32_i64(local_tid_40507),
                                         segscan_group_sizze_30768);
            
            int32_t skip_threads_40523;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_40522) {
                    x_40517 = ((volatile __local
                                int64_t *) scan_arr_mem_40511)[sext_i32_i64(local_tid_40507)];
                    if ((local_tid_40507 - squot32(local_tid_40507, 32) * 32) ==
                        0) {
                        x_40516 = x_40517;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_40523 = 1;
                while (slt32(skip_threads_40523, 32)) {
                    if (sle32(skip_threads_40523, local_tid_40507 -
                              squot32(local_tid_40507, 32) * 32) &&
                        ltid_in_bounds_40522) {
                        // read operands
                        {
                            x_40516 = ((volatile __local
                                        int64_t *) scan_arr_mem_40511)[sext_i32_i64(local_tid_40507) -
                                                                       sext_i32_i64(skip_threads_40523)];
                        }
                        // perform operation
                        {
                            bool inactive_40524 =
                                 slt64(srem64(sext_i32_i64(local_tid_40507) +
                                              chunk_offset_40514, N_27115),
                                       sext_i32_i64(local_tid_40507) +
                                       chunk_offset_40514 -
                                       (sext_i32_i64(local_tid_40507 -
                                        skip_threads_40523) +
                                        chunk_offset_40514));
                            
                            if (inactive_40524) {
                                x_40516 = x_40517;
                            }
                            if (!inactive_40524) {
                                int64_t defunc_1_op_res_40518 = add64(x_40516,
                                                                      x_40517);
                                
                                x_40516 = defunc_1_op_res_40518;
                            }
                        }
                    }
                    if (sle32(wave_sizze_40509, skip_threads_40523)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_40523, local_tid_40507 -
                              squot32(local_tid_40507, 32) * 32) &&
                        ltid_in_bounds_40522) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_40511)[sext_i32_i64(local_tid_40507)] =
                                x_40516;
                            x_40517 = x_40516;
                        }
                    }
                    if (sle32(wave_sizze_40509, skip_threads_40523)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_40523 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_40507 - squot32(local_tid_40507, 32) * 32) ==
                    31 && ltid_in_bounds_40522) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_40511)[sext_i32_i64(squot32(local_tid_40507,
                                                                          32))] =
                        x_40516;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_40525;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_40507, 32) == 0 &&
                        ltid_in_bounds_40522) {
                        x_40520 = ((volatile __local
                                    int64_t *) scan_arr_mem_40511)[sext_i32_i64(local_tid_40507)];
                        if ((local_tid_40507 - squot32(local_tid_40507, 32) *
                             32) == 0) {
                            x_40519 = x_40520;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_40525 = 1;
                    while (slt32(skip_threads_40525, 32)) {
                        if (sle32(skip_threads_40525, local_tid_40507 -
                                  squot32(local_tid_40507, 32) * 32) &&
                            (squot32(local_tid_40507, 32) == 0 &&
                             ltid_in_bounds_40522)) {
                            // read operands
                            {
                                x_40519 = ((volatile __local
                                            int64_t *) scan_arr_mem_40511)[sext_i32_i64(local_tid_40507) -
                                                                           sext_i32_i64(skip_threads_40525)];
                            }
                            // perform operation
                            {
                                bool inactive_40526 =
                                     slt64(srem64(sext_i32_i64(local_tid_40507 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_40514, N_27115),
                                           sext_i32_i64(local_tid_40507 * 32 +
                                           32 - 1) + chunk_offset_40514 -
                                           (sext_i32_i64((local_tid_40507 -
                                                          skip_threads_40525) *
                                            32 + 32 - 1) + chunk_offset_40514));
                                
                                if (inactive_40526) {
                                    x_40519 = x_40520;
                                }
                                if (!inactive_40526) {
                                    int64_t defunc_1_op_res_40521 =
                                            add64(x_40519, x_40520);
                                    
                                    x_40519 = defunc_1_op_res_40521;
                                }
                            }
                        }
                        if (sle32(wave_sizze_40509, skip_threads_40525)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_40525, local_tid_40507 -
                                  squot32(local_tid_40507, 32) * 32) &&
                            (squot32(local_tid_40507, 32) == 0 &&
                             ltid_in_bounds_40522)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_40511)[sext_i32_i64(local_tid_40507)] =
                                    x_40519;
                                x_40520 = x_40519;
                            }
                        }
                        if (sle32(wave_sizze_40509, skip_threads_40525)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_40525 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_40507, 32) == 0 ||
                      !ltid_in_bounds_40522)) {
                    // read operands
                    {
                        x_40517 = x_40516;
                        x_40516 = ((__local
                                    int64_t *) scan_arr_mem_40511)[sext_i32_i64(squot32(local_tid_40507,
                                                                                        32)) -
                                                                   1];
                    }
                    // perform operation
                    {
                        bool inactive_40527 =
                             slt64(srem64(sext_i32_i64(local_tid_40507) +
                                          chunk_offset_40514, N_27115),
                                   sext_i32_i64(local_tid_40507) +
                                   chunk_offset_40514 -
                                   (sext_i32_i64(squot32(local_tid_40507, 32) *
                                    32 - 1) + chunk_offset_40514));
                        
                        if (inactive_40527) {
                            x_40516 = x_40517;
                        }
                        if (!inactive_40527) {
                            int64_t defunc_1_op_res_40518 = add64(x_40516,
                                                                  x_40517);
                            
                            x_40516 = defunc_1_op_res_40518;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_40511)[sext_i32_i64(local_tid_40507)] =
                            x_40516;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_40507, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_40511)[sext_i32_i64(local_tid_40507)] =
                        x_40517;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_30742, m_27116) && slt64(gtid_30750, N_27115)) {
                    ((__global int64_t *) mem_39469)[gtid_30742 * N_27115 +
                                                     gtid_30750] = ((__local
                                                                     int64_t *) scan_arr_mem_40511)[sext_i32_i64(local_tid_40507)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_40528 = slt64(srem64(chunk_offset_40514 +
                                                          segscan_group_sizze_30768,
                                                          N_27115),
                                                   chunk_offset_40514 +
                                                   segscan_group_sizze_30768 -
                                                   (chunk_offset_40514 +
                                                    segscan_group_sizze_30768 -
                                                    1));
                bool should_load_carry_40529 = local_tid_40507 == 0 &&
                     !crosses_segment_40528;
                
                if (should_load_carry_40529) {
                    x_30773 = ((__local
                                int64_t *) scan_arr_mem_40511)[segscan_group_sizze_30768 -
                                                               1];
                }
                if (!should_load_carry_40529) {
                    x_30773 = 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_30768
}
__kernel void mainDetailedziscan_stage1_32339(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_40882_backing_aligned_0,
                                              int64_t N_27115, int64_t m_27116,
                                              int64_t iota32_arg_27515, __global
                                              unsigned char *defunc_4_map_res_mem_39478,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_39541,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_39542,
                                              __global
                                              unsigned char *defunc_0_f_res_mem_39576,
                                              __global unsigned char *mem_39638,
                                              __global unsigned char *mem_39642,
                                              int32_t num_threads_40876)
{
    #define segscan_group_sizze_32417 (mainDetailedzisegscan_group_sizze_32333)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_40882_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_40882_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40877;
    int32_t local_tid_40878;
    int64_t group_sizze_40881;
    int32_t wave_sizze_40880;
    int32_t group_tid_40879;
    
    global_tid_40877 = get_global_id(0);
    local_tid_40878 = get_local_id(0);
    group_sizze_40881 = get_local_size(0);
    wave_sizze_40880 = LOCKSTEP_WIDTH;
    group_tid_40879 = get_group_id(0);
    
    int32_t phys_tid_32339;
    
    phys_tid_32339 = global_tid_40877;
    
    __local char *scan_arr_mem_40882;
    
    scan_arr_mem_40882 = (__local char *) scan_arr_mem_40882_backing_0;
    
    float x_32421;
    float x_32422;
    
    x_32421 = 0.0F;
    for (int64_t j_40884 = 0; j_40884 < sdiv_up64(m_27116 * iota32_arg_27515,
                                                  sext_i32_i64(num_threads_40876));
         j_40884++) {
        int64_t chunk_offset_40885 = segscan_group_sizze_32417 * j_40884 +
                sext_i32_i64(group_tid_40879) * (segscan_group_sizze_32417 *
                                                 sdiv_up64(m_27116 *
                                                           iota32_arg_27515,
                                                           sext_i32_i64(num_threads_40876)));
        int64_t flat_idx_40886 = chunk_offset_40885 +
                sext_i32_i64(local_tid_40878);
        int64_t gtid_32330 = squot64(flat_idx_40886, iota32_arg_27515);
        int64_t gtid_32338 = flat_idx_40886 - squot64(flat_idx_40886,
                                                      iota32_arg_27515) *
                iota32_arg_27515;
        
        // threads in bounds read input
        {
            if (slt64(gtid_32330, m_27116) && slt64(gtid_32338,
                                                    iota32_arg_27515)) {
                int32_t y_32428 = ((__global int32_t *) mem_39638)[gtid_32330];
                int32_t index_primexp_36743 = sext_i64_i32(gtid_32338);
                bool cond_32431 = sle32(y_32428, index_primexp_36743);
                float defunc_0_f_res_32432;
                
                if (cond_32431) {
                    defunc_0_f_res_32432 = 0.0F;
                } else {
                    int32_t x_32424 = ((__global
                                        int32_t *) defunc_3_map_res_mem_39542)[gtid_32330];
                    int32_t x_32425 = ((__global
                                        int32_t *) defunc_3_map_res_mem_39541)[gtid_32330];
                    float x_32426 = ((__global
                                      float *) defunc_0_f_res_mem_39576)[gtid_32330];
                    bool cond_32433 = index_primexp_36743 == 0;
                    float defunc_0_f_res_f_res_32434;
                    
                    if (cond_32433) {
                        defunc_0_f_res_f_res_32434 = x_32426;
                    } else {
                        int32_t i_32435 = add32(x_32424, index_primexp_36743);
                        int64_t i_32436 = sext_i32_i64(i_32435);
                        float x_32437 = ((__global
                                          float *) defunc_4_map_res_mem_39478)[gtid_32330 *
                                                                               N_27115 +
                                                                               i_32436];
                        int32_t x_32438 = sub32(x_32424, x_32425);
                        int32_t i_32439 = add32(x_32438, index_primexp_36743);
                        int64_t i_32440 = sext_i32_i64(i_32439);
                        float y_32441 = ((__global
                                          float *) defunc_4_map_res_mem_39478)[gtid_32330 *
                                                                               N_27115 +
                                                                               i_32440];
                        float defunc_0_f_res_f_res_f_res_32442 = x_32437 -
                              y_32441;
                        
                        defunc_0_f_res_f_res_32434 =
                            defunc_0_f_res_f_res_f_res_32442;
                    }
                    defunc_0_f_res_32432 = defunc_0_f_res_f_res_32434;
                }
                // write to-scan values to parameters
                {
                    x_32422 = defunc_0_f_res_32432;
                }
                // write mapped values results to global memory
                { }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_32330, m_27116) && slt64(gtid_32338,
                                                          iota32_arg_27515))) {
                    x_32422 = 0.0F;
                }
            }
            // combine with carry and write to local memory
            {
                float defunc_1_op_res_32423 = x_32421 + x_32422;
                
                ((__local
                  float *) scan_arr_mem_40882)[sext_i32_i64(local_tid_40878)] =
                    defunc_1_op_res_32423;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float x_40887;
            float x_40888;
            float x_40890;
            float x_40891;
            bool ltid_in_bounds_40893;
            
            ltid_in_bounds_40893 = slt64(sext_i32_i64(local_tid_40878),
                                         segscan_group_sizze_32417);
            
            int32_t skip_threads_40894;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_40893) {
                    x_40888 = ((volatile __local
                                float *) scan_arr_mem_40882)[sext_i32_i64(local_tid_40878)];
                    if ((local_tid_40878 - squot32(local_tid_40878, 32) * 32) ==
                        0) {
                        x_40887 = x_40888;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_40894 = 1;
                while (slt32(skip_threads_40894, 32)) {
                    if (sle32(skip_threads_40894, local_tid_40878 -
                              squot32(local_tid_40878, 32) * 32) &&
                        ltid_in_bounds_40893) {
                        // read operands
                        {
                            x_40887 = ((volatile __local
                                        float *) scan_arr_mem_40882)[sext_i32_i64(local_tid_40878) -
                                                                     sext_i32_i64(skip_threads_40894)];
                        }
                        // perform operation
                        {
                            bool inactive_40895 =
                                 slt64(srem64(sext_i32_i64(local_tid_40878) +
                                              chunk_offset_40885,
                                              iota32_arg_27515),
                                       sext_i32_i64(local_tid_40878) +
                                       chunk_offset_40885 -
                                       (sext_i32_i64(local_tid_40878 -
                                        skip_threads_40894) +
                                        chunk_offset_40885));
                            
                            if (inactive_40895) {
                                x_40887 = x_40888;
                            }
                            if (!inactive_40895) {
                                float defunc_1_op_res_40889 = x_40887 + x_40888;
                                
                                x_40887 = defunc_1_op_res_40889;
                            }
                        }
                    }
                    if (sle32(wave_sizze_40880, skip_threads_40894)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_40894, local_tid_40878 -
                              squot32(local_tid_40878, 32) * 32) &&
                        ltid_in_bounds_40893) {
                        // write result
                        {
                            ((volatile __local
                              float *) scan_arr_mem_40882)[sext_i32_i64(local_tid_40878)] =
                                x_40887;
                            x_40888 = x_40887;
                        }
                    }
                    if (sle32(wave_sizze_40880, skip_threads_40894)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_40894 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_40878 - squot32(local_tid_40878, 32) * 32) ==
                    31 && ltid_in_bounds_40893) {
                    ((volatile __local
                      float *) scan_arr_mem_40882)[sext_i32_i64(squot32(local_tid_40878,
                                                                        32))] =
                        x_40887;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_40896;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_40878, 32) == 0 &&
                        ltid_in_bounds_40893) {
                        x_40891 = ((volatile __local
                                    float *) scan_arr_mem_40882)[sext_i32_i64(local_tid_40878)];
                        if ((local_tid_40878 - squot32(local_tid_40878, 32) *
                             32) == 0) {
                            x_40890 = x_40891;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_40896 = 1;
                    while (slt32(skip_threads_40896, 32)) {
                        if (sle32(skip_threads_40896, local_tid_40878 -
                                  squot32(local_tid_40878, 32) * 32) &&
                            (squot32(local_tid_40878, 32) == 0 &&
                             ltid_in_bounds_40893)) {
                            // read operands
                            {
                                x_40890 = ((volatile __local
                                            float *) scan_arr_mem_40882)[sext_i32_i64(local_tid_40878) -
                                                                         sext_i32_i64(skip_threads_40896)];
                            }
                            // perform operation
                            {
                                bool inactive_40897 =
                                     slt64(srem64(sext_i32_i64(local_tid_40878 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_40885,
                                                  iota32_arg_27515),
                                           sext_i32_i64(local_tid_40878 * 32 +
                                           32 - 1) + chunk_offset_40885 -
                                           (sext_i32_i64((local_tid_40878 -
                                                          skip_threads_40896) *
                                            32 + 32 - 1) + chunk_offset_40885));
                                
                                if (inactive_40897) {
                                    x_40890 = x_40891;
                                }
                                if (!inactive_40897) {
                                    float defunc_1_op_res_40892 = x_40890 +
                                          x_40891;
                                    
                                    x_40890 = defunc_1_op_res_40892;
                                }
                            }
                        }
                        if (sle32(wave_sizze_40880, skip_threads_40896)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_40896, local_tid_40878 -
                                  squot32(local_tid_40878, 32) * 32) &&
                            (squot32(local_tid_40878, 32) == 0 &&
                             ltid_in_bounds_40893)) {
                            // write result
                            {
                                ((volatile __local
                                  float *) scan_arr_mem_40882)[sext_i32_i64(local_tid_40878)] =
                                    x_40890;
                                x_40891 = x_40890;
                            }
                        }
                        if (sle32(wave_sizze_40880, skip_threads_40896)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_40896 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_40878, 32) == 0 ||
                      !ltid_in_bounds_40893)) {
                    // read operands
                    {
                        x_40888 = x_40887;
                        x_40887 = ((__local
                                    float *) scan_arr_mem_40882)[sext_i32_i64(squot32(local_tid_40878,
                                                                                      32)) -
                                                                 1];
                    }
                    // perform operation
                    {
                        bool inactive_40898 =
                             slt64(srem64(sext_i32_i64(local_tid_40878) +
                                          chunk_offset_40885, iota32_arg_27515),
                                   sext_i32_i64(local_tid_40878) +
                                   chunk_offset_40885 -
                                   (sext_i32_i64(squot32(local_tid_40878, 32) *
                                    32 - 1) + chunk_offset_40885));
                        
                        if (inactive_40898) {
                            x_40887 = x_40888;
                        }
                        if (!inactive_40898) {
                            float defunc_1_op_res_40889 = x_40887 + x_40888;
                            
                            x_40887 = defunc_1_op_res_40889;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          float *) scan_arr_mem_40882)[sext_i32_i64(local_tid_40878)] =
                            x_40887;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_40878, 32) == 0) {
                    ((__local
                      float *) scan_arr_mem_40882)[sext_i32_i64(local_tid_40878)] =
                        x_40888;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_32330, m_27116) && slt64(gtid_32338,
                                                        iota32_arg_27515)) {
                    ((__global float *) mem_39642)[gtid_32330 *
                                                   iota32_arg_27515 +
                                                   gtid_32338] = ((__local
                                                                   float *) scan_arr_mem_40882)[sext_i32_i64(local_tid_40878)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_40899 = slt64(srem64(chunk_offset_40885 +
                                                          segscan_group_sizze_32417,
                                                          iota32_arg_27515),
                                                   chunk_offset_40885 +
                                                   segscan_group_sizze_32417 -
                                                   (chunk_offset_40885 +
                                                    segscan_group_sizze_32417 -
                                                    1));
                bool should_load_carry_40900 = local_tid_40878 == 0 &&
                     !crosses_segment_40899;
                
                if (should_load_carry_40900) {
                    x_32421 = ((__local
                                float *) scan_arr_mem_40882)[segscan_group_sizze_32417 -
                                                             1];
                }
                if (!should_load_carry_40900) {
                    x_32421 = 0.0F;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_32417
}
__kernel void mainDetailedziscan_stage2_30751(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_40535_backing_aligned_0,
                                              int64_t N_27115, int64_t m_27116,
                                              __global unsigned char *mem_39469,
                                              int64_t stage1_num_groups_40504,
                                              int32_t num_threads_40505)
{
    #define segscan_group_sizze_30768 (mainDetailedzisegscan_group_sizze_30745)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_40535_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_40535_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40530;
    int32_t local_tid_40531;
    int64_t group_sizze_40534;
    int32_t wave_sizze_40533;
    int32_t group_tid_40532;
    
    global_tid_40530 = get_global_id(0);
    local_tid_40531 = get_local_id(0);
    group_sizze_40534 = get_local_size(0);
    wave_sizze_40533 = LOCKSTEP_WIDTH;
    group_tid_40532 = get_group_id(0);
    
    int32_t phys_tid_30751;
    
    phys_tid_30751 = global_tid_40530;
    
    __local char *scan_arr_mem_40535;
    
    scan_arr_mem_40535 = (__local char *) scan_arr_mem_40535_backing_0;
    
    int64_t flat_idx_40537;
    
    flat_idx_40537 = (sext_i32_i64(local_tid_40531) + 1) *
        (segscan_group_sizze_30768 * sdiv_up64(m_27116 * N_27115,
                                               sext_i32_i64(num_threads_40505))) -
        1;
    
    int64_t gtid_30742;
    
    gtid_30742 = squot64(flat_idx_40537, N_27115);
    
    int64_t gtid_30750;
    
    gtid_30750 = flat_idx_40537 - squot64(flat_idx_40537, N_27115) * N_27115;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_30742, m_27116) && slt64(gtid_30750, N_27115)) {
            ((__local
              int64_t *) scan_arr_mem_40535)[sext_i32_i64(local_tid_40531)] =
                ((__global int64_t *) mem_39469)[gtid_30742 * N_27115 +
                                                 gtid_30750];
        } else {
            ((__local
              int64_t *) scan_arr_mem_40535)[sext_i32_i64(local_tid_40531)] = 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_30773;
    int64_t x_30774;
    int64_t x_40538;
    int64_t x_40539;
    bool ltid_in_bounds_40541;
    
    ltid_in_bounds_40541 = slt64(sext_i32_i64(local_tid_40531),
                                 stage1_num_groups_40504);
    
    int32_t skip_threads_40542;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_40541) {
            x_30774 = ((volatile __local
                        int64_t *) scan_arr_mem_40535)[sext_i32_i64(local_tid_40531)];
            if ((local_tid_40531 - squot32(local_tid_40531, 32) * 32) == 0) {
                x_30773 = x_30774;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_40542 = 1;
        while (slt32(skip_threads_40542, 32)) {
            if (sle32(skip_threads_40542, local_tid_40531 -
                      squot32(local_tid_40531, 32) * 32) &&
                ltid_in_bounds_40541) {
                // read operands
                {
                    x_30773 = ((volatile __local
                                int64_t *) scan_arr_mem_40535)[sext_i32_i64(local_tid_40531) -
                                                               sext_i32_i64(skip_threads_40542)];
                }
                // perform operation
                {
                    bool inactive_40543 =
                         slt64(srem64((sext_i32_i64(local_tid_40531) + 1) *
                                      (segscan_group_sizze_30768 *
                                       sdiv_up64(m_27116 * N_27115,
                                                 sext_i32_i64(num_threads_40505))) -
                                      1, N_27115),
                               (sext_i32_i64(local_tid_40531) + 1) *
                               (segscan_group_sizze_30768 * sdiv_up64(m_27116 *
                                                                      N_27115,
                                                                      sext_i32_i64(num_threads_40505))) -
                               1 - ((sext_i32_i64(local_tid_40531 -
                                     skip_threads_40542) + 1) *
                                    (segscan_group_sizze_30768 *
                                     sdiv_up64(m_27116 * N_27115,
                                               sext_i32_i64(num_threads_40505))) -
                                    1));
                    
                    if (inactive_40543) {
                        x_30773 = x_30774;
                    }
                    if (!inactive_40543) {
                        int64_t defunc_1_op_res_30775 = add64(x_30773, x_30774);
                        
                        x_30773 = defunc_1_op_res_30775;
                    }
                }
            }
            if (sle32(wave_sizze_40533, skip_threads_40542)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_40542, local_tid_40531 -
                      squot32(local_tid_40531, 32) * 32) &&
                ltid_in_bounds_40541) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_40535)[sext_i32_i64(local_tid_40531)] =
                        x_30773;
                    x_30774 = x_30773;
                }
            }
            if (sle32(wave_sizze_40533, skip_threads_40542)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_40542 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_40531 - squot32(local_tid_40531, 32) * 32) == 31 &&
            ltid_in_bounds_40541) {
            ((volatile __local
              int64_t *) scan_arr_mem_40535)[sext_i32_i64(squot32(local_tid_40531,
                                                                  32))] =
                x_30773;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_40544;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_40531, 32) == 0 && ltid_in_bounds_40541) {
                x_40539 = ((volatile __local
                            int64_t *) scan_arr_mem_40535)[sext_i32_i64(local_tid_40531)];
                if ((local_tid_40531 - squot32(local_tid_40531, 32) * 32) ==
                    0) {
                    x_40538 = x_40539;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_40544 = 1;
            while (slt32(skip_threads_40544, 32)) {
                if (sle32(skip_threads_40544, local_tid_40531 -
                          squot32(local_tid_40531, 32) * 32) &&
                    (squot32(local_tid_40531, 32) == 0 &&
                     ltid_in_bounds_40541)) {
                    // read operands
                    {
                        x_40538 = ((volatile __local
                                    int64_t *) scan_arr_mem_40535)[sext_i32_i64(local_tid_40531) -
                                                                   sext_i32_i64(skip_threads_40544)];
                    }
                    // perform operation
                    {
                        bool inactive_40545 =
                             slt64(srem64((sext_i32_i64(local_tid_40531 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_30768 *
                                           sdiv_up64(m_27116 * N_27115,
                                                     sext_i32_i64(num_threads_40505))) -
                                          1, N_27115),
                                   (sext_i32_i64(local_tid_40531 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_30768 *
                                               sdiv_up64(m_27116 * N_27115,
                                                         sext_i32_i64(num_threads_40505))) -
                                   1 - ((sext_i32_i64((local_tid_40531 -
                                                       skip_threads_40544) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_30768 *
                                         sdiv_up64(m_27116 * N_27115,
                                                   sext_i32_i64(num_threads_40505))) -
                                        1));
                        
                        if (inactive_40545) {
                            x_40538 = x_40539;
                        }
                        if (!inactive_40545) {
                            int64_t defunc_1_op_res_40540 = add64(x_40538,
                                                                  x_40539);
                            
                            x_40538 = defunc_1_op_res_40540;
                        }
                    }
                }
                if (sle32(wave_sizze_40533, skip_threads_40544)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_40544, local_tid_40531 -
                          squot32(local_tid_40531, 32) * 32) &&
                    (squot32(local_tid_40531, 32) == 0 &&
                     ltid_in_bounds_40541)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_40535)[sext_i32_i64(local_tid_40531)] =
                            x_40538;
                        x_40539 = x_40538;
                    }
                }
                if (sle32(wave_sizze_40533, skip_threads_40544)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_40544 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_40531, 32) == 0 || !ltid_in_bounds_40541)) {
            // read operands
            {
                x_30774 = x_30773;
                x_30773 = ((__local
                            int64_t *) scan_arr_mem_40535)[sext_i32_i64(squot32(local_tid_40531,
                                                                                32)) -
                                                           1];
            }
            // perform operation
            {
                bool inactive_40546 =
                     slt64(srem64((sext_i32_i64(local_tid_40531) + 1) *
                                  (segscan_group_sizze_30768 *
                                   sdiv_up64(m_27116 * N_27115,
                                             sext_i32_i64(num_threads_40505))) -
                                  1, N_27115), (sext_i32_i64(local_tid_40531) +
                                                1) *
                           (segscan_group_sizze_30768 * sdiv_up64(m_27116 *
                                                                  N_27115,
                                                                  sext_i32_i64(num_threads_40505))) -
                           1 - ((sext_i32_i64(squot32(local_tid_40531, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_30768 *
                                                 sdiv_up64(m_27116 * N_27115,
                                                           sext_i32_i64(num_threads_40505))) -
                                1));
                
                if (inactive_40546) {
                    x_30773 = x_30774;
                }
                if (!inactive_40546) {
                    int64_t defunc_1_op_res_30775 = add64(x_30773, x_30774);
                    
                    x_30773 = defunc_1_op_res_30775;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_40535)[sext_i32_i64(local_tid_40531)] =
                    x_30773;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_40531, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_40535)[sext_i32_i64(local_tid_40531)] =
                x_30774;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_30742, m_27116) && slt64(gtid_30750, N_27115)) {
            ((__global int64_t *) mem_39469)[gtid_30742 * N_27115 +
                                             gtid_30750] = ((__local
                                                             int64_t *) scan_arr_mem_40535)[sext_i32_i64(local_tid_40531)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_30768
}
__kernel void mainDetailedziscan_stage2_32339(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_40906_backing_aligned_0,
                                              int64_t m_27116,
                                              int64_t iota32_arg_27515, __global
                                              unsigned char *mem_39642,
                                              int64_t stage1_num_groups_40875,
                                              int32_t num_threads_40876)
{
    #define segscan_group_sizze_32417 (mainDetailedzisegscan_group_sizze_32333)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_40906_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_40906_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40901;
    int32_t local_tid_40902;
    int64_t group_sizze_40905;
    int32_t wave_sizze_40904;
    int32_t group_tid_40903;
    
    global_tid_40901 = get_global_id(0);
    local_tid_40902 = get_local_id(0);
    group_sizze_40905 = get_local_size(0);
    wave_sizze_40904 = LOCKSTEP_WIDTH;
    group_tid_40903 = get_group_id(0);
    
    int32_t phys_tid_32339;
    
    phys_tid_32339 = global_tid_40901;
    
    __local char *scan_arr_mem_40906;
    
    scan_arr_mem_40906 = (__local char *) scan_arr_mem_40906_backing_0;
    
    int64_t flat_idx_40908;
    
    flat_idx_40908 = (sext_i32_i64(local_tid_40902) + 1) *
        (segscan_group_sizze_32417 * sdiv_up64(m_27116 * iota32_arg_27515,
                                               sext_i32_i64(num_threads_40876))) -
        1;
    
    int64_t gtid_32330;
    
    gtid_32330 = squot64(flat_idx_40908, iota32_arg_27515);
    
    int64_t gtid_32338;
    
    gtid_32338 = flat_idx_40908 - squot64(flat_idx_40908, iota32_arg_27515) *
        iota32_arg_27515;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_32330, m_27116) && slt64(gtid_32338, iota32_arg_27515)) {
            ((__local
              float *) scan_arr_mem_40906)[sext_i32_i64(local_tid_40902)] =
                ((__global float *) mem_39642)[gtid_32330 * iota32_arg_27515 +
                                               gtid_32338];
        } else {
            ((__local
              float *) scan_arr_mem_40906)[sext_i32_i64(local_tid_40902)] =
                0.0F;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float x_32421;
    float x_32422;
    float x_40909;
    float x_40910;
    bool ltid_in_bounds_40912;
    
    ltid_in_bounds_40912 = slt64(sext_i32_i64(local_tid_40902),
                                 stage1_num_groups_40875);
    
    int32_t skip_threads_40913;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_40912) {
            x_32422 = ((volatile __local
                        float *) scan_arr_mem_40906)[sext_i32_i64(local_tid_40902)];
            if ((local_tid_40902 - squot32(local_tid_40902, 32) * 32) == 0) {
                x_32421 = x_32422;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_40913 = 1;
        while (slt32(skip_threads_40913, 32)) {
            if (sle32(skip_threads_40913, local_tid_40902 -
                      squot32(local_tid_40902, 32) * 32) &&
                ltid_in_bounds_40912) {
                // read operands
                {
                    x_32421 = ((volatile __local
                                float *) scan_arr_mem_40906)[sext_i32_i64(local_tid_40902) -
                                                             sext_i32_i64(skip_threads_40913)];
                }
                // perform operation
                {
                    bool inactive_40914 =
                         slt64(srem64((sext_i32_i64(local_tid_40902) + 1) *
                                      (segscan_group_sizze_32417 *
                                       sdiv_up64(m_27116 * iota32_arg_27515,
                                                 sext_i32_i64(num_threads_40876))) -
                                      1, iota32_arg_27515),
                               (sext_i32_i64(local_tid_40902) + 1) *
                               (segscan_group_sizze_32417 * sdiv_up64(m_27116 *
                                                                      iota32_arg_27515,
                                                                      sext_i32_i64(num_threads_40876))) -
                               1 - ((sext_i32_i64(local_tid_40902 -
                                     skip_threads_40913) + 1) *
                                    (segscan_group_sizze_32417 *
                                     sdiv_up64(m_27116 * iota32_arg_27515,
                                               sext_i32_i64(num_threads_40876))) -
                                    1));
                    
                    if (inactive_40914) {
                        x_32421 = x_32422;
                    }
                    if (!inactive_40914) {
                        float defunc_1_op_res_32423 = x_32421 + x_32422;
                        
                        x_32421 = defunc_1_op_res_32423;
                    }
                }
            }
            if (sle32(wave_sizze_40904, skip_threads_40913)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_40913, local_tid_40902 -
                      squot32(local_tid_40902, 32) * 32) &&
                ltid_in_bounds_40912) {
                // write result
                {
                    ((volatile __local
                      float *) scan_arr_mem_40906)[sext_i32_i64(local_tid_40902)] =
                        x_32421;
                    x_32422 = x_32421;
                }
            }
            if (sle32(wave_sizze_40904, skip_threads_40913)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_40913 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_40902 - squot32(local_tid_40902, 32) * 32) == 31 &&
            ltid_in_bounds_40912) {
            ((volatile __local
              float *) scan_arr_mem_40906)[sext_i32_i64(squot32(local_tid_40902,
                                                                32))] = x_32421;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_40915;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_40902, 32) == 0 && ltid_in_bounds_40912) {
                x_40910 = ((volatile __local
                            float *) scan_arr_mem_40906)[sext_i32_i64(local_tid_40902)];
                if ((local_tid_40902 - squot32(local_tid_40902, 32) * 32) ==
                    0) {
                    x_40909 = x_40910;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_40915 = 1;
            while (slt32(skip_threads_40915, 32)) {
                if (sle32(skip_threads_40915, local_tid_40902 -
                          squot32(local_tid_40902, 32) * 32) &&
                    (squot32(local_tid_40902, 32) == 0 &&
                     ltid_in_bounds_40912)) {
                    // read operands
                    {
                        x_40909 = ((volatile __local
                                    float *) scan_arr_mem_40906)[sext_i32_i64(local_tid_40902) -
                                                                 sext_i32_i64(skip_threads_40915)];
                    }
                    // perform operation
                    {
                        bool inactive_40916 =
                             slt64(srem64((sext_i32_i64(local_tid_40902 * 32 +
                                           32 - 1) + 1) *
                                          (segscan_group_sizze_32417 *
                                           sdiv_up64(m_27116 * iota32_arg_27515,
                                                     sext_i32_i64(num_threads_40876))) -
                                          1, iota32_arg_27515),
                                   (sext_i32_i64(local_tid_40902 * 32 + 32 -
                                    1) + 1) * (segscan_group_sizze_32417 *
                                               sdiv_up64(m_27116 *
                                                         iota32_arg_27515,
                                                         sext_i32_i64(num_threads_40876))) -
                                   1 - ((sext_i32_i64((local_tid_40902 -
                                                       skip_threads_40915) *
                                         32 + 32 - 1) + 1) *
                                        (segscan_group_sizze_32417 *
                                         sdiv_up64(m_27116 * iota32_arg_27515,
                                                   sext_i32_i64(num_threads_40876))) -
                                        1));
                        
                        if (inactive_40916) {
                            x_40909 = x_40910;
                        }
                        if (!inactive_40916) {
                            float defunc_1_op_res_40911 = x_40909 + x_40910;
                            
                            x_40909 = defunc_1_op_res_40911;
                        }
                    }
                }
                if (sle32(wave_sizze_40904, skip_threads_40915)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_40915, local_tid_40902 -
                          squot32(local_tid_40902, 32) * 32) &&
                    (squot32(local_tid_40902, 32) == 0 &&
                     ltid_in_bounds_40912)) {
                    // write result
                    {
                        ((volatile __local
                          float *) scan_arr_mem_40906)[sext_i32_i64(local_tid_40902)] =
                            x_40909;
                        x_40910 = x_40909;
                    }
                }
                if (sle32(wave_sizze_40904, skip_threads_40915)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_40915 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_40902, 32) == 0 || !ltid_in_bounds_40912)) {
            // read operands
            {
                x_32422 = x_32421;
                x_32421 = ((__local
                            float *) scan_arr_mem_40906)[sext_i32_i64(squot32(local_tid_40902,
                                                                              32)) -
                                                         1];
            }
            // perform operation
            {
                bool inactive_40917 =
                     slt64(srem64((sext_i32_i64(local_tid_40902) + 1) *
                                  (segscan_group_sizze_32417 *
                                   sdiv_up64(m_27116 * iota32_arg_27515,
                                             sext_i32_i64(num_threads_40876))) -
                                  1, iota32_arg_27515),
                           (sext_i32_i64(local_tid_40902) + 1) *
                           (segscan_group_sizze_32417 * sdiv_up64(m_27116 *
                                                                  iota32_arg_27515,
                                                                  sext_i32_i64(num_threads_40876))) -
                           1 - ((sext_i32_i64(squot32(local_tid_40902, 32) *
                                 32 - 1) + 1) * (segscan_group_sizze_32417 *
                                                 sdiv_up64(m_27116 *
                                                           iota32_arg_27515,
                                                           sext_i32_i64(num_threads_40876))) -
                                1));
                
                if (inactive_40917) {
                    x_32421 = x_32422;
                }
                if (!inactive_40917) {
                    float defunc_1_op_res_32423 = x_32421 + x_32422;
                    
                    x_32421 = defunc_1_op_res_32423;
                }
            }
            // write final result
            {
                ((__local
                  float *) scan_arr_mem_40906)[sext_i32_i64(local_tid_40902)] =
                    x_32421;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_40902, 32) == 0) {
            ((__local
              float *) scan_arr_mem_40906)[sext_i32_i64(local_tid_40902)] =
                x_32422;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_32330, m_27116) && slt64(gtid_32338, iota32_arg_27515)) {
            ((__global float *) mem_39642)[gtid_32330 * iota32_arg_27515 +
                                           gtid_32338] = ((__local
                                                           float *) scan_arr_mem_40906)[sext_i32_i64(local_tid_40902)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_32417
}
__kernel void mainDetailedziscan_stage3_30751(__global int *global_failure,
                                              int64_t N_27115, int64_t m_27116,
                                              int64_t num_groups_30769, __global
                                              unsigned char *mem_39469,
                                              int32_t num_threads_40505,
                                              int32_t required_groups_40547)
{
    #define segscan_group_sizze_30768 (mainDetailedzisegscan_group_sizze_30745)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40548;
    int32_t local_tid_40549;
    int64_t group_sizze_40552;
    int32_t wave_sizze_40551;
    int32_t group_tid_40550;
    
    global_tid_40548 = get_global_id(0);
    local_tid_40549 = get_local_id(0);
    group_sizze_40552 = get_local_size(0);
    wave_sizze_40551 = LOCKSTEP_WIDTH;
    group_tid_40550 = get_group_id(0);
    
    int32_t phys_tid_30751;
    
    phys_tid_30751 = global_tid_40548;
    
    int32_t phys_group_id_40553;
    
    phys_group_id_40553 = get_group_id(0);
    for (int32_t i_40554 = 0; i_40554 < sdiv_up32(required_groups_40547 -
                                                  phys_group_id_40553,
                                                  sext_i64_i32(num_groups_30769));
         i_40554++) {
        int32_t virt_group_id_40555 = phys_group_id_40553 + i_40554 *
                sext_i64_i32(num_groups_30769);
        int64_t flat_idx_40556 = sext_i32_i64(virt_group_id_40555) *
                segscan_group_sizze_30768 + sext_i32_i64(local_tid_40549);
        int64_t gtid_30742 = squot64(flat_idx_40556, N_27115);
        int64_t gtid_30750 = flat_idx_40556 - squot64(flat_idx_40556, N_27115) *
                N_27115;
        int64_t orig_group_40557 = squot64(flat_idx_40556,
                                           segscan_group_sizze_30768 *
                                           sdiv_up64(m_27116 * N_27115,
                                                     sext_i32_i64(num_threads_40505)));
        int64_t carry_in_flat_idx_40558 = orig_group_40557 *
                (segscan_group_sizze_30768 * sdiv_up64(m_27116 * N_27115,
                                                       sext_i32_i64(num_threads_40505))) -
                1;
        
        if (slt64(gtid_30742, m_27116) && slt64(gtid_30750, N_27115)) {
            if (!(orig_group_40557 == 0 || (flat_idx_40556 ==
                                            (orig_group_40557 + 1) *
                                            (segscan_group_sizze_30768 *
                                             sdiv_up64(m_27116 * N_27115,
                                                       sext_i32_i64(num_threads_40505))) -
                                            1 || slt64(srem64(flat_idx_40556,
                                                              N_27115),
                                                       flat_idx_40556 -
                                                       carry_in_flat_idx_40558)))) {
                int64_t x_30773;
                int64_t x_30774;
                
                x_30773 = ((__global
                            int64_t *) mem_39469)[squot64(carry_in_flat_idx_40558,
                                                          N_27115) * N_27115 +
                                                  (carry_in_flat_idx_40558 -
                                                   squot64(carry_in_flat_idx_40558,
                                                           N_27115) * N_27115)];
                x_30774 = ((__global int64_t *) mem_39469)[gtid_30742 *
                                                           N_27115 +
                                                           gtid_30750];
                
                int64_t defunc_1_op_res_30775;
                
                defunc_1_op_res_30775 = add64(x_30773, x_30774);
                x_30773 = defunc_1_op_res_30775;
                ((__global int64_t *) mem_39469)[gtid_30742 * N_27115 +
                                                 gtid_30750] = x_30773;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_30768
}
__kernel void mainDetailedziscan_stage3_32339(__global int *global_failure,
                                              int64_t m_27116,
                                              int64_t iota32_arg_27515,
                                              int64_t num_groups_32418, __global
                                              unsigned char *mem_39642,
                                              int32_t num_threads_40876,
                                              int32_t required_groups_40918)
{
    #define segscan_group_sizze_32417 (mainDetailedzisegscan_group_sizze_32333)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40919;
    int32_t local_tid_40920;
    int64_t group_sizze_40923;
    int32_t wave_sizze_40922;
    int32_t group_tid_40921;
    
    global_tid_40919 = get_global_id(0);
    local_tid_40920 = get_local_id(0);
    group_sizze_40923 = get_local_size(0);
    wave_sizze_40922 = LOCKSTEP_WIDTH;
    group_tid_40921 = get_group_id(0);
    
    int32_t phys_tid_32339;
    
    phys_tid_32339 = global_tid_40919;
    
    int32_t phys_group_id_40924;
    
    phys_group_id_40924 = get_group_id(0);
    for (int32_t i_40925 = 0; i_40925 < sdiv_up32(required_groups_40918 -
                                                  phys_group_id_40924,
                                                  sext_i64_i32(num_groups_32418));
         i_40925++) {
        int32_t virt_group_id_40926 = phys_group_id_40924 + i_40925 *
                sext_i64_i32(num_groups_32418);
        int64_t flat_idx_40927 = sext_i32_i64(virt_group_id_40926) *
                segscan_group_sizze_32417 + sext_i32_i64(local_tid_40920);
        int64_t gtid_32330 = squot64(flat_idx_40927, iota32_arg_27515);
        int64_t gtid_32338 = flat_idx_40927 - squot64(flat_idx_40927,
                                                      iota32_arg_27515) *
                iota32_arg_27515;
        int64_t orig_group_40928 = squot64(flat_idx_40927,
                                           segscan_group_sizze_32417 *
                                           sdiv_up64(m_27116 * iota32_arg_27515,
                                                     sext_i32_i64(num_threads_40876)));
        int64_t carry_in_flat_idx_40929 = orig_group_40928 *
                (segscan_group_sizze_32417 * sdiv_up64(m_27116 *
                                                       iota32_arg_27515,
                                                       sext_i32_i64(num_threads_40876))) -
                1;
        
        if (slt64(gtid_32330, m_27116) && slt64(gtid_32338, iota32_arg_27515)) {
            if (!(orig_group_40928 == 0 || (flat_idx_40927 ==
                                            (orig_group_40928 + 1) *
                                            (segscan_group_sizze_32417 *
                                             sdiv_up64(m_27116 *
                                                       iota32_arg_27515,
                                                       sext_i32_i64(num_threads_40876))) -
                                            1 || slt64(srem64(flat_idx_40927,
                                                              iota32_arg_27515),
                                                       flat_idx_40927 -
                                                       carry_in_flat_idx_40929)))) {
                float x_32421;
                float x_32422;
                
                x_32421 = ((__global
                            float *) mem_39642)[squot64(carry_in_flat_idx_40929,
                                                        iota32_arg_27515) *
                                                iota32_arg_27515 +
                                                (carry_in_flat_idx_40929 -
                                                 squot64(carry_in_flat_idx_40929,
                                                         iota32_arg_27515) *
                                                 iota32_arg_27515)];
                x_32422 = ((__global float *) mem_39642)[gtid_32330 *
                                                         iota32_arg_27515 +
                                                         gtid_32338];
                
                float defunc_1_op_res_32423;
                
                defunc_1_op_res_32423 = x_32421 + x_32422;
                x_32421 = defunc_1_op_res_32423;
                ((__global float *) mem_39642)[gtid_32330 * iota32_arg_27515 +
                                               gtid_32338] = x_32421;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_32417
}
__kernel void mainDetailedzisegmap_28674(__global int *global_failure,
                                         int64_t N_27115, float freq_27121,
                                         int64_t i32_res_27135, __global
                                         unsigned char *mappingindices_mem_38681,
                                         __global unsigned char *mem_38686)
{
    #define segmap_group_sizze_28747 (mainDetailedzisegmap_group_sizze_28677)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_39912;
    int32_t local_tid_39913;
    int64_t group_sizze_39916;
    int32_t wave_sizze_39915;
    int32_t group_tid_39914;
    
    global_tid_39912 = get_global_id(0);
    local_tid_39913 = get_local_id(0);
    group_sizze_39916 = get_local_size(0);
    wave_sizze_39915 = LOCKSTEP_WIDTH;
    group_tid_39914 = get_group_id(0);
    
    int32_t phys_tid_28674;
    
    phys_tid_28674 = global_tid_39912;
    
    int64_t gtid_28672;
    
    gtid_28672 = squot64(sext_i32_i64(group_tid_39914) *
                         segmap_group_sizze_28747 +
                         sext_i32_i64(local_tid_39913), N_27115);
    
    int64_t gtid_28673;
    
    gtid_28673 = sext_i32_i64(group_tid_39914) * segmap_group_sizze_28747 +
        sext_i32_i64(local_tid_39913) - squot64(sext_i32_i64(group_tid_39914) *
                                                segmap_group_sizze_28747 +
                                                sext_i32_i64(local_tid_39913),
                                                N_27115) * N_27115;
    if (slt64(gtid_28672, i32_res_27135) && slt64(gtid_28673, N_27115)) {
        int32_t index_primexp_36676 = sext_i64_i32(gtid_28672);
        bool index_primexp_36673 = index_primexp_36676 == 0;
        float defunc_0_f_res_28753;
        
        if (index_primexp_36673) {
            defunc_0_f_res_28753 = 1.0F;
        } else {
            int32_t x_28752 = ((__global
                                int32_t *) mappingindices_mem_38681)[gtid_28673];
            bool cond_28754 = index_primexp_36676 == 1;
            float defunc_0_f_res_f_res_28755;
            
            if (cond_28754) {
                float i32_res_28756 = sitofp_i32_f32(x_28752);
                
                defunc_0_f_res_f_res_28755 = i32_res_28756;
            } else {
                int32_t r32_arg_28757 = sdiv32(index_primexp_36676, 2);
                float i32_res_28758 = sitofp_i32_f32(r32_arg_28757);
                float i32_res_28759 = sitofp_i32_f32(x_28752);
                float x_28760 = 6.2831855F * i32_res_28758;
                float x_28761 = i32_res_28759 * x_28760;
                float angle_28762 = x_28761 / freq_27121;
                int32_t x_28763 = smod32(index_primexp_36676, 2);
                bool cond_28764 = x_28763 == 0;
                float defunc_0_f_res_f_res_f_res_28765;
                
                if (cond_28764) {
                    float sin_res_28766;
                    
                    sin_res_28766 = futrts_sin32(angle_28762);
                    defunc_0_f_res_f_res_f_res_28765 = sin_res_28766;
                } else {
                    float cos_res_28767;
                    
                    cos_res_28767 = futrts_cos32(angle_28762);
                    defunc_0_f_res_f_res_f_res_28765 = cos_res_28767;
                }
                defunc_0_f_res_f_res_28755 = defunc_0_f_res_f_res_f_res_28765;
            }
            defunc_0_f_res_28753 = defunc_0_f_res_f_res_28755;
        }
        ((__global float *) mem_38686)[gtid_28672 * N_27115 + gtid_28673] =
            defunc_0_f_res_28753;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_28747
}
__kernel void mainDetailedzisegmap_28852(__global int *global_failure,
                                         int64_t N_27115, float freq_27121,
                                         int64_t i32_res_27135, __global
                                         unsigned char *mappingindices_mem_38681,
                                         __global unsigned char *mem_38690)
{
    #define segmap_group_sizze_28921 (mainDetailedzisegmap_group_sizze_28855)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_39917;
    int32_t local_tid_39918;
    int64_t group_sizze_39921;
    int32_t wave_sizze_39920;
    int32_t group_tid_39919;
    
    global_tid_39917 = get_global_id(0);
    local_tid_39918 = get_local_id(0);
    group_sizze_39921 = get_local_size(0);
    wave_sizze_39920 = LOCKSTEP_WIDTH;
    group_tid_39919 = get_group_id(0);
    
    int32_t phys_tid_28852;
    
    phys_tid_28852 = global_tid_39917;
    
    int64_t gtid_28850;
    
    gtid_28850 = squot64(sext_i32_i64(group_tid_39919) *
                         segmap_group_sizze_28921 +
                         sext_i32_i64(local_tid_39918), N_27115);
    
    int64_t gtid_28851;
    
    gtid_28851 = sext_i32_i64(group_tid_39919) * segmap_group_sizze_28921 +
        sext_i32_i64(local_tid_39918) - squot64(sext_i32_i64(group_tid_39919) *
                                                segmap_group_sizze_28921 +
                                                sext_i32_i64(local_tid_39918),
                                                N_27115) * N_27115;
    if (slt64(gtid_28850, i32_res_27135) && slt64(gtid_28851, N_27115)) {
        int32_t index_primexp_36685 = sext_i64_i32(gtid_28850);
        bool index_primexp_36682 = index_primexp_36685 == 0;
        float defunc_0_f_res_28927;
        
        if (index_primexp_36682) {
            defunc_0_f_res_28927 = 1.0F;
        } else {
            int32_t x_28926 = ((__global
                                int32_t *) mappingindices_mem_38681)[gtid_28851];
            int32_t i_28928 = add32(1, index_primexp_36685);
            int32_t r32_arg_28929 = sdiv32(i_28928, 2);
            float i32_res_28930 = sitofp_i32_f32(r32_arg_28929);
            float i32_res_28931 = sitofp_i32_f32(x_28926);
            float x_28932 = 6.2831855F * i32_res_28930;
            float x_28933 = i32_res_28931 * x_28932;
            float angle_28934 = x_28933 / freq_27121;
            int32_t x_28935 = smod32(i_28928, 2);
            bool cond_28936 = x_28935 == 0;
            float defunc_0_f_res_f_res_28937;
            
            if (cond_28936) {
                float sin_res_28938;
                
                sin_res_28938 = futrts_sin32(angle_28934);
                defunc_0_f_res_f_res_28937 = sin_res_28938;
            } else {
                float cos_res_28939;
                
                cos_res_28939 = futrts_cos32(angle_28934);
                defunc_0_f_res_f_res_28937 = cos_res_28939;
            }
            defunc_0_f_res_28927 = defunc_0_f_res_f_res_28937;
        }
        ((__global float *) mem_38690)[gtid_28850 * N_27115 + gtid_28851] =
            defunc_0_f_res_28927;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_28921
}
__kernel void mainDetailedzisegmap_28980(__global int *global_failure,
                                         int64_t N_27115, int64_t i32_res_27135,
                                         float i32_res_27200, __global
                                         unsigned char *mem_38694, __global
                                         unsigned char *mem_38698)
{
    #define segmap_group_sizze_29004 (mainDetailedzisegmap_group_sizze_28983)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_39922;
    int32_t local_tid_39923;
    int64_t group_sizze_39926;
    int32_t wave_sizze_39925;
    int32_t group_tid_39924;
    
    global_tid_39922 = get_global_id(0);
    local_tid_39923 = get_local_id(0);
    group_sizze_39926 = get_local_size(0);
    wave_sizze_39925 = LOCKSTEP_WIDTH;
    group_tid_39924 = get_group_id(0);
    
    int32_t phys_tid_28980;
    
    phys_tid_28980 = global_tid_39922;
    
    int64_t gtid_28978;
    
    gtid_28978 = squot64(sext_i32_i64(group_tid_39924) *
                         segmap_group_sizze_29004 +
                         sext_i32_i64(local_tid_39923), i32_res_27135);
    
    int64_t gtid_28979;
    
    gtid_28979 = sext_i32_i64(group_tid_39924) * segmap_group_sizze_29004 +
        sext_i32_i64(local_tid_39923) - squot64(sext_i32_i64(group_tid_39924) *
                                                segmap_group_sizze_29004 +
                                                sext_i32_i64(local_tid_39923),
                                                i32_res_27135) * i32_res_27135;
    if (slt64(gtid_28978, N_27115) && slt64(gtid_28979, i32_res_27135)) {
        float x_29007 = ((__global float *) mem_38694)[gtid_28978 *
                                                       i32_res_27135 +
                                                       gtid_28979];
        float defunc_0_f_res_29008 = i32_res_27200 + x_29007;
        
        ((__global float *) mem_38698)[gtid_28978 * i32_res_27135 +
                                       gtid_28979] = defunc_0_f_res_29008;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_29004
}
__kernel void mainDetailedzisegmap_29013(__global int *global_failure,
                                         int64_t N_27115, int64_t m_27116,
                                         int32_t n_27120, int32_t k2p2zq_27133,
                                         int64_t i32_res_27135,
                                         int64_t num_groups_29038, __global
                                         unsigned char *binop_p_mem_38691,
                                         __global unsigned char *mem_38698,
                                         __global unsigned char *mem_38701,
                                         __global unsigned char *mem_38705,
                                         __global unsigned char *mem_38747)
{
    #define segmap_group_sizze_29037 (mainDetailedzisegmap_group_sizze_29015)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_39930;
    int32_t local_tid_39931;
    int64_t group_sizze_39934;
    int32_t wave_sizze_39933;
    int32_t group_tid_39932;
    
    global_tid_39930 = get_global_id(0);
    local_tid_39931 = get_local_id(0);
    group_sizze_39934 = get_local_size(0);
    wave_sizze_39933 = LOCKSTEP_WIDTH;
    group_tid_39932 = get_group_id(0);
    
    int32_t phys_tid_29013;
    
    phys_tid_29013 = global_tid_39930;
    
    int32_t phys_group_id_39935;
    
    phys_group_id_39935 = get_group_id(0);
    for (int32_t i_39936 = 0; i_39936 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27116, segmap_group_sizze_29037)) -
                   phys_group_id_39935, sext_i64_i32(num_groups_29038));
         i_39936++) {
        int32_t virt_group_id_39937 = phys_group_id_39935 + i_39936 *
                sext_i64_i32(num_groups_29038);
        int64_t gtid_29012 = sext_i32_i64(virt_group_id_39937) *
                segmap_group_sizze_29037 + sext_i32_i64(local_tid_39931);
        
        if (slt64(gtid_29012, m_27116)) {
            for (int32_t i_38663 = 0; i_38663 < k2p2zq_27133; i_38663++) {
                int64_t i_38611 = sext_i32_i64(i_38663);
                
                for (int32_t i_38662 = 0; i_38662 < k2p2zq_27133; i_38662++) {
                    int64_t i_38615 = sext_i32_i64(i_38662);
                    float defunc_2_reduce_res_29046;
                    float redout_38617 = 0.0F;
                    
                    for (int32_t i_38661 = 0; i_38661 < n_27120; i_38661++) {
                        int64_t i_38618 = sext_i32_i64(i_38661);
                        float x_29050 = ((__global float *) mem_38701)[i_38618 *
                                                                       m_27116 +
                                                                       gtid_29012];
                        float x_29051 = ((__global
                                          float *) binop_p_mem_38691)[i_38611 *
                                                                      N_27115 +
                                                                      i_38618];
                        float x_29052 = ((__global float *) mem_38698)[i_38618 *
                                                                       i32_res_27135 +
                                                                       i_38615];
                        float x_29053 = x_29051 * x_29052;
                        bool isnan_res_29054;
                        
                        isnan_res_29054 = futrts_isnan32(x_29050);
                        
                        float y_29055;
                        
                        if (isnan_res_29054) {
                            y_29055 = 0.0F;
                        } else {
                            y_29055 = 1.0F;
                        }
                        
                        float defunc_2_f_res_29056 = x_29053 * y_29055;
                        float defunc_1_op_res_29049 = defunc_2_f_res_29056 +
                              redout_38617;
                        float redout_tmp_39940 = defunc_1_op_res_29049;
                        
                        redout_38617 = redout_tmp_39940;
                    }
                    defunc_2_reduce_res_29046 = redout_38617;
                    ((__global float *) mem_38705)[phys_tid_29013 + (i_38611 *
                                                                     (num_groups_29038 *
                                                                      segmap_group_sizze_29037 *
                                                                      i32_res_27135) +
                                                                     i_38615 *
                                                                     (num_groups_29038 *
                                                                      segmap_group_sizze_29037))] =
                        defunc_2_reduce_res_29046;
                }
            }
            for (int64_t i_39941 = 0; i_39941 < i32_res_27135; i_39941++) {
                for (int64_t i_39942 = 0; i_39942 < i32_res_27135; i_39942++) {
                    ((__global float *) mem_38747)[i_39941 * (m_27116 *
                                                              i32_res_27135) +
                                                   i_39942 * m_27116 +
                                                   gtid_29012] = ((__global
                                                                   float *) mem_38705)[phys_tid_29013 +
                                                                                       (i_39941 *
                                                                                        (num_groups_29038 *
                                                                                         segmap_group_sizze_29037 *
                                                                                         i32_res_27135) +
                                                                                        i_39942 *
                                                                                        (num_groups_29038 *
                                                                                         segmap_group_sizze_29037))];
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_29037
}
__kernel void mainDetailedzisegmap_29059(__global int *global_failure,
                                         int64_t m_27116, int64_t N_27117,
                                         int32_t n_27120, int32_t k2p2zq_27133,
                                         int64_t i32_res_27135,
                                         int64_t num_groups_29215, __global
                                         unsigned char *images_mem_38682,
                                         __global unsigned char *mem_38694,
                                         __global unsigned char *mem_38698,
                                         __global unsigned char *mem_38750,
                                         __global unsigned char *mem_38766)
{
    #define segmap_group_sizze_29214 (mainDetailedzisegmap_group_sizze_29062)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_39943;
    int32_t local_tid_39944;
    int64_t group_sizze_39947;
    int32_t wave_sizze_39946;
    int32_t group_tid_39945;
    
    global_tid_39943 = get_global_id(0);
    local_tid_39944 = get_local_id(0);
    group_sizze_39947 = get_local_size(0);
    wave_sizze_39946 = LOCKSTEP_WIDTH;
    group_tid_39945 = get_group_id(0);
    
    int32_t phys_tid_29059;
    
    phys_tid_29059 = global_tid_39943;
    
    int32_t phys_group_id_39948;
    
    phys_group_id_39948 = get_group_id(0);
    for (int32_t i_39949 = 0; i_39949 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27116 * i32_res_27135,
                                          segmap_group_sizze_29214)) -
                   phys_group_id_39948, sext_i64_i32(num_groups_29215));
         i_39949++) {
        int32_t virt_group_id_39950 = phys_group_id_39948 + i_39949 *
                sext_i64_i32(num_groups_29215);
        int64_t gtid_29057 = squot64(sext_i32_i64(virt_group_id_39950) *
                                     segmap_group_sizze_29214 +
                                     sext_i32_i64(local_tid_39944),
                                     i32_res_27135);
        int64_t gtid_29058 = sext_i32_i64(virt_group_id_39950) *
                segmap_group_sizze_29214 + sext_i32_i64(local_tid_39944) -
                squot64(sext_i32_i64(virt_group_id_39950) *
                        segmap_group_sizze_29214 +
                        sext_i32_i64(local_tid_39944), i32_res_27135) *
                i32_res_27135;
        
        if (slt64(gtid_29057, m_27116) && slt64(gtid_29058, i32_res_27135)) {
            for (int32_t i_38665 = 0; i_38665 < k2p2zq_27133; i_38665++) {
                int64_t i_38621 = sext_i32_i64(i_38665);
                float defunc_2_reduce_res_29226;
                float redout_38623 = 0.0F;
                
                for (int32_t i_38664 = 0; i_38664 < n_27120; i_38664++) {
                    int64_t i_38624 = sext_i32_i64(i_38664);
                    float x_29230 = ((__global
                                      float *) images_mem_38682)[gtid_29057 *
                                                                 N_27117 +
                                                                 i_38624];
                    float x_29231 = ((__global float *) mem_38694)[i_38624 *
                                                                   i32_res_27135 +
                                                                   gtid_29058];
                    float x_29232 = ((__global float *) mem_38698)[i_38624 *
                                                                   i32_res_27135 +
                                                                   i_38621];
                    float x_29233 = x_29231 * x_29232;
                    bool isnan_res_29234;
                    
                    isnan_res_29234 = futrts_isnan32(x_29230);
                    
                    float y_29235;
                    
                    if (isnan_res_29234) {
                        y_29235 = 0.0F;
                    } else {
                        y_29235 = 1.0F;
                    }
                    
                    float defunc_2_f_res_29236 = x_29233 * y_29235;
                    float defunc_1_op_res_29229 = defunc_2_f_res_29236 +
                          redout_38623;
                    float redout_tmp_39952 = defunc_1_op_res_29229;
                    
                    redout_38623 = redout_tmp_39952;
                }
                defunc_2_reduce_res_29226 = redout_38623;
                ((__global float *) mem_38750)[phys_tid_29059 + i_38621 *
                                               (num_groups_29215 *
                                                segmap_group_sizze_29214)] =
                    defunc_2_reduce_res_29226;
            }
            for (int64_t i_39953 = 0; i_39953 < i32_res_27135; i_39953++) {
                ((__global float *) mem_38766)[i_39953 * (i32_res_27135 *
                                                          m_27116) +
                                               gtid_29057 * i32_res_27135 +
                                               gtid_29058] = ((__global
                                                               float *) mem_38750)[phys_tid_29059 +
                                                                                   i_39953 *
                                                                                   (num_groups_29215 *
                                                                                    segmap_group_sizze_29214)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_29214
}
__kernel void mainDetailedzisegmap_29543(__global int *global_failure,
                                         int64_t m_27116, int64_t i32_res_27135,
                                         int64_t i32_res_27268,
                                         int64_t i32_res_27283, int64_t x_27284,
                                         int64_t j_m_i_27287,
                                         int64_t gauss_jordan_res_r_ixfn_38918,
                                         int64_t gauss_jordan_res_r_ixfn_38919,
                                         int64_t gauss_jordan_res_r_ixfn_38921,
                                         __global
                                         unsigned char *gauss_jordan_res_r_mem_38923,
                                         __global unsigned char *mem_38928)
{
    #define segmap_group_sizze_30094 (mainDetailedzisegmap_group_sizze_29547)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40109;
    int32_t local_tid_40110;
    int64_t group_sizze_40113;
    int32_t wave_sizze_40112;
    int32_t group_tid_40111;
    
    global_tid_40109 = get_global_id(0);
    local_tid_40110 = get_local_id(0);
    group_sizze_40113 = get_local_size(0);
    wave_sizze_40112 = LOCKSTEP_WIDTH;
    group_tid_40111 = get_group_id(0);
    
    int32_t phys_tid_29543;
    
    phys_tid_29543 = global_tid_40109;
    
    int64_t gtid_29540;
    
    gtid_29540 = squot64(sext_i32_i64(group_tid_40111) *
                         segmap_group_sizze_30094 +
                         sext_i32_i64(local_tid_40110), i32_res_27135 *
                         j_m_i_27287);
    
    int64_t gtid_slice_29538;
    
    gtid_slice_29538 = squot64(sext_i32_i64(group_tid_40111) *
                               segmap_group_sizze_30094 +
                               sext_i32_i64(local_tid_40110) -
                               squot64(sext_i32_i64(group_tid_40111) *
                                       segmap_group_sizze_30094 +
                                       sext_i32_i64(local_tid_40110),
                                       i32_res_27135 * j_m_i_27287) *
                               (i32_res_27135 * j_m_i_27287), j_m_i_27287);
    
    int64_t gtid_slice_29539;
    
    gtid_slice_29539 = sext_i32_i64(group_tid_40111) *
        segmap_group_sizze_30094 + sext_i32_i64(local_tid_40110) -
        squot64(sext_i32_i64(group_tid_40111) * segmap_group_sizze_30094 +
                sext_i32_i64(local_tid_40110), i32_res_27135 * j_m_i_27287) *
        (i32_res_27135 * j_m_i_27287) - squot64(sext_i32_i64(group_tid_40111) *
                                                segmap_group_sizze_30094 +
                                                sext_i32_i64(local_tid_40110) -
                                                squot64(sext_i32_i64(group_tid_40111) *
                                                        segmap_group_sizze_30094 +
                                                        sext_i32_i64(local_tid_40110),
                                                        i32_res_27135 *
                                                        j_m_i_27287) *
                                                (i32_res_27135 * j_m_i_27287),
                                                j_m_i_27287) * j_m_i_27287;
    if ((slt64(gtid_29540, m_27116) && slt64(gtid_slice_29538,
                                             i32_res_27135)) &&
        slt64(gtid_slice_29539, j_m_i_27287)) {
        int64_t slice_30098 = i32_res_27135 + gtid_slice_29539;
        int64_t binop_x_36755 = x_27284 * gtid_29540;
        int64_t binop_y_36756 = i32_res_27283 * gtid_slice_29538;
        int64_t binop_x_36757 = binop_x_36755 + binop_y_36756;
        int64_t binop_x_36758 = slice_30098 + binop_x_36757;
        int64_t new_index_36759 = squot64(binop_x_36758, i32_res_27268);
        int64_t binop_y_36771 = i32_res_27268 * new_index_36759;
        int64_t new_index_36772 = binop_x_36758 - binop_y_36771;
        float v_30099 = ((__global
                          float *) gauss_jordan_res_r_mem_38923)[gauss_jordan_res_r_ixfn_38918 +
                                                                 (new_index_36759 *
                                                                  gauss_jordan_res_r_ixfn_38919 +
                                                                  new_index_36772 *
                                                                  gauss_jordan_res_r_ixfn_38921)];
        
        ((__global float *) mem_38928)[gtid_29540 * (j_m_i_27287 *
                                                     i32_res_27135) +
                                       gtid_slice_29538 * j_m_i_27287 +
                                       gtid_slice_29539] = v_30099;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30094
}
__kernel void mainDetailedzisegmap_29709(__global int *global_failure,
                                         int64_t m_27116, int64_t i32_res_27268,
                                         int64_t ctx_param_ext_38881,
                                         int64_t ctx_param_ext_38882,
                                         int64_t ctx_param_ext_38884, __global
                                         unsigned char *mem_param_38886,
                                         __global unsigned char *mem_38906)
{
    #define segmap_group_sizze_30082 (mainDetailedzisegmap_group_sizze_29712)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40103;
    int32_t local_tid_40104;
    int64_t group_sizze_40107;
    int32_t wave_sizze_40106;
    int32_t group_tid_40105;
    
    global_tid_40103 = get_global_id(0);
    local_tid_40104 = get_local_id(0);
    group_sizze_40107 = get_local_size(0);
    wave_sizze_40106 = LOCKSTEP_WIDTH;
    group_tid_40105 = get_group_id(0);
    
    int32_t phys_tid_29709;
    
    phys_tid_29709 = global_tid_40103;
    
    int64_t gtid_29707;
    
    gtid_29707 = squot64(sext_i32_i64(group_tid_40105) *
                         segmap_group_sizze_30082 +
                         sext_i32_i64(local_tid_40104), i32_res_27268);
    
    int64_t gtid_29708;
    
    gtid_29708 = sext_i32_i64(group_tid_40105) * segmap_group_sizze_30082 +
        sext_i32_i64(local_tid_40104) - squot64(sext_i32_i64(group_tid_40105) *
                                                segmap_group_sizze_30082 +
                                                sext_i32_i64(local_tid_40104),
                                                i32_res_27268) * i32_res_27268;
    if (slt64(gtid_29707, m_27116) && slt64(gtid_29708, i32_res_27268)) {
        float write_value_30088 = ((__global float *) mem_38906)[gtid_29707 *
                                                                 i32_res_27268 +
                                                                 gtid_29708];
        
        if ((sle64(0, gtid_29707) && slt64(gtid_29707, m_27116)) && (sle64(0,
                                                                           gtid_29708) &&
                                                                     slt64(gtid_29708,
                                                                           i32_res_27268))) {
            ((__global float *) mem_param_38886)[ctx_param_ext_38881 +
                                                 (gtid_29707 *
                                                  ctx_param_ext_38882 +
                                                  gtid_29708 *
                                                  ctx_param_ext_38884)] =
                write_value_30088;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30082
}
__kernel void mainDetailedzisegmap_29763(__global int *global_failure,
                                         int64_t m_27116, int32_t k2p2zq_27133,
                                         int32_t m_27266, int64_t i32_res_27268,
                                         int32_t i_29985, int64_t i32_res_29987,
                                         int64_t ctx_param_ext_38881,
                                         int64_t ctx_param_ext_38882,
                                         int64_t ctx_param_ext_38884, __global
                                         unsigned char *mem_param_38886,
                                         __global unsigned char *mem_38902,
                                         __global unsigned char *mem_38906)
{
    #define segmap_group_sizze_30048 (mainDetailedzisegmap_group_sizze_29766)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40098;
    int32_t local_tid_40099;
    int64_t group_sizze_40102;
    int32_t wave_sizze_40101;
    int32_t group_tid_40100;
    
    global_tid_40098 = get_global_id(0);
    local_tid_40099 = get_local_id(0);
    group_sizze_40102 = get_local_size(0);
    wave_sizze_40101 = LOCKSTEP_WIDTH;
    group_tid_40100 = get_group_id(0);
    
    int32_t phys_tid_29763;
    
    phys_tid_29763 = global_tid_40098;
    
    int64_t gtid_29761;
    
    gtid_29761 = squot64(sext_i32_i64(group_tid_40100) *
                         segmap_group_sizze_30048 +
                         sext_i32_i64(local_tid_40099), i32_res_27268);
    
    int64_t gtid_29762;
    
    gtid_29762 = sext_i32_i64(group_tid_40100) * segmap_group_sizze_30048 +
        sext_i32_i64(local_tid_40099) - squot64(sext_i32_i64(group_tid_40100) *
                                                segmap_group_sizze_30048 +
                                                sext_i32_i64(local_tid_40099),
                                                i32_res_27268) * i32_res_27268;
    if (slt64(gtid_29761, m_27116) && slt64(gtid_29762, i32_res_27268)) {
        bool cond_30053 = ((__global bool *) mem_38902)[gtid_29761];
        int32_t defunc_0_f_res_30055 = sext_i64_i32(gtid_29762);
        int32_t defunc_0_f_res_30056 = sdiv32(defunc_0_f_res_30055, m_27266);
        int32_t defunc_0_f_res_30057 = smod32(defunc_0_f_res_30055, m_27266);
        float defunc_0_f_res_30058;
        
        if (cond_30053) {
            int32_t x_30059 = mul32(m_27266, defunc_0_f_res_30056);
            int32_t i32_arg_30060 = add32(defunc_0_f_res_30057, x_30059);
            int64_t i32_res_30061 = sext_i32_i64(i32_arg_30060);
            float defunc_0_f_res_t_res_30062 = ((__global
                                                 float *) mem_param_38886)[ctx_param_ext_38881 +
                                                                           (gtid_29761 *
                                                                            ctx_param_ext_38882 +
                                                                            i32_res_30061 *
                                                                            ctx_param_ext_38884)];
            
            defunc_0_f_res_30058 = defunc_0_f_res_t_res_30062;
        } else {
            float v1_30052 = ((__global
                               float *) mem_param_38886)[ctx_param_ext_38881 +
                                                         (gtid_29761 *
                                                          ctx_param_ext_38882 +
                                                          i32_res_29987 *
                                                          ctx_param_ext_38884)];
            int64_t i32_res_30063 = sext_i32_i64(defunc_0_f_res_30057);
            float x_30064 = ((__global
                              float *) mem_param_38886)[ctx_param_ext_38881 +
                                                        (gtid_29761 *
                                                         ctx_param_ext_38882 +
                                                         i32_res_30063 *
                                                         ctx_param_ext_38884)];
            float x_30065 = x_30064 / v1_30052;
            int32_t y_30066 = sub32(k2p2zq_27133, 1);
            bool cond_30067 = slt32(defunc_0_f_res_30056, y_30066);
            float defunc_0_f_res_f_res_30068;
            
            if (cond_30067) {
                int32_t x_30069 = add32(1, defunc_0_f_res_30056);
                int32_t x_30070 = mul32(m_27266, x_30069);
                int32_t i32_arg_30071 = add32(defunc_0_f_res_30057, x_30070);
                int64_t i32_res_30072 = sext_i32_i64(i32_arg_30071);
                float x_30073 = ((__global
                                  float *) mem_param_38886)[ctx_param_ext_38881 +
                                                            (gtid_29761 *
                                                             ctx_param_ext_38882 +
                                                             i32_res_30072 *
                                                             ctx_param_ext_38884)];
                int32_t i32_arg_30074 = add32(i_29985, x_30070);
                int64_t i32_res_30075 = sext_i32_i64(i32_arg_30074);
                float x_30076 = ((__global
                                  float *) mem_param_38886)[ctx_param_ext_38881 +
                                                            (gtid_29761 *
                                                             ctx_param_ext_38882 +
                                                             i32_res_30075 *
                                                             ctx_param_ext_38884)];
                float y_30077 = x_30065 * x_30076;
                float defunc_0_f_res_f_res_t_res_30078 = x_30073 - y_30077;
                
                defunc_0_f_res_f_res_30068 = defunc_0_f_res_f_res_t_res_30078;
            } else {
                defunc_0_f_res_f_res_30068 = x_30065;
            }
            defunc_0_f_res_30058 = defunc_0_f_res_f_res_30068;
        }
        ((__global float *) mem_38906)[gtid_29761 * i32_res_27268 +
                                       gtid_29762] = defunc_0_f_res_30058;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30048
}
__kernel void mainDetailedzisegmap_29831(__global int *global_failure,
                                         int64_t m_27116, int64_t i32_res_29987,
                                         int64_t ctx_param_ext_38881,
                                         int64_t ctx_param_ext_38882,
                                         int64_t ctx_param_ext_38884, __global
                                         unsigned char *mem_param_38886,
                                         __global unsigned char *mem_38902)
{
    #define segmap_group_sizze_30032 (mainDetailedzisegmap_group_sizze_29833)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40093;
    int32_t local_tid_40094;
    int64_t group_sizze_40097;
    int32_t wave_sizze_40096;
    int32_t group_tid_40095;
    
    global_tid_40093 = get_global_id(0);
    local_tid_40094 = get_local_id(0);
    group_sizze_40097 = get_local_size(0);
    wave_sizze_40096 = LOCKSTEP_WIDTH;
    group_tid_40095 = get_group_id(0);
    
    int32_t phys_tid_29831;
    
    phys_tid_29831 = global_tid_40093;
    
    int64_t gtid_29830;
    
    gtid_29830 = sext_i32_i64(group_tid_40095) * segmap_group_sizze_30032 +
        sext_i32_i64(local_tid_40094);
    if (slt64(gtid_29830, m_27116)) {
        float v1_30037 = ((__global
                           float *) mem_param_38886)[ctx_param_ext_38881 +
                                                     (gtid_29830 *
                                                      ctx_param_ext_38882 +
                                                      i32_res_29987 *
                                                      ctx_param_ext_38884)];
        bool cond_30038 = v1_30037 == 0.0F;
        
        ((__global bool *) mem_38902)[gtid_29830] = cond_30038;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30032
}
__kernel void mainDetailedzisegmap_29924(__global int *global_failure,
                                         int64_t m_27116, int32_t k2p2zq_27133,
                                         int64_t i32_res_27135, int32_t m_27266,
                                         int64_t i32_res_27268, __global
                                         unsigned char *defunc_3_map_res_mem_38850,
                                         __global unsigned char *mem_38878)
{
    #define segmap_group_sizze_29968 (mainDetailedzisegmap_group_sizze_29927)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40060;
    int32_t local_tid_40061;
    int64_t group_sizze_40064;
    int32_t wave_sizze_40063;
    int32_t group_tid_40062;
    
    global_tid_40060 = get_global_id(0);
    local_tid_40061 = get_local_id(0);
    group_sizze_40064 = get_local_size(0);
    wave_sizze_40063 = LOCKSTEP_WIDTH;
    group_tid_40062 = get_group_id(0);
    
    int32_t phys_tid_29924;
    
    phys_tid_29924 = global_tid_40060;
    
    int64_t gtid_29922;
    
    gtid_29922 = squot64(sext_i32_i64(group_tid_40062) *
                         segmap_group_sizze_29968 +
                         sext_i32_i64(local_tid_40061), i32_res_27268);
    
    int64_t gtid_29923;
    
    gtid_29923 = sext_i32_i64(group_tid_40062) * segmap_group_sizze_29968 +
        sext_i32_i64(local_tid_40061) - squot64(sext_i32_i64(group_tid_40062) *
                                                segmap_group_sizze_29968 +
                                                sext_i32_i64(local_tid_40061),
                                                i32_res_27268) * i32_res_27268;
    if (slt64(gtid_29922, m_27116) && slt64(gtid_29923, i32_res_27268)) {
        int32_t index_primexp_36697 = sext_i64_i32(gtid_29923);
        int32_t defunc_0_f_res_29973 = sdiv32(index_primexp_36697, m_27266);
        int32_t defunc_0_f_res_29974 = smod32(index_primexp_36697, m_27266);
        bool cond_29975 = slt32(defunc_0_f_res_29974, k2p2zq_27133);
        float defunc_0_f_res_29976;
        
        if (cond_29975) {
            int64_t i_29977 = sext_i32_i64(defunc_0_f_res_29973);
            int64_t j_29978 = sext_i32_i64(defunc_0_f_res_29974);
            float defunc_0_f_res_t_res_29979 = ((__global
                                                 float *) defunc_3_map_res_mem_38850)[gtid_29922 *
                                                                                      (i32_res_27135 *
                                                                                       i32_res_27135) +
                                                                                      i_29977 *
                                                                                      i32_res_27135 +
                                                                                      j_29978];
            
            defunc_0_f_res_29976 = defunc_0_f_res_t_res_29979;
        } else {
            int32_t y_29980 = add32(k2p2zq_27133, defunc_0_f_res_29973);
            bool cond_29981 = defunc_0_f_res_29974 == y_29980;
            float defunc_0_f_res_f_res_29982;
            
            if (cond_29981) {
                defunc_0_f_res_f_res_29982 = 1.0F;
            } else {
                defunc_0_f_res_f_res_29982 = 0.0F;
            }
            defunc_0_f_res_29976 = defunc_0_f_res_f_res_29982;
        }
        ((__global float *) mem_38878)[gtid_29922 * i32_res_27268 +
                                       gtid_29923] = defunc_0_f_res_29976;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_29968
}
__kernel void mainDetailedzisegmap_30105(__global int *global_failure,
                                         int64_t N_27115, int64_t m_27116,
                                         int32_t n_27120, int32_t k2p2zq_27133,
                                         int64_t i32_res_27135,
                                         int64_t num_groups_30126, __global
                                         unsigned char *binop_p_mem_38691,
                                         __global unsigned char *mem_38932,
                                         __global unsigned char *mem_38935,
                                         __global unsigned char *mem_38950)
{
    #define segmap_group_sizze_30125 (mainDetailedzisegmap_group_sizze_30107)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40117;
    int32_t local_tid_40118;
    int64_t group_sizze_40121;
    int32_t wave_sizze_40120;
    int32_t group_tid_40119;
    
    global_tid_40117 = get_global_id(0);
    local_tid_40118 = get_local_id(0);
    group_sizze_40121 = get_local_size(0);
    wave_sizze_40120 = LOCKSTEP_WIDTH;
    group_tid_40119 = get_group_id(0);
    
    int32_t phys_tid_30105;
    
    phys_tid_30105 = global_tid_40117;
    
    int32_t phys_group_id_40122;
    
    phys_group_id_40122 = get_group_id(0);
    for (int32_t i_40123 = 0; i_40123 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27116, segmap_group_sizze_30125)) -
                   phys_group_id_40122, sext_i64_i32(num_groups_30126));
         i_40123++) {
        int32_t virt_group_id_40124 = phys_group_id_40122 + i_40123 *
                sext_i64_i32(num_groups_30126);
        int64_t gtid_30104 = sext_i32_i64(virt_group_id_40124) *
                segmap_group_sizze_30125 + sext_i32_i64(local_tid_40118);
        
        if (slt64(gtid_30104, m_27116)) {
            for (int32_t i_38667 = 0; i_38667 < k2p2zq_27133; i_38667++) {
                int64_t i_38627 = sext_i32_i64(i_38667);
                float defunc_2_reduce_res_30132;
                float redout_38629 = 0.0F;
                
                for (int32_t i_38666 = 0; i_38666 < n_27120; i_38666++) {
                    int64_t i_38630 = sext_i32_i64(i_38666);
                    float x_30137 = ((__global float *) mem_38932)[i_38630 *
                                                                   m_27116 +
                                                                   gtid_30104];
                    bool isnan_res_30138;
                    
                    isnan_res_30138 = futrts_isnan32(x_30137);
                    
                    float defunc_1_f_res_30139;
                    
                    if (isnan_res_30138) {
                        defunc_1_f_res_30139 = 0.0F;
                    } else {
                        float x_30136 = ((__global
                                          float *) binop_p_mem_38691)[i_38627 *
                                                                      N_27115 +
                                                                      i_38630];
                        float defunc_1_f_res_f_res_30140 = x_30136 * x_30137;
                        
                        defunc_1_f_res_30139 = defunc_1_f_res_f_res_30140;
                    }
                    
                    float defunc_1_op_res_30135 = defunc_1_f_res_30139 +
                          redout_38629;
                    float redout_tmp_40126 = defunc_1_op_res_30135;
                    
                    redout_38629 = redout_tmp_40126;
                }
                defunc_2_reduce_res_30132 = redout_38629;
                ((__global float *) mem_38935)[phys_tid_30105 + i_38627 *
                                               (num_groups_30126 *
                                                segmap_group_sizze_30125)] =
                    defunc_2_reduce_res_30132;
            }
            for (int64_t i_40127 = 0; i_40127 < i32_res_27135; i_40127++) {
                ((__global float *) mem_38950)[i_40127 * m_27116 + gtid_30104] =
                    ((__global float *) mem_38935)[phys_tid_30105 + i_40127 *
                                                   (num_groups_30126 *
                                                    segmap_group_sizze_30125)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30125
}
__kernel void mainDetailedzisegmap_30246(__global int *global_failure,
                                         int64_t m_27116, int32_t k2p2zq_27133,
                                         int64_t i32_res_27135,
                                         int64_t num_groups_30266, __global
                                         unsigned char *mem_39154, __global
                                         unsigned char *mem_39157, __global
                                         unsigned char *mem_39160, __global
                                         unsigned char *mem_39175)
{
    #define segmap_group_sizze_30265 (mainDetailedzisegmap_group_sizze_30248)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40249;
    int32_t local_tid_40250;
    int64_t group_sizze_40253;
    int32_t wave_sizze_40252;
    int32_t group_tid_40251;
    
    global_tid_40249 = get_global_id(0);
    local_tid_40250 = get_local_id(0);
    group_sizze_40253 = get_local_size(0);
    wave_sizze_40252 = LOCKSTEP_WIDTH;
    group_tid_40251 = get_group_id(0);
    
    int32_t phys_tid_30246;
    
    phys_tid_30246 = global_tid_40249;
    
    int32_t phys_group_id_40254;
    
    phys_group_id_40254 = get_group_id(0);
    for (int32_t i_40255 = 0; i_40255 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27116, segmap_group_sizze_30265)) -
                   phys_group_id_40254, sext_i64_i32(num_groups_30266));
         i_40255++) {
        int32_t virt_group_id_40256 = phys_group_id_40254 + i_40255 *
                sext_i64_i32(num_groups_30266);
        int64_t gtid_30245 = sext_i32_i64(virt_group_id_40256) *
                segmap_group_sizze_30265 + sext_i32_i64(local_tid_40250);
        
        if (slt64(gtid_30245, m_27116)) {
            for (int32_t i_38669 = 0; i_38669 < k2p2zq_27133; i_38669++) {
                int64_t i_38633 = sext_i32_i64(i_38669);
                float defunc_0_f_res_30273;
                float redout_38635 = 0.0F;
                
                for (int32_t i_38668 = 0; i_38668 < k2p2zq_27133; i_38668++) {
                    int64_t i_38636 = sext_i32_i64(i_38668);
                    float x_30277 = ((__global float *) mem_39157)[i_38636 *
                                                                   m_27116 +
                                                                   gtid_30245];
                    float x_30278 = ((__global float *) mem_39154)[i_38633 *
                                                                   (m_27116 *
                                                                    i32_res_27135) +
                                                                   i_38636 *
                                                                   m_27116 +
                                                                   gtid_30245];
                    float defunc_1_f_res_30279 = x_30277 * x_30278;
                    float defunc_1_op_res_30276 = defunc_1_f_res_30279 +
                          redout_38635;
                    float redout_tmp_40258 = defunc_1_op_res_30276;
                    
                    redout_38635 = redout_tmp_40258;
                }
                defunc_0_f_res_30273 = redout_38635;
                ((__global float *) mem_39160)[phys_tid_30246 + i_38633 *
                                               (num_groups_30266 *
                                                segmap_group_sizze_30265)] =
                    defunc_0_f_res_30273;
            }
            for (int64_t i_40259 = 0; i_40259 < i32_res_27135; i_40259++) {
                ((__global float *) mem_39175)[i_40259 * m_27116 + gtid_30245] =
                    ((__global float *) mem_39160)[phys_tid_30246 + i_40259 *
                                                   (num_groups_30266 *
                                                    segmap_group_sizze_30265)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30265
}
__kernel void mainDetailedzisegmap_30378(__global int *global_failure,
                                         int64_t N_27115, int64_t m_27116,
                                         int32_t k2p2zq_27133,
                                         int64_t i32_res_27135,
                                         int64_t num_groups_30397, __global
                                         unsigned char *mem_38698, __global
                                         unsigned char *mem_39219, __global
                                         unsigned char *mem_39222, __global
                                         unsigned char *mem_39237)
{
    #define segmap_group_sizze_30396 (mainDetailedzisegmap_group_sizze_30380)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40337;
    int32_t local_tid_40338;
    int64_t group_sizze_40341;
    int32_t wave_sizze_40340;
    int32_t group_tid_40339;
    
    global_tid_40337 = get_global_id(0);
    local_tid_40338 = get_local_id(0);
    group_sizze_40341 = get_local_size(0);
    wave_sizze_40340 = LOCKSTEP_WIDTH;
    group_tid_40339 = get_group_id(0);
    
    int32_t phys_tid_30378;
    
    phys_tid_30378 = global_tid_40337;
    
    int32_t phys_group_id_40342;
    
    phys_group_id_40342 = get_group_id(0);
    for (int32_t i_40343 = 0; i_40343 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27116, segmap_group_sizze_30396)) -
                   phys_group_id_40342, sext_i64_i32(num_groups_30397));
         i_40343++) {
        int32_t virt_group_id_40344 = phys_group_id_40342 + i_40343 *
                sext_i64_i32(num_groups_30397);
        int64_t gtid_30377 = sext_i32_i64(virt_group_id_40344) *
                segmap_group_sizze_30396 + sext_i32_i64(local_tid_40338);
        
        if (slt64(gtid_30377, m_27116)) {
            for (int64_t i_38643 = 0; i_38643 < N_27115; i_38643++) {
                float defunc_0_f_res_30403;
                float redout_38645 = 0.0F;
                
                for (int32_t i_38672 = 0; i_38672 < k2p2zq_27133; i_38672++) {
                    int64_t i_38646 = sext_i32_i64(i_38672);
                    float x_30407 = ((__global float *) mem_39219)[i_38646 *
                                                                   m_27116 +
                                                                   gtid_30377];
                    float x_30408 = ((__global float *) mem_38698)[i_38643 *
                                                                   i32_res_27135 +
                                                                   i_38646];
                    float defunc_1_f_res_30409 = x_30407 * x_30408;
                    float defunc_1_op_res_30406 = defunc_1_f_res_30409 +
                          redout_38645;
                    float redout_tmp_40346 = defunc_1_op_res_30406;
                    
                    redout_38645 = redout_tmp_40346;
                }
                defunc_0_f_res_30403 = redout_38645;
                ((__global float *) mem_39222)[phys_tid_30378 + i_38643 *
                                               (num_groups_30397 *
                                                segmap_group_sizze_30396)] =
                    defunc_0_f_res_30403;
            }
            for (int64_t i_40347 = 0; i_40347 < N_27115; i_40347++) {
                ((__global float *) mem_39237)[i_40347 * m_27116 + gtid_30377] =
                    ((__global float *) mem_39222)[phys_tid_30378 + i_40347 *
                                                   (num_groups_30397 *
                                                    segmap_group_sizze_30396)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30396
}
__kernel void mainDetailedzisegmap_30658(__global int *global_failure,
                                         int64_t N_27115, int64_t m_27116,
                                         __global unsigned char *mem_39443,
                                         __global unsigned char *mem_39446,
                                         __global unsigned char *mem_39469,
                                         __global unsigned char *mem_39472)
{
    #define segmap_group_sizze_30824 (mainDetailedzisegmap_group_sizze_30661)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40564;
    int32_t local_tid_40565;
    int64_t group_sizze_40568;
    int32_t wave_sizze_40567;
    int32_t group_tid_40566;
    
    global_tid_40564 = get_global_id(0);
    local_tid_40565 = get_local_id(0);
    group_sizze_40568 = get_local_size(0);
    wave_sizze_40567 = LOCKSTEP_WIDTH;
    group_tid_40566 = get_group_id(0);
    
    int32_t phys_tid_30658;
    
    phys_tid_30658 = global_tid_40564;
    
    int64_t gtid_30656;
    
    gtid_30656 = squot64(sext_i32_i64(group_tid_40566) *
                         segmap_group_sizze_30824 +
                         sext_i32_i64(local_tid_40565), N_27115);
    
    int64_t gtid_30657;
    
    gtid_30657 = sext_i32_i64(group_tid_40566) * segmap_group_sizze_30824 +
        sext_i32_i64(local_tid_40565) - squot64(sext_i32_i64(group_tid_40566) *
                                                segmap_group_sizze_30824 +
                                                sext_i32_i64(local_tid_40565),
                                                N_27115) * N_27115;
    if (slt64(gtid_30656, m_27116) && slt64(gtid_30657, N_27115)) {
        float x_30832 = ((__global float *) mem_39472)[gtid_30656 * N_27115 +
                                                       gtid_30657];
        int32_t index_primexp_36713 = sext_i64_i32(gtid_30657);
        bool isnan_res_30835;
        
        isnan_res_30835 = futrts_isnan32(x_30832);
        
        bool defunc_0_p_res_30836 = !isnan_res_30835;
        int64_t defunc_1_f_res_30837;
        
        if (defunc_0_p_res_30836) {
            int64_t x_30833 = ((__global int64_t *) mem_39469)[gtid_30656 *
                                                               N_27115 +
                                                               gtid_30657];
            int64_t defunc_1_f_res_t_res_30838 = sub64(x_30833, 1);
            
            defunc_1_f_res_30837 = defunc_1_f_res_t_res_30838;
        } else {
            defunc_1_f_res_30837 = -1;
        }
        if ((sle64(0, gtid_30656) && slt64(gtid_30656, m_27116)) && (sle64(0,
                                                                           defunc_1_f_res_30837) &&
                                                                     slt64(defunc_1_f_res_30837,
                                                                           N_27115))) {
            ((__global int32_t *) mem_39446)[gtid_30656 * N_27115 +
                                             defunc_1_f_res_30837] =
                index_primexp_36713;
        }
        if ((sle64(0, gtid_30656) && slt64(gtid_30656, m_27116)) && (sle64(0,
                                                                           defunc_1_f_res_30837) &&
                                                                     slt64(defunc_1_f_res_30837,
                                                                           N_27115))) {
            ((__global float *) mem_39443)[gtid_30656 * N_27115 +
                                           defunc_1_f_res_30837] = x_30832;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30824
}
__kernel void mainDetailedzisegmap_30734(__global int *global_failure,
                                         int64_t N_27115, int64_t m_27116,
                                         int64_t i_27395, __global
                                         unsigned char *mem_39469, __global
                                         unsigned char *mem_39475)
{
    #define segmap_group_sizze_30788 (mainDetailedzisegmap_group_sizze_30736)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40559;
    int32_t local_tid_40560;
    int64_t group_sizze_40563;
    int32_t wave_sizze_40562;
    int32_t group_tid_40561;
    
    global_tid_40559 = get_global_id(0);
    local_tid_40560 = get_local_id(0);
    group_sizze_40563 = get_local_size(0);
    wave_sizze_40562 = LOCKSTEP_WIDTH;
    group_tid_40561 = get_group_id(0);
    
    int32_t phys_tid_30734;
    
    phys_tid_30734 = global_tid_40559;
    
    int64_t gtid_30733;
    
    gtid_30733 = sext_i32_i64(group_tid_40561) * segmap_group_sizze_30788 +
        sext_i32_i64(local_tid_40560);
    if (slt64(gtid_30733, m_27116)) {
        int64_t last_res_30792 = ((__global int64_t *) mem_39469)[gtid_30733 *
                                                                  N_27115 +
                                                                  i_27395];
        int32_t defunc_0_f_res_30793 = sext_i64_i32(last_res_30792);
        
        ((__global int32_t *) mem_39475)[gtid_30733] = defunc_0_f_res_30793;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30788
}
__kernel void mainDetailedzisegmap_30985(__global int *global_failure,
                                         int64_t m_27116, float hfrac_27122,
                                         int32_t k2p2_27131, __global
                                         unsigned char *mem_39529, __global
                                         unsigned char *mem_39532, __global
                                         unsigned char *mem_39535, __global
                                         unsigned char *mem_39537)
{
    #define segmap_group_sizze_31070 (mainDetailedzisegmap_group_sizze_30987)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40719;
    int32_t local_tid_40720;
    int64_t group_sizze_40723;
    int32_t wave_sizze_40722;
    int32_t group_tid_40721;
    
    global_tid_40719 = get_global_id(0);
    local_tid_40720 = get_local_id(0);
    group_sizze_40723 = get_local_size(0);
    wave_sizze_40722 = LOCKSTEP_WIDTH;
    group_tid_40721 = get_group_id(0);
    
    int32_t phys_tid_30985;
    
    phys_tid_30985 = global_tid_40719;
    
    int64_t gtid_30984;
    
    gtid_30984 = sext_i32_i64(group_tid_40721) * segmap_group_sizze_31070 +
        sext_i32_i64(local_tid_40720);
    if (slt64(gtid_30984, m_27116)) {
        int32_t defunc_0_f_res_31074 = ((__global
                                         int32_t *) mem_39529)[gtid_30984];
        float defunc_0_f_res_31075 = ((__global float *) mem_39532)[gtid_30984];
        int32_t r32_arg_31076 = sub32(defunc_0_f_res_31074, k2p2_27131);
        float i32_res_31077 = sitofp_i32_f32(r32_arg_31076);
        float sqrt_arg_31078 = defunc_0_f_res_31075 / i32_res_31077;
        float sqrt_res_31079;
        
        sqrt_res_31079 = futrts_sqrt32(sqrt_arg_31078);
        
        float i32_res_31080 = sitofp_i32_f32(defunc_0_f_res_31074);
        float t32_arg_31081 = hfrac_27122 * i32_res_31080;
        int32_t f32_res_31082 = fptosi_f32_i32(t32_arg_31081);
        
        ((__global int32_t *) mem_39535)[gtid_30984] = f32_res_31082;
        ((__global float *) mem_39537)[gtid_30984] = sqrt_res_31079;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31070
}
__kernel void mainDetailedzisegmap_31256(__global int *global_failure,
                                         float lam_27123,
                                         int64_t iota32_arg_27515,
                                         int32_t x_27520, float i32_res_27528,
                                         __global
                                         unsigned char *mappingindices_mem_38681,
                                         __global unsigned char *mem_39579,
                                         __global unsigned char *mem_39581)
{
    #define segmap_group_sizze_31275 (mainDetailedzisegmap_group_sizze_31258)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40829;
    int32_t local_tid_40830;
    int64_t group_sizze_40833;
    int32_t wave_sizze_40832;
    int32_t group_tid_40831;
    
    global_tid_40829 = get_global_id(0);
    local_tid_40830 = get_local_id(0);
    group_sizze_40833 = get_local_size(0);
    wave_sizze_40832 = LOCKSTEP_WIDTH;
    group_tid_40831 = get_group_id(0);
    
    int32_t phys_tid_31256;
    
    phys_tid_31256 = global_tid_40829;
    
    int64_t gtid_31255;
    
    gtid_31255 = sext_i32_i64(group_tid_40831) * segmap_group_sizze_31275 +
        sext_i32_i64(local_tid_40830);
    if (slt64(gtid_31255, iota32_arg_27515)) {
        int32_t defunc_0_f_res_31280 = sext_i64_i32(gtid_31255);
        int32_t t_31281 = add32(x_27520, defunc_0_f_res_31280);
        int32_t i_31282 = sub32(t_31281, 1);
        int64_t i_31283 = sext_i32_i64(i_31282);
        int32_t time_31284 = ((__global
                               int32_t *) mappingindices_mem_38681)[i_31283];
        float i32_res_31285 = sitofp_i32_f32(time_31284);
        float logplus_arg_31286 = i32_res_31285 / i32_res_27528;
        bool cond_31287 = 2.7182817F < logplus_arg_31286;
        float logplus_res_31288;
        
        if (cond_31287) {
            float log_res_31289;
            
            log_res_31289 = futrts_log32(logplus_arg_31286);
            logplus_res_31288 = log_res_31289;
        } else {
            logplus_res_31288 = 1.0F;
        }
        
        float sqrt_res_31290;
        
        sqrt_res_31290 = futrts_sqrt32(logplus_res_31288);
        
        float defunc_0_f_res_31291 = lam_27123 * sqrt_res_31290;
        
        ((__global int32_t *) mem_39579)[gtid_31255] = defunc_0_f_res_31280;
        ((__global float *) mem_39581)[gtid_31255] = defunc_0_f_res_31291;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31275
}
__kernel void mainDetailedzisegmap_31984(__global int *global_failure,
                                         int64_t N_27115, int64_t m_27116,
                                         int32_t n_27120,
                                         int64_t iota32_arg_27515, __global
                                         unsigned char *defunc_4_map_res_mem_39479,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_39542,
                                         __global unsigned char *mem_39584,
                                         __global unsigned char *mem_39638,
                                         __global unsigned char *mem_39652)
{
    #define segmap_group_sizze_32680 (mainDetailedzisegmap_group_sizze_31987)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_41053;
    int32_t local_tid_41054;
    int64_t group_sizze_41057;
    int32_t wave_sizze_41056;
    int32_t group_tid_41055;
    
    global_tid_41053 = get_global_id(0);
    local_tid_41054 = get_local_id(0);
    group_sizze_41057 = get_local_size(0);
    wave_sizze_41056 = LOCKSTEP_WIDTH;
    group_tid_41055 = get_group_id(0);
    
    int32_t phys_tid_31984;
    
    phys_tid_31984 = global_tid_41053;
    
    int64_t gtid_31982;
    
    gtid_31982 = squot64(sext_i32_i64(group_tid_41055) *
                         segmap_group_sizze_32680 +
                         sext_i32_i64(local_tid_41054), iota32_arg_27515);
    
    int64_t gtid_31983;
    
    gtid_31983 = sext_i32_i64(group_tid_41055) * segmap_group_sizze_32680 +
        sext_i32_i64(local_tid_41054) - squot64(sext_i32_i64(group_tid_41055) *
                                                segmap_group_sizze_32680 +
                                                sext_i32_i64(local_tid_41054),
                                                iota32_arg_27515) *
        iota32_arg_27515;
    if (slt64(gtid_31982, m_27116) && slt64(gtid_31983, iota32_arg_27515)) {
        int32_t y_32685 = ((__global int32_t *) mem_39638)[gtid_31982];
        int32_t index_primexp_36752 = sext_i64_i32(gtid_31983);
        float write_value_32689 = ((__global float *) mem_39652)[gtid_31982 *
                                                                 iota32_arg_27515 +
                                                                 gtid_31983];
        bool cond_32690 = slt32(index_primexp_36752, y_32685);
        int32_t defunc_0_f_res_32691;
        
        if (cond_32690) {
            int32_t x_32683 = ((__global
                                int32_t *) defunc_3_map_res_mem_39542)[gtid_31982];
            int32_t i_32692 = add32(x_32683, index_primexp_36752);
            int64_t i_32693 = sext_i32_i64(i_32692);
            int32_t x_32694 = ((__global
                                int32_t *) defunc_4_map_res_mem_39479)[gtid_31982 *
                                                                       N_27115 +
                                                                       i_32693];
            int32_t defunc_0_f_res_t_res_32695 = sub32(x_32694, n_27120);
            
            defunc_0_f_res_32691 = defunc_0_f_res_t_res_32695;
        } else {
            defunc_0_f_res_32691 = -1;
        }
        
        int64_t defunc_0_f_res_32696 = sext_i32_i64(defunc_0_f_res_32691);
        
        if ((sle64(0, gtid_31982) && slt64(gtid_31982, m_27116)) && (sle64(0,
                                                                           defunc_0_f_res_32696) &&
                                                                     slt64(defunc_0_f_res_32696,
                                                                           iota32_arg_27515))) {
            ((__global float *) mem_39584)[gtid_31982 * iota32_arg_27515 +
                                           defunc_0_f_res_32696] =
                write_value_32689;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32680
}
__kernel void mainDetailedzisegmap_32037(__global int *global_failure,
                                         int failure_is_an_option, __global
                                         int64_t *global_failure_args,
                                         int64_t N_27115, int64_t m_27116,
                                         int32_t n_27120,
                                         int64_t iota32_arg_27515,
                                         int64_t distance_27547,
                                         int64_t segmap_usable_groups_32566,
                                         __global
                                         unsigned char *defunc_4_map_res_mem_39477,
                                         __global
                                         unsigned char *defunc_4_map_res_mem_39479,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_39542,
                                         __global unsigned char *mem_39638,
                                         __global unsigned char *mem_39655,
                                         __global unsigned char *mem_39657,
                                         __global unsigned char *mem_39667,
                                         __global unsigned char *mem_39678,
                                         __global unsigned char *mem_39698,
                                         __global unsigned char *mem_39700)
{
    #define segmap_group_sizze_32565 (mainDetailedzisegmap_group_sizze_32039)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_41043;
    int32_t local_tid_41044;
    int64_t group_sizze_41047;
    int32_t wave_sizze_41046;
    int32_t group_tid_41045;
    
    global_tid_41043 = get_global_id(0);
    local_tid_41044 = get_local_id(0);
    group_sizze_41047 = get_local_size(0);
    wave_sizze_41046 = LOCKSTEP_WIDTH;
    group_tid_41045 = get_group_id(0);
    
    int32_t phys_tid_32037;
    
    phys_tid_32037 = global_tid_41043;
    
    int64_t gtid_32036;
    
    gtid_32036 = sext_i32_i64(group_tid_41045) * segmap_group_sizze_32565 +
        sext_i32_i64(local_tid_41044);
    if (slt64(gtid_32036, m_27116)) {
        int32_t x_32569 = ((__global
                            int32_t *) defunc_4_map_res_mem_39477)[gtid_32036];
        int32_t x_32570 = ((__global
                            int32_t *) defunc_3_map_res_mem_39542)[gtid_32036];
        int32_t y_32572 = ((__global int32_t *) mem_39638)[gtid_32036];
        bool defunc_0_f_res_32573 = ((__global bool *) mem_39655)[gtid_32036];
        
        for (int64_t i_41048 = 0; i_41048 < iota32_arg_27515; i_41048++) {
            ((__global float *) mem_39678)[phys_tid_32037 + i_41048 *
                                           (segmap_usable_groups_32566 *
                                            segmap_group_sizze_32565)] =
                ((__global float *) mem_39667)[gtid_32036 + i_41048 * m_27116];
        }
        for (int64_t i_32577 = 0; i_32577 < distance_27547; i_32577++) {
            int64_t index_primexp_32579 = add64(1, i_32577);
            bool cond_32580 = slt64(0, index_primexp_32579);
            bool loop_cond_32581;
            
            if (cond_32580) {
                bool x_32582 = sle64(0, index_primexp_32579);
                bool y_32583 = slt64(index_primexp_32579, iota32_arg_27515);
                bool bounds_check_32584 = x_32582 && y_32583;
                bool index_certs_32585;
                
                if (!bounds_check_32584) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 35) ==
                            -1) {
                            global_failure_args[0] = index_primexp_32579;
                            global_failure_args[1] = iota32_arg_27515;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_2_lifted_gt_arg_32586 = ((__global
                                                       float *) mem_39678)[phys_tid_32037 +
                                                                           index_primexp_32579 *
                                                                           (segmap_usable_groups_32566 *
                                                                            segmap_group_sizze_32565)];
                bool y_32587 = slt64(i_32577, iota32_arg_27515);
                bool index_certs_32588;
                
                if (!y_32587) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 36) ==
                            -1) {
                            global_failure_args[0] = i_32577;
                            global_failure_args[1] = iota32_arg_27515;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_1_lifted_gt_arg_32589 = ((__global
                                                       float *) mem_39678)[phys_tid_32037 +
                                                                           i_32577 *
                                                                           (segmap_usable_groups_32566 *
                                                                            segmap_group_sizze_32565)];
                bool defunc_1_zlze_res_32590 = defunc_1_lifted_gt_arg_32589 <=
                     defunc_2_lifted_gt_arg_32586;
                bool defunc_2_lifted_gt_res_32591 = !defunc_1_zlze_res_32590;
                
                loop_cond_32581 = defunc_2_lifted_gt_res_32591;
            } else {
                loop_cond_32581 = 0;
            }
            
            bool xszq_32592;
            int64_t xszq_32593;
            bool loop_while_32595;
            int64_t j_32596;
            
            loop_while_32595 = loop_cond_32581;
            j_32596 = index_primexp_32579;
            while (loop_while_32595) {
                int64_t loopres_32598 = sub64(j_32596, 1);
                bool x_32599 = sle64(0, j_32596);
                bool y_32600 = slt64(j_32596, iota32_arg_27515);
                bool bounds_check_32601 = x_32599 && y_32600;
                bool index_certs_32602;
                
                if (!bounds_check_32601) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 37) ==
                            -1) {
                            global_failure_args[0] = j_32596;
                            global_failure_args[1] = iota32_arg_27515;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_32603 = ((__global
                                         float *) mem_39678)[phys_tid_32037 +
                                                             j_32596 *
                                                             (segmap_usable_groups_32566 *
                                                              segmap_group_sizze_32565)];
                bool x_32604 = sle64(0, loopres_32598);
                bool y_32605 = slt64(loopres_32598, iota32_arg_27515);
                bool bounds_check_32606 = x_32604 && y_32605;
                bool index_certs_32607;
                
                if (!bounds_check_32606) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 38) ==
                            -1) {
                            global_failure_args[0] = loopres_32598;
                            global_failure_args[1] = iota32_arg_27515;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_32608 = ((__global
                                         float *) mem_39678)[phys_tid_32037 +
                                                             loopres_32598 *
                                                             (segmap_usable_groups_32566 *
                                                              segmap_group_sizze_32565)];
                
                ((__global float *) mem_39678)[phys_tid_32037 + j_32596 *
                                               (segmap_usable_groups_32566 *
                                                segmap_group_sizze_32565)] =
                    copy_arg_32608;
                ((__global float *) mem_39678)[phys_tid_32037 + loopres_32598 *
                                               (segmap_usable_groups_32566 *
                                                segmap_group_sizze_32565)] =
                    copy_arg_32603;
                
                bool cond_32611 = slt64(0, loopres_32598);
                bool loop_cond_32612;
                
                if (cond_32611) {
                    bool index_certs_32613;
                    
                    if (!bounds_check_32606) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          39) == -1) {
                                global_failure_args[0] = loopres_32598;
                                global_failure_args[1] = iota32_arg_27515;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_2_lifted_gt_arg_32614 = ((__global
                                                           float *) mem_39678)[phys_tid_32037 +
                                                                               loopres_32598 *
                                                                               (segmap_usable_groups_32566 *
                                                                                segmap_group_sizze_32565)];
                    int64_t i_32615 = sub64(loopres_32598, 1);
                    bool x_32616 = sle64(0, i_32615);
                    bool y_32617 = slt64(i_32615, iota32_arg_27515);
                    bool bounds_check_32618 = x_32616 && y_32617;
                    bool index_certs_32619;
                    
                    if (!bounds_check_32618) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          40) == -1) {
                                global_failure_args[0] = i_32615;
                                global_failure_args[1] = iota32_arg_27515;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_1_lifted_gt_arg_32620 = ((__global
                                                           float *) mem_39678)[phys_tid_32037 +
                                                                               i_32615 *
                                                                               (segmap_usable_groups_32566 *
                                                                                segmap_group_sizze_32565)];
                    bool defunc_1_zlze_res_32621 =
                         defunc_1_lifted_gt_arg_32620 <=
                         defunc_2_lifted_gt_arg_32614;
                    bool defunc_2_lifted_gt_res_32622 =
                         !defunc_1_zlze_res_32621;
                    
                    loop_cond_32612 = defunc_2_lifted_gt_res_32622;
                } else {
                    loop_cond_32612 = 0;
                }
                
                bool loop_while_tmp_41050 = loop_cond_32612;
                int64_t j_tmp_41051 = loopres_32598;
                
                loop_while_32595 = loop_while_tmp_41050;
                j_32596 = j_tmp_41051;
            }
            xszq_32592 = loop_while_32595;
            xszq_32593 = j_32596;
        }
        
        int32_t i_32623 = sdiv32(y_32572, 2);
        int32_t j_32624 = sub32(i_32623, 1);
        bool cond_32625 = x_32569 == x_32570;
        float defunc_0_f_res_32626;
        
        if (cond_32625) {
            defunc_0_f_res_32626 = 0.0F;
        } else {
            int32_t x_32627 = smod32(y_32572, 2);
            bool cond_32628 = x_32627 == 0;
            float defunc_0_f_res_f_res_32629;
            
            if (cond_32628) {
                int64_t j_32630 = sext_i32_i64(j_32624);
                bool x_32631 = sle64(0, j_32630);
                bool y_32632 = slt64(j_32630, iota32_arg_27515);
                bool bounds_check_32633 = x_32631 && y_32632;
                bool index_certs_32634;
                
                if (!bounds_check_32633) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 41) ==
                            -1) {
                            global_failure_args[0] = j_32630;
                            global_failure_args[1] = iota32_arg_27515;
                            ;
                        }
                        return;
                    }
                }
                
                float x_32635 = ((__global float *) mem_39678)[phys_tid_32037 +
                                                               j_32630 *
                                                               (segmap_usable_groups_32566 *
                                                                segmap_group_sizze_32565)];
                int64_t i_32636 = sext_i32_i64(i_32623);
                bool x_32637 = sle64(0, i_32636);
                bool y_32638 = slt64(i_32636, iota32_arg_27515);
                bool bounds_check_32639 = x_32637 && y_32638;
                bool index_certs_32640;
                
                if (!bounds_check_32639) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 42) ==
                            -1) {
                            global_failure_args[0] = i_32636;
                            global_failure_args[1] = iota32_arg_27515;
                            ;
                        }
                        return;
                    }
                }
                
                float y_32641 = ((__global float *) mem_39678)[phys_tid_32037 +
                                                               i_32636 *
                                                               (segmap_usable_groups_32566 *
                                                                segmap_group_sizze_32565)];
                float x_32642 = x_32635 + y_32641;
                float defunc_0_f_res_f_res_t_res_32643 = x_32642 / 2.0F;
                
                defunc_0_f_res_f_res_32629 = defunc_0_f_res_f_res_t_res_32643;
            } else {
                int64_t i_32644 = sext_i32_i64(i_32623);
                bool x_32645 = sle64(0, i_32644);
                bool y_32646 = slt64(i_32644, iota32_arg_27515);
                bool bounds_check_32647 = x_32645 && y_32646;
                bool index_certs_32648;
                
                if (!bounds_check_32647) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 43) ==
                            -1) {
                            global_failure_args[0] = i_32644;
                            global_failure_args[1] = iota32_arg_27515;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_0_f_res_f_res_f_res_32649 = ((__global
                                                           float *) mem_39678)[phys_tid_32037 +
                                                                               i_32644 *
                                                                               (segmap_usable_groups_32566 *
                                                                                segmap_group_sizze_32565)];
                
                defunc_0_f_res_f_res_32629 = defunc_0_f_res_f_res_f_res_32649;
            }
            defunc_0_f_res_32626 = defunc_0_f_res_f_res_32629;
        }
        
        bool cond_32650 = !defunc_0_f_res_32573;
        int32_t fst_breakzq_32651;
        
        if (cond_32650) {
            fst_breakzq_32651 = -1;
        } else {
            int32_t defunc_0_f_res_32574 = ((__global
                                             int32_t *) mem_39657)[gtid_32036];
            bool cond_32652 = slt32(defunc_0_f_res_32574, y_32572);
            int32_t adjustValInds_res_32653;
            
            if (cond_32652) {
                int32_t i_32654 = add32(x_32570, defunc_0_f_res_32574);
                int64_t i_32655 = sext_i32_i64(i_32654);
                int32_t x_32656 = ((__global
                                    int32_t *) defunc_4_map_res_mem_39479)[gtid_32036 *
                                                                           N_27115 +
                                                                           i_32655];
                int32_t adjustValInds_res_t_res_32657 = sub32(x_32656, n_27120);
                
                adjustValInds_res_32653 = adjustValInds_res_t_res_32657;
            } else {
                adjustValInds_res_32653 = -1;
            }
            fst_breakzq_32651 = adjustValInds_res_32653;
        }
        
        bool cond_32658 = sle32(x_32570, 5);
        bool cond_f_res_32659 = sle32(y_32572, 5);
        bool x_32660 = !cond_32658;
        bool y_32661 = cond_f_res_32659 && x_32660;
        bool cond_32662 = cond_32658 || y_32661;
        int32_t fst_breakzq_32663;
        
        if (cond_32662) {
            fst_breakzq_32663 = -2;
        } else {
            fst_breakzq_32663 = fst_breakzq_32651;
        }
        ((__global int32_t *) mem_39698)[gtid_32036] = fst_breakzq_32663;
        ((__global float *) mem_39700)[gtid_32036] = defunc_0_f_res_32626;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32565
}
__kernel void mainDetailedzisegmap_32175(__global int *global_failure,
                                         int failure_is_an_option, __global
                                         int64_t *global_failure_args,
                                         int64_t N_27115, int64_t m_27116,
                                         int64_t iota32_arg_27515, __global
                                         unsigned char *defunc_4_map_res_mem_39478,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_39542,
                                         __global unsigned char *mem_39638,
                                         __global unsigned char *mem_39664)
{
    #define segmap_group_sizze_32536 (mainDetailedzisegmap_group_sizze_32178)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_41038;
    int32_t local_tid_41039;
    int64_t group_sizze_41042;
    int32_t wave_sizze_41041;
    int32_t group_tid_41040;
    
    global_tid_41038 = get_global_id(0);
    local_tid_41039 = get_local_id(0);
    group_sizze_41042 = get_local_size(0);
    wave_sizze_41041 = LOCKSTEP_WIDTH;
    group_tid_41040 = get_group_id(0);
    
    int32_t phys_tid_32175;
    
    phys_tid_32175 = global_tid_41038;
    
    int64_t gtid_32173;
    
    gtid_32173 = squot64(sext_i32_i64(group_tid_41040) *
                         segmap_group_sizze_32536 +
                         sext_i32_i64(local_tid_41039), iota32_arg_27515);
    
    int64_t gtid_32174;
    
    gtid_32174 = sext_i32_i64(group_tid_41040) * segmap_group_sizze_32536 +
        sext_i32_i64(local_tid_41039) - squot64(sext_i32_i64(group_tid_41040) *
                                                segmap_group_sizze_32536 +
                                                sext_i32_i64(local_tid_41039),
                                                iota32_arg_27515) *
        iota32_arg_27515;
    if (slt64(gtid_32173, m_27116) && slt64(gtid_32174, iota32_arg_27515)) {
        int32_t x_32539 = ((__global
                            int32_t *) defunc_3_map_res_mem_39542)[gtid_32173];
        int32_t y_32541 = ((__global int32_t *) mem_39638)[gtid_32173];
        int32_t index_primexp_36749 = sext_i64_i32(gtid_32174);
        bool cond_32543 = slt32(index_primexp_36749, y_32541);
        bool cond_32544;
        
        if (cond_32543) {
            int32_t i_32545 = add32(x_32539, index_primexp_36749);
            int64_t i_32546 = sext_i32_i64(i_32545);
            bool x_32547 = sle64(0, i_32546);
            bool y_32548 = slt64(i_32546, N_27115);
            bool bounds_check_32549 = x_32547 && y_32548;
            bool index_certs_32550;
            
            if (!bounds_check_32549) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 33) ==
                        -1) {
                        global_failure_args[0] = i_32546;
                        global_failure_args[1] = N_27115;
                        ;
                    }
                    return;
                }
            }
            
            float isnan_arg_32551 = ((__global
                                      float *) defunc_4_map_res_mem_39478)[gtid_32173 *
                                                                           N_27115 +
                                                                           i_32546];
            bool isnan_res_32552;
            
            isnan_res_32552 = futrts_isnan32(isnan_arg_32551);
            
            bool cond_t_res_32553 = !isnan_res_32552;
            
            cond_32544 = cond_t_res_32553;
        } else {
            cond_32544 = 0;
        }
        
        float defunc_0_f_res_32554;
        
        if (cond_32544) {
            int32_t i_32555 = add32(x_32539, index_primexp_36749);
            int64_t i_32556 = sext_i32_i64(i_32555);
            bool x_32557 = sle64(0, i_32556);
            bool y_32558 = slt64(i_32556, N_27115);
            bool bounds_check_32559 = x_32557 && y_32558;
            bool index_certs_32560;
            
            if (!bounds_check_32559) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 34) ==
                        -1) {
                        global_failure_args[0] = i_32556;
                        global_failure_args[1] = N_27115;
                        ;
                    }
                    return;
                }
            }
            
            float defunc_0_f_res_t_res_32561 = ((__global
                                                 float *) defunc_4_map_res_mem_39478)[gtid_32173 *
                                                                                      N_27115 +
                                                                                      i_32556];
            
            defunc_0_f_res_32554 = defunc_0_f_res_t_res_32561;
        } else {
            defunc_0_f_res_32554 = INFINITY;
        }
        ((__global float *) mem_39664)[gtid_32173 * iota32_arg_27515 +
                                       gtid_32174] = defunc_0_f_res_32554;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32536
}
__kernel void mainDetailedzisegmap_32234(__global int *global_failure,
                                         int64_t m_27116, __global
                                         unsigned char *mem_39638, __global
                                         unsigned char *mem_39649, __global
                                         unsigned char *mem_39660)
{
    #define segmap_group_sizze_32518 (mainDetailedzisegmap_group_sizze_32236)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_41033;
    int32_t local_tid_41034;
    int64_t group_sizze_41037;
    int32_t wave_sizze_41036;
    int32_t group_tid_41035;
    
    global_tid_41033 = get_global_id(0);
    local_tid_41034 = get_local_id(0);
    group_sizze_41037 = get_local_size(0);
    wave_sizze_41036 = LOCKSTEP_WIDTH;
    group_tid_41035 = get_group_id(0);
    
    int32_t phys_tid_32234;
    
    phys_tid_32234 = global_tid_41033;
    
    int64_t gtid_32233;
    
    gtid_32233 = sext_i32_i64(group_tid_41035) * segmap_group_sizze_32518 +
        sext_i32_i64(local_tid_41034);
    if (slt64(gtid_32233, m_27116)) {
        int32_t y_32521 = ((__global int32_t *) mem_39638)[gtid_32233];
        bool cond_32523 = y_32521 == 0;
        float defunc_0_f_res_32524;
        
        if (cond_32523) {
            defunc_0_f_res_32524 = 0.0F;
        } else {
            float defunc_0_f_res_32522 = ((__global
                                           float *) mem_39649)[gtid_32233];
            float i32_res_32525 = sitofp_i32_f32(y_32521);
            float defunc_0_f_res_f_res_32526 = defunc_0_f_res_32522 /
                  i32_res_32525;
            
            defunc_0_f_res_32524 = defunc_0_f_res_f_res_32526;
        }
        ((__global float *) mem_39660)[gtid_32233] = defunc_0_f_res_32524;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32518
}
__kernel void mainDetailedzisegmap_32251(__global int *global_failure,
                                         int64_t m_27116, __global
                                         unsigned char *mem_39645, __global
                                         unsigned char *mem_39647, __global
                                         unsigned char *mem_39655, __global
                                         unsigned char *mem_39657)
{
    #define segmap_group_sizze_32495 (mainDetailedzisegmap_group_sizze_32253)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_41028;
    int32_t local_tid_41029;
    int64_t group_sizze_41032;
    int32_t wave_sizze_41031;
    int32_t group_tid_41030;
    
    global_tid_41028 = get_global_id(0);
    local_tid_41029 = get_local_id(0);
    group_sizze_41032 = get_local_size(0);
    wave_sizze_41031 = LOCKSTEP_WIDTH;
    group_tid_41030 = get_group_id(0);
    
    int32_t phys_tid_32251;
    
    phys_tid_32251 = global_tid_41028;
    
    int64_t gtid_32250;
    
    gtid_32250 = sext_i32_i64(group_tid_41030) * segmap_group_sizze_32495 +
        sext_i32_i64(local_tid_41029);
    if (slt64(gtid_32250, m_27116)) {
        bool acc0_32501 = ((__global bool *) mem_39645)[gtid_32250];
        bool x_32506 = acc0_32501 && acc0_32501;
        int32_t defunc_1_op_res_f_res_32510;
        
        if (acc0_32501) {
            int32_t acc0_32502 = ((__global int32_t *) mem_39647)[gtid_32250];
            
            defunc_1_op_res_f_res_32510 = acc0_32502;
        } else {
            defunc_1_op_res_f_res_32510 = -1;
        }
        ((__global bool *) mem_39655)[gtid_32250] = x_32506;
        ((__global int32_t *) mem_39657)[gtid_32250] =
            defunc_1_op_res_f_res_32510;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32495
}
__kernel void mainDetailedzisegmap_32372(__global int *global_failure,
                                         int64_t m_27116,
                                         int64_t num_groups_32395, __global
                                         unsigned char *defunc_4_map_res_mem_39477,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_39542,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_39543,
                                         __global unsigned char *mem_39636,
                                         __global unsigned char *mem_39638)
{
    #define segmap_group_sizze_32394 (mainDetailedzisegmap_group_sizze_32374)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40866;
    int32_t local_tid_40867;
    int64_t group_sizze_40870;
    int32_t wave_sizze_40869;
    int32_t group_tid_40868;
    
    global_tid_40866 = get_global_id(0);
    local_tid_40867 = get_local_id(0);
    group_sizze_40870 = get_local_size(0);
    wave_sizze_40869 = LOCKSTEP_WIDTH;
    group_tid_40868 = get_group_id(0);
    
    int32_t phys_tid_32372;
    
    phys_tid_32372 = global_tid_40866;
    
    int32_t phys_group_id_40871;
    
    phys_group_id_40871 = get_group_id(0);
    for (int32_t i_40872 = 0; i_40872 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27116, segmap_group_sizze_32394)) -
                   phys_group_id_40871, sext_i64_i32(num_groups_32395));
         i_40872++) {
        int32_t virt_group_id_40873 = phys_group_id_40871 + i_40872 *
                sext_i64_i32(num_groups_32395);
        int64_t gtid_32371 = sext_i32_i64(virt_group_id_40873) *
                segmap_group_sizze_32394 + sext_i32_i64(local_tid_40867);
        
        if (slt64(gtid_32371, m_27116)) {
            int32_t x_32401 = ((__global
                                int32_t *) defunc_4_map_res_mem_39477)[gtid_32371];
            int32_t x_32402 = ((__global
                                int32_t *) defunc_3_map_res_mem_39542)[gtid_32371];
            float x_32403 = ((__global
                              float *) defunc_3_map_res_mem_39543)[gtid_32371];
            int32_t y_32404 = sub32(x_32401, x_32402);
            float i32_res_32405 = sitofp_i32_f32(x_32402);
            float sqrt_res_32406;
            
            sqrt_res_32406 = futrts_sqrt32(i32_res_32405);
            
            float y_32407 = x_32403 * sqrt_res_32406;
            
            ((__global float *) mem_39636)[gtid_32371] = y_32407;
            ((__global int32_t *) mem_39638)[gtid_32371] = y_32404;
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32394
}
__kernel void mainDetailedzisegmap_intragroup_29363(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_38864_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_38854_backing_aligned_1,
                                                    int32_t k2p2zq_27133,
                                                    int64_t i32_res_27135,
                                                    int32_t m_27266,
                                                    int64_t i32_res_27268,
                                                    int64_t i32_res_27283,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_38850,
                                                    __global
                                                    unsigned char *mem_38874)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_38864_backing_1 = (__local volatile
                                                           char *) mem_38864_backing_aligned_0;
    __local volatile char *restrict mem_38854_backing_0 = (__local volatile
                                                           char *) mem_38854_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40052;
    int32_t local_tid_40053;
    int64_t group_sizze_40056;
    int32_t wave_sizze_40055;
    int32_t group_tid_40054;
    
    global_tid_40052 = get_global_id(0);
    local_tid_40053 = get_local_id(0);
    group_sizze_40056 = get_local_size(0);
    wave_sizze_40055 = LOCKSTEP_WIDTH;
    group_tid_40054 = get_group_id(0);
    
    int32_t phys_tid_29363;
    
    phys_tid_29363 = group_tid_40054;
    
    int32_t ltid_pre_40057;
    
    ltid_pre_40057 = local_tid_40053;
    
    int64_t gtid_29318;
    
    gtid_29318 = sext_i32_i64(group_tid_40054);
    
    __local char *mem_38854;
    
    mem_38854 = (__local char *) mem_38854_backing_0;
    
    int64_t gtid_29321 = sext_i32_i64(ltid_pre_40057);
    int32_t phys_tid_29322 = local_tid_40053;
    int32_t index_primexp_36690 = sext_i64_i32(gtid_29321);
    int32_t defunc_0_f_res_29488 = sdiv32(index_primexp_36690, m_27266);
    int32_t defunc_0_f_res_29489 = smod32(index_primexp_36690, m_27266);
    bool cond_29490 = slt32(defunc_0_f_res_29489, k2p2zq_27133);
    float defunc_0_f_res_29491;
    
    if (cond_29490) {
        int64_t i_29492 = sext_i32_i64(defunc_0_f_res_29488);
        int64_t j_29493 = sext_i32_i64(defunc_0_f_res_29489);
        float defunc_0_f_res_t_res_29494 = ((__global
                                             float *) defunc_3_map_res_mem_38850)[gtid_29318 *
                                                                                  (i32_res_27135 *
                                                                                   i32_res_27135) +
                                                                                  i_29492 *
                                                                                  i32_res_27135 +
                                                                                  j_29493];
        
        defunc_0_f_res_29491 = defunc_0_f_res_t_res_29494;
    } else {
        int32_t y_29495 = add32(k2p2zq_27133, defunc_0_f_res_29488);
        bool cond_29496 = defunc_0_f_res_29489 == y_29495;
        float defunc_0_f_res_f_res_29497;
        
        if (cond_29496) {
            defunc_0_f_res_f_res_29497 = 1.0F;
        } else {
            defunc_0_f_res_f_res_29497 = 0.0F;
        }
        defunc_0_f_res_29491 = defunc_0_f_res_f_res_29497;
    }
    ((__local float *) mem_38854)[gtid_29321] = defunc_0_f_res_29491;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_38864;
    
    mem_38864 = (__local char *) mem_38864_backing_1;
    for (int32_t i_29499 = 0; i_29499 < k2p2zq_27133; i_29499++) {
        int64_t i32_res_29501 = sext_i32_i64(i_29499);
        float v1_29502 = ((__local float *) mem_38854)[i32_res_29501];
        bool cond_29503 = v1_29502 == 0.0F;
        int64_t gtid_29334 = sext_i32_i64(ltid_pre_40057);
        int32_t phys_tid_29335 = local_tid_40053;
        int32_t defunc_0_f_res_29506 = sext_i64_i32(gtid_29334);
        int32_t defunc_0_f_res_29507 = sdiv32(defunc_0_f_res_29506, m_27266);
        int32_t defunc_0_f_res_29508 = smod32(defunc_0_f_res_29506, m_27266);
        float defunc_0_f_res_29509;
        
        if (cond_29503) {
            int32_t x_29510 = mul32(m_27266, defunc_0_f_res_29507);
            int32_t i32_arg_29511 = add32(defunc_0_f_res_29508, x_29510);
            int64_t i32_res_29512 = sext_i32_i64(i32_arg_29511);
            float defunc_0_f_res_t_res_29513 = ((__local
                                                 float *) mem_38854)[i32_res_29512];
            
            defunc_0_f_res_29509 = defunc_0_f_res_t_res_29513;
        } else {
            int64_t i32_res_29514 = sext_i32_i64(defunc_0_f_res_29508);
            float x_29515 = ((__local float *) mem_38854)[i32_res_29514];
            float x_29516 = x_29515 / v1_29502;
            int32_t y_29517 = sub32(k2p2zq_27133, 1);
            bool cond_29518 = slt32(defunc_0_f_res_29507, y_29517);
            float defunc_0_f_res_f_res_29519;
            
            if (cond_29518) {
                int32_t x_29520 = add32(1, defunc_0_f_res_29507);
                int32_t x_29521 = mul32(m_27266, x_29520);
                int32_t i32_arg_29522 = add32(defunc_0_f_res_29508, x_29521);
                int64_t i32_res_29523 = sext_i32_i64(i32_arg_29522);
                float x_29524 = ((__local float *) mem_38854)[i32_res_29523];
                int32_t i32_arg_29525 = add32(i_29499, x_29521);
                int64_t i32_res_29526 = sext_i32_i64(i32_arg_29525);
                float x_29527 = ((__local float *) mem_38854)[i32_res_29526];
                float y_29528 = x_29516 * x_29527;
                float defunc_0_f_res_f_res_t_res_29529 = x_29524 - y_29528;
                
                defunc_0_f_res_f_res_29519 = defunc_0_f_res_f_res_t_res_29529;
            } else {
                defunc_0_f_res_f_res_29519 = x_29516;
            }
            defunc_0_f_res_29509 = defunc_0_f_res_f_res_29519;
        }
        ((__local float *) mem_38864)[gtid_29334] = defunc_0_f_res_29509;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_29361 = sext_i32_i64(ltid_pre_40057);
        int32_t phys_tid_29362 = local_tid_40053;
        float write_value_29532 = ((__local float *) mem_38864)[write_i_29361];
        
        if (sle64(0, write_i_29361) && slt64(write_i_29361, i32_res_27268)) {
            ((__local float *) mem_38854)[write_i_29361] = write_value_29532;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    for (int64_t i_40059 = 0; i_40059 < sdiv_up64(i32_res_27135 *
                                                  i32_res_27135 -
                                                  sext_i32_i64(local_tid_40053),
                                                  i32_res_27268); i_40059++) {
        ((__global float *) mem_38874)[gtid_29318 * (i32_res_27135 *
                                                     i32_res_27135) +
                                       squot64(i_40059 * i32_res_27268 +
                                               sext_i32_i64(local_tid_40053),
                                               i32_res_27135) * i32_res_27135 +
                                       (i_40059 * i32_res_27268 +
                                        sext_i32_i64(local_tid_40053) -
                                        squot64(i_40059 * i32_res_27268 +
                                                sext_i32_i64(local_tid_40053),
                                                i32_res_27135) *
                                        i32_res_27135)] = ((__local
                                                            float *) mem_38854)[i32_res_27135 +
                                                                                (squot64(i_40059 *
                                                                                         i32_res_27268 +
                                                                                         sext_i32_i64(local_tid_40053),
                                                                                         i32_res_27135) *
                                                                                 i32_res_27283 +
                                                                                 (i_40059 *
                                                                                  i32_res_27268 +
                                                                                  sext_i32_i64(local_tid_40053) -
                                                                                  squot64(i_40059 *
                                                                                          i32_res_27268 +
                                                                                          sext_i32_i64(local_tid_40053),
                                                                                          i32_res_27135) *
                                                                                  i32_res_27135))];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_3:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_29590(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_38895_backing_aligned_0,
                                                    int64_t m_27116,
                                                    int32_t k2p2zq_27133,
                                                    int32_t m_27266,
                                                    int64_t i32_res_27268,
                                                    int32_t i_29985,
                                                    int64_t i32_res_29987,
                                                    int64_t ctx_param_ext_38881,
                                                    int64_t ctx_param_ext_38882,
                                                    int64_t ctx_param_ext_38884,
                                                    __global
                                                    unsigned char *mem_param_38886,
                                                    __global
                                                    unsigned char *mem_38891,
                                                    __global
                                                    unsigned char *mem_38899)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_38895_backing_0 = (__local volatile
                                                           char *) mem_38895_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40086;
    int32_t local_tid_40087;
    int64_t group_sizze_40090;
    int32_t wave_sizze_40089;
    int32_t group_tid_40088;
    
    global_tid_40086 = get_global_id(0);
    local_tid_40087 = get_local_id(0);
    group_sizze_40090 = get_local_size(0);
    wave_sizze_40089 = LOCKSTEP_WIDTH;
    group_tid_40088 = get_group_id(0);
    
    int32_t phys_tid_29590;
    
    phys_tid_29590 = group_tid_40088;
    
    int32_t ltid_pre_40091;
    
    ltid_pre_40091 = local_tid_40087;
    
    int64_t gtid_29558;
    
    gtid_29558 = sext_i32_i64(group_tid_40088);
    
    float v1_30000 = ((__global float *) mem_param_38886)[ctx_param_ext_38881 +
                                                          (gtid_29558 *
                                                           ctx_param_ext_38882 +
                                                           i32_res_29987 *
                                                           ctx_param_ext_38884)];
    bool cond_30001 = v1_30000 == 0.0F;
    __local char *mem_38895;
    
    mem_38895 = (__local char *) mem_38895_backing_0;
    
    int64_t gtid_29561 = sext_i32_i64(ltid_pre_40091);
    int32_t phys_tid_29562 = local_tid_40087;
    int32_t defunc_0_f_res_30004 = sext_i64_i32(gtid_29561);
    int32_t defunc_0_f_res_30005 = sdiv32(defunc_0_f_res_30004, m_27266);
    int32_t defunc_0_f_res_30006 = smod32(defunc_0_f_res_30004, m_27266);
    float defunc_0_f_res_30007;
    
    if (cond_30001) {
        int32_t x_30008 = mul32(m_27266, defunc_0_f_res_30005);
        int32_t i32_arg_30009 = add32(defunc_0_f_res_30006, x_30008);
        int64_t i32_res_30010 = sext_i32_i64(i32_arg_30009);
        float defunc_0_f_res_t_res_30011 = ((__global
                                             float *) mem_param_38886)[ctx_param_ext_38881 +
                                                                       (gtid_29558 *
                                                                        ctx_param_ext_38882 +
                                                                        i32_res_30010 *
                                                                        ctx_param_ext_38884)];
        
        defunc_0_f_res_30007 = defunc_0_f_res_t_res_30011;
    } else {
        int64_t i32_res_30012 = sext_i32_i64(defunc_0_f_res_30006);
        float x_30013 = ((__global
                          float *) mem_param_38886)[ctx_param_ext_38881 +
                                                    (gtid_29558 *
                                                     ctx_param_ext_38882 +
                                                     i32_res_30012 *
                                                     ctx_param_ext_38884)];
        float x_30014 = x_30013 / v1_30000;
        int32_t y_30015 = sub32(k2p2zq_27133, 1);
        bool cond_30016 = slt32(defunc_0_f_res_30005, y_30015);
        float defunc_0_f_res_f_res_30017;
        
        if (cond_30016) {
            int32_t x_30018 = add32(1, defunc_0_f_res_30005);
            int32_t x_30019 = mul32(m_27266, x_30018);
            int32_t i32_arg_30020 = add32(defunc_0_f_res_30006, x_30019);
            int64_t i32_res_30021 = sext_i32_i64(i32_arg_30020);
            float x_30022 = ((__global
                              float *) mem_param_38886)[ctx_param_ext_38881 +
                                                        (gtid_29558 *
                                                         ctx_param_ext_38882 +
                                                         i32_res_30021 *
                                                         ctx_param_ext_38884)];
            int32_t i32_arg_30023 = add32(i_29985, x_30019);
            int64_t i32_res_30024 = sext_i32_i64(i32_arg_30023);
            float x_30025 = ((__global
                              float *) mem_param_38886)[ctx_param_ext_38881 +
                                                        (gtid_29558 *
                                                         ctx_param_ext_38882 +
                                                         i32_res_30024 *
                                                         ctx_param_ext_38884)];
            float y_30026 = x_30014 * x_30025;
            float defunc_0_f_res_f_res_t_res_30027 = x_30022 - y_30026;
            
            defunc_0_f_res_f_res_30017 = defunc_0_f_res_f_res_t_res_30027;
        } else {
            defunc_0_f_res_f_res_30017 = x_30014;
        }
        defunc_0_f_res_30007 = defunc_0_f_res_f_res_30017;
    }
    ((__local float *) mem_38895)[gtid_29561] = defunc_0_f_res_30007;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_29588 = sext_i32_i64(ltid_pre_40091);
    int32_t phys_tid_29589 = local_tid_40087;
    float write_value_30030 = ((__local float *) mem_38895)[write_i_29588];
    
    if (sle64(0, write_i_29588) && slt64(write_i_29588, i32_res_27268)) {
        ((__global float *) mem_38891)[gtid_29558 + write_i_29588 * m_27116] =
            write_value_30030;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_40087 == 0) {
        for (int64_t i_40092 = 0; i_40092 < i32_res_27268; i_40092++) {
            ((__global float *) mem_38899)[gtid_29558 * i32_res_27268 +
                                           i_40092] = ((__global
                                                        float *) mem_38891)[gtid_29558 +
                                                                            i_40092 *
                                                                            m_27116];
        }
    }
    
  error_2:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_30541(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_39456_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_39454_backing_aligned_1,
                                                    __local volatile
                                                    int64_t *mem_39452_backing_aligned_2,
                                                    __local volatile
                                                    int64_t *mem_39450_backing_aligned_3,
                                                    int64_t N_27115,
                                                    int64_t N_27117,
                                                    int64_t i_27395, __global
                                                    unsigned char *images_mem_38682,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_39440,
                                                    __global
                                                    unsigned char *mem_39459,
                                                    __global
                                                    unsigned char *mem_39462,
                                                    __global
                                                    unsigned char *mem_39465)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_39456_backing_3 = (__local volatile
                                                           char *) mem_39456_backing_aligned_0;
    __local volatile char *restrict mem_39454_backing_2 = (__local volatile
                                                           char *) mem_39454_backing_aligned_1;
    __local volatile char *restrict mem_39452_backing_1 = (__local volatile
                                                           char *) mem_39452_backing_aligned_2;
    __local volatile char *restrict mem_39450_backing_0 = (__local volatile
                                                           char *) mem_39450_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40486;
    int32_t local_tid_40487;
    int64_t group_sizze_40490;
    int32_t wave_sizze_40489;
    int32_t group_tid_40488;
    
    global_tid_40486 = get_global_id(0);
    local_tid_40487 = get_local_id(0);
    group_sizze_40490 = get_local_size(0);
    wave_sizze_40489 = LOCKSTEP_WIDTH;
    group_tid_40488 = get_group_id(0);
    
    int32_t phys_tid_30541;
    
    phys_tid_30541 = group_tid_40488;
    
    int32_t ltid_pre_40491;
    
    ltid_pre_40491 = local_tid_40487;
    
    int64_t gtid_30534;
    
    gtid_30534 = sext_i32_i64(group_tid_40488);
    
    __local char *mem_39450;
    
    mem_39450 = (__local char *) mem_39450_backing_0;
    
    __local char *mem_39452;
    
    mem_39452 = (__local char *) mem_39452_backing_1;
    
    int64_t gtid_30537 = sext_i32_i64(ltid_pre_40491);
    int32_t phys_tid_30538 = local_tid_40487;
    float x_30630 = ((__global float *) images_mem_38682)[gtid_30534 * N_27117 +
                                                          gtid_30537];
    bool isnan_res_30632;
    
    isnan_res_30632 = futrts_isnan32(x_30630);
    
    bool cond_30633 = !isnan_res_30632;
    float defunc_0_f_res_30634;
    
    if (cond_30633) {
        float x_30631 = ((__global
                          float *) defunc_3_map_res_mem_39440)[gtid_30534 *
                                                               N_27115 +
                                                               gtid_30537];
        float defunc_0_f_res_t_res_30635 = x_30630 - x_30631;
        
        defunc_0_f_res_30634 = defunc_0_f_res_t_res_30635;
    } else {
        defunc_0_f_res_30634 = NAN;
    }
    
    bool isnan_res_30636;
    
    isnan_res_30636 = futrts_isnan32(defunc_0_f_res_30634);
    
    bool defunc_0_p_res_30637 = !isnan_res_30636;
    int64_t defunc_0_f_res_30638 = btoi_bool_i64(defunc_0_p_res_30637);
    
    ((__local int64_t *) mem_39450)[gtid_30537] = defunc_0_f_res_30638;
    ((__local float *) mem_39452)[gtid_30537] = defunc_0_f_res_30634;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_40492;
    
    dims_flat_40492 = N_27115;
    
    int64_t x_30627;
    int64_t x_30628;
    int64_t x_40494;
    int64_t x_40495;
    bool ltid_in_bounds_40497;
    
    ltid_in_bounds_40497 = slt64(sext_i32_i64(local_tid_40487), N_27115);
    
    int32_t skip_threads_40498;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_40497) {
            x_30628 = ((volatile __local
                        int64_t *) mem_39450)[sext_i32_i64(local_tid_40487)];
            if ((local_tid_40487 - squot32(local_tid_40487, 32) * 32) == 0) {
                x_30627 = x_30628;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_40498 = 1;
        while (slt32(skip_threads_40498, 32)) {
            if (sle32(skip_threads_40498, local_tid_40487 -
                      squot32(local_tid_40487, 32) * 32) &&
                ltid_in_bounds_40497) {
                // read operands
                {
                    x_30627 = ((volatile __local
                                int64_t *) mem_39450)[sext_i32_i64(local_tid_40487) -
                                                      sext_i32_i64(skip_threads_40498)];
                }
                // perform operation
                {
                    bool inactive_40499 =
                         slt64(srem64(sext_i32_i64(local_tid_40487), N_27115),
                               sext_i32_i64(local_tid_40487) -
                               sext_i32_i64(local_tid_40487 -
                               skip_threads_40498));
                    
                    if (inactive_40499) {
                        x_30627 = x_30628;
                    }
                    if (!inactive_40499) {
                        int64_t defunc_1_op_res_30629 = add64(x_30627, x_30628);
                        
                        x_30627 = defunc_1_op_res_30629;
                    }
                }
            }
            if (sle32(wave_sizze_40489, skip_threads_40498)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_40498, local_tid_40487 -
                      squot32(local_tid_40487, 32) * 32) &&
                ltid_in_bounds_40497) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_39450)[sext_i32_i64(local_tid_40487)] =
                        x_30627;
                    x_30628 = x_30627;
                }
            }
            if (sle32(wave_sizze_40489, skip_threads_40498)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_40498 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_40487 - squot32(local_tid_40487, 32) * 32) == 31 &&
            ltid_in_bounds_40497) {
            ((volatile __local
              int64_t *) mem_39450)[sext_i32_i64(squot32(local_tid_40487,
                                                         32))] = x_30627;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_40500;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_40487, 32) == 0 && ltid_in_bounds_40497) {
                x_40495 = ((volatile __local
                            int64_t *) mem_39450)[sext_i32_i64(local_tid_40487)];
                if ((local_tid_40487 - squot32(local_tid_40487, 32) * 32) ==
                    0) {
                    x_40494 = x_40495;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_40500 = 1;
            while (slt32(skip_threads_40500, 32)) {
                if (sle32(skip_threads_40500, local_tid_40487 -
                          squot32(local_tid_40487, 32) * 32) &&
                    (squot32(local_tid_40487, 32) == 0 &&
                     ltid_in_bounds_40497)) {
                    // read operands
                    {
                        x_40494 = ((volatile __local
                                    int64_t *) mem_39450)[sext_i32_i64(local_tid_40487) -
                                                          sext_i32_i64(skip_threads_40500)];
                    }
                    // perform operation
                    {
                        bool inactive_40501 =
                             slt64(srem64(sext_i32_i64(local_tid_40487 * 32 +
                                          32 - 1), N_27115),
                                   sext_i32_i64(local_tid_40487 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_40487 -
                                                 skip_threads_40500) * 32 + 32 -
                                   1));
                        
                        if (inactive_40501) {
                            x_40494 = x_40495;
                        }
                        if (!inactive_40501) {
                            int64_t defunc_1_op_res_40496 = add64(x_40494,
                                                                  x_40495);
                            
                            x_40494 = defunc_1_op_res_40496;
                        }
                    }
                }
                if (sle32(wave_sizze_40489, skip_threads_40500)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_40500, local_tid_40487 -
                          squot32(local_tid_40487, 32) * 32) &&
                    (squot32(local_tid_40487, 32) == 0 &&
                     ltid_in_bounds_40497)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_39450)[sext_i32_i64(local_tid_40487)] =
                            x_40494;
                        x_40495 = x_40494;
                    }
                }
                if (sle32(wave_sizze_40489, skip_threads_40500)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_40500 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_40487, 32) == 0 || !ltid_in_bounds_40497)) {
            // read operands
            {
                x_30628 = x_30627;
                x_30627 = ((__local
                            int64_t *) mem_39450)[sext_i32_i64(squot32(local_tid_40487,
                                                                       32)) -
                                                  1];
            }
            // perform operation
            {
                bool inactive_40502 =
                     slt64(srem64(sext_i32_i64(local_tid_40487), N_27115),
                           sext_i32_i64(local_tid_40487) -
                           sext_i32_i64(squot32(local_tid_40487, 32) * 32 - 1));
                
                if (inactive_40502) {
                    x_30627 = x_30628;
                }
                if (!inactive_40502) {
                    int64_t defunc_1_op_res_30629 = add64(x_30627, x_30628);
                    
                    x_30627 = defunc_1_op_res_30629;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_39450)[sext_i32_i64(local_tid_40487)] =
                    x_30627;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_40487, 32) == 0) {
            ((__local int64_t *) mem_39450)[sext_i32_i64(local_tid_40487)] =
                x_30628;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_30639 = ((__local int64_t *) mem_39450)[i_27395];
    int32_t defunc_0_f_res_30640 = sext_i64_i32(last_res_30639);
    __local char *mem_39454;
    
    mem_39454 = (__local char *) mem_39454_backing_2;
    ((__local float *) mem_39454)[sext_i32_i64(local_tid_40487)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_39456;
    
    mem_39456 = (__local char *) mem_39456_backing_3;
    ((__local int32_t *) mem_39456)[sext_i32_i64(local_tid_40487)] = 0;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_30539 = sext_i32_i64(ltid_pre_40491);
    int32_t phys_tid_30540 = local_tid_40487;
    float x_30645 = ((__local float *) mem_39452)[write_i_30539];
    int32_t index_primexp_36710 = sext_i64_i32(write_i_30539);
    bool isnan_res_30648;
    
    isnan_res_30648 = futrts_isnan32(x_30645);
    
    bool defunc_0_p_res_30649 = !isnan_res_30648;
    int64_t defunc_1_f_res_30650;
    
    if (defunc_0_p_res_30649) {
        int64_t x_30646 = ((__local int64_t *) mem_39450)[write_i_30539];
        int64_t defunc_1_f_res_t_res_30651 = sub64(x_30646, 1);
        
        defunc_1_f_res_30650 = defunc_1_f_res_t_res_30651;
    } else {
        defunc_1_f_res_30650 = -1;
    }
    if (sle64(0, defunc_1_f_res_30650) && slt64(defunc_1_f_res_30650,
                                                N_27115)) {
        ((__local int32_t *) mem_39456)[defunc_1_f_res_30650] =
            index_primexp_36710;
    }
    if (sle64(0, defunc_1_f_res_30650) && slt64(defunc_1_f_res_30650,
                                                N_27115)) {
        ((__local float *) mem_39454)[defunc_1_f_res_30650] = x_30645;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_40487 == 0) {
        ((__global int32_t *) mem_39459)[gtid_30534] = defunc_0_f_res_30640;
    }
    ((__global float *) mem_39462)[gtid_30534 * N_27115 +
                                   sext_i32_i64(local_tid_40487)] = ((__local
                                                                      float *) mem_39454)[sext_i32_i64(local_tid_40487)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global int32_t *) mem_39465)[gtid_30534 * N_27115 +
                                     sext_i32_i64(local_tid_40487)] = ((__local
                                                                        int32_t *) mem_39456)[sext_i32_i64(local_tid_40487)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_30881(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *red_arr_mem_40595_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *red_arr_mem_40591_backing_aligned_1,
                                                    int64_t N_27115,
                                                    int64_t N_27117,
                                                    float hfrac_27122,
                                                    int64_t i32_res_27129,
                                                    int32_t k2p2_27131, __global
                                                    unsigned char *images_mem_38682,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_39478,
                                                    __global
                                                    unsigned char *mem_39522,
                                                    __global
                                                    unsigned char *mem_39524,
                                                    __global
                                                    unsigned char *mem_39526)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_40595_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_40595_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_40591_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40591_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40585;
    int32_t local_tid_40586;
    int64_t group_sizze_40589;
    int32_t wave_sizze_40588;
    int32_t group_tid_40587;
    
    global_tid_40585 = get_global_id(0);
    local_tid_40586 = get_local_id(0);
    group_sizze_40589 = get_local_size(0);
    wave_sizze_40588 = LOCKSTEP_WIDTH;
    group_tid_40587 = get_group_id(0);
    
    int32_t phys_tid_30881;
    
    phys_tid_30881 = group_tid_40587;
    
    int32_t ltid_pre_40590;
    
    ltid_pre_40590 = local_tid_40586;
    
    int64_t gtid_30874;
    
    gtid_30874 = sext_i32_i64(group_tid_40587);
    
    int32_t defunc_0_f_res_30958;
    int64_t gtid_30877 = sext_i32_i64(ltid_pre_40590);
    int32_t phys_tid_30878 = local_tid_40586;
    __local char *red_arr_mem_40591;
    
    red_arr_mem_40591 = (__local char *) red_arr_mem_40591_backing_0;
    
    float x_30962;
    
    x_30962 = ((__global float *) images_mem_38682)[gtid_30874 * N_27117 +
                                                    gtid_30877];
    
    bool isnan_res_30963;
    
    isnan_res_30963 = futrts_isnan32(x_30962);
    
    bool cond_30964 = !isnan_res_30963;
    int32_t defunc_0_f_res_30965 = btoi_bool_i32(cond_30964);
    
    ((__local int32_t *) red_arr_mem_40591)[gtid_30877] = defunc_0_f_res_30965;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_40593;
    int32_t skip_waves_40594;
    
    skip_waves_40594 = 1;
    
    int32_t x_30959;
    int32_t x_30960;
    
    offset_40593 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_40586, sext_i64_i32(i32_res_27129))) {
            x_30959 = ((__local
                        int32_t *) red_arr_mem_40591)[sext_i32_i64(local_tid_40586 +
                                                      offset_40593)];
        }
    }
    offset_40593 = 1;
    while (slt32(offset_40593, wave_sizze_40588)) {
        if (slt32(local_tid_40586 + offset_40593,
                  sext_i64_i32(i32_res_27129)) && ((local_tid_40586 -
                                                    squot32(local_tid_40586,
                                                            wave_sizze_40588) *
                                                    wave_sizze_40588) & (2 *
                                                                         offset_40593 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_30960 = ((volatile __local
                            int32_t *) red_arr_mem_40591)[sext_i32_i64(local_tid_40586 +
                                                          offset_40593)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_30961 = add32(x_30959, x_30960);
                
                x_30959 = defunc_1_op_res_30961;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_40591)[sext_i32_i64(local_tid_40586)] =
                    x_30959;
            }
        }
        offset_40593 *= 2;
    }
    while (slt32(skip_waves_40594, squot32(sext_i64_i32(i32_res_27129) +
                                           wave_sizze_40588 - 1,
                                           wave_sizze_40588))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_40593 = skip_waves_40594 * wave_sizze_40588;
        if (slt32(local_tid_40586 + offset_40593,
                  sext_i64_i32(i32_res_27129)) && ((local_tid_40586 -
                                                    squot32(local_tid_40586,
                                                            wave_sizze_40588) *
                                                    wave_sizze_40588) == 0 &&
                                                   (squot32(local_tid_40586,
                                                            wave_sizze_40588) &
                                                    (2 * skip_waves_40594 -
                                                     1)) == 0)) {
            // read array element
            {
                x_30960 = ((__local
                            int32_t *) red_arr_mem_40591)[sext_i32_i64(local_tid_40586 +
                                                          offset_40593)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_30961 = add32(x_30959, x_30960);
                
                x_30959 = defunc_1_op_res_30961;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_40591)[sext_i32_i64(local_tid_40586)] =
                    x_30959;
            }
        }
        skip_waves_40594 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_30958 = ((__local int32_t *) red_arr_mem_40591)[0];
    
    float defunc_0_f_res_30966;
    int64_t gtid_30879 = sext_i32_i64(ltid_pre_40590);
    int32_t phys_tid_30880 = local_tid_40586;
    __local char *red_arr_mem_40595;
    
    red_arr_mem_40595 = (__local char *) red_arr_mem_40595_backing_1;
    
    int32_t index_primexp_36718;
    
    index_primexp_36718 = sext_i64_i32(gtid_30879);
    
    bool cond_30971 = slt32(index_primexp_36718, defunc_0_f_res_30958);
    float defunc_0_f_res_30972;
    
    if (cond_30971) {
        int64_t i_30973 = sext_i32_i64(index_primexp_36718);
        float defunc_0_f_res_t_res_30974 = ((__global
                                             float *) defunc_4_map_res_mem_39478)[gtid_30874 *
                                                                                  N_27115 +
                                                                                  i_30973];
        
        defunc_0_f_res_30972 = defunc_0_f_res_t_res_30974;
    } else {
        defunc_0_f_res_30972 = 0.0F;
    }
    
    float defunc_0_f_res_30975 = defunc_0_f_res_30972 * defunc_0_f_res_30972;
    
    ((__local float *) red_arr_mem_40595)[gtid_30879] = defunc_0_f_res_30975;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_40597;
    int32_t skip_waves_40598;
    
    skip_waves_40598 = 1;
    
    float x_30967;
    float x_30968;
    
    offset_40597 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_40586, sext_i64_i32(i32_res_27129))) {
            x_30967 = ((__local
                        float *) red_arr_mem_40595)[sext_i32_i64(local_tid_40586 +
                                                    offset_40597)];
        }
    }
    offset_40597 = 1;
    while (slt32(offset_40597, wave_sizze_40588)) {
        if (slt32(local_tid_40586 + offset_40597,
                  sext_i64_i32(i32_res_27129)) && ((local_tid_40586 -
                                                    squot32(local_tid_40586,
                                                            wave_sizze_40588) *
                                                    wave_sizze_40588) & (2 *
                                                                         offset_40597 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_30968 = ((volatile __local
                            float *) red_arr_mem_40595)[sext_i32_i64(local_tid_40586 +
                                                        offset_40597)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_30969 = x_30967 + x_30968;
                
                x_30967 = defunc_1_op_res_30969;
            }
            // write result of operation
            {
                ((volatile __local
                  float *) red_arr_mem_40595)[sext_i32_i64(local_tid_40586)] =
                    x_30967;
            }
        }
        offset_40597 *= 2;
    }
    while (slt32(skip_waves_40598, squot32(sext_i64_i32(i32_res_27129) +
                                           wave_sizze_40588 - 1,
                                           wave_sizze_40588))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_40597 = skip_waves_40598 * wave_sizze_40588;
        if (slt32(local_tid_40586 + offset_40597,
                  sext_i64_i32(i32_res_27129)) && ((local_tid_40586 -
                                                    squot32(local_tid_40586,
                                                            wave_sizze_40588) *
                                                    wave_sizze_40588) == 0 &&
                                                   (squot32(local_tid_40586,
                                                            wave_sizze_40588) &
                                                    (2 * skip_waves_40598 -
                                                     1)) == 0)) {
            // read array element
            {
                x_30968 = ((__local
                            float *) red_arr_mem_40595)[sext_i32_i64(local_tid_40586 +
                                                        offset_40597)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_30969 = x_30967 + x_30968;
                
                x_30967 = defunc_1_op_res_30969;
            }
            // write result of operation
            {
                ((__local
                  float *) red_arr_mem_40595)[sext_i32_i64(local_tid_40586)] =
                    x_30967;
            }
        }
        skip_waves_40598 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_30966 = ((__local float *) red_arr_mem_40595)[0];
    
    int32_t r32_arg_30976 = sub32(defunc_0_f_res_30958, k2p2_27131);
    float i32_res_30977 = sitofp_i32_f32(r32_arg_30976);
    float sqrt_arg_30978 = defunc_0_f_res_30966 / i32_res_30977;
    float sqrt_res_30979;
    
    sqrt_res_30979 = futrts_sqrt32(sqrt_arg_30978);
    
    float i32_res_30980 = sitofp_i32_f32(defunc_0_f_res_30958);
    float t32_arg_30981 = hfrac_27122 * i32_res_30980;
    int32_t f32_res_30982 = fptosi_f32_i32(t32_arg_30981);
    
    if (local_tid_40586 == 0) {
        ((__global int32_t *) mem_39522)[gtid_30874] = f32_res_30982;
    }
    if (local_tid_40586 == 0) {
        ((__global int32_t *) mem_39524)[gtid_30874] = defunc_0_f_res_30958;
    }
    if (local_tid_40586 == 0) {
        ((__global float *) mem_39526)[gtid_30874] = sqrt_res_30979;
    }
    
  error_4:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_31325(__global
                                                    int *global_failure,
                                                    int failure_is_an_option,
                                                    __global
                                                    int64_t *global_failure_args,
                                                    __local volatile
                                                    int64_t *mem_39620_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_39596_backing_aligned_1,
                                                    __local volatile
                                                    int64_t *mem_39594_backing_aligned_2,
                                                    __local volatile
                                                    int64_t *red_arr_mem_40858_backing_aligned_3,
                                                    __local volatile
                                                    int64_t *red_arr_mem_40856_backing_aligned_4,
                                                    __local volatile
                                                    int64_t *red_arr_mem_40854_backing_aligned_5,
                                                    __local volatile
                                                    int64_t *mem_39591_backing_aligned_6,
                                                    __local volatile
                                                    int64_t *mem_39588_backing_aligned_7,
                                                    int64_t N_27115,
                                                    int32_t n_27120,
                                                    int64_t iota32_arg_27515,
                                                    int64_t distance_27547,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_39477,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_39478,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_39479,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_39541,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_39542,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_39543,
                                                    __global
                                                    unsigned char *defunc_0_f_res_mem_39576,
                                                    __global
                                                    unsigned char *mem_39581,
                                                    __global
                                                    unsigned char *mem_39624,
                                                    __global
                                                    unsigned char *mem_39627,
                                                    __global
                                                    unsigned char *mem_39629,
                                                    __global
                                                    unsigned char *mem_39631,
                                                    __global
                                                    unsigned char *mem_39633)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_39620_backing_7 = (__local volatile
                                                           char *) mem_39620_backing_aligned_0;
    __local volatile char *restrict mem_39596_backing_6 = (__local volatile
                                                           char *) mem_39596_backing_aligned_1;
    __local volatile char *restrict mem_39594_backing_5 = (__local volatile
                                                           char *) mem_39594_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_40858_backing_4 =
                          (__local volatile
                           char *) red_arr_mem_40858_backing_aligned_3;
    __local volatile char *restrict red_arr_mem_40856_backing_3 =
                          (__local volatile
                           char *) red_arr_mem_40856_backing_aligned_4;
    __local volatile char *restrict red_arr_mem_40854_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_40854_backing_aligned_5;
    __local volatile char *restrict mem_39591_backing_1 = (__local volatile
                                                           char *) mem_39591_backing_aligned_6;
    __local volatile char *restrict mem_39588_backing_0 = (__local volatile
                                                           char *) mem_39588_backing_aligned_7;
    volatile __local bool local_failure;
    
    if (failure_is_an_option) {
        int failed = *global_failure >= 0;
        
        if (failed)
            return;
    }
    local_failure = false;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t global_tid_40837;
    int32_t local_tid_40838;
    int64_t group_sizze_40841;
    int32_t wave_sizze_40840;
    int32_t group_tid_40839;
    
    global_tid_40837 = get_global_id(0);
    local_tid_40838 = get_local_id(0);
    group_sizze_40841 = get_local_size(0);
    wave_sizze_40840 = LOCKSTEP_WIDTH;
    group_tid_40839 = get_group_id(0);
    
    int32_t phys_tid_31325;
    
    phys_tid_31325 = group_tid_40839;
    
    int32_t ltid_pre_40842;
    
    ltid_pre_40842 = local_tid_40838;
    
    int64_t gtid_31294;
    
    gtid_31294 = sext_i32_i64(group_tid_40839);
    
    int32_t x_31771;
    
    x_31771 = ((__global int32_t *) defunc_4_map_res_mem_39477)[gtid_31294];
    
    int32_t x_31772 = ((__global
                        int32_t *) defunc_3_map_res_mem_39542)[gtid_31294];
    float x_31773 = ((__global float *) defunc_3_map_res_mem_39543)[gtid_31294];
    int32_t x_31774 = ((__global
                        int32_t *) defunc_3_map_res_mem_39541)[gtid_31294];
    float x_31775 = ((__global float *) defunc_0_f_res_mem_39576)[gtid_31294];
    int32_t y_31778 = sub32(x_31771, x_31772);
    float i32_res_31779 = sitofp_i32_f32(x_31772);
    float sqrt_res_31780;
    
    sqrt_res_31780 = futrts_sqrt32(i32_res_31779);
    
    float y_31781 = x_31773 * sqrt_res_31780;
    __local char *mem_39588;
    
    mem_39588 = (__local char *) mem_39588_backing_0;
    
    int64_t gtid_31297 = sext_i32_i64(ltid_pre_40842);
    int32_t phys_tid_31298 = local_tid_40838;
    int32_t index_primexp_36731 = sext_i64_i32(gtid_31297);
    bool cond_31794 = sle32(y_31778, index_primexp_36731);
    float defunc_0_f_res_31795;
    
    if (cond_31794) {
        defunc_0_f_res_31795 = 0.0F;
    } else {
        bool cond_31796 = index_primexp_36731 == 0;
        float defunc_0_f_res_f_res_31797;
        
        if (cond_31796) {
            defunc_0_f_res_f_res_31797 = x_31775;
        } else {
            int32_t i_31798 = add32(x_31772, index_primexp_36731);
            int64_t i_31799 = sext_i32_i64(i_31798);
            float x_31800 = ((__global
                              float *) defunc_4_map_res_mem_39478)[gtid_31294 *
                                                                   N_27115 +
                                                                   i_31799];
            int32_t x_31801 = sub32(x_31772, x_31774);
            int32_t i_31802 = add32(x_31801, index_primexp_36731);
            int64_t i_31803 = sext_i32_i64(i_31802);
            float y_31804 = ((__global
                              float *) defunc_4_map_res_mem_39478)[gtid_31294 *
                                                                   N_27115 +
                                                                   i_31803];
            float defunc_0_f_res_f_res_f_res_31805 = x_31800 - y_31804;
            
            defunc_0_f_res_f_res_31797 = defunc_0_f_res_f_res_f_res_31805;
        }
        defunc_0_f_res_31795 = defunc_0_f_res_f_res_31797;
    }
    ((__local float *) mem_39588)[gtid_31297] = defunc_0_f_res_31795;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_40843;
    
    dims_flat_40843 = iota32_arg_27515;
    
    float x_31790;
    float x_31791;
    float x_40845;
    float x_40846;
    bool ltid_in_bounds_40848;
    
    ltid_in_bounds_40848 = slt64(sext_i32_i64(local_tid_40838),
                                 iota32_arg_27515);
    
    int32_t skip_threads_40849;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_40848) {
            x_31791 = ((volatile __local
                        float *) mem_39588)[sext_i32_i64(local_tid_40838)];
            if ((local_tid_40838 - squot32(local_tid_40838, 32) * 32) == 0) {
                x_31790 = x_31791;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_40849 = 1;
        while (slt32(skip_threads_40849, 32)) {
            if (sle32(skip_threads_40849, local_tid_40838 -
                      squot32(local_tid_40838, 32) * 32) &&
                ltid_in_bounds_40848) {
                // read operands
                {
                    x_31790 = ((volatile __local
                                float *) mem_39588)[sext_i32_i64(local_tid_40838) -
                                                    sext_i32_i64(skip_threads_40849)];
                }
                // perform operation
                {
                    bool inactive_40850 =
                         slt64(srem64(sext_i32_i64(local_tid_40838),
                                      iota32_arg_27515),
                               sext_i32_i64(local_tid_40838) -
                               sext_i32_i64(local_tid_40838 -
                               skip_threads_40849));
                    
                    if (inactive_40850) {
                        x_31790 = x_31791;
                    }
                    if (!inactive_40850) {
                        float defunc_1_op_res_31792 = x_31790 + x_31791;
                        
                        x_31790 = defunc_1_op_res_31792;
                    }
                }
            }
            if (sle32(wave_sizze_40840, skip_threads_40849)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_40849, local_tid_40838 -
                      squot32(local_tid_40838, 32) * 32) &&
                ltid_in_bounds_40848) {
                // write result
                {
                    ((volatile __local
                      float *) mem_39588)[sext_i32_i64(local_tid_40838)] =
                        x_31790;
                    x_31791 = x_31790;
                }
            }
            if (sle32(wave_sizze_40840, skip_threads_40849)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_40849 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_40838 - squot32(local_tid_40838, 32) * 32) == 31 &&
            ltid_in_bounds_40848) {
            ((volatile __local
              float *) mem_39588)[sext_i32_i64(squot32(local_tid_40838, 32))] =
                x_31790;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_40851;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_40838, 32) == 0 && ltid_in_bounds_40848) {
                x_40846 = ((volatile __local
                            float *) mem_39588)[sext_i32_i64(local_tid_40838)];
                if ((local_tid_40838 - squot32(local_tid_40838, 32) * 32) ==
                    0) {
                    x_40845 = x_40846;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_40851 = 1;
            while (slt32(skip_threads_40851, 32)) {
                if (sle32(skip_threads_40851, local_tid_40838 -
                          squot32(local_tid_40838, 32) * 32) &&
                    (squot32(local_tid_40838, 32) == 0 &&
                     ltid_in_bounds_40848)) {
                    // read operands
                    {
                        x_40845 = ((volatile __local
                                    float *) mem_39588)[sext_i32_i64(local_tid_40838) -
                                                        sext_i32_i64(skip_threads_40851)];
                    }
                    // perform operation
                    {
                        bool inactive_40852 =
                             slt64(srem64(sext_i32_i64(local_tid_40838 * 32 +
                                          32 - 1), iota32_arg_27515),
                                   sext_i32_i64(local_tid_40838 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_40838 -
                                                 skip_threads_40851) * 32 + 32 -
                                   1));
                        
                        if (inactive_40852) {
                            x_40845 = x_40846;
                        }
                        if (!inactive_40852) {
                            float defunc_1_op_res_40847 = x_40845 + x_40846;
                            
                            x_40845 = defunc_1_op_res_40847;
                        }
                    }
                }
                if (sle32(wave_sizze_40840, skip_threads_40851)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_40851, local_tid_40838 -
                          squot32(local_tid_40838, 32) * 32) &&
                    (squot32(local_tid_40838, 32) == 0 &&
                     ltid_in_bounds_40848)) {
                    // write result
                    {
                        ((volatile __local
                          float *) mem_39588)[sext_i32_i64(local_tid_40838)] =
                            x_40845;
                        x_40846 = x_40845;
                    }
                }
                if (sle32(wave_sizze_40840, skip_threads_40851)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_40851 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_40838, 32) == 0 || !ltid_in_bounds_40848)) {
            // read operands
            {
                x_31791 = x_31790;
                x_31790 = ((__local
                            float *) mem_39588)[sext_i32_i64(squot32(local_tid_40838,
                                                                     32)) - 1];
            }
            // perform operation
            {
                bool inactive_40853 =
                     slt64(srem64(sext_i32_i64(local_tid_40838),
                                  iota32_arg_27515),
                           sext_i32_i64(local_tid_40838) -
                           sext_i32_i64(squot32(local_tid_40838, 32) * 32 - 1));
                
                if (inactive_40853) {
                    x_31790 = x_31791;
                }
                if (!inactive_40853) {
                    float defunc_1_op_res_31792 = x_31790 + x_31791;
                    
                    x_31790 = defunc_1_op_res_31792;
                }
            }
            // write final result
            {
                ((__local float *) mem_39588)[sext_i32_i64(local_tid_40838)] =
                    x_31790;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_40838, 32) == 0) {
            ((__local float *) mem_39588)[sext_i32_i64(local_tid_40838)] =
                x_31791;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_39591;
    
    mem_39591 = (__local char *) mem_39591_backing_1;
    
    bool acc0_31811;
    int32_t acc0_31812;
    float acc0_31813;
    int64_t gtid_31299 = sext_i32_i64(ltid_pre_40842);
    int32_t phys_tid_31300 = local_tid_40838;
    __local char *red_arr_mem_40854;
    
    red_arr_mem_40854 = (__local char *) red_arr_mem_40854_backing_2;
    
    __local char *red_arr_mem_40856;
    
    red_arr_mem_40856 = (__local char *) red_arr_mem_40856_backing_3;
    
    __local char *red_arr_mem_40858;
    
    red_arr_mem_40858 = (__local char *) red_arr_mem_40858_backing_4;
    
    float x_31829;
    
    x_31829 = ((__local float *) mem_39588)[gtid_31299];
    
    float x_31830 = ((__global float *) mem_39581)[gtid_31299];
    int32_t index_primexp_36734 = sext_i64_i32(gtid_31299);
    float defunc_0_f_res_31833 = x_31829 / y_31781;
    bool cond_31834 = slt32(index_primexp_36734, y_31778);
    bool isnan_res_31835;
    
    isnan_res_31835 = futrts_isnan32(defunc_0_f_res_31833);
    
    bool cond_t_res_31836 = !isnan_res_31835;
    bool x_31837 = cond_31834 && cond_t_res_31836;
    float abs_res_31838 = (float) fabs(defunc_0_f_res_31833);
    bool defunc_2_f_res_t_res_31839 = x_31830 < abs_res_31838;
    bool x_31840 = x_31837 && defunc_2_f_res_t_res_31839;
    float defunc_1_f_res_31841;
    
    if (cond_31834) {
        defunc_1_f_res_31841 = defunc_0_f_res_31833;
    } else {
        defunc_1_f_res_31841 = 0.0F;
    }
    ((__local bool *) red_arr_mem_40854)[gtid_31299] = x_31840;
    ((__local int32_t *) red_arr_mem_40856)[gtid_31299] = index_primexp_36734;
    ((__local float *) red_arr_mem_40858)[gtid_31299] = defunc_1_f_res_31841;
    ((__local float *) mem_39591)[gtid_31299] = defunc_0_f_res_31833;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_40860;
    int32_t skip_waves_40861;
    
    skip_waves_40861 = 1;
    
    bool x_31815;
    int32_t x_31816;
    float x_31817;
    bool x_31818;
    int32_t x_31819;
    float x_31820;
    
    offset_40860 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_40838, sext_i64_i32(iota32_arg_27515))) {
            x_31815 = ((__local
                        bool *) red_arr_mem_40854)[sext_i32_i64(local_tid_40838 +
                                                   offset_40860)];
            x_31816 = ((__local
                        int32_t *) red_arr_mem_40856)[sext_i32_i64(local_tid_40838 +
                                                      offset_40860)];
            x_31817 = ((__local
                        float *) red_arr_mem_40858)[sext_i32_i64(local_tid_40838 +
                                                    offset_40860)];
        }
    }
    offset_40860 = 1;
    while (slt32(offset_40860, wave_sizze_40840)) {
        if (slt32(local_tid_40838 + offset_40860,
                  sext_i64_i32(iota32_arg_27515)) && ((local_tid_40838 -
                                                       squot32(local_tid_40838,
                                                               wave_sizze_40840) *
                                                       wave_sizze_40840) & (2 *
                                                                            offset_40860 -
                                                                            1)) ==
            0) {
            // read array element
            {
                x_31818 = ((volatile __local
                            bool *) red_arr_mem_40854)[sext_i32_i64(local_tid_40838 +
                                                       offset_40860)];
                x_31819 = ((volatile __local
                            int32_t *) red_arr_mem_40856)[sext_i32_i64(local_tid_40838 +
                                                          offset_40860)];
                x_31820 = ((volatile __local
                            float *) red_arr_mem_40858)[sext_i32_i64(local_tid_40838 +
                                                        offset_40860)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_31821;
                int32_t defunc_1_op_res_31822;
                
                if (x_31815) {
                    defunc_1_op_res_31821 = x_31815;
                    defunc_1_op_res_31822 = x_31816;
                } else {
                    bool x_31823 = x_31818 && x_31818;
                    bool x_31824 = !x_31818;
                    bool y_31825 = x_31815 && x_31824;
                    bool defunc_1_op_res_f_res_31826 = x_31823 || y_31825;
                    int32_t defunc_1_op_res_f_res_31827;
                    
                    if (x_31818) {
                        defunc_1_op_res_f_res_31827 = x_31819;
                    } else {
                        defunc_1_op_res_f_res_31827 = x_31816;
                    }
                    defunc_1_op_res_31821 = defunc_1_op_res_f_res_31826;
                    defunc_1_op_res_31822 = defunc_1_op_res_f_res_31827;
                }
                
                float defunc_1_op_res_31828 = x_31817 + x_31820;
                
                x_31815 = defunc_1_op_res_31821;
                x_31816 = defunc_1_op_res_31822;
                x_31817 = defunc_1_op_res_31828;
            }
            // write result of operation
            {
                ((volatile __local
                  bool *) red_arr_mem_40854)[sext_i32_i64(local_tid_40838)] =
                    x_31815;
                ((volatile __local
                  int32_t *) red_arr_mem_40856)[sext_i32_i64(local_tid_40838)] =
                    x_31816;
                ((volatile __local
                  float *) red_arr_mem_40858)[sext_i32_i64(local_tid_40838)] =
                    x_31817;
            }
        }
        offset_40860 *= 2;
    }
    while (slt32(skip_waves_40861, squot32(sext_i64_i32(iota32_arg_27515) +
                                           wave_sizze_40840 - 1,
                                           wave_sizze_40840))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_40860 = skip_waves_40861 * wave_sizze_40840;
        if (slt32(local_tid_40838 + offset_40860,
                  sext_i64_i32(iota32_arg_27515)) && ((local_tid_40838 -
                                                       squot32(local_tid_40838,
                                                               wave_sizze_40840) *
                                                       wave_sizze_40840) == 0 &&
                                                      (squot32(local_tid_40838,
                                                               wave_sizze_40840) &
                                                       (2 * skip_waves_40861 -
                                                        1)) == 0)) {
            // read array element
            {
                x_31818 = ((__local
                            bool *) red_arr_mem_40854)[sext_i32_i64(local_tid_40838 +
                                                       offset_40860)];
                x_31819 = ((__local
                            int32_t *) red_arr_mem_40856)[sext_i32_i64(local_tid_40838 +
                                                          offset_40860)];
                x_31820 = ((__local
                            float *) red_arr_mem_40858)[sext_i32_i64(local_tid_40838 +
                                                        offset_40860)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_31821;
                int32_t defunc_1_op_res_31822;
                
                if (x_31815) {
                    defunc_1_op_res_31821 = x_31815;
                    defunc_1_op_res_31822 = x_31816;
                } else {
                    bool x_31823 = x_31818 && x_31818;
                    bool x_31824 = !x_31818;
                    bool y_31825 = x_31815 && x_31824;
                    bool defunc_1_op_res_f_res_31826 = x_31823 || y_31825;
                    int32_t defunc_1_op_res_f_res_31827;
                    
                    if (x_31818) {
                        defunc_1_op_res_f_res_31827 = x_31819;
                    } else {
                        defunc_1_op_res_f_res_31827 = x_31816;
                    }
                    defunc_1_op_res_31821 = defunc_1_op_res_f_res_31826;
                    defunc_1_op_res_31822 = defunc_1_op_res_f_res_31827;
                }
                
                float defunc_1_op_res_31828 = x_31817 + x_31820;
                
                x_31815 = defunc_1_op_res_31821;
                x_31816 = defunc_1_op_res_31822;
                x_31817 = defunc_1_op_res_31828;
            }
            // write result of operation
            {
                ((__local
                  bool *) red_arr_mem_40854)[sext_i32_i64(local_tid_40838)] =
                    x_31815;
                ((__local
                  int32_t *) red_arr_mem_40856)[sext_i32_i64(local_tid_40838)] =
                    x_31816;
                ((__local
                  float *) red_arr_mem_40858)[sext_i32_i64(local_tid_40838)] =
                    x_31817;
            }
        }
        skip_waves_40861 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    acc0_31811 = ((__local bool *) red_arr_mem_40854)[0];
    acc0_31812 = ((__local int32_t *) red_arr_mem_40856)[0];
    acc0_31813 = ((__local float *) red_arr_mem_40858)[0];
    
    bool x_31844 = acc0_31811 && acc0_31811;
    int32_t defunc_1_op_res_f_res_31848;
    
    if (acc0_31811) {
        defunc_1_op_res_f_res_31848 = acc0_31812;
    } else {
        defunc_1_op_res_f_res_31848 = -1;
    }
    
    bool cond_31855 = y_31778 == 0;
    float defunc_0_f_res_31856;
    
    if (cond_31855) {
        defunc_0_f_res_31856 = 0.0F;
    } else {
        float i32_res_31857 = sitofp_i32_f32(y_31778);
        float defunc_0_f_res_f_res_31858 = acc0_31813 / i32_res_31857;
        
        defunc_0_f_res_31856 = defunc_0_f_res_f_res_31858;
    }
    
    __local char *mem_39594;
    
    mem_39594 = (__local char *) mem_39594_backing_5;
    
    int64_t gtid_31301 = sext_i32_i64(ltid_pre_40842);
    int32_t phys_tid_31302 = local_tid_40838;
    int32_t index_primexp_36737 = sext_i64_i32(gtid_31301);
    bool cond_31861 = slt32(index_primexp_36737, y_31778);
    bool cond_31862;
    
    if (cond_31861) {
        int32_t i_31863 = add32(x_31772, index_primexp_36737);
        int64_t i_31864 = sext_i32_i64(i_31863);
        bool x_31865 = sle64(0, i_31864);
        bool y_31866 = slt64(i_31864, N_27115);
        bool bounds_check_31867 = x_31865 && y_31866;
        bool index_certs_31868;
        
        if (!bounds_check_31867) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 22) == -1) {
                    global_failure_args[0] = i_31864;
                    global_failure_args[1] = N_27115;
                    ;
                }
                local_failure = true;
                goto error_3;
            }
        }
        
        float isnan_arg_31869 = ((__global
                                  float *) defunc_4_map_res_mem_39478)[gtid_31294 *
                                                                       N_27115 +
                                                                       i_31864];
        bool isnan_res_31870;
        
        isnan_res_31870 = futrts_isnan32(isnan_arg_31869);
        
        bool cond_t_res_31871 = !isnan_res_31870;
        
        cond_31862 = cond_t_res_31871;
    } else {
        cond_31862 = 0;
    }
    
    float defunc_0_f_res_31872;
    
    if (cond_31862) {
        int32_t i_31873 = add32(x_31772, index_primexp_36737);
        int64_t i_31874 = sext_i32_i64(i_31873);
        bool x_31875 = sle64(0, i_31874);
        bool y_31876 = slt64(i_31874, N_27115);
        bool bounds_check_31877 = x_31875 && y_31876;
        bool index_certs_31878;
        
        if (!bounds_check_31877) {
            {
                if (atomic_cmpxchg_i32_global(global_failure, -1, 23) == -1) {
                    global_failure_args[0] = i_31874;
                    global_failure_args[1] = N_27115;
                    ;
                }
                local_failure = true;
                goto error_3;
            }
        }
        
        float defunc_0_f_res_t_res_31879 = ((__global
                                             float *) defunc_4_map_res_mem_39478)[gtid_31294 *
                                                                                  N_27115 +
                                                                                  i_31874];
        
        defunc_0_f_res_31872 = defunc_0_f_res_t_res_31879;
    } else {
        defunc_0_f_res_31872 = INFINITY;
    }
    ((__local float *) mem_39594)[gtid_31301] = defunc_0_f_res_31872;
    
  error_3:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_39596;
    
    mem_39596 = (__local char *) mem_39596_backing_6;
    ((__local float *) mem_39596)[sext_i32_i64(local_tid_40838)] = ((__local
                                                                     float *) mem_39594)[sext_i32_i64(local_tid_40838)];
    barrier(CLK_LOCAL_MEM_FENCE);
    for (int64_t i_31882 = 0; i_31882 < distance_27547; i_31882++) {
        int64_t index_primexp_31884 = add64(1, i_31882);
        bool cond_31885 = slt64(0, index_primexp_31884);
        bool loop_cond_31886;
        
        if (cond_31885) {
            bool x_31887 = sle64(0, index_primexp_31884);
            bool y_31888 = slt64(index_primexp_31884, iota32_arg_27515);
            bool bounds_check_31889 = x_31887 && y_31888;
            bool index_certs_31890;
            
            if (!bounds_check_31889) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 24) ==
                        -1) {
                        global_failure_args[0] = index_primexp_31884;
                        global_failure_args[1] = iota32_arg_27515;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float defunc_2_lifted_gt_arg_31891 = ((__local
                                                   float *) mem_39596)[index_primexp_31884];
            bool y_31892 = slt64(i_31882, iota32_arg_27515);
            bool index_certs_31893;
            
            if (!y_31892) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 25) ==
                        -1) {
                        global_failure_args[0] = i_31882;
                        global_failure_args[1] = iota32_arg_27515;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float defunc_1_lifted_gt_arg_31894 = ((__local
                                                   float *) mem_39596)[i_31882];
            bool defunc_1_zlze_res_31895 = defunc_1_lifted_gt_arg_31894 <=
                 defunc_2_lifted_gt_arg_31891;
            bool defunc_2_lifted_gt_res_31896 = !defunc_1_zlze_res_31895;
            
            loop_cond_31886 = defunc_2_lifted_gt_res_31896;
        } else {
            loop_cond_31886 = 0;
        }
        
        bool xszq_31897;
        int64_t xszq_31898;
        bool loop_while_31900;
        int64_t j_31901;
        
        loop_while_31900 = loop_cond_31886;
        j_31901 = index_primexp_31884;
        while (loop_while_31900) {
            int64_t loopres_31903 = sub64(j_31901, 1);
            bool x_31904 = sle64(0, j_31901);
            bool y_31905 = slt64(j_31901, iota32_arg_27515);
            bool bounds_check_31906 = x_31904 && y_31905;
            bool index_certs_31907;
            
            if (!bounds_check_31906) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 26) ==
                        -1) {
                        global_failure_args[0] = j_31901;
                        global_failure_args[1] = iota32_arg_27515;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float copy_arg_31908 = ((__local float *) mem_39596)[j_31901];
            bool x_31909 = sle64(0, loopres_31903);
            bool y_31910 = slt64(loopres_31903, iota32_arg_27515);
            bool bounds_check_31911 = x_31909 && y_31910;
            bool index_certs_31912;
            
            if (!bounds_check_31911) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 27) ==
                        -1) {
                        global_failure_args[0] = loopres_31903;
                        global_failure_args[1] = iota32_arg_27515;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float copy_arg_31913 = ((__local float *) mem_39596)[loopres_31903];
            
            barrier(CLK_LOCAL_MEM_FENCE);
            if (local_tid_40838 == 0) {
                ((__local float *) mem_39596)[j_31901] = copy_arg_31913;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            barrier(CLK_LOCAL_MEM_FENCE);
            if (local_tid_40838 == 0) {
                ((__local float *) mem_39596)[loopres_31903] = copy_arg_31908;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            bool cond_31916 = slt64(0, loopres_31903);
            bool loop_cond_31917;
            
            if (cond_31916) {
                bool index_certs_31918;
                
                if (!bounds_check_31911) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 28) ==
                            -1) {
                            global_failure_args[0] = loopres_31903;
                            global_failure_args[1] = iota32_arg_27515;
                            ;
                        }
                        local_failure = true;
                        goto error_4;
                    }
                }
                
                float defunc_2_lifted_gt_arg_31919 = ((__local
                                                       float *) mem_39596)[loopres_31903];
                int64_t i_31920 = sub64(loopres_31903, 1);
                bool x_31921 = sle64(0, i_31920);
                bool y_31922 = slt64(i_31920, iota32_arg_27515);
                bool bounds_check_31923 = x_31921 && y_31922;
                bool index_certs_31924;
                
                if (!bounds_check_31923) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 29) ==
                            -1) {
                            global_failure_args[0] = i_31920;
                            global_failure_args[1] = iota32_arg_27515;
                            ;
                        }
                        local_failure = true;
                        goto error_4;
                    }
                }
                
                float defunc_1_lifted_gt_arg_31925 = ((__local
                                                       float *) mem_39596)[i_31920];
                bool defunc_1_zlze_res_31926 = defunc_1_lifted_gt_arg_31925 <=
                     defunc_2_lifted_gt_arg_31919;
                bool defunc_2_lifted_gt_res_31927 = !defunc_1_zlze_res_31926;
                
                loop_cond_31917 = defunc_2_lifted_gt_res_31927;
            } else {
                loop_cond_31917 = 0;
            }
            
            bool loop_while_tmp_40863 = loop_cond_31917;
            int64_t j_tmp_40864 = loopres_31903;
            
            loop_while_31900 = loop_while_tmp_40863;
            j_31901 = j_tmp_40864;
        }
        xszq_31897 = loop_while_31900;
        xszq_31898 = j_31901;
    }
    
    int32_t i_31928 = sdiv32(y_31778, 2);
    int32_t j_31929 = sub32(i_31928, 1);
    bool cond_31930 = x_31771 == x_31772;
    float defunc_0_f_res_31931;
    
    if (cond_31930) {
        defunc_0_f_res_31931 = 0.0F;
    } else {
        int32_t x_31932 = smod32(y_31778, 2);
        bool cond_31933 = x_31932 == 0;
        float defunc_0_f_res_f_res_31934;
        
        if (cond_31933) {
            int64_t j_31935 = sext_i32_i64(j_31929);
            bool x_31936 = sle64(0, j_31935);
            bool y_31937 = slt64(j_31935, iota32_arg_27515);
            bool bounds_check_31938 = x_31936 && y_31937;
            bool index_certs_31939;
            
            if (!bounds_check_31938) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 30) ==
                        -1) {
                        global_failure_args[0] = j_31935;
                        global_failure_args[1] = iota32_arg_27515;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float x_31940 = ((__local float *) mem_39596)[j_31935];
            int64_t i_31941 = sext_i32_i64(i_31928);
            bool x_31942 = sle64(0, i_31941);
            bool y_31943 = slt64(i_31941, iota32_arg_27515);
            bool bounds_check_31944 = x_31942 && y_31943;
            bool index_certs_31945;
            
            if (!bounds_check_31944) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 31) ==
                        -1) {
                        global_failure_args[0] = i_31941;
                        global_failure_args[1] = iota32_arg_27515;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float y_31946 = ((__local float *) mem_39596)[i_31941];
            float x_31947 = x_31940 + y_31946;
            float defunc_0_f_res_f_res_t_res_31948 = x_31947 / 2.0F;
            
            defunc_0_f_res_f_res_31934 = defunc_0_f_res_f_res_t_res_31948;
        } else {
            int64_t i_31949 = sext_i32_i64(i_31928);
            bool x_31950 = sle64(0, i_31949);
            bool y_31951 = slt64(i_31949, iota32_arg_27515);
            bool bounds_check_31952 = x_31950 && y_31951;
            bool index_certs_31953;
            
            if (!bounds_check_31952) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 32) ==
                        -1) {
                        global_failure_args[0] = i_31949;
                        global_failure_args[1] = iota32_arg_27515;
                        ;
                    }
                    local_failure = true;
                    goto error_4;
                }
            }
            
            float defunc_0_f_res_f_res_f_res_31954 = ((__local
                                                       float *) mem_39596)[i_31949];
            
            defunc_0_f_res_f_res_31934 = defunc_0_f_res_f_res_f_res_31954;
        }
        defunc_0_f_res_31931 = defunc_0_f_res_f_res_31934;
    }
    
    bool cond_31955 = !x_31844;
    int32_t fst_breakzq_31956;
    
    if (cond_31955) {
        fst_breakzq_31956 = -1;
    } else {
        bool cond_31957 = slt32(defunc_1_op_res_f_res_31848, y_31778);
        int32_t adjustValInds_res_31958;
        
        if (cond_31957) {
            int32_t i_31959 = add32(x_31772, defunc_1_op_res_f_res_31848);
            int64_t i_31960 = sext_i32_i64(i_31959);
            int32_t x_31961 = ((__global
                                int32_t *) defunc_4_map_res_mem_39479)[gtid_31294 *
                                                                       N_27115 +
                                                                       i_31960];
            int32_t adjustValInds_res_t_res_31962 = sub32(x_31961, n_27120);
            
            adjustValInds_res_31958 = adjustValInds_res_t_res_31962;
        } else {
            adjustValInds_res_31958 = -1;
        }
        fst_breakzq_31956 = adjustValInds_res_31958;
    }
    
    bool cond_31963 = sle32(x_31772, 5);
    bool cond_f_res_31964 = sle32(y_31778, 5);
    bool x_31965 = !cond_31963;
    bool y_31966 = cond_f_res_31964 && x_31965;
    bool cond_31967 = cond_31963 || y_31966;
    int32_t fst_breakzq_31968;
    
    if (cond_31967) {
        fst_breakzq_31968 = -2;
    } else {
        fst_breakzq_31968 = fst_breakzq_31956;
    }
    
    __local char *mem_39620;
    
    mem_39620 = (__local char *) mem_39620_backing_7;
    ((__local float *) mem_39620)[sext_i32_i64(local_tid_40838)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_31323 = sext_i32_i64(ltid_pre_40842);
    int32_t phys_tid_31324 = local_tid_40838;
    int32_t index_primexp_36740 = sext_i64_i32(write_i_31323);
    float write_value_31972 = ((__local float *) mem_39591)[write_i_31323];
    bool cond_31973 = slt32(index_primexp_36740, y_31778);
    int32_t defunc_0_f_res_31974;
    
    if (cond_31973) {
        int32_t i_31975 = add32(x_31772, index_primexp_36740);
        int64_t i_31976 = sext_i32_i64(i_31975);
        int32_t x_31977 = ((__global
                            int32_t *) defunc_4_map_res_mem_39479)[gtid_31294 *
                                                                   N_27115 +
                                                                   i_31976];
        int32_t defunc_0_f_res_t_res_31978 = sub32(x_31977, n_27120);
        
        defunc_0_f_res_31974 = defunc_0_f_res_t_res_31978;
    } else {
        defunc_0_f_res_31974 = -1;
    }
    
    int64_t defunc_0_f_res_31979 = sext_i32_i64(defunc_0_f_res_31974);
    
    if (sle64(0, defunc_0_f_res_31979) && slt64(defunc_0_f_res_31979,
                                                iota32_arg_27515)) {
        ((__local float *) mem_39620)[defunc_0_f_res_31979] = write_value_31972;
    }
    
  error_4:
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_failure)
        return;
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global float *) mem_39624)[gtid_31294 * iota32_arg_27515 +
                                   sext_i32_i64(local_tid_40838)] = ((__local
                                                                      float *) mem_39620)[sext_i32_i64(local_tid_40838)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global float *) mem_39627)[gtid_31294 * iota32_arg_27515 +
                                   sext_i32_i64(local_tid_40838)] = ((__local
                                                                      float *) mem_39591)[sext_i32_i64(local_tid_40838)];
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_40838 == 0) {
        ((__global int32_t *) mem_39629)[gtid_31294] = fst_breakzq_31968;
    }
    if (local_tid_40838 == 0) {
        ((__global float *) mem_39631)[gtid_31294] = defunc_0_f_res_31856;
    }
    if (local_tid_40838 == 0) {
        ((__global float *) mem_39633)[gtid_31294] = defunc_0_f_res_31931;
    }
    
  error_5:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_36853(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_38781_backing_aligned_0,
                                                    int64_t m_27116,
                                                    int32_t n_27120,
                                                    int64_t i32_res_27135,
                                                    int64_t Ty_36841,
                                                    int64_t Tx_36842,
                                                    int64_t gridDim_x_36843,
                                                    int64_t gridDim_y_36844,
                                                    int64_t group_sizze_36848,
                                                    int64_t count_shmem_36849,
                                                    __global
                                                    unsigned char *mem_38694,
                                                    __global
                                                    unsigned char *mem_38698,
                                                    __global
                                                    unsigned char *mem_38769,
                                                    __global
                                                    unsigned char *mem_38829)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_38781_backing_0 = (__local volatile
                                                           char *) mem_38781_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_39954;
    int32_t local_tid_39955;
    int64_t group_sizze_39958;
    int32_t wave_sizze_39957;
    int32_t group_tid_39956;
    
    global_tid_39954 = get_global_id(0);
    local_tid_39955 = get_local_id(0);
    group_sizze_39958 = get_local_size(0);
    wave_sizze_39957 = LOCKSTEP_WIDTH;
    group_tid_39956 = get_group_id(0);
    
    int32_t gid_flat_36853;
    
    gid_flat_36853 = group_tid_39956;
    
    int32_t ltid_pre_39959;
    
    ltid_pre_39959 = squot32(local_tid_39955, sext_i64_i32(Ty_36841) *
                             sext_i64_i32(Tx_36842));
    
    int32_t ltid_pre_39960;
    
    ltid_pre_39960 = squot32(local_tid_39955 - squot32(local_tid_39955,
                                                       sext_i64_i32(Ty_36841) *
                                                       sext_i64_i32(Tx_36842)) *
                             (sext_i64_i32(Ty_36841) * sext_i64_i32(Tx_36842)),
                             sext_i64_i32(Tx_36842));
    
    int32_t ltid_pre_39961;
    
    ltid_pre_39961 = local_tid_39955 - squot32(local_tid_39955,
                                               sext_i64_i32(Ty_36841) *
                                               sext_i64_i32(Tx_36842)) *
        (sext_i64_i32(Ty_36841) * sext_i64_i32(Tx_36842)) -
        squot32(local_tid_39955 - squot32(local_tid_39955,
                                          sext_i64_i32(Ty_36841) *
                                          sext_i64_i32(Tx_36842)) *
                (sext_i64_i32(Ty_36841) * sext_i64_i32(Tx_36842)),
                sext_i64_i32(Tx_36842)) * sext_i64_i32(Tx_36842);
    
    int32_t ltid_pre_39962;
    
    ltid_pre_39962 = squot32(local_tid_39955, sext_i64_i32(Tx_36842));
    
    int32_t ltid_pre_39963;
    
    ltid_pre_39963 = local_tid_39955 - squot32(local_tid_39955,
                                               sext_i64_i32(Tx_36842)) *
        sext_i64_i32(Tx_36842);
    
    int32_t ltid_pre_39964;
    
    ltid_pre_39964 = local_tid_39955;
    
    int64_t gid_zz_36852;
    
    gid_zz_36852 = squot64(sext_i32_i64(group_tid_39956), gridDim_y_36844 *
                           gridDim_x_36843);
    
    int64_t gid_y_36851;
    
    gid_y_36851 = squot64(sext_i32_i64(group_tid_39956) -
                          squot64(sext_i32_i64(group_tid_39956),
                                  gridDim_y_36844 * gridDim_x_36843) *
                          (gridDim_y_36844 * gridDim_x_36843), gridDim_x_36843);
    
    int64_t gid_x_36850;
    
    gid_x_36850 = sext_i32_i64(group_tid_39956) -
        squot64(sext_i32_i64(group_tid_39956), gridDim_y_36844 *
                gridDim_x_36843) * (gridDim_y_36844 * gridDim_x_36843) -
        squot64(sext_i32_i64(group_tid_39956) -
                squot64(sext_i32_i64(group_tid_39956), gridDim_y_36844 *
                        gridDim_x_36843) * (gridDim_y_36844 * gridDim_x_36843),
                gridDim_x_36843) * gridDim_x_36843;
    
    int64_t ii_36854;
    
    ii_36854 = 30 * gid_zz_36852;
    
    int64_t jj1_36855 = Ty_36841 * gid_y_36851;
    int64_t jj2_36856 = Tx_36842 * gid_x_36850;
    float mem_38779[30];
    int64_t ltid_y_36859 = sext_i32_i64(ltid_pre_39962);
    int64_t ltid_x_36857 = sext_i32_i64(ltid_pre_39963);
    int32_t ltid_flat_36858 = local_tid_39955;
    float mem_38773[30];
    
    for (int32_t i_38592 = 0; i_38592 < 30; i_38592++) {
        int64_t i_36867 = sext_i32_i64(i_38592);
        
        mem_38773[i_36867] = 0.0F;
    }
    for (int64_t i_39966 = 0; i_39966 < 30; i_39966++) {
        mem_38779[i_39966] = mem_38773[i_39966];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_38781;
    
    mem_38781 = (__local char *) mem_38781_backing_0;
    
    float loop_mem_38811[30];
    float mem_param_38782[30];
    
    for (int32_t i_1 = 0; i_1 < 30; i_1++)
        mem_param_38782[i_1] = mem_38779[i_1];
    for (int32_t i_38594 = 0; i_38594 < n_27120; i_38594++) {
        int64_t i_36872 = sext_i32_i64(i_38594);
        
        for (int64_t i_36875 = 0; i_36875 < count_shmem_36849; i_36875++) {
            int64_t offs_36888 = group_sizze_36848 * i_36875;
            int64_t ltid_36878 = sext_i32_i64(ltid_pre_39964);
            int32_t ltid_flat_36877 = local_tid_39955;
            int64_t loc_ind_36889 = ltid_36878 + offs_36888;
            int64_t gtid_36890 = ii_36854 + loc_ind_36889;
            bool cond_36891 = slt64(gtid_36890, m_27116);
            float y_elem_36892;
            
            if (cond_36891) {
                float Y_elem_36894 = ((__global float *) mem_38769)[i_36872 *
                                                                    m_27116 +
                                                                    gtid_36890];
                
                y_elem_36892 = Y_elem_36894;
            } else {
                y_elem_36892 = 0.0F;
            }
            
            bool cond_36896 = slt64(loc_ind_36889, 30);
            int64_t y_loc_ind_36897;
            
            if (cond_36896) {
                y_loc_ind_36897 = loc_ind_36889;
            } else {
                y_loc_ind_36897 = -1;
            }
            if (sle64(0, y_loc_ind_36897) && slt64(y_loc_ind_36897, 30)) {
                ((__local float *) mem_38781)[y_loc_ind_36897] = y_elem_36892;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
        
        float mem_38810[30];
        int64_t ltid_y_36903 = sext_i32_i64(ltid_pre_39962);
        int64_t ltid_x_36901 = sext_i32_i64(ltid_pre_39963);
        int32_t ltid_flat_36902 = local_tid_39955;
        int64_t gtid_36930 = jj1_36855 + ltid_y_36903;
        int64_t gtid_36931 = jj2_36856 + ltid_x_36901;
        bool binop_x_36933 = slt64(gtid_36930, i32_res_27135);
        bool binop_y_36934 = slt64(gtid_36931, i32_res_27135);
        bool cond_36935 = binop_x_36933 && binop_y_36934;
        float mem_39710[30];
        
        if (cond_36935) {
            float x_36938 = ((__global float *) mem_38694)[i_36872 *
                                                           i32_res_27135 +
                                                           gtid_36930];
            float x_36940 = ((__global float *) mem_38698)[i_36872 *
                                                           i32_res_27135 +
                                                           gtid_36931];
            
            for (int32_t i_38593 = 0; i_38593 < 30; i_38593++) {
                int64_t i_36942 = sext_i32_i64(i_38593);
                int64_t gtid_36944 = ii_36854 + i_36942;
                bool cond_36945 = slt64(gtid_36944, m_27116);
                
                if (cond_36945) {
                    float inp_reg_var2zz_36947 = ((__local
                                                   float *) mem_38781)[i_36942];
                    float res_reg_var2zz_36948 = mem_param_38782[i_36942];
                    float x_36952 = x_36938 * x_36940;
                    bool isnan_res_36953;
                    
                    isnan_res_36953 = futrts_isnan32(inp_reg_var2zz_36947);
                    
                    float y_36954;
                    
                    if (isnan_res_36953) {
                        y_36954 = 0.0F;
                    } else {
                        y_36954 = 1.0F;
                    }
                    
                    float defunc_2_f_res_36955 = x_36952 * y_36954;
                    float defunc_1_op_res_36959 = res_reg_var2zz_36948 +
                          defunc_2_f_res_36955;
                    
                    mem_param_38782[i_36942] = defunc_1_op_res_36959;
                }
            }
            for (int64_t i_39972 = 0; i_39972 < 30; i_39972++) {
                mem_39710[i_39972] = mem_param_38782[i_39972];
            }
        } else {
            for (int64_t i_39973 = 0; i_39973 < 30; i_39973++) {
                mem_39710[i_39973] = mem_param_38782[i_39973];
            }
        }
        for (int64_t i_39974 = 0; i_39974 < 30; i_39974++) {
            mem_38810[i_39974] = mem_39710[i_39974];
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_39967[30];
        
        for (int32_t i_2 = 0; i_2 < 30; i_2++)
            mem_param_tmp_39967[i_2] = mem_38810[i_2];
        for (int32_t i_3 = 0; i_3 < 30; i_3++)
            mem_param_38782[i_3] = mem_param_tmp_39967[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 30; i_4++)
        loop_mem_38811[i_4] = mem_param_38782[i_4];
    
    float mem_38825[30 * 1 * 1];
    int64_t ltid_zz_36968 = sext_i32_i64(ltid_pre_39959);
    int64_t ltid_y_36967 = sext_i32_i64(ltid_pre_39960);
    int64_t ltid_x_36965 = sext_i32_i64(ltid_pre_39961);
    int32_t ltid_flat_36966 = local_tid_39955;
    float mem_38819[30 * 1 * 1];
    
    for (int32_t i_38596 = 0; i_38596 < 30; i_38596++) {
        int64_t i_36977 = sext_i32_i64(i_38596);
        
        for (int64_t i_39976 = 0; i_39976 < 1; i_39976++) {
            mem_38819[i_36977 + i_39976] = loop_mem_38811[i_36977 + i_39976];
        }
    }
    for (int64_t i_39977 = 0; i_39977 < 30; i_39977++) {
        for (int64_t i_39978 = 0; i_39978 < 1; i_39978++) {
            for (int64_t i_39979 = 0; i_39979 < 1; i_39979++) {
                mem_38825[i_39977 + i_39978 + i_39979] = mem_38819[i_39977 +
                                                                   i_39978 +
                                                                   i_39979];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t reg_tile_i_39980 = squot64(sext_i32_i64(local_tid_39955), Ty_36841 *
                                       Tx_36842);
    int64_t reg_tile_i_39981 = squot64(sext_i32_i64(local_tid_39955) -
                                       squot64(sext_i32_i64(local_tid_39955),
                                               Ty_36841 * Tx_36842) *
                                       (Ty_36841 * Tx_36842), Tx_36842);
    int64_t reg_tile_i_39982 = sext_i32_i64(local_tid_39955) -
            squot64(sext_i32_i64(local_tid_39955), Ty_36841 * Tx_36842) *
            (Ty_36841 * Tx_36842) - squot64(sext_i32_i64(local_tid_39955) -
                                            squot64(sext_i32_i64(local_tid_39955),
                                                    Ty_36841 * Tx_36842) *
                                            (Ty_36841 * Tx_36842), Tx_36842) *
            Tx_36842;
    int64_t tile_dim_start_39983 = 30 * (gid_zz_36852 + reg_tile_i_39980);
    int64_t tile_dim_start_39984 = Ty_36841 * gid_y_36851 + reg_tile_i_39981;
    int64_t tile_dim_start_39985 = Tx_36842 * gid_x_36850 + reg_tile_i_39982;
    
    for (int64_t nest_i_39986 = 0; nest_i_39986 < 30; nest_i_39986++) {
        for (int64_t nest_i_39987 = 0; nest_i_39987 < 1; nest_i_39987++) {
            for (int64_t nest_i_39988 = 0; nest_i_39988 < 1; nest_i_39988++) {
                if ((slt64(tile_dim_start_39983 + nest_i_39986, m_27116) &&
                     slt64(tile_dim_start_39984 + nest_i_39987,
                           i32_res_27135)) && slt64(tile_dim_start_39985 +
                                                    nest_i_39988,
                                                    i32_res_27135)) {
                    ((__global float *) mem_38829)[(tile_dim_start_39983 +
                                                    nest_i_39986) *
                                                   (i32_res_27135 *
                                                    i32_res_27135) +
                                                   (tile_dim_start_39984 +
                                                    nest_i_39987) *
                                                   i32_res_27135 +
                                                   (tile_dim_start_39985 +
                                                    nest_i_39988)] =
                        mem_38825[nest_i_39986 + nest_i_39987 + nest_i_39988];
                }
            }
        }
    }
    
  error_4:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_37006(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_38968_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_38966_backing_aligned_1,
                                                    int64_t m_27116,
                                                    int64_t N_27117,
                                                    int64_t i32_res_27129,
                                                    int64_t i32_res_27135,
                                                    int64_t gridDim_x_37000,
                                                    int64_t full_tiles_37031,
                                                    int64_t kk_37238, __global
                                                    unsigned char *images_mem_38682,
                                                    __global
                                                    unsigned char *mem_38694,
                                                    __global
                                                    unsigned char *mem_39140)
{
    #define Ty_36987 (mainDetailedziTy_36984)
    #define Ry_36988 (mainDetailedziRy_36986)
    #define Tx_36989 (mainDetailedziTx_36983)
    #define Rx_36990 (mainDetailedziRx_36985)
    #define Tk_36991 (mainDetailedziTk_36982)
    #define tk_div_tx_36992 (sdiv_up64(mainDetailedziTk_36982, mainDetailedziTx_36983))
    #define tk_div_ty_36993 (sdiv_up64(mainDetailedziTk_36982, mainDetailedziTy_36984))
    #define TxRx_36994 (mainDetailedziTx_36983 * mainDetailedziRx_36985)
    #define TyRy_36995 (mainDetailedziTy_36984 * mainDetailedziRy_36986)
    #define a_loc_szz_36997 (mainDetailedziTk_36982 * (mainDetailedziTy_36984 * mainDetailedziRy_36986))
    #define b_loc_szz_36999 (mainDetailedziRx_36985 * (mainDetailedziTx_36983 * mainDetailedziTk_36982))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_38968_backing_1 = (__local volatile
                                                           char *) mem_38968_backing_aligned_0;
    __local volatile char *restrict mem_38966_backing_0 = (__local volatile
                                                           char *) mem_38966_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40128;
    int32_t local_tid_40129;
    int64_t group_sizze_40132;
    int32_t wave_sizze_40131;
    int32_t group_tid_40130;
    
    global_tid_40128 = get_global_id(0);
    local_tid_40129 = get_local_id(0);
    group_sizze_40132 = get_local_size(0);
    wave_sizze_40131 = LOCKSTEP_WIDTH;
    group_tid_40130 = get_group_id(0);
    
    int32_t gid_flat_37006;
    
    gid_flat_37006 = group_tid_40130;
    
    int32_t ltid_pre_40133;
    
    ltid_pre_40133 = squot32(local_tid_40129, sext_i64_i32(Tx_36989));
    
    int32_t ltid_pre_40134;
    
    ltid_pre_40134 = local_tid_40129 - squot32(local_tid_40129,
                                               sext_i64_i32(Tx_36989)) *
        sext_i64_i32(Tx_36989);
    
    int64_t gid_y_37005;
    
    gid_y_37005 = squot64(sext_i32_i64(group_tid_40130), gridDim_x_37000);
    
    int64_t gid_x_37004;
    
    gid_x_37004 = sext_i32_i64(group_tid_40130) -
        squot64(sext_i32_i64(group_tid_40130), gridDim_x_37000) *
        gridDim_x_37000;
    
    int64_t iii_37007;
    
    iii_37007 = TyRy_36995 * gid_y_37005;
    
    int64_t jjj_37008 = TxRx_36994 * gid_x_37004;
    float mem_38964[Ry_36988 * Rx_36990];
    int64_t ltid_y_37011 = sext_i32_i64(ltid_pre_40133);
    int64_t ltid_x_37009 = sext_i32_i64(ltid_pre_40134);
    int32_t ltid_flat_37010 = local_tid_40129;
    float mem_38955[Ry_36988 * Rx_36990];
    
    for (int64_t i_37022 = 0; i_37022 < Ry_36988; i_37022++) {
        for (int64_t i_37025 = 0; i_37025 < Rx_36990; i_37025++) {
            mem_38955[i_37022 * Rx_36990 + i_37025] = 0.0F;
        }
    }
    for (int64_t i_40137 = 0; i_40137 < Ry_36988; i_40137++) {
        for (int64_t i_40138 = 0; i_40138 < Rx_36990; i_40138++) {
            mem_38964[i_40137 * Rx_36990 + i_40138] = mem_38955[i_40137 *
                                                                Rx_36990 +
                                                                i_40138];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_38966;
    
    mem_38966 = (__local char *) mem_38966_backing_0;
    
    __local char *mem_38968;
    
    mem_38968 = (__local char *) mem_38968_backing_1;
    
    float mem_39039[Ry_36988];
    float mem_39043[Rx_36990];
    float loop_mem_39055[Ry_36988 * Rx_36990];
    float mem_param_38969[Ry_36988 * Rx_36990];
    
    for (int32_t i_2 = 0; i_2 < Ry_36988 * Rx_36990; i_2++)
        mem_param_38969[i_2] = mem_38964[i_2];
    for (int64_t i_37032 = 0; i_37032 < full_tiles_37031; i_37032++) {
        int64_t kk_37036 = Tk_36991 * i_37032;
        
        for (int64_t i_37037 = 0; i_37037 < Ry_36988; i_37037++) {
            int64_t binop_y_37060 = Ty_36987 * i_37037;
            
            for (int64_t i_37039 = 0; i_37039 < tk_div_tx_36992; i_37039++) {
                int64_t binop_y_37058 = Tx_36989 * i_37039;
                int64_t ltid_x_37041 = sext_i32_i64(ltid_pre_40133);
                int64_t ltid_y_37042 = sext_i32_i64(ltid_pre_40134);
                int32_t ltid_flat_37043 = local_tid_40129;
                int64_t k_37059 = ltid_y_37042 + binop_y_37058;
                int64_t i_37061 = ltid_x_37041 + binop_y_37060;
                int64_t gtid_37062 = iii_37007 + i_37061;
                int64_t A_col_idx_37063 = kk_37036 + k_37059;
                bool cond_37064 = slt64(gtid_37062, m_27116);
                float A_elem_37065;
                
                if (cond_37064) {
                    float A_elem_37067 = ((__global
                                           float *) images_mem_38682)[gtid_37062 *
                                                                      N_27117 +
                                                                      A_col_idx_37063];
                    
                    A_elem_37065 = A_elem_37067;
                } else {
                    A_elem_37065 = 0.0F;
                }
                
                bool cond_37069 = slt64(k_37059, Tk_36991);
                int64_t a_loc_ind_37070;
                
                if (cond_37069) {
                    int64_t binop_y_37071 = Tk_36991 * i_37061;
                    int64_t loc_fi_37072 = k_37059 + binop_y_37071;
                    
                    a_loc_ind_37070 = loc_fi_37072;
                } else {
                    a_loc_ind_37070 = -1;
                }
                if (sle64(0, a_loc_ind_37070) && slt64(a_loc_ind_37070,
                                                       a_loc_szz_36997)) {
                    ((__local float *) mem_38966)[a_loc_ind_37070] =
                        A_elem_37065;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_37077 = 0; i_37077 < tk_div_ty_36993; i_37077++) {
            int64_t binop_y_37098 = Ty_36987 * i_37077;
            
            for (int64_t i_37079 = 0; i_37079 < Rx_36990; i_37079++) {
                int64_t binop_y_37100 = Tx_36989 * i_37079;
                int64_t ltid_x_37081 = sext_i32_i64(ltid_pre_40133);
                int64_t ltid_y_37082 = sext_i32_i64(ltid_pre_40134);
                int32_t ltid_flat_37083 = local_tid_40129;
                int64_t k_37099 = ltid_x_37081 + binop_y_37098;
                int64_t j_37101 = ltid_y_37082 + binop_y_37100;
                int64_t gtid_37102 = jjj_37008 + j_37101;
                int64_t B_row_idx_37103 = kk_37036 + k_37099;
                bool cond_37104 = slt64(gtid_37102, i32_res_27135);
                float B_elem_37105;
                
                if (cond_37104) {
                    float B_elem_37107 = ((__global
                                           float *) mem_38694)[B_row_idx_37103 *
                                                               i32_res_27135 +
                                                               gtid_37102];
                    
                    B_elem_37105 = B_elem_37107;
                } else {
                    B_elem_37105 = 0.0F;
                }
                
                bool cond_37109 = slt64(k_37099, Tk_36991);
                int64_t b_loc_ind_37110;
                
                if (cond_37109) {
                    int64_t binop_y_37111 = TxRx_36994 * k_37099;
                    int64_t loc_fi_37112 = j_37101 + binop_y_37111;
                    
                    b_loc_ind_37110 = loc_fi_37112;
                } else {
                    b_loc_ind_37110 = -1;
                }
                if (sle64(0, b_loc_ind_37110) && slt64(b_loc_ind_37110,
                                                       b_loc_szz_36999)) {
                    ((__local float *) mem_38968)[b_loc_ind_37110] =
                        B_elem_37105;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_39054[Ry_36988 * Rx_36990];
        float mem_param_39026[Ry_36988 * Rx_36990];
        
        for (int32_t i_3 = 0; i_3 < Ry_36988 * Rx_36990; i_3++)
            mem_param_39026[i_3] = mem_param_38969[i_3];
        for (int64_t i_37117 = 0; i_37117 < Tk_36991; i_37117++) {
            int64_t binop_y_37156 = TxRx_36994 * i_37117;
            int64_t ltid_y_37121 = sext_i32_i64(ltid_pre_40133);
            int64_t ltid_x_37119 = sext_i32_i64(ltid_pre_40134);
            int32_t ltid_flat_37120 = local_tid_40129;
            float mem_39029[Ry_36988];
            float mem_39031[Rx_36990];
            int64_t binop_x_37147 = Ry_36988 * ltid_y_37121;
            
            for (int64_t i_37145 = 0; i_37145 < Ry_36988; i_37145++) {
                int64_t binop_x_37148 = i_37145 + binop_x_37147;
                int64_t binop_y_37149 = Tk_36991 * binop_x_37148;
                int64_t a_loc_ind_37150 = i_37117 + binop_y_37149;
                
                for (int64_t i_40150 = 0; i_40150 < 1; i_40150++) {
                    mem_39029[i_37145 + i_40150] = ((__local
                                                     float *) mem_38966)[a_loc_ind_37150 +
                                                                         i_40150];
                }
            }
            
            int64_t binop_y_37158 = Rx_36990 * ltid_x_37119;
            
            for (int64_t i_37154 = 0; i_37154 < Rx_36990; i_37154++) {
                int64_t binop_x_37157 = i_37154 + binop_y_37156;
                int64_t b_loc_ind_37159 = binop_x_37157 + binop_y_37158;
                
                for (int64_t i_40152 = 0; i_40152 < 1; i_40152++) {
                    mem_39031[i_37154 + i_40152] = ((__local
                                                     float *) mem_38968)[b_loc_ind_37159 +
                                                                         i_40152];
                }
            }
            for (int64_t i_40153 = 0; i_40153 < Ry_36988; i_40153++) {
                mem_39039[i_40153] = mem_39029[i_40153];
            }
            for (int64_t i_40154 = 0; i_40154 < Rx_36990; i_40154++) {
                mem_39043[i_40154] = mem_39031[i_40154];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_39053[Ry_36988 * Rx_36990];
            int64_t ltid_y_37166 = sext_i32_i64(ltid_pre_40133);
            int64_t ltid_x_37164 = sext_i32_i64(ltid_pre_40134);
            int32_t ltid_flat_37165 = local_tid_40129;
            int64_t binop_y_37209 = Ry_36988 * ltid_y_37166;
            int64_t binop_y_37213 = Rx_36990 * ltid_x_37164;
            
            for (int64_t i_37203 = 0; i_37203 < Ry_36988; i_37203++) {
                int64_t binop_x_37208 = iii_37007 + i_37203;
                int64_t cmpop_x_37210 = binop_x_37208 + binop_y_37209;
                bool binop_x_37211 = slt64(cmpop_x_37210, m_27116);
                
                for (int64_t i_37206 = 0; i_37206 < Rx_36990; i_37206++) {
                    int64_t binop_x_37212 = jjj_37008 + i_37206;
                    int64_t cmpop_x_37214 = binop_x_37212 + binop_y_37213;
                    bool binop_y_37215 = slt64(cmpop_x_37214, i32_res_27135);
                    bool cond_37216 = binop_x_37211 && binop_y_37215;
                    
                    if (cond_37216) {
                        float a_37218 = mem_39039[i_37203];
                        float c_37220 = mem_param_39026[i_37203 * Rx_36990 +
                                                        i_37206];
                        bool isnan_res_37223;
                        
                        isnan_res_37223 = futrts_isnan32(a_37218);
                        
                        float defunc_1_f_res_37224;
                        
                        if (isnan_res_37223) {
                            defunc_1_f_res_37224 = 0.0F;
                        } else {
                            float b_37219 = mem_39043[i_37206];
                            float defunc_1_f_res_f_res_37225 = a_37218 *
                                  b_37219;
                            
                            defunc_1_f_res_37224 = defunc_1_f_res_f_res_37225;
                        }
                        
                        float defunc_1_op_res_37229 = c_37220 +
                              defunc_1_f_res_37224;
                        
                        mem_param_39026[i_37203 * Rx_36990 + i_37206] =
                            defunc_1_op_res_37229;
                    }
                }
            }
            for (int64_t i_40157 = 0; i_40157 < Ry_36988; i_40157++) {
                for (int64_t i_40158 = 0; i_40158 < Rx_36990; i_40158++) {
                    mem_39053[i_40157 * Rx_36990 + i_40158] =
                        mem_param_39026[i_40157 * Rx_36990 + i_40158];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_40147[Ry_36988 * Rx_36990];
            
            for (int32_t i_4 = 0; i_4 < Ry_36988 * Rx_36990; i_4++)
                mem_param_tmp_40147[i_4] = mem_39053[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_36988 * Rx_36990; i_5++)
                mem_param_39026[i_5] = mem_param_tmp_40147[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_36988 * Rx_36990; i_6++)
            loop_mem_39054[i_6] = mem_param_39026[i_6];
        
        float mem_param_tmp_40139[Ry_36988 * Rx_36990];
        
        for (int32_t i_7 = 0; i_7 < Ry_36988 * Rx_36990; i_7++)
            mem_param_tmp_40139[i_7] = loop_mem_39054[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_36988 * Rx_36990; i_8++)
            mem_param_38969[i_8] = mem_param_tmp_40139[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_36988 * Rx_36990; i_9++)
        loop_mem_39055[i_9] = mem_param_38969[i_9];
    for (int64_t i_37239 = 0; i_37239 < Ry_36988; i_37239++) {
        int64_t binop_y_37264 = Ty_36987 * i_37239;
        
        for (int64_t i_37241 = 0; i_37241 < tk_div_tx_36992; i_37241++) {
            int64_t binop_y_37262 = Tx_36989 * i_37241;
            int64_t ltid_x_37243 = sext_i32_i64(ltid_pre_40133);
            int64_t ltid_y_37244 = sext_i32_i64(ltid_pre_40134);
            int32_t ltid_flat_37245 = local_tid_40129;
            int64_t k_37263 = ltid_y_37244 + binop_y_37262;
            int64_t i_37265 = ltid_x_37243 + binop_y_37264;
            int64_t gtid_37266 = iii_37007 + i_37265;
            int64_t A_col_idx_37267 = kk_37238 + k_37263;
            bool binop_x_37268 = slt64(gtid_37266, m_27116);
            bool binop_y_37269 = slt64(A_col_idx_37267, i32_res_27129);
            bool cond_37270 = binop_x_37268 && binop_y_37269;
            float A_elem_37271;
            
            if (cond_37270) {
                float A_elem_37273 = ((__global
                                       float *) images_mem_38682)[gtid_37266 *
                                                                  N_27117 +
                                                                  A_col_idx_37267];
                
                A_elem_37271 = A_elem_37273;
            } else {
                A_elem_37271 = 0.0F;
            }
            
            bool cond_37275 = slt64(k_37263, Tk_36991);
            int64_t a_loc_ind_37276;
            
            if (cond_37275) {
                int64_t binop_y_37277 = Tk_36991 * i_37265;
                int64_t loc_fi_37278 = k_37263 + binop_y_37277;
                
                a_loc_ind_37276 = loc_fi_37278;
            } else {
                a_loc_ind_37276 = -1;
            }
            if (sle64(0, a_loc_ind_37276) && slt64(a_loc_ind_37276,
                                                   a_loc_szz_36997)) {
                ((__local float *) mem_38966)[a_loc_ind_37276] = A_elem_37271;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_37283 = 0; i_37283 < tk_div_ty_36993; i_37283++) {
        int64_t binop_y_37306 = Ty_36987 * i_37283;
        
        for (int64_t i_37285 = 0; i_37285 < Rx_36990; i_37285++) {
            int64_t binop_y_37308 = Tx_36989 * i_37285;
            int64_t ltid_x_37287 = sext_i32_i64(ltid_pre_40133);
            int64_t ltid_y_37288 = sext_i32_i64(ltid_pre_40134);
            int32_t ltid_flat_37289 = local_tid_40129;
            int64_t k_37307 = ltid_x_37287 + binop_y_37306;
            int64_t j_37309 = ltid_y_37288 + binop_y_37308;
            int64_t gtid_37310 = jjj_37008 + j_37309;
            int64_t B_row_idx_37311 = kk_37238 + k_37307;
            bool binop_x_37312 = slt64(gtid_37310, i32_res_27135);
            bool binop_y_37313 = slt64(B_row_idx_37311, i32_res_27129);
            bool cond_37314 = binop_x_37312 && binop_y_37313;
            float B_elem_37315;
            
            if (cond_37314) {
                float B_elem_37317 = ((__global
                                       float *) mem_38694)[B_row_idx_37311 *
                                                           i32_res_27135 +
                                                           gtid_37310];
                
                B_elem_37315 = B_elem_37317;
            } else {
                B_elem_37315 = 0.0F;
            }
            
            bool cond_37319 = slt64(k_37307, Tk_36991);
            int64_t b_loc_ind_37320;
            
            if (cond_37319) {
                int64_t binop_y_37321 = TxRx_36994 * k_37307;
                int64_t loc_fi_37322 = j_37309 + binop_y_37321;
                
                b_loc_ind_37320 = loc_fi_37322;
            } else {
                b_loc_ind_37320 = -1;
            }
            if (sle64(0, b_loc_ind_37320) && slt64(b_loc_ind_37320,
                                                   b_loc_szz_36999)) {
                ((__local float *) mem_38968)[b_loc_ind_37320] = B_elem_37315;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_39121[Ry_36988];
    float mem_39125[Rx_36990];
    float mem_39135[Ry_36988 * Rx_36990];
    float loop_mem_39137[Ry_36988 * Rx_36990];
    float mem_param_39108[Ry_36988 * Rx_36990];
    
    for (int32_t i_10 = 0; i_10 < Ry_36988 * Rx_36990; i_10++)
        mem_param_39108[i_10] = loop_mem_39055[i_10];
    for (int64_t i_37327 = 0; i_37327 < Tk_36991; i_37327++) {
        int64_t cmpop_x_37329 = kk_37238 + i_37327;
        bool cond_37330 = slt64(cmpop_x_37329, i32_res_27129);
        float mem_39728[Ry_36988 * Rx_36990];
        
        if (cond_37330) {
            int64_t binop_y_37368 = TxRx_36994 * i_37327;
            int64_t bytes_39110 = 4 * Ry_36988;
            int64_t bytes_39112 = 4 * Rx_36990;
            int64_t ltid_y_37333 = sext_i32_i64(ltid_pre_40133);
            int64_t ltid_x_37331 = sext_i32_i64(ltid_pre_40134);
            int32_t ltid_flat_37332 = local_tid_40129;
            float mem_39111[Ry_36988];
            float mem_39113[Rx_36990];
            int64_t binop_x_37359 = Ry_36988 * ltid_y_37333;
            
            for (int64_t i_37357 = 0; i_37357 < Ry_36988; i_37357++) {
                int64_t binop_x_37360 = i_37357 + binop_x_37359;
                int64_t binop_y_37361 = Tk_36991 * binop_x_37360;
                int64_t a_loc_ind_37362 = i_37327 + binop_y_37361;
                
                for (int64_t i_40166 = 0; i_40166 < 1; i_40166++) {
                    mem_39111[i_37357 + i_40166] = ((__local
                                                     float *) mem_38966)[a_loc_ind_37362 +
                                                                         i_40166];
                }
            }
            
            int64_t binop_y_37370 = Rx_36990 * ltid_x_37331;
            
            for (int64_t i_37366 = 0; i_37366 < Rx_36990; i_37366++) {
                int64_t binop_x_37369 = i_37366 + binop_y_37368;
                int64_t b_loc_ind_37371 = binop_x_37369 + binop_y_37370;
                
                for (int64_t i_40168 = 0; i_40168 < 1; i_40168++) {
                    mem_39113[i_37366 + i_40168] = ((__local
                                                     float *) mem_38968)[b_loc_ind_37371 +
                                                                         i_40168];
                }
            }
            for (int64_t i_40169 = 0; i_40169 < Ry_36988; i_40169++) {
                mem_39121[i_40169] = mem_39111[i_40169];
            }
            for (int64_t i_40170 = 0; i_40170 < Rx_36990; i_40170++) {
                mem_39125[i_40170] = mem_39113[i_40170];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_37378 = sext_i32_i64(ltid_pre_40133);
            int64_t ltid_x_37376 = sext_i32_i64(ltid_pre_40134);
            int32_t ltid_flat_37377 = local_tid_40129;
            int64_t binop_y_37421 = Ry_36988 * ltid_y_37378;
            int64_t binop_y_37425 = Rx_36990 * ltid_x_37376;
            
            for (int64_t i_37415 = 0; i_37415 < Ry_36988; i_37415++) {
                int64_t binop_x_37420 = iii_37007 + i_37415;
                int64_t cmpop_x_37422 = binop_x_37420 + binop_y_37421;
                bool binop_x_37423 = slt64(cmpop_x_37422, m_27116);
                
                for (int64_t i_37418 = 0; i_37418 < Rx_36990; i_37418++) {
                    int64_t binop_x_37424 = jjj_37008 + i_37418;
                    int64_t cmpop_x_37426 = binop_x_37424 + binop_y_37425;
                    bool binop_y_37427 = slt64(cmpop_x_37426, i32_res_27135);
                    bool cond_37428 = binop_x_37423 && binop_y_37427;
                    
                    if (cond_37428) {
                        float a_37430 = mem_39121[i_37415];
                        float c_37432 = mem_param_39108[i_37415 * Rx_36990 +
                                                        i_37418];
                        bool isnan_res_37435;
                        
                        isnan_res_37435 = futrts_isnan32(a_37430);
                        
                        float defunc_1_f_res_37436;
                        
                        if (isnan_res_37435) {
                            defunc_1_f_res_37436 = 0.0F;
                        } else {
                            float b_37431 = mem_39125[i_37418];
                            float defunc_1_f_res_f_res_37437 = a_37430 *
                                  b_37431;
                            
                            defunc_1_f_res_37436 = defunc_1_f_res_f_res_37437;
                        }
                        
                        float defunc_1_op_res_37441 = c_37432 +
                              defunc_1_f_res_37436;
                        
                        mem_param_39108[i_37415 * Rx_36990 + i_37418] =
                            defunc_1_op_res_37441;
                    }
                }
            }
            for (int64_t i_40173 = 0; i_40173 < Ry_36988; i_40173++) {
                for (int64_t i_40174 = 0; i_40174 < Rx_36990; i_40174++) {
                    mem_39135[i_40173 * Rx_36990 + i_40174] =
                        mem_param_39108[i_40173 * Rx_36990 + i_40174];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_40175 = 0; i_40175 < Ry_36988; i_40175++) {
                for (int64_t i_40176 = 0; i_40176 < Rx_36990; i_40176++) {
                    mem_39728[i_40175 * Rx_36990 + i_40176] =
                        mem_39135[i_40175 * Rx_36990 + i_40176];
                }
            }
        } else {
            for (int64_t i_40177 = 0; i_40177 < Ry_36988; i_40177++) {
                for (int64_t i_40178 = 0; i_40178 < Rx_36990; i_40178++) {
                    mem_39728[i_40177 * Rx_36990 + i_40178] =
                        mem_param_39108[i_40177 * Rx_36990 + i_40178];
                }
            }
        }
        
        float mem_param_tmp_40163[Ry_36988 * Rx_36990];
        
        for (int32_t i_11 = 0; i_11 < Ry_36988 * Rx_36990; i_11++)
            mem_param_tmp_40163[i_11] = mem_39728[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_36988 * Rx_36990; i_12++)
            mem_param_39108[i_12] = mem_param_tmp_40163[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_36988 * Rx_36990; i_13++)
        loop_mem_39137[i_13] = mem_param_39108[i_13];
    
    int64_t reg_tile_i_40179 = squot64(sext_i32_i64(local_tid_40129), Tx_36989);
    int64_t reg_tile_i_40180 = sext_i32_i64(local_tid_40129) -
            squot64(sext_i32_i64(local_tid_40129), Tx_36989) * Tx_36989;
    int64_t tile_dim_start_40181 = Ry_36988 * (Ty_36987 * gid_y_37005 +
                                               reg_tile_i_40179);
    int64_t tile_dim_start_40182 = Rx_36990 * (Tx_36989 * gid_x_37004 +
                                               reg_tile_i_40180);
    
    for (int64_t nest_i_40183 = 0; nest_i_40183 < Ry_36988; nest_i_40183++) {
        for (int64_t nest_i_40184 = 0; nest_i_40184 < Rx_36990;
             nest_i_40184++) {
            if (slt64(tile_dim_start_40181 + nest_i_40183, m_27116) &&
                slt64(tile_dim_start_40182 + nest_i_40184, i32_res_27135)) {
                ((__global float *) mem_39140)[(tile_dim_start_40181 +
                                                nest_i_40183) * i32_res_27135 +
                                               (tile_dim_start_40182 +
                                                nest_i_40184)] =
                    loop_mem_39137[nest_i_40183 * Rx_36990 + nest_i_40184];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_36987
    #undef Ry_36988
    #undef Tx_36989
    #undef Rx_36990
    #undef Tk_36991
    #undef tk_div_tx_36992
    #undef tk_div_ty_36993
    #undef TxRx_36994
    #undef TyRy_36995
    #undef a_loc_szz_36997
    #undef b_loc_szz_36999
}
__kernel void mainDetailedzisegmap_intragroup_37455(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_39198_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_39189_backing_aligned_1,
                                                    int64_t m_27116,
                                                    int64_t i32_res_27135,
                                                    int64_t num_groups_y_37453,
                                                    int64_t num_whole_tiles_37471,
                                                    int64_t residual_input_37598,
                                                    unsigned char cond_37599,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_39150,
                                                    __global
                                                    unsigned char *mem_39179,
                                                    __global
                                                    unsigned char *mem_39206)
{
    #define tile_sizze_37450 (mainDetailedzitile_sizze_37449)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_39198_backing_5 = (__local volatile
                                                           char *) mem_39198_backing_aligned_0;
    __local volatile char *restrict mem_39189_backing_0 = (__local volatile
                                                           char *) mem_39189_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40260;
    int32_t local_tid_40261;
    int64_t group_sizze_40264;
    int32_t wave_sizze_40263;
    int32_t group_tid_40262;
    
    global_tid_40260 = get_global_id(0);
    local_tid_40261 = get_local_id(0);
    group_sizze_40264 = get_local_size(0);
    wave_sizze_40263 = LOCKSTEP_WIDTH;
    group_tid_40262 = get_group_id(0);
    
    int32_t gid_flat_37455;
    
    gid_flat_37455 = group_tid_40262;
    
    int32_t ltid_pre_40265;
    
    ltid_pre_40265 = squot32(local_tid_40261, sext_i64_i32(tile_sizze_37450));
    
    int32_t ltid_pre_40266;
    
    ltid_pre_40266 = local_tid_40261 - squot32(local_tid_40261,
                                               sext_i64_i32(tile_sizze_37450)) *
        sext_i64_i32(tile_sizze_37450);
    
    int64_t gid_x_37447;
    
    gid_x_37447 = squot64(sext_i32_i64(group_tid_40262), num_groups_y_37453);
    
    int64_t gid_y_37448;
    
    gid_y_37448 = sext_i32_i64(group_tid_40262) -
        squot64(sext_i32_i64(group_tid_40262), num_groups_y_37453) *
        num_groups_y_37453;
    
    float mem_39184[1];
    int64_t ltid_x_37472 = sext_i32_i64(ltid_pre_40265);
    int64_t ltid_y_37473 = sext_i32_i64(ltid_pre_40266);
    int32_t ltid_flat_37474 = local_tid_40261;
    
    if (slt64(ltid_x_37472, tile_sizze_37450) && slt64(ltid_y_37473,
                                                       tile_sizze_37450)) {
        mem_39184[0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_37557 = gid_x_37447 * tile_sizze_37450;
    int64_t binop_x_37572 = gid_y_37448 * tile_sizze_37450;
    __local char *mem_39189;
    
    mem_39189 = (__local char *) mem_39189_backing_0;
    
    float accs_mem_39194[1];
    float mem_param_39185[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_39185[i_1] = mem_39184[i_1];
    for (int64_t tile_id_37483 = 0; tile_id_37483 < num_whole_tiles_37471;
         tile_id_37483++) {
        int64_t binop_x_37555 = tile_sizze_37450 * tile_id_37483;
        int64_t ltid_x_37484 = sext_i32_i64(ltid_pre_40265);
        int64_t ltid_y_37485 = sext_i32_i64(ltid_pre_40266);
        int32_t ltid_flat_37486 = local_tid_40261;
        int64_t j_37556 = ltid_y_37485 + binop_x_37555;
        int64_t gtid_37558 = ltid_x_37484 + binop_x_37557;
        bool binop_x_37563 = slt64(j_37556, i32_res_27135);
        bool binop_y_37564 = slt64(gtid_37558, m_27116);
        bool cond_37565 = binop_x_37563 && binop_y_37564;
        float pre_37566;
        
        if (cond_37565) {
            float x_37567 = ((__global
                              float *) defunc_3_map_res_mem_39150)[gtid_37558 *
                                                                   i32_res_27135 +
                                                                   j_37556];
            
            pre_37566 = x_37567;
        } else {
            pre_37566 = 0.0F;
        }
        ((__local float *) mem_39189)[ltid_x_37484 * tile_sizze_37450 +
                                      ltid_y_37485] = pre_37566;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_39193[1];
        int64_t ltid_x_37516 = sext_i32_i64(ltid_pre_40265);
        int64_t ltid_y_37517 = sext_i32_i64(ltid_pre_40266);
        int32_t ltid_flat_37518 = local_tid_40261;
        int64_t gtid_37571 = ltid_x_37516 + binop_x_37557;
        int64_t gtid_37573 = ltid_y_37517 + binop_x_37572;
        float acc_37576 = mem_param_39185[0];
        bool binop_x_37580 = slt64(gtid_37571, m_27116);
        bool binop_y_37581 = slt64(gtid_37573, i32_res_27135);
        bool cond_37582 = binop_x_37580 && binop_y_37581;
        float acc_37583;
        
        if (cond_37582) {
            float x_37584;
            float redout_38637 = acc_37576;
            
            for (int64_t i_38638 = 0; i_38638 < tile_sizze_37450; i_38638++) {
                float x_37588 = ((__local float *) mem_39189)[ltid_x_37516 *
                                                              tile_sizze_37450 +
                                                              i_38638];
                int64_t slice_38670 = binop_x_37555 + i_38638;
                float x_37589 = ((__global float *) mem_39179)[slice_38670 *
                                                               (i32_res_27135 *
                                                                m_27116) +
                                                               gtid_37571 *
                                                               i32_res_27135 +
                                                               gtid_37573];
                float defunc_1_f_res_37590 = x_37588 * x_37589;
                float defunc_1_op_res_37587 = defunc_1_f_res_37590 +
                      redout_38637;
                float redout_tmp_40269 = defunc_1_op_res_37587;
                
                redout_38637 = redout_tmp_40269;
            }
            x_37584 = redout_38637;
            acc_37583 = x_37584;
        } else {
            acc_37583 = acc_37576;
        }
        mem_39193[0] = acc_37583;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_40267[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_40267[i_2] = mem_39193[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_39185[i_3] = mem_param_tmp_40267[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_39194[i_4] = mem_param_39185[i_4];
    
    __local char *mem_39198;
    
    mem_39198 = (__local char *) mem_39198_backing_5;
    
    float mem_39202[1];
    float mem_39742[1];
    
    if (cond_37599) {
        mem_39742[0] = accs_mem_39194[0];
    } else {
        int64_t binop_x_37672 = tile_sizze_37450 * num_whole_tiles_37471;
        int64_t ltid_x_37600 = sext_i32_i64(ltid_pre_40265);
        int64_t ltid_y_37601 = sext_i32_i64(ltid_pre_40266);
        int32_t ltid_flat_37602 = local_tid_40261;
        int64_t j_37673 = ltid_y_37601 + binop_x_37672;
        int64_t gtid_37675 = binop_x_37557 + ltid_x_37600;
        bool binop_x_37680 = slt64(j_37673, i32_res_27135);
        bool binop_y_37681 = slt64(gtid_37675, m_27116);
        bool cond_37682 = binop_x_37680 && binop_y_37681;
        float pre_37683;
        
        if (cond_37682) {
            float x_37684 = ((__global
                              float *) defunc_3_map_res_mem_39150)[gtid_37675 *
                                                                   i32_res_27135 +
                                                                   j_37673];
            
            pre_37683 = x_37684;
        } else {
            pre_37683 = 0.0F;
        }
        ((__local float *) mem_39198)[ltid_x_37600 * tile_sizze_37450 +
                                      ltid_y_37601] = pre_37683;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_x_37633 = sext_i32_i64(ltid_pre_40265);
        int64_t ltid_y_37634 = sext_i32_i64(ltid_pre_40266);
        int32_t ltid_flat_37635 = local_tid_40261;
        int64_t gtid_37689 = binop_x_37557 + ltid_x_37633;
        int64_t gtid_37691 = binop_x_37572 + ltid_y_37634;
        float acc_37694 = accs_mem_39194[0];
        bool binop_x_37698 = slt64(gtid_37689, m_27116);
        bool binop_y_37699 = slt64(gtid_37691, i32_res_27135);
        bool cond_37700 = binop_x_37698 && binop_y_37699;
        float acc_37701;
        
        if (cond_37700) {
            float x_37702;
            float redout_38639 = acc_37694;
            
            for (int64_t i_38640 = 0; i_38640 < residual_input_37598;
                 i_38640++) {
                float x_37706 = ((__local float *) mem_39198)[ltid_x_37633 *
                                                              tile_sizze_37450 +
                                                              i_38640];
                int64_t slice_38671 = binop_x_37672 + i_38640;
                float x_37707 = ((__global float *) mem_39179)[slice_38671 *
                                                               (i32_res_27135 *
                                                                m_27116) +
                                                               gtid_37689 *
                                                               i32_res_27135 +
                                                               gtid_37691];
                float defunc_1_f_res_37708 = x_37706 * x_37707;
                float defunc_1_op_res_37705 = defunc_1_f_res_37708 +
                      redout_38639;
                float redout_tmp_40270 = defunc_1_op_res_37705;
                
                redout_38639 = redout_tmp_40270;
            }
            x_37702 = redout_38639;
            acc_37701 = x_37702;
        } else {
            acc_37701 = acc_37694;
        }
        mem_39202[0] = acc_37701;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_39742[0] = mem_39202[0];
    }
    
    int64_t thread_out_index_40271 = gid_x_37447 * tile_sizze_37450 +
            sext_i32_i64(ltid_pre_40265);
    int64_t thread_out_index_40272 = gid_y_37448 * tile_sizze_37450 +
            sext_i32_i64(ltid_pre_40266);
    
    if (slt64(thread_out_index_40271, m_27116) && slt64(thread_out_index_40272,
                                                        i32_res_27135)) {
        ((__global float *) mem_39206)[thread_out_index_40271 * i32_res_27135 +
                                       thread_out_index_40272] = mem_39742[0];
    }
    
  error_5:
    return;
    #undef tile_sizze_37450
}
__kernel void mainDetailedzisegmap_intragroup_37747(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_39258_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_39256_backing_aligned_1,
                                                    int64_t N_27115,
                                                    int64_t m_27116,
                                                    int64_t i32_res_27135,
                                                    int64_t gridDim_x_37741,
                                                    int64_t full_tiles_37772,
                                                    int64_t kk_37975, __global
                                                    unsigned char *defunc_4_map_res_mem_39216,
                                                    __global
                                                    unsigned char *mem_39240,
                                                    __global
                                                    unsigned char *mem_39430)
{
    #define Ty_37728 (mainDetailedziTy_37725)
    #define Ry_37729 (mainDetailedziRy_37727)
    #define Tx_37730 (mainDetailedziTx_37724)
    #define Rx_37731 (mainDetailedziRx_37726)
    #define Tk_37732 (mainDetailedziTk_37723)
    #define tk_div_tx_37733 (sdiv_up64(mainDetailedziTk_37723, mainDetailedziTx_37724))
    #define tk_div_ty_37734 (sdiv_up64(mainDetailedziTk_37723, mainDetailedziTy_37725))
    #define TxRx_37735 (mainDetailedziTx_37724 * mainDetailedziRx_37726)
    #define TyRy_37736 (mainDetailedziTy_37725 * mainDetailedziRy_37727)
    #define a_loc_szz_37738 (mainDetailedziTk_37723 * (mainDetailedziTy_37725 * mainDetailedziRy_37727))
    #define b_loc_szz_37740 (mainDetailedziRx_37726 * (mainDetailedziTx_37724 * mainDetailedziTk_37723))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_39258_backing_1 = (__local volatile
                                                           char *) mem_39258_backing_aligned_0;
    __local volatile char *restrict mem_39256_backing_0 = (__local volatile
                                                           char *) mem_39256_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40348;
    int32_t local_tid_40349;
    int64_t group_sizze_40352;
    int32_t wave_sizze_40351;
    int32_t group_tid_40350;
    
    global_tid_40348 = get_global_id(0);
    local_tid_40349 = get_local_id(0);
    group_sizze_40352 = get_local_size(0);
    wave_sizze_40351 = LOCKSTEP_WIDTH;
    group_tid_40350 = get_group_id(0);
    
    int32_t gid_flat_37747;
    
    gid_flat_37747 = group_tid_40350;
    
    int32_t ltid_pre_40353;
    
    ltid_pre_40353 = squot32(local_tid_40349, sext_i64_i32(Tx_37730));
    
    int32_t ltid_pre_40354;
    
    ltid_pre_40354 = local_tid_40349 - squot32(local_tid_40349,
                                               sext_i64_i32(Tx_37730)) *
        sext_i64_i32(Tx_37730);
    
    int64_t gid_y_37746;
    
    gid_y_37746 = squot64(sext_i32_i64(group_tid_40350), gridDim_x_37741);
    
    int64_t gid_x_37745;
    
    gid_x_37745 = sext_i32_i64(group_tid_40350) -
        squot64(sext_i32_i64(group_tid_40350), gridDim_x_37741) *
        gridDim_x_37741;
    
    int64_t iii_37748;
    
    iii_37748 = TyRy_37736 * gid_y_37746;
    
    int64_t jjj_37749 = TxRx_37735 * gid_x_37745;
    float mem_39254[Ry_37729 * Rx_37731];
    int64_t ltid_y_37752 = sext_i32_i64(ltid_pre_40353);
    int64_t ltid_x_37750 = sext_i32_i64(ltid_pre_40354);
    int32_t ltid_flat_37751 = local_tid_40349;
    float mem_39245[Ry_37729 * Rx_37731];
    
    for (int64_t i_37763 = 0; i_37763 < Ry_37729; i_37763++) {
        for (int64_t i_37766 = 0; i_37766 < Rx_37731; i_37766++) {
            mem_39245[i_37763 * Rx_37731 + i_37766] = 0.0F;
        }
    }
    for (int64_t i_40357 = 0; i_40357 < Ry_37729; i_40357++) {
        for (int64_t i_40358 = 0; i_40358 < Rx_37731; i_40358++) {
            mem_39254[i_40357 * Rx_37731 + i_40358] = mem_39245[i_40357 *
                                                                Rx_37731 +
                                                                i_40358];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_39256;
    
    mem_39256 = (__local char *) mem_39256_backing_0;
    
    __local char *mem_39258;
    
    mem_39258 = (__local char *) mem_39258_backing_1;
    
    float mem_39329[Ry_37729];
    float mem_39333[Rx_37731];
    float loop_mem_39345[Ry_37729 * Rx_37731];
    float mem_param_39259[Ry_37729 * Rx_37731];
    
    for (int32_t i_2 = 0; i_2 < Ry_37729 * Rx_37731; i_2++)
        mem_param_39259[i_2] = mem_39254[i_2];
    for (int64_t i_37773 = 0; i_37773 < full_tiles_37772; i_37773++) {
        int64_t kk_37777 = Tk_37732 * i_37773;
        
        for (int64_t i_37778 = 0; i_37778 < Ry_37729; i_37778++) {
            int64_t binop_y_37801 = Ty_37728 * i_37778;
            
            for (int64_t i_37780 = 0; i_37780 < tk_div_tx_37733; i_37780++) {
                int64_t binop_y_37799 = Tx_37730 * i_37780;
                int64_t ltid_x_37782 = sext_i32_i64(ltid_pre_40353);
                int64_t ltid_y_37783 = sext_i32_i64(ltid_pre_40354);
                int32_t ltid_flat_37784 = local_tid_40349;
                int64_t k_37800 = ltid_y_37783 + binop_y_37799;
                int64_t i_37802 = ltid_x_37782 + binop_y_37801;
                int64_t gtid_37803 = iii_37748 + i_37802;
                int64_t A_col_idx_37804 = kk_37777 + k_37800;
                bool cond_37805 = slt64(gtid_37803, m_27116);
                float A_elem_37806;
                
                if (cond_37805) {
                    float A_elem_37808 = ((__global
                                           float *) defunc_4_map_res_mem_39216)[gtid_37803 *
                                                                                i32_res_27135 +
                                                                                A_col_idx_37804];
                    
                    A_elem_37806 = A_elem_37808;
                } else {
                    A_elem_37806 = 0.0F;
                }
                
                bool cond_37810 = slt64(k_37800, Tk_37732);
                int64_t a_loc_ind_37811;
                
                if (cond_37810) {
                    int64_t binop_y_37812 = Tk_37732 * i_37802;
                    int64_t loc_fi_37813 = k_37800 + binop_y_37812;
                    
                    a_loc_ind_37811 = loc_fi_37813;
                } else {
                    a_loc_ind_37811 = -1;
                }
                if (sle64(0, a_loc_ind_37811) && slt64(a_loc_ind_37811,
                                                       a_loc_szz_37738)) {
                    ((__local float *) mem_39256)[a_loc_ind_37811] =
                        A_elem_37806;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_37818 = 0; i_37818 < tk_div_ty_37734; i_37818++) {
            int64_t binop_y_37839 = Ty_37728 * i_37818;
            
            for (int64_t i_37820 = 0; i_37820 < Rx_37731; i_37820++) {
                int64_t binop_y_37841 = Tx_37730 * i_37820;
                int64_t ltid_x_37822 = sext_i32_i64(ltid_pre_40353);
                int64_t ltid_y_37823 = sext_i32_i64(ltid_pre_40354);
                int32_t ltid_flat_37824 = local_tid_40349;
                int64_t k_37840 = ltid_x_37822 + binop_y_37839;
                int64_t j_37842 = ltid_y_37823 + binop_y_37841;
                int64_t gtid_37843 = jjj_37749 + j_37842;
                int64_t B_row_idx_37844 = kk_37777 + k_37840;
                bool cond_37845 = slt64(gtid_37843, N_27115);
                float B_elem_37846;
                
                if (cond_37845) {
                    float B_elem_37848 = ((__global
                                           float *) mem_39240)[B_row_idx_37844 *
                                                               N_27115 +
                                                               gtid_37843];
                    
                    B_elem_37846 = B_elem_37848;
                } else {
                    B_elem_37846 = 0.0F;
                }
                
                bool cond_37850 = slt64(k_37840, Tk_37732);
                int64_t b_loc_ind_37851;
                
                if (cond_37850) {
                    int64_t binop_y_37852 = TxRx_37735 * k_37840;
                    int64_t loc_fi_37853 = j_37842 + binop_y_37852;
                    
                    b_loc_ind_37851 = loc_fi_37853;
                } else {
                    b_loc_ind_37851 = -1;
                }
                if (sle64(0, b_loc_ind_37851) && slt64(b_loc_ind_37851,
                                                       b_loc_szz_37740)) {
                    ((__local float *) mem_39258)[b_loc_ind_37851] =
                        B_elem_37846;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_39344[Ry_37729 * Rx_37731];
        float mem_param_39316[Ry_37729 * Rx_37731];
        
        for (int32_t i_3 = 0; i_3 < Ry_37729 * Rx_37731; i_3++)
            mem_param_39316[i_3] = mem_param_39259[i_3];
        for (int64_t i_37858 = 0; i_37858 < Tk_37732; i_37858++) {
            int64_t binop_y_37897 = TxRx_37735 * i_37858;
            int64_t ltid_y_37862 = sext_i32_i64(ltid_pre_40353);
            int64_t ltid_x_37860 = sext_i32_i64(ltid_pre_40354);
            int32_t ltid_flat_37861 = local_tid_40349;
            float mem_39319[Ry_37729];
            float mem_39321[Rx_37731];
            int64_t binop_x_37888 = Ry_37729 * ltid_y_37862;
            
            for (int64_t i_37886 = 0; i_37886 < Ry_37729; i_37886++) {
                int64_t binop_x_37889 = i_37886 + binop_x_37888;
                int64_t binop_y_37890 = Tk_37732 * binop_x_37889;
                int64_t a_loc_ind_37891 = i_37858 + binop_y_37890;
                
                for (int64_t i_40370 = 0; i_40370 < 1; i_40370++) {
                    mem_39319[i_37886 + i_40370] = ((__local
                                                     float *) mem_39256)[a_loc_ind_37891 +
                                                                         i_40370];
                }
            }
            
            int64_t binop_y_37899 = Rx_37731 * ltid_x_37860;
            
            for (int64_t i_37895 = 0; i_37895 < Rx_37731; i_37895++) {
                int64_t binop_x_37898 = i_37895 + binop_y_37897;
                int64_t b_loc_ind_37900 = binop_x_37898 + binop_y_37899;
                
                for (int64_t i_40372 = 0; i_40372 < 1; i_40372++) {
                    mem_39321[i_37895 + i_40372] = ((__local
                                                     float *) mem_39258)[b_loc_ind_37900 +
                                                                         i_40372];
                }
            }
            for (int64_t i_40373 = 0; i_40373 < Ry_37729; i_40373++) {
                mem_39329[i_40373] = mem_39319[i_40373];
            }
            for (int64_t i_40374 = 0; i_40374 < Rx_37731; i_40374++) {
                mem_39333[i_40374] = mem_39321[i_40374];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_39343[Ry_37729 * Rx_37731];
            int64_t ltid_y_37907 = sext_i32_i64(ltid_pre_40353);
            int64_t ltid_x_37905 = sext_i32_i64(ltid_pre_40354);
            int32_t ltid_flat_37906 = local_tid_40349;
            int64_t binop_y_37948 = Ry_37729 * ltid_y_37907;
            int64_t binop_y_37952 = Rx_37731 * ltid_x_37905;
            
            for (int64_t i_37942 = 0; i_37942 < Ry_37729; i_37942++) {
                int64_t binop_x_37947 = iii_37748 + i_37942;
                int64_t cmpop_x_37949 = binop_x_37947 + binop_y_37948;
                bool binop_x_37950 = slt64(cmpop_x_37949, m_27116);
                
                for (int64_t i_37945 = 0; i_37945 < Rx_37731; i_37945++) {
                    int64_t binop_x_37951 = jjj_37749 + i_37945;
                    int64_t cmpop_x_37953 = binop_x_37951 + binop_y_37952;
                    bool binop_y_37954 = slt64(cmpop_x_37953, N_27115);
                    bool cond_37955 = binop_x_37950 && binop_y_37954;
                    
                    if (cond_37955) {
                        float a_37957 = mem_39329[i_37942];
                        float b_37958 = mem_39333[i_37945];
                        float c_37959 = mem_param_39316[i_37942 * Rx_37731 +
                                                        i_37945];
                        float defunc_1_f_res_37962 = a_37957 * b_37958;
                        float defunc_1_op_res_37966 = c_37959 +
                              defunc_1_f_res_37962;
                        
                        mem_param_39316[i_37942 * Rx_37731 + i_37945] =
                            defunc_1_op_res_37966;
                    }
                }
            }
            for (int64_t i_40377 = 0; i_40377 < Ry_37729; i_40377++) {
                for (int64_t i_40378 = 0; i_40378 < Rx_37731; i_40378++) {
                    mem_39343[i_40377 * Rx_37731 + i_40378] =
                        mem_param_39316[i_40377 * Rx_37731 + i_40378];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_40367[Ry_37729 * Rx_37731];
            
            for (int32_t i_4 = 0; i_4 < Ry_37729 * Rx_37731; i_4++)
                mem_param_tmp_40367[i_4] = mem_39343[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_37729 * Rx_37731; i_5++)
                mem_param_39316[i_5] = mem_param_tmp_40367[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_37729 * Rx_37731; i_6++)
            loop_mem_39344[i_6] = mem_param_39316[i_6];
        
        float mem_param_tmp_40359[Ry_37729 * Rx_37731];
        
        for (int32_t i_7 = 0; i_7 < Ry_37729 * Rx_37731; i_7++)
            mem_param_tmp_40359[i_7] = loop_mem_39344[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_37729 * Rx_37731; i_8++)
            mem_param_39259[i_8] = mem_param_tmp_40359[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_37729 * Rx_37731; i_9++)
        loop_mem_39345[i_9] = mem_param_39259[i_9];
    for (int64_t i_37976 = 0; i_37976 < Ry_37729; i_37976++) {
        int64_t binop_y_38001 = Ty_37728 * i_37976;
        
        for (int64_t i_37978 = 0; i_37978 < tk_div_tx_37733; i_37978++) {
            int64_t binop_y_37999 = Tx_37730 * i_37978;
            int64_t ltid_x_37980 = sext_i32_i64(ltid_pre_40353);
            int64_t ltid_y_37981 = sext_i32_i64(ltid_pre_40354);
            int32_t ltid_flat_37982 = local_tid_40349;
            int64_t k_38000 = ltid_y_37981 + binop_y_37999;
            int64_t i_38002 = ltid_x_37980 + binop_y_38001;
            int64_t gtid_38003 = iii_37748 + i_38002;
            int64_t A_col_idx_38004 = kk_37975 + k_38000;
            bool binop_x_38005 = slt64(gtid_38003, m_27116);
            bool binop_y_38006 = slt64(A_col_idx_38004, i32_res_27135);
            bool cond_38007 = binop_x_38005 && binop_y_38006;
            float A_elem_38008;
            
            if (cond_38007) {
                float A_elem_38010 = ((__global
                                       float *) defunc_4_map_res_mem_39216)[gtid_38003 *
                                                                            i32_res_27135 +
                                                                            A_col_idx_38004];
                
                A_elem_38008 = A_elem_38010;
            } else {
                A_elem_38008 = 0.0F;
            }
            
            bool cond_38012 = slt64(k_38000, Tk_37732);
            int64_t a_loc_ind_38013;
            
            if (cond_38012) {
                int64_t binop_y_38014 = Tk_37732 * i_38002;
                int64_t loc_fi_38015 = k_38000 + binop_y_38014;
                
                a_loc_ind_38013 = loc_fi_38015;
            } else {
                a_loc_ind_38013 = -1;
            }
            if (sle64(0, a_loc_ind_38013) && slt64(a_loc_ind_38013,
                                                   a_loc_szz_37738)) {
                ((__local float *) mem_39256)[a_loc_ind_38013] = A_elem_38008;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_38020 = 0; i_38020 < tk_div_ty_37734; i_38020++) {
        int64_t binop_y_38043 = Ty_37728 * i_38020;
        
        for (int64_t i_38022 = 0; i_38022 < Rx_37731; i_38022++) {
            int64_t binop_y_38045 = Tx_37730 * i_38022;
            int64_t ltid_x_38024 = sext_i32_i64(ltid_pre_40353);
            int64_t ltid_y_38025 = sext_i32_i64(ltid_pre_40354);
            int32_t ltid_flat_38026 = local_tid_40349;
            int64_t k_38044 = ltid_x_38024 + binop_y_38043;
            int64_t j_38046 = ltid_y_38025 + binop_y_38045;
            int64_t gtid_38047 = jjj_37749 + j_38046;
            int64_t B_row_idx_38048 = kk_37975 + k_38044;
            bool binop_x_38049 = slt64(gtid_38047, N_27115);
            bool binop_y_38050 = slt64(B_row_idx_38048, i32_res_27135);
            bool cond_38051 = binop_x_38049 && binop_y_38050;
            float B_elem_38052;
            
            if (cond_38051) {
                float B_elem_38054 = ((__global
                                       float *) mem_39240)[B_row_idx_38048 *
                                                           N_27115 +
                                                           gtid_38047];
                
                B_elem_38052 = B_elem_38054;
            } else {
                B_elem_38052 = 0.0F;
            }
            
            bool cond_38056 = slt64(k_38044, Tk_37732);
            int64_t b_loc_ind_38057;
            
            if (cond_38056) {
                int64_t binop_y_38058 = TxRx_37735 * k_38044;
                int64_t loc_fi_38059 = j_38046 + binop_y_38058;
                
                b_loc_ind_38057 = loc_fi_38059;
            } else {
                b_loc_ind_38057 = -1;
            }
            if (sle64(0, b_loc_ind_38057) && slt64(b_loc_ind_38057,
                                                   b_loc_szz_37740)) {
                ((__local float *) mem_39258)[b_loc_ind_38057] = B_elem_38052;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_39411[Ry_37729];
    float mem_39415[Rx_37731];
    float mem_39425[Ry_37729 * Rx_37731];
    float loop_mem_39427[Ry_37729 * Rx_37731];
    float mem_param_39398[Ry_37729 * Rx_37731];
    
    for (int32_t i_10 = 0; i_10 < Ry_37729 * Rx_37731; i_10++)
        mem_param_39398[i_10] = loop_mem_39345[i_10];
    for (int64_t i_38064 = 0; i_38064 < Tk_37732; i_38064++) {
        int64_t cmpop_x_38066 = kk_37975 + i_38064;
        bool cond_38067 = slt64(cmpop_x_38066, i32_res_27135);
        float mem_39758[Ry_37729 * Rx_37731];
        
        if (cond_38067) {
            int64_t binop_y_38105 = TxRx_37735 * i_38064;
            int64_t bytes_39400 = 4 * Ry_37729;
            int64_t bytes_39402 = 4 * Rx_37731;
            int64_t ltid_y_38070 = sext_i32_i64(ltid_pre_40353);
            int64_t ltid_x_38068 = sext_i32_i64(ltid_pre_40354);
            int32_t ltid_flat_38069 = local_tid_40349;
            float mem_39401[Ry_37729];
            float mem_39403[Rx_37731];
            int64_t binop_x_38096 = Ry_37729 * ltid_y_38070;
            
            for (int64_t i_38094 = 0; i_38094 < Ry_37729; i_38094++) {
                int64_t binop_x_38097 = i_38094 + binop_x_38096;
                int64_t binop_y_38098 = Tk_37732 * binop_x_38097;
                int64_t a_loc_ind_38099 = i_38064 + binop_y_38098;
                
                for (int64_t i_40386 = 0; i_40386 < 1; i_40386++) {
                    mem_39401[i_38094 + i_40386] = ((__local
                                                     float *) mem_39256)[a_loc_ind_38099 +
                                                                         i_40386];
                }
            }
            
            int64_t binop_y_38107 = Rx_37731 * ltid_x_38068;
            
            for (int64_t i_38103 = 0; i_38103 < Rx_37731; i_38103++) {
                int64_t binop_x_38106 = i_38103 + binop_y_38105;
                int64_t b_loc_ind_38108 = binop_x_38106 + binop_y_38107;
                
                for (int64_t i_40388 = 0; i_40388 < 1; i_40388++) {
                    mem_39403[i_38103 + i_40388] = ((__local
                                                     float *) mem_39258)[b_loc_ind_38108 +
                                                                         i_40388];
                }
            }
            for (int64_t i_40389 = 0; i_40389 < Ry_37729; i_40389++) {
                mem_39411[i_40389] = mem_39401[i_40389];
            }
            for (int64_t i_40390 = 0; i_40390 < Rx_37731; i_40390++) {
                mem_39415[i_40390] = mem_39403[i_40390];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_38115 = sext_i32_i64(ltid_pre_40353);
            int64_t ltid_x_38113 = sext_i32_i64(ltid_pre_40354);
            int32_t ltid_flat_38114 = local_tid_40349;
            int64_t binop_y_38156 = Ry_37729 * ltid_y_38115;
            int64_t binop_y_38160 = Rx_37731 * ltid_x_38113;
            
            for (int64_t i_38150 = 0; i_38150 < Ry_37729; i_38150++) {
                int64_t binop_x_38155 = iii_37748 + i_38150;
                int64_t cmpop_x_38157 = binop_x_38155 + binop_y_38156;
                bool binop_x_38158 = slt64(cmpop_x_38157, m_27116);
                
                for (int64_t i_38153 = 0; i_38153 < Rx_37731; i_38153++) {
                    int64_t binop_x_38159 = jjj_37749 + i_38153;
                    int64_t cmpop_x_38161 = binop_x_38159 + binop_y_38160;
                    bool binop_y_38162 = slt64(cmpop_x_38161, N_27115);
                    bool cond_38163 = binop_x_38158 && binop_y_38162;
                    
                    if (cond_38163) {
                        float a_38165 = mem_39411[i_38150];
                        float b_38166 = mem_39415[i_38153];
                        float c_38167 = mem_param_39398[i_38150 * Rx_37731 +
                                                        i_38153];
                        float defunc_1_f_res_38170 = a_38165 * b_38166;
                        float defunc_1_op_res_38174 = c_38167 +
                              defunc_1_f_res_38170;
                        
                        mem_param_39398[i_38150 * Rx_37731 + i_38153] =
                            defunc_1_op_res_38174;
                    }
                }
            }
            for (int64_t i_40393 = 0; i_40393 < Ry_37729; i_40393++) {
                for (int64_t i_40394 = 0; i_40394 < Rx_37731; i_40394++) {
                    mem_39425[i_40393 * Rx_37731 + i_40394] =
                        mem_param_39398[i_40393 * Rx_37731 + i_40394];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_40395 = 0; i_40395 < Ry_37729; i_40395++) {
                for (int64_t i_40396 = 0; i_40396 < Rx_37731; i_40396++) {
                    mem_39758[i_40395 * Rx_37731 + i_40396] =
                        mem_39425[i_40395 * Rx_37731 + i_40396];
                }
            }
        } else {
            for (int64_t i_40397 = 0; i_40397 < Ry_37729; i_40397++) {
                for (int64_t i_40398 = 0; i_40398 < Rx_37731; i_40398++) {
                    mem_39758[i_40397 * Rx_37731 + i_40398] =
                        mem_param_39398[i_40397 * Rx_37731 + i_40398];
                }
            }
        }
        
        float mem_param_tmp_40383[Ry_37729 * Rx_37731];
        
        for (int32_t i_11 = 0; i_11 < Ry_37729 * Rx_37731; i_11++)
            mem_param_tmp_40383[i_11] = mem_39758[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_37729 * Rx_37731; i_12++)
            mem_param_39398[i_12] = mem_param_tmp_40383[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_37729 * Rx_37731; i_13++)
        loop_mem_39427[i_13] = mem_param_39398[i_13];
    
    int64_t reg_tile_i_40399 = squot64(sext_i32_i64(local_tid_40349), Tx_37730);
    int64_t reg_tile_i_40400 = sext_i32_i64(local_tid_40349) -
            squot64(sext_i32_i64(local_tid_40349), Tx_37730) * Tx_37730;
    int64_t tile_dim_start_40401 = Ry_37729 * (Ty_37728 * gid_y_37746 +
                                               reg_tile_i_40399);
    int64_t tile_dim_start_40402 = Rx_37731 * (Tx_37730 * gid_x_37745 +
                                               reg_tile_i_40400);
    
    for (int64_t nest_i_40403 = 0; nest_i_40403 < Ry_37729; nest_i_40403++) {
        for (int64_t nest_i_40404 = 0; nest_i_40404 < Rx_37731;
             nest_i_40404++) {
            if (slt64(tile_dim_start_40401 + nest_i_40403, m_27116) &&
                slt64(tile_dim_start_40402 + nest_i_40404, N_27115)) {
                ((__global float *) mem_39430)[(tile_dim_start_40401 +
                                                nest_i_40403) * N_27115 +
                                               (tile_dim_start_40402 +
                                                nest_i_40404)] =
                    loop_mem_39427[nest_i_40403 * Rx_37731 + nest_i_40404];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_37728
    #undef Ry_37729
    #undef Tx_37730
    #undef Rx_37731
    #undef Tk_37732
    #undef tk_div_tx_37733
    #undef tk_div_ty_37734
    #undef TxRx_37735
    #undef TyRy_37736
    #undef a_loc_szz_37738
    #undef b_loc_szz_37740
}
__kernel void mainDetailedzisegmap_intragroup_38181(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_39500_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_39493_backing_aligned_1,
                                                    int64_t m_27116,
                                                    int32_t n_27120,
                                                    float hfrac_27122,
                                                    int64_t i32_res_27129,
                                                    int32_t k2p2_27131,
                                                    int64_t num_whole_tiles_38189,
                                                    int64_t residual_input_38310,
                                                    unsigned char cond_38311,
                                                    __global
                                                    unsigned char *mem_39482,
                                                    __global
                                                    unsigned char *mem_39485,
                                                    __global
                                                    unsigned char *mem_39513,
                                                    __global
                                                    unsigned char *mem_39515,
                                                    __global
                                                    unsigned char *mem_39517)
{
    #define segmap_group_sizze_30916 (mainDetailedzisegmap_group_sizze_30885)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_39500_backing_5 = (__local volatile
                                                           char *) mem_39500_backing_aligned_0;
    __local volatile char *restrict mem_39493_backing_0 = (__local volatile
                                                           char *) mem_39493_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40572;
    int32_t local_tid_40573;
    int64_t group_sizze_40576;
    int32_t wave_sizze_40575;
    int32_t group_tid_40574;
    
    global_tid_40572 = get_global_id(0);
    local_tid_40573 = get_local_id(0);
    group_sizze_40576 = get_local_size(0);
    wave_sizze_40575 = LOCKSTEP_WIDTH;
    group_tid_40574 = get_group_id(0);
    
    int32_t gid_flat_38181;
    
    gid_flat_38181 = group_tid_40574;
    
    int32_t ltid_pre_40577;
    
    ltid_pre_40577 = local_tid_40573;
    
    int64_t gid_38180;
    
    gid_38180 = sext_i32_i64(group_tid_40574);
    
    float mem_39489[1];
    int64_t ltid_38190 = sext_i32_i64(ltid_pre_40577);
    int32_t ltid_flat_38191 = local_tid_40573;
    
    mem_39489[0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_38276 = segmap_group_sizze_30916 * gid_38180;
    __local char *mem_39493;
    
    mem_39493 = (__local char *) mem_39493_backing_0;
    
    float accs_mem_39497[1];
    float mem_param_39490[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_39490[i_1] = mem_39489[i_1];
    for (int64_t tile_id_38197 = 0; tile_id_38197 < num_whole_tiles_38189;
         tile_id_38197++) {
        int64_t binop_x_38258 = segmap_group_sizze_30916 * tile_id_38197;
        int64_t ltid_38198 = sext_i32_i64(ltid_pre_40577);
        int32_t ltid_flat_38199 = local_tid_40573;
        int64_t j_38259 = ltid_38198 + binop_x_38258;
        bool cond_38271 = slt64(j_38259, i32_res_27129);
        int32_t pre_38272;
        
        if (cond_38271) {
            int32_t index_primexp_38605 = sext_i64_i32(j_38259);
            
            pre_38272 = index_primexp_38605;
        } else {
            pre_38272 = 0;
        }
        ((__local int32_t *) mem_39493)[ltid_38198] = pre_38272;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_39496[1];
        int64_t ltid_38225 = sext_i32_i64(ltid_pre_40577);
        int32_t ltid_flat_38226 = local_tid_40573;
        int64_t gtid_38277 = ltid_38225 + binop_x_38276;
        int32_t defunc_0_f_res_38279;
        int32_t redout_38647 = 0;
        
        for (int32_t i_38673 = 0; i_38673 < n_27120; i_38673++) {
            int64_t i_38648 = sext_i32_i64(i_38673);
            float x_38283 = ((__global float *) mem_39482)[i_38648 * m_27116 +
                                                           gtid_38277];
            bool isnan_res_38284;
            
            isnan_res_38284 = futrts_isnan32(x_38283);
            
            bool cond_38285 = !isnan_res_38284;
            int32_t defunc_0_f_res_38286 = btoi_bool_i32(cond_38285);
            int32_t defunc_1_op_res_38282 = add32(defunc_0_f_res_38286,
                                                  redout_38647);
            int32_t redout_tmp_40580 = defunc_1_op_res_38282;
            
            redout_38647 = redout_tmp_40580;
        }
        defunc_0_f_res_38279 = redout_38647;
        
        float acc_38287 = mem_param_39490[0];
        bool cond_38288 = slt64(gtid_38277, m_27116);
        float acc_38289;
        
        if (cond_38288) {
            float x_38290;
            float redout_38649 = acc_38287;
            
            for (int64_t i_38650 = 0; i_38650 < segmap_group_sizze_30916;
                 i_38650++) {
                int32_t x_38294 = ((__local int32_t *) mem_39493)[i_38650];
                bool cond_38295 = slt32(x_38294, defunc_0_f_res_38279);
                float defunc_0_f_res_38296;
                
                if (cond_38295) {
                    int64_t i_38297 = sext_i32_i64(x_38294);
                    float defunc_0_f_res_t_res_38298 = ((__global
                                                         float *) mem_39485)[i_38297 *
                                                                             m_27116 +
                                                                             gtid_38277];
                    
                    defunc_0_f_res_38296 = defunc_0_f_res_t_res_38298;
                } else {
                    defunc_0_f_res_38296 = 0.0F;
                }
                
                float defunc_0_f_res_38299 = defunc_0_f_res_38296 *
                      defunc_0_f_res_38296;
                float defunc_1_op_res_38293 = defunc_0_f_res_38299 +
                      redout_38649;
                float redout_tmp_40581 = defunc_1_op_res_38293;
                
                redout_38649 = redout_tmp_40581;
            }
            x_38290 = redout_38649;
            acc_38289 = x_38290;
        } else {
            acc_38289 = acc_38287;
        }
        mem_39496[0] = acc_38289;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_40578[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_40578[i_2] = mem_39496[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_39490[i_3] = mem_param_tmp_40578[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_39497[i_4] = mem_param_39490[i_4];
    
    __local char *mem_39500;
    
    mem_39500 = (__local char *) mem_39500_backing_5;
    
    float mem_39503[1];
    float mem_39771[1];
    
    if (cond_38311) {
        mem_39771[0] = accs_mem_39497[0];
    } else {
        int64_t binop_x_38321 = segmap_group_sizze_30916 *
                num_whole_tiles_38189;
        int64_t ltid_38312 = sext_i32_i64(ltid_pre_40577);
        int32_t ltid_flat_38313 = local_tid_40573;
        int64_t j_38322 = ltid_38312 + binop_x_38321;
        bool cond_38334 = slt64(j_38322, i32_res_27129);
        int32_t pre_38335;
        
        if (cond_38334) {
            int32_t index_primexp_38606 = sext_i64_i32(j_38322);
            
            pre_38335 = index_primexp_38606;
        } else {
            pre_38335 = 0;
        }
        ((__local int32_t *) mem_39500)[ltid_38312] = pre_38335;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_38340 = sext_i32_i64(ltid_pre_40577);
        int32_t ltid_flat_38341 = local_tid_40573;
        int64_t gtid_38348 = binop_x_38276 + ltid_38340;
        int32_t defunc_0_f_res_38350;
        int32_t redout_38651 = 0;
        
        for (int32_t i_38674 = 0; i_38674 < n_27120; i_38674++) {
            int64_t i_38652 = sext_i32_i64(i_38674);
            float x_38354 = ((__global float *) mem_39482)[i_38652 * m_27116 +
                                                           gtid_38348];
            bool isnan_res_38355;
            
            isnan_res_38355 = futrts_isnan32(x_38354);
            
            bool cond_38356 = !isnan_res_38355;
            int32_t defunc_0_f_res_38357 = btoi_bool_i32(cond_38356);
            int32_t defunc_1_op_res_38353 = add32(defunc_0_f_res_38357,
                                                  redout_38651);
            int32_t redout_tmp_40582 = defunc_1_op_res_38353;
            
            redout_38651 = redout_tmp_40582;
        }
        defunc_0_f_res_38350 = redout_38651;
        
        float acc_38358 = accs_mem_39497[0];
        bool cond_38359 = slt64(gtid_38348, m_27116);
        float acc_38360;
        
        if (cond_38359) {
            float x_38361;
            float redout_38653 = acc_38358;
            
            for (int64_t i_38654 = 0; i_38654 < residual_input_38310;
                 i_38654++) {
                int32_t x_38365 = ((__local int32_t *) mem_39500)[i_38654];
                bool cond_38366 = slt32(x_38365, defunc_0_f_res_38350);
                float defunc_0_f_res_38367;
                
                if (cond_38366) {
                    int64_t i_38368 = sext_i32_i64(x_38365);
                    float defunc_0_f_res_t_res_38369 = ((__global
                                                         float *) mem_39485)[i_38368 *
                                                                             m_27116 +
                                                                             gtid_38348];
                    
                    defunc_0_f_res_38367 = defunc_0_f_res_t_res_38369;
                } else {
                    defunc_0_f_res_38367 = 0.0F;
                }
                
                float defunc_0_f_res_38370 = defunc_0_f_res_38367 *
                      defunc_0_f_res_38367;
                float defunc_1_op_res_38364 = defunc_0_f_res_38370 +
                      redout_38653;
                float redout_tmp_40583 = defunc_1_op_res_38364;
                
                redout_38653 = redout_tmp_40583;
            }
            x_38361 = redout_38653;
            acc_38360 = x_38361;
        } else {
            acc_38360 = acc_38358;
        }
        mem_39503[0] = acc_38360;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_39771[0] = mem_39503[0];
    }
    
    int32_t mem_39507[1];
    int32_t mem_39509[1];
    float mem_39511[1];
    int64_t ltid_38373 = sext_i32_i64(ltid_pre_40577);
    int32_t ltid_flat_38374 = local_tid_40573;
    int64_t gtid_38384 = binop_x_38276 + ltid_38373;
    bool cond_38386 = slt64(gtid_38384, m_27116);
    int32_t postlude_38387;
    int32_t postlude_38388;
    float postlude_38389;
    
    if (cond_38386) {
        float defunc_0_f_res_38385 = mem_39771[0];
        int32_t defunc_0_f_res_38391;
        int32_t redout_38655 = 0;
        
        for (int32_t i_38675 = 0; i_38675 < n_27120; i_38675++) {
            int64_t i_38656 = sext_i32_i64(i_38675);
            float x_38395 = ((__global float *) mem_39482)[i_38656 * m_27116 +
                                                           gtid_38384];
            bool isnan_res_38396;
            
            isnan_res_38396 = futrts_isnan32(x_38395);
            
            bool cond_38397 = !isnan_res_38396;
            int32_t defunc_0_f_res_38398 = btoi_bool_i32(cond_38397);
            int32_t defunc_1_op_res_38394 = add32(defunc_0_f_res_38398,
                                                  redout_38655);
            int32_t redout_tmp_40584 = defunc_1_op_res_38394;
            
            redout_38655 = redout_tmp_40584;
        }
        defunc_0_f_res_38391 = redout_38655;
        
        int32_t r32_arg_38399 = sub32(defunc_0_f_res_38391, k2p2_27131);
        float i32_res_38400 = sitofp_i32_f32(r32_arg_38399);
        float sqrt_arg_38401 = defunc_0_f_res_38385 / i32_res_38400;
        float sqrt_res_38402;
        
        sqrt_res_38402 = futrts_sqrt32(sqrt_arg_38401);
        
        float i32_res_38403 = sitofp_i32_f32(defunc_0_f_res_38391);
        float t32_arg_38404 = hfrac_27122 * i32_res_38403;
        int32_t f32_res_38405 = fptosi_f32_i32(t32_arg_38404);
        
        postlude_38387 = f32_res_38405;
        postlude_38388 = defunc_0_f_res_38391;
        postlude_38389 = sqrt_res_38402;
    } else {
        postlude_38387 = 0;
        postlude_38388 = 0;
        postlude_38389 = 0.0F;
    }
    mem_39507[0] = postlude_38387;
    mem_39509[0] = postlude_38388;
    mem_39511[0] = postlude_38389;
    barrier(CLK_LOCAL_MEM_FENCE);
    if (slt64(sext_i32_i64(local_tid_40573) + segmap_group_sizze_30916 *
              sext_i32_i64(group_tid_40574), m_27116)) {
        ((__global int32_t *) mem_39513)[sext_i32_i64(local_tid_40573) +
                                         segmap_group_sizze_30916 *
                                         sext_i32_i64(group_tid_40574)] =
            mem_39507[0];
    }
    if (slt64(sext_i32_i64(local_tid_40573) + segmap_group_sizze_30916 *
              sext_i32_i64(group_tid_40574), m_27116)) {
        ((__global int32_t *) mem_39515)[sext_i32_i64(local_tid_40573) +
                                         segmap_group_sizze_30916 *
                                         sext_i32_i64(group_tid_40574)] =
            mem_39509[0];
    }
    if (slt64(sext_i32_i64(local_tid_40573) + segmap_group_sizze_30916 *
              sext_i32_i64(group_tid_40574), m_27116)) {
        ((__global float *) mem_39517)[sext_i32_i64(local_tid_40573) +
                                       segmap_group_sizze_30916 *
                                       sext_i32_i64(group_tid_40574)] =
            mem_39511[0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_30916
}
__kernel void mainDetailedzisegmap_intragroup_38413(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_39566_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_39559_backing_aligned_1,
                                                    int64_t N_27115,
                                                    int64_t m_27116,
                                                    int64_t i32_res_27490,
                                                    int64_t num_whole_tiles_38433,
                                                    int64_t residual_input_38532,
                                                    unsigned char cond_38533,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_39478,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_39541,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_39542,
                                                    __global
                                                    unsigned char *mem_39572)
{
    #define segmap_group_sizze_31153 (mainDetailedzisegmap_group_sizze_31134)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_39566_backing_5 = (__local volatile
                                                           char *) mem_39566_backing_aligned_0;
    __local volatile char *restrict mem_39559_backing_0 = (__local volatile
                                                           char *) mem_39559_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40758;
    int32_t local_tid_40759;
    int64_t group_sizze_40762;
    int32_t wave_sizze_40761;
    int32_t group_tid_40760;
    
    global_tid_40758 = get_global_id(0);
    local_tid_40759 = get_local_id(0);
    group_sizze_40762 = get_local_size(0);
    wave_sizze_40761 = LOCKSTEP_WIDTH;
    group_tid_40760 = get_group_id(0);
    
    int32_t gid_flat_38413;
    
    gid_flat_38413 = group_tid_40760;
    
    int32_t ltid_pre_40763;
    
    ltid_pre_40763 = local_tid_40759;
    
    int64_t gid_38412;
    
    gid_38412 = sext_i32_i64(group_tid_40760);
    
    int64_t binop_x_38422;
    
    binop_x_38422 = segmap_group_sizze_31153 * gid_38412;
    
    int32_t mem_39550[1];
    int32_t mem_39552[1];
    int64_t ltid_38414 = sext_i32_i64(ltid_pre_40763);
    int32_t ltid_flat_38415 = local_tid_40759;
    int64_t gtid_38423 = ltid_38414 + binop_x_38422;
    bool cond_38424 = slt64(gtid_38423, m_27116);
    int32_t pre_38425;
    int32_t pre_38426;
    
    if (cond_38424) {
        int32_t x_38427 = ((__global
                            int32_t *) defunc_3_map_res_mem_39542)[gtid_38423];
        int32_t x_38428 = ((__global
                            int32_t *) defunc_3_map_res_mem_39541)[gtid_38423];
        
        pre_38425 = x_38427;
        pre_38426 = x_38428;
    } else {
        pre_38425 = 0;
        pre_38426 = 0;
    }
    mem_39550[0] = pre_38425;
    mem_39552[0] = pre_38426;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_39555[1];
    int64_t ltid_38434 = sext_i32_i64(ltid_pre_40763);
    int32_t ltid_flat_38435 = local_tid_40759;
    
    mem_39555[0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_39559;
    
    mem_39559 = (__local char *) mem_39559_backing_0;
    
    float accs_mem_39563[1];
    float mem_param_39556[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_39556[i_1] = mem_39555[i_1];
    for (int64_t tile_id_38441 = 0; tile_id_38441 < num_whole_tiles_38433;
         tile_id_38441++) {
        int64_t binop_x_38490 = segmap_group_sizze_31153 * tile_id_38441;
        int64_t ltid_38442 = sext_i32_i64(ltid_pre_40763);
        int32_t ltid_flat_38443 = local_tid_40759;
        int64_t j_38491 = ltid_38442 + binop_x_38490;
        bool cond_38496 = slt64(j_38491, i32_res_27490);
        int32_t pre_38497;
        
        if (cond_38496) {
            int32_t index_primexp_38607 = sext_i64_i32(j_38491);
            int32_t tile_elem_38498 = index_primexp_38607;
            
            pre_38497 = tile_elem_38498;
        } else {
            pre_38497 = 0;
        }
        ((__local int32_t *) mem_39559)[ltid_38442] = pre_38497;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_39562[1];
        int64_t ltid_38462 = sext_i32_i64(ltid_pre_40763);
        int32_t ltid_flat_38463 = local_tid_40759;
        int64_t gtid_38502 = binop_x_38422 + ltid_38462;
        float acc_38505 = mem_param_39556[0];
        bool cond_38506 = slt64(gtid_38502, m_27116);
        float acc_38507;
        
        if (cond_38506) {
            int32_t x_38503 = mem_39550[0];
            int32_t x_38504 = mem_39552[0];
            float x_38508;
            float redout_38657 = acc_38505;
            
            for (int64_t i_38658 = 0; i_38658 < segmap_group_sizze_31153;
                 i_38658++) {
                int32_t x_38512 = ((__local int32_t *) mem_39559)[i_38658];
                bool cond_38513 = slt32(x_38512, x_38504);
                float defunc_0_f_res_38514;
                
                if (cond_38513) {
                    int32_t x_38515 = add32(x_38503, x_38512);
                    int32_t x_38516 = sub32(x_38515, x_38504);
                    int32_t i_38517 = add32(1, x_38516);
                    int64_t i_38518 = sext_i32_i64(i_38517);
                    float defunc_0_f_res_t_res_38519 = ((__global
                                                         float *) defunc_4_map_res_mem_39478)[gtid_38502 *
                                                                                              N_27115 +
                                                                                              i_38518];
                    
                    defunc_0_f_res_38514 = defunc_0_f_res_t_res_38519;
                } else {
                    defunc_0_f_res_38514 = 0.0F;
                }
                
                float defunc_1_op_res_38511 = defunc_0_f_res_38514 +
                      redout_38657;
                float redout_tmp_40766 = defunc_1_op_res_38511;
                
                redout_38657 = redout_tmp_40766;
            }
            x_38508 = redout_38657;
            acc_38507 = x_38508;
        } else {
            acc_38507 = acc_38505;
        }
        mem_39562[0] = acc_38507;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_40764[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_40764[i_2] = mem_39562[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_39556[i_3] = mem_param_tmp_40764[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_39563[i_4] = mem_param_39556[i_4];
    
    __local char *mem_39566;
    
    mem_39566 = (__local char *) mem_39566_backing_5;
    
    float mem_39569[1];
    float mem_39780[1];
    
    if (cond_38533) {
        mem_39780[0] = accs_mem_39563[0];
    } else {
        int64_t binop_x_38543 = segmap_group_sizze_31153 *
                num_whole_tiles_38433;
        int64_t ltid_38534 = sext_i32_i64(ltid_pre_40763);
        int32_t ltid_flat_38535 = local_tid_40759;
        int64_t j_38544 = ltid_38534 + binop_x_38543;
        bool cond_38549 = slt64(j_38544, i32_res_27490);
        int32_t pre_38550;
        
        if (cond_38549) {
            int32_t index_primexp_38608 = sext_i64_i32(j_38544);
            int32_t tile_elem_38551 = index_primexp_38608;
            
            pre_38550 = tile_elem_38551;
        } else {
            pre_38550 = 0;
        }
        ((__local int32_t *) mem_39566)[ltid_38534] = pre_38550;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_38555 = sext_i32_i64(ltid_pre_40763);
        int32_t ltid_flat_38556 = local_tid_40759;
        int64_t gtid_38563 = binop_x_38422 + ltid_38555;
        float acc_38566 = accs_mem_39563[0];
        bool cond_38567 = slt64(gtid_38563, m_27116);
        float acc_38568;
        
        if (cond_38567) {
            int32_t x_38564 = mem_39550[0];
            int32_t x_38565 = mem_39552[0];
            float x_38569;
            float redout_38659 = acc_38566;
            
            for (int64_t i_38660 = 0; i_38660 < residual_input_38532;
                 i_38660++) {
                int32_t x_38573 = ((__local int32_t *) mem_39566)[i_38660];
                bool cond_38574 = slt32(x_38573, x_38565);
                float defunc_0_f_res_38575;
                
                if (cond_38574) {
                    int32_t x_38576 = add32(x_38564, x_38573);
                    int32_t x_38577 = sub32(x_38576, x_38565);
                    int32_t i_38578 = add32(1, x_38577);
                    int64_t i_38579 = sext_i32_i64(i_38578);
                    float defunc_0_f_res_t_res_38580 = ((__global
                                                         float *) defunc_4_map_res_mem_39478)[gtid_38563 *
                                                                                              N_27115 +
                                                                                              i_38579];
                    
                    defunc_0_f_res_38575 = defunc_0_f_res_t_res_38580;
                } else {
                    defunc_0_f_res_38575 = 0.0F;
                }
                
                float defunc_1_op_res_38572 = defunc_0_f_res_38575 +
                      redout_38659;
                float redout_tmp_40767 = defunc_1_op_res_38572;
                
                redout_38659 = redout_tmp_40767;
            }
            x_38569 = redout_38659;
            acc_38568 = x_38569;
        } else {
            acc_38568 = acc_38566;
        }
        mem_39569[0] = acc_38568;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_39780[0] = mem_39569[0];
    }
    if (slt64(sext_i32_i64(local_tid_40759) + segmap_group_sizze_31153 *
              sext_i32_i64(group_tid_40760), m_27116)) {
        ((__global float *) mem_39572)[sext_i32_i64(local_tid_40759) +
                                       segmap_group_sizze_31153 *
                                       sext_i32_i64(group_tid_40760)] =
            mem_39780[0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_31153
}
__kernel void mainDetailedzisegred_large_29128(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_40026_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_40024_backing_aligned_1,
                                               int64_t N_27115, int64_t N_27117,
                                               int64_t i32_res_27129,
                                               int64_t i32_res_27135,
                                               int64_t num_groups_29267,
                                               __global
                                               unsigned char *images_mem_38682,
                                               __global
                                               unsigned char *binop_p_mem_38691,
                                               __global
                                               unsigned char *mem_38832,
                                               __global
                                               unsigned char *mem_38837,
                                               int64_t groups_per_segment_40010,
                                               int64_t elements_per_thread_40011,
                                               int64_t virt_num_groups_40012,
                                               int64_t threads_per_segment_40014,
                                               __global
                                               unsigned char *group_res_arr_mem_40015,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_40017)
{
    #define segred_group_sizze_29266 (mainDetailedzisegred_group_sizze_29122)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_40026_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_40026_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_40024_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40024_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40019;
    int32_t local_tid_40020;
    int64_t group_sizze_40023;
    int32_t wave_sizze_40022;
    int32_t group_tid_40021;
    
    global_tid_40019 = get_global_id(0);
    local_tid_40020 = get_local_id(0);
    group_sizze_40023 = get_local_size(0);
    wave_sizze_40022 = LOCKSTEP_WIDTH;
    group_tid_40021 = get_group_id(0);
    
    int32_t phys_tid_29128;
    
    phys_tid_29128 = global_tid_40019;
    
    __local char *red_arr_mem_40024;
    
    red_arr_mem_40024 = (__local char *) red_arr_mem_40024_backing_0;
    
    __local char *sync_arr_mem_40026;
    
    sync_arr_mem_40026 = (__local char *) sync_arr_mem_40026_backing_1;
    
    int32_t phys_group_id_40028;
    
    phys_group_id_40028 = get_group_id(0);
    for (int32_t i_40029 = 0; i_40029 <
         sdiv_up32(sext_i64_i32(virt_num_groups_40012) - phys_group_id_40028,
                   sext_i64_i32(num_groups_29267)); i_40029++) {
        int32_t virt_group_id_40030 = phys_group_id_40028 + i_40029 *
                sext_i64_i32(num_groups_29267);
        int32_t flat_segment_id_40031 = squot32(virt_group_id_40030,
                                                sext_i64_i32(groups_per_segment_40010));
        int64_t global_tid_40032 = srem64(sext_i32_i64(virt_group_id_40030) *
                                          segred_group_sizze_29266 +
                                          sext_i32_i64(local_tid_40020),
                                          segred_group_sizze_29266 *
                                          groups_per_segment_40010);
        int64_t gtid_29115 = squot64(sext_i32_i64(flat_segment_id_40031),
                                     i32_res_27135 * i32_res_27135);
        int64_t gtid_29116 = squot64(sext_i32_i64(flat_segment_id_40031) -
                                     squot64(sext_i32_i64(flat_segment_id_40031),
                                             i32_res_27135 * i32_res_27135) *
                                     (i32_res_27135 * i32_res_27135),
                                     i32_res_27135);
        int64_t gtid_29117 = sext_i32_i64(flat_segment_id_40031) -
                squot64(sext_i32_i64(flat_segment_id_40031), i32_res_27135 *
                        i32_res_27135) * (i32_res_27135 * i32_res_27135) -
                squot64(sext_i32_i64(flat_segment_id_40031) -
                        squot64(sext_i32_i64(flat_segment_id_40031),
                                i32_res_27135 * i32_res_27135) *
                        (i32_res_27135 * i32_res_27135), i32_res_27135) *
                i32_res_27135;
        int64_t gtid_29127;
        float x_acc_40033;
        int64_t chunk_sizze_40034;
        
        chunk_sizze_40034 = smin64(elements_per_thread_40011,
                                   sdiv_up64(i32_res_27129 -
                                             sext_i32_i64(sext_i64_i32(global_tid_40032)),
                                             threads_per_segment_40014));
        
        float x_29270;
        float x_29271;
        
        // neutral-initialise the accumulators
        {
            x_acc_40033 = 0.0F;
        }
        for (int64_t i_40038 = 0; i_40038 < chunk_sizze_40034; i_40038++) {
            gtid_29127 = sext_i32_i64(sext_i64_i32(global_tid_40032)) +
                threads_per_segment_40014 * i_40038;
            // apply map function
            {
                float x_29276 = ((__global
                                  float *) images_mem_38682)[gtid_29115 *
                                                             N_27117 +
                                                             gtid_29127];
                float x_29277 = ((__global
                                  float *) binop_p_mem_38691)[gtid_29116 *
                                                              N_27115 +
                                                              gtid_29127];
                float x_29278 = ((__global float *) mem_38832)[gtid_29117 *
                                                               N_27115 +
                                                               gtid_29127];
                float x_29279 = x_29277 * x_29278;
                bool isnan_res_29280;
                
                isnan_res_29280 = futrts_isnan32(x_29276);
                
                float y_29281;
                
                if (isnan_res_29280) {
                    y_29281 = 0.0F;
                } else {
                    y_29281 = 1.0F;
                }
                
                float defunc_2_f_res_29282 = x_29279 * y_29281;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_29270 = x_acc_40033;
                }
                // load new values
                {
                    x_29271 = defunc_2_f_res_29282;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_29272 = x_29270 + x_29271;
                    
                    // store in accumulator
                    {
                        x_acc_40033 = defunc_1_op_res_29272;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_29270 = x_acc_40033;
            ((__local
              float *) red_arr_mem_40024)[sext_i32_i64(local_tid_40020)] =
                x_29270;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_40039;
        int32_t skip_waves_40040;
        
        skip_waves_40040 = 1;
        
        float x_40035;
        float x_40036;
        
        offset_40039 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_40020,
                      sext_i64_i32(segred_group_sizze_29266))) {
                x_40035 = ((__local
                            float *) red_arr_mem_40024)[sext_i32_i64(local_tid_40020 +
                                                        offset_40039)];
            }
        }
        offset_40039 = 1;
        while (slt32(offset_40039, wave_sizze_40022)) {
            if (slt32(local_tid_40020 + offset_40039,
                      sext_i64_i32(segred_group_sizze_29266)) &&
                ((local_tid_40020 - squot32(local_tid_40020, wave_sizze_40022) *
                  wave_sizze_40022) & (2 * offset_40039 - 1)) == 0) {
                // read array element
                {
                    x_40036 = ((volatile __local
                                float *) red_arr_mem_40024)[sext_i32_i64(local_tid_40020 +
                                                            offset_40039)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_40037 = x_40035 + x_40036;
                    
                    x_40035 = defunc_1_op_res_40037;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_40024)[sext_i32_i64(local_tid_40020)] =
                        x_40035;
                }
            }
            offset_40039 *= 2;
        }
        while (slt32(skip_waves_40040,
                     squot32(sext_i64_i32(segred_group_sizze_29266) +
                             wave_sizze_40022 - 1, wave_sizze_40022))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_40039 = skip_waves_40040 * wave_sizze_40022;
            if (slt32(local_tid_40020 + offset_40039,
                      sext_i64_i32(segred_group_sizze_29266)) &&
                ((local_tid_40020 - squot32(local_tid_40020, wave_sizze_40022) *
                  wave_sizze_40022) == 0 && (squot32(local_tid_40020,
                                                     wave_sizze_40022) & (2 *
                                                                          skip_waves_40040 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_40036 = ((__local
                                float *) red_arr_mem_40024)[sext_i32_i64(local_tid_40020 +
                                                            offset_40039)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_40037 = x_40035 + x_40036;
                    
                    x_40035 = defunc_1_op_res_40037;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_40024)[sext_i32_i64(local_tid_40020)] =
                        x_40035;
                }
            }
            skip_waves_40040 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_40020) == 0) {
                x_acc_40033 = x_40035;
            }
        }
        if (groups_per_segment_40010 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_40020 == 0) {
                    ((__global float *) mem_38837)[gtid_29115 * (i32_res_27135 *
                                                                 i32_res_27135) +
                                                   gtid_29116 * i32_res_27135 +
                                                   gtid_29117] = x_acc_40033;
                }
            }
        } else {
            int32_t old_counter_40041;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_40020 == 0) {
                    ((__global
                      float *) group_res_arr_mem_40015)[sext_i32_i64(virt_group_id_40030) *
                                                        segred_group_sizze_29266] =
                        x_acc_40033;
                    mem_fence_global();
                    old_counter_40041 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_40017)[sext_i32_i64(srem32(flat_segment_id_40031,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_40026)[0] =
                        old_counter_40041 == groups_per_segment_40010 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_40042;
            
            is_last_group_40042 = ((__local bool *) sync_arr_mem_40026)[0];
            if (is_last_group_40042) {
                if (local_tid_40020 == 0) {
                    old_counter_40041 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_40017)[sext_i32_i64(srem32(flat_segment_id_40031,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_40010));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_40043 =
                            sdiv_up64(groups_per_segment_40010,
                                      segred_group_sizze_29266);
                    
                    x_29270 = 0.0F;
                    for (int64_t i_40044 = 0; i_40044 < read_per_thread_40043;
                         i_40044++) {
                        int64_t group_res_id_40045 =
                                sext_i32_i64(local_tid_40020) *
                                read_per_thread_40043 + i_40044;
                        int64_t index_of_group_res_40046 =
                                sext_i32_i64(flat_segment_id_40031) *
                                groups_per_segment_40010 + group_res_id_40045;
                        
                        if (slt64(group_res_id_40045,
                                  groups_per_segment_40010)) {
                            x_29271 = ((__global
                                        float *) group_res_arr_mem_40015)[index_of_group_res_40046 *
                                                                          segred_group_sizze_29266];
                            
                            float defunc_1_op_res_29272;
                            
                            defunc_1_op_res_29272 = x_29270 + x_29271;
                            x_29270 = defunc_1_op_res_29272;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_40024)[sext_i32_i64(local_tid_40020)] =
                    x_29270;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_40047;
                    int32_t skip_waves_40048;
                    
                    skip_waves_40048 = 1;
                    
                    float x_40035;
                    float x_40036;
                    
                    offset_40047 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_40020,
                                  sext_i64_i32(segred_group_sizze_29266))) {
                            x_40035 = ((__local
                                        float *) red_arr_mem_40024)[sext_i32_i64(local_tid_40020 +
                                                                    offset_40047)];
                        }
                    }
                    offset_40047 = 1;
                    while (slt32(offset_40047, wave_sizze_40022)) {
                        if (slt32(local_tid_40020 + offset_40047,
                                  sext_i64_i32(segred_group_sizze_29266)) &&
                            ((local_tid_40020 - squot32(local_tid_40020,
                                                        wave_sizze_40022) *
                              wave_sizze_40022) & (2 * offset_40047 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_40036 = ((volatile __local
                                            float *) red_arr_mem_40024)[sext_i32_i64(local_tid_40020 +
                                                                        offset_40047)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_40037 = x_40035 + x_40036;
                                
                                x_40035 = defunc_1_op_res_40037;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_40024)[sext_i32_i64(local_tid_40020)] =
                                    x_40035;
                            }
                        }
                        offset_40047 *= 2;
                    }
                    while (slt32(skip_waves_40048,
                                 squot32(sext_i64_i32(segred_group_sizze_29266) +
                                         wave_sizze_40022 - 1,
                                         wave_sizze_40022))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_40047 = skip_waves_40048 * wave_sizze_40022;
                        if (slt32(local_tid_40020 + offset_40047,
                                  sext_i64_i32(segred_group_sizze_29266)) &&
                            ((local_tid_40020 - squot32(local_tid_40020,
                                                        wave_sizze_40022) *
                              wave_sizze_40022) == 0 &&
                             (squot32(local_tid_40020, wave_sizze_40022) & (2 *
                                                                            skip_waves_40048 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_40036 = ((__local
                                            float *) red_arr_mem_40024)[sext_i32_i64(local_tid_40020 +
                                                                        offset_40047)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_40037 = x_40035 + x_40036;
                                
                                x_40035 = defunc_1_op_res_40037;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_40024)[sext_i32_i64(local_tid_40020)] =
                                    x_40035;
                            }
                        }
                        skip_waves_40048 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_40020 == 0) {
                            ((__global float *) mem_38837)[gtid_29115 *
                                                           (i32_res_27135 *
                                                            i32_res_27135) +
                                                           gtid_29116 *
                                                           i32_res_27135 +
                                                           gtid_29117] =
                                x_40035;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_29266
}
__kernel void mainDetailedzisegred_large_30175(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_40222_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_40220_backing_aligned_1,
                                               int64_t N_27115, int64_t N_27117,
                                               int64_t i32_res_27129,
                                               int64_t i32_res_27135,
                                               int64_t num_groups_30228,
                                               __global
                                               unsigned char *images_mem_38682,
                                               __global
                                               unsigned char *binop_p_mem_38691,
                                               __global
                                               unsigned char *mem_39144,
                                               int64_t groups_per_segment_40206,
                                               int64_t elements_per_thread_40207,
                                               int64_t virt_num_groups_40208,
                                               int64_t threads_per_segment_40210,
                                               __global
                                               unsigned char *group_res_arr_mem_40211,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_40213)
{
    #define segred_group_sizze_30227 (mainDetailedzisegred_group_sizze_30169)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_40222_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_40222_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_40220_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40220_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40215;
    int32_t local_tid_40216;
    int64_t group_sizze_40219;
    int32_t wave_sizze_40218;
    int32_t group_tid_40217;
    
    global_tid_40215 = get_global_id(0);
    local_tid_40216 = get_local_id(0);
    group_sizze_40219 = get_local_size(0);
    wave_sizze_40218 = LOCKSTEP_WIDTH;
    group_tid_40217 = get_group_id(0);
    
    int32_t phys_tid_30175;
    
    phys_tid_30175 = global_tid_40215;
    
    __local char *red_arr_mem_40220;
    
    red_arr_mem_40220 = (__local char *) red_arr_mem_40220_backing_0;
    
    __local char *sync_arr_mem_40222;
    
    sync_arr_mem_40222 = (__local char *) sync_arr_mem_40222_backing_1;
    
    int32_t phys_group_id_40224;
    
    phys_group_id_40224 = get_group_id(0);
    for (int32_t i_40225 = 0; i_40225 <
         sdiv_up32(sext_i64_i32(virt_num_groups_40208) - phys_group_id_40224,
                   sext_i64_i32(num_groups_30228)); i_40225++) {
        int32_t virt_group_id_40226 = phys_group_id_40224 + i_40225 *
                sext_i64_i32(num_groups_30228);
        int32_t flat_segment_id_40227 = squot32(virt_group_id_40226,
                                                sext_i64_i32(groups_per_segment_40206));
        int64_t global_tid_40228 = srem64(sext_i32_i64(virt_group_id_40226) *
                                          segred_group_sizze_30227 +
                                          sext_i32_i64(local_tid_40216),
                                          segred_group_sizze_30227 *
                                          groups_per_segment_40206);
        int64_t gtid_30164 = squot64(sext_i32_i64(flat_segment_id_40227),
                                     i32_res_27135);
        int64_t gtid_30165 = sext_i32_i64(flat_segment_id_40227) -
                squot64(sext_i32_i64(flat_segment_id_40227), i32_res_27135) *
                i32_res_27135;
        int64_t gtid_30174;
        float x_acc_40229;
        int64_t chunk_sizze_40230;
        
        chunk_sizze_40230 = smin64(elements_per_thread_40207,
                                   sdiv_up64(i32_res_27129 -
                                             sext_i32_i64(sext_i64_i32(global_tid_40228)),
                                             threads_per_segment_40210));
        
        float x_30231;
        float x_30232;
        
        // neutral-initialise the accumulators
        {
            x_acc_40229 = 0.0F;
        }
        for (int64_t i_40234 = 0; i_40234 < chunk_sizze_40230; i_40234++) {
            gtid_30174 = sext_i32_i64(sext_i64_i32(global_tid_40228)) +
                threads_per_segment_40210 * i_40234;
            // apply map function
            {
                float x_30237 = ((__global
                                  float *) images_mem_38682)[gtid_30164 *
                                                             N_27117 +
                                                             gtid_30174];
                bool isnan_res_30238;
                
                isnan_res_30238 = futrts_isnan32(x_30237);
                
                float defunc_1_f_res_30239;
                
                if (isnan_res_30238) {
                    defunc_1_f_res_30239 = 0.0F;
                } else {
                    float x_30236 = ((__global
                                      float *) binop_p_mem_38691)[gtid_30165 *
                                                                  N_27115 +
                                                                  gtid_30174];
                    float defunc_1_f_res_f_res_30240 = x_30236 * x_30237;
                    
                    defunc_1_f_res_30239 = defunc_1_f_res_f_res_30240;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_30231 = x_acc_40229;
                }
                // load new values
                {
                    x_30232 = defunc_1_f_res_30239;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_30233 = x_30231 + x_30232;
                    
                    // store in accumulator
                    {
                        x_acc_40229 = defunc_1_op_res_30233;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_30231 = x_acc_40229;
            ((__local
              float *) red_arr_mem_40220)[sext_i32_i64(local_tid_40216)] =
                x_30231;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_40235;
        int32_t skip_waves_40236;
        
        skip_waves_40236 = 1;
        
        float x_40231;
        float x_40232;
        
        offset_40235 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_40216,
                      sext_i64_i32(segred_group_sizze_30227))) {
                x_40231 = ((__local
                            float *) red_arr_mem_40220)[sext_i32_i64(local_tid_40216 +
                                                        offset_40235)];
            }
        }
        offset_40235 = 1;
        while (slt32(offset_40235, wave_sizze_40218)) {
            if (slt32(local_tid_40216 + offset_40235,
                      sext_i64_i32(segred_group_sizze_30227)) &&
                ((local_tid_40216 - squot32(local_tid_40216, wave_sizze_40218) *
                  wave_sizze_40218) & (2 * offset_40235 - 1)) == 0) {
                // read array element
                {
                    x_40232 = ((volatile __local
                                float *) red_arr_mem_40220)[sext_i32_i64(local_tid_40216 +
                                                            offset_40235)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_40233 = x_40231 + x_40232;
                    
                    x_40231 = defunc_1_op_res_40233;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_40220)[sext_i32_i64(local_tid_40216)] =
                        x_40231;
                }
            }
            offset_40235 *= 2;
        }
        while (slt32(skip_waves_40236,
                     squot32(sext_i64_i32(segred_group_sizze_30227) +
                             wave_sizze_40218 - 1, wave_sizze_40218))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_40235 = skip_waves_40236 * wave_sizze_40218;
            if (slt32(local_tid_40216 + offset_40235,
                      sext_i64_i32(segred_group_sizze_30227)) &&
                ((local_tid_40216 - squot32(local_tid_40216, wave_sizze_40218) *
                  wave_sizze_40218) == 0 && (squot32(local_tid_40216,
                                                     wave_sizze_40218) & (2 *
                                                                          skip_waves_40236 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_40232 = ((__local
                                float *) red_arr_mem_40220)[sext_i32_i64(local_tid_40216 +
                                                            offset_40235)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_40233 = x_40231 + x_40232;
                    
                    x_40231 = defunc_1_op_res_40233;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_40220)[sext_i32_i64(local_tid_40216)] =
                        x_40231;
                }
            }
            skip_waves_40236 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_40216) == 0) {
                x_acc_40229 = x_40231;
            }
        }
        if (groups_per_segment_40206 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_40216 == 0) {
                    ((__global float *) mem_39144)[gtid_30164 * i32_res_27135 +
                                                   gtid_30165] = x_acc_40229;
                }
            }
        } else {
            int32_t old_counter_40237;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_40216 == 0) {
                    ((__global
                      float *) group_res_arr_mem_40211)[sext_i32_i64(virt_group_id_40226) *
                                                        segred_group_sizze_30227] =
                        x_acc_40229;
                    mem_fence_global();
                    old_counter_40237 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_40213)[sext_i32_i64(srem32(flat_segment_id_40227,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_40222)[0] =
                        old_counter_40237 == groups_per_segment_40206 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_40238;
            
            is_last_group_40238 = ((__local bool *) sync_arr_mem_40222)[0];
            if (is_last_group_40238) {
                if (local_tid_40216 == 0) {
                    old_counter_40237 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_40213)[sext_i32_i64(srem32(flat_segment_id_40227,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_40206));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_40239 =
                            sdiv_up64(groups_per_segment_40206,
                                      segred_group_sizze_30227);
                    
                    x_30231 = 0.0F;
                    for (int64_t i_40240 = 0; i_40240 < read_per_thread_40239;
                         i_40240++) {
                        int64_t group_res_id_40241 =
                                sext_i32_i64(local_tid_40216) *
                                read_per_thread_40239 + i_40240;
                        int64_t index_of_group_res_40242 =
                                sext_i32_i64(flat_segment_id_40227) *
                                groups_per_segment_40206 + group_res_id_40241;
                        
                        if (slt64(group_res_id_40241,
                                  groups_per_segment_40206)) {
                            x_30232 = ((__global
                                        float *) group_res_arr_mem_40211)[index_of_group_res_40242 *
                                                                          segred_group_sizze_30227];
                            
                            float defunc_1_op_res_30233;
                            
                            defunc_1_op_res_30233 = x_30231 + x_30232;
                            x_30231 = defunc_1_op_res_30233;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_40220)[sext_i32_i64(local_tid_40216)] =
                    x_30231;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_40243;
                    int32_t skip_waves_40244;
                    
                    skip_waves_40244 = 1;
                    
                    float x_40231;
                    float x_40232;
                    
                    offset_40243 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_40216,
                                  sext_i64_i32(segred_group_sizze_30227))) {
                            x_40231 = ((__local
                                        float *) red_arr_mem_40220)[sext_i32_i64(local_tid_40216 +
                                                                    offset_40243)];
                        }
                    }
                    offset_40243 = 1;
                    while (slt32(offset_40243, wave_sizze_40218)) {
                        if (slt32(local_tid_40216 + offset_40243,
                                  sext_i64_i32(segred_group_sizze_30227)) &&
                            ((local_tid_40216 - squot32(local_tid_40216,
                                                        wave_sizze_40218) *
                              wave_sizze_40218) & (2 * offset_40243 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_40232 = ((volatile __local
                                            float *) red_arr_mem_40220)[sext_i32_i64(local_tid_40216 +
                                                                        offset_40243)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_40233 = x_40231 + x_40232;
                                
                                x_40231 = defunc_1_op_res_40233;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_40220)[sext_i32_i64(local_tid_40216)] =
                                    x_40231;
                            }
                        }
                        offset_40243 *= 2;
                    }
                    while (slt32(skip_waves_40244,
                                 squot32(sext_i64_i32(segred_group_sizze_30227) +
                                         wave_sizze_40218 - 1,
                                         wave_sizze_40218))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_40243 = skip_waves_40244 * wave_sizze_40218;
                        if (slt32(local_tid_40216 + offset_40243,
                                  sext_i64_i32(segred_group_sizze_30227)) &&
                            ((local_tid_40216 - squot32(local_tid_40216,
                                                        wave_sizze_40218) *
                              wave_sizze_40218) == 0 &&
                             (squot32(local_tid_40216, wave_sizze_40218) & (2 *
                                                                            skip_waves_40244 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_40232 = ((__local
                                            float *) red_arr_mem_40220)[sext_i32_i64(local_tid_40216 +
                                                                        offset_40243)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_40233 = x_40231 + x_40232;
                                
                                x_40231 = defunc_1_op_res_40233;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_40220)[sext_i32_i64(local_tid_40216)] =
                                    x_40231;
                            }
                        }
                        skip_waves_40244 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_40216 == 0) {
                            ((__global float *) mem_39144)[gtid_30164 *
                                                           i32_res_27135 +
                                                           gtid_30165] =
                                x_40231;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_30227
}
__kernel void mainDetailedzisegred_large_30312(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_40310_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_40308_backing_aligned_1,
                                               int64_t i32_res_27135,
                                               int64_t num_groups_30361,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_38929,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_39150,
                                               __global
                                               unsigned char *mem_39210,
                                               int64_t groups_per_segment_40294,
                                               int64_t elements_per_thread_40295,
                                               int64_t virt_num_groups_40296,
                                               int64_t threads_per_segment_40298,
                                               __global
                                               unsigned char *group_res_arr_mem_40299,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_40301)
{
    #define segred_group_sizze_30360 (mainDetailedzisegred_group_sizze_30306)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_40310_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_40310_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_40308_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40308_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40303;
    int32_t local_tid_40304;
    int64_t group_sizze_40307;
    int32_t wave_sizze_40306;
    int32_t group_tid_40305;
    
    global_tid_40303 = get_global_id(0);
    local_tid_40304 = get_local_id(0);
    group_sizze_40307 = get_local_size(0);
    wave_sizze_40306 = LOCKSTEP_WIDTH;
    group_tid_40305 = get_group_id(0);
    
    int32_t phys_tid_30312;
    
    phys_tid_30312 = global_tid_40303;
    
    __local char *red_arr_mem_40308;
    
    red_arr_mem_40308 = (__local char *) red_arr_mem_40308_backing_0;
    
    __local char *sync_arr_mem_40310;
    
    sync_arr_mem_40310 = (__local char *) sync_arr_mem_40310_backing_1;
    
    int32_t phys_group_id_40312;
    
    phys_group_id_40312 = get_group_id(0);
    for (int32_t i_40313 = 0; i_40313 <
         sdiv_up32(sext_i64_i32(virt_num_groups_40296) - phys_group_id_40312,
                   sext_i64_i32(num_groups_30361)); i_40313++) {
        int32_t virt_group_id_40314 = phys_group_id_40312 + i_40313 *
                sext_i64_i32(num_groups_30361);
        int32_t flat_segment_id_40315 = squot32(virt_group_id_40314,
                                                sext_i64_i32(groups_per_segment_40294));
        int64_t global_tid_40316 = srem64(sext_i32_i64(virt_group_id_40314) *
                                          segred_group_sizze_30360 +
                                          sext_i32_i64(local_tid_40304),
                                          segred_group_sizze_30360 *
                                          groups_per_segment_40294);
        int64_t gtid_30301 = squot64(sext_i32_i64(flat_segment_id_40315),
                                     i32_res_27135);
        int64_t gtid_30302 = sext_i32_i64(flat_segment_id_40315) -
                squot64(sext_i32_i64(flat_segment_id_40315), i32_res_27135) *
                i32_res_27135;
        int64_t gtid_30311;
        float x_acc_40317;
        int64_t chunk_sizze_40318;
        
        chunk_sizze_40318 = smin64(elements_per_thread_40295,
                                   sdiv_up64(i32_res_27135 -
                                             sext_i32_i64(sext_i64_i32(global_tid_40316)),
                                             threads_per_segment_40298));
        
        float x_30364;
        float x_30365;
        
        // neutral-initialise the accumulators
        {
            x_acc_40317 = 0.0F;
        }
        for (int64_t i_40322 = 0; i_40322 < chunk_sizze_40318; i_40322++) {
            gtid_30311 = sext_i32_i64(sext_i64_i32(global_tid_40316)) +
                threads_per_segment_40298 * i_40322;
            // apply map function
            {
                float x_30370 = ((__global
                                  float *) defunc_3_map_res_mem_39150)[gtid_30301 *
                                                                       i32_res_27135 +
                                                                       gtid_30311];
                float x_30371 = ((__global
                                  float *) defunc_3_map_res_mem_38929)[gtid_30301 *
                                                                       (i32_res_27135 *
                                                                        i32_res_27135) +
                                                                       gtid_30302 *
                                                                       i32_res_27135 +
                                                                       gtid_30311];
                float defunc_1_f_res_30372 = x_30370 * x_30371;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_30364 = x_acc_40317;
                }
                // load new values
                {
                    x_30365 = defunc_1_f_res_30372;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_30366 = x_30364 + x_30365;
                    
                    // store in accumulator
                    {
                        x_acc_40317 = defunc_1_op_res_30366;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_30364 = x_acc_40317;
            ((__local
              float *) red_arr_mem_40308)[sext_i32_i64(local_tid_40304)] =
                x_30364;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_40323;
        int32_t skip_waves_40324;
        
        skip_waves_40324 = 1;
        
        float x_40319;
        float x_40320;
        
        offset_40323 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_40304,
                      sext_i64_i32(segred_group_sizze_30360))) {
                x_40319 = ((__local
                            float *) red_arr_mem_40308)[sext_i32_i64(local_tid_40304 +
                                                        offset_40323)];
            }
        }
        offset_40323 = 1;
        while (slt32(offset_40323, wave_sizze_40306)) {
            if (slt32(local_tid_40304 + offset_40323,
                      sext_i64_i32(segred_group_sizze_30360)) &&
                ((local_tid_40304 - squot32(local_tid_40304, wave_sizze_40306) *
                  wave_sizze_40306) & (2 * offset_40323 - 1)) == 0) {
                // read array element
                {
                    x_40320 = ((volatile __local
                                float *) red_arr_mem_40308)[sext_i32_i64(local_tid_40304 +
                                                            offset_40323)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_40321 = x_40319 + x_40320;
                    
                    x_40319 = defunc_1_op_res_40321;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_40308)[sext_i32_i64(local_tid_40304)] =
                        x_40319;
                }
            }
            offset_40323 *= 2;
        }
        while (slt32(skip_waves_40324,
                     squot32(sext_i64_i32(segred_group_sizze_30360) +
                             wave_sizze_40306 - 1, wave_sizze_40306))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_40323 = skip_waves_40324 * wave_sizze_40306;
            if (slt32(local_tid_40304 + offset_40323,
                      sext_i64_i32(segred_group_sizze_30360)) &&
                ((local_tid_40304 - squot32(local_tid_40304, wave_sizze_40306) *
                  wave_sizze_40306) == 0 && (squot32(local_tid_40304,
                                                     wave_sizze_40306) & (2 *
                                                                          skip_waves_40324 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_40320 = ((__local
                                float *) red_arr_mem_40308)[sext_i32_i64(local_tid_40304 +
                                                            offset_40323)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_40321 = x_40319 + x_40320;
                    
                    x_40319 = defunc_1_op_res_40321;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_40308)[sext_i32_i64(local_tid_40304)] =
                        x_40319;
                }
            }
            skip_waves_40324 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_40304) == 0) {
                x_acc_40317 = x_40319;
            }
        }
        if (groups_per_segment_40294 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_40304 == 0) {
                    ((__global float *) mem_39210)[gtid_30301 * i32_res_27135 +
                                                   gtid_30302] = x_acc_40317;
                }
            }
        } else {
            int32_t old_counter_40325;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_40304 == 0) {
                    ((__global
                      float *) group_res_arr_mem_40299)[sext_i32_i64(virt_group_id_40314) *
                                                        segred_group_sizze_30360] =
                        x_acc_40317;
                    mem_fence_global();
                    old_counter_40325 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_40301)[sext_i32_i64(srem32(flat_segment_id_40315,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_40310)[0] =
                        old_counter_40325 == groups_per_segment_40294 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_40326;
            
            is_last_group_40326 = ((__local bool *) sync_arr_mem_40310)[0];
            if (is_last_group_40326) {
                if (local_tid_40304 == 0) {
                    old_counter_40325 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_40301)[sext_i32_i64(srem32(flat_segment_id_40315,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_40294));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_40327 =
                            sdiv_up64(groups_per_segment_40294,
                                      segred_group_sizze_30360);
                    
                    x_30364 = 0.0F;
                    for (int64_t i_40328 = 0; i_40328 < read_per_thread_40327;
                         i_40328++) {
                        int64_t group_res_id_40329 =
                                sext_i32_i64(local_tid_40304) *
                                read_per_thread_40327 + i_40328;
                        int64_t index_of_group_res_40330 =
                                sext_i32_i64(flat_segment_id_40315) *
                                groups_per_segment_40294 + group_res_id_40329;
                        
                        if (slt64(group_res_id_40329,
                                  groups_per_segment_40294)) {
                            x_30365 = ((__global
                                        float *) group_res_arr_mem_40299)[index_of_group_res_40330 *
                                                                          segred_group_sizze_30360];
                            
                            float defunc_1_op_res_30366;
                            
                            defunc_1_op_res_30366 = x_30364 + x_30365;
                            x_30364 = defunc_1_op_res_30366;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_40308)[sext_i32_i64(local_tid_40304)] =
                    x_30364;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_40331;
                    int32_t skip_waves_40332;
                    
                    skip_waves_40332 = 1;
                    
                    float x_40319;
                    float x_40320;
                    
                    offset_40331 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_40304,
                                  sext_i64_i32(segred_group_sizze_30360))) {
                            x_40319 = ((__local
                                        float *) red_arr_mem_40308)[sext_i32_i64(local_tid_40304 +
                                                                    offset_40331)];
                        }
                    }
                    offset_40331 = 1;
                    while (slt32(offset_40331, wave_sizze_40306)) {
                        if (slt32(local_tid_40304 + offset_40331,
                                  sext_i64_i32(segred_group_sizze_30360)) &&
                            ((local_tid_40304 - squot32(local_tid_40304,
                                                        wave_sizze_40306) *
                              wave_sizze_40306) & (2 * offset_40331 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_40320 = ((volatile __local
                                            float *) red_arr_mem_40308)[sext_i32_i64(local_tid_40304 +
                                                                        offset_40331)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_40321 = x_40319 + x_40320;
                                
                                x_40319 = defunc_1_op_res_40321;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_40308)[sext_i32_i64(local_tid_40304)] =
                                    x_40319;
                            }
                        }
                        offset_40331 *= 2;
                    }
                    while (slt32(skip_waves_40332,
                                 squot32(sext_i64_i32(segred_group_sizze_30360) +
                                         wave_sizze_40306 - 1,
                                         wave_sizze_40306))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_40331 = skip_waves_40332 * wave_sizze_40306;
                        if (slt32(local_tid_40304 + offset_40331,
                                  sext_i64_i32(segred_group_sizze_30360)) &&
                            ((local_tid_40304 - squot32(local_tid_40304,
                                                        wave_sizze_40306) *
                              wave_sizze_40306) == 0 &&
                             (squot32(local_tid_40304, wave_sizze_40306) & (2 *
                                                                            skip_waves_40332 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_40320 = ((__local
                                            float *) red_arr_mem_40308)[sext_i32_i64(local_tid_40304 +
                                                                        offset_40331)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_40321 = x_40319 + x_40320;
                                
                                x_40319 = defunc_1_op_res_40321;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_40308)[sext_i32_i64(local_tid_40304)] =
                                    x_40319;
                            }
                        }
                        skip_waves_40332 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_40304 == 0) {
                            ((__global float *) mem_39210)[gtid_30301 *
                                                           i32_res_27135 +
                                                           gtid_30302] =
                                x_40319;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_30360
}
__kernel void mainDetailedzisegred_large_30442(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_40442_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_40440_backing_aligned_1,
                                               int64_t N_27115,
                                               int64_t i32_res_27135,
                                               int64_t num_groups_30489,
                                               __global
                                               unsigned char *mem_38698,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_39216,
                                               __global
                                               unsigned char *mem_39434,
                                               int64_t groups_per_segment_40426,
                                               int64_t elements_per_thread_40427,
                                               int64_t virt_num_groups_40428,
                                               int64_t threads_per_segment_40430,
                                               __global
                                               unsigned char *group_res_arr_mem_40431,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_40433)
{
    #define segred_group_sizze_30488 (mainDetailedzisegred_group_sizze_30436)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_40442_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_40442_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_40440_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40440_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40435;
    int32_t local_tid_40436;
    int64_t group_sizze_40439;
    int32_t wave_sizze_40438;
    int32_t group_tid_40437;
    
    global_tid_40435 = get_global_id(0);
    local_tid_40436 = get_local_id(0);
    group_sizze_40439 = get_local_size(0);
    wave_sizze_40438 = LOCKSTEP_WIDTH;
    group_tid_40437 = get_group_id(0);
    
    int32_t phys_tid_30442;
    
    phys_tid_30442 = global_tid_40435;
    
    __local char *red_arr_mem_40440;
    
    red_arr_mem_40440 = (__local char *) red_arr_mem_40440_backing_0;
    
    __local char *sync_arr_mem_40442;
    
    sync_arr_mem_40442 = (__local char *) sync_arr_mem_40442_backing_1;
    
    int32_t phys_group_id_40444;
    
    phys_group_id_40444 = get_group_id(0);
    for (int32_t i_40445 = 0; i_40445 <
         sdiv_up32(sext_i64_i32(virt_num_groups_40428) - phys_group_id_40444,
                   sext_i64_i32(num_groups_30489)); i_40445++) {
        int32_t virt_group_id_40446 = phys_group_id_40444 + i_40445 *
                sext_i64_i32(num_groups_30489);
        int32_t flat_segment_id_40447 = squot32(virt_group_id_40446,
                                                sext_i64_i32(groups_per_segment_40426));
        int64_t global_tid_40448 = srem64(sext_i32_i64(virt_group_id_40446) *
                                          segred_group_sizze_30488 +
                                          sext_i32_i64(local_tid_40436),
                                          segred_group_sizze_30488 *
                                          groups_per_segment_40426);
        int64_t gtid_30431 = squot64(sext_i32_i64(flat_segment_id_40447),
                                     N_27115);
        int64_t gtid_30432 = sext_i32_i64(flat_segment_id_40447) -
                squot64(sext_i32_i64(flat_segment_id_40447), N_27115) * N_27115;
        int64_t gtid_30441;
        float x_acc_40449;
        int64_t chunk_sizze_40450;
        
        chunk_sizze_40450 = smin64(elements_per_thread_40427,
                                   sdiv_up64(i32_res_27135 -
                                             sext_i32_i64(sext_i64_i32(global_tid_40448)),
                                             threads_per_segment_40430));
        
        float x_30492;
        float x_30493;
        
        // neutral-initialise the accumulators
        {
            x_acc_40449 = 0.0F;
        }
        for (int64_t i_40454 = 0; i_40454 < chunk_sizze_40450; i_40454++) {
            gtid_30441 = sext_i32_i64(sext_i64_i32(global_tid_40448)) +
                threads_per_segment_40430 * i_40454;
            // apply map function
            {
                float x_30497 = ((__global
                                  float *) defunc_4_map_res_mem_39216)[gtid_30431 *
                                                                       i32_res_27135 +
                                                                       gtid_30441];
                float x_30498 = ((__global float *) mem_38698)[gtid_30432 *
                                                               i32_res_27135 +
                                                               gtid_30441];
                float defunc_1_f_res_30499 = x_30497 * x_30498;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_30492 = x_acc_40449;
                }
                // load new values
                {
                    x_30493 = defunc_1_f_res_30499;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_30494 = x_30492 + x_30493;
                    
                    // store in accumulator
                    {
                        x_acc_40449 = defunc_1_op_res_30494;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_30492 = x_acc_40449;
            ((__local
              float *) red_arr_mem_40440)[sext_i32_i64(local_tid_40436)] =
                x_30492;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_40455;
        int32_t skip_waves_40456;
        
        skip_waves_40456 = 1;
        
        float x_40451;
        float x_40452;
        
        offset_40455 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_40436,
                      sext_i64_i32(segred_group_sizze_30488))) {
                x_40451 = ((__local
                            float *) red_arr_mem_40440)[sext_i32_i64(local_tid_40436 +
                                                        offset_40455)];
            }
        }
        offset_40455 = 1;
        while (slt32(offset_40455, wave_sizze_40438)) {
            if (slt32(local_tid_40436 + offset_40455,
                      sext_i64_i32(segred_group_sizze_30488)) &&
                ((local_tid_40436 - squot32(local_tid_40436, wave_sizze_40438) *
                  wave_sizze_40438) & (2 * offset_40455 - 1)) == 0) {
                // read array element
                {
                    x_40452 = ((volatile __local
                                float *) red_arr_mem_40440)[sext_i32_i64(local_tid_40436 +
                                                            offset_40455)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_40453 = x_40451 + x_40452;
                    
                    x_40451 = defunc_1_op_res_40453;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_40440)[sext_i32_i64(local_tid_40436)] =
                        x_40451;
                }
            }
            offset_40455 *= 2;
        }
        while (slt32(skip_waves_40456,
                     squot32(sext_i64_i32(segred_group_sizze_30488) +
                             wave_sizze_40438 - 1, wave_sizze_40438))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_40455 = skip_waves_40456 * wave_sizze_40438;
            if (slt32(local_tid_40436 + offset_40455,
                      sext_i64_i32(segred_group_sizze_30488)) &&
                ((local_tid_40436 - squot32(local_tid_40436, wave_sizze_40438) *
                  wave_sizze_40438) == 0 && (squot32(local_tid_40436,
                                                     wave_sizze_40438) & (2 *
                                                                          skip_waves_40456 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_40452 = ((__local
                                float *) red_arr_mem_40440)[sext_i32_i64(local_tid_40436 +
                                                            offset_40455)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_40453 = x_40451 + x_40452;
                    
                    x_40451 = defunc_1_op_res_40453;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_40440)[sext_i32_i64(local_tid_40436)] =
                        x_40451;
                }
            }
            skip_waves_40456 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_40436) == 0) {
                x_acc_40449 = x_40451;
            }
        }
        if (groups_per_segment_40426 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_40436 == 0) {
                    ((__global float *) mem_39434)[gtid_30431 * N_27115 +
                                                   gtid_30432] = x_acc_40449;
                }
            }
        } else {
            int32_t old_counter_40457;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_40436 == 0) {
                    ((__global
                      float *) group_res_arr_mem_40431)[sext_i32_i64(virt_group_id_40446) *
                                                        segred_group_sizze_30488] =
                        x_acc_40449;
                    mem_fence_global();
                    old_counter_40457 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_40433)[sext_i32_i64(srem32(flat_segment_id_40447,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_40442)[0] =
                        old_counter_40457 == groups_per_segment_40426 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_40458;
            
            is_last_group_40458 = ((__local bool *) sync_arr_mem_40442)[0];
            if (is_last_group_40458) {
                if (local_tid_40436 == 0) {
                    old_counter_40457 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_40433)[sext_i32_i64(srem32(flat_segment_id_40447,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_40426));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_40459 =
                            sdiv_up64(groups_per_segment_40426,
                                      segred_group_sizze_30488);
                    
                    x_30492 = 0.0F;
                    for (int64_t i_40460 = 0; i_40460 < read_per_thread_40459;
                         i_40460++) {
                        int64_t group_res_id_40461 =
                                sext_i32_i64(local_tid_40436) *
                                read_per_thread_40459 + i_40460;
                        int64_t index_of_group_res_40462 =
                                sext_i32_i64(flat_segment_id_40447) *
                                groups_per_segment_40426 + group_res_id_40461;
                        
                        if (slt64(group_res_id_40461,
                                  groups_per_segment_40426)) {
                            x_30493 = ((__global
                                        float *) group_res_arr_mem_40431)[index_of_group_res_40462 *
                                                                          segred_group_sizze_30488];
                            
                            float defunc_1_op_res_30494;
                            
                            defunc_1_op_res_30494 = x_30492 + x_30493;
                            x_30492 = defunc_1_op_res_30494;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_40440)[sext_i32_i64(local_tid_40436)] =
                    x_30492;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_40463;
                    int32_t skip_waves_40464;
                    
                    skip_waves_40464 = 1;
                    
                    float x_40451;
                    float x_40452;
                    
                    offset_40463 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_40436,
                                  sext_i64_i32(segred_group_sizze_30488))) {
                            x_40451 = ((__local
                                        float *) red_arr_mem_40440)[sext_i32_i64(local_tid_40436 +
                                                                    offset_40463)];
                        }
                    }
                    offset_40463 = 1;
                    while (slt32(offset_40463, wave_sizze_40438)) {
                        if (slt32(local_tid_40436 + offset_40463,
                                  sext_i64_i32(segred_group_sizze_30488)) &&
                            ((local_tid_40436 - squot32(local_tid_40436,
                                                        wave_sizze_40438) *
                              wave_sizze_40438) & (2 * offset_40463 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_40452 = ((volatile __local
                                            float *) red_arr_mem_40440)[sext_i32_i64(local_tid_40436 +
                                                                        offset_40463)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_40453 = x_40451 + x_40452;
                                
                                x_40451 = defunc_1_op_res_40453;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_40440)[sext_i32_i64(local_tid_40436)] =
                                    x_40451;
                            }
                        }
                        offset_40463 *= 2;
                    }
                    while (slt32(skip_waves_40464,
                                 squot32(sext_i64_i32(segred_group_sizze_30488) +
                                         wave_sizze_40438 - 1,
                                         wave_sizze_40438))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_40463 = skip_waves_40464 * wave_sizze_40438;
                        if (slt32(local_tid_40436 + offset_40463,
                                  sext_i64_i32(segred_group_sizze_30488)) &&
                            ((local_tid_40436 - squot32(local_tid_40436,
                                                        wave_sizze_40438) *
                              wave_sizze_40438) == 0 &&
                             (squot32(local_tid_40436, wave_sizze_40438) & (2 *
                                                                            skip_waves_40464 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_40452 = ((__local
                                            float *) red_arr_mem_40440)[sext_i32_i64(local_tid_40436 +
                                                                        offset_40463)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_40453 = x_40451 + x_40452;
                                
                                x_40451 = defunc_1_op_res_40453;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_40440)[sext_i32_i64(local_tid_40436)] =
                                    x_40451;
                            }
                        }
                        skip_waves_40464 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_40436 == 0) {
                            ((__global float *) mem_39434)[gtid_30431 *
                                                           N_27115 +
                                                           gtid_30432] =
                                x_40451;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_30488
}
__kernel void mainDetailedzisegred_large_31008(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_40696_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_40694_backing_aligned_1,
                                               int64_t N_27115,
                                               int64_t i32_res_27129,
                                               int64_t num_groups_31055,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_39478,
                                               __global
                                               unsigned char *mem_39529,
                                               __global
                                               unsigned char *mem_39532,
                                               int64_t groups_per_segment_40680,
                                               int64_t elements_per_thread_40681,
                                               int64_t virt_num_groups_40682,
                                               int64_t threads_per_segment_40684,
                                               __global
                                               unsigned char *group_res_arr_mem_40685,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_40687)
{
    #define segred_group_sizze_31054 (mainDetailedzisegred_group_sizze_31002)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_40696_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_40696_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_40694_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40694_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40689;
    int32_t local_tid_40690;
    int64_t group_sizze_40693;
    int32_t wave_sizze_40692;
    int32_t group_tid_40691;
    
    global_tid_40689 = get_global_id(0);
    local_tid_40690 = get_local_id(0);
    group_sizze_40693 = get_local_size(0);
    wave_sizze_40692 = LOCKSTEP_WIDTH;
    group_tid_40691 = get_group_id(0);
    
    int32_t phys_tid_31008;
    
    phys_tid_31008 = global_tid_40689;
    
    __local char *red_arr_mem_40694;
    
    red_arr_mem_40694 = (__local char *) red_arr_mem_40694_backing_0;
    
    __local char *sync_arr_mem_40696;
    
    sync_arr_mem_40696 = (__local char *) sync_arr_mem_40696_backing_1;
    
    int32_t phys_group_id_40698;
    
    phys_group_id_40698 = get_group_id(0);
    for (int32_t i_40699 = 0; i_40699 <
         sdiv_up32(sext_i64_i32(virt_num_groups_40682) - phys_group_id_40698,
                   sext_i64_i32(num_groups_31055)); i_40699++) {
        int32_t virt_group_id_40700 = phys_group_id_40698 + i_40699 *
                sext_i64_i32(num_groups_31055);
        int32_t flat_segment_id_40701 = squot32(virt_group_id_40700,
                                                sext_i64_i32(groups_per_segment_40680));
        int64_t global_tid_40702 = srem64(sext_i32_i64(virt_group_id_40700) *
                                          segred_group_sizze_31054 +
                                          sext_i32_i64(local_tid_40690),
                                          segred_group_sizze_31054 *
                                          groups_per_segment_40680);
        int64_t gtid_30999 = sext_i32_i64(flat_segment_id_40701);
        int64_t gtid_31007;
        float x_acc_40703;
        int64_t chunk_sizze_40704;
        
        chunk_sizze_40704 = smin64(elements_per_thread_40681,
                                   sdiv_up64(i32_res_27129 -
                                             sext_i32_i64(sext_i64_i32(global_tid_40702)),
                                             threads_per_segment_40684));
        
        float x_31058;
        float x_31059;
        
        // neutral-initialise the accumulators
        {
            x_acc_40703 = 0.0F;
        }
        for (int64_t i_40708 = 0; i_40708 < chunk_sizze_40704; i_40708++) {
            gtid_31007 = sext_i32_i64(sext_i64_i32(global_tid_40702)) +
                threads_per_segment_40684 * i_40708;
            // apply map function
            {
                int32_t defunc_0_f_res_31062 = ((__global
                                                 int32_t *) mem_39529)[gtid_30999];
                int32_t index_primexp_36721 = sext_i64_i32(gtid_31007);
                bool cond_31064 = slt32(index_primexp_36721,
                                        defunc_0_f_res_31062);
                float defunc_0_f_res_31065;
                
                if (cond_31064) {
                    int64_t i_31066 = sext_i32_i64(index_primexp_36721);
                    float defunc_0_f_res_t_res_31067 = ((__global
                                                         float *) defunc_4_map_res_mem_39478)[gtid_30999 *
                                                                                              N_27115 +
                                                                                              i_31066];
                    
                    defunc_0_f_res_31065 = defunc_0_f_res_t_res_31067;
                } else {
                    defunc_0_f_res_31065 = 0.0F;
                }
                
                float defunc_0_f_res_31068 = defunc_0_f_res_31065 *
                      defunc_0_f_res_31065;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_31058 = x_acc_40703;
                }
                // load new values
                {
                    x_31059 = defunc_0_f_res_31068;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_31060 = x_31058 + x_31059;
                    
                    // store in accumulator
                    {
                        x_acc_40703 = defunc_1_op_res_31060;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_31058 = x_acc_40703;
            ((__local
              float *) red_arr_mem_40694)[sext_i32_i64(local_tid_40690)] =
                x_31058;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_40709;
        int32_t skip_waves_40710;
        
        skip_waves_40710 = 1;
        
        float x_40705;
        float x_40706;
        
        offset_40709 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_40690,
                      sext_i64_i32(segred_group_sizze_31054))) {
                x_40705 = ((__local
                            float *) red_arr_mem_40694)[sext_i32_i64(local_tid_40690 +
                                                        offset_40709)];
            }
        }
        offset_40709 = 1;
        while (slt32(offset_40709, wave_sizze_40692)) {
            if (slt32(local_tid_40690 + offset_40709,
                      sext_i64_i32(segred_group_sizze_31054)) &&
                ((local_tid_40690 - squot32(local_tid_40690, wave_sizze_40692) *
                  wave_sizze_40692) & (2 * offset_40709 - 1)) == 0) {
                // read array element
                {
                    x_40706 = ((volatile __local
                                float *) red_arr_mem_40694)[sext_i32_i64(local_tid_40690 +
                                                            offset_40709)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_40707 = x_40705 + x_40706;
                    
                    x_40705 = defunc_1_op_res_40707;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_40694)[sext_i32_i64(local_tid_40690)] =
                        x_40705;
                }
            }
            offset_40709 *= 2;
        }
        while (slt32(skip_waves_40710,
                     squot32(sext_i64_i32(segred_group_sizze_31054) +
                             wave_sizze_40692 - 1, wave_sizze_40692))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_40709 = skip_waves_40710 * wave_sizze_40692;
            if (slt32(local_tid_40690 + offset_40709,
                      sext_i64_i32(segred_group_sizze_31054)) &&
                ((local_tid_40690 - squot32(local_tid_40690, wave_sizze_40692) *
                  wave_sizze_40692) == 0 && (squot32(local_tid_40690,
                                                     wave_sizze_40692) & (2 *
                                                                          skip_waves_40710 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_40706 = ((__local
                                float *) red_arr_mem_40694)[sext_i32_i64(local_tid_40690 +
                                                            offset_40709)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_40707 = x_40705 + x_40706;
                    
                    x_40705 = defunc_1_op_res_40707;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_40694)[sext_i32_i64(local_tid_40690)] =
                        x_40705;
                }
            }
            skip_waves_40710 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_40690) == 0) {
                x_acc_40703 = x_40705;
            }
        }
        if (groups_per_segment_40680 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_40690 == 0) {
                    ((__global float *) mem_39532)[gtid_30999] = x_acc_40703;
                }
            }
        } else {
            int32_t old_counter_40711;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_40690 == 0) {
                    ((__global
                      float *) group_res_arr_mem_40685)[sext_i32_i64(virt_group_id_40700) *
                                                        segred_group_sizze_31054] =
                        x_acc_40703;
                    mem_fence_global();
                    old_counter_40711 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_40687)[sext_i32_i64(srem32(flat_segment_id_40701,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_40696)[0] =
                        old_counter_40711 == groups_per_segment_40680 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_40712;
            
            is_last_group_40712 = ((__local bool *) sync_arr_mem_40696)[0];
            if (is_last_group_40712) {
                if (local_tid_40690 == 0) {
                    old_counter_40711 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_40687)[sext_i32_i64(srem32(flat_segment_id_40701,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_40680));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_40713 =
                            sdiv_up64(groups_per_segment_40680,
                                      segred_group_sizze_31054);
                    
                    x_31058 = 0.0F;
                    for (int64_t i_40714 = 0; i_40714 < read_per_thread_40713;
                         i_40714++) {
                        int64_t group_res_id_40715 =
                                sext_i32_i64(local_tid_40690) *
                                read_per_thread_40713 + i_40714;
                        int64_t index_of_group_res_40716 =
                                sext_i32_i64(flat_segment_id_40701) *
                                groups_per_segment_40680 + group_res_id_40715;
                        
                        if (slt64(group_res_id_40715,
                                  groups_per_segment_40680)) {
                            x_31059 = ((__global
                                        float *) group_res_arr_mem_40685)[index_of_group_res_40716 *
                                                                          segred_group_sizze_31054];
                            
                            float defunc_1_op_res_31060;
                            
                            defunc_1_op_res_31060 = x_31058 + x_31059;
                            x_31058 = defunc_1_op_res_31060;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_40694)[sext_i32_i64(local_tid_40690)] =
                    x_31058;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_40717;
                    int32_t skip_waves_40718;
                    
                    skip_waves_40718 = 1;
                    
                    float x_40705;
                    float x_40706;
                    
                    offset_40717 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_40690,
                                  sext_i64_i32(segred_group_sizze_31054))) {
                            x_40705 = ((__local
                                        float *) red_arr_mem_40694)[sext_i32_i64(local_tid_40690 +
                                                                    offset_40717)];
                        }
                    }
                    offset_40717 = 1;
                    while (slt32(offset_40717, wave_sizze_40692)) {
                        if (slt32(local_tid_40690 + offset_40717,
                                  sext_i64_i32(segred_group_sizze_31054)) &&
                            ((local_tid_40690 - squot32(local_tid_40690,
                                                        wave_sizze_40692) *
                              wave_sizze_40692) & (2 * offset_40717 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_40706 = ((volatile __local
                                            float *) red_arr_mem_40694)[sext_i32_i64(local_tid_40690 +
                                                                        offset_40717)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_40707 = x_40705 + x_40706;
                                
                                x_40705 = defunc_1_op_res_40707;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_40694)[sext_i32_i64(local_tid_40690)] =
                                    x_40705;
                            }
                        }
                        offset_40717 *= 2;
                    }
                    while (slt32(skip_waves_40718,
                                 squot32(sext_i64_i32(segred_group_sizze_31054) +
                                         wave_sizze_40692 - 1,
                                         wave_sizze_40692))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_40717 = skip_waves_40718 * wave_sizze_40692;
                        if (slt32(local_tid_40690 + offset_40717,
                                  sext_i64_i32(segred_group_sizze_31054)) &&
                            ((local_tid_40690 - squot32(local_tid_40690,
                                                        wave_sizze_40692) *
                              wave_sizze_40692) == 0 &&
                             (squot32(local_tid_40690, wave_sizze_40692) & (2 *
                                                                            skip_waves_40718 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_40706 = ((__local
                                            float *) red_arr_mem_40694)[sext_i32_i64(local_tid_40690 +
                                                                        offset_40717)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_40707 = x_40705 + x_40706;
                                
                                x_40705 = defunc_1_op_res_40707;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_40694)[sext_i32_i64(local_tid_40690)] =
                                    x_40705;
                            }
                        }
                        skip_waves_40718 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_40690 == 0) {
                            ((__global float *) mem_39532)[gtid_30999] =
                                x_40705;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31054
}
__kernel void mainDetailedzisegred_large_31029(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_40636_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_40634_backing_aligned_1,
                                               int64_t N_27117,
                                               int64_t i32_res_27129,
                                               int64_t num_groups_31041,
                                               __global
                                               unsigned char *images_mem_38682,
                                               __global
                                               unsigned char *mem_39529,
                                               int64_t groups_per_segment_40620,
                                               int64_t elements_per_thread_40621,
                                               int64_t virt_num_groups_40622,
                                               int64_t threads_per_segment_40624,
                                               __global
                                               unsigned char *group_res_arr_mem_40625,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_40627)
{
    #define segred_group_sizze_31040 (mainDetailedzisegred_group_sizze_31023)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_40636_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_40636_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_40634_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40634_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40629;
    int32_t local_tid_40630;
    int64_t group_sizze_40633;
    int32_t wave_sizze_40632;
    int32_t group_tid_40631;
    
    global_tid_40629 = get_global_id(0);
    local_tid_40630 = get_local_id(0);
    group_sizze_40633 = get_local_size(0);
    wave_sizze_40632 = LOCKSTEP_WIDTH;
    group_tid_40631 = get_group_id(0);
    
    int32_t phys_tid_31029;
    
    phys_tid_31029 = global_tid_40629;
    
    __local char *red_arr_mem_40634;
    
    red_arr_mem_40634 = (__local char *) red_arr_mem_40634_backing_0;
    
    __local char *sync_arr_mem_40636;
    
    sync_arr_mem_40636 = (__local char *) sync_arr_mem_40636_backing_1;
    
    int32_t phys_group_id_40638;
    
    phys_group_id_40638 = get_group_id(0);
    for (int32_t i_40639 = 0; i_40639 <
         sdiv_up32(sext_i64_i32(virt_num_groups_40622) - phys_group_id_40638,
                   sext_i64_i32(num_groups_31041)); i_40639++) {
        int32_t virt_group_id_40640 = phys_group_id_40638 + i_40639 *
                sext_i64_i32(num_groups_31041);
        int32_t flat_segment_id_40641 = squot32(virt_group_id_40640,
                                                sext_i64_i32(groups_per_segment_40620));
        int64_t global_tid_40642 = srem64(sext_i32_i64(virt_group_id_40640) *
                                          segred_group_sizze_31040 +
                                          sext_i32_i64(local_tid_40630),
                                          segred_group_sizze_31040 *
                                          groups_per_segment_40620);
        int64_t gtid_31020 = sext_i32_i64(flat_segment_id_40641);
        int64_t gtid_31028;
        int32_t x_acc_40643;
        int64_t chunk_sizze_40644;
        
        chunk_sizze_40644 = smin64(elements_per_thread_40621,
                                   sdiv_up64(i32_res_27129 -
                                             sext_i32_i64(sext_i64_i32(global_tid_40642)),
                                             threads_per_segment_40624));
        
        int32_t x_31044;
        int32_t x_31045;
        
        // neutral-initialise the accumulators
        {
            x_acc_40643 = 0;
        }
        for (int64_t i_40648 = 0; i_40648 < chunk_sizze_40644; i_40648++) {
            gtid_31028 = sext_i32_i64(sext_i64_i32(global_tid_40642)) +
                threads_per_segment_40624 * i_40648;
            // apply map function
            {
                float x_31048 = ((__global
                                  float *) images_mem_38682)[gtid_31020 *
                                                             N_27117 +
                                                             gtid_31028];
                bool isnan_res_31049;
                
                isnan_res_31049 = futrts_isnan32(x_31048);
                
                bool cond_31050 = !isnan_res_31049;
                int32_t defunc_0_f_res_31051 = btoi_bool_i32(cond_31050);
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_31044 = x_acc_40643;
                }
                // load new values
                {
                    x_31045 = defunc_0_f_res_31051;
                }
                // apply reduction operator
                {
                    int32_t defunc_1_op_res_31046 = add32(x_31044, x_31045);
                    
                    // store in accumulator
                    {
                        x_acc_40643 = defunc_1_op_res_31046;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_31044 = x_acc_40643;
            ((__local
              int32_t *) red_arr_mem_40634)[sext_i32_i64(local_tid_40630)] =
                x_31044;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_40649;
        int32_t skip_waves_40650;
        
        skip_waves_40650 = 1;
        
        int32_t x_40645;
        int32_t x_40646;
        
        offset_40649 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_40630,
                      sext_i64_i32(segred_group_sizze_31040))) {
                x_40645 = ((__local
                            int32_t *) red_arr_mem_40634)[sext_i32_i64(local_tid_40630 +
                                                          offset_40649)];
            }
        }
        offset_40649 = 1;
        while (slt32(offset_40649, wave_sizze_40632)) {
            if (slt32(local_tid_40630 + offset_40649,
                      sext_i64_i32(segred_group_sizze_31040)) &&
                ((local_tid_40630 - squot32(local_tid_40630, wave_sizze_40632) *
                  wave_sizze_40632) & (2 * offset_40649 - 1)) == 0) {
                // read array element
                {
                    x_40646 = ((volatile __local
                                int32_t *) red_arr_mem_40634)[sext_i32_i64(local_tid_40630 +
                                                              offset_40649)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_40647 = add32(x_40645, x_40646);
                    
                    x_40645 = defunc_1_op_res_40647;
                }
                // write result of operation
                {
                    ((volatile __local
                      int32_t *) red_arr_mem_40634)[sext_i32_i64(local_tid_40630)] =
                        x_40645;
                }
            }
            offset_40649 *= 2;
        }
        while (slt32(skip_waves_40650,
                     squot32(sext_i64_i32(segred_group_sizze_31040) +
                             wave_sizze_40632 - 1, wave_sizze_40632))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_40649 = skip_waves_40650 * wave_sizze_40632;
            if (slt32(local_tid_40630 + offset_40649,
                      sext_i64_i32(segred_group_sizze_31040)) &&
                ((local_tid_40630 - squot32(local_tid_40630, wave_sizze_40632) *
                  wave_sizze_40632) == 0 && (squot32(local_tid_40630,
                                                     wave_sizze_40632) & (2 *
                                                                          skip_waves_40650 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_40646 = ((__local
                                int32_t *) red_arr_mem_40634)[sext_i32_i64(local_tid_40630 +
                                                              offset_40649)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_40647 = add32(x_40645, x_40646);
                    
                    x_40645 = defunc_1_op_res_40647;
                }
                // write result of operation
                {
                    ((__local
                      int32_t *) red_arr_mem_40634)[sext_i32_i64(local_tid_40630)] =
                        x_40645;
                }
            }
            skip_waves_40650 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_40630) == 0) {
                x_acc_40643 = x_40645;
            }
        }
        if (groups_per_segment_40620 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_40630 == 0) {
                    ((__global int32_t *) mem_39529)[gtid_31020] = x_acc_40643;
                }
            }
        } else {
            int32_t old_counter_40651;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_40630 == 0) {
                    ((__global
                      int32_t *) group_res_arr_mem_40625)[sext_i32_i64(virt_group_id_40640) *
                                                          segred_group_sizze_31040] =
                        x_acc_40643;
                    mem_fence_global();
                    old_counter_40651 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_40627)[sext_i32_i64(srem32(flat_segment_id_40641,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_40636)[0] =
                        old_counter_40651 == groups_per_segment_40620 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_40652;
            
            is_last_group_40652 = ((__local bool *) sync_arr_mem_40636)[0];
            if (is_last_group_40652) {
                if (local_tid_40630 == 0) {
                    old_counter_40651 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_40627)[sext_i32_i64(srem32(flat_segment_id_40641,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_40620));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_40653 =
                            sdiv_up64(groups_per_segment_40620,
                                      segred_group_sizze_31040);
                    
                    x_31044 = 0;
                    for (int64_t i_40654 = 0; i_40654 < read_per_thread_40653;
                         i_40654++) {
                        int64_t group_res_id_40655 =
                                sext_i32_i64(local_tid_40630) *
                                read_per_thread_40653 + i_40654;
                        int64_t index_of_group_res_40656 =
                                sext_i32_i64(flat_segment_id_40641) *
                                groups_per_segment_40620 + group_res_id_40655;
                        
                        if (slt64(group_res_id_40655,
                                  groups_per_segment_40620)) {
                            x_31045 = ((__global
                                        int32_t *) group_res_arr_mem_40625)[index_of_group_res_40656 *
                                                                            segred_group_sizze_31040];
                            
                            int32_t defunc_1_op_res_31046;
                            
                            defunc_1_op_res_31046 = add32(x_31044, x_31045);
                            x_31044 = defunc_1_op_res_31046;
                        }
                    }
                }
                ((__local
                  int32_t *) red_arr_mem_40634)[sext_i32_i64(local_tid_40630)] =
                    x_31044;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_40657;
                    int32_t skip_waves_40658;
                    
                    skip_waves_40658 = 1;
                    
                    int32_t x_40645;
                    int32_t x_40646;
                    
                    offset_40657 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_40630,
                                  sext_i64_i32(segred_group_sizze_31040))) {
                            x_40645 = ((__local
                                        int32_t *) red_arr_mem_40634)[sext_i32_i64(local_tid_40630 +
                                                                      offset_40657)];
                        }
                    }
                    offset_40657 = 1;
                    while (slt32(offset_40657, wave_sizze_40632)) {
                        if (slt32(local_tid_40630 + offset_40657,
                                  sext_i64_i32(segred_group_sizze_31040)) &&
                            ((local_tid_40630 - squot32(local_tid_40630,
                                                        wave_sizze_40632) *
                              wave_sizze_40632) & (2 * offset_40657 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_40646 = ((volatile __local
                                            int32_t *) red_arr_mem_40634)[sext_i32_i64(local_tid_40630 +
                                                                          offset_40657)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_40647 = add32(x_40645,
                                                                      x_40646);
                                
                                x_40645 = defunc_1_op_res_40647;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_40634)[sext_i32_i64(local_tid_40630)] =
                                    x_40645;
                            }
                        }
                        offset_40657 *= 2;
                    }
                    while (slt32(skip_waves_40658,
                                 squot32(sext_i64_i32(segred_group_sizze_31040) +
                                         wave_sizze_40632 - 1,
                                         wave_sizze_40632))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_40657 = skip_waves_40658 * wave_sizze_40632;
                        if (slt32(local_tid_40630 + offset_40657,
                                  sext_i64_i32(segred_group_sizze_31040)) &&
                            ((local_tid_40630 - squot32(local_tid_40630,
                                                        wave_sizze_40632) *
                              wave_sizze_40632) == 0 &&
                             (squot32(local_tid_40630, wave_sizze_40632) & (2 *
                                                                            skip_waves_40658 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_40646 = ((__local
                                            int32_t *) red_arr_mem_40634)[sext_i32_i64(local_tid_40630 +
                                                                          offset_40657)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_40647 = add32(x_40645,
                                                                      x_40646);
                                
                                x_40645 = defunc_1_op_res_40647;
                            }
                            // write result of operation
                            {
                                ((__local
                                  int32_t *) red_arr_mem_40634)[sext_i32_i64(local_tid_40630)] =
                                    x_40645;
                            }
                        }
                        skip_waves_40658 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_40630 == 0) {
                            ((__global int32_t *) mem_39529)[gtid_31020] =
                                x_40645;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31040
}
__kernel void mainDetailedzisegred_large_31180(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_40805_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_40803_backing_aligned_1,
                                               int64_t N_27115,
                                               int64_t i32_res_27490,
                                               int64_t num_groups_31198,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_39478,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_39541,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_39542,
                                               __global
                                               unsigned char *mem_39575,
                                               int64_t groups_per_segment_40789,
                                               int64_t elements_per_thread_40790,
                                               int64_t virt_num_groups_40791,
                                               int64_t threads_per_segment_40793,
                                               __global
                                               unsigned char *group_res_arr_mem_40794,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_40796)
{
    #define segred_group_sizze_31197 (mainDetailedzisegred_group_sizze_31174)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_40805_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_40805_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_40803_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40803_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40798;
    int32_t local_tid_40799;
    int64_t group_sizze_40802;
    int32_t wave_sizze_40801;
    int32_t group_tid_40800;
    
    global_tid_40798 = get_global_id(0);
    local_tid_40799 = get_local_id(0);
    group_sizze_40802 = get_local_size(0);
    wave_sizze_40801 = LOCKSTEP_WIDTH;
    group_tid_40800 = get_group_id(0);
    
    int32_t phys_tid_31180;
    
    phys_tid_31180 = global_tid_40798;
    
    __local char *red_arr_mem_40803;
    
    red_arr_mem_40803 = (__local char *) red_arr_mem_40803_backing_0;
    
    __local char *sync_arr_mem_40805;
    
    sync_arr_mem_40805 = (__local char *) sync_arr_mem_40805_backing_1;
    
    int32_t phys_group_id_40807;
    
    phys_group_id_40807 = get_group_id(0);
    for (int32_t i_40808 = 0; i_40808 <
         sdiv_up32(sext_i64_i32(virt_num_groups_40791) - phys_group_id_40807,
                   sext_i64_i32(num_groups_31198)); i_40808++) {
        int32_t virt_group_id_40809 = phys_group_id_40807 + i_40808 *
                sext_i64_i32(num_groups_31198);
        int32_t flat_segment_id_40810 = squot32(virt_group_id_40809,
                                                sext_i64_i32(groups_per_segment_40789));
        int64_t global_tid_40811 = srem64(sext_i32_i64(virt_group_id_40809) *
                                          segred_group_sizze_31197 +
                                          sext_i32_i64(local_tid_40799),
                                          segred_group_sizze_31197 *
                                          groups_per_segment_40789);
        int64_t gtid_31171 = sext_i32_i64(flat_segment_id_40810);
        int64_t gtid_31179;
        float x_acc_40812;
        int64_t chunk_sizze_40813;
        
        chunk_sizze_40813 = smin64(elements_per_thread_40790,
                                   sdiv_up64(i32_res_27490 -
                                             sext_i32_i64(sext_i64_i32(global_tid_40811)),
                                             threads_per_segment_40793));
        
        float x_31201;
        float x_31202;
        
        // neutral-initialise the accumulators
        {
            x_acc_40812 = 0.0F;
        }
        for (int64_t i_40817 = 0; i_40817 < chunk_sizze_40813; i_40817++) {
            gtid_31179 = sext_i32_i64(sext_i64_i32(global_tid_40811)) +
                threads_per_segment_40793 * i_40817;
            // apply map function
            {
                int32_t x_31206 = ((__global
                                    int32_t *) defunc_3_map_res_mem_39541)[gtid_31171];
                int32_t index_primexp_36726 = sext_i64_i32(gtid_31179);
                bool cond_31208 = slt32(index_primexp_36726, x_31206);
                float defunc_0_f_res_31209;
                
                if (cond_31208) {
                    int32_t x_31205 = ((__global
                                        int32_t *) defunc_3_map_res_mem_39542)[gtid_31171];
                    int32_t x_31210 = add32(x_31205, index_primexp_36726);
                    int32_t x_31211 = sub32(x_31210, x_31206);
                    int32_t i_31212 = add32(1, x_31211);
                    int64_t i_31213 = sext_i32_i64(i_31212);
                    float defunc_0_f_res_t_res_31214 = ((__global
                                                         float *) defunc_4_map_res_mem_39478)[gtid_31171 *
                                                                                              N_27115 +
                                                                                              i_31213];
                    
                    defunc_0_f_res_31209 = defunc_0_f_res_t_res_31214;
                } else {
                    defunc_0_f_res_31209 = 0.0F;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_31201 = x_acc_40812;
                }
                // load new values
                {
                    x_31202 = defunc_0_f_res_31209;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_31203 = x_31201 + x_31202;
                    
                    // store in accumulator
                    {
                        x_acc_40812 = defunc_1_op_res_31203;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_31201 = x_acc_40812;
            ((__local
              float *) red_arr_mem_40803)[sext_i32_i64(local_tid_40799)] =
                x_31201;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_40818;
        int32_t skip_waves_40819;
        
        skip_waves_40819 = 1;
        
        float x_40814;
        float x_40815;
        
        offset_40818 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_40799,
                      sext_i64_i32(segred_group_sizze_31197))) {
                x_40814 = ((__local
                            float *) red_arr_mem_40803)[sext_i32_i64(local_tid_40799 +
                                                        offset_40818)];
            }
        }
        offset_40818 = 1;
        while (slt32(offset_40818, wave_sizze_40801)) {
            if (slt32(local_tid_40799 + offset_40818,
                      sext_i64_i32(segred_group_sizze_31197)) &&
                ((local_tid_40799 - squot32(local_tid_40799, wave_sizze_40801) *
                  wave_sizze_40801) & (2 * offset_40818 - 1)) == 0) {
                // read array element
                {
                    x_40815 = ((volatile __local
                                float *) red_arr_mem_40803)[sext_i32_i64(local_tid_40799 +
                                                            offset_40818)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_40816 = x_40814 + x_40815;
                    
                    x_40814 = defunc_1_op_res_40816;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_40803)[sext_i32_i64(local_tid_40799)] =
                        x_40814;
                }
            }
            offset_40818 *= 2;
        }
        while (slt32(skip_waves_40819,
                     squot32(sext_i64_i32(segred_group_sizze_31197) +
                             wave_sizze_40801 - 1, wave_sizze_40801))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_40818 = skip_waves_40819 * wave_sizze_40801;
            if (slt32(local_tid_40799 + offset_40818,
                      sext_i64_i32(segred_group_sizze_31197)) &&
                ((local_tid_40799 - squot32(local_tid_40799, wave_sizze_40801) *
                  wave_sizze_40801) == 0 && (squot32(local_tid_40799,
                                                     wave_sizze_40801) & (2 *
                                                                          skip_waves_40819 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_40815 = ((__local
                                float *) red_arr_mem_40803)[sext_i32_i64(local_tid_40799 +
                                                            offset_40818)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_40816 = x_40814 + x_40815;
                    
                    x_40814 = defunc_1_op_res_40816;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_40803)[sext_i32_i64(local_tid_40799)] =
                        x_40814;
                }
            }
            skip_waves_40819 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_40799) == 0) {
                x_acc_40812 = x_40814;
            }
        }
        if (groups_per_segment_40789 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_40799 == 0) {
                    ((__global float *) mem_39575)[gtid_31171] = x_acc_40812;
                }
            }
        } else {
            int32_t old_counter_40820;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_40799 == 0) {
                    ((__global
                      float *) group_res_arr_mem_40794)[sext_i32_i64(virt_group_id_40809) *
                                                        segred_group_sizze_31197] =
                        x_acc_40812;
                    mem_fence_global();
                    old_counter_40820 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_40796)[sext_i32_i64(srem32(flat_segment_id_40810,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_40805)[0] =
                        old_counter_40820 == groups_per_segment_40789 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_40821;
            
            is_last_group_40821 = ((__local bool *) sync_arr_mem_40805)[0];
            if (is_last_group_40821) {
                if (local_tid_40799 == 0) {
                    old_counter_40820 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_40796)[sext_i32_i64(srem32(flat_segment_id_40810,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_40789));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_40822 =
                            sdiv_up64(groups_per_segment_40789,
                                      segred_group_sizze_31197);
                    
                    x_31201 = 0.0F;
                    for (int64_t i_40823 = 0; i_40823 < read_per_thread_40822;
                         i_40823++) {
                        int64_t group_res_id_40824 =
                                sext_i32_i64(local_tid_40799) *
                                read_per_thread_40822 + i_40823;
                        int64_t index_of_group_res_40825 =
                                sext_i32_i64(flat_segment_id_40810) *
                                groups_per_segment_40789 + group_res_id_40824;
                        
                        if (slt64(group_res_id_40824,
                                  groups_per_segment_40789)) {
                            x_31202 = ((__global
                                        float *) group_res_arr_mem_40794)[index_of_group_res_40825 *
                                                                          segred_group_sizze_31197];
                            
                            float defunc_1_op_res_31203;
                            
                            defunc_1_op_res_31203 = x_31201 + x_31202;
                            x_31201 = defunc_1_op_res_31203;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_40803)[sext_i32_i64(local_tid_40799)] =
                    x_31201;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_40826;
                    int32_t skip_waves_40827;
                    
                    skip_waves_40827 = 1;
                    
                    float x_40814;
                    float x_40815;
                    
                    offset_40826 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_40799,
                                  sext_i64_i32(segred_group_sizze_31197))) {
                            x_40814 = ((__local
                                        float *) red_arr_mem_40803)[sext_i32_i64(local_tid_40799 +
                                                                    offset_40826)];
                        }
                    }
                    offset_40826 = 1;
                    while (slt32(offset_40826, wave_sizze_40801)) {
                        if (slt32(local_tid_40799 + offset_40826,
                                  sext_i64_i32(segred_group_sizze_31197)) &&
                            ((local_tid_40799 - squot32(local_tid_40799,
                                                        wave_sizze_40801) *
                              wave_sizze_40801) & (2 * offset_40826 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_40815 = ((volatile __local
                                            float *) red_arr_mem_40803)[sext_i32_i64(local_tid_40799 +
                                                                        offset_40826)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_40816 = x_40814 + x_40815;
                                
                                x_40814 = defunc_1_op_res_40816;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_40803)[sext_i32_i64(local_tid_40799)] =
                                    x_40814;
                            }
                        }
                        offset_40826 *= 2;
                    }
                    while (slt32(skip_waves_40827,
                                 squot32(sext_i64_i32(segred_group_sizze_31197) +
                                         wave_sizze_40801 - 1,
                                         wave_sizze_40801))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_40826 = skip_waves_40827 * wave_sizze_40801;
                        if (slt32(local_tid_40799 + offset_40826,
                                  sext_i64_i32(segred_group_sizze_31197)) &&
                            ((local_tid_40799 - squot32(local_tid_40799,
                                                        wave_sizze_40801) *
                              wave_sizze_40801) == 0 &&
                             (squot32(local_tid_40799, wave_sizze_40801) & (2 *
                                                                            skip_waves_40827 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_40815 = ((__local
                                            float *) red_arr_mem_40803)[sext_i32_i64(local_tid_40799 +
                                                                        offset_40826)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_40816 = x_40814 + x_40815;
                                
                                x_40814 = defunc_1_op_res_40816;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_40803)[sext_i32_i64(local_tid_40799)] =
                                    x_40814;
                            }
                        }
                        skip_waves_40827 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_40799 == 0) {
                            ((__global float *) mem_39575)[gtid_31171] =
                                x_40814;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31197
}
__kernel void mainDetailedzisegred_large_32285(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_40990_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_40988_backing_aligned_1,
                                               __local volatile
                                               int64_t *red_arr_mem_40986_backing_aligned_2,
                                               __local volatile
                                               int64_t *red_arr_mem_40984_backing_aligned_3,
                                               int64_t iota32_arg_27515,
                                               int64_t num_groups_32456,
                                               __global
                                               unsigned char *mem_39581,
                                               __global
                                               unsigned char *mem_39636,
                                               __global
                                               unsigned char *mem_39638,
                                               __global
                                               unsigned char *mem_39642,
                                               __global
                                               unsigned char *mem_39645,
                                               __global
                                               unsigned char *mem_39647,
                                               __global
                                               unsigned char *mem_39649,
                                               __global
                                               unsigned char *mem_39652,
                                               int64_t groups_per_segment_40966,
                                               int64_t elements_per_thread_40967,
                                               int64_t virt_num_groups_40968,
                                               __global
                                               unsigned char *group_res_arr_mem_40971,
                                               __global
                                               unsigned char *group_res_arr_mem_40973,
                                               __global
                                               unsigned char *group_res_arr_mem_40975,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_40977)
{
    #define segred_group_sizze_32455 (mainDetailedzisegred_group_sizze_32279)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_40990_backing_3 =
                          (__local volatile
                           char *) sync_arr_mem_40990_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_40988_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_40988_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_40986_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_40986_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_40984_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40984_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40979;
    int32_t local_tid_40980;
    int64_t group_sizze_40983;
    int32_t wave_sizze_40982;
    int32_t group_tid_40981;
    
    global_tid_40979 = get_global_id(0);
    local_tid_40980 = get_local_id(0);
    group_sizze_40983 = get_local_size(0);
    wave_sizze_40982 = LOCKSTEP_WIDTH;
    group_tid_40981 = get_group_id(0);
    
    int32_t phys_tid_32285;
    
    phys_tid_32285 = global_tid_40979;
    
    __local char *red_arr_mem_40984;
    
    red_arr_mem_40984 = (__local char *) red_arr_mem_40984_backing_0;
    
    __local char *red_arr_mem_40986;
    
    red_arr_mem_40986 = (__local char *) red_arr_mem_40986_backing_1;
    
    __local char *red_arr_mem_40988;
    
    red_arr_mem_40988 = (__local char *) red_arr_mem_40988_backing_2;
    
    __local char *sync_arr_mem_40990;
    
    sync_arr_mem_40990 = (__local char *) sync_arr_mem_40990_backing_3;
    
    int32_t phys_group_id_40992;
    
    phys_group_id_40992 = get_group_id(0);
    for (int32_t i_40993 = 0; i_40993 <
         sdiv_up32(sext_i64_i32(virt_num_groups_40968) - phys_group_id_40992,
                   sext_i64_i32(num_groups_32456)); i_40993++) {
        int32_t virt_group_id_40994 = phys_group_id_40992 + i_40993 *
                sext_i64_i32(num_groups_32456);
        int32_t flat_segment_id_40995 = squot32(virt_group_id_40994,
                                                sext_i64_i32(groups_per_segment_40966));
        int64_t global_tid_40996 = srem64(sext_i32_i64(virt_group_id_40994) *
                                          segred_group_sizze_32455 +
                                          sext_i32_i64(local_tid_40980),
                                          segred_group_sizze_32455 *
                                          groups_per_segment_40966);
        int64_t gtid_32276 = sext_i32_i64(flat_segment_id_40995);
        int64_t gtid_32284;
        bool x_acc_40997;
        int32_t x_acc_40998;
        float x_acc_40999;
        int64_t chunk_sizze_41000;
        int64_t starting_point_41001;
        
        starting_point_41001 = sext_i32_i64(sext_i64_i32(global_tid_40996)) *
            elements_per_thread_40967;
        
        int64_t remaining_elements_41002;
        
        remaining_elements_41002 = iota32_arg_27515 - starting_point_41001;
        if (sle64(remaining_elements_41002, 0) || sle64(iota32_arg_27515,
                                                        starting_point_41001)) {
            chunk_sizze_41000 = 0;
        } else {
            if (slt64(iota32_arg_27515,
                      (sext_i32_i64(sext_i64_i32(global_tid_40996)) + 1) *
                      elements_per_thread_40967)) {
                chunk_sizze_41000 = iota32_arg_27515 -
                    sext_i32_i64(sext_i64_i32(global_tid_40996)) *
                    elements_per_thread_40967;
            } else {
                chunk_sizze_41000 = elements_per_thread_40967;
            }
        }
        
        bool x_32462;
        int32_t x_32463;
        float x_32464;
        bool x_32465;
        int32_t x_32466;
        float x_32467;
        
        // neutral-initialise the accumulators
        {
            x_acc_40997 = 0;
            x_acc_40998 = -1;
            x_acc_40999 = 0.0F;
        }
        for (int64_t i_41017 = 0; i_41017 < elements_per_thread_40967;
             i_41017++) {
            gtid_32284 = sext_i32_i64(local_tid_40980) +
                (sext_i32_i64(squot32(sext_i64_i32(global_tid_40996),
                                      sext_i64_i32(segred_group_sizze_32455))) *
                 elements_per_thread_40967 + i_41017) *
                segred_group_sizze_32455;
            if (slt64(gtid_32284, iota32_arg_27515)) {
                // apply map function
                {
                    int32_t y_32476 = ((__global
                                        int32_t *) mem_39638)[gtid_32276];
                    float y_32477 = ((__global float *) mem_39636)[gtid_32276];
                    float x_32481 = ((__global float *) mem_39642)[gtid_32276 *
                                                                   iota32_arg_27515 +
                                                                   gtid_32284];
                    float x_32482 = ((__global float *) mem_39581)[gtid_32284];
                    int32_t index_primexp_36746 = sext_i64_i32(gtid_32284);
                    float defunc_0_f_res_32485 = x_32481 / y_32477;
                    bool cond_32486 = slt32(index_primexp_36746, y_32476);
                    bool isnan_res_32487;
                    
                    isnan_res_32487 = futrts_isnan32(defunc_0_f_res_32485);
                    
                    bool cond_t_res_32488 = !isnan_res_32487;
                    bool x_32489 = cond_32486 && cond_t_res_32488;
                    float abs_res_32490 = (float) fabs(defunc_0_f_res_32485);
                    bool defunc_2_f_res_t_res_32491 = x_32482 < abs_res_32490;
                    bool x_32492 = x_32489 && defunc_2_f_res_t_res_32491;
                    float defunc_1_f_res_32493;
                    
                    if (cond_32486) {
                        defunc_1_f_res_32493 = defunc_0_f_res_32485;
                    } else {
                        defunc_1_f_res_32493 = 0.0F;
                    }
                    // save map-out results
                    {
                        ((__global float *) mem_39652)[gtid_32276 *
                                                       iota32_arg_27515 +
                                                       gtid_32284] =
                            defunc_0_f_res_32485;
                    }
                    // load accumulator
                    {
                        x_32462 = x_acc_40997;
                        x_32463 = x_acc_40998;
                        x_32464 = x_acc_40999;
                    }
                    // load new values
                    {
                        x_32465 = x_32492;
                        x_32466 = index_primexp_36746;
                        x_32467 = defunc_1_f_res_32493;
                    }
                    // apply reduction operator
                    {
                        bool defunc_1_op_res_32468;
                        int32_t defunc_1_op_res_32469;
                        
                        if (x_32462) {
                            defunc_1_op_res_32468 = x_32462;
                            defunc_1_op_res_32469 = x_32463;
                        } else {
                            bool x_32470 = x_32465 && x_32465;
                            bool x_32471 = !x_32465;
                            bool y_32472 = x_32462 && x_32471;
                            bool defunc_1_op_res_f_res_32473 = x_32470 ||
                                 y_32472;
                            int32_t defunc_1_op_res_f_res_32474;
                            
                            if (x_32465) {
                                defunc_1_op_res_f_res_32474 = x_32466;
                            } else {
                                defunc_1_op_res_f_res_32474 = x_32463;
                            }
                            defunc_1_op_res_32468 = defunc_1_op_res_f_res_32473;
                            defunc_1_op_res_32469 = defunc_1_op_res_f_res_32474;
                        }
                        
                        float defunc_1_op_res_32475 = x_32464 + x_32467;
                        
                        // store in accumulator
                        {
                            x_acc_40997 = defunc_1_op_res_32468;
                            x_acc_40998 = defunc_1_op_res_32469;
                            x_acc_40999 = defunc_1_op_res_32475;
                        }
                    }
                }
            }
            // to reduce current chunk, first store our result in memory
            {
                x_32462 = x_acc_40997;
                x_32463 = x_acc_40998;
                x_32464 = x_acc_40999;
                ((__local
                  bool *) red_arr_mem_40984)[sext_i32_i64(local_tid_40980)] =
                    x_32462;
                ((__local
                  int32_t *) red_arr_mem_40986)[sext_i32_i64(local_tid_40980)] =
                    x_32463;
                ((__local
                  float *) red_arr_mem_40988)[sext_i32_i64(local_tid_40980)] =
                    x_32464;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t offset_41018;
            int32_t skip_waves_41019;
            
            skip_waves_41019 = 1;
            
            bool x_41003;
            int32_t x_41004;
            float x_41005;
            bool x_41006;
            int32_t x_41007;
            float x_41008;
            
            offset_41018 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_40980,
                          sext_i64_i32(segred_group_sizze_32455))) {
                    x_41003 = ((__local
                                bool *) red_arr_mem_40984)[sext_i32_i64(local_tid_40980 +
                                                           offset_41018)];
                    x_41004 = ((__local
                                int32_t *) red_arr_mem_40986)[sext_i32_i64(local_tid_40980 +
                                                              offset_41018)];
                    x_41005 = ((__local
                                float *) red_arr_mem_40988)[sext_i32_i64(local_tid_40980 +
                                                            offset_41018)];
                }
            }
            offset_41018 = 1;
            while (slt32(offset_41018, wave_sizze_40982)) {
                if (slt32(local_tid_40980 + offset_41018,
                          sext_i64_i32(segred_group_sizze_32455)) &&
                    ((local_tid_40980 - squot32(local_tid_40980,
                                                wave_sizze_40982) *
                      wave_sizze_40982) & (2 * offset_41018 - 1)) == 0) {
                    // read array element
                    {
                        x_41006 = ((volatile __local
                                    bool *) red_arr_mem_40984)[sext_i32_i64(local_tid_40980 +
                                                               offset_41018)];
                        x_41007 = ((volatile __local
                                    int32_t *) red_arr_mem_40986)[sext_i32_i64(local_tid_40980 +
                                                                  offset_41018)];
                        x_41008 = ((volatile __local
                                    float *) red_arr_mem_40988)[sext_i32_i64(local_tid_40980 +
                                                                offset_41018)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_41009;
                        int32_t defunc_1_op_res_41010;
                        
                        if (x_41003) {
                            defunc_1_op_res_41009 = x_41003;
                            defunc_1_op_res_41010 = x_41004;
                        } else {
                            bool x_41011 = x_41006 && x_41006;
                            bool x_41012 = !x_41006;
                            bool y_41013 = x_41003 && x_41012;
                            bool defunc_1_op_res_f_res_41014 = x_41011 ||
                                 y_41013;
                            int32_t defunc_1_op_res_f_res_41015;
                            
                            if (x_41006) {
                                defunc_1_op_res_f_res_41015 = x_41007;
                            } else {
                                defunc_1_op_res_f_res_41015 = x_41004;
                            }
                            defunc_1_op_res_41009 = defunc_1_op_res_f_res_41014;
                            defunc_1_op_res_41010 = defunc_1_op_res_f_res_41015;
                        }
                        
                        float defunc_1_op_res_41016 = x_41005 + x_41008;
                        
                        x_41003 = defunc_1_op_res_41009;
                        x_41004 = defunc_1_op_res_41010;
                        x_41005 = defunc_1_op_res_41016;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          bool *) red_arr_mem_40984)[sext_i32_i64(local_tid_40980)] =
                            x_41003;
                        ((volatile __local
                          int32_t *) red_arr_mem_40986)[sext_i32_i64(local_tid_40980)] =
                            x_41004;
                        ((volatile __local
                          float *) red_arr_mem_40988)[sext_i32_i64(local_tid_40980)] =
                            x_41005;
                    }
                }
                offset_41018 *= 2;
            }
            while (slt32(skip_waves_41019,
                         squot32(sext_i64_i32(segred_group_sizze_32455) +
                                 wave_sizze_40982 - 1, wave_sizze_40982))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_41018 = skip_waves_41019 * wave_sizze_40982;
                if (slt32(local_tid_40980 + offset_41018,
                          sext_i64_i32(segred_group_sizze_32455)) &&
                    ((local_tid_40980 - squot32(local_tid_40980,
                                                wave_sizze_40982) *
                      wave_sizze_40982) == 0 && (squot32(local_tid_40980,
                                                         wave_sizze_40982) &
                                                 (2 * skip_waves_41019 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_41006 = ((__local
                                    bool *) red_arr_mem_40984)[sext_i32_i64(local_tid_40980 +
                                                               offset_41018)];
                        x_41007 = ((__local
                                    int32_t *) red_arr_mem_40986)[sext_i32_i64(local_tid_40980 +
                                                                  offset_41018)];
                        x_41008 = ((__local
                                    float *) red_arr_mem_40988)[sext_i32_i64(local_tid_40980 +
                                                                offset_41018)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_41009;
                        int32_t defunc_1_op_res_41010;
                        
                        if (x_41003) {
                            defunc_1_op_res_41009 = x_41003;
                            defunc_1_op_res_41010 = x_41004;
                        } else {
                            bool x_41011 = x_41006 && x_41006;
                            bool x_41012 = !x_41006;
                            bool y_41013 = x_41003 && x_41012;
                            bool defunc_1_op_res_f_res_41014 = x_41011 ||
                                 y_41013;
                            int32_t defunc_1_op_res_f_res_41015;
                            
                            if (x_41006) {
                                defunc_1_op_res_f_res_41015 = x_41007;
                            } else {
                                defunc_1_op_res_f_res_41015 = x_41004;
                            }
                            defunc_1_op_res_41009 = defunc_1_op_res_f_res_41014;
                            defunc_1_op_res_41010 = defunc_1_op_res_f_res_41015;
                        }
                        
                        float defunc_1_op_res_41016 = x_41005 + x_41008;
                        
                        x_41003 = defunc_1_op_res_41009;
                        x_41004 = defunc_1_op_res_41010;
                        x_41005 = defunc_1_op_res_41016;
                    }
                    // write result of operation
                    {
                        ((__local
                          bool *) red_arr_mem_40984)[sext_i32_i64(local_tid_40980)] =
                            x_41003;
                        ((__local
                          int32_t *) red_arr_mem_40986)[sext_i32_i64(local_tid_40980)] =
                            x_41004;
                        ((__local
                          float *) red_arr_mem_40988)[sext_i32_i64(local_tid_40980)] =
                            x_41005;
                    }
                }
                skip_waves_41019 *= 2;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread saves the result in accumulator
            {
                if (sext_i32_i64(local_tid_40980) == 0) {
                    x_acc_40997 = x_41003;
                    x_acc_40998 = x_41004;
                    x_acc_40999 = x_41005;
                }
            }
            // first thread keeps accumulator; others reset to neutral element
            {
                if (!(sext_i32_i64(local_tid_40980) == 0)) {
                    x_acc_40997 = 0;
                    x_acc_40998 = -1;
                    x_acc_40999 = 0.0F;
                }
            }
        }
        x_32462 = x_acc_40997;
        x_32463 = x_acc_40998;
        x_32464 = x_acc_40999;
        if (groups_per_segment_40966 == 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_40980 == 0) {
                    ((__global bool *) mem_39645)[gtid_32276] = x_acc_40997;
                    ((__global int32_t *) mem_39647)[gtid_32276] = x_acc_40998;
                    ((__global float *) mem_39649)[gtid_32276] = x_acc_40999;
                }
            }
        } else {
            int32_t old_counter_41020;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_40980 == 0) {
                    ((__global
                      bool *) group_res_arr_mem_40971)[sext_i32_i64(virt_group_id_40994) *
                                                       segred_group_sizze_32455] =
                        x_acc_40997;
                    ((__global
                      int32_t *) group_res_arr_mem_40973)[sext_i32_i64(virt_group_id_40994) *
                                                          segred_group_sizze_32455] =
                        x_acc_40998;
                    ((__global
                      float *) group_res_arr_mem_40975)[sext_i32_i64(virt_group_id_40994) *
                                                        segred_group_sizze_32455] =
                        x_acc_40999;
                    mem_fence_global();
                    old_counter_41020 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_40977)[sext_i32_i64(srem32(flat_segment_id_40995,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_40990)[0] =
                        old_counter_41020 == groups_per_segment_40966 - 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_41021;
            
            is_last_group_41021 = ((__local bool *) sync_arr_mem_40990)[0];
            if (is_last_group_41021) {
                if (local_tid_40980 == 0) {
                    old_counter_41020 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_40977)[sext_i32_i64(srem32(flat_segment_id_40995,
                                                                                                             10240))],
                                              (int) (0 -
                                                     groups_per_segment_40966));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_41022 =
                            sdiv_up64(groups_per_segment_40966,
                                      segred_group_sizze_32455);
                    
                    x_32462 = 0;
                    x_32463 = -1;
                    x_32464 = 0.0F;
                    for (int64_t i_41023 = 0; i_41023 < read_per_thread_41022;
                         i_41023++) {
                        int64_t group_res_id_41024 =
                                sext_i32_i64(local_tid_40980) *
                                read_per_thread_41022 + i_41023;
                        int64_t index_of_group_res_41025 =
                                sext_i32_i64(flat_segment_id_40995) *
                                groups_per_segment_40966 + group_res_id_41024;
                        
                        if (slt64(group_res_id_41024,
                                  groups_per_segment_40966)) {
                            x_32465 = ((__global
                                        bool *) group_res_arr_mem_40971)[index_of_group_res_41025 *
                                                                         segred_group_sizze_32455];
                            x_32466 = ((__global
                                        int32_t *) group_res_arr_mem_40973)[index_of_group_res_41025 *
                                                                            segred_group_sizze_32455];
                            x_32467 = ((__global
                                        float *) group_res_arr_mem_40975)[index_of_group_res_41025 *
                                                                          segred_group_sizze_32455];
                            
                            bool defunc_1_op_res_32468;
                            int32_t defunc_1_op_res_32469;
                            
                            if (x_32462) {
                                defunc_1_op_res_32468 = x_32462;
                                defunc_1_op_res_32469 = x_32463;
                            } else {
                                bool x_32470 = x_32465 && x_32465;
                                bool x_32471 = !x_32465;
                                bool y_32472 = x_32462 && x_32471;
                                bool defunc_1_op_res_f_res_32473 = x_32470 ||
                                     y_32472;
                                int32_t defunc_1_op_res_f_res_32474;
                                
                                if (x_32465) {
                                    defunc_1_op_res_f_res_32474 = x_32466;
                                } else {
                                    defunc_1_op_res_f_res_32474 = x_32463;
                                }
                                defunc_1_op_res_32468 =
                                    defunc_1_op_res_f_res_32473;
                                defunc_1_op_res_32469 =
                                    defunc_1_op_res_f_res_32474;
                            }
                            
                            float defunc_1_op_res_32475 = x_32464 + x_32467;
                            
                            x_32462 = defunc_1_op_res_32468;
                            x_32463 = defunc_1_op_res_32469;
                            x_32464 = defunc_1_op_res_32475;
                        }
                    }
                }
                ((__local
                  bool *) red_arr_mem_40984)[sext_i32_i64(local_tid_40980)] =
                    x_32462;
                ((__local
                  int32_t *) red_arr_mem_40986)[sext_i32_i64(local_tid_40980)] =
                    x_32463;
                ((__local
                  float *) red_arr_mem_40988)[sext_i32_i64(local_tid_40980)] =
                    x_32464;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_41026;
                    int32_t skip_waves_41027;
                    
                    skip_waves_41027 = 1;
                    
                    bool x_41003;
                    int32_t x_41004;
                    float x_41005;
                    bool x_41006;
                    int32_t x_41007;
                    float x_41008;
                    
                    offset_41026 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_40980,
                                  sext_i64_i32(segred_group_sizze_32455))) {
                            x_41003 = ((__local
                                        bool *) red_arr_mem_40984)[sext_i32_i64(local_tid_40980 +
                                                                   offset_41026)];
                            x_41004 = ((__local
                                        int32_t *) red_arr_mem_40986)[sext_i32_i64(local_tid_40980 +
                                                                      offset_41026)];
                            x_41005 = ((__local
                                        float *) red_arr_mem_40988)[sext_i32_i64(local_tid_40980 +
                                                                    offset_41026)];
                        }
                    }
                    offset_41026 = 1;
                    while (slt32(offset_41026, wave_sizze_40982)) {
                        if (slt32(local_tid_40980 + offset_41026,
                                  sext_i64_i32(segred_group_sizze_32455)) &&
                            ((local_tid_40980 - squot32(local_tid_40980,
                                                        wave_sizze_40982) *
                              wave_sizze_40982) & (2 * offset_41026 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_41006 = ((volatile __local
                                            bool *) red_arr_mem_40984)[sext_i32_i64(local_tid_40980 +
                                                                       offset_41026)];
                                x_41007 = ((volatile __local
                                            int32_t *) red_arr_mem_40986)[sext_i32_i64(local_tid_40980 +
                                                                          offset_41026)];
                                x_41008 = ((volatile __local
                                            float *) red_arr_mem_40988)[sext_i32_i64(local_tid_40980 +
                                                                        offset_41026)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_41009;
                                int32_t defunc_1_op_res_41010;
                                
                                if (x_41003) {
                                    defunc_1_op_res_41009 = x_41003;
                                    defunc_1_op_res_41010 = x_41004;
                                } else {
                                    bool x_41011 = x_41006 && x_41006;
                                    bool x_41012 = !x_41006;
                                    bool y_41013 = x_41003 && x_41012;
                                    bool defunc_1_op_res_f_res_41014 =
                                         x_41011 || y_41013;
                                    int32_t defunc_1_op_res_f_res_41015;
                                    
                                    if (x_41006) {
                                        defunc_1_op_res_f_res_41015 = x_41007;
                                    } else {
                                        defunc_1_op_res_f_res_41015 = x_41004;
                                    }
                                    defunc_1_op_res_41009 =
                                        defunc_1_op_res_f_res_41014;
                                    defunc_1_op_res_41010 =
                                        defunc_1_op_res_f_res_41015;
                                }
                                
                                float defunc_1_op_res_41016 = x_41005 + x_41008;
                                
                                x_41003 = defunc_1_op_res_41009;
                                x_41004 = defunc_1_op_res_41010;
                                x_41005 = defunc_1_op_res_41016;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_40984)[sext_i32_i64(local_tid_40980)] =
                                    x_41003;
                                ((volatile __local
                                  int32_t *) red_arr_mem_40986)[sext_i32_i64(local_tid_40980)] =
                                    x_41004;
                                ((volatile __local
                                  float *) red_arr_mem_40988)[sext_i32_i64(local_tid_40980)] =
                                    x_41005;
                            }
                        }
                        offset_41026 *= 2;
                    }
                    while (slt32(skip_waves_41027,
                                 squot32(sext_i64_i32(segred_group_sizze_32455) +
                                         wave_sizze_40982 - 1,
                                         wave_sizze_40982))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_41026 = skip_waves_41027 * wave_sizze_40982;
                        if (slt32(local_tid_40980 + offset_41026,
                                  sext_i64_i32(segred_group_sizze_32455)) &&
                            ((local_tid_40980 - squot32(local_tid_40980,
                                                        wave_sizze_40982) *
                              wave_sizze_40982) == 0 &&
                             (squot32(local_tid_40980, wave_sizze_40982) & (2 *
                                                                            skip_waves_41027 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_41006 = ((__local
                                            bool *) red_arr_mem_40984)[sext_i32_i64(local_tid_40980 +
                                                                       offset_41026)];
                                x_41007 = ((__local
                                            int32_t *) red_arr_mem_40986)[sext_i32_i64(local_tid_40980 +
                                                                          offset_41026)];
                                x_41008 = ((__local
                                            float *) red_arr_mem_40988)[sext_i32_i64(local_tid_40980 +
                                                                        offset_41026)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_41009;
                                int32_t defunc_1_op_res_41010;
                                
                                if (x_41003) {
                                    defunc_1_op_res_41009 = x_41003;
                                    defunc_1_op_res_41010 = x_41004;
                                } else {
                                    bool x_41011 = x_41006 && x_41006;
                                    bool x_41012 = !x_41006;
                                    bool y_41013 = x_41003 && x_41012;
                                    bool defunc_1_op_res_f_res_41014 =
                                         x_41011 || y_41013;
                                    int32_t defunc_1_op_res_f_res_41015;
                                    
                                    if (x_41006) {
                                        defunc_1_op_res_f_res_41015 = x_41007;
                                    } else {
                                        defunc_1_op_res_f_res_41015 = x_41004;
                                    }
                                    defunc_1_op_res_41009 =
                                        defunc_1_op_res_f_res_41014;
                                    defunc_1_op_res_41010 =
                                        defunc_1_op_res_f_res_41015;
                                }
                                
                                float defunc_1_op_res_41016 = x_41005 + x_41008;
                                
                                x_41003 = defunc_1_op_res_41009;
                                x_41004 = defunc_1_op_res_41010;
                                x_41005 = defunc_1_op_res_41016;
                            }
                            // write result of operation
                            {
                                ((__local
                                  bool *) red_arr_mem_40984)[sext_i32_i64(local_tid_40980)] =
                                    x_41003;
                                ((__local
                                  int32_t *) red_arr_mem_40986)[sext_i32_i64(local_tid_40980)] =
                                    x_41004;
                                ((__local
                                  float *) red_arr_mem_40988)[sext_i32_i64(local_tid_40980)] =
                                    x_41005;
                            }
                        }
                        skip_waves_41027 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_40980 == 0) {
                            ((__global bool *) mem_39645)[gtid_32276] = x_41003;
                            ((__global int32_t *) mem_39647)[gtid_32276] =
                                x_41004;
                            ((__global float *) mem_39649)[gtid_32276] =
                                x_41005;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32455
}
__kernel void mainDetailedzisegred_nonseg_31098(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_40739_backing_aligned_0,
                                                __local volatile
                                                int64_t *sync_arr_mem_40737_backing_aligned_1,
                                                int64_t m_27116,
                                                int64_t num_groups_31093,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_39541,
                                                __global
                                                unsigned char *mem_39546,
                                                __global
                                                unsigned char *mainDetailedzicounter_mem_40727,
                                                __global
                                                unsigned char *group_res_arr_mem_40729,
                                                int64_t num_threads_40731)
{
    #define segred_group_sizze_31091 (mainDetailedzisegred_group_sizze_31090)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_40739_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_40739_backing_aligned_0;
    __local volatile char *restrict sync_arr_mem_40737_backing_0 =
                          (__local volatile
                           char *) sync_arr_mem_40737_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40732;
    int32_t local_tid_40733;
    int64_t group_sizze_40736;
    int32_t wave_sizze_40735;
    int32_t group_tid_40734;
    
    global_tid_40732 = get_global_id(0);
    local_tid_40733 = get_local_id(0);
    group_sizze_40736 = get_local_size(0);
    wave_sizze_40735 = LOCKSTEP_WIDTH;
    group_tid_40734 = get_group_id(0);
    
    int32_t phys_tid_31098;
    
    phys_tid_31098 = global_tid_40732;
    
    __local char *sync_arr_mem_40737;
    
    sync_arr_mem_40737 = (__local char *) sync_arr_mem_40737_backing_0;
    
    __local char *red_arr_mem_40739;
    
    red_arr_mem_40739 = (__local char *) red_arr_mem_40739_backing_1;
    
    int64_t dummy_31096;
    
    dummy_31096 = 0;
    
    int64_t gtid_31097;
    
    gtid_31097 = 0;
    
    int32_t x_acc_40741;
    int64_t chunk_sizze_40742;
    
    chunk_sizze_40742 = smin64(sdiv_up64(m_27116,
                                         sext_i32_i64(sext_i64_i32(segred_group_sizze_31091 *
                                         num_groups_31093))),
                               sdiv_up64(m_27116 - sext_i32_i64(phys_tid_31098),
                                         num_threads_40731));
    
    int32_t x_27486;
    int32_t x_27487;
    
    // neutral-initialise the accumulators
    {
        x_acc_40741 = 0;
    }
    for (int64_t i_40746 = 0; i_40746 < chunk_sizze_40742; i_40746++) {
        gtid_31097 = sext_i32_i64(phys_tid_31098) + num_threads_40731 * i_40746;
        // apply map function
        {
            int32_t x_27489 = ((__global
                                int32_t *) defunc_3_map_res_mem_39541)[gtid_31097];
            
            // save map-out results
            { }
            // load accumulator
            {
                x_27486 = x_acc_40741;
            }
            // load new values
            {
                x_27487 = x_27489;
            }
            // apply reduction operator
            {
                int32_t defunc_1_op_res_27488 = smax32(x_27486, x_27487);
                
                // store in accumulator
                {
                    x_acc_40741 = defunc_1_op_res_27488;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_27486 = x_acc_40741;
        ((__local int32_t *) red_arr_mem_40739)[sext_i32_i64(local_tid_40733)] =
            x_27486;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_40747;
    int32_t skip_waves_40748;
    
    skip_waves_40748 = 1;
    
    int32_t x_40743;
    int32_t x_40744;
    
    offset_40747 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_40733, sext_i64_i32(segred_group_sizze_31091))) {
            x_40743 = ((__local
                        int32_t *) red_arr_mem_40739)[sext_i32_i64(local_tid_40733 +
                                                      offset_40747)];
        }
    }
    offset_40747 = 1;
    while (slt32(offset_40747, wave_sizze_40735)) {
        if (slt32(local_tid_40733 + offset_40747,
                  sext_i64_i32(segred_group_sizze_31091)) && ((local_tid_40733 -
                                                               squot32(local_tid_40733,
                                                                       wave_sizze_40735) *
                                                               wave_sizze_40735) &
                                                              (2 *
                                                               offset_40747 -
                                                               1)) == 0) {
            // read array element
            {
                x_40744 = ((volatile __local
                            int32_t *) red_arr_mem_40739)[sext_i32_i64(local_tid_40733 +
                                                          offset_40747)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_40745 = smax32(x_40743, x_40744);
                
                x_40743 = defunc_1_op_res_40745;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_40739)[sext_i32_i64(local_tid_40733)] =
                    x_40743;
            }
        }
        offset_40747 *= 2;
    }
    while (slt32(skip_waves_40748,
                 squot32(sext_i64_i32(segred_group_sizze_31091) +
                         wave_sizze_40735 - 1, wave_sizze_40735))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_40747 = skip_waves_40748 * wave_sizze_40735;
        if (slt32(local_tid_40733 + offset_40747,
                  sext_i64_i32(segred_group_sizze_31091)) && ((local_tid_40733 -
                                                               squot32(local_tid_40733,
                                                                       wave_sizze_40735) *
                                                               wave_sizze_40735) ==
                                                              0 &&
                                                              (squot32(local_tid_40733,
                                                                       wave_sizze_40735) &
                                                               (2 *
                                                                skip_waves_40748 -
                                                                1)) == 0)) {
            // read array element
            {
                x_40744 = ((__local
                            int32_t *) red_arr_mem_40739)[sext_i32_i64(local_tid_40733 +
                                                          offset_40747)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_40745 = smax32(x_40743, x_40744);
                
                x_40743 = defunc_1_op_res_40745;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_40739)[sext_i32_i64(local_tid_40733)] =
                    x_40743;
            }
        }
        skip_waves_40748 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_40733) == 0) {
            x_acc_40741 = x_40743;
        }
    }
    
    int32_t old_counter_40749;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_40733 == 0) {
            ((__global
              int32_t *) group_res_arr_mem_40729)[sext_i32_i64(group_tid_40734) *
                                                  segred_group_sizze_31091] =
                x_acc_40741;
            mem_fence_global();
            old_counter_40749 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainDetailedzicounter_mem_40727)[0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_40737)[0] = old_counter_40749 ==
                num_groups_31093 - 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_40750;
    
    is_last_group_40750 = ((__local bool *) sync_arr_mem_40737)[0];
    if (is_last_group_40750) {
        if (local_tid_40733 == 0) {
            old_counter_40749 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainDetailedzicounter_mem_40727)[0],
                                                      (int) (0 -
                                                             num_groups_31093));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_40751 = sdiv_up64(num_groups_31093,
                                                      segred_group_sizze_31091);
            
            x_27486 = 0;
            for (int64_t i_40752 = 0; i_40752 < read_per_thread_40751;
                 i_40752++) {
                int64_t group_res_id_40753 = sext_i32_i64(local_tid_40733) *
                        read_per_thread_40751 + i_40752;
                int64_t index_of_group_res_40754 = group_res_id_40753;
                
                if (slt64(group_res_id_40753, num_groups_31093)) {
                    x_27487 = ((__global
                                int32_t *) group_res_arr_mem_40729)[index_of_group_res_40754 *
                                                                    segred_group_sizze_31091];
                    
                    int32_t defunc_1_op_res_27488;
                    
                    defunc_1_op_res_27488 = smax32(x_27486, x_27487);
                    x_27486 = defunc_1_op_res_27488;
                }
            }
        }
        ((__local int32_t *) red_arr_mem_40739)[sext_i32_i64(local_tid_40733)] =
            x_27486;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_40755;
            int32_t skip_waves_40756;
            
            skip_waves_40756 = 1;
            
            int32_t x_40743;
            int32_t x_40744;
            
            offset_40755 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_40733,
                          sext_i64_i32(segred_group_sizze_31091))) {
                    x_40743 = ((__local
                                int32_t *) red_arr_mem_40739)[sext_i32_i64(local_tid_40733 +
                                                              offset_40755)];
                }
            }
            offset_40755 = 1;
            while (slt32(offset_40755, wave_sizze_40735)) {
                if (slt32(local_tid_40733 + offset_40755,
                          sext_i64_i32(segred_group_sizze_31091)) &&
                    ((local_tid_40733 - squot32(local_tid_40733,
                                                wave_sizze_40735) *
                      wave_sizze_40735) & (2 * offset_40755 - 1)) == 0) {
                    // read array element
                    {
                        x_40744 = ((volatile __local
                                    int32_t *) red_arr_mem_40739)[sext_i32_i64(local_tid_40733 +
                                                                  offset_40755)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_40745 = smax32(x_40743,
                                                               x_40744);
                        
                        x_40743 = defunc_1_op_res_40745;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          int32_t *) red_arr_mem_40739)[sext_i32_i64(local_tid_40733)] =
                            x_40743;
                    }
                }
                offset_40755 *= 2;
            }
            while (slt32(skip_waves_40756,
                         squot32(sext_i64_i32(segred_group_sizze_31091) +
                                 wave_sizze_40735 - 1, wave_sizze_40735))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_40755 = skip_waves_40756 * wave_sizze_40735;
                if (slt32(local_tid_40733 + offset_40755,
                          sext_i64_i32(segred_group_sizze_31091)) &&
                    ((local_tid_40733 - squot32(local_tid_40733,
                                                wave_sizze_40735) *
                      wave_sizze_40735) == 0 && (squot32(local_tid_40733,
                                                         wave_sizze_40735) &
                                                 (2 * skip_waves_40756 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_40744 = ((__local
                                    int32_t *) red_arr_mem_40739)[sext_i32_i64(local_tid_40733 +
                                                                  offset_40755)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_40745 = smax32(x_40743,
                                                               x_40744);
                        
                        x_40743 = defunc_1_op_res_40745;
                    }
                    // write result of operation
                    {
                        ((__local
                          int32_t *) red_arr_mem_40739)[sext_i32_i64(local_tid_40733)] =
                            x_40743;
                    }
                }
                skip_waves_40756 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_40733 == 0) {
                    ((__global int32_t *) mem_39546)[0] = x_40743;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31091
}
__kernel void mainDetailedzisegred_small_29128(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_39996_backing_aligned_0,
                                               int64_t N_27115, int64_t m_27116,
                                               int64_t N_27117,
                                               int64_t i32_res_27129,
                                               int64_t i32_res_27135,
                                               int64_t num_groups_29267,
                                               __global
                                               unsigned char *images_mem_38682,
                                               __global
                                               unsigned char *binop_p_mem_38691,
                                               __global
                                               unsigned char *mem_38832,
                                               __global
                                               unsigned char *mem_38837,
                                               int64_t segment_sizze_nonzzero_39989)
{
    #define segred_group_sizze_29266 (mainDetailedzisegred_group_sizze_29122)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_39996_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_39996_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_39991;
    int32_t local_tid_39992;
    int64_t group_sizze_39995;
    int32_t wave_sizze_39994;
    int32_t group_tid_39993;
    
    global_tid_39991 = get_global_id(0);
    local_tid_39992 = get_local_id(0);
    group_sizze_39995 = get_local_size(0);
    wave_sizze_39994 = LOCKSTEP_WIDTH;
    group_tid_39993 = get_group_id(0);
    
    int32_t phys_tid_29128;
    
    phys_tid_29128 = global_tid_39991;
    
    __local char *red_arr_mem_39996;
    
    red_arr_mem_39996 = (__local char *) red_arr_mem_39996_backing_0;
    
    int32_t phys_group_id_39998;
    
    phys_group_id_39998 = get_group_id(0);
    for (int32_t i_39999 = 0; i_39999 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27116 * i32_res_27135 *
                                          i32_res_27135,
                                          squot64(segred_group_sizze_29266,
                                                  segment_sizze_nonzzero_39989))) -
                   phys_group_id_39998, sext_i64_i32(num_groups_29267));
         i_39999++) {
        int32_t virt_group_id_40000 = phys_group_id_39998 + i_39999 *
                sext_i64_i32(num_groups_29267);
        int64_t gtid_29115 = squot64(squot64(sext_i32_i64(local_tid_39992),
                                             segment_sizze_nonzzero_39989) +
                                     sext_i32_i64(virt_group_id_40000) *
                                     squot64(segred_group_sizze_29266,
                                             segment_sizze_nonzzero_39989),
                                     i32_res_27135 * i32_res_27135);
        int64_t gtid_29116 = squot64(squot64(sext_i32_i64(local_tid_39992),
                                             segment_sizze_nonzzero_39989) +
                                     sext_i32_i64(virt_group_id_40000) *
                                     squot64(segred_group_sizze_29266,
                                             segment_sizze_nonzzero_39989) -
                                     squot64(squot64(sext_i32_i64(local_tid_39992),
                                                     segment_sizze_nonzzero_39989) +
                                             sext_i32_i64(virt_group_id_40000) *
                                             squot64(segred_group_sizze_29266,
                                                     segment_sizze_nonzzero_39989),
                                             i32_res_27135 * i32_res_27135) *
                                     (i32_res_27135 * i32_res_27135),
                                     i32_res_27135);
        int64_t gtid_29117 = squot64(sext_i32_i64(local_tid_39992),
                                     segment_sizze_nonzzero_39989) +
                sext_i32_i64(virt_group_id_40000) *
                squot64(segred_group_sizze_29266,
                        segment_sizze_nonzzero_39989) -
                squot64(squot64(sext_i32_i64(local_tid_39992),
                                segment_sizze_nonzzero_39989) +
                        sext_i32_i64(virt_group_id_40000) *
                        squot64(segred_group_sizze_29266,
                                segment_sizze_nonzzero_39989), i32_res_27135 *
                        i32_res_27135) * (i32_res_27135 * i32_res_27135) -
                squot64(squot64(sext_i32_i64(local_tid_39992),
                                segment_sizze_nonzzero_39989) +
                        sext_i32_i64(virt_group_id_40000) *
                        squot64(segred_group_sizze_29266,
                                segment_sizze_nonzzero_39989) -
                        squot64(squot64(sext_i32_i64(local_tid_39992),
                                        segment_sizze_nonzzero_39989) +
                                sext_i32_i64(virt_group_id_40000) *
                                squot64(segred_group_sizze_29266,
                                        segment_sizze_nonzzero_39989),
                                i32_res_27135 * i32_res_27135) *
                        (i32_res_27135 * i32_res_27135), i32_res_27135) *
                i32_res_27135;
        int64_t gtid_29127 = srem64(sext_i32_i64(local_tid_39992),
                                    i32_res_27129);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_27129) && (((slt64(gtid_29115, m_27116) &&
                                              slt64(gtid_29116,
                                                    i32_res_27135)) &&
                                             slt64(gtid_29117,
                                                   i32_res_27135)) &&
                                            slt64(sext_i32_i64(local_tid_39992),
                                                  i32_res_27129 *
                                                  squot64(segred_group_sizze_29266,
                                                          segment_sizze_nonzzero_39989)))) {
                float x_29276 = ((__global
                                  float *) images_mem_38682)[gtid_29115 *
                                                             N_27117 +
                                                             gtid_29127];
                float x_29277 = ((__global
                                  float *) binop_p_mem_38691)[gtid_29116 *
                                                              N_27115 +
                                                              gtid_29127];
                float x_29278 = ((__global float *) mem_38832)[gtid_29117 *
                                                               N_27115 +
                                                               gtid_29127];
                float x_29279 = x_29277 * x_29278;
                bool isnan_res_29280;
                
                isnan_res_29280 = futrts_isnan32(x_29276);
                
                float y_29281;
                
                if (isnan_res_29280) {
                    y_29281 = 0.0F;
                } else {
                    y_29281 = 1.0F;
                }
                
                float defunc_2_f_res_29282 = x_29279 * y_29281;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_39996)[sext_i32_i64(local_tid_39992)] =
                        defunc_2_f_res_29282;
                }
            } else {
                ((__local
                  float *) red_arr_mem_39996)[sext_i32_i64(local_tid_39992)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_27129)) {
            // perform segmented scan to imitate reduction
            {
                float x_29270;
                float x_29271;
                float x_40001;
                float x_40002;
                bool ltid_in_bounds_40004;
                
                ltid_in_bounds_40004 = slt64(sext_i32_i64(local_tid_39992),
                                             i32_res_27129 *
                                             squot64(segred_group_sizze_29266,
                                                     segment_sizze_nonzzero_39989));
                
                int32_t skip_threads_40005;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_40004) {
                        x_29271 = ((volatile __local
                                    float *) red_arr_mem_39996)[sext_i32_i64(local_tid_39992)];
                        if ((local_tid_39992 - squot32(local_tid_39992, 32) *
                             32) == 0) {
                            x_29270 = x_29271;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_40005 = 1;
                    while (slt32(skip_threads_40005, 32)) {
                        if (sle32(skip_threads_40005, local_tid_39992 -
                                  squot32(local_tid_39992, 32) * 32) &&
                            ltid_in_bounds_40004) {
                            // read operands
                            {
                                x_29270 = ((volatile __local
                                            float *) red_arr_mem_39996)[sext_i32_i64(local_tid_39992) -
                                                                        sext_i32_i64(skip_threads_40005)];
                            }
                            // perform operation
                            {
                                bool inactive_40006 =
                                     slt64(srem64(sext_i32_i64(local_tid_39992),
                                                  i32_res_27129),
                                           sext_i32_i64(local_tid_39992) -
                                           sext_i32_i64(local_tid_39992 -
                                           skip_threads_40005));
                                
                                if (inactive_40006) {
                                    x_29270 = x_29271;
                                }
                                if (!inactive_40006) {
                                    float defunc_1_op_res_29272 = x_29270 +
                                          x_29271;
                                    
                                    x_29270 = defunc_1_op_res_29272;
                                }
                            }
                        }
                        if (sle32(wave_sizze_39994, skip_threads_40005)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_40005, local_tid_39992 -
                                  squot32(local_tid_39992, 32) * 32) &&
                            ltid_in_bounds_40004) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_39996)[sext_i32_i64(local_tid_39992)] =
                                    x_29270;
                                x_29271 = x_29270;
                            }
                        }
                        if (sle32(wave_sizze_39994, skip_threads_40005)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_40005 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_39992 - squot32(local_tid_39992, 32) * 32) ==
                        31 && ltid_in_bounds_40004) {
                        ((volatile __local
                          float *) red_arr_mem_39996)[sext_i32_i64(squot32(local_tid_39992,
                                                                           32))] =
                            x_29270;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_40007;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_39992, 32) == 0 &&
                            ltid_in_bounds_40004) {
                            x_40002 = ((volatile __local
                                        float *) red_arr_mem_39996)[sext_i32_i64(local_tid_39992)];
                            if ((local_tid_39992 - squot32(local_tid_39992,
                                                           32) * 32) == 0) {
                                x_40001 = x_40002;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_40007 = 1;
                        while (slt32(skip_threads_40007, 32)) {
                            if (sle32(skip_threads_40007, local_tid_39992 -
                                      squot32(local_tid_39992, 32) * 32) &&
                                (squot32(local_tid_39992, 32) == 0 &&
                                 ltid_in_bounds_40004)) {
                                // read operands
                                {
                                    x_40001 = ((volatile __local
                                                float *) red_arr_mem_39996)[sext_i32_i64(local_tid_39992) -
                                                                            sext_i32_i64(skip_threads_40007)];
                                }
                                // perform operation
                                {
                                    bool inactive_40008 =
                                         slt64(srem64(sext_i32_i64(local_tid_39992 *
                                                      32 + 32 - 1),
                                                      i32_res_27129),
                                               sext_i32_i64(local_tid_39992 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_39992 -
                                                             skip_threads_40007) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_40008) {
                                        x_40001 = x_40002;
                                    }
                                    if (!inactive_40008) {
                                        float defunc_1_op_res_40003 = x_40001 +
                                              x_40002;
                                        
                                        x_40001 = defunc_1_op_res_40003;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_39994, skip_threads_40007)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_40007, local_tid_39992 -
                                      squot32(local_tid_39992, 32) * 32) &&
                                (squot32(local_tid_39992, 32) == 0 &&
                                 ltid_in_bounds_40004)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_39996)[sext_i32_i64(local_tid_39992)] =
                                        x_40001;
                                    x_40002 = x_40001;
                                }
                            }
                            if (sle32(wave_sizze_39994, skip_threads_40007)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_40007 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_39992, 32) == 0 ||
                          !ltid_in_bounds_40004)) {
                        // read operands
                        {
                            x_29271 = x_29270;
                            x_29270 = ((__local
                                        float *) red_arr_mem_39996)[sext_i32_i64(squot32(local_tid_39992,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_40009 =
                                 slt64(srem64(sext_i32_i64(local_tid_39992),
                                              i32_res_27129),
                                       sext_i32_i64(local_tid_39992) -
                                       sext_i32_i64(squot32(local_tid_39992,
                                                            32) * 32 - 1));
                            
                            if (inactive_40009) {
                                x_29270 = x_29271;
                            }
                            if (!inactive_40009) {
                                float defunc_1_op_res_29272 = x_29270 + x_29271;
                                
                                x_29270 = defunc_1_op_res_29272;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_39996)[sext_i32_i64(local_tid_39992)] =
                                x_29270;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_39992, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_39996)[sext_i32_i64(local_tid_39992)] =
                            x_29271;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_40000) *
                      squot64(segred_group_sizze_29266,
                              segment_sizze_nonzzero_39989) +
                      sext_i32_i64(local_tid_39992), m_27116 * i32_res_27135 *
                      i32_res_27135) && slt64(sext_i32_i64(local_tid_39992),
                                              squot64(segred_group_sizze_29266,
                                                      segment_sizze_nonzzero_39989))) {
                ((__global
                  float *) mem_38837)[squot64(sext_i32_i64(virt_group_id_40000) *
                                              squot64(segred_group_sizze_29266,
                                                      segment_sizze_nonzzero_39989) +
                                              sext_i32_i64(local_tid_39992),
                                              i32_res_27135 * i32_res_27135) *
                                      (i32_res_27135 * i32_res_27135) +
                                      squot64(sext_i32_i64(virt_group_id_40000) *
                                              squot64(segred_group_sizze_29266,
                                                      segment_sizze_nonzzero_39989) +
                                              sext_i32_i64(local_tid_39992) -
                                              squot64(sext_i32_i64(virt_group_id_40000) *
                                                      squot64(segred_group_sizze_29266,
                                                              segment_sizze_nonzzero_39989) +
                                                      sext_i32_i64(local_tid_39992),
                                                      i32_res_27135 *
                                                      i32_res_27135) *
                                              (i32_res_27135 * i32_res_27135),
                                              i32_res_27135) * i32_res_27135 +
                                      (sext_i32_i64(virt_group_id_40000) *
                                       squot64(segred_group_sizze_29266,
                                               segment_sizze_nonzzero_39989) +
                                       sext_i32_i64(local_tid_39992) -
                                       squot64(sext_i32_i64(virt_group_id_40000) *
                                               squot64(segred_group_sizze_29266,
                                                       segment_sizze_nonzzero_39989) +
                                               sext_i32_i64(local_tid_39992),
                                               i32_res_27135 * i32_res_27135) *
                                       (i32_res_27135 * i32_res_27135) -
                                       squot64(sext_i32_i64(virt_group_id_40000) *
                                               squot64(segred_group_sizze_29266,
                                                       segment_sizze_nonzzero_39989) +
                                               sext_i32_i64(local_tid_39992) -
                                               squot64(sext_i32_i64(virt_group_id_40000) *
                                                       squot64(segred_group_sizze_29266,
                                                               segment_sizze_nonzzero_39989) +
                                                       sext_i32_i64(local_tid_39992),
                                                       i32_res_27135 *
                                                       i32_res_27135) *
                                               (i32_res_27135 * i32_res_27135),
                                               i32_res_27135) *
                                       i32_res_27135)] = ((__local
                                                           float *) red_arr_mem_39996)[(sext_i32_i64(local_tid_39992) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_39989 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_29266
}
__kernel void mainDetailedzisegred_small_30175(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_40192_backing_aligned_0,
                                               int64_t N_27115, int64_t m_27116,
                                               int64_t N_27117,
                                               int64_t i32_res_27129,
                                               int64_t i32_res_27135,
                                               int64_t num_groups_30228,
                                               __global
                                               unsigned char *images_mem_38682,
                                               __global
                                               unsigned char *binop_p_mem_38691,
                                               __global
                                               unsigned char *mem_39144,
                                               int64_t segment_sizze_nonzzero_40185)
{
    #define segred_group_sizze_30227 (mainDetailedzisegred_group_sizze_30169)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_40192_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40192_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40187;
    int32_t local_tid_40188;
    int64_t group_sizze_40191;
    int32_t wave_sizze_40190;
    int32_t group_tid_40189;
    
    global_tid_40187 = get_global_id(0);
    local_tid_40188 = get_local_id(0);
    group_sizze_40191 = get_local_size(0);
    wave_sizze_40190 = LOCKSTEP_WIDTH;
    group_tid_40189 = get_group_id(0);
    
    int32_t phys_tid_30175;
    
    phys_tid_30175 = global_tid_40187;
    
    __local char *red_arr_mem_40192;
    
    red_arr_mem_40192 = (__local char *) red_arr_mem_40192_backing_0;
    
    int32_t phys_group_id_40194;
    
    phys_group_id_40194 = get_group_id(0);
    for (int32_t i_40195 = 0; i_40195 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27116 * i32_res_27135,
                                          squot64(segred_group_sizze_30227,
                                                  segment_sizze_nonzzero_40185))) -
                   phys_group_id_40194, sext_i64_i32(num_groups_30228));
         i_40195++) {
        int32_t virt_group_id_40196 = phys_group_id_40194 + i_40195 *
                sext_i64_i32(num_groups_30228);
        int64_t gtid_30164 = squot64(squot64(sext_i32_i64(local_tid_40188),
                                             segment_sizze_nonzzero_40185) +
                                     sext_i32_i64(virt_group_id_40196) *
                                     squot64(segred_group_sizze_30227,
                                             segment_sizze_nonzzero_40185),
                                     i32_res_27135);
        int64_t gtid_30165 = squot64(sext_i32_i64(local_tid_40188),
                                     segment_sizze_nonzzero_40185) +
                sext_i32_i64(virt_group_id_40196) *
                squot64(segred_group_sizze_30227,
                        segment_sizze_nonzzero_40185) -
                squot64(squot64(sext_i32_i64(local_tid_40188),
                                segment_sizze_nonzzero_40185) +
                        sext_i32_i64(virt_group_id_40196) *
                        squot64(segred_group_sizze_30227,
                                segment_sizze_nonzzero_40185), i32_res_27135) *
                i32_res_27135;
        int64_t gtid_30174 = srem64(sext_i32_i64(local_tid_40188),
                                    i32_res_27129);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_27129) && ((slt64(gtid_30164, m_27116) &&
                                             slt64(gtid_30165,
                                                   i32_res_27135)) &&
                                            slt64(sext_i32_i64(local_tid_40188),
                                                  i32_res_27129 *
                                                  squot64(segred_group_sizze_30227,
                                                          segment_sizze_nonzzero_40185)))) {
                float x_30237 = ((__global
                                  float *) images_mem_38682)[gtid_30164 *
                                                             N_27117 +
                                                             gtid_30174];
                bool isnan_res_30238;
                
                isnan_res_30238 = futrts_isnan32(x_30237);
                
                float defunc_1_f_res_30239;
                
                if (isnan_res_30238) {
                    defunc_1_f_res_30239 = 0.0F;
                } else {
                    float x_30236 = ((__global
                                      float *) binop_p_mem_38691)[gtid_30165 *
                                                                  N_27115 +
                                                                  gtid_30174];
                    float defunc_1_f_res_f_res_30240 = x_30236 * x_30237;
                    
                    defunc_1_f_res_30239 = defunc_1_f_res_f_res_30240;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_40192)[sext_i32_i64(local_tid_40188)] =
                        defunc_1_f_res_30239;
                }
            } else {
                ((__local
                  float *) red_arr_mem_40192)[sext_i32_i64(local_tid_40188)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_27129)) {
            // perform segmented scan to imitate reduction
            {
                float x_30231;
                float x_30232;
                float x_40197;
                float x_40198;
                bool ltid_in_bounds_40200;
                
                ltid_in_bounds_40200 = slt64(sext_i32_i64(local_tid_40188),
                                             i32_res_27129 *
                                             squot64(segred_group_sizze_30227,
                                                     segment_sizze_nonzzero_40185));
                
                int32_t skip_threads_40201;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_40200) {
                        x_30232 = ((volatile __local
                                    float *) red_arr_mem_40192)[sext_i32_i64(local_tid_40188)];
                        if ((local_tid_40188 - squot32(local_tid_40188, 32) *
                             32) == 0) {
                            x_30231 = x_30232;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_40201 = 1;
                    while (slt32(skip_threads_40201, 32)) {
                        if (sle32(skip_threads_40201, local_tid_40188 -
                                  squot32(local_tid_40188, 32) * 32) &&
                            ltid_in_bounds_40200) {
                            // read operands
                            {
                                x_30231 = ((volatile __local
                                            float *) red_arr_mem_40192)[sext_i32_i64(local_tid_40188) -
                                                                        sext_i32_i64(skip_threads_40201)];
                            }
                            // perform operation
                            {
                                bool inactive_40202 =
                                     slt64(srem64(sext_i32_i64(local_tid_40188),
                                                  i32_res_27129),
                                           sext_i32_i64(local_tid_40188) -
                                           sext_i32_i64(local_tid_40188 -
                                           skip_threads_40201));
                                
                                if (inactive_40202) {
                                    x_30231 = x_30232;
                                }
                                if (!inactive_40202) {
                                    float defunc_1_op_res_30233 = x_30231 +
                                          x_30232;
                                    
                                    x_30231 = defunc_1_op_res_30233;
                                }
                            }
                        }
                        if (sle32(wave_sizze_40190, skip_threads_40201)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_40201, local_tid_40188 -
                                  squot32(local_tid_40188, 32) * 32) &&
                            ltid_in_bounds_40200) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_40192)[sext_i32_i64(local_tid_40188)] =
                                    x_30231;
                                x_30232 = x_30231;
                            }
                        }
                        if (sle32(wave_sizze_40190, skip_threads_40201)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_40201 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_40188 - squot32(local_tid_40188, 32) * 32) ==
                        31 && ltid_in_bounds_40200) {
                        ((volatile __local
                          float *) red_arr_mem_40192)[sext_i32_i64(squot32(local_tid_40188,
                                                                           32))] =
                            x_30231;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_40203;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_40188, 32) == 0 &&
                            ltid_in_bounds_40200) {
                            x_40198 = ((volatile __local
                                        float *) red_arr_mem_40192)[sext_i32_i64(local_tid_40188)];
                            if ((local_tid_40188 - squot32(local_tid_40188,
                                                           32) * 32) == 0) {
                                x_40197 = x_40198;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_40203 = 1;
                        while (slt32(skip_threads_40203, 32)) {
                            if (sle32(skip_threads_40203, local_tid_40188 -
                                      squot32(local_tid_40188, 32) * 32) &&
                                (squot32(local_tid_40188, 32) == 0 &&
                                 ltid_in_bounds_40200)) {
                                // read operands
                                {
                                    x_40197 = ((volatile __local
                                                float *) red_arr_mem_40192)[sext_i32_i64(local_tid_40188) -
                                                                            sext_i32_i64(skip_threads_40203)];
                                }
                                // perform operation
                                {
                                    bool inactive_40204 =
                                         slt64(srem64(sext_i32_i64(local_tid_40188 *
                                                      32 + 32 - 1),
                                                      i32_res_27129),
                                               sext_i32_i64(local_tid_40188 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_40188 -
                                                             skip_threads_40203) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_40204) {
                                        x_40197 = x_40198;
                                    }
                                    if (!inactive_40204) {
                                        float defunc_1_op_res_40199 = x_40197 +
                                              x_40198;
                                        
                                        x_40197 = defunc_1_op_res_40199;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_40190, skip_threads_40203)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_40203, local_tid_40188 -
                                      squot32(local_tid_40188, 32) * 32) &&
                                (squot32(local_tid_40188, 32) == 0 &&
                                 ltid_in_bounds_40200)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_40192)[sext_i32_i64(local_tid_40188)] =
                                        x_40197;
                                    x_40198 = x_40197;
                                }
                            }
                            if (sle32(wave_sizze_40190, skip_threads_40203)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_40203 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_40188, 32) == 0 ||
                          !ltid_in_bounds_40200)) {
                        // read operands
                        {
                            x_30232 = x_30231;
                            x_30231 = ((__local
                                        float *) red_arr_mem_40192)[sext_i32_i64(squot32(local_tid_40188,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_40205 =
                                 slt64(srem64(sext_i32_i64(local_tid_40188),
                                              i32_res_27129),
                                       sext_i32_i64(local_tid_40188) -
                                       sext_i32_i64(squot32(local_tid_40188,
                                                            32) * 32 - 1));
                            
                            if (inactive_40205) {
                                x_30231 = x_30232;
                            }
                            if (!inactive_40205) {
                                float defunc_1_op_res_30233 = x_30231 + x_30232;
                                
                                x_30231 = defunc_1_op_res_30233;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_40192)[sext_i32_i64(local_tid_40188)] =
                                x_30231;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_40188, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_40192)[sext_i32_i64(local_tid_40188)] =
                            x_30232;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_40196) *
                      squot64(segred_group_sizze_30227,
                              segment_sizze_nonzzero_40185) +
                      sext_i32_i64(local_tid_40188), m_27116 * i32_res_27135) &&
                slt64(sext_i32_i64(local_tid_40188),
                      squot64(segred_group_sizze_30227,
                              segment_sizze_nonzzero_40185))) {
                ((__global
                  float *) mem_39144)[squot64(sext_i32_i64(virt_group_id_40196) *
                                              squot64(segred_group_sizze_30227,
                                                      segment_sizze_nonzzero_40185) +
                                              sext_i32_i64(local_tid_40188),
                                              i32_res_27135) * i32_res_27135 +
                                      (sext_i32_i64(virt_group_id_40196) *
                                       squot64(segred_group_sizze_30227,
                                               segment_sizze_nonzzero_40185) +
                                       sext_i32_i64(local_tid_40188) -
                                       squot64(sext_i32_i64(virt_group_id_40196) *
                                               squot64(segred_group_sizze_30227,
                                                       segment_sizze_nonzzero_40185) +
                                               sext_i32_i64(local_tid_40188),
                                               i32_res_27135) *
                                       i32_res_27135)] = ((__local
                                                           float *) red_arr_mem_40192)[(sext_i32_i64(local_tid_40188) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_40185 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_30227
}
__kernel void mainDetailedzisegred_small_30312(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_40280_backing_aligned_0,
                                               int64_t m_27116,
                                               int64_t i32_res_27135,
                                               int64_t num_groups_30361,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_38929,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_39150,
                                               __global
                                               unsigned char *mem_39210,
                                               int64_t segment_sizze_nonzzero_40273)
{
    #define segred_group_sizze_30360 (mainDetailedzisegred_group_sizze_30306)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_40280_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40280_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40275;
    int32_t local_tid_40276;
    int64_t group_sizze_40279;
    int32_t wave_sizze_40278;
    int32_t group_tid_40277;
    
    global_tid_40275 = get_global_id(0);
    local_tid_40276 = get_local_id(0);
    group_sizze_40279 = get_local_size(0);
    wave_sizze_40278 = LOCKSTEP_WIDTH;
    group_tid_40277 = get_group_id(0);
    
    int32_t phys_tid_30312;
    
    phys_tid_30312 = global_tid_40275;
    
    __local char *red_arr_mem_40280;
    
    red_arr_mem_40280 = (__local char *) red_arr_mem_40280_backing_0;
    
    int32_t phys_group_id_40282;
    
    phys_group_id_40282 = get_group_id(0);
    for (int32_t i_40283 = 0; i_40283 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27116 * i32_res_27135,
                                          squot64(segred_group_sizze_30360,
                                                  segment_sizze_nonzzero_40273))) -
                   phys_group_id_40282, sext_i64_i32(num_groups_30361));
         i_40283++) {
        int32_t virt_group_id_40284 = phys_group_id_40282 + i_40283 *
                sext_i64_i32(num_groups_30361);
        int64_t gtid_30301 = squot64(squot64(sext_i32_i64(local_tid_40276),
                                             segment_sizze_nonzzero_40273) +
                                     sext_i32_i64(virt_group_id_40284) *
                                     squot64(segred_group_sizze_30360,
                                             segment_sizze_nonzzero_40273),
                                     i32_res_27135);
        int64_t gtid_30302 = squot64(sext_i32_i64(local_tid_40276),
                                     segment_sizze_nonzzero_40273) +
                sext_i32_i64(virt_group_id_40284) *
                squot64(segred_group_sizze_30360,
                        segment_sizze_nonzzero_40273) -
                squot64(squot64(sext_i32_i64(local_tid_40276),
                                segment_sizze_nonzzero_40273) +
                        sext_i32_i64(virt_group_id_40284) *
                        squot64(segred_group_sizze_30360,
                                segment_sizze_nonzzero_40273), i32_res_27135) *
                i32_res_27135;
        int64_t gtid_30311 = srem64(sext_i32_i64(local_tid_40276),
                                    i32_res_27135);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_27135) && ((slt64(gtid_30301, m_27116) &&
                                             slt64(gtid_30302,
                                                   i32_res_27135)) &&
                                            slt64(sext_i32_i64(local_tid_40276),
                                                  i32_res_27135 *
                                                  squot64(segred_group_sizze_30360,
                                                          segment_sizze_nonzzero_40273)))) {
                float x_30370 = ((__global
                                  float *) defunc_3_map_res_mem_39150)[gtid_30301 *
                                                                       i32_res_27135 +
                                                                       gtid_30311];
                float x_30371 = ((__global
                                  float *) defunc_3_map_res_mem_38929)[gtid_30301 *
                                                                       (i32_res_27135 *
                                                                        i32_res_27135) +
                                                                       gtid_30302 *
                                                                       i32_res_27135 +
                                                                       gtid_30311];
                float defunc_1_f_res_30372 = x_30370 * x_30371;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_40280)[sext_i32_i64(local_tid_40276)] =
                        defunc_1_f_res_30372;
                }
            } else {
                ((__local
                  float *) red_arr_mem_40280)[sext_i32_i64(local_tid_40276)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_27135)) {
            // perform segmented scan to imitate reduction
            {
                float x_30364;
                float x_30365;
                float x_40285;
                float x_40286;
                bool ltid_in_bounds_40288;
                
                ltid_in_bounds_40288 = slt64(sext_i32_i64(local_tid_40276),
                                             i32_res_27135 *
                                             squot64(segred_group_sizze_30360,
                                                     segment_sizze_nonzzero_40273));
                
                int32_t skip_threads_40289;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_40288) {
                        x_30365 = ((volatile __local
                                    float *) red_arr_mem_40280)[sext_i32_i64(local_tid_40276)];
                        if ((local_tid_40276 - squot32(local_tid_40276, 32) *
                             32) == 0) {
                            x_30364 = x_30365;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_40289 = 1;
                    while (slt32(skip_threads_40289, 32)) {
                        if (sle32(skip_threads_40289, local_tid_40276 -
                                  squot32(local_tid_40276, 32) * 32) &&
                            ltid_in_bounds_40288) {
                            // read operands
                            {
                                x_30364 = ((volatile __local
                                            float *) red_arr_mem_40280)[sext_i32_i64(local_tid_40276) -
                                                                        sext_i32_i64(skip_threads_40289)];
                            }
                            // perform operation
                            {
                                bool inactive_40290 =
                                     slt64(srem64(sext_i32_i64(local_tid_40276),
                                                  i32_res_27135),
                                           sext_i32_i64(local_tid_40276) -
                                           sext_i32_i64(local_tid_40276 -
                                           skip_threads_40289));
                                
                                if (inactive_40290) {
                                    x_30364 = x_30365;
                                }
                                if (!inactive_40290) {
                                    float defunc_1_op_res_30366 = x_30364 +
                                          x_30365;
                                    
                                    x_30364 = defunc_1_op_res_30366;
                                }
                            }
                        }
                        if (sle32(wave_sizze_40278, skip_threads_40289)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_40289, local_tid_40276 -
                                  squot32(local_tid_40276, 32) * 32) &&
                            ltid_in_bounds_40288) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_40280)[sext_i32_i64(local_tid_40276)] =
                                    x_30364;
                                x_30365 = x_30364;
                            }
                        }
                        if (sle32(wave_sizze_40278, skip_threads_40289)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_40289 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_40276 - squot32(local_tid_40276, 32) * 32) ==
                        31 && ltid_in_bounds_40288) {
                        ((volatile __local
                          float *) red_arr_mem_40280)[sext_i32_i64(squot32(local_tid_40276,
                                                                           32))] =
                            x_30364;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_40291;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_40276, 32) == 0 &&
                            ltid_in_bounds_40288) {
                            x_40286 = ((volatile __local
                                        float *) red_arr_mem_40280)[sext_i32_i64(local_tid_40276)];
                            if ((local_tid_40276 - squot32(local_tid_40276,
                                                           32) * 32) == 0) {
                                x_40285 = x_40286;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_40291 = 1;
                        while (slt32(skip_threads_40291, 32)) {
                            if (sle32(skip_threads_40291, local_tid_40276 -
                                      squot32(local_tid_40276, 32) * 32) &&
                                (squot32(local_tid_40276, 32) == 0 &&
                                 ltid_in_bounds_40288)) {
                                // read operands
                                {
                                    x_40285 = ((volatile __local
                                                float *) red_arr_mem_40280)[sext_i32_i64(local_tid_40276) -
                                                                            sext_i32_i64(skip_threads_40291)];
                                }
                                // perform operation
                                {
                                    bool inactive_40292 =
                                         slt64(srem64(sext_i32_i64(local_tid_40276 *
                                                      32 + 32 - 1),
                                                      i32_res_27135),
                                               sext_i32_i64(local_tid_40276 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_40276 -
                                                             skip_threads_40291) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_40292) {
                                        x_40285 = x_40286;
                                    }
                                    if (!inactive_40292) {
                                        float defunc_1_op_res_40287 = x_40285 +
                                              x_40286;
                                        
                                        x_40285 = defunc_1_op_res_40287;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_40278, skip_threads_40291)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_40291, local_tid_40276 -
                                      squot32(local_tid_40276, 32) * 32) &&
                                (squot32(local_tid_40276, 32) == 0 &&
                                 ltid_in_bounds_40288)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_40280)[sext_i32_i64(local_tid_40276)] =
                                        x_40285;
                                    x_40286 = x_40285;
                                }
                            }
                            if (sle32(wave_sizze_40278, skip_threads_40291)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_40291 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_40276, 32) == 0 ||
                          !ltid_in_bounds_40288)) {
                        // read operands
                        {
                            x_30365 = x_30364;
                            x_30364 = ((__local
                                        float *) red_arr_mem_40280)[sext_i32_i64(squot32(local_tid_40276,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_40293 =
                                 slt64(srem64(sext_i32_i64(local_tid_40276),
                                              i32_res_27135),
                                       sext_i32_i64(local_tid_40276) -
                                       sext_i32_i64(squot32(local_tid_40276,
                                                            32) * 32 - 1));
                            
                            if (inactive_40293) {
                                x_30364 = x_30365;
                            }
                            if (!inactive_40293) {
                                float defunc_1_op_res_30366 = x_30364 + x_30365;
                                
                                x_30364 = defunc_1_op_res_30366;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_40280)[sext_i32_i64(local_tid_40276)] =
                                x_30364;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_40276, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_40280)[sext_i32_i64(local_tid_40276)] =
                            x_30365;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_40284) *
                      squot64(segred_group_sizze_30360,
                              segment_sizze_nonzzero_40273) +
                      sext_i32_i64(local_tid_40276), m_27116 * i32_res_27135) &&
                slt64(sext_i32_i64(local_tid_40276),
                      squot64(segred_group_sizze_30360,
                              segment_sizze_nonzzero_40273))) {
                ((__global
                  float *) mem_39210)[squot64(sext_i32_i64(virt_group_id_40284) *
                                              squot64(segred_group_sizze_30360,
                                                      segment_sizze_nonzzero_40273) +
                                              sext_i32_i64(local_tid_40276),
                                              i32_res_27135) * i32_res_27135 +
                                      (sext_i32_i64(virt_group_id_40284) *
                                       squot64(segred_group_sizze_30360,
                                               segment_sizze_nonzzero_40273) +
                                       sext_i32_i64(local_tid_40276) -
                                       squot64(sext_i32_i64(virt_group_id_40284) *
                                               squot64(segred_group_sizze_30360,
                                                       segment_sizze_nonzzero_40273) +
                                               sext_i32_i64(local_tid_40276),
                                               i32_res_27135) *
                                       i32_res_27135)] = ((__local
                                                           float *) red_arr_mem_40280)[(sext_i32_i64(local_tid_40276) +
                                                                                        1) *
                                                                                       segment_sizze_nonzzero_40273 -
                                                                                       1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_30360
}
__kernel void mainDetailedzisegred_small_30442(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_40412_backing_aligned_0,
                                               int64_t N_27115, int64_t m_27116,
                                               int64_t i32_res_27135,
                                               int64_t num_groups_30489,
                                               __global
                                               unsigned char *mem_38698,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_39216,
                                               __global
                                               unsigned char *mem_39434,
                                               int64_t segment_sizze_nonzzero_40405)
{
    #define segred_group_sizze_30488 (mainDetailedzisegred_group_sizze_30436)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_40412_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40412_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40407;
    int32_t local_tid_40408;
    int64_t group_sizze_40411;
    int32_t wave_sizze_40410;
    int32_t group_tid_40409;
    
    global_tid_40407 = get_global_id(0);
    local_tid_40408 = get_local_id(0);
    group_sizze_40411 = get_local_size(0);
    wave_sizze_40410 = LOCKSTEP_WIDTH;
    group_tid_40409 = get_group_id(0);
    
    int32_t phys_tid_30442;
    
    phys_tid_30442 = global_tid_40407;
    
    __local char *red_arr_mem_40412;
    
    red_arr_mem_40412 = (__local char *) red_arr_mem_40412_backing_0;
    
    int32_t phys_group_id_40414;
    
    phys_group_id_40414 = get_group_id(0);
    for (int32_t i_40415 = 0; i_40415 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27116 * N_27115,
                                          squot64(segred_group_sizze_30488,
                                                  segment_sizze_nonzzero_40405))) -
                   phys_group_id_40414, sext_i64_i32(num_groups_30489));
         i_40415++) {
        int32_t virt_group_id_40416 = phys_group_id_40414 + i_40415 *
                sext_i64_i32(num_groups_30489);
        int64_t gtid_30431 = squot64(squot64(sext_i32_i64(local_tid_40408),
                                             segment_sizze_nonzzero_40405) +
                                     sext_i32_i64(virt_group_id_40416) *
                                     squot64(segred_group_sizze_30488,
                                             segment_sizze_nonzzero_40405),
                                     N_27115);
        int64_t gtid_30432 = squot64(sext_i32_i64(local_tid_40408),
                                     segment_sizze_nonzzero_40405) +
                sext_i32_i64(virt_group_id_40416) *
                squot64(segred_group_sizze_30488,
                        segment_sizze_nonzzero_40405) -
                squot64(squot64(sext_i32_i64(local_tid_40408),
                                segment_sizze_nonzzero_40405) +
                        sext_i32_i64(virt_group_id_40416) *
                        squot64(segred_group_sizze_30488,
                                segment_sizze_nonzzero_40405), N_27115) *
                N_27115;
        int64_t gtid_30441 = srem64(sext_i32_i64(local_tid_40408),
                                    i32_res_27135);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_27135) && ((slt64(gtid_30431, m_27116) &&
                                             slt64(gtid_30432, N_27115)) &&
                                            slt64(sext_i32_i64(local_tid_40408),
                                                  i32_res_27135 *
                                                  squot64(segred_group_sizze_30488,
                                                          segment_sizze_nonzzero_40405)))) {
                float x_30497 = ((__global
                                  float *) defunc_4_map_res_mem_39216)[gtid_30431 *
                                                                       i32_res_27135 +
                                                                       gtid_30441];
                float x_30498 = ((__global float *) mem_38698)[gtid_30432 *
                                                               i32_res_27135 +
                                                               gtid_30441];
                float defunc_1_f_res_30499 = x_30497 * x_30498;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_40412)[sext_i32_i64(local_tid_40408)] =
                        defunc_1_f_res_30499;
                }
            } else {
                ((__local
                  float *) red_arr_mem_40412)[sext_i32_i64(local_tid_40408)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_27135)) {
            // perform segmented scan to imitate reduction
            {
                float x_30492;
                float x_30493;
                float x_40417;
                float x_40418;
                bool ltid_in_bounds_40420;
                
                ltid_in_bounds_40420 = slt64(sext_i32_i64(local_tid_40408),
                                             i32_res_27135 *
                                             squot64(segred_group_sizze_30488,
                                                     segment_sizze_nonzzero_40405));
                
                int32_t skip_threads_40421;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_40420) {
                        x_30493 = ((volatile __local
                                    float *) red_arr_mem_40412)[sext_i32_i64(local_tid_40408)];
                        if ((local_tid_40408 - squot32(local_tid_40408, 32) *
                             32) == 0) {
                            x_30492 = x_30493;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_40421 = 1;
                    while (slt32(skip_threads_40421, 32)) {
                        if (sle32(skip_threads_40421, local_tid_40408 -
                                  squot32(local_tid_40408, 32) * 32) &&
                            ltid_in_bounds_40420) {
                            // read operands
                            {
                                x_30492 = ((volatile __local
                                            float *) red_arr_mem_40412)[sext_i32_i64(local_tid_40408) -
                                                                        sext_i32_i64(skip_threads_40421)];
                            }
                            // perform operation
                            {
                                bool inactive_40422 =
                                     slt64(srem64(sext_i32_i64(local_tid_40408),
                                                  i32_res_27135),
                                           sext_i32_i64(local_tid_40408) -
                                           sext_i32_i64(local_tid_40408 -
                                           skip_threads_40421));
                                
                                if (inactive_40422) {
                                    x_30492 = x_30493;
                                }
                                if (!inactive_40422) {
                                    float defunc_1_op_res_30494 = x_30492 +
                                          x_30493;
                                    
                                    x_30492 = defunc_1_op_res_30494;
                                }
                            }
                        }
                        if (sle32(wave_sizze_40410, skip_threads_40421)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_40421, local_tid_40408 -
                                  squot32(local_tid_40408, 32) * 32) &&
                            ltid_in_bounds_40420) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_40412)[sext_i32_i64(local_tid_40408)] =
                                    x_30492;
                                x_30493 = x_30492;
                            }
                        }
                        if (sle32(wave_sizze_40410, skip_threads_40421)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_40421 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_40408 - squot32(local_tid_40408, 32) * 32) ==
                        31 && ltid_in_bounds_40420) {
                        ((volatile __local
                          float *) red_arr_mem_40412)[sext_i32_i64(squot32(local_tid_40408,
                                                                           32))] =
                            x_30492;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_40423;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_40408, 32) == 0 &&
                            ltid_in_bounds_40420) {
                            x_40418 = ((volatile __local
                                        float *) red_arr_mem_40412)[sext_i32_i64(local_tid_40408)];
                            if ((local_tid_40408 - squot32(local_tid_40408,
                                                           32) * 32) == 0) {
                                x_40417 = x_40418;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_40423 = 1;
                        while (slt32(skip_threads_40423, 32)) {
                            if (sle32(skip_threads_40423, local_tid_40408 -
                                      squot32(local_tid_40408, 32) * 32) &&
                                (squot32(local_tid_40408, 32) == 0 &&
                                 ltid_in_bounds_40420)) {
                                // read operands
                                {
                                    x_40417 = ((volatile __local
                                                float *) red_arr_mem_40412)[sext_i32_i64(local_tid_40408) -
                                                                            sext_i32_i64(skip_threads_40423)];
                                }
                                // perform operation
                                {
                                    bool inactive_40424 =
                                         slt64(srem64(sext_i32_i64(local_tid_40408 *
                                                      32 + 32 - 1),
                                                      i32_res_27135),
                                               sext_i32_i64(local_tid_40408 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_40408 -
                                                             skip_threads_40423) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_40424) {
                                        x_40417 = x_40418;
                                    }
                                    if (!inactive_40424) {
                                        float defunc_1_op_res_40419 = x_40417 +
                                              x_40418;
                                        
                                        x_40417 = defunc_1_op_res_40419;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_40410, skip_threads_40423)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_40423, local_tid_40408 -
                                      squot32(local_tid_40408, 32) * 32) &&
                                (squot32(local_tid_40408, 32) == 0 &&
                                 ltid_in_bounds_40420)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_40412)[sext_i32_i64(local_tid_40408)] =
                                        x_40417;
                                    x_40418 = x_40417;
                                }
                            }
                            if (sle32(wave_sizze_40410, skip_threads_40423)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_40423 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_40408, 32) == 0 ||
                          !ltid_in_bounds_40420)) {
                        // read operands
                        {
                            x_30493 = x_30492;
                            x_30492 = ((__local
                                        float *) red_arr_mem_40412)[sext_i32_i64(squot32(local_tid_40408,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_40425 =
                                 slt64(srem64(sext_i32_i64(local_tid_40408),
                                              i32_res_27135),
                                       sext_i32_i64(local_tid_40408) -
                                       sext_i32_i64(squot32(local_tid_40408,
                                                            32) * 32 - 1));
                            
                            if (inactive_40425) {
                                x_30492 = x_30493;
                            }
                            if (!inactive_40425) {
                                float defunc_1_op_res_30494 = x_30492 + x_30493;
                                
                                x_30492 = defunc_1_op_res_30494;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_40412)[sext_i32_i64(local_tid_40408)] =
                                x_30492;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_40408, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_40412)[sext_i32_i64(local_tid_40408)] =
                            x_30493;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_40416) *
                      squot64(segred_group_sizze_30488,
                              segment_sizze_nonzzero_40405) +
                      sext_i32_i64(local_tid_40408), m_27116 * N_27115) &&
                slt64(sext_i32_i64(local_tid_40408),
                      squot64(segred_group_sizze_30488,
                              segment_sizze_nonzzero_40405))) {
                ((__global
                  float *) mem_39434)[squot64(sext_i32_i64(virt_group_id_40416) *
                                              squot64(segred_group_sizze_30488,
                                                      segment_sizze_nonzzero_40405) +
                                              sext_i32_i64(local_tid_40408),
                                              N_27115) * N_27115 +
                                      (sext_i32_i64(virt_group_id_40416) *
                                       squot64(segred_group_sizze_30488,
                                               segment_sizze_nonzzero_40405) +
                                       sext_i32_i64(local_tid_40408) -
                                       squot64(sext_i32_i64(virt_group_id_40416) *
                                               squot64(segred_group_sizze_30488,
                                                       segment_sizze_nonzzero_40405) +
                                               sext_i32_i64(local_tid_40408),
                                               N_27115) * N_27115)] = ((__local
                                                                        float *) red_arr_mem_40412)[(sext_i32_i64(local_tid_40408) +
                                                                                                     1) *
                                                                                                    segment_sizze_nonzzero_40405 -
                                                                                                    1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_30488
}
__kernel void mainDetailedzisegred_small_31008(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_40666_backing_aligned_0,
                                               int64_t N_27115, int64_t m_27116,
                                               int64_t i32_res_27129,
                                               int64_t num_groups_31055,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_39478,
                                               __global
                                               unsigned char *mem_39529,
                                               __global
                                               unsigned char *mem_39532,
                                               int64_t segment_sizze_nonzzero_40659)
{
    #define segred_group_sizze_31054 (mainDetailedzisegred_group_sizze_31002)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_40666_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40666_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40661;
    int32_t local_tid_40662;
    int64_t group_sizze_40665;
    int32_t wave_sizze_40664;
    int32_t group_tid_40663;
    
    global_tid_40661 = get_global_id(0);
    local_tid_40662 = get_local_id(0);
    group_sizze_40665 = get_local_size(0);
    wave_sizze_40664 = LOCKSTEP_WIDTH;
    group_tid_40663 = get_group_id(0);
    
    int32_t phys_tid_31008;
    
    phys_tid_31008 = global_tid_40661;
    
    __local char *red_arr_mem_40666;
    
    red_arr_mem_40666 = (__local char *) red_arr_mem_40666_backing_0;
    
    int32_t phys_group_id_40668;
    
    phys_group_id_40668 = get_group_id(0);
    for (int32_t i_40669 = 0; i_40669 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27116,
                                          squot64(segred_group_sizze_31054,
                                                  segment_sizze_nonzzero_40659))) -
                   phys_group_id_40668, sext_i64_i32(num_groups_31055));
         i_40669++) {
        int32_t virt_group_id_40670 = phys_group_id_40668 + i_40669 *
                sext_i64_i32(num_groups_31055);
        int64_t gtid_30999 = squot64(sext_i32_i64(local_tid_40662),
                                     segment_sizze_nonzzero_40659) +
                sext_i32_i64(virt_group_id_40670) *
                squot64(segred_group_sizze_31054, segment_sizze_nonzzero_40659);
        int64_t gtid_31007 = srem64(sext_i32_i64(local_tid_40662),
                                    i32_res_27129);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_27129) && (slt64(gtid_30999, m_27116) &&
                                            slt64(sext_i32_i64(local_tid_40662),
                                                  i32_res_27129 *
                                                  squot64(segred_group_sizze_31054,
                                                          segment_sizze_nonzzero_40659)))) {
                int32_t defunc_0_f_res_31062 = ((__global
                                                 int32_t *) mem_39529)[gtid_30999];
                int32_t index_primexp_36721 = sext_i64_i32(gtid_31007);
                bool cond_31064 = slt32(index_primexp_36721,
                                        defunc_0_f_res_31062);
                float defunc_0_f_res_31065;
                
                if (cond_31064) {
                    int64_t i_31066 = sext_i32_i64(index_primexp_36721);
                    float defunc_0_f_res_t_res_31067 = ((__global
                                                         float *) defunc_4_map_res_mem_39478)[gtid_30999 *
                                                                                              N_27115 +
                                                                                              i_31066];
                    
                    defunc_0_f_res_31065 = defunc_0_f_res_t_res_31067;
                } else {
                    defunc_0_f_res_31065 = 0.0F;
                }
                
                float defunc_0_f_res_31068 = defunc_0_f_res_31065 *
                      defunc_0_f_res_31065;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_40666)[sext_i32_i64(local_tid_40662)] =
                        defunc_0_f_res_31068;
                }
            } else {
                ((__local
                  float *) red_arr_mem_40666)[sext_i32_i64(local_tid_40662)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_27129)) {
            // perform segmented scan to imitate reduction
            {
                float x_31058;
                float x_31059;
                float x_40671;
                float x_40672;
                bool ltid_in_bounds_40674;
                
                ltid_in_bounds_40674 = slt64(sext_i32_i64(local_tid_40662),
                                             i32_res_27129 *
                                             squot64(segred_group_sizze_31054,
                                                     segment_sizze_nonzzero_40659));
                
                int32_t skip_threads_40675;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_40674) {
                        x_31059 = ((volatile __local
                                    float *) red_arr_mem_40666)[sext_i32_i64(local_tid_40662)];
                        if ((local_tid_40662 - squot32(local_tid_40662, 32) *
                             32) == 0) {
                            x_31058 = x_31059;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_40675 = 1;
                    while (slt32(skip_threads_40675, 32)) {
                        if (sle32(skip_threads_40675, local_tid_40662 -
                                  squot32(local_tid_40662, 32) * 32) &&
                            ltid_in_bounds_40674) {
                            // read operands
                            {
                                x_31058 = ((volatile __local
                                            float *) red_arr_mem_40666)[sext_i32_i64(local_tid_40662) -
                                                                        sext_i32_i64(skip_threads_40675)];
                            }
                            // perform operation
                            {
                                bool inactive_40676 =
                                     slt64(srem64(sext_i32_i64(local_tid_40662),
                                                  i32_res_27129),
                                           sext_i32_i64(local_tid_40662) -
                                           sext_i32_i64(local_tid_40662 -
                                           skip_threads_40675));
                                
                                if (inactive_40676) {
                                    x_31058 = x_31059;
                                }
                                if (!inactive_40676) {
                                    float defunc_1_op_res_31060 = x_31058 +
                                          x_31059;
                                    
                                    x_31058 = defunc_1_op_res_31060;
                                }
                            }
                        }
                        if (sle32(wave_sizze_40664, skip_threads_40675)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_40675, local_tid_40662 -
                                  squot32(local_tid_40662, 32) * 32) &&
                            ltid_in_bounds_40674) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_40666)[sext_i32_i64(local_tid_40662)] =
                                    x_31058;
                                x_31059 = x_31058;
                            }
                        }
                        if (sle32(wave_sizze_40664, skip_threads_40675)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_40675 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_40662 - squot32(local_tid_40662, 32) * 32) ==
                        31 && ltid_in_bounds_40674) {
                        ((volatile __local
                          float *) red_arr_mem_40666)[sext_i32_i64(squot32(local_tid_40662,
                                                                           32))] =
                            x_31058;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_40677;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_40662, 32) == 0 &&
                            ltid_in_bounds_40674) {
                            x_40672 = ((volatile __local
                                        float *) red_arr_mem_40666)[sext_i32_i64(local_tid_40662)];
                            if ((local_tid_40662 - squot32(local_tid_40662,
                                                           32) * 32) == 0) {
                                x_40671 = x_40672;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_40677 = 1;
                        while (slt32(skip_threads_40677, 32)) {
                            if (sle32(skip_threads_40677, local_tid_40662 -
                                      squot32(local_tid_40662, 32) * 32) &&
                                (squot32(local_tid_40662, 32) == 0 &&
                                 ltid_in_bounds_40674)) {
                                // read operands
                                {
                                    x_40671 = ((volatile __local
                                                float *) red_arr_mem_40666)[sext_i32_i64(local_tid_40662) -
                                                                            sext_i32_i64(skip_threads_40677)];
                                }
                                // perform operation
                                {
                                    bool inactive_40678 =
                                         slt64(srem64(sext_i32_i64(local_tid_40662 *
                                                      32 + 32 - 1),
                                                      i32_res_27129),
                                               sext_i32_i64(local_tid_40662 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_40662 -
                                                             skip_threads_40677) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_40678) {
                                        x_40671 = x_40672;
                                    }
                                    if (!inactive_40678) {
                                        float defunc_1_op_res_40673 = x_40671 +
                                              x_40672;
                                        
                                        x_40671 = defunc_1_op_res_40673;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_40664, skip_threads_40677)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_40677, local_tid_40662 -
                                      squot32(local_tid_40662, 32) * 32) &&
                                (squot32(local_tid_40662, 32) == 0 &&
                                 ltid_in_bounds_40674)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_40666)[sext_i32_i64(local_tid_40662)] =
                                        x_40671;
                                    x_40672 = x_40671;
                                }
                            }
                            if (sle32(wave_sizze_40664, skip_threads_40677)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_40677 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_40662, 32) == 0 ||
                          !ltid_in_bounds_40674)) {
                        // read operands
                        {
                            x_31059 = x_31058;
                            x_31058 = ((__local
                                        float *) red_arr_mem_40666)[sext_i32_i64(squot32(local_tid_40662,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_40679 =
                                 slt64(srem64(sext_i32_i64(local_tid_40662),
                                              i32_res_27129),
                                       sext_i32_i64(local_tid_40662) -
                                       sext_i32_i64(squot32(local_tid_40662,
                                                            32) * 32 - 1));
                            
                            if (inactive_40679) {
                                x_31058 = x_31059;
                            }
                            if (!inactive_40679) {
                                float defunc_1_op_res_31060 = x_31058 + x_31059;
                                
                                x_31058 = defunc_1_op_res_31060;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_40666)[sext_i32_i64(local_tid_40662)] =
                                x_31058;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_40662, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_40666)[sext_i32_i64(local_tid_40662)] =
                            x_31059;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_40670) *
                      squot64(segred_group_sizze_31054,
                              segment_sizze_nonzzero_40659) +
                      sext_i32_i64(local_tid_40662), m_27116) &&
                slt64(sext_i32_i64(local_tid_40662),
                      squot64(segred_group_sizze_31054,
                              segment_sizze_nonzzero_40659))) {
                ((__global
                  float *) mem_39532)[sext_i32_i64(virt_group_id_40670) *
                                      squot64(segred_group_sizze_31054,
                                              segment_sizze_nonzzero_40659) +
                                      sext_i32_i64(local_tid_40662)] = ((__local
                                                                         float *) red_arr_mem_40666)[(sext_i32_i64(local_tid_40662) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_40659 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31054
}
__kernel void mainDetailedzisegred_small_31029(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_40606_backing_aligned_0,
                                               int64_t m_27116, int64_t N_27117,
                                               int64_t i32_res_27129,
                                               int64_t num_groups_31041,
                                               __global
                                               unsigned char *images_mem_38682,
                                               __global
                                               unsigned char *mem_39529,
                                               int64_t segment_sizze_nonzzero_40599)
{
    #define segred_group_sizze_31040 (mainDetailedzisegred_group_sizze_31023)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_40606_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40606_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40601;
    int32_t local_tid_40602;
    int64_t group_sizze_40605;
    int32_t wave_sizze_40604;
    int32_t group_tid_40603;
    
    global_tid_40601 = get_global_id(0);
    local_tid_40602 = get_local_id(0);
    group_sizze_40605 = get_local_size(0);
    wave_sizze_40604 = LOCKSTEP_WIDTH;
    group_tid_40603 = get_group_id(0);
    
    int32_t phys_tid_31029;
    
    phys_tid_31029 = global_tid_40601;
    
    __local char *red_arr_mem_40606;
    
    red_arr_mem_40606 = (__local char *) red_arr_mem_40606_backing_0;
    
    int32_t phys_group_id_40608;
    
    phys_group_id_40608 = get_group_id(0);
    for (int32_t i_40609 = 0; i_40609 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27116,
                                          squot64(segred_group_sizze_31040,
                                                  segment_sizze_nonzzero_40599))) -
                   phys_group_id_40608, sext_i64_i32(num_groups_31041));
         i_40609++) {
        int32_t virt_group_id_40610 = phys_group_id_40608 + i_40609 *
                sext_i64_i32(num_groups_31041);
        int64_t gtid_31020 = squot64(sext_i32_i64(local_tid_40602),
                                     segment_sizze_nonzzero_40599) +
                sext_i32_i64(virt_group_id_40610) *
                squot64(segred_group_sizze_31040, segment_sizze_nonzzero_40599);
        int64_t gtid_31028 = srem64(sext_i32_i64(local_tid_40602),
                                    i32_res_27129);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_27129) && (slt64(gtid_31020, m_27116) &&
                                            slt64(sext_i32_i64(local_tid_40602),
                                                  i32_res_27129 *
                                                  squot64(segred_group_sizze_31040,
                                                          segment_sizze_nonzzero_40599)))) {
                float x_31048 = ((__global
                                  float *) images_mem_38682)[gtid_31020 *
                                                             N_27117 +
                                                             gtid_31028];
                bool isnan_res_31049;
                
                isnan_res_31049 = futrts_isnan32(x_31048);
                
                bool cond_31050 = !isnan_res_31049;
                int32_t defunc_0_f_res_31051 = btoi_bool_i32(cond_31050);
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      int32_t *) red_arr_mem_40606)[sext_i32_i64(local_tid_40602)] =
                        defunc_0_f_res_31051;
                }
            } else {
                ((__local
                  int32_t *) red_arr_mem_40606)[sext_i32_i64(local_tid_40602)] =
                    0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_27129)) {
            // perform segmented scan to imitate reduction
            {
                int32_t x_31044;
                int32_t x_31045;
                int32_t x_40611;
                int32_t x_40612;
                bool ltid_in_bounds_40614;
                
                ltid_in_bounds_40614 = slt64(sext_i32_i64(local_tid_40602),
                                             i32_res_27129 *
                                             squot64(segred_group_sizze_31040,
                                                     segment_sizze_nonzzero_40599));
                
                int32_t skip_threads_40615;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_40614) {
                        x_31045 = ((volatile __local
                                    int32_t *) red_arr_mem_40606)[sext_i32_i64(local_tid_40602)];
                        if ((local_tid_40602 - squot32(local_tid_40602, 32) *
                             32) == 0) {
                            x_31044 = x_31045;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_40615 = 1;
                    while (slt32(skip_threads_40615, 32)) {
                        if (sle32(skip_threads_40615, local_tid_40602 -
                                  squot32(local_tid_40602, 32) * 32) &&
                            ltid_in_bounds_40614) {
                            // read operands
                            {
                                x_31044 = ((volatile __local
                                            int32_t *) red_arr_mem_40606)[sext_i32_i64(local_tid_40602) -
                                                                          sext_i32_i64(skip_threads_40615)];
                            }
                            // perform operation
                            {
                                bool inactive_40616 =
                                     slt64(srem64(sext_i32_i64(local_tid_40602),
                                                  i32_res_27129),
                                           sext_i32_i64(local_tid_40602) -
                                           sext_i32_i64(local_tid_40602 -
                                           skip_threads_40615));
                                
                                if (inactive_40616) {
                                    x_31044 = x_31045;
                                }
                                if (!inactive_40616) {
                                    int32_t defunc_1_op_res_31046 =
                                            add32(x_31044, x_31045);
                                    
                                    x_31044 = defunc_1_op_res_31046;
                                }
                            }
                        }
                        if (sle32(wave_sizze_40604, skip_threads_40615)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_40615, local_tid_40602 -
                                  squot32(local_tid_40602, 32) * 32) &&
                            ltid_in_bounds_40614) {
                            // write result
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_40606)[sext_i32_i64(local_tid_40602)] =
                                    x_31044;
                                x_31045 = x_31044;
                            }
                        }
                        if (sle32(wave_sizze_40604, skip_threads_40615)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_40615 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_40602 - squot32(local_tid_40602, 32) * 32) ==
                        31 && ltid_in_bounds_40614) {
                        ((volatile __local
                          int32_t *) red_arr_mem_40606)[sext_i32_i64(squot32(local_tid_40602,
                                                                             32))] =
                            x_31044;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_40617;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_40602, 32) == 0 &&
                            ltid_in_bounds_40614) {
                            x_40612 = ((volatile __local
                                        int32_t *) red_arr_mem_40606)[sext_i32_i64(local_tid_40602)];
                            if ((local_tid_40602 - squot32(local_tid_40602,
                                                           32) * 32) == 0) {
                                x_40611 = x_40612;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_40617 = 1;
                        while (slt32(skip_threads_40617, 32)) {
                            if (sle32(skip_threads_40617, local_tid_40602 -
                                      squot32(local_tid_40602, 32) * 32) &&
                                (squot32(local_tid_40602, 32) == 0 &&
                                 ltid_in_bounds_40614)) {
                                // read operands
                                {
                                    x_40611 = ((volatile __local
                                                int32_t *) red_arr_mem_40606)[sext_i32_i64(local_tid_40602) -
                                                                              sext_i32_i64(skip_threads_40617)];
                                }
                                // perform operation
                                {
                                    bool inactive_40618 =
                                         slt64(srem64(sext_i32_i64(local_tid_40602 *
                                                      32 + 32 - 1),
                                                      i32_res_27129),
                                               sext_i32_i64(local_tid_40602 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_40602 -
                                                             skip_threads_40617) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_40618) {
                                        x_40611 = x_40612;
                                    }
                                    if (!inactive_40618) {
                                        int32_t defunc_1_op_res_40613 =
                                                add32(x_40611, x_40612);
                                        
                                        x_40611 = defunc_1_op_res_40613;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_40604, skip_threads_40617)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_40617, local_tid_40602 -
                                      squot32(local_tid_40602, 32) * 32) &&
                                (squot32(local_tid_40602, 32) == 0 &&
                                 ltid_in_bounds_40614)) {
                                // write result
                                {
                                    ((volatile __local
                                      int32_t *) red_arr_mem_40606)[sext_i32_i64(local_tid_40602)] =
                                        x_40611;
                                    x_40612 = x_40611;
                                }
                            }
                            if (sle32(wave_sizze_40604, skip_threads_40617)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_40617 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_40602, 32) == 0 ||
                          !ltid_in_bounds_40614)) {
                        // read operands
                        {
                            x_31045 = x_31044;
                            x_31044 = ((__local
                                        int32_t *) red_arr_mem_40606)[sext_i32_i64(squot32(local_tid_40602,
                                                                                           32)) -
                                                                      1];
                        }
                        // perform operation
                        {
                            bool inactive_40619 =
                                 slt64(srem64(sext_i32_i64(local_tid_40602),
                                              i32_res_27129),
                                       sext_i32_i64(local_tid_40602) -
                                       sext_i32_i64(squot32(local_tid_40602,
                                                            32) * 32 - 1));
                            
                            if (inactive_40619) {
                                x_31044 = x_31045;
                            }
                            if (!inactive_40619) {
                                int32_t defunc_1_op_res_31046 = add32(x_31044,
                                                                      x_31045);
                                
                                x_31044 = defunc_1_op_res_31046;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              int32_t *) red_arr_mem_40606)[sext_i32_i64(local_tid_40602)] =
                                x_31044;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_40602, 32) == 0) {
                        ((__local
                          int32_t *) red_arr_mem_40606)[sext_i32_i64(local_tid_40602)] =
                            x_31045;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_40610) *
                      squot64(segred_group_sizze_31040,
                              segment_sizze_nonzzero_40599) +
                      sext_i32_i64(local_tid_40602), m_27116) &&
                slt64(sext_i32_i64(local_tid_40602),
                      squot64(segred_group_sizze_31040,
                              segment_sizze_nonzzero_40599))) {
                ((__global
                  int32_t *) mem_39529)[sext_i32_i64(virt_group_id_40610) *
                                        squot64(segred_group_sizze_31040,
                                                segment_sizze_nonzzero_40599) +
                                        sext_i32_i64(local_tid_40602)] =
                    ((__local
                      int32_t *) red_arr_mem_40606)[(sext_i32_i64(local_tid_40602) +
                                                     1) *
                                                    segment_sizze_nonzzero_40599 -
                                                    1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31040
}
__kernel void mainDetailedzisegred_small_31180(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_40775_backing_aligned_0,
                                               int64_t N_27115, int64_t m_27116,
                                               int64_t i32_res_27490,
                                               int64_t num_groups_31198,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_39478,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_39541,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_39542,
                                               __global
                                               unsigned char *mem_39575,
                                               int64_t segment_sizze_nonzzero_40768)
{
    #define segred_group_sizze_31197 (mainDetailedzisegred_group_sizze_31174)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_40775_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40775_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40770;
    int32_t local_tid_40771;
    int64_t group_sizze_40774;
    int32_t wave_sizze_40773;
    int32_t group_tid_40772;
    
    global_tid_40770 = get_global_id(0);
    local_tid_40771 = get_local_id(0);
    group_sizze_40774 = get_local_size(0);
    wave_sizze_40773 = LOCKSTEP_WIDTH;
    group_tid_40772 = get_group_id(0);
    
    int32_t phys_tid_31180;
    
    phys_tid_31180 = global_tid_40770;
    
    __local char *red_arr_mem_40775;
    
    red_arr_mem_40775 = (__local char *) red_arr_mem_40775_backing_0;
    
    int32_t phys_group_id_40777;
    
    phys_group_id_40777 = get_group_id(0);
    for (int32_t i_40778 = 0; i_40778 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27116,
                                          squot64(segred_group_sizze_31197,
                                                  segment_sizze_nonzzero_40768))) -
                   phys_group_id_40777, sext_i64_i32(num_groups_31198));
         i_40778++) {
        int32_t virt_group_id_40779 = phys_group_id_40777 + i_40778 *
                sext_i64_i32(num_groups_31198);
        int64_t gtid_31171 = squot64(sext_i32_i64(local_tid_40771),
                                     segment_sizze_nonzzero_40768) +
                sext_i32_i64(virt_group_id_40779) *
                squot64(segred_group_sizze_31197, segment_sizze_nonzzero_40768);
        int64_t gtid_31179 = srem64(sext_i32_i64(local_tid_40771),
                                    i32_res_27490);
        
        // apply map function if in bounds
        {
            if (slt64(0, i32_res_27490) && (slt64(gtid_31171, m_27116) &&
                                            slt64(sext_i32_i64(local_tid_40771),
                                                  i32_res_27490 *
                                                  squot64(segred_group_sizze_31197,
                                                          segment_sizze_nonzzero_40768)))) {
                int32_t x_31206 = ((__global
                                    int32_t *) defunc_3_map_res_mem_39541)[gtid_31171];
                int32_t index_primexp_36726 = sext_i64_i32(gtid_31179);
                bool cond_31208 = slt32(index_primexp_36726, x_31206);
                float defunc_0_f_res_31209;
                
                if (cond_31208) {
                    int32_t x_31205 = ((__global
                                        int32_t *) defunc_3_map_res_mem_39542)[gtid_31171];
                    int32_t x_31210 = add32(x_31205, index_primexp_36726);
                    int32_t x_31211 = sub32(x_31210, x_31206);
                    int32_t i_31212 = add32(1, x_31211);
                    int64_t i_31213 = sext_i32_i64(i_31212);
                    float defunc_0_f_res_t_res_31214 = ((__global
                                                         float *) defunc_4_map_res_mem_39478)[gtid_31171 *
                                                                                              N_27115 +
                                                                                              i_31213];
                    
                    defunc_0_f_res_31209 = defunc_0_f_res_t_res_31214;
                } else {
                    defunc_0_f_res_31209 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_40775)[sext_i32_i64(local_tid_40771)] =
                        defunc_0_f_res_31209;
                }
            } else {
                ((__local
                  float *) red_arr_mem_40775)[sext_i32_i64(local_tid_40771)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, i32_res_27490)) {
            // perform segmented scan to imitate reduction
            {
                float x_31201;
                float x_31202;
                float x_40780;
                float x_40781;
                bool ltid_in_bounds_40783;
                
                ltid_in_bounds_40783 = slt64(sext_i32_i64(local_tid_40771),
                                             i32_res_27490 *
                                             squot64(segred_group_sizze_31197,
                                                     segment_sizze_nonzzero_40768));
                
                int32_t skip_threads_40784;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_40783) {
                        x_31202 = ((volatile __local
                                    float *) red_arr_mem_40775)[sext_i32_i64(local_tid_40771)];
                        if ((local_tid_40771 - squot32(local_tid_40771, 32) *
                             32) == 0) {
                            x_31201 = x_31202;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_40784 = 1;
                    while (slt32(skip_threads_40784, 32)) {
                        if (sle32(skip_threads_40784, local_tid_40771 -
                                  squot32(local_tid_40771, 32) * 32) &&
                            ltid_in_bounds_40783) {
                            // read operands
                            {
                                x_31201 = ((volatile __local
                                            float *) red_arr_mem_40775)[sext_i32_i64(local_tid_40771) -
                                                                        sext_i32_i64(skip_threads_40784)];
                            }
                            // perform operation
                            {
                                bool inactive_40785 =
                                     slt64(srem64(sext_i32_i64(local_tid_40771),
                                                  i32_res_27490),
                                           sext_i32_i64(local_tid_40771) -
                                           sext_i32_i64(local_tid_40771 -
                                           skip_threads_40784));
                                
                                if (inactive_40785) {
                                    x_31201 = x_31202;
                                }
                                if (!inactive_40785) {
                                    float defunc_1_op_res_31203 = x_31201 +
                                          x_31202;
                                    
                                    x_31201 = defunc_1_op_res_31203;
                                }
                            }
                        }
                        if (sle32(wave_sizze_40773, skip_threads_40784)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_40784, local_tid_40771 -
                                  squot32(local_tid_40771, 32) * 32) &&
                            ltid_in_bounds_40783) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_40775)[sext_i32_i64(local_tid_40771)] =
                                    x_31201;
                                x_31202 = x_31201;
                            }
                        }
                        if (sle32(wave_sizze_40773, skip_threads_40784)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_40784 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_40771 - squot32(local_tid_40771, 32) * 32) ==
                        31 && ltid_in_bounds_40783) {
                        ((volatile __local
                          float *) red_arr_mem_40775)[sext_i32_i64(squot32(local_tid_40771,
                                                                           32))] =
                            x_31201;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_40786;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_40771, 32) == 0 &&
                            ltid_in_bounds_40783) {
                            x_40781 = ((volatile __local
                                        float *) red_arr_mem_40775)[sext_i32_i64(local_tid_40771)];
                            if ((local_tid_40771 - squot32(local_tid_40771,
                                                           32) * 32) == 0) {
                                x_40780 = x_40781;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_40786 = 1;
                        while (slt32(skip_threads_40786, 32)) {
                            if (sle32(skip_threads_40786, local_tid_40771 -
                                      squot32(local_tid_40771, 32) * 32) &&
                                (squot32(local_tid_40771, 32) == 0 &&
                                 ltid_in_bounds_40783)) {
                                // read operands
                                {
                                    x_40780 = ((volatile __local
                                                float *) red_arr_mem_40775)[sext_i32_i64(local_tid_40771) -
                                                                            sext_i32_i64(skip_threads_40786)];
                                }
                                // perform operation
                                {
                                    bool inactive_40787 =
                                         slt64(srem64(sext_i32_i64(local_tid_40771 *
                                                      32 + 32 - 1),
                                                      i32_res_27490),
                                               sext_i32_i64(local_tid_40771 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_40771 -
                                                             skip_threads_40786) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_40787) {
                                        x_40780 = x_40781;
                                    }
                                    if (!inactive_40787) {
                                        float defunc_1_op_res_40782 = x_40780 +
                                              x_40781;
                                        
                                        x_40780 = defunc_1_op_res_40782;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_40773, skip_threads_40786)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_40786, local_tid_40771 -
                                      squot32(local_tid_40771, 32) * 32) &&
                                (squot32(local_tid_40771, 32) == 0 &&
                                 ltid_in_bounds_40783)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_40775)[sext_i32_i64(local_tid_40771)] =
                                        x_40780;
                                    x_40781 = x_40780;
                                }
                            }
                            if (sle32(wave_sizze_40773, skip_threads_40786)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_40786 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_40771, 32) == 0 ||
                          !ltid_in_bounds_40783)) {
                        // read operands
                        {
                            x_31202 = x_31201;
                            x_31201 = ((__local
                                        float *) red_arr_mem_40775)[sext_i32_i64(squot32(local_tid_40771,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_40788 =
                                 slt64(srem64(sext_i32_i64(local_tid_40771),
                                              i32_res_27490),
                                       sext_i32_i64(local_tid_40771) -
                                       sext_i32_i64(squot32(local_tid_40771,
                                                            32) * 32 - 1));
                            
                            if (inactive_40788) {
                                x_31201 = x_31202;
                            }
                            if (!inactive_40788) {
                                float defunc_1_op_res_31203 = x_31201 + x_31202;
                                
                                x_31201 = defunc_1_op_res_31203;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_40775)[sext_i32_i64(local_tid_40771)] =
                                x_31201;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_40771, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_40775)[sext_i32_i64(local_tid_40771)] =
                            x_31202;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_40779) *
                      squot64(segred_group_sizze_31197,
                              segment_sizze_nonzzero_40768) +
                      sext_i32_i64(local_tid_40771), m_27116) &&
                slt64(sext_i32_i64(local_tid_40771),
                      squot64(segred_group_sizze_31197,
                              segment_sizze_nonzzero_40768))) {
                ((__global
                  float *) mem_39575)[sext_i32_i64(virt_group_id_40779) *
                                      squot64(segred_group_sizze_31197,
                                              segment_sizze_nonzzero_40768) +
                                      sext_i32_i64(local_tid_40771)] = ((__local
                                                                         float *) red_arr_mem_40775)[(sext_i32_i64(local_tid_40771) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_40768 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31197
}
__kernel void mainDetailedzisegred_small_32285(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_40941_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_40939_backing_aligned_1,
                                               __local volatile
                                               int64_t *red_arr_mem_40937_backing_aligned_2,
                                               int64_t m_27116,
                                               int64_t iota32_arg_27515,
                                               int64_t num_groups_32456,
                                               __global
                                               unsigned char *mem_39581,
                                               __global
                                               unsigned char *mem_39636,
                                               __global
                                               unsigned char *mem_39638,
                                               __global
                                               unsigned char *mem_39642,
                                               __global
                                               unsigned char *mem_39645,
                                               __global
                                               unsigned char *mem_39647,
                                               __global
                                               unsigned char *mem_39649,
                                               __global
                                               unsigned char *mem_39652,
                                               int64_t segment_sizze_nonzzero_40930)
{
    #define segred_group_sizze_32455 (mainDetailedzisegred_group_sizze_32279)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_40941_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_40941_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_40939_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_40939_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_40937_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_40937_backing_aligned_2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_40932;
    int32_t local_tid_40933;
    int64_t group_sizze_40936;
    int32_t wave_sizze_40935;
    int32_t group_tid_40934;
    
    global_tid_40932 = get_global_id(0);
    local_tid_40933 = get_local_id(0);
    group_sizze_40936 = get_local_size(0);
    wave_sizze_40935 = LOCKSTEP_WIDTH;
    group_tid_40934 = get_group_id(0);
    
    int32_t phys_tid_32285;
    
    phys_tid_32285 = global_tid_40932;
    
    __local char *red_arr_mem_40937;
    
    red_arr_mem_40937 = (__local char *) red_arr_mem_40937_backing_0;
    
    __local char *red_arr_mem_40939;
    
    red_arr_mem_40939 = (__local char *) red_arr_mem_40939_backing_1;
    
    __local char *red_arr_mem_40941;
    
    red_arr_mem_40941 = (__local char *) red_arr_mem_40941_backing_2;
    
    int32_t phys_group_id_40943;
    
    phys_group_id_40943 = get_group_id(0);
    for (int32_t i_40944 = 0; i_40944 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27116,
                                          squot64(segred_group_sizze_32455,
                                                  segment_sizze_nonzzero_40930))) -
                   phys_group_id_40943, sext_i64_i32(num_groups_32456));
         i_40944++) {
        int32_t virt_group_id_40945 = phys_group_id_40943 + i_40944 *
                sext_i64_i32(num_groups_32456);
        int64_t gtid_32276 = squot64(sext_i32_i64(local_tid_40933),
                                     segment_sizze_nonzzero_40930) +
                sext_i32_i64(virt_group_id_40945) *
                squot64(segred_group_sizze_32455, segment_sizze_nonzzero_40930);
        int64_t gtid_32284 = srem64(sext_i32_i64(local_tid_40933),
                                    iota32_arg_27515);
        
        // apply map function if in bounds
        {
            if (slt64(0, iota32_arg_27515) && (slt64(gtid_32276, m_27116) &&
                                               slt64(sext_i32_i64(local_tid_40933),
                                                     iota32_arg_27515 *
                                                     squot64(segred_group_sizze_32455,
                                                             segment_sizze_nonzzero_40930)))) {
                int32_t y_32476 = ((__global int32_t *) mem_39638)[gtid_32276];
                float y_32477 = ((__global float *) mem_39636)[gtid_32276];
                float x_32481 = ((__global float *) mem_39642)[gtid_32276 *
                                                               iota32_arg_27515 +
                                                               gtid_32284];
                float x_32482 = ((__global float *) mem_39581)[gtid_32284];
                int32_t index_primexp_36746 = sext_i64_i32(gtid_32284);
                float defunc_0_f_res_32485 = x_32481 / y_32477;
                bool cond_32486 = slt32(index_primexp_36746, y_32476);
                bool isnan_res_32487;
                
                isnan_res_32487 = futrts_isnan32(defunc_0_f_res_32485);
                
                bool cond_t_res_32488 = !isnan_res_32487;
                bool x_32489 = cond_32486 && cond_t_res_32488;
                float abs_res_32490 = (float) fabs(defunc_0_f_res_32485);
                bool defunc_2_f_res_t_res_32491 = x_32482 < abs_res_32490;
                bool x_32492 = x_32489 && defunc_2_f_res_t_res_32491;
                float defunc_1_f_res_32493;
                
                if (cond_32486) {
                    defunc_1_f_res_32493 = defunc_0_f_res_32485;
                } else {
                    defunc_1_f_res_32493 = 0.0F;
                }
                // save map-out results
                {
                    ((__global float *) mem_39652)[gtid_32276 *
                                                   iota32_arg_27515 +
                                                   gtid_32284] =
                        defunc_0_f_res_32485;
                }
                // save results to be reduced
                {
                    ((__local
                      bool *) red_arr_mem_40937)[sext_i32_i64(local_tid_40933)] =
                        x_32492;
                    ((__local
                      int32_t *) red_arr_mem_40939)[sext_i32_i64(local_tid_40933)] =
                        index_primexp_36746;
                    ((__local
                      float *) red_arr_mem_40941)[sext_i32_i64(local_tid_40933)] =
                        defunc_1_f_res_32493;
                }
            } else {
                ((__local
                  bool *) red_arr_mem_40937)[sext_i32_i64(local_tid_40933)] = 0;
                ((__local
                  int32_t *) red_arr_mem_40939)[sext_i32_i64(local_tid_40933)] =
                    -1;
                ((__local
                  float *) red_arr_mem_40941)[sext_i32_i64(local_tid_40933)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64(0, iota32_arg_27515)) {
            // perform segmented scan to imitate reduction
            {
                bool x_32462;
                int32_t x_32463;
                float x_32464;
                bool x_32465;
                int32_t x_32466;
                float x_32467;
                bool x_40946;
                int32_t x_40947;
                float x_40948;
                bool x_40949;
                int32_t x_40950;
                float x_40951;
                bool ltid_in_bounds_40960;
                
                ltid_in_bounds_40960 = slt64(sext_i32_i64(local_tid_40933),
                                             iota32_arg_27515 *
                                             squot64(segred_group_sizze_32455,
                                                     segment_sizze_nonzzero_40930));
                
                int32_t skip_threads_40961;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_40960) {
                        x_32465 = ((volatile __local
                                    bool *) red_arr_mem_40937)[sext_i32_i64(local_tid_40933)];
                        x_32466 = ((volatile __local
                                    int32_t *) red_arr_mem_40939)[sext_i32_i64(local_tid_40933)];
                        x_32467 = ((volatile __local
                                    float *) red_arr_mem_40941)[sext_i32_i64(local_tid_40933)];
                        if ((local_tid_40933 - squot32(local_tid_40933, 32) *
                             32) == 0) {
                            x_32462 = x_32465;
                            x_32463 = x_32466;
                            x_32464 = x_32467;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_40961 = 1;
                    while (slt32(skip_threads_40961, 32)) {
                        if (sle32(skip_threads_40961, local_tid_40933 -
                                  squot32(local_tid_40933, 32) * 32) &&
                            ltid_in_bounds_40960) {
                            // read operands
                            {
                                x_32462 = ((volatile __local
                                            bool *) red_arr_mem_40937)[sext_i32_i64(local_tid_40933) -
                                                                       sext_i32_i64(skip_threads_40961)];
                                x_32463 = ((volatile __local
                                            int32_t *) red_arr_mem_40939)[sext_i32_i64(local_tid_40933) -
                                                                          sext_i32_i64(skip_threads_40961)];
                                x_32464 = ((volatile __local
                                            float *) red_arr_mem_40941)[sext_i32_i64(local_tid_40933) -
                                                                        sext_i32_i64(skip_threads_40961)];
                            }
                            // perform operation
                            {
                                bool inactive_40962 =
                                     slt64(srem64(sext_i32_i64(local_tid_40933),
                                                  iota32_arg_27515),
                                           sext_i32_i64(local_tid_40933) -
                                           sext_i32_i64(local_tid_40933 -
                                           skip_threads_40961));
                                
                                if (inactive_40962) {
                                    x_32462 = x_32465;
                                    x_32463 = x_32466;
                                    x_32464 = x_32467;
                                }
                                if (!inactive_40962) {
                                    bool defunc_1_op_res_32468;
                                    int32_t defunc_1_op_res_32469;
                                    
                                    if (x_32462) {
                                        defunc_1_op_res_32468 = x_32462;
                                        defunc_1_op_res_32469 = x_32463;
                                    } else {
                                        bool x_32470 = x_32465 && x_32465;
                                        bool x_32471 = !x_32465;
                                        bool y_32472 = x_32462 && x_32471;
                                        bool defunc_1_op_res_f_res_32473 =
                                             x_32470 || y_32472;
                                        int32_t defunc_1_op_res_f_res_32474;
                                        
                                        if (x_32465) {
                                            defunc_1_op_res_f_res_32474 =
                                                x_32466;
                                        } else {
                                            defunc_1_op_res_f_res_32474 =
                                                x_32463;
                                        }
                                        defunc_1_op_res_32468 =
                                            defunc_1_op_res_f_res_32473;
                                        defunc_1_op_res_32469 =
                                            defunc_1_op_res_f_res_32474;
                                    }
                                    
                                    float defunc_1_op_res_32475 = x_32464 +
                                          x_32467;
                                    
                                    x_32462 = defunc_1_op_res_32468;
                                    x_32463 = defunc_1_op_res_32469;
                                    x_32464 = defunc_1_op_res_32475;
                                }
                            }
                        }
                        if (sle32(wave_sizze_40935, skip_threads_40961)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_40961, local_tid_40933 -
                                  squot32(local_tid_40933, 32) * 32) &&
                            ltid_in_bounds_40960) {
                            // write result
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_40937)[sext_i32_i64(local_tid_40933)] =
                                    x_32462;
                                x_32465 = x_32462;
                                ((volatile __local
                                  int32_t *) red_arr_mem_40939)[sext_i32_i64(local_tid_40933)] =
                                    x_32463;
                                x_32466 = x_32463;
                                ((volatile __local
                                  float *) red_arr_mem_40941)[sext_i32_i64(local_tid_40933)] =
                                    x_32464;
                                x_32467 = x_32464;
                            }
                        }
                        if (sle32(wave_sizze_40935, skip_threads_40961)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_40961 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_40933 - squot32(local_tid_40933, 32) * 32) ==
                        31 && ltid_in_bounds_40960) {
                        ((volatile __local
                          bool *) red_arr_mem_40937)[sext_i32_i64(squot32(local_tid_40933,
                                                                          32))] =
                            x_32462;
                        ((volatile __local
                          int32_t *) red_arr_mem_40939)[sext_i32_i64(squot32(local_tid_40933,
                                                                             32))] =
                            x_32463;
                        ((volatile __local
                          float *) red_arr_mem_40941)[sext_i32_i64(squot32(local_tid_40933,
                                                                           32))] =
                            x_32464;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_40963;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_40933, 32) == 0 &&
                            ltid_in_bounds_40960) {
                            x_40949 = ((volatile __local
                                        bool *) red_arr_mem_40937)[sext_i32_i64(local_tid_40933)];
                            x_40950 = ((volatile __local
                                        int32_t *) red_arr_mem_40939)[sext_i32_i64(local_tid_40933)];
                            x_40951 = ((volatile __local
                                        float *) red_arr_mem_40941)[sext_i32_i64(local_tid_40933)];
                            if ((local_tid_40933 - squot32(local_tid_40933,
                                                           32) * 32) == 0) {
                                x_40946 = x_40949;
                                x_40947 = x_40950;
                                x_40948 = x_40951;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_40963 = 1;
                        while (slt32(skip_threads_40963, 32)) {
                            if (sle32(skip_threads_40963, local_tid_40933 -
                                      squot32(local_tid_40933, 32) * 32) &&
                                (squot32(local_tid_40933, 32) == 0 &&
                                 ltid_in_bounds_40960)) {
                                // read operands
                                {
                                    x_40946 = ((volatile __local
                                                bool *) red_arr_mem_40937)[sext_i32_i64(local_tid_40933) -
                                                                           sext_i32_i64(skip_threads_40963)];
                                    x_40947 = ((volatile __local
                                                int32_t *) red_arr_mem_40939)[sext_i32_i64(local_tid_40933) -
                                                                              sext_i32_i64(skip_threads_40963)];
                                    x_40948 = ((volatile __local
                                                float *) red_arr_mem_40941)[sext_i32_i64(local_tid_40933) -
                                                                            sext_i32_i64(skip_threads_40963)];
                                }
                                // perform operation
                                {
                                    bool inactive_40964 =
                                         slt64(srem64(sext_i32_i64(local_tid_40933 *
                                                      32 + 32 - 1),
                                                      iota32_arg_27515),
                                               sext_i32_i64(local_tid_40933 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_40933 -
                                                             skip_threads_40963) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_40964) {
                                        x_40946 = x_40949;
                                        x_40947 = x_40950;
                                        x_40948 = x_40951;
                                    }
                                    if (!inactive_40964) {
                                        bool defunc_1_op_res_40952;
                                        int32_t defunc_1_op_res_40953;
                                        
                                        if (x_40946) {
                                            defunc_1_op_res_40952 = x_40946;
                                            defunc_1_op_res_40953 = x_40947;
                                        } else {
                                            bool x_40954 = x_40949 && x_40949;
                                            bool x_40955 = !x_40949;
                                            bool y_40956 = x_40946 && x_40955;
                                            bool defunc_1_op_res_f_res_40957 =
                                                 x_40954 || y_40956;
                                            int32_t defunc_1_op_res_f_res_40958;
                                            
                                            if (x_40949) {
                                                defunc_1_op_res_f_res_40958 =
                                                    x_40950;
                                            } else {
                                                defunc_1_op_res_f_res_40958 =
                                                    x_40947;
                                            }
                                            defunc_1_op_res_40952 =
                                                defunc_1_op_res_f_res_40957;
                                            defunc_1_op_res_40953 =
                                                defunc_1_op_res_f_res_40958;
                                        }
                                        
                                        float defunc_1_op_res_40959 = x_40948 +
                                              x_40951;
                                        
                                        x_40946 = defunc_1_op_res_40952;
                                        x_40947 = defunc_1_op_res_40953;
                                        x_40948 = defunc_1_op_res_40959;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_40935, skip_threads_40963)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_40963, local_tid_40933 -
                                      squot32(local_tid_40933, 32) * 32) &&
                                (squot32(local_tid_40933, 32) == 0 &&
                                 ltid_in_bounds_40960)) {
                                // write result
                                {
                                    ((volatile __local
                                      bool *) red_arr_mem_40937)[sext_i32_i64(local_tid_40933)] =
                                        x_40946;
                                    x_40949 = x_40946;
                                    ((volatile __local
                                      int32_t *) red_arr_mem_40939)[sext_i32_i64(local_tid_40933)] =
                                        x_40947;
                                    x_40950 = x_40947;
                                    ((volatile __local
                                      float *) red_arr_mem_40941)[sext_i32_i64(local_tid_40933)] =
                                        x_40948;
                                    x_40951 = x_40948;
                                }
                            }
                            if (sle32(wave_sizze_40935, skip_threads_40963)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_40963 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_40933, 32) == 0 ||
                          !ltid_in_bounds_40960)) {
                        // read operands
                        {
                            x_32465 = x_32462;
                            x_32466 = x_32463;
                            x_32467 = x_32464;
                            x_32462 = ((__local
                                        bool *) red_arr_mem_40937)[sext_i32_i64(squot32(local_tid_40933,
                                                                                        32)) -
                                                                   1];
                            x_32463 = ((__local
                                        int32_t *) red_arr_mem_40939)[sext_i32_i64(squot32(local_tid_40933,
                                                                                           32)) -
                                                                      1];
                            x_32464 = ((__local
                                        float *) red_arr_mem_40941)[sext_i32_i64(squot32(local_tid_40933,
                                                                                         32)) -
                                                                    1];
                        }
                        // perform operation
                        {
                            bool inactive_40965 =
                                 slt64(srem64(sext_i32_i64(local_tid_40933),
                                              iota32_arg_27515),
                                       sext_i32_i64(local_tid_40933) -
                                       sext_i32_i64(squot32(local_tid_40933,
                                                            32) * 32 - 1));
                            
                            if (inactive_40965) {
                                x_32462 = x_32465;
                                x_32463 = x_32466;
                                x_32464 = x_32467;
                            }
                            if (!inactive_40965) {
                                bool defunc_1_op_res_32468;
                                int32_t defunc_1_op_res_32469;
                                
                                if (x_32462) {
                                    defunc_1_op_res_32468 = x_32462;
                                    defunc_1_op_res_32469 = x_32463;
                                } else {
                                    bool x_32470 = x_32465 && x_32465;
                                    bool x_32471 = !x_32465;
                                    bool y_32472 = x_32462 && x_32471;
                                    bool defunc_1_op_res_f_res_32473 =
                                         x_32470 || y_32472;
                                    int32_t defunc_1_op_res_f_res_32474;
                                    
                                    if (x_32465) {
                                        defunc_1_op_res_f_res_32474 = x_32466;
                                    } else {
                                        defunc_1_op_res_f_res_32474 = x_32463;
                                    }
                                    defunc_1_op_res_32468 =
                                        defunc_1_op_res_f_res_32473;
                                    defunc_1_op_res_32469 =
                                        defunc_1_op_res_f_res_32474;
                                }
                                
                                float defunc_1_op_res_32475 = x_32464 + x_32467;
                                
                                x_32462 = defunc_1_op_res_32468;
                                x_32463 = defunc_1_op_res_32469;
                                x_32464 = defunc_1_op_res_32475;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              bool *) red_arr_mem_40937)[sext_i32_i64(local_tid_40933)] =
                                x_32462;
                            ((__local
                              int32_t *) red_arr_mem_40939)[sext_i32_i64(local_tid_40933)] =
                                x_32463;
                            ((__local
                              float *) red_arr_mem_40941)[sext_i32_i64(local_tid_40933)] =
                                x_32464;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_40933, 32) == 0) {
                        ((__local
                          bool *) red_arr_mem_40937)[sext_i32_i64(local_tid_40933)] =
                            x_32465;
                        ((__local
                          int32_t *) red_arr_mem_40939)[sext_i32_i64(local_tid_40933)] =
                            x_32466;
                        ((__local
                          float *) red_arr_mem_40941)[sext_i32_i64(local_tid_40933)] =
                            x_32467;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_40945) *
                      squot64(segred_group_sizze_32455,
                              segment_sizze_nonzzero_40930) +
                      sext_i32_i64(local_tid_40933), m_27116) &&
                slt64(sext_i32_i64(local_tid_40933),
                      squot64(segred_group_sizze_32455,
                              segment_sizze_nonzzero_40930))) {
                ((__global
                  bool *) mem_39645)[sext_i32_i64(virt_group_id_40945) *
                                     squot64(segred_group_sizze_32455,
                                             segment_sizze_nonzzero_40930) +
                                     sext_i32_i64(local_tid_40933)] = ((__local
                                                                        bool *) red_arr_mem_40937)[(sext_i32_i64(local_tid_40933) +
                                                                                                    1) *
                                                                                                   segment_sizze_nonzzero_40930 -
                                                                                                   1];
                ((__global
                  int32_t *) mem_39647)[sext_i32_i64(virt_group_id_40945) *
                                        squot64(segred_group_sizze_32455,
                                                segment_sizze_nonzzero_40930) +
                                        sext_i32_i64(local_tid_40933)] =
                    ((__local
                      int32_t *) red_arr_mem_40939)[(sext_i32_i64(local_tid_40933) +
                                                     1) *
                                                    segment_sizze_nonzzero_40930 -
                                                    1];
                ((__global
                  float *) mem_39649)[sext_i32_i64(virt_group_id_40945) *
                                      squot64(segred_group_sizze_32455,
                                              segment_sizze_nonzzero_40930) +
                                      sext_i32_i64(local_tid_40933)] = ((__local
                                                                         float *) red_arr_mem_40941)[(sext_i32_i64(local_tid_40933) +
                                                                                                      1) *
                                                                                                     segment_sizze_nonzzero_40930 -
                                                                                                     1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32455
}
__kernel void remove_nanszisegmap_28515(__global int *global_failure,
                                        int64_t m_27101, int64_t n_27102,
                                        int64_t p_27103,
                                        int16_t nan_value_27104, __global
                                        unsigned char *images_mem_38681,
                                        __global unsigned char *mem_38686)
{
    #define segmap_group_sizze_28576 (remove_nanszisegmap_group_sizze_28519)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_39888;
    int32_t local_tid_39889;
    int64_t group_sizze_39892;
    int32_t wave_sizze_39891;
    int32_t group_tid_39890;
    
    global_tid_39888 = get_global_id(0);
    local_tid_39889 = get_local_id(0);
    group_sizze_39892 = get_local_size(0);
    wave_sizze_39891 = LOCKSTEP_WIDTH;
    group_tid_39890 = get_group_id(0);
    
    int32_t phys_tid_28515;
    
    phys_tid_28515 = global_tid_39888;
    
    int64_t gtid_28512;
    
    gtid_28512 = squot64(sext_i32_i64(group_tid_39890) *
                         segmap_group_sizze_28576 +
                         sext_i32_i64(local_tid_39889), n_27102 * p_27103);
    
    int64_t gtid_28513;
    
    gtid_28513 = squot64(sext_i32_i64(group_tid_39890) *
                         segmap_group_sizze_28576 +
                         sext_i32_i64(local_tid_39889) -
                         squot64(sext_i32_i64(group_tid_39890) *
                                 segmap_group_sizze_28576 +
                                 sext_i32_i64(local_tid_39889), n_27102 *
                                 p_27103) * (n_27102 * p_27103), p_27103);
    
    int64_t gtid_28514;
    
    gtid_28514 = sext_i32_i64(group_tid_39890) * segmap_group_sizze_28576 +
        sext_i32_i64(local_tid_39889) - squot64(sext_i32_i64(group_tid_39890) *
                                                segmap_group_sizze_28576 +
                                                sext_i32_i64(local_tid_39889),
                                                n_27102 * p_27103) * (n_27102 *
                                                                      p_27103) -
        squot64(sext_i32_i64(group_tid_39890) * segmap_group_sizze_28576 +
                sext_i32_i64(local_tid_39889) -
                squot64(sext_i32_i64(group_tid_39890) *
                        segmap_group_sizze_28576 +
                        sext_i32_i64(local_tid_39889), n_27102 * p_27103) *
                (n_27102 * p_27103), p_27103) * p_27103;
    if ((slt64(gtid_28512, m_27101) && slt64(gtid_28513, n_27102)) &&
        slt64(gtid_28514, p_27103)) {
        int16_t x_28579 = ((__global int16_t *) images_mem_38681)[gtid_28512 *
                                                                  (p_27103 *
                                                                   n_27102) +
                                                                  gtid_28513 *
                                                                  p_27103 +
                                                                  gtid_28514];
        bool cond_28580 = x_28579 == nan_value_27104;
        float defunc_0_f_res_28581;
        
        if (cond_28580) {
            defunc_0_f_res_28581 = NAN;
        } else {
            float i16_res_28582 = sitofp_i16_f32(x_28579);
            
            defunc_0_f_res_28581 = i16_res_28582;
        }
        ((__global float *) mem_38686)[gtid_28512 * (p_27103 * n_27102) +
                                       gtid_28513 * p_27103 + gtid_28514] =
            defunc_0_f_res_28581;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_28576
}
"""
# Start of values.py.

# Hacky parser/reader/writer for values written in Futhark syntax.
# Used for reading stdin when compiling standalone programs with the
# Python code generator.

import numpy as np
import string
import struct
import sys

class ReaderInput:
    def __init__(self, f):
        self.f = f
        self.lookahead_buffer = []

    def get_char(self):
        if len(self.lookahead_buffer) == 0:
            return self.f.read(1)
        else:
            c = self.lookahead_buffer[0]
            self.lookahead_buffer = self.lookahead_buffer[1:]
            return c

    def unget_char(self, c):
        self.lookahead_buffer = [c] + self.lookahead_buffer

    def get_chars(self, n):
        n1 = min(n, len(self.lookahead_buffer))
        s = b''.join(self.lookahead_buffer[:n1])
        self.lookahead_buffer = self.lookahead_buffer[n1:]
        n2 = n - n1
        if n2 > 0:
            s += self.f.read(n2)
        return s

    def peek_char(self):
        c = self.get_char()
        if c:
            self.unget_char(c)
        return c

def skip_spaces(f):
    c = f.get_char()
    while c != None:
        if c.isspace():
            c = f.get_char()
        elif c == b'-':
          # May be line comment.
          if f.peek_char() == b'-':
            # Yes, line comment. Skip to end of line.
            while (c != b'\n' and c != None):
              c = f.get_char()
          else:
            break
        else:
          break
    if c:
        f.unget_char(c)

def parse_specific_char(f, expected):
    got = f.get_char()
    if got != expected:
        f.unget_char(got)
        raise ValueError
    return True

def parse_specific_string(f, s):
    # This funky mess is intended, and is caused by the fact that if `type(b) ==
    # bytes` then `type(b[0]) == int`, but we need to match each element with a
    # `bytes`, so therefore we make each character an array element
    b = s.encode('utf8')
    bs = [b[i:i+1] for i in range(len(b))]
    read = []
    try:
        for c in bs:
            parse_specific_char(f, c)
            read.append(c)
        return True
    except ValueError:
        for c in read[::-1]:
            f.unget_char(c)
        raise

def optional(p, *args):
    try:
        return p(*args)
    except ValueError:
        return None

def optional_specific_string(f, s):
    c = f.peek_char()
    # This funky mess is intended, and is caused by the fact that if `type(b) ==
    # bytes` then `type(b[0]) == int`, but we need to match each element with a
    # `bytes`, so therefore we make each character an array element
    b = s.encode('utf8')
    bs = [b[i:i+1] for i in range(len(b))]
    if c == bs[0]:
        return parse_specific_string(f, s)
    else:
        return False

def sepBy(p, sep, *args):
    elems = []
    x = optional(p, *args)
    if x != None:
        elems += [x]
        while optional(sep, *args) != None:
            x = p(*args)
            elems += [x]
    return elems

# Assumes '0x' has already been read
def parse_hex_int(f):
    s = b''
    c = f.get_char()
    while c != None:
        if c in b'01234556789ABCDEFabcdef':
            s += c
            c = f.get_char()
        elif c == b'_':
            c = f.get_char() # skip _
        else:
            f.unget_char(c)
            break
    return str(int(s, 16)).encode('utf8') # ugh

def parse_int(f):
    s = b''
    c = f.get_char()
    if c == b'0' and f.peek_char() in b'xX':
        c = f.get_char() # skip X
        return parse_hex_int(f)
    else:
        while c != None:
            if c.isdigit():
                s += c
                c = f.get_char()
            elif c == b'_':
                c = f.get_char() # skip _
            else:
                f.unget_char(c)
                break
        if len(s) == 0:
            raise ValueError
        return s

def parse_int_signed(f):
    s = b''
    c = f.get_char()

    if c == b'-' and f.peek_char().isdigit():
      return c + parse_int(f)
    else:
      if c != b'+':
          f.unget_char(c)
      return parse_int(f)

def read_str_comma(f):
    skip_spaces(f)
    parse_specific_char(f, b',')
    return b','

def read_str_int(f, s):
    skip_spaces(f)
    x = int(parse_int_signed(f))
    optional_specific_string(f, s)
    return x

def read_str_uint(f, s):
    skip_spaces(f)
    x = int(parse_int(f))
    optional_specific_string(f, s)
    return x

def read_str_i8(f):
    return np.int8(read_str_int(f, 'i8'))
def read_str_i16(f):
    return np.int16(read_str_int(f, 'i16'))
def read_str_i32(f):
    return np.int32(read_str_int(f, 'i32'))
def read_str_i64(f):
    return np.int64(read_str_int(f, 'i64'))

def read_str_u8(f):
    return np.uint8(read_str_int(f, 'u8'))
def read_str_u16(f):
    return np.uint16(read_str_int(f, 'u16'))
def read_str_u32(f):
    return np.uint32(read_str_int(f, 'u32'))
def read_str_u64(f):
    return np.uint64(read_str_int(f, 'u64'))

def read_char(f):
    skip_spaces(f)
    parse_specific_char(f, b'\'')
    c = f.get_char()
    parse_specific_char(f, b'\'')
    return c

def read_str_hex_float(f, sign):
    int_part = parse_hex_int(f)
    parse_specific_char(f, b'.')
    frac_part = parse_hex_int(f)
    parse_specific_char(f, b'p')
    exponent = parse_int(f)

    int_val = int(int_part, 16)
    frac_val = float(int(frac_part, 16)) / (16 ** len(frac_part))
    exp_val = int(exponent)

    total_val = (int_val + frac_val) * (2.0 ** exp_val)
    if sign == b'-':
        total_val = -1 * total_val

    return float(total_val)


def read_str_decimal(f):
    skip_spaces(f)
    c = f.get_char()
    if (c == b'-'):
      sign = b'-'
    else:
      f.unget_char(c)
      sign = b''

    # Check for hexadecimal float
    c = f.get_char()
    if (c == '0' and (f.peek_char() in ['x', 'X'])):
        f.get_char()
        return read_str_hex_float(f, sign)
    else:
        f.unget_char(c)

    bef = optional(parse_int, f)
    if bef == None:
        bef = b'0'
        parse_specific_char(f, b'.')
        aft = parse_int(f)
    elif optional(parse_specific_char, f, b'.'):
        aft = parse_int(f)
    else:
        aft = b'0'
    if (optional(parse_specific_char, f, b'E') or
        optional(parse_specific_char, f, b'e')):
        expt = parse_int_signed(f)
    else:
        expt = b'0'
    return float(sign + bef + b'.' + aft + b'E' + expt)

def read_str_f32(f):
    skip_spaces(f)
    try:
        parse_specific_string(f, 'f32.nan')
        return np.float32(np.nan)
    except ValueError:
        try:
            parse_specific_string(f, 'f32.inf')
            return np.float32(np.inf)
        except ValueError:
            try:
               parse_specific_string(f, '-f32.inf')
               return np.float32(-np.inf)
            except ValueError:
               x = read_str_decimal(f)
               optional_specific_string(f, 'f32')
               return x

def read_str_f64(f):
    skip_spaces(f)
    try:
        parse_specific_string(f, 'f64.nan')
        return np.float64(np.nan)
    except ValueError:
        try:
            parse_specific_string(f, 'f64.inf')
            return np.float64(np.inf)
        except ValueError:
            try:
               parse_specific_string(f, '-f64.inf')
               return np.float64(-np.inf)
            except ValueError:
               x = read_str_decimal(f)
               optional_specific_string(f, 'f64')
               return x

def read_str_bool(f):
    skip_spaces(f)
    if f.peek_char() == b't':
        parse_specific_string(f, 'true')
        return True
    elif f.peek_char() == b'f':
        parse_specific_string(f, 'false')
        return False
    else:
        raise ValueError

def read_str_empty_array(f, type_name, rank):
    parse_specific_string(f, 'empty')
    parse_specific_char(f, b'(')
    dims = []
    for i in range(rank):
        parse_specific_string(f, '[')
        dims += [int(parse_int(f))]
        parse_specific_string(f, ']')
    if np.product(dims) != 0:
        raise ValueError
    parse_specific_string(f, type_name)
    parse_specific_char(f, b')')

    return tuple(dims)

def read_str_array_elems(f, elem_reader, type_name, rank):
    skip_spaces(f)
    try:
        parse_specific_char(f, b'[')
    except ValueError:
        return read_str_empty_array(f, type_name, rank)
    else:
        xs = sepBy(elem_reader, read_str_comma, f)
        skip_spaces(f)
        parse_specific_char(f, b']')
        return xs

def read_str_array_helper(f, elem_reader, type_name, rank):
    def nested_row_reader(_):
        return read_str_array_helper(f, elem_reader, type_name, rank-1)
    if rank == 1:
        row_reader = elem_reader
    else:
        row_reader = nested_row_reader
    return read_str_array_elems(f, row_reader, type_name, rank)

def expected_array_dims(l, rank):
  if rank > 1:
      n = len(l)
      if n == 0:
          elem = []
      else:
          elem = l[0]
      return [n] + expected_array_dims(elem, rank-1)
  else:
      return [len(l)]

def verify_array_dims(l, dims):
    if dims[0] != len(l):
        raise ValueError
    if len(dims) > 1:
        for x in l:
            verify_array_dims(x, dims[1:])

def read_str_array(f, elem_reader, type_name, rank, bt):
    elems = read_str_array_helper(f, elem_reader, type_name, rank)
    if type(elems) == tuple:
        # Empty array
        return np.empty(elems, dtype=bt)
    else:
        dims = expected_array_dims(elems, rank)
        verify_array_dims(elems, dims)
        return np.array(elems, dtype=bt)

################################################################################

READ_BINARY_VERSION = 2

# struct format specified at
# https://docs.python.org/2/library/struct.html#format-characters

def mk_bin_scalar_reader(t):
    def bin_reader(f):
        fmt = FUTHARK_PRIMTYPES[t]['bin_format']
        size = FUTHARK_PRIMTYPES[t]['size']
        return struct.unpack('<' + fmt, f.get_chars(size))[0]
    return bin_reader

read_bin_i8 = mk_bin_scalar_reader('i8')
read_bin_i16 = mk_bin_scalar_reader('i16')
read_bin_i32 = mk_bin_scalar_reader('i32')
read_bin_i64 = mk_bin_scalar_reader('i64')

read_bin_u8 = mk_bin_scalar_reader('u8')
read_bin_u16 = mk_bin_scalar_reader('u16')
read_bin_u32 = mk_bin_scalar_reader('u32')
read_bin_u64 = mk_bin_scalar_reader('u64')

read_bin_f32 = mk_bin_scalar_reader('f32')
read_bin_f64 = mk_bin_scalar_reader('f64')

read_bin_bool = mk_bin_scalar_reader('bool')

def read_is_binary(f):
    skip_spaces(f)
    c = f.get_char()
    if c == b'b':
        bin_version = read_bin_u8(f)
        if bin_version != READ_BINARY_VERSION:
            panic(1, "binary-input: File uses version %i, but I only understand version %i.\n",
                  bin_version, READ_BINARY_VERSION)
        return True
    else:
        f.unget_char(c)
        return False

FUTHARK_PRIMTYPES = {
    'i8':  {'binname' : b"  i8",
            'size' : 1,
            'bin_reader': read_bin_i8,
            'str_reader': read_str_i8,
            'bin_format': 'b',
            'numpy_type': np.int8 },

    'i16': {'binname' : b" i16",
            'size' : 2,
            'bin_reader': read_bin_i16,
            'str_reader': read_str_i16,
            'bin_format': 'h',
            'numpy_type': np.int16 },

    'i32': {'binname' : b" i32",
            'size' : 4,
            'bin_reader': read_bin_i32,
            'str_reader': read_str_i32,
            'bin_format': 'i',
            'numpy_type': np.int32 },

    'i64': {'binname' : b" i64",
            'size' : 8,
            'bin_reader': read_bin_i64,
            'str_reader': read_str_i64,
            'bin_format': 'q',
            'numpy_type': np.int64},

    'u8':  {'binname' : b"  u8",
            'size' : 1,
            'bin_reader': read_bin_u8,
            'str_reader': read_str_u8,
            'bin_format': 'B',
            'numpy_type': np.uint8 },

    'u16': {'binname' : b" u16",
            'size' : 2,
            'bin_reader': read_bin_u16,
            'str_reader': read_str_u16,
            'bin_format': 'H',
            'numpy_type': np.uint16 },

    'u32': {'binname' : b" u32",
            'size' : 4,
            'bin_reader': read_bin_u32,
            'str_reader': read_str_u32,
            'bin_format': 'I',
            'numpy_type': np.uint32 },

    'u64': {'binname' : b" u64",
            'size' : 8,
            'bin_reader': read_bin_u64,
            'str_reader': read_str_u64,
            'bin_format': 'Q',
            'numpy_type': np.uint64 },

    'f32': {'binname' : b" f32",
            'size' : 4,
            'bin_reader': read_bin_f32,
            'str_reader': read_str_f32,
            'bin_format': 'f',
            'numpy_type': np.float32 },

    'f64': {'binname' : b" f64",
            'size' : 8,
            'bin_reader': read_bin_f64,
            'str_reader': read_str_f64,
            'bin_format': 'd',
            'numpy_type': np.float64 },

    'bool': {'binname' : b"bool",
             'size' : 1,
             'bin_reader': read_bin_bool,
             'str_reader': read_str_bool,
             'bin_format': 'b',
             'numpy_type': np.bool }
}

def read_bin_read_type(f):
    read_binname = f.get_chars(4)

    for (k,v) in FUTHARK_PRIMTYPES.items():
        if v['binname'] == read_binname:
            return k
    panic(1, "binary-input: Did not recognize the type '%s'.\n", read_binname)

def numpy_type_to_type_name(t):
    for (k,v) in FUTHARK_PRIMTYPES.items():
        if v['numpy_type'] == t:
            return k
    raise Exception('Unknown Numpy type: {}'.format(t))

def read_bin_ensure_scalar(f, expected_type):
  dims = read_bin_i8(f)

  if dims != 0:
      panic(1, "binary-input: Expected scalar (0 dimensions), but got array with %i dimensions.\n", dims)

  bin_type = read_bin_read_type(f)
  if bin_type != expected_type:
      panic(1, "binary-input: Expected scalar of type %s but got scalar of type %s.\n",
            expected_type, bin_type)

# ------------------------------------------------------------------------------
# General interface for reading Primitive Futhark Values
# ------------------------------------------------------------------------------

def read_scalar(f, ty):
    if read_is_binary(f):
        read_bin_ensure_scalar(f, ty)
        return FUTHARK_PRIMTYPES[ty]['bin_reader'](f)
    return FUTHARK_PRIMTYPES[ty]['str_reader'](f)

def read_array(f, expected_type, rank):
    if not read_is_binary(f):
        str_reader = FUTHARK_PRIMTYPES[expected_type]['str_reader']
        return read_str_array(f, str_reader, expected_type, rank,
                              FUTHARK_PRIMTYPES[expected_type]['numpy_type'])

    bin_rank = read_bin_u8(f)

    if bin_rank != rank:
        panic(1, "binary-input: Expected %i dimensions, but got array with %i dimensions.\n",
              rank, bin_rank)

    bin_type_enum = read_bin_read_type(f)
    if expected_type != bin_type_enum:
        panic(1, "binary-input: Expected %iD-array with element type '%s' but got %iD-array with element type '%s'.\n",
              rank, expected_type, bin_rank, bin_type_enum)

    shape = []
    elem_count = 1
    for i in range(rank):
        bin_size = read_bin_u64(f)
        elem_count *= bin_size
        shape.append(bin_size)

    bin_fmt = FUTHARK_PRIMTYPES[bin_type_enum]['bin_format']

    # We first read the expected number of types into a bytestring,
    # then use np.fromstring.  This is because np.fromfile does not
    # work on things that are insufficiently file-like, like a network
    # stream.
    bytes = f.get_chars(elem_count * FUTHARK_PRIMTYPES[expected_type]['size'])
    arr = np.fromstring(bytes, dtype=FUTHARK_PRIMTYPES[bin_type_enum]['numpy_type'])
    arr.shape = shape

    return arr

if sys.version_info >= (3,0):
    input_reader = ReaderInput(sys.stdin.buffer)
else:
    input_reader = ReaderInput(sys.stdin)

import re

def read_value(type_desc, reader=input_reader):
    """Read a value of the given type.  The type is a string
representation of the Futhark type."""
    m = re.match(r'((?:\[\])*)([a-z0-9]+)$', type_desc)
    if m:
        dims = int(len(m.group(1))/2)
        basetype = m.group(2)
        assert basetype in FUTHARK_PRIMTYPES, "Unknown type: {}".format(type_desc)
        if dims > 0:
            return read_array(reader, basetype, dims)
        else:
            return read_scalar(reader, basetype)
        return (dims, basetype)

def end_of_input(entry, f=input_reader):
    skip_spaces(f)
    if f.get_char() != b'':
        panic(1, "Expected EOF on stdin after reading input for \"%s\".", entry)

def write_value_text(v, out=sys.stdout):
    if type(v) == np.uint8:
        out.write("%uu8" % v)
    elif type(v) == np.uint16:
        out.write("%uu16" % v)
    elif type(v) == np.uint32:
        out.write("%uu32" % v)
    elif type(v) == np.uint64:
        out.write("%uu64" % v)
    elif type(v) == np.int8:
        out.write("%di8" % v)
    elif type(v) == np.int16:
        out.write("%di16" % v)
    elif type(v) == np.int32:
        out.write("%di32" % v)
    elif type(v) == np.int64:
        out.write("%di64" % v)
    elif type(v) in [np.bool, np.bool_]:
        if v:
            out.write("true")
        else:
            out.write("false")
    elif type(v) == np.float32:
        if np.isnan(v):
            out.write('f32.nan')
        elif np.isinf(v):
            if v >= 0:
                out.write('f32.inf')
            else:
                out.write('-f32.inf')
        else:
            out.write("%.6ff32" % v)
    elif type(v) == np.float64:
        if np.isnan(v):
            out.write('f64.nan')
        elif np.isinf(v):
            if v >= 0:
                out.write('f64.inf')
            else:
                out.write('-f64.inf')
        else:
            out.write("%.6ff64" % v)
    elif type(v) == np.ndarray:
        if np.product(v.shape) == 0:
            tname = numpy_type_to_type_name(v.dtype)
            out.write('empty({}{})'.format(''.join(['[{}]'.format(d)
                                                    for d in v.shape]), tname))
        else:
            first = True
            out.write('[')
            for x in v:
                if not first: out.write(', ')
                first = False
                write_value(x, out=out)
            out.write(']')
    else:
        raise Exception("Cannot print value of type {}: {}".format(type(v), v))

type_strs = { np.dtype('int8'): b'  i8',
              np.dtype('int16'): b' i16',
              np.dtype('int32'): b' i32',
              np.dtype('int64'): b' i64',
              np.dtype('uint8'): b'  u8',
              np.dtype('uint16'): b' u16',
              np.dtype('uint32'): b' u32',
              np.dtype('uint64'): b' u64',
              np.dtype('float32'): b' f32',
              np.dtype('float64'): b' f64',
              np.dtype('bool'): b'bool'}

def construct_binary_value(v):
    t = v.dtype
    shape = v.shape

    elems = 1
    for d in shape:
        elems *= d

    num_bytes = 1 + 1 + 1 + 4 + len(shape) * 8 + elems * t.itemsize
    bytes = bytearray(num_bytes)
    bytes[0] = np.int8(ord('b'))
    bytes[1] = 2
    bytes[2] = np.int8(len(shape))
    bytes[3:7] = type_strs[t]

    for i in range(len(shape)):
        bytes[7+i*8:7+(i+1)*8] = np.int64(shape[i]).tostring()

    bytes[7+len(shape)*8:] = np.ascontiguousarray(v).tostring()

    return bytes

def write_value_binary(v, out=sys.stdout):
    if sys.version_info >= (3,0):
        out = out.buffer
    out.write(construct_binary_value(v))

def write_value(v, out=sys.stdout, binary=False):
    if binary:
        return write_value_binary(v, out=out)
    else:
        return write_value_text(v, out=out)

# End of values.py.
# Start of memory.py.

import ctypes as ct

def addressOffset(x, offset, bt):
  return ct.cast(ct.addressof(x.contents)+int(offset), ct.POINTER(bt))

def allocateMem(size):
  return ct.cast((ct.c_byte * max(0,size))(), ct.POINTER(ct.c_byte))

# Copy an array if its is not-None.  This is important for treating
# Numpy arrays as flat memory, but has some overhead.
def normaliseArray(x):
  if (x.base is x) or (x.base is None):
    return x
  else:
    return x.copy()

def unwrapArray(x):
  return normaliseArray(x).ctypes.data_as(ct.POINTER(ct.c_byte))

def createArray(x, shape):
  # HACK: np.ctypeslib.as_array may fail if the shape contains zeroes,
  # for some reason.
  if any(map(lambda x: x == 0, shape)):
      return np.ndarray(shape, dtype=x._type_)
  else:
      return np.ctypeslib.as_array(x, shape=shape)

def indexArray(x, offset, bt, nptype):
  return nptype(addressOffset(x, offset*ct.sizeof(bt), bt)[0])

def writeScalarArray(x, offset, v):
  ct.memmove(ct.addressof(x.contents)+int(offset)*ct.sizeof(v), ct.addressof(v), ct.sizeof(v))

# An opaque Futhark value.
class opaque(object):
  def __init__(self, desc, *payload):
    self.data = payload
    self.desc = desc

  def __repr__(self):
    return "<opaque Futhark value of type {}>".format(self.desc)

# End of memory.py.
# Start of panic.py.

def panic(exitcode, fmt, *args):
    sys.stderr.write('%s: ' % sys.argv[0])
    sys.stderr.write(fmt % args)
    sys.stderr.write('\n')
    sys.exit(exitcode)

# End of panic.py.
# Start of tuning.py

def read_tuning_file(kvs, f):
    for line in f.read().splitlines():
        size, value = line.split('=')
        kvs[size] = int(value)
    return kvs

# End of tuning.py.
# Start of scalar.py.

import numpy as np
import math
import struct

def intlit(t, x):
  if t == np.int8:
    return np.int8(x)
  elif t == np.int16:
    return np.int16(x)
  elif t == np.int32:
    return np.int32(x)
  else:
    return np.int64(x)

def signed(x):
  if type(x) == np.uint8:
    return np.int8(x)
  elif type(x) == np.uint16:
    return np.int16(x)
  elif type(x) == np.uint32:
    return np.int32(x)
  else:
    return np.int64(x)

def unsigned(x):
  if type(x) == np.int8:
    return np.uint8(x)
  elif type(x) == np.int16:
    return np.uint16(x)
  elif type(x) == np.int32:
    return np.uint32(x)
  else:
    return np.uint64(x)

def shlN(x,y):
  return x << y

def ashrN(x,y):
  return x >> y

# Python is so slow that we just make all the unsafe operations safe,
# always.

def sdivN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return x // y

def sdiv_upN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return (x+y-intlit(type(x), 1)) // y

def smodN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return x % y

def udivN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed(unsigned(x) // unsigned(y))

def udiv_upN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed((unsigned(x)+unsigned(y)-unsigned(intlit(type(x),1))) // unsigned(y))

def umodN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed(unsigned(x) % unsigned(y))

def squotN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return np.floor_divide(np.abs(x), np.abs(y)) * np.sign(x) * np.sign(y)

def sremN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return np.remainder(np.abs(x), np.abs(y)) * np.sign(x)

def sminN(x,y):
  return min(x,y)

def smaxN(x,y):
  return max(x,y)

def uminN(x,y):
  return signed(min(unsigned(x),unsigned(y)))

def umaxN(x,y):
  return signed(max(unsigned(x),unsigned(y)))

def fminN(x,y):
  return min(x,y)

def fmaxN(x,y):
  return max(x,y)

def powN(x,y):
  return x ** y

def fpowN(x,y):
  return x ** y

def sleN(x,y):
  return x <= y

def sltN(x,y):
  return x < y

def uleN(x,y):
  return unsigned(x) <= unsigned(y)

def ultN(x,y):
  return unsigned(x) < unsigned(y)

def lshr8(x,y):
  return np.int8(np.uint8(x) >> np.uint8(y))

def lshr16(x,y):
  return np.int16(np.uint16(x) >> np.uint16(y))

def lshr32(x,y):
  return np.int32(np.uint32(x) >> np.uint32(y))

def lshr64(x,y):
  return np.int64(np.uint64(x) >> np.uint64(y))

def sext_T_i8(x):
  return np.int8(x)

def sext_T_i16(x):
  return np.int16(x)

def sext_T_i32(x):
  return np.int32(x)

def sext_T_i64(x):
  return np.int64(x)

def itob_T_bool(x):
  return np.bool(x)

def btoi_bool_i8(x):
  return np.int8(x)

def btoi_bool_i16(x):
  return np.int8(x)

def btoi_bool_i32(x):
  return np.int8(x)

def btoi_bool_i64(x):
  return np.int8(x)

def zext_i8_i8(x):
  return np.int8(np.uint8(x))

def zext_i8_i16(x):
  return np.int16(np.uint8(x))

def zext_i8_i32(x):
  return np.int32(np.uint8(x))

def zext_i8_i64(x):
  return np.int64(np.uint8(x))

def zext_i16_i8(x):
  return np.int8(np.uint16(x))

def zext_i16_i16(x):
  return np.int16(np.uint16(x))

def zext_i16_i32(x):
  return np.int32(np.uint16(x))

def zext_i16_i64(x):
  return np.int64(np.uint16(x))

def zext_i32_i8(x):
  return np.int8(np.uint32(x))

def zext_i32_i16(x):
  return np.int16(np.uint32(x))

def zext_i32_i32(x):
  return np.int32(np.uint32(x))

def zext_i32_i64(x):
  return np.int64(np.uint32(x))

def zext_i64_i8(x):
  return np.int8(np.uint64(x))

def zext_i64_i16(x):
  return np.int16(np.uint64(x))

def zext_i64_i32(x):
  return np.int32(np.uint64(x))

def zext_i64_i64(x):
  return np.int64(np.uint64(x))

sdiv8 = sdiv16 = sdiv32 = sdiv64 = sdivN
sdiv_up8 = sdiv1_up6 = sdiv_up32 = sdiv_up64 = sdiv_upN
sdiv_safe8 = sdiv1_safe6 = sdiv_safe32 = sdiv_safe64 = sdivN
sdiv_up_safe8 = sdiv_up1_safe6 = sdiv_up_safe32 = sdiv_up_safe64 = sdiv_upN
smod8 = smod16 = smod32 = smod64 = smodN
smod_safe8 = smod_safe16 = smod_safe32 = smod_safe64 = smodN
udiv8 = udiv16 = udiv32 = udiv64 = udivN
udiv_up8 = udiv_up16 = udiv_up32 = udiv_up64 = udivN
udiv_safe8 = udiv_safe16 = udiv_safe32 = udiv_safe64 = udiv_upN
udiv_up_safe8 = udiv_up_safe16 = udiv_up_safe32 = udiv_up_safe64 = udiv_upN
umod8 = umod16 = umod32 = umod64 = umodN
umod_safe8 = umod_safe16 = umod_safe32 = umod_safe64 = umodN
squot8 = squot16 = squot32 = squot64 = squotN
squot_safe8 = squot_safe16 = squot_safe32 = squot_safe64 = squotN
srem8 = srem16 = srem32 = srem64 = sremN
srem_safe8 = srem_safe16 = srem_safe32 = srem_safe64 = sremN

shl8 = shl16 = shl32 = shl64 = shlN
ashr8 = ashr16 = ashr32 = ashr64 = ashrN
smax8 = smax16 = smax32 = smax64 = smaxN
smin8 = smin16 = smin32 = smin64 = sminN
umax8 = umax16 = umax32 = umax64 = umaxN
umin8 = umin16 = umin32 = umin64 = uminN
pow8 = pow16 = pow32 = pow64 = powN
fpow32 = fpow64 = fpowN
fmax32 = fmax64 = fmaxN
fmin32 = fmin64 = fminN
sle8 = sle16 = sle32 = sle64 = sleN
slt8 = slt16 = slt32 = slt64 = sltN
ule8 = ule16 = ule32 = ule64 = uleN
ult8 = ult16 = ult32 = ult64 = ultN
sext_i8_i8 = sext_i16_i8 = sext_i32_i8 = sext_i64_i8 = sext_T_i8
sext_i8_i16 = sext_i16_i16 = sext_i32_i16 = sext_i64_i16 = sext_T_i16
sext_i8_i32 = sext_i16_i32 = sext_i32_i32 = sext_i64_i32 = sext_T_i32
sext_i8_i64 = sext_i16_i64 = sext_i32_i64 = sext_i64_i64 = sext_T_i64
itob_i8_bool = itob_i16_bool = itob_i32_bool = itob_i64_bool = itob_T_bool

def clz_T(x):
  n = np.int32(0)
  bits = x.itemsize * 8
  for i in range(bits):
    if x < 0:
      break
    n += 1
    x <<= np.int8(1)
  return n

def ctz_T(x):
  n = np.int32(0)
  bits = x.itemsize * 8
  for i in range(bits):
    if (x & 1) == 1:
      break
    n += 1
    x >>= np.int8(1)
  return n

def popc_T(x):
  c = np.int32(0)
  while x != 0:
    x &= x - np.int8(1)
    c += np.int8(1)
  return c

futhark_popc8 = futhark_popc16 = futhark_popc32 = futhark_popc64 = popc_T
futhark_clzz8 = futhark_clzz16 = futhark_clzz32 = futhark_clzz64 = clz_T
futhark_ctzz8 = futhark_ctzz16 = futhark_ctzz32 = futhark_ctzz64 = ctz_T

def ssignum(x):
  return np.sign(x)

def usignum(x):
  if x < 0:
    return ssignum(-x)
  else:
    return ssignum(x)

def sitofp_T_f32(x):
  return np.float32(x)
sitofp_i8_f32 = sitofp_i16_f32 = sitofp_i32_f32 = sitofp_i64_f32 = sitofp_T_f32

def sitofp_T_f64(x):
  return np.float64(x)
sitofp_i8_f64 = sitofp_i16_f64 = sitofp_i32_f64 = sitofp_i64_f64 = sitofp_T_f64

def uitofp_T_f32(x):
  return np.float32(unsigned(x))
uitofp_i8_f32 = uitofp_i16_f32 = uitofp_i32_f32 = uitofp_i64_f32 = uitofp_T_f32

def uitofp_T_f64(x):
  return np.float64(unsigned(x))
uitofp_i8_f64 = uitofp_i16_f64 = uitofp_i32_f64 = uitofp_i64_f64 = uitofp_T_f64

def fptosi_T_i8(x):
  return np.int8(np.trunc(x))
fptosi_f32_i8 = fptosi_f64_i8 = fptosi_T_i8

def fptosi_T_i16(x):
  return np.int16(np.trunc(x))
fptosi_f32_i16 = fptosi_f64_i16 = fptosi_T_i16

def fptosi_T_i32(x):
  return np.int32(np.trunc(x))
fptosi_f32_i32 = fptosi_f64_i32 = fptosi_T_i32

def fptosi_T_i64(x):
  return np.int64(np.trunc(x))
fptosi_f32_i64 = fptosi_f64_i64 = fptosi_T_i64

def fptoui_T_i8(x):
  return np.uint8(np.trunc(x))
fptoui_f32_i8 = fptoui_f64_i8 = fptoui_T_i8

def fptoui_T_i16(x):
  return np.uint16(np.trunc(x))
fptoui_f32_i16 = fptoui_f64_i16 = fptoui_T_i16

def fptoui_T_i32(x):
  return np.uint32(np.trunc(x))
fptoui_f32_i32 = fptoui_f64_i32 = fptoui_T_i32

def fptoui_T_i64(x):
  return np.uint64(np.trunc(x))
fptoui_f32_i64 = fptoui_f64_i64 = fptoui_T_i64

def fpconv_f32_f64(x):
  return np.float64(x)

def fpconv_f64_f32(x):
  return np.float32(x)

def futhark_mul_hi8(a, b):
  a = np.uint64(np.uint8(a))
  b = np.uint64(np.uint8(b))
  return np.int8((a*b) >> np.uint64(8))

def futhark_mul_hi16(a, b):
  a = np.uint64(np.uint16(a))
  b = np.uint64(np.uint16(b))
  return np.int16((a*b) >> np.uint64(16))

def futhark_mul_hi32(a, b):
  a = np.uint64(np.uint32(a))
  b = np.uint64(np.uint32(b))
  return np.int32((a*b) >> np.uint64(32))

# This one is done with arbitrary-precision integers.
def futhark_mul_hi64(a, b):
  a = int(np.uint64(a))
  b = int(np.uint64(b))
  return np.int64(np.uint64(a*b >> 64))

def futhark_mad_hi8(a, b, c):
  return futhark_mul_hi8(a,b) + c

def futhark_mad_hi16(a, b, c):
  return futhark_mul_hi16(a,b) + c

def futhark_mad_hi32(a, b, c):
  return futhark_mul_hi32(a,b) + c

def futhark_mad_hi64(a, b, c):
  return futhark_mul_hi64(a,b) + c

def futhark_log64(x):
  return np.float64(np.log(x))

def futhark_log2_64(x):
  return np.float64(np.log2(x))

def futhark_log10_64(x):
  return np.float64(np.log10(x))

def futhark_sqrt64(x):
  return np.sqrt(x)

def futhark_exp64(x):
  return np.exp(x)

def futhark_cos64(x):
  return np.cos(x)

def futhark_sin64(x):
  return np.sin(x)

def futhark_tan64(x):
  return np.tan(x)

def futhark_acos64(x):
  return np.arccos(x)

def futhark_asin64(x):
  return np.arcsin(x)

def futhark_atan64(x):
  return np.arctan(x)

def futhark_cosh64(x):
  return np.cosh(x)

def futhark_sinh64(x):
  return np.sinh(x)

def futhark_tanh64(x):
  return np.tanh(x)

def futhark_acosh64(x):
  return np.arccosh(x)

def futhark_asinh64(x):
  return np.arcsinh(x)

def futhark_atanh64(x):
  return np.arctanh(x)

def futhark_atan2_64(x, y):
  return np.arctan2(x, y)

def futhark_gamma64(x):
  return np.float64(math.gamma(x))

def futhark_lgamma64(x):
  return np.float64(math.lgamma(x))

def futhark_round64(x):
  return np.round(x)

def futhark_ceil64(x):
  return np.ceil(x)

def futhark_floor64(x):
  return np.floor(x)

def futhark_isnan64(x):
  return np.isnan(x)

def futhark_isinf64(x):
  return np.isinf(x)

def futhark_to_bits64(x):
  s = struct.pack('>d', x)
  return np.int64(struct.unpack('>q', s)[0])

def futhark_from_bits64(x):
  s = struct.pack('>q', x)
  return np.float64(struct.unpack('>d', s)[0])

def futhark_log32(x):
  return np.float32(np.log(x))

def futhark_log2_32(x):
  return np.float32(np.log2(x))

def futhark_log10_32(x):
  return np.float32(np.log10(x))

def futhark_sqrt32(x):
  return np.float32(np.sqrt(x))

def futhark_exp32(x):
  return np.exp(x)

def futhark_cos32(x):
  return np.cos(x)

def futhark_sin32(x):
  return np.sin(x)

def futhark_tan32(x):
  return np.tan(x)

def futhark_acos32(x):
  return np.arccos(x)

def futhark_asin32(x):
  return np.arcsin(x)

def futhark_atan32(x):
  return np.arctan(x)

def futhark_cosh32(x):
  return np.cosh(x)

def futhark_sinh32(x):
  return np.sinh(x)

def futhark_tanh32(x):
  return np.tanh(x)

def futhark_acosh32(x):
  return np.arccosh(x)

def futhark_asinh32(x):
  return np.arcsinh(x)

def futhark_atanh32(x):
  return np.arctanh(x)

def futhark_atan2_32(x, y):
  return np.arctan2(x, y)

def futhark_gamma32(x):
  return np.float32(math.gamma(x))

def futhark_lgamma32(x):
  return np.float32(math.lgamma(x))

def futhark_round32(x):
  return np.round(x)

def futhark_ceil32(x):
  return np.ceil(x)

def futhark_floor32(x):
  return np.floor(x)

def futhark_isnan32(x):
  return np.isnan(x)

def futhark_isinf32(x):
  return np.isinf(x)

def futhark_to_bits32(x):
  s = struct.pack('>f', x)
  return np.int32(struct.unpack('>l', s)[0])

def futhark_from_bits32(x):
  s = struct.pack('>l', x)
  return np.float32(struct.unpack('>f', s)[0])

def futhark_lerp32(v0, v1, t):
  return v0 + (v1-v0)*t

def futhark_lerp64(v0, v1, t):
  return v0 + (v1-v0)*t

def futhark_mad32(a, b, c):
  return a * b + c

def futhark_mad64(a, b, c):
  return a * b + c

def futhark_fma32(a, b, c):
  return a * b + c

def futhark_fma64(a, b, c):
  return a * b + c

# End of scalar.py.
class bfastfinal:
  entry_points = {"main": (["i32", "i32", "i32", "f32", "f32", "f32", "[]i32",
                            "[][]f32"], ["[]i32", "[]f32", "[]f32"]),
                  "mainDetailed": (["i32", "i32", "i32", "f32", "f32", "f32",
                                    "[]i32", "[][]f32"], ["[]f32", "[]i32",
                                                          "[]i32", "[]f32",
                                                          "[][]f32", "[][]f32",
                                                          "[]f32", "[]i32",
                                                          "[]f32", "[]f32",
                                                          "[][]f32",
                                                          "[][]f32"]),
                  "remove_nans": (["i16", "[][][]i16"], ["[][][]f32"]),
                  "reshapeTransp": (["[][][]f32"], ["[][]f32"])}
  def __init__(self, command_queue=None, interactive=False,
               platform_pref=preferred_platform, device_pref=preferred_device,
               default_group_size=default_group_size,
               default_num_groups=default_num_groups,
               default_tile_size=default_tile_size,
               default_reg_tile_size=default_reg_tile_size,
               default_threshold=default_threshold, sizes=sizes):
    size_heuristics=[("NVIDIA CUDA", cl.device_type.GPU, "lockstep_width",
      lambda device: np.int32(32)), ("AMD Accelerated Parallel Processing",
                                     cl.device_type.GPU, "lockstep_width",
                                     lambda device: np.int32(32)), ("",
                                                                    cl.device_type.GPU,
                                                                    "lockstep_width",
                                                                    lambda device: np.int32(1)),
     ("", cl.device_type.GPU, "num_groups",
      lambda device: (np.int32(4) * device.get_info(getattr(cl.device_info,
                                                            "MAX_COMPUTE_UNITS")))),
     ("", cl.device_type.GPU, "group_size", lambda device: np.int32(256)), ("",
                                                                            cl.device_type.GPU,
                                                                            "tile_size",
                                                                            lambda device: np.int32(32)),
     ("", cl.device_type.GPU, "reg_tile_size", lambda device: np.int32(2)), ("",
                                                                             cl.device_type.GPU,
                                                                             "threshold",
                                                                             lambda device: np.int32(32768)),
     ("", cl.device_type.CPU, "lockstep_width", lambda device: np.int32(1)), ("",
                                                                              cl.device_type.CPU,
                                                                              "num_groups",
                                                                              lambda device: device.get_info(getattr(cl.device_info,
                                                                                                                     "MAX_COMPUTE_UNITS"))),
     ("", cl.device_type.CPU, "group_size", lambda device: np.int32(32)), ("",
                                                                           cl.device_type.CPU,
                                                                           "tile_size",
                                                                           lambda device: np.int32(4)),
     ("", cl.device_type.CPU, "reg_tile_size", lambda device: np.int32(1)), ("",
                                                                             cl.device_type.CPU,
                                                                             "threshold",
                                                                             lambda device: device.get_info(getattr(cl.device_info,
                                                                                                                    "MAX_COMPUTE_UNITS")))]
    self.global_failure_args_max = 2
    self.failure_msgs=["Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:143:70-84\n   #1  bfastfinal.fut:143:29-146:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:121:50-165:9\n   #4  bfastfinal.fut:182:5-58\n   #5  bfastfinal.fut:177:1-183:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:144:45-59\n   #1  bfastfinal.fut:143:29-146:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:121:50-165:9\n   #4  bfastfinal.fut:182:5-58\n   #5  bfastfinal.fut:177:1-183:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-149:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-149:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:8:17-21\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:143:29-149:54\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:121:50-165:9\n   #6  bfastfinal.fut:182:5-58\n   #7  bfastfinal.fut:177:1-183:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:9:20-24\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:143:29-149:54\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:121:50-165:9\n   #6  bfastfinal.fut:182:5-58\n   #7  bfastfinal.fut:177:1-183:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-149:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-149:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:156:51-55\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-157:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:156:59-63\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-157:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:157:45-49\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-157:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:143:70-84\n   #1  bfastfinal.fut:143:29-146:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:121:50-165:9\n   #4  bfastfinal.fut:182:5-58\n   #5  bfastfinal.fut:177:1-183:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:144:45-59\n   #1  bfastfinal.fut:143:29-146:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:121:50-165:9\n   #4  bfastfinal.fut:182:5-58\n   #5  bfastfinal.fut:177:1-183:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-149:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-149:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:8:17-21\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:143:29-149:54\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:121:50-165:9\n   #6  bfastfinal.fut:182:5-58\n   #7  bfastfinal.fut:177:1-183:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:9:20-24\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:143:29-149:54\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:121:50-165:9\n   #6  bfastfinal.fut:182:5-58\n   #7  bfastfinal.fut:177:1-183:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-149:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-149:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:156:51-55\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-157:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:156:59-63\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-157:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:157:45-49\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-157:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:143:70-84\n   #1  bfastfinal.fut:143:29-146:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:121:50-165:9\n   #4  bfastfinal.fut:175:3-56\n   #5  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:144:45-59\n   #1  bfastfinal.fut:143:29-146:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:121:50-165:9\n   #4  bfastfinal.fut:175:3-56\n   #5  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-149:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-149:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:8:17-21\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:143:29-149:54\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:121:50-165:9\n   #6  bfastfinal.fut:175:3-56\n   #7  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:9:20-24\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:143:29-149:54\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:121:50-165:9\n   #6  bfastfinal.fut:175:3-56\n   #7  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-149:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-149:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:156:51-55\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-157:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:156:59-63\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-157:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:157:45-49\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-157:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:143:70-84\n   #1  bfastfinal.fut:143:29-146:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:121:50-165:9\n   #4  bfastfinal.fut:175:3-56\n   #5  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:144:45-59\n   #1  bfastfinal.fut:143:29-146:52\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:121:50-165:9\n   #4  bfastfinal.fut:175:3-56\n   #5  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-149:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-149:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:8:17-21\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:143:29-149:54\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:121:50-165:9\n   #6  bfastfinal.fut:175:3-56\n   #7  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:9:20-24\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:143:29-149:54\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:121:50-165:9\n   #6  bfastfinal.fut:175:3-56\n   #7  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-149:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-149:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:156:51-55\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-157:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:156:59-63\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-157:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:157:45-49\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-157:50\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n"]
    program = initialise_opencl_object(self,
                                       program_src=fut_opencl_src,
                                       command_queue=command_queue,
                                       interactive=interactive,
                                       platform_pref=platform_pref,
                                       device_pref=device_pref,
                                       default_group_size=default_group_size,
                                       default_num_groups=default_num_groups,
                                       default_tile_size=default_tile_size,
                                       default_threshold=default_threshold,
                                       size_heuristics=size_heuristics,
                                       required_types=["i16", "i32", "i64", "f32", "bool", "cert"],
                                       user_sizes=sizes,
                                       all_sizes={"builtin#replicate_f32.group_size_40453": {"class": "group_size",
                                                                                   "value": None},
                                        "builtin#replicate_i32.group_size_40462": {"class": "group_size",
                                                                                   "value": None},
                                        "main.Rx_36985": {"class": "reg_tile_size", "value": None},
                                        "main.Rx_37726": {"class": "reg_tile_size", "value": None},
                                        "main.Ry_36986": {"class": "reg_tile_size", "value": None},
                                        "main.Ry_37727": {"class": "reg_tile_size", "value": None},
                                        "main.Tk_36982": {"class": "tile_size", "value": None},
                                        "main.Tk_37723": {"class": "tile_size", "value": None},
                                        "main.Tx_36837": {"class": "tile_size", "value": None},
                                        "main.Tx_36983": {"class": "tile_size", "value": None},
                                        "main.Tx_37724": {"class": "tile_size", "value": None},
                                        "main.Ty_36838": {"class": "tile_size", "value": None},
                                        "main.Ty_36984": {"class": "tile_size", "value": None},
                                        "main.Ty_37725": {"class": "tile_size", "value": None},
                                        "main.group_size_40062": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_32794": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_32972": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_33100": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_33132": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_33179": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_33664": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_33829": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_33883": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_33950": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_34044": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_34224": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_34365": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_34497": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_34778": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_34853": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_35002": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_35104": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_35251": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_35375": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_36056": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_36195": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_36256": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_36382": {"class": "group_size", "value": None},
                                        "main.segmap_num_groups_33134": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_33181": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_34226": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_34367": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_34499": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_36384": {"class": "num_groups", "value": None},
                                        "main.segred_group_size_33239": {"class": "group_size", "value": None},
                                        "main.segred_group_size_34286": {"class": "group_size", "value": None},
                                        "main.segred_group_size_34423": {"class": "group_size", "value": None},
                                        "main.segred_group_size_34553": {"class": "group_size", "value": None},
                                        "main.segred_group_size_35119": {"class": "group_size", "value": None},
                                        "main.segred_group_size_35140": {"class": "group_size", "value": None},
                                        "main.segred_group_size_35207": {"class": "group_size", "value": None},
                                        "main.segred_group_size_35291": {"class": "group_size", "value": None},
                                        "main.segred_group_size_36287": {"class": "group_size", "value": None},
                                        "main.segred_num_groups_33241": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_34288": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_34425": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_34555": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_35121": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_35142": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_35209": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_35293": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_36289": {"class": "num_groups", "value": None},
                                        "main.segscan_group_size_34862": {"class": "group_size", "value": None},
                                        "main.segscan_group_size_36341": {"class": "group_size", "value": None},
                                        "main.segscan_num_groups_34864": {"class": "num_groups", "value": None},
                                        "main.segscan_num_groups_36343": {"class": "num_groups", "value": None},
                                        "main.suff_intra_par_11": {"class": "threshold ()", "value": 32},
                                        "main.suff_intra_par_13": {"class": "threshold (!main.suff_intra_par_11)",
                                                                   "value": 32},
                                        "main.suff_intra_par_24": {"class": "threshold ()", "value": 32},
                                        "main.suff_intra_par_29": {"class": "threshold (!main.suff_outer_par_28)",
                                                                   "value": 32},
                                        "main.suff_intra_par_34": {"class": "threshold ()", "value": 32},
                                        "main.suff_outer_par_16": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_17": {"class": "threshold (!main.suff_outer_par_16)",
                                                                   "value": None},
                                        "main.suff_outer_par_18": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_19": {"class": "threshold (!main.suff_outer_par_18)",
                                                                   "value": None},
                                        "main.suff_outer_par_20": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_21": {"class": "threshold (!main.suff_outer_par_20)",
                                                                   "value": None},
                                        "main.suff_outer_par_28": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_31": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_6": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_7": {"class": "threshold (!main.suff_outer_par_6)",
                                                                  "value": None},
                                        "main.suff_outer_par_8": {"class": "threshold (!main.suff_outer_par_7 !main.suff_outer_par_6)",
                                                                  "value": None},
                                        "main.tile_size_37449": {"class": "tile_size", "value": None},
                                        "mainDetailed.Rx_36985": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Rx_37726": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Ry_36986": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Ry_37727": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Tk_36982": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tk_37723": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tx_36837": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tx_36983": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tx_37724": {"class": "tile_size", "value": None},
                                        "mainDetailed.Ty_36838": {"class": "tile_size", "value": None},
                                        "mainDetailed.Ty_36984": {"class": "tile_size", "value": None},
                                        "mainDetailed.Ty_37725": {"class": "tile_size", "value": None},
                                        "mainDetailed.group_size_40084": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_28677": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_28855": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_28983": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_29015": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_29062": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_29547": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_29712": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_29766": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_29833": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_29927": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30107": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30248": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30380": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30661": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30736": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30885": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30987": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31134": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31258": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31987": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32039": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32178": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32236": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32253": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32374": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_num_groups_29017": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_29064": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_30109": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_30250": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_30382": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_32376": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_group_size_29122": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_30169": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_30306": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_30436": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31002": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31023": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31090": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31174": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_32279": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_num_groups_29124": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_30171": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_30308": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_30438": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31004": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31025": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31092": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31176": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_32281": {"class": "num_groups", "value": None},
                                        "mainDetailed.segscan_group_size_30745": {"class": "group_size",
                                                                                  "value": None},
                                        "mainDetailed.segscan_group_size_32333": {"class": "group_size",
                                                                                  "value": None},
                                        "mainDetailed.segscan_num_groups_30747": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainDetailed.segscan_num_groups_32335": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainDetailed.suff_intra_par_11": {"class": "threshold ()", "value": 32},
                                        "mainDetailed.suff_intra_par_13": {"class": "threshold (!mainDetailed.suff_intra_par_11)",
                                                                           "value": 32},
                                        "mainDetailed.suff_intra_par_24": {"class": "threshold ()", "value": 32},
                                        "mainDetailed.suff_intra_par_29": {"class": "threshold (!mainDetailed.suff_outer_par_28)",
                                                                           "value": 32},
                                        "mainDetailed.suff_intra_par_34": {"class": "threshold ()", "value": 32},
                                        "mainDetailed.suff_outer_par_16": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_17": {"class": "threshold (!mainDetailed.suff_outer_par_16)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_18": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_19": {"class": "threshold (!mainDetailed.suff_outer_par_18)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_20": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_21": {"class": "threshold (!mainDetailed.suff_outer_par_20)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_28": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_31": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_6": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_7": {"class": "threshold (!mainDetailed.suff_outer_par_6)",
                                                                          "value": None},
                                        "mainDetailed.suff_outer_par_8": {"class": "threshold (!mainDetailed.suff_outer_par_7 !mainDetailed.suff_outer_par_6)",
                                                                          "value": None},
                                        "mainDetailed.tile_size_37449": {"class": "tile_size", "value": None},
                                        "remove_nans.segmap_group_size_28519": {"class": "group_size", "value": None}})
    self.builtinzhreplicate_f32zireplicate_40450_var = program.builtinzhreplicate_f32zireplicate_40450
    self.builtinzhreplicate_i32zireplicate_40459_var = program.builtinzhreplicate_i32zireplicate_40459
    self.gpu_map_transpose_f32_var = program.gpu_map_transpose_f32
    self.gpu_map_transpose_f32_low_height_var = program.gpu_map_transpose_f32_low_height
    self.gpu_map_transpose_f32_low_width_var = program.gpu_map_transpose_f32_low_width
    self.gpu_map_transpose_f32_small_var = program.gpu_map_transpose_f32_small
    self.mainzicopy_40059_var = program.mainzicopy_40059
    self.mainziscan_stage1_34868_var = program.mainziscan_stage1_34868
    self.mainziscan_stage1_36347_var = program.mainziscan_stage1_36347
    self.mainziscan_stage2_34868_var = program.mainziscan_stage2_34868
    self.mainziscan_stage2_36347_var = program.mainziscan_stage2_36347
    self.mainziscan_stage3_34868_var = program.mainziscan_stage3_34868
    self.mainziscan_stage3_36347_var = program.mainziscan_stage3_36347
    self.mainzisegmap_32791_var = program.mainzisegmap_32791
    self.mainzisegmap_32969_var = program.mainzisegmap_32969
    self.mainzisegmap_33097_var = program.mainzisegmap_33097
    self.mainzisegmap_33130_var = program.mainzisegmap_33130
    self.mainzisegmap_33176_var = program.mainzisegmap_33176
    self.mainzisegmap_33660_var = program.mainzisegmap_33660
    self.mainzisegmap_33826_var = program.mainzisegmap_33826
    self.mainzisegmap_33880_var = program.mainzisegmap_33880
    self.mainzisegmap_33948_var = program.mainzisegmap_33948
    self.mainzisegmap_34041_var = program.mainzisegmap_34041
    self.mainzisegmap_34222_var = program.mainzisegmap_34222
    self.mainzisegmap_34363_var = program.mainzisegmap_34363
    self.mainzisegmap_34495_var = program.mainzisegmap_34495
    self.mainzisegmap_34775_var = program.mainzisegmap_34775
    self.mainzisegmap_34851_var = program.mainzisegmap_34851
    self.mainzisegmap_35102_var = program.mainzisegmap_35102
    self.mainzisegmap_35373_var = program.mainzisegmap_35373
    self.mainzisegmap_36054_var = program.mainzisegmap_36054
    self.mainzisegmap_36192_var = program.mainzisegmap_36192
    self.mainzisegmap_36254_var = program.mainzisegmap_36254
    self.mainzisegmap_36380_var = program.mainzisegmap_36380
    self.mainzisegmap_intragroup_33480_var = program.mainzisegmap_intragroup_33480
    self.mainzisegmap_intragroup_33707_var = program.mainzisegmap_intragroup_33707
    self.mainzisegmap_intragroup_34658_var = program.mainzisegmap_intragroup_34658
    self.mainzisegmap_intragroup_34998_var = program.mainzisegmap_intragroup_34998
    self.mainzisegmap_intragroup_35440_var = program.mainzisegmap_intragroup_35440
    self.mainzisegmap_intragroup_36853_var = program.mainzisegmap_intragroup_36853
    self.mainzisegmap_intragroup_37006_var = program.mainzisegmap_intragroup_37006
    self.mainzisegmap_intragroup_37455_var = program.mainzisegmap_intragroup_37455
    self.mainzisegmap_intragroup_37747_var = program.mainzisegmap_intragroup_37747
    self.mainzisegmap_intragroup_38181_var = program.mainzisegmap_intragroup_38181
    self.mainzisegmap_intragroup_38413_var = program.mainzisegmap_intragroup_38413
    self.mainzisegred_large_33245_var = program.mainzisegred_large_33245
    self.mainzisegred_large_34292_var = program.mainzisegred_large_34292
    self.mainzisegred_large_34429_var = program.mainzisegred_large_34429
    self.mainzisegred_large_34559_var = program.mainzisegred_large_34559
    self.mainzisegred_large_35125_var = program.mainzisegred_large_35125
    self.mainzisegred_large_35146_var = program.mainzisegred_large_35146
    self.mainzisegred_large_35297_var = program.mainzisegred_large_35297
    self.mainzisegred_large_36293_var = program.mainzisegred_large_36293
    self.mainzisegred_nonseg_35215_var = program.mainzisegred_nonseg_35215
    self.mainzisegred_small_33245_var = program.mainzisegred_small_33245
    self.mainzisegred_small_34292_var = program.mainzisegred_small_34292
    self.mainzisegred_small_34429_var = program.mainzisegred_small_34429
    self.mainzisegred_small_34559_var = program.mainzisegred_small_34559
    self.mainzisegred_small_35125_var = program.mainzisegred_small_35125
    self.mainzisegred_small_35146_var = program.mainzisegred_small_35146
    self.mainzisegred_small_35297_var = program.mainzisegred_small_35297
    self.mainzisegred_small_36293_var = program.mainzisegred_small_36293
    self.mainDetailedzicopy_40081_var = program.mainDetailedzicopy_40081
    self.mainDetailedziscan_stage1_30751_var = program.mainDetailedziscan_stage1_30751
    self.mainDetailedziscan_stage1_32339_var = program.mainDetailedziscan_stage1_32339
    self.mainDetailedziscan_stage2_30751_var = program.mainDetailedziscan_stage2_30751
    self.mainDetailedziscan_stage2_32339_var = program.mainDetailedziscan_stage2_32339
    self.mainDetailedziscan_stage3_30751_var = program.mainDetailedziscan_stage3_30751
    self.mainDetailedziscan_stage3_32339_var = program.mainDetailedziscan_stage3_32339
    self.mainDetailedzisegmap_28674_var = program.mainDetailedzisegmap_28674
    self.mainDetailedzisegmap_28852_var = program.mainDetailedzisegmap_28852
    self.mainDetailedzisegmap_28980_var = program.mainDetailedzisegmap_28980
    self.mainDetailedzisegmap_29013_var = program.mainDetailedzisegmap_29013
    self.mainDetailedzisegmap_29059_var = program.mainDetailedzisegmap_29059
    self.mainDetailedzisegmap_29543_var = program.mainDetailedzisegmap_29543
    self.mainDetailedzisegmap_29709_var = program.mainDetailedzisegmap_29709
    self.mainDetailedzisegmap_29763_var = program.mainDetailedzisegmap_29763
    self.mainDetailedzisegmap_29831_var = program.mainDetailedzisegmap_29831
    self.mainDetailedzisegmap_29924_var = program.mainDetailedzisegmap_29924
    self.mainDetailedzisegmap_30105_var = program.mainDetailedzisegmap_30105
    self.mainDetailedzisegmap_30246_var = program.mainDetailedzisegmap_30246
    self.mainDetailedzisegmap_30378_var = program.mainDetailedzisegmap_30378
    self.mainDetailedzisegmap_30658_var = program.mainDetailedzisegmap_30658
    self.mainDetailedzisegmap_30734_var = program.mainDetailedzisegmap_30734
    self.mainDetailedzisegmap_30985_var = program.mainDetailedzisegmap_30985
    self.mainDetailedzisegmap_31256_var = program.mainDetailedzisegmap_31256
    self.mainDetailedzisegmap_31984_var = program.mainDetailedzisegmap_31984
    self.mainDetailedzisegmap_32037_var = program.mainDetailedzisegmap_32037
    self.mainDetailedzisegmap_32175_var = program.mainDetailedzisegmap_32175
    self.mainDetailedzisegmap_32234_var = program.mainDetailedzisegmap_32234
    self.mainDetailedzisegmap_32251_var = program.mainDetailedzisegmap_32251
    self.mainDetailedzisegmap_32372_var = program.mainDetailedzisegmap_32372
    self.mainDetailedzisegmap_intragroup_29363_var = program.mainDetailedzisegmap_intragroup_29363
    self.mainDetailedzisegmap_intragroup_29590_var = program.mainDetailedzisegmap_intragroup_29590
    self.mainDetailedzisegmap_intragroup_30541_var = program.mainDetailedzisegmap_intragroup_30541
    self.mainDetailedzisegmap_intragroup_30881_var = program.mainDetailedzisegmap_intragroup_30881
    self.mainDetailedzisegmap_intragroup_31325_var = program.mainDetailedzisegmap_intragroup_31325
    self.mainDetailedzisegmap_intragroup_36853_var = program.mainDetailedzisegmap_intragroup_36853
    self.mainDetailedzisegmap_intragroup_37006_var = program.mainDetailedzisegmap_intragroup_37006
    self.mainDetailedzisegmap_intragroup_37455_var = program.mainDetailedzisegmap_intragroup_37455
    self.mainDetailedzisegmap_intragroup_37747_var = program.mainDetailedzisegmap_intragroup_37747
    self.mainDetailedzisegmap_intragroup_38181_var = program.mainDetailedzisegmap_intragroup_38181
    self.mainDetailedzisegmap_intragroup_38413_var = program.mainDetailedzisegmap_intragroup_38413
    self.mainDetailedzisegred_large_29128_var = program.mainDetailedzisegred_large_29128
    self.mainDetailedzisegred_large_30175_var = program.mainDetailedzisegred_large_30175
    self.mainDetailedzisegred_large_30312_var = program.mainDetailedzisegred_large_30312
    self.mainDetailedzisegred_large_30442_var = program.mainDetailedzisegred_large_30442
    self.mainDetailedzisegred_large_31008_var = program.mainDetailedzisegred_large_31008
    self.mainDetailedzisegred_large_31029_var = program.mainDetailedzisegred_large_31029
    self.mainDetailedzisegred_large_31180_var = program.mainDetailedzisegred_large_31180
    self.mainDetailedzisegred_large_32285_var = program.mainDetailedzisegred_large_32285
    self.mainDetailedzisegred_nonseg_31098_var = program.mainDetailedzisegred_nonseg_31098
    self.mainDetailedzisegred_small_29128_var = program.mainDetailedzisegred_small_29128
    self.mainDetailedzisegred_small_30175_var = program.mainDetailedzisegred_small_30175
    self.mainDetailedzisegred_small_30312_var = program.mainDetailedzisegred_small_30312
    self.mainDetailedzisegred_small_30442_var = program.mainDetailedzisegred_small_30442
    self.mainDetailedzisegred_small_31008_var = program.mainDetailedzisegred_small_31008
    self.mainDetailedzisegred_small_31029_var = program.mainDetailedzisegred_small_31029
    self.mainDetailedzisegred_small_31180_var = program.mainDetailedzisegred_small_31180
    self.mainDetailedzisegred_small_32285_var = program.mainDetailedzisegred_small_32285
    self.remove_nanszisegmap_28515_var = program.remove_nanszisegmap_28515
    self.constants = {}
    mainzicounter_mem_39995 = np.zeros(10240, dtype=np.int32)
    static_mem_41059 = opencl_alloc(self, 40960, "static_mem_41059")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_41059,
                      normaliseArray(mainzicounter_mem_39995),
                      is_blocking=synchronous)
    self.mainzicounter_mem_39995 = static_mem_41059
    mainzicounter_mem_40191 = np.zeros(10240, dtype=np.int32)
    static_mem_41062 = opencl_alloc(self, 40960, "static_mem_41062")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_41062,
                      normaliseArray(mainzicounter_mem_40191),
                      is_blocking=synchronous)
    self.mainzicounter_mem_40191 = static_mem_41062
    mainzicounter_mem_40279 = np.zeros(10240, dtype=np.int32)
    static_mem_41063 = opencl_alloc(self, 40960, "static_mem_41063")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_41063,
                      normaliseArray(mainzicounter_mem_40279),
                      is_blocking=synchronous)
    self.mainzicounter_mem_40279 = static_mem_41063
    mainzicounter_mem_40411 = np.zeros(10240, dtype=np.int32)
    static_mem_41064 = opencl_alloc(self, 40960, "static_mem_41064")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_41064,
                      normaliseArray(mainzicounter_mem_40411),
                      is_blocking=synchronous)
    self.mainzicounter_mem_40411 = static_mem_41064
    mainzicounter_mem_40605 = np.zeros(10240, dtype=np.int32)
    static_mem_41065 = opencl_alloc(self, 40960, "static_mem_41065")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_41065,
                      normaliseArray(mainzicounter_mem_40605),
                      is_blocking=synchronous)
    self.mainzicounter_mem_40605 = static_mem_41065
    mainzicounter_mem_40665 = np.zeros(10240, dtype=np.int32)
    static_mem_41066 = opencl_alloc(self, 40960, "static_mem_41066")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_41066,
                      normaliseArray(mainzicounter_mem_40665),
                      is_blocking=synchronous)
    self.mainzicounter_mem_40665 = static_mem_41066
    mainzicounter_mem_40705 = np.array([np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0)], dtype=np.int32)
    static_mem_41067 = opencl_alloc(self, 40, "static_mem_41067")
    if (40 != 0):
      cl.enqueue_copy(self.queue, static_mem_41067,
                      normaliseArray(mainzicounter_mem_40705),
                      is_blocking=synchronous)
    self.mainzicounter_mem_40705 = static_mem_41067
    mainzicounter_mem_40774 = np.zeros(10240, dtype=np.int32)
    static_mem_41069 = opencl_alloc(self, 40960, "static_mem_41069")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_41069,
                      normaliseArray(mainzicounter_mem_40774),
                      is_blocking=synchronous)
    self.mainzicounter_mem_40774 = static_mem_41069
    mainzicounter_mem_40955 = np.zeros(10240, dtype=np.int32)
    static_mem_41071 = opencl_alloc(self, 40960, "static_mem_41071")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_41071,
                      normaliseArray(mainzicounter_mem_40955),
                      is_blocking=synchronous)
    self.mainzicounter_mem_40955 = static_mem_41071
    mainDetailedzicounter_mem_40017 = np.zeros(10240, dtype=np.int32)
    static_mem_41072 = opencl_alloc(self, 40960, "static_mem_41072")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_41072,
                      normaliseArray(mainDetailedzicounter_mem_40017),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_40017 = static_mem_41072
    mainDetailedzicounter_mem_40213 = np.zeros(10240, dtype=np.int32)
    static_mem_41075 = opencl_alloc(self, 40960, "static_mem_41075")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_41075,
                      normaliseArray(mainDetailedzicounter_mem_40213),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_40213 = static_mem_41075
    mainDetailedzicounter_mem_40301 = np.zeros(10240, dtype=np.int32)
    static_mem_41076 = opencl_alloc(self, 40960, "static_mem_41076")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_41076,
                      normaliseArray(mainDetailedzicounter_mem_40301),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_40301 = static_mem_41076
    mainDetailedzicounter_mem_40433 = np.zeros(10240, dtype=np.int32)
    static_mem_41077 = opencl_alloc(self, 40960, "static_mem_41077")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_41077,
                      normaliseArray(mainDetailedzicounter_mem_40433),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_40433 = static_mem_41077
    mainDetailedzicounter_mem_40627 = np.zeros(10240, dtype=np.int32)
    static_mem_41078 = opencl_alloc(self, 40960, "static_mem_41078")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_41078,
                      normaliseArray(mainDetailedzicounter_mem_40627),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_40627 = static_mem_41078
    mainDetailedzicounter_mem_40687 = np.zeros(10240, dtype=np.int32)
    static_mem_41079 = opencl_alloc(self, 40960, "static_mem_41079")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_41079,
                      normaliseArray(mainDetailedzicounter_mem_40687),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_40687 = static_mem_41079
    mainDetailedzicounter_mem_40727 = np.array([np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0)],
                                               dtype=np.int32)
    static_mem_41080 = opencl_alloc(self, 40, "static_mem_41080")
    if (40 != 0):
      cl.enqueue_copy(self.queue, static_mem_41080,
                      normaliseArray(mainDetailedzicounter_mem_40727),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_40727 = static_mem_41080
    mainDetailedzicounter_mem_40796 = np.zeros(10240, dtype=np.int32)
    static_mem_41082 = opencl_alloc(self, 40960, "static_mem_41082")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_41082,
                      normaliseArray(mainDetailedzicounter_mem_40796),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_40796 = static_mem_41082
    mainDetailedzicounter_mem_40977 = np.zeros(10240, dtype=np.int32)
    static_mem_41084 = opencl_alloc(self, 40960, "static_mem_41084")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_41084,
                      normaliseArray(mainDetailedzicounter_mem_40977),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_40977 = static_mem_41084
  def futhark_builtinzhgpu_map_transpose_f32(self, destmem_0, destoffset_1,
                                             srcmem_2, srcoffset_3,
                                             num_arrays_4, x_elems_5,
                                             y_elems_6):
    if ((num_arrays_4 == np.int32(0)) or ((x_elems_5 == np.int32(0)) or (y_elems_6 == np.int32(0)))):
      pass
    else:
      muly_8 = squot32(np.int32(16), x_elems_5)
      mulx_7 = squot32(np.int32(16), y_elems_6)
      if ((num_arrays_4 == np.int32(1)) and ((x_elems_5 == np.int32(1)) or (y_elems_6 == np.int32(1)))):
        if (sext_i32_i64(((x_elems_5 * y_elems_6) * np.int32(4))) != 0):
          cl.enqueue_copy(self.queue, destmem_0, srcmem_2,
                          dest_offset=np.long(sext_i32_i64(destoffset_1)),
                          src_offset=np.long(sext_i32_i64(srcoffset_3)),
                          byte_count=np.long(sext_i32_i64(((x_elems_5 * y_elems_6) * np.int32(4)))))
        if synchronous:
          sync(self)
      else:
        if (sle32(x_elems_5, np.int32(8)) and slt32(np.int32(16), y_elems_6)):
          if ((((1 * (np.long(sdiv_up32(x_elems_5,
                                        np.int32(16))) * np.long(np.int32(16)))) * (np.long(sdiv_up32(sdiv_up32(y_elems_6,
                                                                                                                muly_8),
                                                                                                      np.int32(16))) * np.long(np.int32(16)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
            self.gpu_map_transpose_f32_low_width_var.set_args(cl.LocalMemory(np.long(np.int64(1088))),
                                                              np.int32(destoffset_1),
                                                              np.int32(srcoffset_3),
                                                              np.int32(num_arrays_4),
                                                              np.int32(x_elems_5),
                                                              np.int32(y_elems_6),
                                                              np.int32(mulx_7),
                                                              np.int32(muly_8),
                                                              destmem_0,
                                                              srcmem_2)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.gpu_map_transpose_f32_low_width_var,
                                       ((np.long(sdiv_up32(x_elems_5,
                                                           np.int32(16))) * np.long(np.int32(16))),
                                        (np.long(sdiv_up32(sdiv_up32(y_elems_6,
                                                                     muly_8),
                                                           np.int32(16))) * np.long(np.int32(16))),
                                        (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                       (np.long(np.int32(16)),
                                        np.long(np.int32(16)),
                                        np.long(np.int32(1))))
            if synchronous:
              sync(self)
        else:
          if (sle32(y_elems_6, np.int32(8)) and slt32(np.int32(16), x_elems_5)):
            if ((((1 * (np.long(sdiv_up32(sdiv_up32(x_elems_5, mulx_7),
                                          np.int32(16))) * np.long(np.int32(16)))) * (np.long(sdiv_up32(y_elems_6,
                                                                                                        np.int32(16))) * np.long(np.int32(16)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
              self.gpu_map_transpose_f32_low_height_var.set_args(cl.LocalMemory(np.long(np.int64(1088))),
                                                                 np.int32(destoffset_1),
                                                                 np.int32(srcoffset_3),
                                                                 np.int32(num_arrays_4),
                                                                 np.int32(x_elems_5),
                                                                 np.int32(y_elems_6),
                                                                 np.int32(mulx_7),
                                                                 np.int32(muly_8),
                                                                 destmem_0,
                                                                 srcmem_2)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.gpu_map_transpose_f32_low_height_var,
                                         ((np.long(sdiv_up32(sdiv_up32(x_elems_5,
                                                                       mulx_7),
                                                             np.int32(16))) * np.long(np.int32(16))),
                                          (np.long(sdiv_up32(y_elems_6,
                                                             np.int32(16))) * np.long(np.int32(16))),
                                          (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                         (np.long(np.int32(16)),
                                          np.long(np.int32(16)),
                                          np.long(np.int32(1))))
              if synchronous:
                sync(self)
          else:
            if (sle32(x_elems_5, np.int32(8)) and sle32(y_elems_6,
                                                        np.int32(8))):
              if ((1 * (np.long(sdiv_up32(((num_arrays_4 * x_elems_5) * y_elems_6),
                                          np.int32(256))) * np.long(np.int32(256)))) != 0):
                self.gpu_map_transpose_f32_small_var.set_args(cl.LocalMemory(np.long(np.int64(1))),
                                                              np.int32(destoffset_1),
                                                              np.int32(srcoffset_3),
                                                              np.int32(num_arrays_4),
                                                              np.int32(x_elems_5),
                                                              np.int32(y_elems_6),
                                                              np.int32(mulx_7),
                                                              np.int32(muly_8),
                                                              destmem_0,
                                                              srcmem_2)
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.gpu_map_transpose_f32_small_var,
                                           ((np.long(sdiv_up32(((num_arrays_4 * x_elems_5) * y_elems_6),
                                                               np.int32(256))) * np.long(np.int32(256))),),
                                           (np.long(np.int32(256)),))
                if synchronous:
                  sync(self)
            else:
              if ((((1 * (np.long(sdiv_up32(x_elems_5,
                                            np.int32(32))) * np.long(np.int32(32)))) * (np.long(sdiv_up32(y_elems_6,
                                                                                                          np.int32(32))) * np.long(np.int32(8)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
                self.gpu_map_transpose_f32_var.set_args(cl.LocalMemory(np.long(np.int64(4224))),
                                                        np.int32(destoffset_1),
                                                        np.int32(srcoffset_3),
                                                        np.int32(num_arrays_4),
                                                        np.int32(x_elems_5),
                                                        np.int32(y_elems_6),
                                                        np.int32(mulx_7),
                                                        np.int32(muly_8),
                                                        destmem_0, srcmem_2)
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.gpu_map_transpose_f32_var,
                                           ((np.long(sdiv_up32(x_elems_5,
                                                               np.int32(32))) * np.long(np.int32(32))),
                                            (np.long(sdiv_up32(y_elems_6,
                                                               np.int32(32))) * np.long(np.int32(8))),
                                            (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                           (np.long(np.int32(32)),
                                            np.long(np.int32(8)),
                                            np.long(np.int32(1))))
                if synchronous:
                  sync(self)
    return ()
  def futhark_builtinzhreplicate_f32(self, mem_40446, num_elems_40447,
                                     val_40448):
    group_sizze_40453 = self.sizes["builtin#replicate_f32.group_size_40453"]
    num_groups_40454 = sdiv_up64(num_elems_40447, group_sizze_40453)
    if ((1 * (np.long(num_groups_40454) * np.long(group_sizze_40453))) != 0):
      self.builtinzhreplicate_f32zireplicate_40450_var.set_args(mem_40446,
                                                                np.int32(num_elems_40447),
                                                                np.float32(val_40448))
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.builtinzhreplicate_f32zireplicate_40450_var,
                                 ((np.long(num_groups_40454) * np.long(group_sizze_40453)),),
                                 (np.long(group_sizze_40453),))
      if synchronous:
        sync(self)
    return ()
  def futhark_builtinzhreplicate_i32(self, mem_40455, num_elems_40456,
                                     val_40457):
    group_sizze_40462 = self.sizes["builtin#replicate_i32.group_size_40462"]
    num_groups_40463 = sdiv_up64(num_elems_40456, group_sizze_40462)
    if ((1 * (np.long(num_groups_40463) * np.long(group_sizze_40462))) != 0):
      self.builtinzhreplicate_i32zireplicate_40459_var.set_args(mem_40455,
                                                                np.int32(num_elems_40456),
                                                                np.int32(val_40457))
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.builtinzhreplicate_i32zireplicate_40459_var,
                                 ((np.long(num_groups_40463) * np.long(group_sizze_40462)),),
                                 (np.long(group_sizze_40462),))
      if synchronous:
        sync(self)
    return ()
  def futhark_main(self, mappingindices_mem_38681, images_mem_38682, N_27808,
                   m_27809, N_27810, trend_27811, k_27812, n_27813, freq_27814,
                   hfrac_27815, lam_27816):
    dim_match_27819 = (N_27808 == N_27810)
    empty_or_match_cert_27820 = True
    assert dim_match_27819, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:177:1-183:32\n" % ("function arguments of wrong shape",))
    i32_res_27822 = sext_i32_i64(n_27813)
    x_27823 = (np.int32(2) * k_27812)
    k2p2_27824 = (np.int32(2) + x_27823)
    cond_27825 = slt32(np.int32(0), trend_27811)
    if cond_27825:
      k2p2zq_27826 = k2p2_27824
    else:
      k2p2zq_f_res_27827 = (k2p2_27824 - np.int32(1))
      k2p2zq_27826 = k2p2zq_f_res_27827
    i32_res_27828 = sext_i32_i64(k2p2zq_27826)
    binop_x_38685 = (N_27808 * i32_res_27828)
    bytes_38684 = (np.int64(4) * binop_x_38685)
    if cond_27825:
      bounds_invalid_upwards_27830 = slt64(i32_res_27828, np.int64(0))
      valid_27831 = not(bounds_invalid_upwards_27830)
      range_valid_c_27832 = True
      assert valid_27831, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:37:10-20\n   #3  bfastfinal.fut:31:17-66\n   #4  bfastfinal.fut:182:5-58\n   #5  bfastfinal.fut:177:1-183:32\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_27828,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_32864 = self.sizes["main.segmap_group_size_32794"]
      segmap_usable_groups_32865 = sdiv_up64(binop_x_38685,
                                             segmap_group_sizze_32864)
      mem_38686 = opencl_alloc(self, bytes_38684, "mem_38686")
      if ((1 * (np.long(segmap_usable_groups_32865) * np.long(segmap_group_sizze_32864))) != 0):
        self.mainzisegmap_32791_var.set_args(self.global_failure,
                                             np.int64(N_27808),
                                             np.float32(freq_27814),
                                             np.int64(i32_res_27828),
                                             mappingindices_mem_38681,
                                             mem_38686)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_32791_var,
                                   ((np.long(segmap_usable_groups_32865) * np.long(segmap_group_sizze_32864)),),
                                   (np.long(segmap_group_sizze_32864),))
        if synchronous:
          sync(self)
      binop_p_mem_38691 = mem_38686
    else:
      bounds_invalid_upwards_27856 = slt64(i32_res_27828, np.int64(0))
      valid_27857 = not(bounds_invalid_upwards_27856)
      range_valid_c_27858 = True
      assert valid_27857, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:49:10-22\n   #3  bfastfinal.fut:32:17-64\n   #4  bfastfinal.fut:182:5-58\n   #5  bfastfinal.fut:177:1-183:32\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_27828,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_33038 = self.sizes["main.segmap_group_size_32972"]
      segmap_usable_groups_33039 = sdiv_up64(binop_x_38685,
                                             segmap_group_sizze_33038)
      mem_38690 = opencl_alloc(self, bytes_38684, "mem_38690")
      if ((1 * (np.long(segmap_usable_groups_33039) * np.long(segmap_group_sizze_33038))) != 0):
        self.mainzisegmap_32969_var.set_args(self.global_failure,
                                             np.int64(N_27808),
                                             np.float32(freq_27814),
                                             np.int64(i32_res_27828),
                                             mappingindices_mem_38681,
                                             mem_38690)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_32969_var,
                                   ((np.long(segmap_usable_groups_33039) * np.long(segmap_group_sizze_33038)),),
                                   (np.long(segmap_group_sizze_33038),))
        if synchronous:
          sync(self)
      binop_p_mem_38691 = mem_38690
    x_27881 = (N_27808 * N_27808)
    y_27882 = (np.int64(2) * N_27808)
    x_27883 = (x_27881 + y_27882)
    x_27884 = (np.int64(1) + x_27883)
    y_27885 = (np.int64(1) + N_27808)
    zzero_27886 = (y_27885 == np.int64(0))
    nonzzero_27887 = not(zzero_27886)
    nonzzero_cert_27888 = True
    assert nonzzero_27887, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:38:32-60\n   #1  bfastfinal.fut:182:5-58\n   #2  bfastfinal.fut:177:1-183:32\n" % ("division by zero",))
    x_27889 = sdiv64(x_27884, y_27885)
    x_27890 = (x_27889 - N_27808)
    binop_p_27891 = (x_27890 - np.int64(1))
    defunc_0_f_res_27892 = sext_i64_i32(binop_p_27891)
    i32_res_27893 = sitofp_i32_f32(defunc_0_f_res_27892)
    segmap_group_sizze_33121 = self.sizes["main.segmap_group_size_33100"]
    segmap_usable_groups_33122 = sdiv_up64(binop_x_38685,
                                           segmap_group_sizze_33121)
    mem_38694 = opencl_alloc(self, bytes_38684, "mem_38694")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_38694, np.int64(0),
                                                binop_p_mem_38691, np.int64(0),
                                                np.int64(1), N_27808,
                                                i32_res_27828)
    mem_38698 = opencl_alloc(self, bytes_38684, "mem_38698")
    if ((1 * (np.long(segmap_usable_groups_33122) * np.long(segmap_group_sizze_33121))) != 0):
      self.mainzisegmap_33097_var.set_args(self.global_failure,
                                           np.int64(N_27808),
                                           np.int64(i32_res_27828),
                                           np.float32(i32_res_27893), mem_38694,
                                           mem_38698)
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_33097_var,
                                 ((np.long(segmap_usable_groups_33122) * np.long(segmap_group_sizze_33121)),),
                                 (np.long(segmap_group_sizze_33121),))
      if synchronous:
        sync(self)
    eq_x_y_27901 = (np.int64(0) == i32_res_27828)
    p_and_eq_x_y_27902 = (cond_27825 and eq_x_y_27901)
    not_p_27903 = not(cond_27825)
    p_and_eq_x_y_27904 = (eq_x_y_27901 and not_p_27903)
    empty_slice_27905 = (p_and_eq_x_y_27902 or p_and_eq_x_y_27904)
    m_27906 = (i32_res_27828 - np.int64(1))
    zzero_leq_i_p_m_t_s_27907 = sle64(np.int64(0), m_27906)
    i_p_m_t_s_leq_w_27908 = slt64(m_27906, i32_res_27828)
    i_lte_j_27909 = sle64(np.int64(0), i32_res_27828)
    y_27910 = (zzero_leq_i_p_m_t_s_27907 and i_p_m_t_s_leq_w_27908)
    y_27911 = (i_lte_j_27909 and y_27910)
    ok_or_empty_27912 = (empty_slice_27905 or y_27911)
    empty_slice_27913 = (i32_res_27822 == np.int64(0))
    m_27914 = (i32_res_27822 - np.int64(1))
    zzero_leq_i_p_m_t_s_27915 = sle64(np.int64(0), m_27914)
    i_p_m_t_s_leq_w_27916 = slt64(m_27914, N_27808)
    i_lte_j_27917 = sle64(np.int64(0), i32_res_27822)
    y_27918 = (zzero_leq_i_p_m_t_s_27915 and i_p_m_t_s_leq_w_27916)
    y_27919 = (i_lte_j_27917 and y_27918)
    ok_or_empty_27920 = (empty_slice_27913 or y_27919)
    index_ok_27921 = (ok_or_empty_27912 and ok_or_empty_27920)
    index_certs_27922 = True
    assert index_ok_27921, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:41:15-23\n   #1  bfastfinal.fut:182:5-58\n   #2  bfastfinal.fut:177:1-183:32\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_27822,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               i32_res_27828,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_27808,
                                                                                                                                                                               "]."))
    empty_slice_27924 = (i32_res_27828 == np.int64(0))
    ok_or_empty_27925 = (y_27911 or empty_slice_27924)
    index_ok_27926 = (ok_or_empty_27920 and ok_or_empty_27925)
    index_certs_27927 = True
    assert index_ok_27926, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:42:15-24\n   #1  bfastfinal.fut:182:5-58\n   #2  bfastfinal.fut:177:1-183:32\n" % ("Index [:",
                                                                                                                                                                               i32_res_27822,
                                                                                                                                                                               ", ",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":] out of bounds for array of shape [",
                                                                                                                                                                               N_27808,
                                                                                                                                                                               "][",
                                                                                                                                                                               i32_res_27828,
                                                                                                                                                                               "]."))
    empty_slice_27929 = (m_27809 == np.int64(0))
    m_27930 = (m_27809 - np.int64(1))
    zzero_leq_i_p_m_t_s_27931 = sle64(np.int64(0), m_27930)
    i_p_m_t_s_leq_w_27932 = slt64(m_27930, m_27809)
    i_lte_j_27933 = sle64(np.int64(0), m_27809)
    y_27934 = (zzero_leq_i_p_m_t_s_27931 and i_p_m_t_s_leq_w_27932)
    y_27935 = (i_lte_j_27933 and y_27934)
    ok_or_empty_27936 = (empty_slice_27929 or y_27935)
    index_ok_27937 = (ok_or_empty_27920 and ok_or_empty_27936)
    index_certs_27938 = True
    assert index_ok_27937, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:43:15-28\n   #1  bfastfinal.fut:182:5-58\n   #2  bfastfinal.fut:177:1-183:32\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_27822,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               m_27809,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_27808,
                                                                                                                                                                               "]."))
    suff_outer_par_33128 = (self.sizes["main.suff_outer_par_6"] <= m_27809)
    segmap_group_sizze_33154 = self.sizes["main.segmap_group_size_33132"]
    max_num_groups_39905 = self.sizes["main.segmap_num_groups_33134"]
    num_groups_33155 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27809,
                                                            segmap_group_sizze_33154),
                                                  sext_i32_i64(max_num_groups_39905))))
    nest_sizze_33330 = (m_27809 * i32_res_27828)
    segmap_group_sizze_33331 = self.sizes["main.segmap_group_size_33179"]
    max_num_groups_39906 = self.sizes["main.segmap_num_groups_33181"]
    num_groups_33332 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_33330,
                                                            segmap_group_sizze_33331),
                                                  sext_i32_i64(max_num_groups_39906))))
    suff_outer_par_33336 = (self.sizes["main.suff_outer_par_7"] <= nest_sizze_33330)
    y_33360 = (i32_res_27828 * i32_res_27828)
    comparatee_33361 = (m_27809 * y_33360)
    suff_outer_par_33362 = (self.sizes["main.suff_outer_par_8"] <= comparatee_33361)
    nest_sizze_33382 = (i32_res_27822 * comparatee_33361)
    segred_group_sizze_33383 = self.sizes["main.segred_group_size_33239"]
    max_num_groups_39907 = self.sizes["main.segred_num_groups_33241"]
    num_groups_33384 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_33382,
                                                            segred_group_sizze_33383),
                                                  sext_i32_i64(max_num_groups_39907))))
    Tx_36839 = self.sizes["main.Tx_36837"]
    Ty_36840 = self.sizes["main.Ty_36838"]
    Ty_36841 = smin64(i32_res_27828, Ty_36840)
    Tx_36842 = smin64(i32_res_27828, Tx_36839)
    gridDim_zz_36845 = sdiv_up64(m_27809, np.int64(30))
    group_sizze_36848 = (Ty_36841 * Tx_36842)
    binop_x_38700 = (m_27809 * N_27810)
    bytes_38699 = (np.int64(4) * binop_x_38700)
    bytes_38744 = (np.int64(4) * comparatee_33361)
    bytes_38703 = (np.int64(4) * y_33360)
    binop_x_38847 = (i32_res_27828 * nest_sizze_33330)
    bytes_38845 = (np.int64(4) * binop_x_38847)
    bytes_38749 = (np.int64(4) * i32_res_27828)
    binop_x_38778 = (np.int64(30) * group_sizze_36848)
    bytes_38776 = (np.int64(4) * binop_x_38778)
    binop_x_39707 = (np.int64(4) * Ty_36841)
    binop_x_39708 = (Tx_36842 * binop_x_39707)
    sizze_39709 = (np.int64(30) * binop_x_39708)
    num_threads_39838 = (segmap_group_sizze_33154 * num_groups_33155)
    total_sizze_39839 = (bytes_38703 * num_threads_39838)
    num_threads_39840 = (segmap_group_sizze_33331 * num_groups_33332)
    total_sizze_39841 = (bytes_38749 * num_threads_39840)
    local_memory_capacity_40029 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_40029)) and suff_outer_par_33128):
      mem_38701 = opencl_alloc(self, bytes_38699, "mem_38701")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_38701, np.int64(0),
                                                  images_mem_38682, np.int64(0),
                                                  np.int64(1), N_27810, m_27809)
      mem_38747 = opencl_alloc(self, bytes_38744, "mem_38747")
      mem_38705 = opencl_alloc(self, total_sizze_39839, "mem_38705")
      if ((1 * (np.long(num_groups_33155) * np.long(segmap_group_sizze_33154))) != 0):
        self.mainzisegmap_33130_var.set_args(self.global_failure,
                                             np.int64(N_27808),
                                             np.int64(m_27809),
                                             np.int32(n_27813),
                                             np.int32(k2p2zq_27826),
                                             np.int64(i32_res_27828),
                                             np.int64(num_groups_33155),
                                             binop_p_mem_38691, mem_38698,
                                             mem_38701, mem_38705, mem_38747)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_33130_var,
                                   ((np.long(num_groups_33155) * np.long(segmap_group_sizze_33154)),),
                                   (np.long(segmap_group_sizze_33154),))
        if synchronous:
          sync(self)
      mem_38701 = None
      mem_38705 = None
      mem_38848 = opencl_alloc(self, bytes_38845, "mem_38848")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_38848, np.int64(0),
                                                  mem_38747, np.int64(0),
                                                  np.int64(1), m_27809,
                                                  (i32_res_27828 * i32_res_27828))
      mem_38747 = None
      defunc_3_map_res_mem_38850 = mem_38848
    else:
      local_memory_capacity_40028 = self.max_local_memory
      if (sle64(np.int64(0),
                sext_i32_i64(local_memory_capacity_40028)) and suff_outer_par_33336):
        mem_38766 = opencl_alloc(self, bytes_38845, "mem_38766")
        mem_38750 = opencl_alloc(self, total_sizze_39841, "mem_38750")
        if ((1 * (np.long(num_groups_33332) * np.long(segmap_group_sizze_33331))) != 0):
          self.mainzisegmap_33176_var.set_args(self.global_failure,
                                               np.int64(m_27809),
                                               np.int64(N_27810),
                                               np.int32(n_27813),
                                               np.int32(k2p2zq_27826),
                                               np.int64(i32_res_27828),
                                               np.int64(num_groups_33332),
                                               images_mem_38682, mem_38694,
                                               mem_38698, mem_38750, mem_38766)
          cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_33176_var,
                                     ((np.long(num_groups_33332) * np.long(segmap_group_sizze_33331)),),
                                     (np.long(segmap_group_sizze_33331),))
          if synchronous:
            sync(self)
        mem_38750 = None
        mem_38842 = opencl_alloc(self, bytes_38845, "mem_38842")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_38842, np.int64(0),
                                                    mem_38766, np.int64(0),
                                                    np.int64(1),
                                                    (m_27809 * i32_res_27828),
                                                    i32_res_27828)
        mem_38766 = None
        defunc_3_map_res_mem_38844 = mem_38842
      else:
        local_memory_capacity_40027 = self.max_local_memory
        if (sle64(np.int64(120),
                  sext_i32_i64(local_memory_capacity_40027)) and suff_outer_par_33362):
          mem_38769 = opencl_alloc(self, bytes_38699, "mem_38769")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_38769, np.int64(0),
                                                      images_mem_38682,
                                                      np.int64(0), np.int64(1),
                                                      N_27810, m_27809)
          gridDim_x_36843 = sdiv_up64(i32_res_27828, Tx_36842)
          gridDim_y_36844 = sdiv_up64(i32_res_27828, Ty_36841)
          binop_x_36846 = (gridDim_y_36844 * gridDim_zz_36845)
          grid_sizze_36847 = (gridDim_x_36843 * binop_x_36846)
          count_shmem_36849 = sdiv_up64(np.int64(30), group_sizze_36848)
          mem_38829 = opencl_alloc(self, bytes_38845, "mem_38829")
          if ((1 * (np.long(grid_sizze_36847) * np.long(group_sizze_36848))) != 0):
            self.mainzisegmap_intragroup_36853_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(np.int64(120))),
                                                            np.int64(m_27809),
                                                            np.int32(n_27813),
                                                            np.int64(i32_res_27828),
                                                            np.int64(Ty_36841),
                                                            np.int64(Tx_36842),
                                                            np.int64(gridDim_x_36843),
                                                            np.int64(gridDim_y_36844),
                                                            np.int64(group_sizze_36848),
                                                            np.int64(count_shmem_36849),
                                                            mem_38694,
                                                            mem_38698,
                                                            mem_38769,
                                                            mem_38829)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegmap_intragroup_36853_var,
                                       ((np.long(grid_sizze_36847) * np.long(group_sizze_36848)),),
                                       (np.long(group_sizze_36848),))
            if synchronous:
              sync(self)
          mem_38769 = None
          defunc_3_map_res_mem_38838 = mem_38829
        else:
          mem_38832 = opencl_alloc(self, bytes_38684, "mem_38832")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_38832, np.int64(0),
                                                      mem_38698, np.int64(0),
                                                      np.int64(1),
                                                      i32_res_27828, N_27808)
          mem_38837 = opencl_alloc(self, bytes_38845, "mem_38837")
          if slt64((i32_res_27822 * np.int64(2)), segred_group_sizze_33383):
            segment_sizze_nonzzero_39967 = smax64(np.int64(1), i32_res_27822)
            num_threads_39968 = (num_groups_33384 * segred_group_sizze_33383)
            if ((1 * (np.long(num_groups_33384) * np.long(segred_group_sizze_33383))) != 0):
              self.mainzisegred_small_33245_var.set_args(self.global_failure,
                                                         cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33383))),
                                                         np.int64(N_27808),
                                                         np.int64(m_27809),
                                                         np.int64(N_27810),
                                                         np.int64(i32_res_27822),
                                                         np.int64(i32_res_27828),
                                                         np.int64(num_groups_33384),
                                                         images_mem_38682,
                                                         binop_p_mem_38691,
                                                         mem_38832, mem_38837,
                                                         np.int64(segment_sizze_nonzzero_39967))
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainzisegred_small_33245_var,
                                         ((np.long(num_groups_33384) * np.long(segred_group_sizze_33383)),),
                                         (np.long(segred_group_sizze_33383),))
              if synchronous:
                sync(self)
          else:
            groups_per_segment_39988 = sdiv_up64(num_groups_33384,
                                                 smax64(np.int64(1),
                                                        ((m_27809 * i32_res_27828) * i32_res_27828)))
            elements_per_thread_39989 = sdiv_up64(i32_res_27822,
                                                  (segred_group_sizze_33383 * groups_per_segment_39988))
            virt_num_groups_39990 = (groups_per_segment_39988 * ((m_27809 * i32_res_27828) * i32_res_27828))
            num_threads_39991 = (num_groups_33384 * segred_group_sizze_33383)
            threads_per_segment_39992 = (groups_per_segment_39988 * segred_group_sizze_33383)
            group_res_arr_mem_39993 = opencl_alloc(self,
                                                   (np.int32(4) * (segred_group_sizze_33383 * virt_num_groups_39990)),
                                                   "group_res_arr_mem_39993")
            mainzicounter_mem_39995 = self.mainzicounter_mem_39995
            if ((1 * (np.long(num_groups_33384) * np.long(segred_group_sizze_33383))) != 0):
              self.mainzisegred_large_33245_var.set_args(self.global_failure,
                                                         cl.LocalMemory(np.long(np.int32(1))),
                                                         cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33383))),
                                                         np.int64(N_27808),
                                                         np.int64(N_27810),
                                                         np.int64(i32_res_27822),
                                                         np.int64(i32_res_27828),
                                                         np.int64(num_groups_33384),
                                                         images_mem_38682,
                                                         binop_p_mem_38691,
                                                         mem_38832, mem_38837,
                                                         np.int64(groups_per_segment_39988),
                                                         np.int64(elements_per_thread_39989),
                                                         np.int64(virt_num_groups_39990),
                                                         np.int64(threads_per_segment_39992),
                                                         group_res_arr_mem_39993,
                                                         mainzicounter_mem_39995)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainzisegred_large_33245_var,
                                         ((np.long(num_groups_33384) * np.long(segred_group_sizze_33383)),),
                                         (np.long(segred_group_sizze_33383),))
              if synchronous:
                sync(self)
          mem_38832 = None
          defunc_3_map_res_mem_38838 = mem_38837
        defunc_3_map_res_mem_38844 = defunc_3_map_res_mem_38838
      defunc_3_map_res_mem_38850 = defunc_3_map_res_mem_38844
    m_27959 = (np.int32(2) * k2p2zq_27826)
    nm_27960 = (k2p2zq_27826 * m_27959)
    i32_res_27961 = sext_i32_i64(nm_27960)
    bounds_invalid_upwards_27962 = slt64(i32_res_27961, np.int64(0))
    valid_27963 = not(bounds_invalid_upwards_27962)
    range_valid_c_27964 = True
    assert valid_27963, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:78:34-50\n   #2  bfastfinal.fut:53:35-50\n   #3  bfastfinal.fut:182:5-58\n   #4  bfastfinal.fut:177:1-183:32\n" % ("Range ",
                                                                                                                                                                                                                                        np.int64(0),
                                                                                                                                                                                                                                        "..",
                                                                                                                                                                                                                                        np.int64(1),
                                                                                                                                                                                                                                        "..<",
                                                                                                                                                                                                                                        i32_res_27961,
                                                                                                                                                                                                                                        " is invalid."))
    zzero_27969 = (m_27959 == np.int32(0))
    nonzzero_27970 = not(zzero_27969)
    nonzzero_cert_27971 = True
    assert nonzzero_27970, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:73:41-47\n   #1  helpers.fut:73:14-78:52\n   #2  bfastfinal.fut:53:35-50\n   #3  bfastfinal.fut:182:5-58\n   #4  bfastfinal.fut:177:1-183:32\n" % ("division by zero",))
    loop_nonempty_27972 = slt32(np.int32(0), k2p2zq_27826)
    loop_not_taken_27973 = not(loop_nonempty_27972)
    protect_assert_disj_27974 = (nonzzero_27970 or loop_not_taken_27973)
    nonzzero_cert_27975 = True
    assert protect_assert_disj_27974, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:59:43-49\n   #1  helpers.fut:59:16-65:44\n   #2  helpers.fut:79:15-33\n   #3  bfastfinal.fut:53:35-50\n   #4  bfastfinal.fut:182:5-58\n   #5  bfastfinal.fut:177:1-183:32\n" % ("division by zero",))
    i32_res_27976 = sext_i32_i64(m_27959)
    x_27977 = (i32_res_27828 * i32_res_27976)
    dim_ok_27978 = (x_27977 == i32_res_27961)
    dim_ok_cert_27979 = True
    assert dim_ok_27978, ("Error: %s\n\nBacktrace:\n-> #0  /prelude/array.fut:95:3-33\n   #1  helpers.fut:81:9-45\n   #2  bfastfinal.fut:53:35-50\n   #3  bfastfinal.fut:182:5-58\n   #4  bfastfinal.fut:177:1-183:32\n" % ("new shape has different number of elements than old shape",))
    j_m_i_27980 = (i32_res_27976 - i32_res_27828)
    empty_slice_27981 = (j_m_i_27980 == np.int64(0))
    m_27982 = (j_m_i_27980 - np.int64(1))
    i_p_m_t_s_27983 = (i32_res_27828 + m_27982)
    zzero_leq_i_p_m_t_s_27984 = sle64(np.int64(0), i_p_m_t_s_27983)
    i_p_m_t_s_leq_w_27985 = slt64(i_p_m_t_s_27983, i32_res_27976)
    i_lte_j_27986 = sle64(i32_res_27828, i32_res_27976)
    y_27987 = (i_lte_j_27909 and i_p_m_t_s_leq_w_27985)
    y_27988 = (zzero_leq_i_p_m_t_s_27984 and y_27987)
    y_27989 = (i_lte_j_27986 and y_27988)
    forwards_ok_27990 = (i_lte_j_27909 and y_27989)
    ok_or_empty_27991 = (empty_slice_27981 or forwards_ok_27990)
    index_ok_27992 = (ok_or_empty_27925 and ok_or_empty_27991)
    index_certs_27993 = True
    assert index_ok_27992, ("Error: %s%d%s%d%s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-88\n   #1  bfastfinal.fut:53:35-50\n   #2  bfastfinal.fut:182:5-58\n   #3  bfastfinal.fut:177:1-183:32\n" % ("Index [",
                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_27828,
                                                                                                                                                                                                                   ", ",
                                                                                                                                                                                                                   i32_res_27828,
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_27976,
                                                                                                                                                                                                                   "] out of bounds for array of shape [",
                                                                                                                                                                                                                   i32_res_27828,
                                                                                                                                                                                                                   "][",
                                                                                                                                                                                                                   i32_res_27976,
                                                                                                                                                                                                                   "]."))
    dim_match_27994 = (i32_res_27828 == j_m_i_27980)
    empty_or_match_cert_27995 = True
    assert dim_match_27994, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-103\n   #1  bfastfinal.fut:53:35-50\n   #2  bfastfinal.fut:182:5-58\n   #3  bfastfinal.fut:177:1-183:32\n" % ("Value of (core language) shape (",
                                                                                                                                                                                                             i32_res_27828,
                                                                                                                                                                                                             ", ",
                                                                                                                                                                                                             j_m_i_27980,
                                                                                                                                                                                                             ") cannot match shape of type `[",
                                                                                                                                                                                                             i32_res_27828,
                                                                                                                                                                                                             "][",
                                                                                                                                                                                                             i32_res_27828,
                                                                                                                                                                                                             "]f32`."))
    max_group_sizze_33598 = self.max_group_size
    fits_33599 = sle64(i32_res_27961, max_group_sizze_33598)
    suff_intra_par_33597 = (self.sizes["main.suff_intra_par_11"] <= i32_res_27961)
    intra_suff_and_fits_33600 = (suff_intra_par_33597 and fits_33599)
    nest_sizze_34084 = (m_27809 * i32_res_27961)
    segmap_group_sizze_34085 = self.sizes["main.segmap_group_size_34044"]
    suff_intra_par_34112 = (self.sizes["main.suff_intra_par_13"] <= i32_res_27961)
    intra_suff_and_fits_34113 = (fits_33599 and suff_intra_par_34112)
    segmap_group_sizze_34149 = self.sizes["main.segmap_group_size_33950"]
    segmap_group_sizze_34165 = self.sizes["main.segmap_group_size_33883"]
    segmap_group_sizze_34199 = self.sizes["main.segmap_group_size_33829"]
    y_34209 = (i32_res_27828 * j_m_i_27980)
    nest_sizze_34210 = (m_27809 * y_34209)
    segmap_group_sizze_34211 = self.sizes["main.segmap_group_size_33664"]
    segmap_usable_groups_34150 = sdiv_up_safe64(m_27809,
                                                segmap_group_sizze_34149)
    segmap_usable_groups_34166 = sdiv_up_safe64(nest_sizze_34084,
                                                segmap_group_sizze_34165)
    segmap_usable_groups_34200 = sdiv_up_safe64(nest_sizze_34084,
                                                segmap_group_sizze_34199)
    bytes_38853 = (np.int64(4) * i32_res_27961)
    bytes_38876 = (np.int64(4) * nest_sizze_34084)
    binop_x_38927 = (j_m_i_27980 * nest_sizze_33330)
    bytes_38925 = (np.int64(4) * binop_x_38927)
    local_memory_capacity_40092 = self.max_local_memory
    if (sle64((bytes_38853 + bytes_38853),
              sext_i32_i64(local_memory_capacity_40092)) and intra_suff_and_fits_33600):
      mem_38874 = opencl_alloc(self, bytes_38845, "mem_38874")
      if ((1 * (np.long(m_27809) * np.long(i32_res_27961))) != 0):
        self.mainzisegmap_intragroup_33480_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_38853)),
                                                        cl.LocalMemory(np.long(bytes_38853)),
                                                        np.int32(k2p2zq_27826),
                                                        np.int64(i32_res_27828),
                                                        np.int32(m_27959),
                                                        np.int64(i32_res_27961),
                                                        np.int64(i32_res_27976),
                                                        defunc_3_map_res_mem_38850,
                                                        mem_38874)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_33480_var,
                                   ((np.long(m_27809) * np.long(i32_res_27961)),),
                                   (np.long(i32_res_27961),))
        if synchronous:
          sync(self)
      defunc_3_map_res_mem_38929 = mem_38874
    else:
      segmap_usable_groups_34086 = sdiv_up64(nest_sizze_34084,
                                             segmap_group_sizze_34085)
      mem_38878 = opencl_alloc(self, bytes_38876, "mem_38878")
      if ((1 * (np.long(segmap_usable_groups_34086) * np.long(segmap_group_sizze_34085))) != 0):
        self.mainzisegmap_34041_var.set_args(self.global_failure,
                                             np.int64(m_27809),
                                             np.int32(k2p2zq_27826),
                                             np.int64(i32_res_27828),
                                             np.int32(m_27959),
                                             np.int64(i32_res_27961),
                                             defunc_3_map_res_mem_38850,
                                             mem_38878)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_34041_var,
                                   ((np.long(segmap_usable_groups_34086) * np.long(segmap_group_sizze_34085)),),
                                   (np.long(segmap_group_sizze_34085),))
        if synchronous:
          sync(self)
      ctx_param_ext_38879 = m_27809
      ctx_param_ext_38880 = i32_res_27961
      ctx_param_ext_38881 = np.int64(0)
      ctx_param_ext_38882 = i32_res_27961
      ctx_param_ext_38883 = m_27809
      ctx_param_ext_38884 = np.int64(1)
      ctx_param_ext_38885 = i32_res_27961
      mem_param_38886 = mem_38878
      i_34102 = np.int32(0)
      one_41061 = np.int32(1)
      for counter_41060 in range(k2p2zq_27826):
        i32_res_34104 = sext_i32_i64(i_34102)
        local_memory_capacity_40052 = self.max_local_memory
        if intra_suff_and_fits_34113:
          gauss_jordan_res_ixfn_38908 = m_27809
        else:
          gauss_jordan_res_ixfn_38908 = ctx_param_ext_38883
        local_memory_capacity_40053 = self.max_local_memory
        if intra_suff_and_fits_34113:
          gauss_jordan_res_ixfn_38909 = i32_res_27961
        else:
          gauss_jordan_res_ixfn_38909 = ctx_param_ext_38885
        local_memory_capacity_40054 = self.max_local_memory
        if intra_suff_and_fits_34113:
          gauss_jordan_res_ixfn_38910 = m_27809
        else:
          gauss_jordan_res_ixfn_38910 = ctx_param_ext_38879
        local_memory_capacity_40055 = self.max_local_memory
        if intra_suff_and_fits_34113:
          gauss_jordan_res_ixfn_38911 = i32_res_27961
        else:
          gauss_jordan_res_ixfn_38911 = ctx_param_ext_38880
        local_memory_capacity_40056 = self.max_local_memory
        if intra_suff_and_fits_34113:
          gauss_jordan_res_ixfn_38912 = i32_res_27961
        else:
          gauss_jordan_res_ixfn_38912 = ctx_param_ext_38882
        local_memory_capacity_40057 = self.max_local_memory
        if intra_suff_and_fits_34113:
          gauss_jordan_res_ixfn_38913 = np.int64(1)
        else:
          gauss_jordan_res_ixfn_38913 = ctx_param_ext_38884
        local_memory_capacity_40058 = self.max_local_memory
        if intra_suff_and_fits_34113:
          gauss_jordan_res_ixfn_38914 = np.int64(0)
        else:
          gauss_jordan_res_ixfn_38914 = ctx_param_ext_38881
        local_memory_capacity_40086 = self.max_local_memory
        if ((sle64(np.int64(0),
                   sext_i32_i64(local_memory_capacity_40086)) and sle64(bytes_38853,
                                                                        sext_i32_i64(local_memory_capacity_40086))) and intra_suff_and_fits_34113):
          mem_38891 = opencl_alloc(self, bytes_38876, "mem_38891")
          group_sizze_40062 = self.sizes["main.group_size_40062"]
          num_groups_40063 = sdiv_up64((m_27809 * i32_res_27961),
                                       group_sizze_40062)
          if ((1 * (np.long(num_groups_40063) * np.long(group_sizze_40062))) != 0):
            self.mainzicopy_40059_var.set_args(np.int64(m_27809),
                                               np.int64(i32_res_27961),
                                               np.int64(ctx_param_ext_38881),
                                               np.int64(ctx_param_ext_38882),
                                               np.int64(ctx_param_ext_38884),
                                               mem_param_38886, mem_38891)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzicopy_40059_var,
                                       ((np.long(num_groups_40063) * np.long(group_sizze_40062)),),
                                       (np.long(group_sizze_40062),))
            if synchronous:
              sync(self)
          mem_38899 = opencl_alloc(self, bytes_38876, "mem_38899")
          if ((1 * (np.long(m_27809) * np.long(i32_res_27961))) != 0):
            self.mainzisegmap_intragroup_33707_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(bytes_38853)),
                                                            np.int64(m_27809),
                                                            np.int32(k2p2zq_27826),
                                                            np.int32(m_27959),
                                                            np.int64(i32_res_27961),
                                                            np.int32(i_34102),
                                                            np.int64(i32_res_34104),
                                                            np.int64(ctx_param_ext_38881),
                                                            np.int64(ctx_param_ext_38882),
                                                            np.int64(ctx_param_ext_38884),
                                                            mem_param_38886,
                                                            mem_38891,
                                                            mem_38899)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegmap_intragroup_33707_var,
                                       ((np.long(m_27809) * np.long(i32_res_27961)),),
                                       (np.long(i32_res_27961),))
            if synchronous:
              sync(self)
          mem_38891 = None
          gauss_jordan_res_mem_38915 = mem_38899
        else:
          mem_38902 = opencl_alloc(self, m_27809, "mem_38902")
          if ((1 * (np.long(segmap_usable_groups_34150) * np.long(segmap_group_sizze_34149))) != 0):
            self.mainzisegmap_33948_var.set_args(self.global_failure,
                                                 np.int64(m_27809),
                                                 np.int64(i32_res_34104),
                                                 np.int64(ctx_param_ext_38881),
                                                 np.int64(ctx_param_ext_38882),
                                                 np.int64(ctx_param_ext_38884),
                                                 mem_param_38886, mem_38902)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_33948_var,
                                       ((np.long(segmap_usable_groups_34150) * np.long(segmap_group_sizze_34149)),),
                                       (np.long(segmap_group_sizze_34149),))
            if synchronous:
              sync(self)
          mem_38906 = opencl_alloc(self, bytes_38876, "mem_38906")
          if ((1 * (np.long(segmap_usable_groups_34166) * np.long(segmap_group_sizze_34165))) != 0):
            self.mainzisegmap_33880_var.set_args(self.global_failure,
                                                 np.int64(m_27809),
                                                 np.int32(k2p2zq_27826),
                                                 np.int32(m_27959),
                                                 np.int64(i32_res_27961),
                                                 np.int32(i_34102),
                                                 np.int64(i32_res_34104),
                                                 np.int64(ctx_param_ext_38881),
                                                 np.int64(ctx_param_ext_38882),
                                                 np.int64(ctx_param_ext_38884),
                                                 mem_param_38886, mem_38902,
                                                 mem_38906)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_33880_var,
                                       ((np.long(segmap_usable_groups_34166) * np.long(segmap_group_sizze_34165)),),
                                       (np.long(segmap_group_sizze_34165),))
            if synchronous:
              sync(self)
          mem_38902 = None
          if ((1 * (np.long(segmap_usable_groups_34200) * np.long(segmap_group_sizze_34199))) != 0):
            self.mainzisegmap_33826_var.set_args(self.global_failure,
                                                 np.int64(m_27809),
                                                 np.int64(i32_res_27961),
                                                 np.int64(ctx_param_ext_38881),
                                                 np.int64(ctx_param_ext_38882),
                                                 np.int64(ctx_param_ext_38884),
                                                 mem_param_38886, mem_38906)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_33826_var,
                                       ((np.long(segmap_usable_groups_34200) * np.long(segmap_group_sizze_34199)),),
                                       (np.long(segmap_group_sizze_34199),))
            if synchronous:
              sync(self)
          mem_38906 = None
          gauss_jordan_res_mem_38915 = mem_param_38886
        ctx_param_ext_tmp_40043 = gauss_jordan_res_ixfn_38910
        ctx_param_ext_tmp_40044 = gauss_jordan_res_ixfn_38911
        ctx_param_ext_tmp_40045 = gauss_jordan_res_ixfn_38914
        ctx_param_ext_tmp_40046 = gauss_jordan_res_ixfn_38912
        ctx_param_ext_tmp_40047 = gauss_jordan_res_ixfn_38908
        ctx_param_ext_tmp_40048 = gauss_jordan_res_ixfn_38913
        ctx_param_ext_tmp_40049 = gauss_jordan_res_ixfn_38909
        mem_param_tmp_40050 = gauss_jordan_res_mem_38915
        ctx_param_ext_38879 = ctx_param_ext_tmp_40043
        ctx_param_ext_38880 = ctx_param_ext_tmp_40044
        ctx_param_ext_38881 = ctx_param_ext_tmp_40045
        ctx_param_ext_38882 = ctx_param_ext_tmp_40046
        ctx_param_ext_38883 = ctx_param_ext_tmp_40047
        ctx_param_ext_38884 = ctx_param_ext_tmp_40048
        ctx_param_ext_38885 = ctx_param_ext_tmp_40049
        mem_param_38886 = mem_param_tmp_40050
        i_34102 += one_41061
      gauss_jordan_res_r_ixfn_38916 = ctx_param_ext_38879
      gauss_jordan_res_r_ixfn_38917 = ctx_param_ext_38880
      gauss_jordan_res_r_ixfn_38918 = ctx_param_ext_38881
      gauss_jordan_res_r_ixfn_38919 = ctx_param_ext_38882
      gauss_jordan_res_r_ixfn_38920 = ctx_param_ext_38883
      gauss_jordan_res_r_ixfn_38921 = ctx_param_ext_38884
      gauss_jordan_res_r_ixfn_38922 = ctx_param_ext_38885
      gauss_jordan_res_r_mem_38923 = mem_param_38886
      mem_38878 = None
      segmap_usable_groups_34212 = sdiv_up64(nest_sizze_34210,
                                             segmap_group_sizze_34211)
      mem_38928 = opencl_alloc(self, bytes_38925, "mem_38928")
      if ((1 * (np.long(segmap_usable_groups_34212) * np.long(segmap_group_sizze_34211))) != 0):
        self.mainzisegmap_33660_var.set_args(self.global_failure,
                                             np.int64(m_27809),
                                             np.int64(i32_res_27828),
                                             np.int64(i32_res_27961),
                                             np.int64(i32_res_27976),
                                             np.int64(x_27977),
                                             np.int64(j_m_i_27980),
                                             np.int64(gauss_jordan_res_r_ixfn_38918),
                                             np.int64(gauss_jordan_res_r_ixfn_38919),
                                             np.int64(gauss_jordan_res_r_ixfn_38921),
                                             gauss_jordan_res_r_mem_38923,
                                             mem_38928)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_33660_var,
                                   ((np.long(segmap_usable_groups_34212) * np.long(segmap_group_sizze_34211)),),
                                   (np.long(segmap_group_sizze_34211),))
        if synchronous:
          sync(self)
      gauss_jordan_res_r_mem_38923 = None
      defunc_3_map_res_mem_38929 = mem_38928
    defunc_3_map_res_mem_38850 = None
    suff_outer_par_34220 = (self.sizes["main.suff_outer_par_16"] <= m_27809)
    segmap_group_sizze_34242 = self.sizes["main.segmap_group_size_34224"]
    max_num_groups_40093 = self.sizes["main.segmap_num_groups_34226"]
    num_groups_34243 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27809,
                                                            segmap_group_sizze_34242),
                                                  sext_i32_i64(max_num_groups_40093))))
    suff_outer_par_34327 = (self.sizes["main.suff_outer_par_17"] <= nest_sizze_33330)
    nest_sizze_34343 = (i32_res_27822 * nest_sizze_33330)
    segred_group_sizze_34344 = self.sizes["main.segred_group_size_34286"]
    max_num_groups_40094 = self.sizes["main.segred_num_groups_34288"]
    num_groups_34345 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_34343,
                                                            segred_group_sizze_34344),
                                                  sext_i32_i64(max_num_groups_40094))))
    Ty_36987 = self.sizes["main.Ty_36984"]
    Ry_36988 = self.sizes["main.Ry_36986"]
    Tx_36989 = self.sizes["main.Tx_36983"]
    Rx_36990 = self.sizes["main.Rx_36985"]
    Tk_36991 = self.sizes["main.Tk_36982"]
    TxRx_36994 = (Tx_36989 * Rx_36990)
    TyRy_36995 = (Ty_36987 * Ry_36988)
    a_loc_szz_36997 = (Tk_36991 * TyRy_36995)
    binop_x_36998 = (Tx_36989 * Tk_36991)
    b_loc_szz_36999 = (Rx_36990 * binop_x_36998)
    group_sizze_37003 = (Ty_36987 * Tx_36989)
    bytes_38948 = (np.int64(4) * nest_sizze_33330)
    binop_x_38962 = (Ry_36988 * group_sizze_37003)
    binop_x_38963 = (Rx_36990 * binop_x_38962)
    bytes_38960 = (np.int64(4) * binop_x_38963)
    binop_x_38954 = (Ry_36988 * Rx_36990)
    bytes_38953 = (np.int64(4) * binop_x_38954)
    bytes_38965 = (np.int64(4) * a_loc_szz_36997)
    bytes_38967 = (np.int64(4) * b_loc_szz_36999)
    bytes_39036 = (np.int64(4) * binop_x_38962)
    binop_x_39042 = (Rx_36990 * group_sizze_37003)
    bytes_39040 = (np.int64(4) * binop_x_39042)
    bytes_39028 = (np.int64(4) * Ry_36988)
    bytes_39030 = (np.int64(4) * Rx_36990)
    binop_x_39724 = (np.int64(4) * Ty_36987)
    binop_x_39725 = (Tx_36989 * binop_x_39724)
    binop_x_39726 = (Ry_36988 * binop_x_39725)
    sizze_39727 = (Rx_36990 * binop_x_39726)
    num_threads_39851 = (segmap_group_sizze_34242 * num_groups_34243)
    total_sizze_39852 = (bytes_38749 * num_threads_39851)
    local_memory_capacity_40224 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_40224)) and suff_outer_par_34220):
      mem_38932 = opencl_alloc(self, bytes_38699, "mem_38932")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_38932, np.int64(0),
                                                  images_mem_38682, np.int64(0),
                                                  np.int64(1), N_27810, m_27809)
      mem_38950 = opencl_alloc(self, bytes_38948, "mem_38950")
      mem_38935 = opencl_alloc(self, total_sizze_39852, "mem_38935")
      if ((1 * (np.long(num_groups_34243) * np.long(segmap_group_sizze_34242))) != 0):
        self.mainzisegmap_34222_var.set_args(self.global_failure,
                                             np.int64(N_27808),
                                             np.int64(m_27809),
                                             np.int32(n_27813),
                                             np.int32(k2p2zq_27826),
                                             np.int64(i32_res_27828),
                                             np.int64(num_groups_34243),
                                             binop_p_mem_38691, mem_38932,
                                             mem_38935, mem_38950)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_34222_var,
                                   ((np.long(num_groups_34243) * np.long(segmap_group_sizze_34242)),),
                                   (np.long(segmap_group_sizze_34242),))
        if synchronous:
          sync(self)
      mem_38932 = None
      mem_38935 = None
      mem_39148 = opencl_alloc(self, bytes_38948, "mem_39148")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_39148, np.int64(0),
                                                  mem_38950, np.int64(0),
                                                  np.int64(1), m_27809,
                                                  i32_res_27828)
      mem_38950 = None
      defunc_3_map_res_mem_39150 = mem_39148
    else:
      local_memory_capacity_40223 = self.max_local_memory
      if (sle64((bytes_38965 + bytes_38967),
                sext_i32_i64(local_memory_capacity_40223)) and suff_outer_par_34327):
        tk_div_tx_36992 = sdiv_up64(Tk_36991, Tx_36989)
        tk_div_ty_36993 = sdiv_up64(Tk_36991, Ty_36987)
        gridDim_x_37000 = sdiv_up64(i32_res_27828, TxRx_36994)
        gridDim_y_37001 = sdiv_up64(m_27809, TyRy_36995)
        grid_sizze_37002 = (gridDim_x_37000 * gridDim_y_37001)
        full_tiles_37031 = squot64(i32_res_27822, Tk_36991)
        kk_37238 = (Tk_36991 * full_tiles_37031)
        mem_39140 = opencl_alloc(self, bytes_38948, "mem_39140")
        if ((1 * (np.long(grid_sizze_37002) * np.long(group_sizze_37003))) != 0):
          self.mainzisegmap_intragroup_37006_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_38967)),
                                                          cl.LocalMemory(np.long(bytes_38965)),
                                                          np.int64(m_27809),
                                                          np.int64(N_27810),
                                                          np.int64(i32_res_27822),
                                                          np.int64(i32_res_27828),
                                                          np.int64(gridDim_x_37000),
                                                          np.int64(full_tiles_37031),
                                                          np.int64(kk_37238),
                                                          images_mem_38682,
                                                          mem_38694, mem_39140)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_37006_var,
                                     ((np.long(grid_sizze_37002) * np.long(group_sizze_37003)),),
                                     (np.long(group_sizze_37003),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_39145 = mem_39140
      else:
        mem_39144 = opencl_alloc(self, bytes_38948, "mem_39144")
        if slt64((i32_res_27822 * np.int64(2)), segred_group_sizze_34344):
          segment_sizze_nonzzero_40163 = smax64(np.int64(1), i32_res_27822)
          num_threads_40164 = (num_groups_34345 * segred_group_sizze_34344)
          if ((1 * (np.long(num_groups_34345) * np.long(segred_group_sizze_34344))) != 0):
            self.mainzisegred_small_34292_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34344))),
                                                       np.int64(N_27808),
                                                       np.int64(m_27809),
                                                       np.int64(N_27810),
                                                       np.int64(i32_res_27822),
                                                       np.int64(i32_res_27828),
                                                       np.int64(num_groups_34345),
                                                       images_mem_38682,
                                                       binop_p_mem_38691,
                                                       mem_39144,
                                                       np.int64(segment_sizze_nonzzero_40163))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_34292_var,
                                       ((np.long(num_groups_34345) * np.long(segred_group_sizze_34344)),),
                                       (np.long(segred_group_sizze_34344),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_40184 = sdiv_up64(num_groups_34345,
                                               smax64(np.int64(1),
                                                      (m_27809 * i32_res_27828)))
          elements_per_thread_40185 = sdiv_up64(i32_res_27822,
                                                (segred_group_sizze_34344 * groups_per_segment_40184))
          virt_num_groups_40186 = (groups_per_segment_40184 * (m_27809 * i32_res_27828))
          num_threads_40187 = (num_groups_34345 * segred_group_sizze_34344)
          threads_per_segment_40188 = (groups_per_segment_40184 * segred_group_sizze_34344)
          group_res_arr_mem_40189 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_34344 * virt_num_groups_40186)),
                                                 "group_res_arr_mem_40189")
          mainzicounter_mem_40191 = self.mainzicounter_mem_40191
          if ((1 * (np.long(num_groups_34345) * np.long(segred_group_sizze_34344))) != 0):
            self.mainzisegred_large_34292_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34344))),
                                                       np.int64(N_27808),
                                                       np.int64(N_27810),
                                                       np.int64(i32_res_27822),
                                                       np.int64(i32_res_27828),
                                                       np.int64(num_groups_34345),
                                                       images_mem_38682,
                                                       binop_p_mem_38691,
                                                       mem_39144,
                                                       np.int64(groups_per_segment_40184),
                                                       np.int64(elements_per_thread_40185),
                                                       np.int64(virt_num_groups_40186),
                                                       np.int64(threads_per_segment_40188),
                                                       group_res_arr_mem_40189,
                                                       mainzicounter_mem_40191)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_34292_var,
                                       ((np.long(num_groups_34345) * np.long(segred_group_sizze_34344)),),
                                       (np.long(segred_group_sizze_34344),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_39145 = mem_39144
      defunc_3_map_res_mem_39150 = defunc_3_map_res_mem_39145
    binop_p_mem_38691 = None
    mem_38694 = None
    suff_outer_par_34361 = (self.sizes["main.suff_outer_par_18"] <= m_27809)
    segmap_group_sizze_34382 = self.sizes["main.segmap_group_size_34365"]
    max_num_groups_40225 = self.sizes["main.segmap_num_groups_34367"]
    num_groups_34383 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27809,
                                                            segmap_group_sizze_34382),
                                                  sext_i32_i64(max_num_groups_40225))))
    suff_outer_par_34462 = (self.sizes["main.suff_outer_par_19"] <= nest_sizze_33330)
    segred_group_sizze_34477 = self.sizes["main.segred_group_size_34423"]
    max_num_groups_40226 = self.sizes["main.segred_num_groups_34425"]
    num_groups_34478 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_38847,
                                                            segred_group_sizze_34477),
                                                  sext_i32_i64(max_num_groups_40226))))
    tile_sizze_37450 = self.sizes["main.tile_size_37449"]
    group_sizze_37451 = (tile_sizze_37450 * tile_sizze_37450)
    bytes_39182 = (np.int64(4) * group_sizze_37451)
    binop_x_39740 = (np.int64(4) * tile_sizze_37450)
    sizze_39741 = (tile_sizze_37450 * binop_x_39740)
    num_threads_39855 = (segmap_group_sizze_34382 * num_groups_34383)
    total_sizze_39856 = (bytes_38749 * num_threads_39855)
    local_memory_capacity_40312 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_40312)) and suff_outer_par_34361):
      mem_39154 = opencl_alloc(self, bytes_38744, "mem_39154")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_39154, np.int64(0),
                                                  defunc_3_map_res_mem_38929,
                                                  np.int64(0), np.int64(1),
                                                  (i32_res_27828 * i32_res_27828),
                                                  m_27809)
      mem_39157 = opencl_alloc(self, bytes_38948, "mem_39157")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_39157, np.int64(0),
                                                  defunc_3_map_res_mem_39150,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_27828, m_27809)
      mem_39175 = opencl_alloc(self, bytes_38948, "mem_39175")
      mem_39160 = opencl_alloc(self, total_sizze_39856, "mem_39160")
      if ((1 * (np.long(num_groups_34383) * np.long(segmap_group_sizze_34382))) != 0):
        self.mainzisegmap_34363_var.set_args(self.global_failure,
                                             np.int64(m_27809),
                                             np.int32(k2p2zq_27826),
                                             np.int64(i32_res_27828),
                                             np.int64(num_groups_34383),
                                             mem_39154, mem_39157, mem_39160,
                                             mem_39175)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_34363_var,
                                   ((np.long(num_groups_34383) * np.long(segmap_group_sizze_34382)),),
                                   (np.long(segmap_group_sizze_34382),))
        if synchronous:
          sync(self)
      mem_39154 = None
      mem_39157 = None
      mem_39160 = None
      mem_39214 = opencl_alloc(self, bytes_38948, "mem_39214")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_39214, np.int64(0),
                                                  mem_39175, np.int64(0),
                                                  np.int64(1), m_27809,
                                                  i32_res_27828)
      mem_39175 = None
      defunc_4_map_res_mem_39216 = mem_39214
    else:
      local_memory_capacity_40311 = self.max_local_memory
      if (sle64((bytes_39182 + bytes_39182),
                sext_i32_i64(local_memory_capacity_40311)) and suff_outer_par_34462):
        mem_39179 = opencl_alloc(self, bytes_38845, "mem_39179")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_39179, np.int64(0),
                                                    defunc_3_map_res_mem_38929,
                                                    np.int64(0), np.int64(1),
                                                    i32_res_27828,
                                                    (m_27809 * i32_res_27828))
        num_groups_x_37452 = sdiv_up64(m_27809, tile_sizze_37450)
        num_groups_y_37453 = sdiv_up64(i32_res_27828, tile_sizze_37450)
        num_groups_top_37454 = (num_groups_x_37452 * num_groups_y_37453)
        num_whole_tiles_37471 = squot64(i32_res_27828, tile_sizze_37450)
        residual_input_37598 = srem64(i32_res_27828, tile_sizze_37450)
        cond_37599 = (residual_input_37598 == np.int64(0))
        mem_39206 = opencl_alloc(self, bytes_38948, "mem_39206")
        if ((1 * (np.long(num_groups_top_37454) * np.long(group_sizze_37451))) != 0):
          self.mainzisegmap_intragroup_37455_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_39182)),
                                                          cl.LocalMemory(np.long(bytes_39182)),
                                                          np.int64(m_27809),
                                                          np.int64(i32_res_27828),
                                                          np.int64(num_groups_y_37453),
                                                          np.int64(num_whole_tiles_37471),
                                                          np.int64(residual_input_37598),
                                                          np.byte(cond_37599),
                                                          defunc_3_map_res_mem_39150,
                                                          mem_39179, mem_39206)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_37455_var,
                                     ((np.long(num_groups_top_37454) * np.long(group_sizze_37451)),),
                                     (np.long(group_sizze_37451),))
          if synchronous:
            sync(self)
        mem_39179 = None
        defunc_4_map_res_mem_39211 = mem_39206
      else:
        mem_39210 = opencl_alloc(self, bytes_38948, "mem_39210")
        if slt64((i32_res_27828 * np.int64(2)), segred_group_sizze_34477):
          segment_sizze_nonzzero_40251 = smax64(np.int64(1), i32_res_27828)
          num_threads_40252 = (num_groups_34478 * segred_group_sizze_34477)
          if ((1 * (np.long(num_groups_34478) * np.long(segred_group_sizze_34477))) != 0):
            self.mainzisegred_small_34429_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34477))),
                                                       np.int64(m_27809),
                                                       np.int64(i32_res_27828),
                                                       np.int64(num_groups_34478),
                                                       defunc_3_map_res_mem_38929,
                                                       defunc_3_map_res_mem_39150,
                                                       mem_39210,
                                                       np.int64(segment_sizze_nonzzero_40251))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_34429_var,
                                       ((np.long(num_groups_34478) * np.long(segred_group_sizze_34477)),),
                                       (np.long(segred_group_sizze_34477),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_40272 = sdiv_up64(num_groups_34478,
                                               smax64(np.int64(1),
                                                      (m_27809 * i32_res_27828)))
          elements_per_thread_40273 = sdiv_up64(i32_res_27828,
                                                (segred_group_sizze_34477 * groups_per_segment_40272))
          virt_num_groups_40274 = (groups_per_segment_40272 * (m_27809 * i32_res_27828))
          num_threads_40275 = (num_groups_34478 * segred_group_sizze_34477)
          threads_per_segment_40276 = (groups_per_segment_40272 * segred_group_sizze_34477)
          group_res_arr_mem_40277 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_34477 * virt_num_groups_40274)),
                                                 "group_res_arr_mem_40277")
          mainzicounter_mem_40279 = self.mainzicounter_mem_40279
          if ((1 * (np.long(num_groups_34478) * np.long(segred_group_sizze_34477))) != 0):
            self.mainzisegred_large_34429_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34477))),
                                                       np.int64(i32_res_27828),
                                                       np.int64(num_groups_34478),
                                                       defunc_3_map_res_mem_38929,
                                                       defunc_3_map_res_mem_39150,
                                                       mem_39210,
                                                       np.int64(groups_per_segment_40272),
                                                       np.int64(elements_per_thread_40273),
                                                       np.int64(virt_num_groups_40274),
                                                       np.int64(threads_per_segment_40276),
                                                       group_res_arr_mem_40277,
                                                       mainzicounter_mem_40279)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_34429_var,
                                       ((np.long(num_groups_34478) * np.long(segred_group_sizze_34477)),),
                                       (np.long(segred_group_sizze_34477),))
            if synchronous:
              sync(self)
        defunc_4_map_res_mem_39211 = mem_39210
      defunc_4_map_res_mem_39216 = defunc_4_map_res_mem_39211
    defunc_3_map_res_mem_38929 = None
    defunc_3_map_res_mem_39150 = None
    suff_outer_par_34493 = (self.sizes["main.suff_outer_par_20"] <= m_27809)
    segmap_group_sizze_34513 = self.sizes["main.segmap_group_size_34497"]
    max_num_groups_40313 = self.sizes["main.segmap_num_groups_34499"]
    num_groups_34514 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27809,
                                                            segmap_group_sizze_34513),
                                                  sext_i32_i64(max_num_groups_40313))))
    comparatee_34589 = (N_27808 * m_27809)
    suff_outer_par_34590 = (self.sizes["main.suff_outer_par_21"] <= comparatee_34589)
    nest_sizze_34604 = (i32_res_27828 * comparatee_34589)
    segred_group_sizze_34605 = self.sizes["main.segred_group_size_34553"]
    max_num_groups_40314 = self.sizes["main.segred_num_groups_34555"]
    num_groups_34606 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_34604,
                                                            segred_group_sizze_34605),
                                                  sext_i32_i64(max_num_groups_40314))))
    Ty_37728 = self.sizes["main.Ty_37725"]
    Ry_37729 = self.sizes["main.Ry_37727"]
    Tx_37730 = self.sizes["main.Tx_37724"]
    Rx_37731 = self.sizes["main.Rx_37726"]
    Tk_37732 = self.sizes["main.Tk_37723"]
    TxRx_37735 = (Tx_37730 * Rx_37731)
    TyRy_37736 = (Ty_37728 * Ry_37729)
    a_loc_szz_37738 = (Tk_37732 * TyRy_37736)
    binop_x_37739 = (Tx_37730 * Tk_37732)
    b_loc_szz_37740 = (Rx_37731 * binop_x_37739)
    group_sizze_37744 = (Ty_37728 * Tx_37730)
    bytes_39235 = (np.int64(4) * comparatee_34589)
    bytes_39221 = (np.int64(4) * N_27808)
    binop_x_39252 = (Ry_37729 * group_sizze_37744)
    binop_x_39253 = (Rx_37731 * binop_x_39252)
    bytes_39250 = (np.int64(4) * binop_x_39253)
    binop_x_39244 = (Ry_37729 * Rx_37731)
    bytes_39243 = (np.int64(4) * binop_x_39244)
    bytes_39255 = (np.int64(4) * a_loc_szz_37738)
    bytes_39257 = (np.int64(4) * b_loc_szz_37740)
    bytes_39326 = (np.int64(4) * binop_x_39252)
    binop_x_39332 = (Rx_37731 * group_sizze_37744)
    bytes_39330 = (np.int64(4) * binop_x_39332)
    bytes_39318 = (np.int64(4) * Ry_37729)
    bytes_39320 = (np.int64(4) * Rx_37731)
    binop_x_39754 = (np.int64(4) * Ty_37728)
    binop_x_39755 = (Tx_37730 * binop_x_39754)
    binop_x_39756 = (Ry_37729 * binop_x_39755)
    sizze_39757 = (Rx_37731 * binop_x_39756)
    num_threads_39859 = (segmap_group_sizze_34513 * num_groups_34514)
    total_sizze_39860 = (bytes_39221 * num_threads_39859)
    local_memory_capacity_40444 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_40444)) and suff_outer_par_34493):
      mem_39219 = opencl_alloc(self, bytes_38948, "mem_39219")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_39219, np.int64(0),
                                                  defunc_4_map_res_mem_39216,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_27828, m_27809)
      mem_39237 = opencl_alloc(self, bytes_39235, "mem_39237")
      mem_39222 = opencl_alloc(self, total_sizze_39860, "mem_39222")
      if ((1 * (np.long(num_groups_34514) * np.long(segmap_group_sizze_34513))) != 0):
        self.mainzisegmap_34495_var.set_args(self.global_failure,
                                             np.int64(N_27808),
                                             np.int64(m_27809),
                                             np.int32(k2p2zq_27826),
                                             np.int64(i32_res_27828),
                                             np.int64(num_groups_34514),
                                             mem_38698, mem_39219, mem_39222,
                                             mem_39237)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_34495_var,
                                   ((np.long(num_groups_34514) * np.long(segmap_group_sizze_34513)),),
                                   (np.long(segmap_group_sizze_34513),))
        if synchronous:
          sync(self)
      mem_39219 = None
      mem_39222 = None
      mem_39438 = opencl_alloc(self, bytes_39235, "mem_39438")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_39438, np.int64(0),
                                                  mem_39237, np.int64(0),
                                                  np.int64(1), m_27809, N_27808)
      mem_39237 = None
      defunc_3_map_res_mem_39440 = mem_39438
    else:
      local_memory_capacity_40443 = self.max_local_memory
      if (sle64((bytes_39255 + bytes_39257),
                sext_i32_i64(local_memory_capacity_40443)) and suff_outer_par_34590):
        mem_39240 = opencl_alloc(self, bytes_38684, "mem_39240")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_39240, np.int64(0),
                                                    mem_38698, np.int64(0),
                                                    np.int64(1), i32_res_27828,
                                                    N_27808)
        tk_div_tx_37733 = sdiv_up64(Tk_37732, Tx_37730)
        tk_div_ty_37734 = sdiv_up64(Tk_37732, Ty_37728)
        gridDim_x_37741 = sdiv_up64(N_27808, TxRx_37735)
        gridDim_y_37742 = sdiv_up64(m_27809, TyRy_37736)
        grid_sizze_37743 = (gridDim_x_37741 * gridDim_y_37742)
        full_tiles_37772 = squot64(i32_res_27828, Tk_37732)
        kk_37975 = (Tk_37732 * full_tiles_37772)
        mem_39430 = opencl_alloc(self, bytes_39235, "mem_39430")
        if ((1 * (np.long(grid_sizze_37743) * np.long(group_sizze_37744))) != 0):
          self.mainzisegmap_intragroup_37747_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_39257)),
                                                          cl.LocalMemory(np.long(bytes_39255)),
                                                          np.int64(N_27808),
                                                          np.int64(m_27809),
                                                          np.int64(i32_res_27828),
                                                          np.int64(gridDim_x_37741),
                                                          np.int64(full_tiles_37772),
                                                          np.int64(kk_37975),
                                                          defunc_4_map_res_mem_39216,
                                                          mem_39240, mem_39430)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_37747_var,
                                     ((np.long(grid_sizze_37743) * np.long(group_sizze_37744)),),
                                     (np.long(group_sizze_37744),))
          if synchronous:
            sync(self)
        mem_39240 = None
        defunc_3_map_res_mem_39435 = mem_39430
      else:
        mem_39434 = opencl_alloc(self, bytes_39235, "mem_39434")
        if slt64((i32_res_27828 * np.int64(2)), segred_group_sizze_34605):
          segment_sizze_nonzzero_40383 = smax64(np.int64(1), i32_res_27828)
          num_threads_40384 = (num_groups_34606 * segred_group_sizze_34605)
          if ((1 * (np.long(num_groups_34606) * np.long(segred_group_sizze_34605))) != 0):
            self.mainzisegred_small_34559_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34605))),
                                                       np.int64(N_27808),
                                                       np.int64(m_27809),
                                                       np.int64(i32_res_27828),
                                                       np.int64(num_groups_34606),
                                                       mem_38698,
                                                       defunc_4_map_res_mem_39216,
                                                       mem_39434,
                                                       np.int64(segment_sizze_nonzzero_40383))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_34559_var,
                                       ((np.long(num_groups_34606) * np.long(segred_group_sizze_34605)),),
                                       (np.long(segred_group_sizze_34605),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_40404 = sdiv_up64(num_groups_34606,
                                               smax64(np.int64(1),
                                                      (m_27809 * N_27808)))
          elements_per_thread_40405 = sdiv_up64(i32_res_27828,
                                                (segred_group_sizze_34605 * groups_per_segment_40404))
          virt_num_groups_40406 = (groups_per_segment_40404 * (m_27809 * N_27808))
          num_threads_40407 = (num_groups_34606 * segred_group_sizze_34605)
          threads_per_segment_40408 = (groups_per_segment_40404 * segred_group_sizze_34605)
          group_res_arr_mem_40409 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_34605 * virt_num_groups_40406)),
                                                 "group_res_arr_mem_40409")
          mainzicounter_mem_40411 = self.mainzicounter_mem_40411
          if ((1 * (np.long(num_groups_34606) * np.long(segred_group_sizze_34605))) != 0):
            self.mainzisegred_large_34559_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34605))),
                                                       np.int64(N_27808),
                                                       np.int64(i32_res_27828),
                                                       np.int64(num_groups_34606),
                                                       mem_38698,
                                                       defunc_4_map_res_mem_39216,
                                                       mem_39434,
                                                       np.int64(groups_per_segment_40404),
                                                       np.int64(elements_per_thread_40405),
                                                       np.int64(virt_num_groups_40406),
                                                       np.int64(threads_per_segment_40408),
                                                       group_res_arr_mem_40409,
                                                       mainzicounter_mem_40411)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_34559_var,
                                       ((np.long(num_groups_34606) * np.long(segred_group_sizze_34605)),),
                                       (np.long(segred_group_sizze_34605),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_39435 = mem_39434
      defunc_3_map_res_mem_39440 = defunc_3_map_res_mem_39435
    mem_38698 = None
    defunc_4_map_res_mem_39216 = None
    i_28088 = (N_27808 - np.int64(1))
    x_28089 = sle64(np.int64(0), i_28088)
    y_28090 = slt64(i_28088, N_27808)
    bounds_check_28091 = (x_28089 and y_28090)
    index_certs_28092 = True
    assert bounds_check_28091, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:18:29-34\n   #1  helpers.fut:20:13-20\n   #2  bfastfinal.fut:80:30-91\n   #3  /prelude/soacs.fut:56:19-23\n   #4  /prelude/soacs.fut:56:3-37\n   #5  bfastfinal.fut:74:5-83:25\n   #6  bfastfinal.fut:182:5-58\n   #7  bfastfinal.fut:177:1-183:32\n" % ("Index [",
                                                                                                                                                                                                                                                                                                                                                     i_28088,
                                                                                                                                                                                                                                                                                                                                                     "] out of bounds for array of shape [",
                                                                                                                                                                                                                                                                                                                                                     N_27808,
                                                                                                                                                                                                                                                                                                                                                     "]."))
    fits_34735 = sle64(N_27808, max_group_sizze_33598)
    suff_intra_par_34733 = (self.sizes["main.suff_intra_par_24"] <= N_27808)
    intra_suff_and_fits_34736 = (suff_intra_par_34733 and fits_34735)
    segscan_group_sizze_34885 = self.sizes["main.segscan_group_size_34862"]
    max_num_groups_40445 = self.sizes["main.segscan_num_groups_34864"]
    num_groups_34886 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(comparatee_34589,
                                                            segscan_group_sizze_34885),
                                                  sext_i32_i64(max_num_groups_40445))))
    segmap_group_sizze_34905 = self.sizes["main.segmap_group_size_34853"]
    mem_39443 = opencl_alloc(self, bytes_39235, "mem_39443")
    self.futhark_builtinzhreplicate_f32(mem_39443, (m_27809 * N_27808), np.nan)
    mem_39446 = opencl_alloc(self, bytes_39235, "mem_39446")
    self.futhark_builtinzhreplicate_i32(mem_39446, (m_27809 * N_27808),
                                        np.int32(0))
    segmap_group_sizze_34941 = self.sizes["main.segmap_group_size_34778"]
    bytes_39458 = (np.int64(4) * m_27809)
    bytes_39449 = (np.int64(8) * N_27808)
    bytes_39467 = (np.int64(8) * comparatee_34589)
    local_memory_capacity_40547 = self.max_local_memory
    if (sle64((((bytes_39449 + bytes_39221) + bytes_39221) + bytes_39221),
              sext_i32_i64(local_memory_capacity_40547)) and intra_suff_and_fits_34736):
      mem_39459 = opencl_alloc(self, bytes_39458, "mem_39459")
      mem_39462 = opencl_alloc(self, bytes_39235, "mem_39462")
      mem_39465 = opencl_alloc(self, bytes_39235, "mem_39465")
      if ((1 * (np.long(m_27809) * np.long(N_27808))) != 0):
        self.mainzisegmap_intragroup_34658_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_39221)),
                                                        cl.LocalMemory(np.long(bytes_39221)),
                                                        cl.LocalMemory(np.long(bytes_39221)),
                                                        cl.LocalMemory(np.long(bytes_39449)),
                                                        np.int64(N_27808),
                                                        np.int64(N_27810),
                                                        np.int64(i_28088),
                                                        images_mem_38682,
                                                        defunc_3_map_res_mem_39440,
                                                        mem_39459, mem_39462,
                                                        mem_39465)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_34658_var,
                                   ((np.long(m_27809) * np.long(N_27808)),),
                                   (np.long(N_27808),))
        if synchronous:
          sync(self)
      defunc_4_map_res_mem_39477 = mem_39459
      defunc_4_map_res_mem_39478 = mem_39462
      defunc_4_map_res_mem_39479 = mem_39465
    else:
      mem_39469 = opencl_alloc(self, bytes_39467, "mem_39469")
      mem_39472 = opencl_alloc(self, bytes_39235, "mem_39472")
      if slt64(np.int64(0), (m_27809 * N_27808)):
        stage1_max_num_groups_40481 = self.max_group_size
        stage1_num_groups_40482 = smin64(stage1_max_num_groups_40481,
                                         num_groups_34886)
        num_threads_40483 = sext_i64_i32((stage1_num_groups_40482 * segscan_group_sizze_34885))
        if ((1 * (np.long(stage1_num_groups_40482) * np.long(segscan_group_sizze_34885))) != 0):
          self.mainziscan_stage1_34868_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(8) * segscan_group_sizze_34885)))),
                                                    np.int64(N_27808),
                                                    np.int64(m_27809),
                                                    np.int64(N_27810),
                                                    images_mem_38682,
                                                    defunc_3_map_res_mem_39440,
                                                    mem_39469, mem_39472,
                                                    np.int32(num_threads_40483))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage1_34868_var,
                                     ((np.long(stage1_num_groups_40482) * np.long(segscan_group_sizze_34885)),),
                                     (np.long(segscan_group_sizze_34885),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_40482))) != 0):
          self.mainziscan_stage2_34868_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(8) * stage1_num_groups_40482)))),
                                                    np.int64(N_27808),
                                                    np.int64(m_27809),
                                                    mem_39469,
                                                    np.int64(stage1_num_groups_40482),
                                                    np.int32(num_threads_40483))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage2_34868_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_40482)),),
                                     (np.long(stage1_num_groups_40482),))
          if synchronous:
            sync(self)
        required_groups_40525 = sext_i64_i32(sdiv_up64((m_27809 * N_27808),
                                                       segscan_group_sizze_34885))
        if ((1 * (np.long(num_groups_34886) * np.long(segscan_group_sizze_34885))) != 0):
          self.mainziscan_stage3_34868_var.set_args(self.global_failure,
                                                    np.int64(N_27808),
                                                    np.int64(m_27809),
                                                    np.int64(num_groups_34886),
                                                    mem_39469,
                                                    np.int32(num_threads_40483),
                                                    np.int32(required_groups_40525))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage3_34868_var,
                                     ((np.long(num_groups_34886) * np.long(segscan_group_sizze_34885)),),
                                     (np.long(segscan_group_sizze_34885),))
          if synchronous:
            sync(self)
      segmap_usable_groups_34906 = sdiv_up64(m_27809, segmap_group_sizze_34905)
      mem_39475 = opencl_alloc(self, bytes_39458, "mem_39475")
      if ((1 * (np.long(segmap_usable_groups_34906) * np.long(segmap_group_sizze_34905))) != 0):
        self.mainzisegmap_34851_var.set_args(self.global_failure,
                                             np.int64(N_27808),
                                             np.int64(m_27809),
                                             np.int64(i_28088), mem_39469,
                                             mem_39475)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_34851_var,
                                   ((np.long(segmap_usable_groups_34906) * np.long(segmap_group_sizze_34905)),),
                                   (np.long(segmap_group_sizze_34905),))
        if synchronous:
          sync(self)
      segmap_usable_groups_34942 = sdiv_up64(comparatee_34589,
                                             segmap_group_sizze_34941)
      if ((1 * (np.long(segmap_usable_groups_34942) * np.long(segmap_group_sizze_34941))) != 0):
        self.mainzisegmap_34775_var.set_args(self.global_failure,
                                             np.int64(N_27808),
                                             np.int64(m_27809), mem_39443,
                                             mem_39446, mem_39469, mem_39472)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_34775_var,
                                   ((np.long(segmap_usable_groups_34942) * np.long(segmap_group_sizze_34941)),),
                                   (np.long(segmap_group_sizze_34941),))
        if synchronous:
          sync(self)
      mem_39469 = None
      mem_39472 = None
      defunc_4_map_res_mem_39477 = mem_39475
      defunc_4_map_res_mem_39478 = mem_39443
      defunc_4_map_res_mem_39479 = mem_39446
    defunc_3_map_res_mem_39440 = None
    mem_39443 = None
    mem_39446 = None
    suff_outer_par_34990 = (self.sizes["main.suff_outer_par_28"] <= m_27809)
    fits_35068 = sle64(i32_res_27822, max_group_sizze_33598)
    suff_intra_par_35066 = (self.sizes["main.suff_intra_par_29"] <= i32_res_27822)
    intra_suff_and_fits_35069 = (suff_intra_par_35066 and fits_35068)
    segmap_group_sizze_35033 = self.sizes["main.segmap_group_size_35002"]
    nest_sizze_35156 = (m_27809 * i32_res_27822)
    segred_group_sizze_35157 = self.sizes["main.segred_group_size_35140"]
    max_num_groups_40548 = self.sizes["main.segred_num_groups_35142"]
    num_groups_35158 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_35156,
                                                            segred_group_sizze_35157),
                                                  sext_i32_i64(max_num_groups_40548))))
    segred_group_sizze_35171 = self.sizes["main.segred_group_size_35119"]
    max_num_groups_40549 = self.sizes["main.segred_num_groups_35121"]
    num_groups_35172 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_35156,
                                                            segred_group_sizze_35171),
                                                  sext_i32_i64(max_num_groups_40549))))
    segmap_group_sizze_35187 = self.sizes["main.segmap_group_size_35104"]
    bytes_39488 = (np.int64(4) * segmap_group_sizze_35033)
    local_memory_capacity_40703 = self.max_local_memory
    if (sle64((bytes_39488 + bytes_39488),
              sext_i32_i64(local_memory_capacity_40703)) and suff_outer_par_34990):
      segmap_usable_groups_35034 = sdiv_up64(m_27809, segmap_group_sizze_35033)
      mem_39482 = opencl_alloc(self, bytes_38699, "mem_39482")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_39482, np.int64(0),
                                                  images_mem_38682, np.int64(0),
                                                  np.int64(1), N_27810, m_27809)
      mem_39485 = opencl_alloc(self, bytes_39235, "mem_39485")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_39485, np.int64(0),
                                                  defunc_4_map_res_mem_39478,
                                                  np.int64(0), np.int64(1),
                                                  N_27808, m_27809)
      num_whole_tiles_38189 = squot64(i32_res_27822, segmap_group_sizze_35033)
      residual_input_38310 = srem64(i32_res_27822, segmap_group_sizze_35033)
      cond_38311 = (residual_input_38310 == np.int64(0))
      mem_39513 = opencl_alloc(self, bytes_39458, "mem_39513")
      mem_39515 = opencl_alloc(self, bytes_39458, "mem_39515")
      mem_39517 = opencl_alloc(self, bytes_39458, "mem_39517")
      if ((1 * (np.long(segmap_usable_groups_35034) * np.long(segmap_group_sizze_35033))) != 0):
        self.mainzisegmap_intragroup_38181_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_39488)),
                                                        cl.LocalMemory(np.long(bytes_39488)),
                                                        np.int64(m_27809),
                                                        np.int32(n_27813),
                                                        np.float32(hfrac_27815),
                                                        np.int64(i32_res_27822),
                                                        np.int32(k2p2_27824),
                                                        np.int64(num_whole_tiles_38189),
                                                        np.int64(residual_input_38310),
                                                        np.byte(cond_38311),
                                                        mem_39482, mem_39485,
                                                        mem_39513, mem_39515,
                                                        mem_39517)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_38181_var,
                                   ((np.long(segmap_usable_groups_35034) * np.long(segmap_group_sizze_35033)),),
                                   (np.long(segmap_group_sizze_35033),))
        if synchronous:
          sync(self)
      mem_39482 = None
      mem_39485 = None
      defunc_3_map_res_mem_39541 = mem_39513
      defunc_3_map_res_mem_39542 = mem_39515
      defunc_3_map_res_mem_39543 = mem_39517
    else:
      local_memory_capacity_40702 = self.max_local_memory
      if (sle64(((np.int32(4) * i32_res_27822) + (np.int32(4) * i32_res_27822)),
                sext_i32_i64(local_memory_capacity_40702)) and intra_suff_and_fits_35069):
        mem_39522 = opencl_alloc(self, bytes_39458, "mem_39522")
        mem_39524 = opencl_alloc(self, bytes_39458, "mem_39524")
        mem_39526 = opencl_alloc(self, bytes_39458, "mem_39526")
        if ((1 * (np.long(m_27809) * np.long(i32_res_27822))) != 0):
          self.mainzisegmap_intragroup_34998_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long((np.int32(4) * i32_res_27822))),
                                                          cl.LocalMemory(np.long((np.int32(4) * i32_res_27822))),
                                                          np.int64(N_27808),
                                                          np.int64(N_27810),
                                                          np.float32(hfrac_27815),
                                                          np.int64(i32_res_27822),
                                                          np.int32(k2p2_27824),
                                                          images_mem_38682,
                                                          defunc_4_map_res_mem_39478,
                                                          mem_39522, mem_39524,
                                                          mem_39526)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_34998_var,
                                     ((np.long(m_27809) * np.long(i32_res_27822)),),
                                     (np.long(i32_res_27822),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_39538 = mem_39522
        defunc_3_map_res_mem_39539 = mem_39524
        defunc_3_map_res_mem_39540 = mem_39526
      else:
        mem_39529 = opencl_alloc(self, bytes_39458, "mem_39529")
        if slt64((i32_res_27822 * np.int64(2)), segred_group_sizze_35157):
          segment_sizze_nonzzero_40577 = smax64(np.int64(1), i32_res_27822)
          num_threads_40578 = (num_groups_35158 * segred_group_sizze_35157)
          if ((1 * (np.long(num_groups_35158) * np.long(segred_group_sizze_35157))) != 0):
            self.mainzisegred_small_35146_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35157))),
                                                       np.int64(m_27809),
                                                       np.int64(N_27810),
                                                       np.int64(i32_res_27822),
                                                       np.int64(num_groups_35158),
                                                       images_mem_38682,
                                                       mem_39529,
                                                       np.int64(segment_sizze_nonzzero_40577))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_35146_var,
                                       ((np.long(num_groups_35158) * np.long(segred_group_sizze_35157)),),
                                       (np.long(segred_group_sizze_35157),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_40598 = sdiv_up64(num_groups_35158,
                                               smax64(np.int64(1), m_27809))
          elements_per_thread_40599 = sdiv_up64(i32_res_27822,
                                                (segred_group_sizze_35157 * groups_per_segment_40598))
          virt_num_groups_40600 = (groups_per_segment_40598 * m_27809)
          num_threads_40601 = (num_groups_35158 * segred_group_sizze_35157)
          threads_per_segment_40602 = (groups_per_segment_40598 * segred_group_sizze_35157)
          group_res_arr_mem_40603 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_35157 * virt_num_groups_40600)),
                                                 "group_res_arr_mem_40603")
          mainzicounter_mem_40605 = self.mainzicounter_mem_40605
          if ((1 * (np.long(num_groups_35158) * np.long(segred_group_sizze_35157))) != 0):
            self.mainzisegred_large_35146_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35157))),
                                                       np.int64(N_27810),
                                                       np.int64(i32_res_27822),
                                                       np.int64(num_groups_35158),
                                                       images_mem_38682,
                                                       mem_39529,
                                                       np.int64(groups_per_segment_40598),
                                                       np.int64(elements_per_thread_40599),
                                                       np.int64(virt_num_groups_40600),
                                                       np.int64(threads_per_segment_40602),
                                                       group_res_arr_mem_40603,
                                                       mainzicounter_mem_40605)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_35146_var,
                                       ((np.long(num_groups_35158) * np.long(segred_group_sizze_35157)),),
                                       (np.long(segred_group_sizze_35157),))
            if synchronous:
              sync(self)
        mem_39532 = opencl_alloc(self, bytes_39458, "mem_39532")
        if slt64((i32_res_27822 * np.int64(2)), segred_group_sizze_35171):
          segment_sizze_nonzzero_40637 = smax64(np.int64(1), i32_res_27822)
          num_threads_40638 = (num_groups_35172 * segred_group_sizze_35171)
          if ((1 * (np.long(num_groups_35172) * np.long(segred_group_sizze_35171))) != 0):
            self.mainzisegred_small_35125_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35171))),
                                                       np.int64(N_27808),
                                                       np.int64(m_27809),
                                                       np.int64(i32_res_27822),
                                                       np.int64(num_groups_35172),
                                                       defunc_4_map_res_mem_39478,
                                                       mem_39529, mem_39532,
                                                       np.int64(segment_sizze_nonzzero_40637))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_35125_var,
                                       ((np.long(num_groups_35172) * np.long(segred_group_sizze_35171)),),
                                       (np.long(segred_group_sizze_35171),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_40658 = sdiv_up64(num_groups_35172,
                                               smax64(np.int64(1), m_27809))
          elements_per_thread_40659 = sdiv_up64(i32_res_27822,
                                                (segred_group_sizze_35171 * groups_per_segment_40658))
          virt_num_groups_40660 = (groups_per_segment_40658 * m_27809)
          num_threads_40661 = (num_groups_35172 * segred_group_sizze_35171)
          threads_per_segment_40662 = (groups_per_segment_40658 * segred_group_sizze_35171)
          group_res_arr_mem_40663 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_35171 * virt_num_groups_40660)),
                                                 "group_res_arr_mem_40663")
          mainzicounter_mem_40665 = self.mainzicounter_mem_40665
          if ((1 * (np.long(num_groups_35172) * np.long(segred_group_sizze_35171))) != 0):
            self.mainzisegred_large_35125_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35171))),
                                                       np.int64(N_27808),
                                                       np.int64(i32_res_27822),
                                                       np.int64(num_groups_35172),
                                                       defunc_4_map_res_mem_39478,
                                                       mem_39529, mem_39532,
                                                       np.int64(groups_per_segment_40658),
                                                       np.int64(elements_per_thread_40659),
                                                       np.int64(virt_num_groups_40660),
                                                       np.int64(threads_per_segment_40662),
                                                       group_res_arr_mem_40663,
                                                       mainzicounter_mem_40665)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_35125_var,
                                       ((np.long(num_groups_35172) * np.long(segred_group_sizze_35171)),),
                                       (np.long(segred_group_sizze_35171),))
            if synchronous:
              sync(self)
        segmap_usable_groups_35188 = sdiv_up64(m_27809,
                                               segmap_group_sizze_35187)
        mem_39535 = opencl_alloc(self, bytes_39458, "mem_39535")
        mem_39537 = opencl_alloc(self, bytes_39458, "mem_39537")
        if ((1 * (np.long(segmap_usable_groups_35188) * np.long(segmap_group_sizze_35187))) != 0):
          self.mainzisegmap_35102_var.set_args(self.global_failure,
                                               np.int64(m_27809),
                                               np.float32(hfrac_27815),
                                               np.int32(k2p2_27824), mem_39529,
                                               mem_39532, mem_39535, mem_39537)
          cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_35102_var,
                                     ((np.long(segmap_usable_groups_35188) * np.long(segmap_group_sizze_35187)),),
                                     (np.long(segmap_group_sizze_35187),))
          if synchronous:
            sync(self)
        mem_39532 = None
        defunc_3_map_res_mem_39538 = mem_39535
        defunc_3_map_res_mem_39539 = mem_39529
        defunc_3_map_res_mem_39540 = mem_39537
      defunc_3_map_res_mem_39541 = defunc_3_map_res_mem_39538
      defunc_3_map_res_mem_39542 = defunc_3_map_res_mem_39539
      defunc_3_map_res_mem_39543 = defunc_3_map_res_mem_39540
    segred_group_sizze_35208 = self.sizes["main.segred_group_size_35207"]
    max_num_groups_40704 = self.sizes["main.segred_num_groups_35209"]
    num_groups_35210 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27809,
                                                            segred_group_sizze_35208),
                                                  sext_i32_i64(max_num_groups_40704))))
    mem_39546 = opencl_alloc(self, np.int64(4), "mem_39546")
    mainzicounter_mem_40705 = self.mainzicounter_mem_40705
    group_res_arr_mem_40707 = opencl_alloc(self,
                                           (np.int32(4) * (segred_group_sizze_35208 * num_groups_35210)),
                                           "group_res_arr_mem_40707")
    num_threads_40709 = (num_groups_35210 * segred_group_sizze_35208)
    if ((1 * (np.long(num_groups_35210) * np.long(segred_group_sizze_35208))) != 0):
      self.mainzisegred_nonseg_35215_var.set_args(self.global_failure,
                                                  cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35208))),
                                                  cl.LocalMemory(np.long(np.int32(1))),
                                                  np.int64(m_27809),
                                                  np.int64(num_groups_35210),
                                                  defunc_3_map_res_mem_39541,
                                                  mem_39546,
                                                  mainzicounter_mem_40705,
                                                  group_res_arr_mem_40707,
                                                  np.int64(num_threads_40709))
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegred_nonseg_35215_var,
                                 ((np.long(num_groups_35210) * np.long(segred_group_sizze_35208)),),
                                 (np.long(segred_group_sizze_35208),))
      if synchronous:
        sync(self)
    read_res_41068 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_41068, mem_39546,
                    device_offset=(np.long(np.int64(0)) * 4),
                    is_blocking=synchronous)
    sync(self)
    defunc_2_reduce_comm_res_28178 = read_res_41068[0]
    mem_39546 = None
    i32_res_28183 = sext_i32_i64(defunc_2_reduce_comm_res_28178)
    bounds_invalid_upwards_28184 = slt64(i32_res_28183, np.int64(0))
    valid_28185 = not(bounds_invalid_upwards_28184)
    range_valid_c_28186 = True
    assert valid_28185, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:5:3-18\n   #2  bfastfinal.fut:108:34-46\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:103:17-110:24\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:32\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                                                                    i32_res_28183,
                                                                                                                                                                                                                                                                                                                    " is invalid."))
    suff_outer_par_35247 = (self.sizes["main.suff_outer_par_31"] <= m_27809)
    segmap_group_sizze_35270 = self.sizes["main.segmap_group_size_35251"]
    nest_sizze_35313 = (m_27809 * i32_res_28183)
    segred_group_sizze_35314 = self.sizes["main.segred_group_size_35291"]
    max_num_groups_40735 = self.sizes["main.segred_num_groups_35293"]
    num_groups_35315 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_35313,
                                                            segred_group_sizze_35314),
                                                  sext_i32_i64(max_num_groups_40735))))
    bytes_39549 = (np.int64(4) * segmap_group_sizze_35270)
    local_memory_capacity_40806 = self.max_local_memory
    if (sle64((bytes_39549 + bytes_39549),
              sext_i32_i64(local_memory_capacity_40806)) and suff_outer_par_35247):
      segmap_usable_groups_35271 = sdiv_up64(m_27809, segmap_group_sizze_35270)
      num_whole_tiles_38433 = squot64(i32_res_28183, segmap_group_sizze_35270)
      residual_input_38532 = srem64(i32_res_28183, segmap_group_sizze_35270)
      cond_38533 = (residual_input_38532 == np.int64(0))
      mem_39572 = opencl_alloc(self, bytes_39458, "mem_39572")
      if ((1 * (np.long(segmap_usable_groups_35271) * np.long(segmap_group_sizze_35270))) != 0):
        self.mainzisegmap_intragroup_38413_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_39549)),
                                                        cl.LocalMemory(np.long(bytes_39549)),
                                                        np.int64(N_27808),
                                                        np.int64(m_27809),
                                                        np.int64(i32_res_28183),
                                                        np.int64(num_whole_tiles_38433),
                                                        np.int64(residual_input_38532),
                                                        np.byte(cond_38533),
                                                        defunc_4_map_res_mem_39478,
                                                        defunc_3_map_res_mem_39541,
                                                        defunc_3_map_res_mem_39542,
                                                        mem_39572)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_38413_var,
                                   ((np.long(segmap_usable_groups_35271) * np.long(segmap_group_sizze_35270)),),
                                   (np.long(segmap_group_sizze_35270),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_39576 = mem_39572
    else:
      mem_39575 = opencl_alloc(self, bytes_39458, "mem_39575")
      if slt64((i32_res_28183 * np.int64(2)), segred_group_sizze_35314):
        segment_sizze_nonzzero_40746 = smax64(np.int64(1), i32_res_28183)
        num_threads_40747 = (num_groups_35315 * segred_group_sizze_35314)
        if ((1 * (np.long(num_groups_35315) * np.long(segred_group_sizze_35314))) != 0):
          self.mainzisegred_small_35297_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35314))),
                                                     np.int64(N_27808),
                                                     np.int64(m_27809),
                                                     np.int64(i32_res_28183),
                                                     np.int64(num_groups_35315),
                                                     defunc_4_map_res_mem_39478,
                                                     defunc_3_map_res_mem_39541,
                                                     defunc_3_map_res_mem_39542,
                                                     mem_39575,
                                                     np.int64(segment_sizze_nonzzero_40746))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_small_35297_var,
                                     ((np.long(num_groups_35315) * np.long(segred_group_sizze_35314)),),
                                     (np.long(segred_group_sizze_35314),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_40767 = sdiv_up64(num_groups_35315,
                                             smax64(np.int64(1), m_27809))
        elements_per_thread_40768 = sdiv_up64(i32_res_28183,
                                              (segred_group_sizze_35314 * groups_per_segment_40767))
        virt_num_groups_40769 = (groups_per_segment_40767 * m_27809)
        num_threads_40770 = (num_groups_35315 * segred_group_sizze_35314)
        threads_per_segment_40771 = (groups_per_segment_40767 * segred_group_sizze_35314)
        group_res_arr_mem_40772 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_35314 * virt_num_groups_40769)),
                                               "group_res_arr_mem_40772")
        mainzicounter_mem_40774 = self.mainzicounter_mem_40774
        if ((1 * (np.long(num_groups_35315) * np.long(segred_group_sizze_35314))) != 0):
          self.mainzisegred_large_35297_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long(np.int32(1))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35314))),
                                                     np.int64(N_27808),
                                                     np.int64(i32_res_28183),
                                                     np.int64(num_groups_35315),
                                                     defunc_4_map_res_mem_39478,
                                                     defunc_3_map_res_mem_39541,
                                                     defunc_3_map_res_mem_39542,
                                                     mem_39575,
                                                     np.int64(groups_per_segment_40767),
                                                     np.int64(elements_per_thread_40768),
                                                     np.int64(virt_num_groups_40769),
                                                     np.int64(threads_per_segment_40771),
                                                     group_res_arr_mem_40772,
                                                     mainzicounter_mem_40774)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_large_35297_var,
                                     ((np.long(num_groups_35315) * np.long(segred_group_sizze_35314)),),
                                     (np.long(segred_group_sizze_35314),))
          if synchronous:
            sync(self)
      defunc_0_f_res_mem_39576 = mem_39575
    iota32_arg_28208 = (N_27808 - i32_res_27822)
    bounds_invalid_upwards_28209 = slt64(iota32_arg_28208, np.int64(0))
    valid_28210 = not(bounds_invalid_upwards_28209)
    range_valid_c_28211 = True
    assert valid_28210, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:116:22-35\n   #3  bfastfinal.fut:182:5-58\n   #4  bfastfinal.fut:177:1-183:32\n" % ("Range ",
                                                                                                                                                                                                                                      np.int64(0),
                                                                                                                                                                                                                                      "..",
                                                                                                                                                                                                                                      np.int64(1),
                                                                                                                                                                                                                                      "..<",
                                                                                                                                                                                                                                      iota32_arg_28208,
                                                                                                                                                                                                                                      " is invalid."))
    x_28213 = (np.int32(1) + n_27813)
    i_28214 = (n_27813 - np.int32(1))
    i_28215 = sext_i32_i64(i_28214)
    x_28216 = sle64(np.int64(0), i_28215)
    y_28217 = slt64(i_28215, N_27808)
    bounds_check_28218 = (x_28216 and y_28217)
    index_certs_28219 = True
    assert bounds_check_28218, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:114:64-84\n   #1  bfastfinal.fut:112:15-116:36\n   #2  bfastfinal.fut:182:5-58\n   #3  bfastfinal.fut:177:1-183:32\n" % ("Index [",
                                                                                                                                                                                                                 i_28215,
                                                                                                                                                                                                                 "] out of bounds for array of shape [",
                                                                                                                                                                                                                 N_27808,
                                                                                                                                                                                                                 "]."))
    read_res_41070 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_41070, mappingindices_mem_38681,
                    device_offset=(np.long(i_28215) * 4),
                    is_blocking=synchronous)
    sync(self)
    r32_arg_28220 = read_res_41070[0]
    i32_res_28221 = sitofp_i32_f32(r32_arg_28220)
    range_valid_c_28222 = True
    assert valid_28210, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:128:29-44\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:32\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                                                                  iota32_arg_28208,
                                                                                                                                                                                                                                                                                                                  " is invalid."))
    segmap_group_sizze_35392 = self.sizes["main.segmap_group_size_35375"]
    segmap_usable_groups_35393 = sdiv_up64(iota32_arg_28208,
                                           segmap_group_sizze_35392)
    bytes_39578 = (np.int64(4) * iota32_arg_28208)
    mem_39579 = opencl_alloc(self, bytes_39578, "mem_39579")
    mem_39581 = opencl_alloc(self, bytes_39578, "mem_39581")
    if ((1 * (np.long(segmap_usable_groups_35393) * np.long(segmap_group_sizze_35392))) != 0):
      self.mainzisegmap_35373_var.set_args(self.global_failure,
                                           np.float32(lam_27816),
                                           np.int64(iota32_arg_28208),
                                           np.int32(x_28213),
                                           np.float32(i32_res_28221),
                                           mappingindices_mem_38681, mem_39579,
                                           mem_39581)
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_35373_var,
                                 ((np.long(segmap_usable_groups_35393) * np.long(segmap_group_sizze_35392)),),
                                 (np.long(segmap_group_sizze_35392),))
      if synchronous:
        sync(self)
    mem_39579 = None
    max_res_28238 = smax64(np.int64(1), iota32_arg_28208)
    bounds_invalid_upwards_28239 = slt64(max_res_28238, np.int64(1))
    distance_28240 = (max_res_28238 - np.int64(1))
    valid_28241 = not(bounds_invalid_upwards_28239)
    range_valid_c_28242 = True
    assert valid_28241, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:16:30-45\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-149:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:182:5-58\n   #6  bfastfinal.fut:177:1-183:32\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                                                              np.int64(1),
                                                                                                                                                                                                                                                                                                                                                              "..<",
                                                                                                                                                                                                                                                                                                                                                              max_res_28238,
                                                                                                                                                                                                                                                                                                                                                              " is invalid."))
    fits_35848 = sle64(iota32_arg_28208, max_group_sizze_33598)
    suff_intra_par_35846 = (self.sizes["main.suff_intra_par_34"] <= iota32_arg_28208)
    intra_suff_and_fits_35849 = (suff_intra_par_35846 and fits_35848)
    segmap_group_sizze_36402 = self.sizes["main.segmap_group_size_36382"]
    max_num_groups_40812 = self.sizes["main.segmap_num_groups_36384"]
    num_groups_36403 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27809,
                                                            segmap_group_sizze_36402),
                                                  sext_i32_i64(max_num_groups_40812))))
    nest_sizze_36424 = (m_27809 * iota32_arg_28208)
    segscan_group_sizze_36425 = self.sizes["main.segscan_group_size_36341"]
    max_num_groups_40813 = self.sizes["main.segscan_num_groups_36343"]
    num_groups_36426 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36424,
                                                            segscan_group_sizze_36425),
                                                  sext_i32_i64(max_num_groups_40813))))
    segred_group_sizze_36463 = self.sizes["main.segred_group_size_36287"]
    max_num_groups_40814 = self.sizes["main.segred_num_groups_36289"]
    num_groups_36464 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36424,
                                                            segred_group_sizze_36463),
                                                  sext_i32_i64(max_num_groups_40814))))
    segmap_group_sizze_36502 = self.sizes["main.segmap_group_size_36256"]
    segmap_group_sizze_36537 = self.sizes["main.segmap_group_size_36195"]
    segmap_group_sizze_36566 = self.sizes["main.segmap_group_size_36056"]
    bytes_39626 = (np.int64(4) * nest_sizze_36424)
    local_memory_capacity_41026 = self.max_local_memory
    if (sle64((((((bytes_39578 + (np.int32(1) * iota32_arg_28208)) + (np.int32(4) * iota32_arg_28208)) + (np.int32(4) * iota32_arg_28208)) + bytes_39578) + bytes_39578),
              sext_i32_i64(local_memory_capacity_41026)) and intra_suff_and_fits_35849):
      mem_39615 = opencl_alloc(self, bytes_39458, "mem_39615")
      mem_39617 = opencl_alloc(self, bytes_39458, "mem_39617")
      mem_39619 = opencl_alloc(self, bytes_39458, "mem_39619")
      if ((1 * (np.long(m_27809) * np.long(iota32_arg_28208))) != 0):
        self.mainzisegmap_intragroup_35440_var.set_args(self.global_failure,
                                                        self.failure_is_an_option,
                                                        self.global_failure_args,
                                                        cl.LocalMemory(np.long(bytes_39578)),
                                                        cl.LocalMemory(np.long(bytes_39578)),
                                                        cl.LocalMemory(np.long((np.int32(4) * iota32_arg_28208))),
                                                        cl.LocalMemory(np.long((np.int32(4) * iota32_arg_28208))),
                                                        cl.LocalMemory(np.long((np.int32(1) * iota32_arg_28208))),
                                                        cl.LocalMemory(np.long(bytes_39578)),
                                                        np.int64(N_27808),
                                                        np.int32(n_27813),
                                                        np.int64(iota32_arg_28208),
                                                        np.int64(distance_28240),
                                                        defunc_4_map_res_mem_39477,
                                                        defunc_4_map_res_mem_39478,
                                                        defunc_4_map_res_mem_39479,
                                                        defunc_3_map_res_mem_39541,
                                                        defunc_3_map_res_mem_39542,
                                                        defunc_3_map_res_mem_39543,
                                                        defunc_0_f_res_mem_39576,
                                                        mem_39581, mem_39615,
                                                        mem_39617, mem_39619)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_35440_var,
                                   ((np.long(m_27809) * np.long(iota32_arg_28208)),),
                                   (np.long(iota32_arg_28208),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      defunc_0_f_res_mem_39683 = mem_39615
      defunc_0_f_res_mem_39684 = mem_39617
      defunc_0_f_res_mem_39685 = mem_39619
    else:
      mem_39622 = opencl_alloc(self, bytes_39458, "mem_39622")
      mem_39624 = opencl_alloc(self, bytes_39458, "mem_39624")
      if ((1 * (np.long(num_groups_36403) * np.long(segmap_group_sizze_36402))) != 0):
        self.mainzisegmap_36380_var.set_args(self.global_failure,
                                             np.int64(m_27809),
                                             np.int64(num_groups_36403),
                                             defunc_4_map_res_mem_39477,
                                             defunc_3_map_res_mem_39542,
                                             defunc_3_map_res_mem_39543,
                                             mem_39622, mem_39624)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_36380_var,
                                   ((np.long(num_groups_36403) * np.long(segmap_group_sizze_36402)),),
                                   (np.long(segmap_group_sizze_36402),))
        if synchronous:
          sync(self)
      mem_39628 = opencl_alloc(self, bytes_39626, "mem_39628")
      if slt64(np.int64(0), (m_27809 * iota32_arg_28208)):
        stage1_max_num_groups_40852 = self.max_group_size
        stage1_num_groups_40853 = smin64(stage1_max_num_groups_40852,
                                         num_groups_36426)
        num_threads_40854 = sext_i64_i32((stage1_num_groups_40853 * segscan_group_sizze_36425))
        if ((1 * (np.long(stage1_num_groups_40853) * np.long(segscan_group_sizze_36425))) != 0):
          self.mainziscan_stage1_36347_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(4) * segscan_group_sizze_36425)))),
                                                    np.int64(N_27808),
                                                    np.int64(m_27809),
                                                    np.int64(iota32_arg_28208),
                                                    defunc_4_map_res_mem_39478,
                                                    defunc_3_map_res_mem_39541,
                                                    defunc_3_map_res_mem_39542,
                                                    defunc_0_f_res_mem_39576,
                                                    mem_39624, mem_39628,
                                                    np.int32(num_threads_40854))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage1_36347_var,
                                     ((np.long(stage1_num_groups_40853) * np.long(segscan_group_sizze_36425)),),
                                     (np.long(segscan_group_sizze_36425),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_40853))) != 0):
          self.mainziscan_stage2_36347_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(4) * stage1_num_groups_40853)))),
                                                    np.int64(m_27809),
                                                    np.int64(iota32_arg_28208),
                                                    mem_39628,
                                                    np.int64(stage1_num_groups_40853),
                                                    np.int32(num_threads_40854))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage2_36347_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_40853)),),
                                     (np.long(stage1_num_groups_40853),))
          if synchronous:
            sync(self)
        required_groups_40896 = sext_i64_i32(sdiv_up64((m_27809 * iota32_arg_28208),
                                                       segscan_group_sizze_36425))
        if ((1 * (np.long(num_groups_36426) * np.long(segscan_group_sizze_36425))) != 0):
          self.mainziscan_stage3_36347_var.set_args(self.global_failure,
                                                    np.int64(m_27809),
                                                    np.int64(iota32_arg_28208),
                                                    np.int64(num_groups_36426),
                                                    mem_39628,
                                                    np.int32(num_threads_40854),
                                                    np.int32(required_groups_40896))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage3_36347_var,
                                     ((np.long(num_groups_36426) * np.long(segscan_group_sizze_36425)),),
                                     (np.long(segscan_group_sizze_36425),))
          if synchronous:
            sync(self)
      mem_39631 = opencl_alloc(self, m_27809, "mem_39631")
      mem_39633 = opencl_alloc(self, bytes_39458, "mem_39633")
      mem_39635 = opencl_alloc(self, bytes_39458, "mem_39635")
      if slt64((iota32_arg_28208 * np.int64(2)), segred_group_sizze_36463):
        segment_sizze_nonzzero_40908 = smax64(np.int64(1), iota32_arg_28208)
        num_threads_40909 = (num_groups_36464 * segred_group_sizze_36463)
        if ((1 * (np.long(num_groups_36464) * np.long(segred_group_sizze_36463))) != 0):
          self.mainzisegred_small_36293_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36463))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36463))),
                                                     cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_36463))),
                                                     np.int64(m_27809),
                                                     np.int64(iota32_arg_28208),
                                                     np.int64(num_groups_36464),
                                                     mem_39581, mem_39622,
                                                     mem_39624, mem_39628,
                                                     mem_39631, mem_39633,
                                                     mem_39635,
                                                     np.int64(segment_sizze_nonzzero_40908))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_small_36293_var,
                                     ((np.long(num_groups_36464) * np.long(segred_group_sizze_36463)),),
                                     (np.long(segred_group_sizze_36463),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_40944 = sdiv_up64(num_groups_36464,
                                             smax64(np.int64(1), m_27809))
        elements_per_thread_40945 = sdiv_up64(iota32_arg_28208,
                                              (segred_group_sizze_36463 * groups_per_segment_40944))
        virt_num_groups_40946 = (groups_per_segment_40944 * m_27809)
        num_threads_40947 = (num_groups_36464 * segred_group_sizze_36463)
        threads_per_segment_40948 = (groups_per_segment_40944 * segred_group_sizze_36463)
        group_res_arr_mem_40949 = opencl_alloc(self,
                                               (np.int32(1) * (segred_group_sizze_36463 * virt_num_groups_40946)),
                                               "group_res_arr_mem_40949")
        group_res_arr_mem_40951 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_36463 * virt_num_groups_40946)),
                                               "group_res_arr_mem_40951")
        group_res_arr_mem_40953 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_36463 * virt_num_groups_40946)),
                                               "group_res_arr_mem_40953")
        mainzicounter_mem_40955 = self.mainzicounter_mem_40955
        if ((1 * (np.long(num_groups_36464) * np.long(segred_group_sizze_36463))) != 0):
          self.mainzisegred_large_36293_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long(np.int32(1))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36463))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36463))),
                                                     cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_36463))),
                                                     np.int64(iota32_arg_28208),
                                                     np.int64(num_groups_36464),
                                                     mem_39581, mem_39622,
                                                     mem_39624, mem_39628,
                                                     mem_39631, mem_39633,
                                                     mem_39635,
                                                     np.int64(groups_per_segment_40944),
                                                     np.int64(elements_per_thread_40945),
                                                     np.int64(virt_num_groups_40946),
                                                     group_res_arr_mem_40949,
                                                     group_res_arr_mem_40951,
                                                     group_res_arr_mem_40953,
                                                     mainzicounter_mem_40955)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_large_36293_var,
                                     ((np.long(num_groups_36464) * np.long(segred_group_sizze_36463)),),
                                     (np.long(segred_group_sizze_36463),))
          if synchronous:
            sync(self)
      mem_39622 = None
      mem_39628 = None
      segmap_usable_groups_36503 = sdiv_up64(m_27809, segmap_group_sizze_36502)
      mem_39638 = opencl_alloc(self, m_27809, "mem_39638")
      mem_39640 = opencl_alloc(self, bytes_39458, "mem_39640")
      mem_39642 = opencl_alloc(self, bytes_39458, "mem_39642")
      if ((1 * (np.long(segmap_usable_groups_36503) * np.long(segmap_group_sizze_36502))) != 0):
        self.mainzisegmap_36254_var.set_args(self.global_failure,
                                             np.int64(m_27809), mem_39624,
                                             mem_39631, mem_39633, mem_39635,
                                             mem_39638, mem_39640, mem_39642)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_36254_var,
                                   ((np.long(segmap_usable_groups_36503) * np.long(segmap_group_sizze_36502)),),
                                   (np.long(segmap_group_sizze_36502),))
        if synchronous:
          sync(self)
      mem_39631 = None
      mem_39633 = None
      mem_39635 = None
      segmap_usable_groups_36538 = sdiv_up64(nest_sizze_36424,
                                             segmap_group_sizze_36537)
      mem_39646 = opencl_alloc(self, bytes_39626, "mem_39646")
      if ((1 * (np.long(segmap_usable_groups_36538) * np.long(segmap_group_sizze_36537))) != 0):
        self.mainzisegmap_36192_var.set_args(self.global_failure,
                                             self.failure_is_an_option,
                                             self.global_failure_args,
                                             np.int64(N_27808),
                                             np.int64(m_27809),
                                             np.int64(iota32_arg_28208),
                                             defunc_4_map_res_mem_39478,
                                             defunc_3_map_res_mem_39542,
                                             mem_39624, mem_39646)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_36192_var,
                                   ((np.long(segmap_usable_groups_36538) * np.long(segmap_group_sizze_36537)),),
                                   (np.long(segmap_group_sizze_36537),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      segmap_usable_groups_36567 = sdiv_up64(m_27809, segmap_group_sizze_36566)
      mem_39649 = opencl_alloc(self, bytes_39626, "mem_39649")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_39649, np.int64(0),
                                                  mem_39646, np.int64(0),
                                                  np.int64(1), iota32_arg_28208,
                                                  m_27809)
      mem_39646 = None
      mem_39680 = opencl_alloc(self, bytes_39458, "mem_39680")
      mem_39682 = opencl_alloc(self, bytes_39458, "mem_39682")
      num_threads_39882 = (segmap_group_sizze_36566 * segmap_usable_groups_36567)
      total_sizze_39883 = (bytes_39578 * num_threads_39882)
      mem_39660 = opencl_alloc(self, total_sizze_39883, "mem_39660")
      if ((1 * (np.long(segmap_usable_groups_36567) * np.long(segmap_group_sizze_36566))) != 0):
        self.mainzisegmap_36054_var.set_args(self.global_failure,
                                             self.failure_is_an_option,
                                             self.global_failure_args,
                                             np.int64(N_27808),
                                             np.int64(m_27809),
                                             np.int32(n_27813),
                                             np.int64(iota32_arg_28208),
                                             np.int64(distance_28240),
                                             np.int64(segmap_usable_groups_36567),
                                             defunc_4_map_res_mem_39477,
                                             defunc_4_map_res_mem_39479,
                                             defunc_3_map_res_mem_39542,
                                             mem_39624, mem_39638, mem_39640,
                                             mem_39649, mem_39660, mem_39680,
                                             mem_39682)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_36054_var,
                                   ((np.long(segmap_usable_groups_36567) * np.long(segmap_group_sizze_36566)),),
                                   (np.long(segmap_group_sizze_36566),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      mem_39624 = None
      mem_39638 = None
      mem_39640 = None
      mem_39649 = None
      mem_39660 = None
      defunc_0_f_res_mem_39683 = mem_39680
      defunc_0_f_res_mem_39684 = mem_39642
      defunc_0_f_res_mem_39685 = mem_39682
    defunc_4_map_res_mem_39477 = None
    defunc_4_map_res_mem_39478 = None
    defunc_4_map_res_mem_39479 = None
    defunc_3_map_res_mem_39541 = None
    defunc_3_map_res_mem_39542 = None
    defunc_3_map_res_mem_39543 = None
    defunc_0_f_res_mem_39576 = None
    mem_39581 = None
    out_arrsizze_39885 = m_27809
    out_arrsizze_39887 = m_27809
    out_arrsizze_39889 = m_27809
    out_mem_39884 = defunc_0_f_res_mem_39683
    out_mem_39886 = defunc_0_f_res_mem_39684
    out_mem_39888 = defunc_0_f_res_mem_39685
    return (out_mem_39884, out_arrsizze_39885, out_mem_39886,
            out_arrsizze_39887, out_mem_39888, out_arrsizze_39889)
  def futhark_mainDetailed(self, mappingindices_mem_38681, images_mem_38682,
                           N_27115, m_27116, N_27117, trend_27118, k_27119,
                           n_27120, freq_27121, hfrac_27122, lam_27123):
    dim_match_27126 = (N_27115 == N_27117)
    empty_or_match_cert_27127 = True
    assert dim_match_27126, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:171:1-175:56\n" % ("function arguments of wrong shape",))
    i32_res_27129 = sext_i32_i64(n_27120)
    x_27130 = (np.int32(2) * k_27119)
    k2p2_27131 = (np.int32(2) + x_27130)
    cond_27132 = slt32(np.int32(0), trend_27118)
    if cond_27132:
      k2p2zq_27133 = k2p2_27131
    else:
      k2p2zq_f_res_27134 = (k2p2_27131 - np.int32(1))
      k2p2zq_27133 = k2p2zq_f_res_27134
    i32_res_27135 = sext_i32_i64(k2p2zq_27133)
    binop_x_38685 = (N_27115 * i32_res_27135)
    bytes_38684 = (np.int64(4) * binop_x_38685)
    if cond_27132:
      bounds_invalid_upwards_27137 = slt64(i32_res_27135, np.int64(0))
      valid_27138 = not(bounds_invalid_upwards_27137)
      range_valid_c_27139 = True
      assert valid_27138, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:37:10-20\n   #3  bfastfinal.fut:31:17-66\n   #4  bfastfinal.fut:175:3-56\n   #5  bfastfinal.fut:171:1-175:56\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_27135,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_28747 = self.sizes["mainDetailed.segmap_group_size_28677"]
      segmap_usable_groups_28748 = sdiv_up64(binop_x_38685,
                                             segmap_group_sizze_28747)
      mem_38686 = opencl_alloc(self, bytes_38684, "mem_38686")
      if ((1 * (np.long(segmap_usable_groups_28748) * np.long(segmap_group_sizze_28747))) != 0):
        self.mainDetailedzisegmap_28674_var.set_args(self.global_failure,
                                                     np.int64(N_27115),
                                                     np.float32(freq_27121),
                                                     np.int64(i32_res_27135),
                                                     mappingindices_mem_38681,
                                                     mem_38686)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_28674_var,
                                   ((np.long(segmap_usable_groups_28748) * np.long(segmap_group_sizze_28747)),),
                                   (np.long(segmap_group_sizze_28747),))
        if synchronous:
          sync(self)
      binop_p_mem_38691 = mem_38686
    else:
      bounds_invalid_upwards_27163 = slt64(i32_res_27135, np.int64(0))
      valid_27164 = not(bounds_invalid_upwards_27163)
      range_valid_c_27165 = True
      assert valid_27164, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:49:10-22\n   #3  bfastfinal.fut:32:17-64\n   #4  bfastfinal.fut:175:3-56\n   #5  bfastfinal.fut:171:1-175:56\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_27135,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_28921 = self.sizes["mainDetailed.segmap_group_size_28855"]
      segmap_usable_groups_28922 = sdiv_up64(binop_x_38685,
                                             segmap_group_sizze_28921)
      mem_38690 = opencl_alloc(self, bytes_38684, "mem_38690")
      if ((1 * (np.long(segmap_usable_groups_28922) * np.long(segmap_group_sizze_28921))) != 0):
        self.mainDetailedzisegmap_28852_var.set_args(self.global_failure,
                                                     np.int64(N_27115),
                                                     np.float32(freq_27121),
                                                     np.int64(i32_res_27135),
                                                     mappingindices_mem_38681,
                                                     mem_38690)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_28852_var,
                                   ((np.long(segmap_usable_groups_28922) * np.long(segmap_group_sizze_28921)),),
                                   (np.long(segmap_group_sizze_28921),))
        if synchronous:
          sync(self)
      binop_p_mem_38691 = mem_38690
    x_27188 = (N_27115 * N_27115)
    y_27189 = (np.int64(2) * N_27115)
    x_27190 = (x_27188 + y_27189)
    x_27191 = (np.int64(1) + x_27190)
    y_27192 = (np.int64(1) + N_27115)
    zzero_27193 = (y_27192 == np.int64(0))
    nonzzero_27194 = not(zzero_27193)
    nonzzero_cert_27195 = True
    assert nonzzero_27194, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:38:32-60\n   #1  bfastfinal.fut:175:3-56\n   #2  bfastfinal.fut:171:1-175:56\n" % ("division by zero",))
    x_27196 = sdiv64(x_27191, y_27192)
    x_27197 = (x_27196 - N_27115)
    binop_p_27198 = (x_27197 - np.int64(1))
    defunc_0_f_res_27199 = sext_i64_i32(binop_p_27198)
    i32_res_27200 = sitofp_i32_f32(defunc_0_f_res_27199)
    segmap_group_sizze_29004 = self.sizes["mainDetailed.segmap_group_size_28983"]
    segmap_usable_groups_29005 = sdiv_up64(binop_x_38685,
                                           segmap_group_sizze_29004)
    mem_38694 = opencl_alloc(self, bytes_38684, "mem_38694")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_38694, np.int64(0),
                                                binop_p_mem_38691, np.int64(0),
                                                np.int64(1), N_27115,
                                                i32_res_27135)
    mem_38698 = opencl_alloc(self, bytes_38684, "mem_38698")
    if ((1 * (np.long(segmap_usable_groups_29005) * np.long(segmap_group_sizze_29004))) != 0):
      self.mainDetailedzisegmap_28980_var.set_args(self.global_failure,
                                                   np.int64(N_27115),
                                                   np.int64(i32_res_27135),
                                                   np.float32(i32_res_27200),
                                                   mem_38694, mem_38698)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_28980_var,
                                 ((np.long(segmap_usable_groups_29005) * np.long(segmap_group_sizze_29004)),),
                                 (np.long(segmap_group_sizze_29004),))
      if synchronous:
        sync(self)
    eq_x_y_27208 = (np.int64(0) == i32_res_27135)
    p_and_eq_x_y_27209 = (cond_27132 and eq_x_y_27208)
    not_p_27210 = not(cond_27132)
    p_and_eq_x_y_27211 = (eq_x_y_27208 and not_p_27210)
    empty_slice_27212 = (p_and_eq_x_y_27209 or p_and_eq_x_y_27211)
    m_27213 = (i32_res_27135 - np.int64(1))
    zzero_leq_i_p_m_t_s_27214 = sle64(np.int64(0), m_27213)
    i_p_m_t_s_leq_w_27215 = slt64(m_27213, i32_res_27135)
    i_lte_j_27216 = sle64(np.int64(0), i32_res_27135)
    y_27217 = (zzero_leq_i_p_m_t_s_27214 and i_p_m_t_s_leq_w_27215)
    y_27218 = (i_lte_j_27216 and y_27217)
    ok_or_empty_27219 = (empty_slice_27212 or y_27218)
    empty_slice_27220 = (i32_res_27129 == np.int64(0))
    m_27221 = (i32_res_27129 - np.int64(1))
    zzero_leq_i_p_m_t_s_27222 = sle64(np.int64(0), m_27221)
    i_p_m_t_s_leq_w_27223 = slt64(m_27221, N_27115)
    i_lte_j_27224 = sle64(np.int64(0), i32_res_27129)
    y_27225 = (zzero_leq_i_p_m_t_s_27222 and i_p_m_t_s_leq_w_27223)
    y_27226 = (i_lte_j_27224 and y_27225)
    ok_or_empty_27227 = (empty_slice_27220 or y_27226)
    index_ok_27228 = (ok_or_empty_27219 and ok_or_empty_27227)
    index_certs_27229 = True
    assert index_ok_27228, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:41:15-23\n   #1  bfastfinal.fut:175:3-56\n   #2  bfastfinal.fut:171:1-175:56\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_27129,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               i32_res_27135,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_27115,
                                                                                                                                                                               "]."))
    empty_slice_27231 = (i32_res_27135 == np.int64(0))
    ok_or_empty_27232 = (y_27218 or empty_slice_27231)
    index_ok_27233 = (ok_or_empty_27227 and ok_or_empty_27232)
    index_certs_27234 = True
    assert index_ok_27233, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:42:15-24\n   #1  bfastfinal.fut:175:3-56\n   #2  bfastfinal.fut:171:1-175:56\n" % ("Index [:",
                                                                                                                                                                               i32_res_27129,
                                                                                                                                                                               ", ",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":] out of bounds for array of shape [",
                                                                                                                                                                               N_27115,
                                                                                                                                                                               "][",
                                                                                                                                                                               i32_res_27135,
                                                                                                                                                                               "]."))
    empty_slice_27236 = (m_27116 == np.int64(0))
    m_27237 = (m_27116 - np.int64(1))
    zzero_leq_i_p_m_t_s_27238 = sle64(np.int64(0), m_27237)
    i_p_m_t_s_leq_w_27239 = slt64(m_27237, m_27116)
    i_lte_j_27240 = sle64(np.int64(0), m_27116)
    y_27241 = (zzero_leq_i_p_m_t_s_27238 and i_p_m_t_s_leq_w_27239)
    y_27242 = (i_lte_j_27240 and y_27241)
    ok_or_empty_27243 = (empty_slice_27236 or y_27242)
    index_ok_27244 = (ok_or_empty_27227 and ok_or_empty_27243)
    index_certs_27245 = True
    assert index_ok_27244, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:43:15-28\n   #1  bfastfinal.fut:175:3-56\n   #2  bfastfinal.fut:171:1-175:56\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_27129,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               m_27116,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_27115,
                                                                                                                                                                               "]."))
    suff_outer_par_29011 = (self.sizes["mainDetailed.suff_outer_par_6"] <= m_27116)
    segmap_group_sizze_29037 = self.sizes["mainDetailed.segmap_group_size_29015"]
    max_num_groups_39927 = self.sizes["mainDetailed.segmap_num_groups_29017"]
    num_groups_29038 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27116,
                                                            segmap_group_sizze_29037),
                                                  sext_i32_i64(max_num_groups_39927))))
    nest_sizze_29213 = (m_27116 * i32_res_27135)
    segmap_group_sizze_29214 = self.sizes["mainDetailed.segmap_group_size_29062"]
    max_num_groups_39928 = self.sizes["mainDetailed.segmap_num_groups_29064"]
    num_groups_29215 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_29213,
                                                            segmap_group_sizze_29214),
                                                  sext_i32_i64(max_num_groups_39928))))
    suff_outer_par_29219 = (self.sizes["mainDetailed.suff_outer_par_7"] <= nest_sizze_29213)
    y_29243 = (i32_res_27135 * i32_res_27135)
    comparatee_29244 = (m_27116 * y_29243)
    suff_outer_par_29245 = (self.sizes["mainDetailed.suff_outer_par_8"] <= comparatee_29244)
    nest_sizze_29265 = (i32_res_27129 * comparatee_29244)
    segred_group_sizze_29266 = self.sizes["mainDetailed.segred_group_size_29122"]
    max_num_groups_39929 = self.sizes["mainDetailed.segred_num_groups_29124"]
    num_groups_29267 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_29265,
                                                            segred_group_sizze_29266),
                                                  sext_i32_i64(max_num_groups_39929))))
    Tx_36839 = self.sizes["mainDetailed.Tx_36837"]
    Ty_36840 = self.sizes["mainDetailed.Ty_36838"]
    Ty_36841 = smin64(i32_res_27135, Ty_36840)
    Tx_36842 = smin64(i32_res_27135, Tx_36839)
    gridDim_zz_36845 = sdiv_up64(m_27116, np.int64(30))
    group_sizze_36848 = (Ty_36841 * Tx_36842)
    binop_x_38700 = (m_27116 * N_27117)
    bytes_38699 = (np.int64(4) * binop_x_38700)
    bytes_38744 = (np.int64(4) * comparatee_29244)
    bytes_38703 = (np.int64(4) * y_29243)
    binop_x_38847 = (i32_res_27135 * nest_sizze_29213)
    bytes_38845 = (np.int64(4) * binop_x_38847)
    bytes_38749 = (np.int64(4) * i32_res_27135)
    binop_x_38778 = (np.int64(30) * group_sizze_36848)
    bytes_38776 = (np.int64(4) * binop_x_38778)
    binop_x_39707 = (np.int64(4) * Ty_36841)
    binop_x_39708 = (Tx_36842 * binop_x_39707)
    sizze_39709 = (np.int64(30) * binop_x_39708)
    num_threads_39787 = (segmap_group_sizze_29037 * num_groups_29038)
    total_sizze_39788 = (bytes_38703 * num_threads_39787)
    num_threads_39789 = (segmap_group_sizze_29214 * num_groups_29215)
    total_sizze_39790 = (bytes_38749 * num_threads_39789)
    local_memory_capacity_40051 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_40051)) and suff_outer_par_29011):
      mem_38701 = opencl_alloc(self, bytes_38699, "mem_38701")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_38701, np.int64(0),
                                                  images_mem_38682, np.int64(0),
                                                  np.int64(1), N_27117, m_27116)
      mem_38747 = opencl_alloc(self, bytes_38744, "mem_38747")
      mem_38705 = opencl_alloc(self, total_sizze_39788, "mem_38705")
      if ((1 * (np.long(num_groups_29038) * np.long(segmap_group_sizze_29037))) != 0):
        self.mainDetailedzisegmap_29013_var.set_args(self.global_failure,
                                                     np.int64(N_27115),
                                                     np.int64(m_27116),
                                                     np.int32(n_27120),
                                                     np.int32(k2p2zq_27133),
                                                     np.int64(i32_res_27135),
                                                     np.int64(num_groups_29038),
                                                     binop_p_mem_38691,
                                                     mem_38698, mem_38701,
                                                     mem_38705, mem_38747)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_29013_var,
                                   ((np.long(num_groups_29038) * np.long(segmap_group_sizze_29037)),),
                                   (np.long(segmap_group_sizze_29037),))
        if synchronous:
          sync(self)
      mem_38701 = None
      mem_38705 = None
      mem_38848 = opencl_alloc(self, bytes_38845, "mem_38848")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_38848, np.int64(0),
                                                  mem_38747, np.int64(0),
                                                  np.int64(1), m_27116,
                                                  (i32_res_27135 * i32_res_27135))
      mem_38747 = None
      defunc_3_map_res_mem_38850 = mem_38848
    else:
      local_memory_capacity_40050 = self.max_local_memory
      if (sle64(np.int64(0),
                sext_i32_i64(local_memory_capacity_40050)) and suff_outer_par_29219):
        mem_38766 = opencl_alloc(self, bytes_38845, "mem_38766")
        mem_38750 = opencl_alloc(self, total_sizze_39790, "mem_38750")
        if ((1 * (np.long(num_groups_29215) * np.long(segmap_group_sizze_29214))) != 0):
          self.mainDetailedzisegmap_29059_var.set_args(self.global_failure,
                                                       np.int64(m_27116),
                                                       np.int64(N_27117),
                                                       np.int32(n_27120),
                                                       np.int32(k2p2zq_27133),
                                                       np.int64(i32_res_27135),
                                                       np.int64(num_groups_29215),
                                                       images_mem_38682,
                                                       mem_38694, mem_38698,
                                                       mem_38750, mem_38766)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_29059_var,
                                     ((np.long(num_groups_29215) * np.long(segmap_group_sizze_29214)),),
                                     (np.long(segmap_group_sizze_29214),))
          if synchronous:
            sync(self)
        mem_38750 = None
        mem_38842 = opencl_alloc(self, bytes_38845, "mem_38842")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_38842, np.int64(0),
                                                    mem_38766, np.int64(0),
                                                    np.int64(1),
                                                    (m_27116 * i32_res_27135),
                                                    i32_res_27135)
        mem_38766 = None
        defunc_3_map_res_mem_38844 = mem_38842
      else:
        local_memory_capacity_40049 = self.max_local_memory
        if (sle64(np.int64(120),
                  sext_i32_i64(local_memory_capacity_40049)) and suff_outer_par_29245):
          mem_38769 = opencl_alloc(self, bytes_38699, "mem_38769")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_38769, np.int64(0),
                                                      images_mem_38682,
                                                      np.int64(0), np.int64(1),
                                                      N_27117, m_27116)
          gridDim_x_36843 = sdiv_up64(i32_res_27135, Tx_36842)
          gridDim_y_36844 = sdiv_up64(i32_res_27135, Ty_36841)
          binop_x_36846 = (gridDim_y_36844 * gridDim_zz_36845)
          grid_sizze_36847 = (gridDim_x_36843 * binop_x_36846)
          count_shmem_36849 = sdiv_up64(np.int64(30), group_sizze_36848)
          mem_38829 = opencl_alloc(self, bytes_38845, "mem_38829")
          if ((1 * (np.long(grid_sizze_36847) * np.long(group_sizze_36848))) != 0):
            self.mainDetailedzisegmap_intragroup_36853_var.set_args(self.global_failure,
                                                                    cl.LocalMemory(np.long(np.int64(120))),
                                                                    np.int64(m_27116),
                                                                    np.int32(n_27120),
                                                                    np.int64(i32_res_27135),
                                                                    np.int64(Ty_36841),
                                                                    np.int64(Tx_36842),
                                                                    np.int64(gridDim_x_36843),
                                                                    np.int64(gridDim_y_36844),
                                                                    np.int64(group_sizze_36848),
                                                                    np.int64(count_shmem_36849),
                                                                    mem_38694,
                                                                    mem_38698,
                                                                    mem_38769,
                                                                    mem_38829)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_intragroup_36853_var,
                                       ((np.long(grid_sizze_36847) * np.long(group_sizze_36848)),),
                                       (np.long(group_sizze_36848),))
            if synchronous:
              sync(self)
          mem_38769 = None
          defunc_3_map_res_mem_38838 = mem_38829
        else:
          mem_38832 = opencl_alloc(self, bytes_38684, "mem_38832")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_38832, np.int64(0),
                                                      mem_38698, np.int64(0),
                                                      np.int64(1),
                                                      i32_res_27135, N_27115)
          mem_38837 = opencl_alloc(self, bytes_38845, "mem_38837")
          if slt64((i32_res_27129 * np.int64(2)), segred_group_sizze_29266):
            segment_sizze_nonzzero_39989 = smax64(np.int64(1), i32_res_27129)
            num_threads_39990 = (num_groups_29267 * segred_group_sizze_29266)
            if ((1 * (np.long(num_groups_29267) * np.long(segred_group_sizze_29266))) != 0):
              self.mainDetailedzisegred_small_29128_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_29266))),
                                                                 np.int64(N_27115),
                                                                 np.int64(m_27116),
                                                                 np.int64(N_27117),
                                                                 np.int64(i32_res_27129),
                                                                 np.int64(i32_res_27135),
                                                                 np.int64(num_groups_29267),
                                                                 images_mem_38682,
                                                                 binop_p_mem_38691,
                                                                 mem_38832,
                                                                 mem_38837,
                                                                 np.int64(segment_sizze_nonzzero_39989))
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainDetailedzisegred_small_29128_var,
                                         ((np.long(num_groups_29267) * np.long(segred_group_sizze_29266)),),
                                         (np.long(segred_group_sizze_29266),))
              if synchronous:
                sync(self)
          else:
            groups_per_segment_40010 = sdiv_up64(num_groups_29267,
                                                 smax64(np.int64(1),
                                                        ((m_27116 * i32_res_27135) * i32_res_27135)))
            elements_per_thread_40011 = sdiv_up64(i32_res_27129,
                                                  (segred_group_sizze_29266 * groups_per_segment_40010))
            virt_num_groups_40012 = (groups_per_segment_40010 * ((m_27116 * i32_res_27135) * i32_res_27135))
            num_threads_40013 = (num_groups_29267 * segred_group_sizze_29266)
            threads_per_segment_40014 = (groups_per_segment_40010 * segred_group_sizze_29266)
            group_res_arr_mem_40015 = opencl_alloc(self,
                                                   (np.int32(4) * (segred_group_sizze_29266 * virt_num_groups_40012)),
                                                   "group_res_arr_mem_40015")
            mainDetailedzicounter_mem_40017 = self.mainDetailedzicounter_mem_40017
            if ((1 * (np.long(num_groups_29267) * np.long(segred_group_sizze_29266))) != 0):
              self.mainDetailedzisegred_large_29128_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(np.int32(1))),
                                                                 cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_29266))),
                                                                 np.int64(N_27115),
                                                                 np.int64(N_27117),
                                                                 np.int64(i32_res_27129),
                                                                 np.int64(i32_res_27135),
                                                                 np.int64(num_groups_29267),
                                                                 images_mem_38682,
                                                                 binop_p_mem_38691,
                                                                 mem_38832,
                                                                 mem_38837,
                                                                 np.int64(groups_per_segment_40010),
                                                                 np.int64(elements_per_thread_40011),
                                                                 np.int64(virt_num_groups_40012),
                                                                 np.int64(threads_per_segment_40014),
                                                                 group_res_arr_mem_40015,
                                                                 mainDetailedzicounter_mem_40017)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainDetailedzisegred_large_29128_var,
                                         ((np.long(num_groups_29267) * np.long(segred_group_sizze_29266)),),
                                         (np.long(segred_group_sizze_29266),))
              if synchronous:
                sync(self)
          mem_38832 = None
          defunc_3_map_res_mem_38838 = mem_38837
        defunc_3_map_res_mem_38844 = defunc_3_map_res_mem_38838
      defunc_3_map_res_mem_38850 = defunc_3_map_res_mem_38844
    m_27266 = (np.int32(2) * k2p2zq_27133)
    nm_27267 = (k2p2zq_27133 * m_27266)
    i32_res_27268 = sext_i32_i64(nm_27267)
    bounds_invalid_upwards_27269 = slt64(i32_res_27268, np.int64(0))
    valid_27270 = not(bounds_invalid_upwards_27269)
    range_valid_c_27271 = True
    assert valid_27270, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:78:34-50\n   #2  bfastfinal.fut:53:35-50\n   #3  bfastfinal.fut:175:3-56\n   #4  bfastfinal.fut:171:1-175:56\n" % ("Range ",
                                                                                                                                                                                                                                        np.int64(0),
                                                                                                                                                                                                                                        "..",
                                                                                                                                                                                                                                        np.int64(1),
                                                                                                                                                                                                                                        "..<",
                                                                                                                                                                                                                                        i32_res_27268,
                                                                                                                                                                                                                                        " is invalid."))
    zzero_27276 = (m_27266 == np.int32(0))
    nonzzero_27277 = not(zzero_27276)
    nonzzero_cert_27278 = True
    assert nonzzero_27277, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:73:41-47\n   #1  helpers.fut:73:14-78:52\n   #2  bfastfinal.fut:53:35-50\n   #3  bfastfinal.fut:175:3-56\n   #4  bfastfinal.fut:171:1-175:56\n" % ("division by zero",))
    loop_nonempty_27279 = slt32(np.int32(0), k2p2zq_27133)
    loop_not_taken_27280 = not(loop_nonempty_27279)
    protect_assert_disj_27281 = (nonzzero_27277 or loop_not_taken_27280)
    nonzzero_cert_27282 = True
    assert protect_assert_disj_27281, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:59:43-49\n   #1  helpers.fut:59:16-65:44\n   #2  helpers.fut:79:15-33\n   #3  bfastfinal.fut:53:35-50\n   #4  bfastfinal.fut:175:3-56\n   #5  bfastfinal.fut:171:1-175:56\n" % ("division by zero",))
    i32_res_27283 = sext_i32_i64(m_27266)
    x_27284 = (i32_res_27135 * i32_res_27283)
    dim_ok_27285 = (x_27284 == i32_res_27268)
    dim_ok_cert_27286 = True
    assert dim_ok_27285, ("Error: %s\n\nBacktrace:\n-> #0  /prelude/array.fut:95:3-33\n   #1  helpers.fut:81:9-45\n   #2  bfastfinal.fut:53:35-50\n   #3  bfastfinal.fut:175:3-56\n   #4  bfastfinal.fut:171:1-175:56\n" % ("new shape has different number of elements than old shape",))
    j_m_i_27287 = (i32_res_27283 - i32_res_27135)
    empty_slice_27288 = (j_m_i_27287 == np.int64(0))
    m_27289 = (j_m_i_27287 - np.int64(1))
    i_p_m_t_s_27290 = (i32_res_27135 + m_27289)
    zzero_leq_i_p_m_t_s_27291 = sle64(np.int64(0), i_p_m_t_s_27290)
    i_p_m_t_s_leq_w_27292 = slt64(i_p_m_t_s_27290, i32_res_27283)
    i_lte_j_27293 = sle64(i32_res_27135, i32_res_27283)
    y_27294 = (i_lte_j_27216 and i_p_m_t_s_leq_w_27292)
    y_27295 = (zzero_leq_i_p_m_t_s_27291 and y_27294)
    y_27296 = (i_lte_j_27293 and y_27295)
    forwards_ok_27297 = (i_lte_j_27216 and y_27296)
    ok_or_empty_27298 = (empty_slice_27288 or forwards_ok_27297)
    index_ok_27299 = (ok_or_empty_27232 and ok_or_empty_27298)
    index_certs_27300 = True
    assert index_ok_27299, ("Error: %s%d%s%d%s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-88\n   #1  bfastfinal.fut:53:35-50\n   #2  bfastfinal.fut:175:3-56\n   #3  bfastfinal.fut:171:1-175:56\n" % ("Index [",
                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_27135,
                                                                                                                                                                                                                   ", ",
                                                                                                                                                                                                                   i32_res_27135,
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_27283,
                                                                                                                                                                                                                   "] out of bounds for array of shape [",
                                                                                                                                                                                                                   i32_res_27135,
                                                                                                                                                                                                                   "][",
                                                                                                                                                                                                                   i32_res_27283,
                                                                                                                                                                                                                   "]."))
    dim_match_27301 = (i32_res_27135 == j_m_i_27287)
    empty_or_match_cert_27302 = True
    assert dim_match_27301, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-103\n   #1  bfastfinal.fut:53:35-50\n   #2  bfastfinal.fut:175:3-56\n   #3  bfastfinal.fut:171:1-175:56\n" % ("Value of (core language) shape (",
                                                                                                                                                                                                             i32_res_27135,
                                                                                                                                                                                                             ", ",
                                                                                                                                                                                                             j_m_i_27287,
                                                                                                                                                                                                             ") cannot match shape of type `[",
                                                                                                                                                                                                             i32_res_27135,
                                                                                                                                                                                                             "][",
                                                                                                                                                                                                             i32_res_27135,
                                                                                                                                                                                                             "]f32`."))
    max_group_sizze_29481 = self.max_group_size
    fits_29482 = sle64(i32_res_27268, max_group_sizze_29481)
    suff_intra_par_29480 = (self.sizes["mainDetailed.suff_intra_par_11"] <= i32_res_27268)
    intra_suff_and_fits_29483 = (suff_intra_par_29480 and fits_29482)
    nest_sizze_29967 = (m_27116 * i32_res_27268)
    segmap_group_sizze_29968 = self.sizes["mainDetailed.segmap_group_size_29927"]
    suff_intra_par_29995 = (self.sizes["mainDetailed.suff_intra_par_13"] <= i32_res_27268)
    intra_suff_and_fits_29996 = (fits_29482 and suff_intra_par_29995)
    segmap_group_sizze_30032 = self.sizes["mainDetailed.segmap_group_size_29833"]
    segmap_group_sizze_30048 = self.sizes["mainDetailed.segmap_group_size_29766"]
    segmap_group_sizze_30082 = self.sizes["mainDetailed.segmap_group_size_29712"]
    y_30092 = (i32_res_27135 * j_m_i_27287)
    nest_sizze_30093 = (m_27116 * y_30092)
    segmap_group_sizze_30094 = self.sizes["mainDetailed.segmap_group_size_29547"]
    segmap_usable_groups_30033 = sdiv_up_safe64(m_27116,
                                                segmap_group_sizze_30032)
    segmap_usable_groups_30049 = sdiv_up_safe64(nest_sizze_29967,
                                                segmap_group_sizze_30048)
    segmap_usable_groups_30083 = sdiv_up_safe64(nest_sizze_29967,
                                                segmap_group_sizze_30082)
    bytes_38853 = (np.int64(4) * i32_res_27268)
    bytes_38876 = (np.int64(4) * nest_sizze_29967)
    binop_x_38927 = (j_m_i_27287 * nest_sizze_29213)
    bytes_38925 = (np.int64(4) * binop_x_38927)
    local_memory_capacity_40114 = self.max_local_memory
    if (sle64((bytes_38853 + bytes_38853),
              sext_i32_i64(local_memory_capacity_40114)) and intra_suff_and_fits_29483):
      mem_38874 = opencl_alloc(self, bytes_38845, "mem_38874")
      if ((1 * (np.long(m_27116) * np.long(i32_res_27268))) != 0):
        self.mainDetailedzisegmap_intragroup_29363_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_38853)),
                                                                cl.LocalMemory(np.long(bytes_38853)),
                                                                np.int32(k2p2zq_27133),
                                                                np.int64(i32_res_27135),
                                                                np.int32(m_27266),
                                                                np.int64(i32_res_27268),
                                                                np.int64(i32_res_27283),
                                                                defunc_3_map_res_mem_38850,
                                                                mem_38874)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_29363_var,
                                   ((np.long(m_27116) * np.long(i32_res_27268)),),
                                   (np.long(i32_res_27268),))
        if synchronous:
          sync(self)
      defunc_3_map_res_mem_38929 = mem_38874
    else:
      segmap_usable_groups_29969 = sdiv_up64(nest_sizze_29967,
                                             segmap_group_sizze_29968)
      mem_38878 = opencl_alloc(self, bytes_38876, "mem_38878")
      if ((1 * (np.long(segmap_usable_groups_29969) * np.long(segmap_group_sizze_29968))) != 0):
        self.mainDetailedzisegmap_29924_var.set_args(self.global_failure,
                                                     np.int64(m_27116),
                                                     np.int32(k2p2zq_27133),
                                                     np.int64(i32_res_27135),
                                                     np.int32(m_27266),
                                                     np.int64(i32_res_27268),
                                                     defunc_3_map_res_mem_38850,
                                                     mem_38878)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_29924_var,
                                   ((np.long(segmap_usable_groups_29969) * np.long(segmap_group_sizze_29968)),),
                                   (np.long(segmap_group_sizze_29968),))
        if synchronous:
          sync(self)
      ctx_param_ext_38879 = m_27116
      ctx_param_ext_38880 = i32_res_27268
      ctx_param_ext_38881 = np.int64(0)
      ctx_param_ext_38882 = i32_res_27268
      ctx_param_ext_38883 = m_27116
      ctx_param_ext_38884 = np.int64(1)
      ctx_param_ext_38885 = i32_res_27268
      mem_param_38886 = mem_38878
      i_29985 = np.int32(0)
      one_41074 = np.int32(1)
      for counter_41073 in range(k2p2zq_27133):
        i32_res_29987 = sext_i32_i64(i_29985)
        local_memory_capacity_40074 = self.max_local_memory
        if intra_suff_and_fits_29996:
          gauss_jordan_res_ixfn_38908 = m_27116
        else:
          gauss_jordan_res_ixfn_38908 = ctx_param_ext_38883
        local_memory_capacity_40075 = self.max_local_memory
        if intra_suff_and_fits_29996:
          gauss_jordan_res_ixfn_38909 = i32_res_27268
        else:
          gauss_jordan_res_ixfn_38909 = ctx_param_ext_38885
        local_memory_capacity_40076 = self.max_local_memory
        if intra_suff_and_fits_29996:
          gauss_jordan_res_ixfn_38910 = m_27116
        else:
          gauss_jordan_res_ixfn_38910 = ctx_param_ext_38879
        local_memory_capacity_40077 = self.max_local_memory
        if intra_suff_and_fits_29996:
          gauss_jordan_res_ixfn_38911 = i32_res_27268
        else:
          gauss_jordan_res_ixfn_38911 = ctx_param_ext_38880
        local_memory_capacity_40078 = self.max_local_memory
        if intra_suff_and_fits_29996:
          gauss_jordan_res_ixfn_38912 = i32_res_27268
        else:
          gauss_jordan_res_ixfn_38912 = ctx_param_ext_38882
        local_memory_capacity_40079 = self.max_local_memory
        if intra_suff_and_fits_29996:
          gauss_jordan_res_ixfn_38913 = np.int64(1)
        else:
          gauss_jordan_res_ixfn_38913 = ctx_param_ext_38884
        local_memory_capacity_40080 = self.max_local_memory
        if intra_suff_and_fits_29996:
          gauss_jordan_res_ixfn_38914 = np.int64(0)
        else:
          gauss_jordan_res_ixfn_38914 = ctx_param_ext_38881
        local_memory_capacity_40108 = self.max_local_memory
        if ((sle64(np.int64(0),
                   sext_i32_i64(local_memory_capacity_40108)) and sle64(bytes_38853,
                                                                        sext_i32_i64(local_memory_capacity_40108))) and intra_suff_and_fits_29996):
          mem_38891 = opencl_alloc(self, bytes_38876, "mem_38891")
          group_sizze_40084 = self.sizes["mainDetailed.group_size_40084"]
          num_groups_40085 = sdiv_up64((m_27116 * i32_res_27268),
                                       group_sizze_40084)
          if ((1 * (np.long(num_groups_40085) * np.long(group_sizze_40084))) != 0):
            self.mainDetailedzicopy_40081_var.set_args(np.int64(m_27116),
                                                       np.int64(i32_res_27268),
                                                       np.int64(ctx_param_ext_38881),
                                                       np.int64(ctx_param_ext_38882),
                                                       np.int64(ctx_param_ext_38884),
                                                       mem_param_38886,
                                                       mem_38891)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzicopy_40081_var,
                                       ((np.long(num_groups_40085) * np.long(group_sizze_40084)),),
                                       (np.long(group_sizze_40084),))
            if synchronous:
              sync(self)
          mem_38899 = opencl_alloc(self, bytes_38876, "mem_38899")
          if ((1 * (np.long(m_27116) * np.long(i32_res_27268))) != 0):
            self.mainDetailedzisegmap_intragroup_29590_var.set_args(self.global_failure,
                                                                    cl.LocalMemory(np.long(bytes_38853)),
                                                                    np.int64(m_27116),
                                                                    np.int32(k2p2zq_27133),
                                                                    np.int32(m_27266),
                                                                    np.int64(i32_res_27268),
                                                                    np.int32(i_29985),
                                                                    np.int64(i32_res_29987),
                                                                    np.int64(ctx_param_ext_38881),
                                                                    np.int64(ctx_param_ext_38882),
                                                                    np.int64(ctx_param_ext_38884),
                                                                    mem_param_38886,
                                                                    mem_38891,
                                                                    mem_38899)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_intragroup_29590_var,
                                       ((np.long(m_27116) * np.long(i32_res_27268)),),
                                       (np.long(i32_res_27268),))
            if synchronous:
              sync(self)
          mem_38891 = None
          gauss_jordan_res_mem_38915 = mem_38899
        else:
          mem_38902 = opencl_alloc(self, m_27116, "mem_38902")
          if ((1 * (np.long(segmap_usable_groups_30033) * np.long(segmap_group_sizze_30032))) != 0):
            self.mainDetailedzisegmap_29831_var.set_args(self.global_failure,
                                                         np.int64(m_27116),
                                                         np.int64(i32_res_29987),
                                                         np.int64(ctx_param_ext_38881),
                                                         np.int64(ctx_param_ext_38882),
                                                         np.int64(ctx_param_ext_38884),
                                                         mem_param_38886,
                                                         mem_38902)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_29831_var,
                                       ((np.long(segmap_usable_groups_30033) * np.long(segmap_group_sizze_30032)),),
                                       (np.long(segmap_group_sizze_30032),))
            if synchronous:
              sync(self)
          mem_38906 = opencl_alloc(self, bytes_38876, "mem_38906")
          if ((1 * (np.long(segmap_usable_groups_30049) * np.long(segmap_group_sizze_30048))) != 0):
            self.mainDetailedzisegmap_29763_var.set_args(self.global_failure,
                                                         np.int64(m_27116),
                                                         np.int32(k2p2zq_27133),
                                                         np.int32(m_27266),
                                                         np.int64(i32_res_27268),
                                                         np.int32(i_29985),
                                                         np.int64(i32_res_29987),
                                                         np.int64(ctx_param_ext_38881),
                                                         np.int64(ctx_param_ext_38882),
                                                         np.int64(ctx_param_ext_38884),
                                                         mem_param_38886,
                                                         mem_38902, mem_38906)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_29763_var,
                                       ((np.long(segmap_usable_groups_30049) * np.long(segmap_group_sizze_30048)),),
                                       (np.long(segmap_group_sizze_30048),))
            if synchronous:
              sync(self)
          mem_38902 = None
          if ((1 * (np.long(segmap_usable_groups_30083) * np.long(segmap_group_sizze_30082))) != 0):
            self.mainDetailedzisegmap_29709_var.set_args(self.global_failure,
                                                         np.int64(m_27116),
                                                         np.int64(i32_res_27268),
                                                         np.int64(ctx_param_ext_38881),
                                                         np.int64(ctx_param_ext_38882),
                                                         np.int64(ctx_param_ext_38884),
                                                         mem_param_38886,
                                                         mem_38906)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_29709_var,
                                       ((np.long(segmap_usable_groups_30083) * np.long(segmap_group_sizze_30082)),),
                                       (np.long(segmap_group_sizze_30082),))
            if synchronous:
              sync(self)
          mem_38906 = None
          gauss_jordan_res_mem_38915 = mem_param_38886
        ctx_param_ext_tmp_40065 = gauss_jordan_res_ixfn_38910
        ctx_param_ext_tmp_40066 = gauss_jordan_res_ixfn_38911
        ctx_param_ext_tmp_40067 = gauss_jordan_res_ixfn_38914
        ctx_param_ext_tmp_40068 = gauss_jordan_res_ixfn_38912
        ctx_param_ext_tmp_40069 = gauss_jordan_res_ixfn_38908
        ctx_param_ext_tmp_40070 = gauss_jordan_res_ixfn_38913
        ctx_param_ext_tmp_40071 = gauss_jordan_res_ixfn_38909
        mem_param_tmp_40072 = gauss_jordan_res_mem_38915
        ctx_param_ext_38879 = ctx_param_ext_tmp_40065
        ctx_param_ext_38880 = ctx_param_ext_tmp_40066
        ctx_param_ext_38881 = ctx_param_ext_tmp_40067
        ctx_param_ext_38882 = ctx_param_ext_tmp_40068
        ctx_param_ext_38883 = ctx_param_ext_tmp_40069
        ctx_param_ext_38884 = ctx_param_ext_tmp_40070
        ctx_param_ext_38885 = ctx_param_ext_tmp_40071
        mem_param_38886 = mem_param_tmp_40072
        i_29985 += one_41074
      gauss_jordan_res_r_ixfn_38916 = ctx_param_ext_38879
      gauss_jordan_res_r_ixfn_38917 = ctx_param_ext_38880
      gauss_jordan_res_r_ixfn_38918 = ctx_param_ext_38881
      gauss_jordan_res_r_ixfn_38919 = ctx_param_ext_38882
      gauss_jordan_res_r_ixfn_38920 = ctx_param_ext_38883
      gauss_jordan_res_r_ixfn_38921 = ctx_param_ext_38884
      gauss_jordan_res_r_ixfn_38922 = ctx_param_ext_38885
      gauss_jordan_res_r_mem_38923 = mem_param_38886
      mem_38878 = None
      segmap_usable_groups_30095 = sdiv_up64(nest_sizze_30093,
                                             segmap_group_sizze_30094)
      mem_38928 = opencl_alloc(self, bytes_38925, "mem_38928")
      if ((1 * (np.long(segmap_usable_groups_30095) * np.long(segmap_group_sizze_30094))) != 0):
        self.mainDetailedzisegmap_29543_var.set_args(self.global_failure,
                                                     np.int64(m_27116),
                                                     np.int64(i32_res_27135),
                                                     np.int64(i32_res_27268),
                                                     np.int64(i32_res_27283),
                                                     np.int64(x_27284),
                                                     np.int64(j_m_i_27287),
                                                     np.int64(gauss_jordan_res_r_ixfn_38918),
                                                     np.int64(gauss_jordan_res_r_ixfn_38919),
                                                     np.int64(gauss_jordan_res_r_ixfn_38921),
                                                     gauss_jordan_res_r_mem_38923,
                                                     mem_38928)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_29543_var,
                                   ((np.long(segmap_usable_groups_30095) * np.long(segmap_group_sizze_30094)),),
                                   (np.long(segmap_group_sizze_30094),))
        if synchronous:
          sync(self)
      gauss_jordan_res_r_mem_38923 = None
      defunc_3_map_res_mem_38929 = mem_38928
    defunc_3_map_res_mem_38850 = None
    suff_outer_par_30103 = (self.sizes["mainDetailed.suff_outer_par_16"] <= m_27116)
    segmap_group_sizze_30125 = self.sizes["mainDetailed.segmap_group_size_30107"]
    max_num_groups_40115 = self.sizes["mainDetailed.segmap_num_groups_30109"]
    num_groups_30126 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27116,
                                                            segmap_group_sizze_30125),
                                                  sext_i32_i64(max_num_groups_40115))))
    suff_outer_par_30210 = (self.sizes["mainDetailed.suff_outer_par_17"] <= nest_sizze_29213)
    nest_sizze_30226 = (i32_res_27129 * nest_sizze_29213)
    segred_group_sizze_30227 = self.sizes["mainDetailed.segred_group_size_30169"]
    max_num_groups_40116 = self.sizes["mainDetailed.segred_num_groups_30171"]
    num_groups_30228 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_30226,
                                                            segred_group_sizze_30227),
                                                  sext_i32_i64(max_num_groups_40116))))
    Ty_36987 = self.sizes["mainDetailed.Ty_36984"]
    Ry_36988 = self.sizes["mainDetailed.Ry_36986"]
    Tx_36989 = self.sizes["mainDetailed.Tx_36983"]
    Rx_36990 = self.sizes["mainDetailed.Rx_36985"]
    Tk_36991 = self.sizes["mainDetailed.Tk_36982"]
    TxRx_36994 = (Tx_36989 * Rx_36990)
    TyRy_36995 = (Ty_36987 * Ry_36988)
    a_loc_szz_36997 = (Tk_36991 * TyRy_36995)
    binop_x_36998 = (Tx_36989 * Tk_36991)
    b_loc_szz_36999 = (Rx_36990 * binop_x_36998)
    group_sizze_37003 = (Ty_36987 * Tx_36989)
    bytes_38948 = (np.int64(4) * nest_sizze_29213)
    binop_x_38962 = (Ry_36988 * group_sizze_37003)
    binop_x_38963 = (Rx_36990 * binop_x_38962)
    bytes_38960 = (np.int64(4) * binop_x_38963)
    binop_x_38954 = (Ry_36988 * Rx_36990)
    bytes_38953 = (np.int64(4) * binop_x_38954)
    bytes_38965 = (np.int64(4) * a_loc_szz_36997)
    bytes_38967 = (np.int64(4) * b_loc_szz_36999)
    bytes_39036 = (np.int64(4) * binop_x_38962)
    binop_x_39042 = (Rx_36990 * group_sizze_37003)
    bytes_39040 = (np.int64(4) * binop_x_39042)
    bytes_39028 = (np.int64(4) * Ry_36988)
    bytes_39030 = (np.int64(4) * Rx_36990)
    binop_x_39724 = (np.int64(4) * Ty_36987)
    binop_x_39725 = (Tx_36989 * binop_x_39724)
    binop_x_39726 = (Ry_36988 * binop_x_39725)
    sizze_39727 = (Rx_36990 * binop_x_39726)
    num_threads_39800 = (segmap_group_sizze_30125 * num_groups_30126)
    total_sizze_39801 = (bytes_38749 * num_threads_39800)
    local_memory_capacity_40246 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_40246)) and suff_outer_par_30103):
      mem_38932 = opencl_alloc(self, bytes_38699, "mem_38932")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_38932, np.int64(0),
                                                  images_mem_38682, np.int64(0),
                                                  np.int64(1), N_27117, m_27116)
      mem_38950 = opencl_alloc(self, bytes_38948, "mem_38950")
      mem_38935 = opencl_alloc(self, total_sizze_39801, "mem_38935")
      if ((1 * (np.long(num_groups_30126) * np.long(segmap_group_sizze_30125))) != 0):
        self.mainDetailedzisegmap_30105_var.set_args(self.global_failure,
                                                     np.int64(N_27115),
                                                     np.int64(m_27116),
                                                     np.int32(n_27120),
                                                     np.int32(k2p2zq_27133),
                                                     np.int64(i32_res_27135),
                                                     np.int64(num_groups_30126),
                                                     binop_p_mem_38691,
                                                     mem_38932, mem_38935,
                                                     mem_38950)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_30105_var,
                                   ((np.long(num_groups_30126) * np.long(segmap_group_sizze_30125)),),
                                   (np.long(segmap_group_sizze_30125),))
        if synchronous:
          sync(self)
      mem_38932 = None
      mem_38935 = None
      mem_39148 = opencl_alloc(self, bytes_38948, "mem_39148")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_39148, np.int64(0),
                                                  mem_38950, np.int64(0),
                                                  np.int64(1), m_27116,
                                                  i32_res_27135)
      mem_38950 = None
      defunc_3_map_res_mem_39150 = mem_39148
    else:
      local_memory_capacity_40245 = self.max_local_memory
      if (sle64((bytes_38965 + bytes_38967),
                sext_i32_i64(local_memory_capacity_40245)) and suff_outer_par_30210):
        tk_div_tx_36992 = sdiv_up64(Tk_36991, Tx_36989)
        tk_div_ty_36993 = sdiv_up64(Tk_36991, Ty_36987)
        gridDim_x_37000 = sdiv_up64(i32_res_27135, TxRx_36994)
        gridDim_y_37001 = sdiv_up64(m_27116, TyRy_36995)
        grid_sizze_37002 = (gridDim_x_37000 * gridDim_y_37001)
        full_tiles_37031 = squot64(i32_res_27129, Tk_36991)
        kk_37238 = (Tk_36991 * full_tiles_37031)
        mem_39140 = opencl_alloc(self, bytes_38948, "mem_39140")
        if ((1 * (np.long(grid_sizze_37002) * np.long(group_sizze_37003))) != 0):
          self.mainDetailedzisegmap_intragroup_37006_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_38967)),
                                                                  cl.LocalMemory(np.long(bytes_38965)),
                                                                  np.int64(m_27116),
                                                                  np.int64(N_27117),
                                                                  np.int64(i32_res_27129),
                                                                  np.int64(i32_res_27135),
                                                                  np.int64(gridDim_x_37000),
                                                                  np.int64(full_tiles_37031),
                                                                  np.int64(kk_37238),
                                                                  images_mem_38682,
                                                                  mem_38694,
                                                                  mem_39140)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_37006_var,
                                     ((np.long(grid_sizze_37002) * np.long(group_sizze_37003)),),
                                     (np.long(group_sizze_37003),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_39145 = mem_39140
      else:
        mem_39144 = opencl_alloc(self, bytes_38948, "mem_39144")
        if slt64((i32_res_27129 * np.int64(2)), segred_group_sizze_30227):
          segment_sizze_nonzzero_40185 = smax64(np.int64(1), i32_res_27129)
          num_threads_40186 = (num_groups_30228 * segred_group_sizze_30227)
          if ((1 * (np.long(num_groups_30228) * np.long(segred_group_sizze_30227))) != 0):
            self.mainDetailedzisegred_small_30175_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_30227))),
                                                               np.int64(N_27115),
                                                               np.int64(m_27116),
                                                               np.int64(N_27117),
                                                               np.int64(i32_res_27129),
                                                               np.int64(i32_res_27135),
                                                               np.int64(num_groups_30228),
                                                               images_mem_38682,
                                                               binop_p_mem_38691,
                                                               mem_39144,
                                                               np.int64(segment_sizze_nonzzero_40185))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_30175_var,
                                       ((np.long(num_groups_30228) * np.long(segred_group_sizze_30227)),),
                                       (np.long(segred_group_sizze_30227),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_40206 = sdiv_up64(num_groups_30228,
                                               smax64(np.int64(1),
                                                      (m_27116 * i32_res_27135)))
          elements_per_thread_40207 = sdiv_up64(i32_res_27129,
                                                (segred_group_sizze_30227 * groups_per_segment_40206))
          virt_num_groups_40208 = (groups_per_segment_40206 * (m_27116 * i32_res_27135))
          num_threads_40209 = (num_groups_30228 * segred_group_sizze_30227)
          threads_per_segment_40210 = (groups_per_segment_40206 * segred_group_sizze_30227)
          group_res_arr_mem_40211 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_30227 * virt_num_groups_40208)),
                                                 "group_res_arr_mem_40211")
          mainDetailedzicounter_mem_40213 = self.mainDetailedzicounter_mem_40213
          if ((1 * (np.long(num_groups_30228) * np.long(segred_group_sizze_30227))) != 0):
            self.mainDetailedzisegred_large_30175_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_30227))),
                                                               np.int64(N_27115),
                                                               np.int64(N_27117),
                                                               np.int64(i32_res_27129),
                                                               np.int64(i32_res_27135),
                                                               np.int64(num_groups_30228),
                                                               images_mem_38682,
                                                               binop_p_mem_38691,
                                                               mem_39144,
                                                               np.int64(groups_per_segment_40206),
                                                               np.int64(elements_per_thread_40207),
                                                               np.int64(virt_num_groups_40208),
                                                               np.int64(threads_per_segment_40210),
                                                               group_res_arr_mem_40211,
                                                               mainDetailedzicounter_mem_40213)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_30175_var,
                                       ((np.long(num_groups_30228) * np.long(segred_group_sizze_30227)),),
                                       (np.long(segred_group_sizze_30227),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_39145 = mem_39144
      defunc_3_map_res_mem_39150 = defunc_3_map_res_mem_39145
    binop_p_mem_38691 = None
    mem_38694 = None
    suff_outer_par_30244 = (self.sizes["mainDetailed.suff_outer_par_18"] <= m_27116)
    segmap_group_sizze_30265 = self.sizes["mainDetailed.segmap_group_size_30248"]
    max_num_groups_40247 = self.sizes["mainDetailed.segmap_num_groups_30250"]
    num_groups_30266 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27116,
                                                            segmap_group_sizze_30265),
                                                  sext_i32_i64(max_num_groups_40247))))
    suff_outer_par_30345 = (self.sizes["mainDetailed.suff_outer_par_19"] <= nest_sizze_29213)
    segred_group_sizze_30360 = self.sizes["mainDetailed.segred_group_size_30306"]
    max_num_groups_40248 = self.sizes["mainDetailed.segred_num_groups_30308"]
    num_groups_30361 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_38847,
                                                            segred_group_sizze_30360),
                                                  sext_i32_i64(max_num_groups_40248))))
    tile_sizze_37450 = self.sizes["mainDetailed.tile_size_37449"]
    group_sizze_37451 = (tile_sizze_37450 * tile_sizze_37450)
    bytes_39182 = (np.int64(4) * group_sizze_37451)
    binop_x_39740 = (np.int64(4) * tile_sizze_37450)
    sizze_39741 = (tile_sizze_37450 * binop_x_39740)
    num_threads_39804 = (segmap_group_sizze_30265 * num_groups_30266)
    total_sizze_39805 = (bytes_38749 * num_threads_39804)
    local_memory_capacity_40334 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_40334)) and suff_outer_par_30244):
      mem_39154 = opencl_alloc(self, bytes_38744, "mem_39154")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_39154, np.int64(0),
                                                  defunc_3_map_res_mem_38929,
                                                  np.int64(0), np.int64(1),
                                                  (i32_res_27135 * i32_res_27135),
                                                  m_27116)
      mem_39157 = opencl_alloc(self, bytes_38948, "mem_39157")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_39157, np.int64(0),
                                                  defunc_3_map_res_mem_39150,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_27135, m_27116)
      mem_39175 = opencl_alloc(self, bytes_38948, "mem_39175")
      mem_39160 = opencl_alloc(self, total_sizze_39805, "mem_39160")
      if ((1 * (np.long(num_groups_30266) * np.long(segmap_group_sizze_30265))) != 0):
        self.mainDetailedzisegmap_30246_var.set_args(self.global_failure,
                                                     np.int64(m_27116),
                                                     np.int32(k2p2zq_27133),
                                                     np.int64(i32_res_27135),
                                                     np.int64(num_groups_30266),
                                                     mem_39154, mem_39157,
                                                     mem_39160, mem_39175)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_30246_var,
                                   ((np.long(num_groups_30266) * np.long(segmap_group_sizze_30265)),),
                                   (np.long(segmap_group_sizze_30265),))
        if synchronous:
          sync(self)
      mem_39154 = None
      mem_39157 = None
      mem_39160 = None
      mem_39214 = opencl_alloc(self, bytes_38948, "mem_39214")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_39214, np.int64(0),
                                                  mem_39175, np.int64(0),
                                                  np.int64(1), m_27116,
                                                  i32_res_27135)
      mem_39175 = None
      defunc_4_map_res_mem_39216 = mem_39214
    else:
      local_memory_capacity_40333 = self.max_local_memory
      if (sle64((bytes_39182 + bytes_39182),
                sext_i32_i64(local_memory_capacity_40333)) and suff_outer_par_30345):
        mem_39179 = opencl_alloc(self, bytes_38845, "mem_39179")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_39179, np.int64(0),
                                                    defunc_3_map_res_mem_38929,
                                                    np.int64(0), np.int64(1),
                                                    i32_res_27135,
                                                    (m_27116 * i32_res_27135))
        num_groups_x_37452 = sdiv_up64(m_27116, tile_sizze_37450)
        num_groups_y_37453 = sdiv_up64(i32_res_27135, tile_sizze_37450)
        num_groups_top_37454 = (num_groups_x_37452 * num_groups_y_37453)
        num_whole_tiles_37471 = squot64(i32_res_27135, tile_sizze_37450)
        residual_input_37598 = srem64(i32_res_27135, tile_sizze_37450)
        cond_37599 = (residual_input_37598 == np.int64(0))
        mem_39206 = opencl_alloc(self, bytes_38948, "mem_39206")
        if ((1 * (np.long(num_groups_top_37454) * np.long(group_sizze_37451))) != 0):
          self.mainDetailedzisegmap_intragroup_37455_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_39182)),
                                                                  cl.LocalMemory(np.long(bytes_39182)),
                                                                  np.int64(m_27116),
                                                                  np.int64(i32_res_27135),
                                                                  np.int64(num_groups_y_37453),
                                                                  np.int64(num_whole_tiles_37471),
                                                                  np.int64(residual_input_37598),
                                                                  np.byte(cond_37599),
                                                                  defunc_3_map_res_mem_39150,
                                                                  mem_39179,
                                                                  mem_39206)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_37455_var,
                                     ((np.long(num_groups_top_37454) * np.long(group_sizze_37451)),),
                                     (np.long(group_sizze_37451),))
          if synchronous:
            sync(self)
        mem_39179 = None
        defunc_4_map_res_mem_39211 = mem_39206
      else:
        mem_39210 = opencl_alloc(self, bytes_38948, "mem_39210")
        if slt64((i32_res_27135 * np.int64(2)), segred_group_sizze_30360):
          segment_sizze_nonzzero_40273 = smax64(np.int64(1), i32_res_27135)
          num_threads_40274 = (num_groups_30361 * segred_group_sizze_30360)
          if ((1 * (np.long(num_groups_30361) * np.long(segred_group_sizze_30360))) != 0):
            self.mainDetailedzisegred_small_30312_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_30360))),
                                                               np.int64(m_27116),
                                                               np.int64(i32_res_27135),
                                                               np.int64(num_groups_30361),
                                                               defunc_3_map_res_mem_38929,
                                                               defunc_3_map_res_mem_39150,
                                                               mem_39210,
                                                               np.int64(segment_sizze_nonzzero_40273))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_30312_var,
                                       ((np.long(num_groups_30361) * np.long(segred_group_sizze_30360)),),
                                       (np.long(segred_group_sizze_30360),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_40294 = sdiv_up64(num_groups_30361,
                                               smax64(np.int64(1),
                                                      (m_27116 * i32_res_27135)))
          elements_per_thread_40295 = sdiv_up64(i32_res_27135,
                                                (segred_group_sizze_30360 * groups_per_segment_40294))
          virt_num_groups_40296 = (groups_per_segment_40294 * (m_27116 * i32_res_27135))
          num_threads_40297 = (num_groups_30361 * segred_group_sizze_30360)
          threads_per_segment_40298 = (groups_per_segment_40294 * segred_group_sizze_30360)
          group_res_arr_mem_40299 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_30360 * virt_num_groups_40296)),
                                                 "group_res_arr_mem_40299")
          mainDetailedzicounter_mem_40301 = self.mainDetailedzicounter_mem_40301
          if ((1 * (np.long(num_groups_30361) * np.long(segred_group_sizze_30360))) != 0):
            self.mainDetailedzisegred_large_30312_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_30360))),
                                                               np.int64(i32_res_27135),
                                                               np.int64(num_groups_30361),
                                                               defunc_3_map_res_mem_38929,
                                                               defunc_3_map_res_mem_39150,
                                                               mem_39210,
                                                               np.int64(groups_per_segment_40294),
                                                               np.int64(elements_per_thread_40295),
                                                               np.int64(virt_num_groups_40296),
                                                               np.int64(threads_per_segment_40298),
                                                               group_res_arr_mem_40299,
                                                               mainDetailedzicounter_mem_40301)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_30312_var,
                                       ((np.long(num_groups_30361) * np.long(segred_group_sizze_30360)),),
                                       (np.long(segred_group_sizze_30360),))
            if synchronous:
              sync(self)
        defunc_4_map_res_mem_39211 = mem_39210
      defunc_4_map_res_mem_39216 = defunc_4_map_res_mem_39211
    defunc_3_map_res_mem_38929 = None
    defunc_3_map_res_mem_39150 = None
    suff_outer_par_30376 = (self.sizes["mainDetailed.suff_outer_par_20"] <= m_27116)
    segmap_group_sizze_30396 = self.sizes["mainDetailed.segmap_group_size_30380"]
    max_num_groups_40335 = self.sizes["mainDetailed.segmap_num_groups_30382"]
    num_groups_30397 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27116,
                                                            segmap_group_sizze_30396),
                                                  sext_i32_i64(max_num_groups_40335))))
    comparatee_30472 = (N_27115 * m_27116)
    suff_outer_par_30473 = (self.sizes["mainDetailed.suff_outer_par_21"] <= comparatee_30472)
    nest_sizze_30487 = (i32_res_27135 * comparatee_30472)
    segred_group_sizze_30488 = self.sizes["mainDetailed.segred_group_size_30436"]
    max_num_groups_40336 = self.sizes["mainDetailed.segred_num_groups_30438"]
    num_groups_30489 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_30487,
                                                            segred_group_sizze_30488),
                                                  sext_i32_i64(max_num_groups_40336))))
    Ty_37728 = self.sizes["mainDetailed.Ty_37725"]
    Ry_37729 = self.sizes["mainDetailed.Ry_37727"]
    Tx_37730 = self.sizes["mainDetailed.Tx_37724"]
    Rx_37731 = self.sizes["mainDetailed.Rx_37726"]
    Tk_37732 = self.sizes["mainDetailed.Tk_37723"]
    TxRx_37735 = (Tx_37730 * Rx_37731)
    TyRy_37736 = (Ty_37728 * Ry_37729)
    a_loc_szz_37738 = (Tk_37732 * TyRy_37736)
    binop_x_37739 = (Tx_37730 * Tk_37732)
    b_loc_szz_37740 = (Rx_37731 * binop_x_37739)
    group_sizze_37744 = (Ty_37728 * Tx_37730)
    bytes_39235 = (np.int64(4) * comparatee_30472)
    bytes_39221 = (np.int64(4) * N_27115)
    binop_x_39252 = (Ry_37729 * group_sizze_37744)
    binop_x_39253 = (Rx_37731 * binop_x_39252)
    bytes_39250 = (np.int64(4) * binop_x_39253)
    binop_x_39244 = (Ry_37729 * Rx_37731)
    bytes_39243 = (np.int64(4) * binop_x_39244)
    bytes_39255 = (np.int64(4) * a_loc_szz_37738)
    bytes_39257 = (np.int64(4) * b_loc_szz_37740)
    bytes_39326 = (np.int64(4) * binop_x_39252)
    binop_x_39332 = (Rx_37731 * group_sizze_37744)
    bytes_39330 = (np.int64(4) * binop_x_39332)
    bytes_39318 = (np.int64(4) * Ry_37729)
    bytes_39320 = (np.int64(4) * Rx_37731)
    binop_x_39754 = (np.int64(4) * Ty_37728)
    binop_x_39755 = (Tx_37730 * binop_x_39754)
    binop_x_39756 = (Ry_37729 * binop_x_39755)
    sizze_39757 = (Rx_37731 * binop_x_39756)
    num_threads_39808 = (segmap_group_sizze_30396 * num_groups_30397)
    total_sizze_39809 = (bytes_39221 * num_threads_39808)
    local_memory_capacity_40466 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_40466)) and suff_outer_par_30376):
      mem_39219 = opencl_alloc(self, bytes_38948, "mem_39219")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_39219, np.int64(0),
                                                  defunc_4_map_res_mem_39216,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_27135, m_27116)
      mem_39237 = opencl_alloc(self, bytes_39235, "mem_39237")
      mem_39222 = opencl_alloc(self, total_sizze_39809, "mem_39222")
      if ((1 * (np.long(num_groups_30397) * np.long(segmap_group_sizze_30396))) != 0):
        self.mainDetailedzisegmap_30378_var.set_args(self.global_failure,
                                                     np.int64(N_27115),
                                                     np.int64(m_27116),
                                                     np.int32(k2p2zq_27133),
                                                     np.int64(i32_res_27135),
                                                     np.int64(num_groups_30397),
                                                     mem_38698, mem_39219,
                                                     mem_39222, mem_39237)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_30378_var,
                                   ((np.long(num_groups_30397) * np.long(segmap_group_sizze_30396)),),
                                   (np.long(segmap_group_sizze_30396),))
        if synchronous:
          sync(self)
      mem_39219 = None
      mem_39222 = None
      mem_39438 = opencl_alloc(self, bytes_39235, "mem_39438")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_39438, np.int64(0),
                                                  mem_39237, np.int64(0),
                                                  np.int64(1), m_27116, N_27115)
      mem_39237 = None
      defunc_3_map_res_mem_39440 = mem_39438
    else:
      local_memory_capacity_40465 = self.max_local_memory
      if (sle64((bytes_39255 + bytes_39257),
                sext_i32_i64(local_memory_capacity_40465)) and suff_outer_par_30473):
        mem_39240 = opencl_alloc(self, bytes_38684, "mem_39240")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_39240, np.int64(0),
                                                    mem_38698, np.int64(0),
                                                    np.int64(1), i32_res_27135,
                                                    N_27115)
        tk_div_tx_37733 = sdiv_up64(Tk_37732, Tx_37730)
        tk_div_ty_37734 = sdiv_up64(Tk_37732, Ty_37728)
        gridDim_x_37741 = sdiv_up64(N_27115, TxRx_37735)
        gridDim_y_37742 = sdiv_up64(m_27116, TyRy_37736)
        grid_sizze_37743 = (gridDim_x_37741 * gridDim_y_37742)
        full_tiles_37772 = squot64(i32_res_27135, Tk_37732)
        kk_37975 = (Tk_37732 * full_tiles_37772)
        mem_39430 = opencl_alloc(self, bytes_39235, "mem_39430")
        if ((1 * (np.long(grid_sizze_37743) * np.long(group_sizze_37744))) != 0):
          self.mainDetailedzisegmap_intragroup_37747_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_39257)),
                                                                  cl.LocalMemory(np.long(bytes_39255)),
                                                                  np.int64(N_27115),
                                                                  np.int64(m_27116),
                                                                  np.int64(i32_res_27135),
                                                                  np.int64(gridDim_x_37741),
                                                                  np.int64(full_tiles_37772),
                                                                  np.int64(kk_37975),
                                                                  defunc_4_map_res_mem_39216,
                                                                  mem_39240,
                                                                  mem_39430)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_37747_var,
                                     ((np.long(grid_sizze_37743) * np.long(group_sizze_37744)),),
                                     (np.long(group_sizze_37744),))
          if synchronous:
            sync(self)
        mem_39240 = None
        defunc_3_map_res_mem_39435 = mem_39430
      else:
        mem_39434 = opencl_alloc(self, bytes_39235, "mem_39434")
        if slt64((i32_res_27135 * np.int64(2)), segred_group_sizze_30488):
          segment_sizze_nonzzero_40405 = smax64(np.int64(1), i32_res_27135)
          num_threads_40406 = (num_groups_30489 * segred_group_sizze_30488)
          if ((1 * (np.long(num_groups_30489) * np.long(segred_group_sizze_30488))) != 0):
            self.mainDetailedzisegred_small_30442_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_30488))),
                                                               np.int64(N_27115),
                                                               np.int64(m_27116),
                                                               np.int64(i32_res_27135),
                                                               np.int64(num_groups_30489),
                                                               mem_38698,
                                                               defunc_4_map_res_mem_39216,
                                                               mem_39434,
                                                               np.int64(segment_sizze_nonzzero_40405))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_30442_var,
                                       ((np.long(num_groups_30489) * np.long(segred_group_sizze_30488)),),
                                       (np.long(segred_group_sizze_30488),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_40426 = sdiv_up64(num_groups_30489,
                                               smax64(np.int64(1),
                                                      (m_27116 * N_27115)))
          elements_per_thread_40427 = sdiv_up64(i32_res_27135,
                                                (segred_group_sizze_30488 * groups_per_segment_40426))
          virt_num_groups_40428 = (groups_per_segment_40426 * (m_27116 * N_27115))
          num_threads_40429 = (num_groups_30489 * segred_group_sizze_30488)
          threads_per_segment_40430 = (groups_per_segment_40426 * segred_group_sizze_30488)
          group_res_arr_mem_40431 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_30488 * virt_num_groups_40428)),
                                                 "group_res_arr_mem_40431")
          mainDetailedzicounter_mem_40433 = self.mainDetailedzicounter_mem_40433
          if ((1 * (np.long(num_groups_30489) * np.long(segred_group_sizze_30488))) != 0):
            self.mainDetailedzisegred_large_30442_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_30488))),
                                                               np.int64(N_27115),
                                                               np.int64(i32_res_27135),
                                                               np.int64(num_groups_30489),
                                                               mem_38698,
                                                               defunc_4_map_res_mem_39216,
                                                               mem_39434,
                                                               np.int64(groups_per_segment_40426),
                                                               np.int64(elements_per_thread_40427),
                                                               np.int64(virt_num_groups_40428),
                                                               np.int64(threads_per_segment_40430),
                                                               group_res_arr_mem_40431,
                                                               mainDetailedzicounter_mem_40433)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_30442_var,
                                       ((np.long(num_groups_30489) * np.long(segred_group_sizze_30488)),),
                                       (np.long(segred_group_sizze_30488),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_39435 = mem_39434
      defunc_3_map_res_mem_39440 = defunc_3_map_res_mem_39435
    mem_38698 = None
    defunc_4_map_res_mem_39216 = None
    i_27395 = (N_27115 - np.int64(1))
    x_27396 = sle64(np.int64(0), i_27395)
    y_27397 = slt64(i_27395, N_27115)
    bounds_check_27398 = (x_27396 and y_27397)
    index_certs_27399 = True
    assert bounds_check_27398, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:18:29-34\n   #1  helpers.fut:20:13-20\n   #2  bfastfinal.fut:80:30-91\n   #3  /prelude/soacs.fut:56:19-23\n   #4  /prelude/soacs.fut:56:3-37\n   #5  bfastfinal.fut:74:5-83:25\n   #6  bfastfinal.fut:175:3-56\n   #7  bfastfinal.fut:171:1-175:56\n" % ("Index [",
                                                                                                                                                                                                                                                                                                                                                     i_27395,
                                                                                                                                                                                                                                                                                                                                                     "] out of bounds for array of shape [",
                                                                                                                                                                                                                                                                                                                                                     N_27115,
                                                                                                                                                                                                                                                                                                                                                     "]."))
    fits_30618 = sle64(N_27115, max_group_sizze_29481)
    suff_intra_par_30616 = (self.sizes["mainDetailed.suff_intra_par_24"] <= N_27115)
    intra_suff_and_fits_30619 = (suff_intra_par_30616 and fits_30618)
    segscan_group_sizze_30768 = self.sizes["mainDetailed.segscan_group_size_30745"]
    max_num_groups_40467 = self.sizes["mainDetailed.segscan_num_groups_30747"]
    num_groups_30769 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(comparatee_30472,
                                                            segscan_group_sizze_30768),
                                                  sext_i32_i64(max_num_groups_40467))))
    segmap_group_sizze_30788 = self.sizes["mainDetailed.segmap_group_size_30736"]
    mem_39443 = opencl_alloc(self, bytes_39235, "mem_39443")
    self.futhark_builtinzhreplicate_f32(mem_39443, (m_27116 * N_27115), np.nan)
    mem_39446 = opencl_alloc(self, bytes_39235, "mem_39446")
    self.futhark_builtinzhreplicate_i32(mem_39446, (m_27116 * N_27115),
                                        np.int32(0))
    segmap_group_sizze_30824 = self.sizes["mainDetailed.segmap_group_size_30661"]
    bytes_39458 = (np.int64(4) * m_27116)
    bytes_39449 = (np.int64(8) * N_27115)
    bytes_39467 = (np.int64(8) * comparatee_30472)
    local_memory_capacity_40569 = self.max_local_memory
    if (sle64((((bytes_39449 + bytes_39221) + bytes_39221) + bytes_39221),
              sext_i32_i64(local_memory_capacity_40569)) and intra_suff_and_fits_30619):
      mem_39459 = opencl_alloc(self, bytes_39458, "mem_39459")
      mem_39462 = opencl_alloc(self, bytes_39235, "mem_39462")
      mem_39465 = opencl_alloc(self, bytes_39235, "mem_39465")
      if ((1 * (np.long(m_27116) * np.long(N_27115))) != 0):
        self.mainDetailedzisegmap_intragroup_30541_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_39221)),
                                                                cl.LocalMemory(np.long(bytes_39221)),
                                                                cl.LocalMemory(np.long(bytes_39221)),
                                                                cl.LocalMemory(np.long(bytes_39449)),
                                                                np.int64(N_27115),
                                                                np.int64(N_27117),
                                                                np.int64(i_27395),
                                                                images_mem_38682,
                                                                defunc_3_map_res_mem_39440,
                                                                mem_39459,
                                                                mem_39462,
                                                                mem_39465)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_30541_var,
                                   ((np.long(m_27116) * np.long(N_27115)),),
                                   (np.long(N_27115),))
        if synchronous:
          sync(self)
      defunc_4_map_res_mem_39477 = mem_39459
      defunc_4_map_res_mem_39478 = mem_39462
      defunc_4_map_res_mem_39479 = mem_39465
    else:
      mem_39469 = opencl_alloc(self, bytes_39467, "mem_39469")
      mem_39472 = opencl_alloc(self, bytes_39235, "mem_39472")
      if slt64(np.int64(0), (m_27116 * N_27115)):
        stage1_max_num_groups_40503 = self.max_group_size
        stage1_num_groups_40504 = smin64(stage1_max_num_groups_40503,
                                         num_groups_30769)
        num_threads_40505 = sext_i64_i32((stage1_num_groups_40504 * segscan_group_sizze_30768))
        if ((1 * (np.long(stage1_num_groups_40504) * np.long(segscan_group_sizze_30768))) != 0):
          self.mainDetailedziscan_stage1_30751_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                          (np.int32(8) * segscan_group_sizze_30768)))),
                                                            np.int64(N_27115),
                                                            np.int64(m_27116),
                                                            np.int64(N_27117),
                                                            images_mem_38682,
                                                            defunc_3_map_res_mem_39440,
                                                            mem_39469,
                                                            mem_39472,
                                                            np.int32(num_threads_40505))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage1_30751_var,
                                     ((np.long(stage1_num_groups_40504) * np.long(segscan_group_sizze_30768)),),
                                     (np.long(segscan_group_sizze_30768),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_40504))) != 0):
          self.mainDetailedziscan_stage2_30751_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                          (np.int32(8) * stage1_num_groups_40504)))),
                                                            np.int64(N_27115),
                                                            np.int64(m_27116),
                                                            mem_39469,
                                                            np.int64(stage1_num_groups_40504),
                                                            np.int32(num_threads_40505))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage2_30751_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_40504)),),
                                     (np.long(stage1_num_groups_40504),))
          if synchronous:
            sync(self)
        required_groups_40547 = sext_i64_i32(sdiv_up64((m_27116 * N_27115),
                                                       segscan_group_sizze_30768))
        if ((1 * (np.long(num_groups_30769) * np.long(segscan_group_sizze_30768))) != 0):
          self.mainDetailedziscan_stage3_30751_var.set_args(self.global_failure,
                                                            np.int64(N_27115),
                                                            np.int64(m_27116),
                                                            np.int64(num_groups_30769),
                                                            mem_39469,
                                                            np.int32(num_threads_40505),
                                                            np.int32(required_groups_40547))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage3_30751_var,
                                     ((np.long(num_groups_30769) * np.long(segscan_group_sizze_30768)),),
                                     (np.long(segscan_group_sizze_30768),))
          if synchronous:
            sync(self)
      segmap_usable_groups_30789 = sdiv_up64(m_27116, segmap_group_sizze_30788)
      mem_39475 = opencl_alloc(self, bytes_39458, "mem_39475")
      if ((1 * (np.long(segmap_usable_groups_30789) * np.long(segmap_group_sizze_30788))) != 0):
        self.mainDetailedzisegmap_30734_var.set_args(self.global_failure,
                                                     np.int64(N_27115),
                                                     np.int64(m_27116),
                                                     np.int64(i_27395),
                                                     mem_39469, mem_39475)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_30734_var,
                                   ((np.long(segmap_usable_groups_30789) * np.long(segmap_group_sizze_30788)),),
                                   (np.long(segmap_group_sizze_30788),))
        if synchronous:
          sync(self)
      segmap_usable_groups_30825 = sdiv_up64(comparatee_30472,
                                             segmap_group_sizze_30824)
      if ((1 * (np.long(segmap_usable_groups_30825) * np.long(segmap_group_sizze_30824))) != 0):
        self.mainDetailedzisegmap_30658_var.set_args(self.global_failure,
                                                     np.int64(N_27115),
                                                     np.int64(m_27116),
                                                     mem_39443, mem_39446,
                                                     mem_39469, mem_39472)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_30658_var,
                                   ((np.long(segmap_usable_groups_30825) * np.long(segmap_group_sizze_30824)),),
                                   (np.long(segmap_group_sizze_30824),))
        if synchronous:
          sync(self)
      mem_39469 = None
      mem_39472 = None
      defunc_4_map_res_mem_39477 = mem_39475
      defunc_4_map_res_mem_39478 = mem_39443
      defunc_4_map_res_mem_39479 = mem_39446
    mem_39443 = None
    mem_39446 = None
    suff_outer_par_30873 = (self.sizes["mainDetailed.suff_outer_par_28"] <= m_27116)
    fits_30951 = sle64(i32_res_27129, max_group_sizze_29481)
    suff_intra_par_30949 = (self.sizes["mainDetailed.suff_intra_par_29"] <= i32_res_27129)
    intra_suff_and_fits_30952 = (suff_intra_par_30949 and fits_30951)
    segmap_group_sizze_30916 = self.sizes["mainDetailed.segmap_group_size_30885"]
    nest_sizze_31039 = (m_27116 * i32_res_27129)
    segred_group_sizze_31040 = self.sizes["mainDetailed.segred_group_size_31023"]
    max_num_groups_40570 = self.sizes["mainDetailed.segred_num_groups_31025"]
    num_groups_31041 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_31039,
                                                            segred_group_sizze_31040),
                                                  sext_i32_i64(max_num_groups_40570))))
    segred_group_sizze_31054 = self.sizes["mainDetailed.segred_group_size_31002"]
    max_num_groups_40571 = self.sizes["mainDetailed.segred_num_groups_31004"]
    num_groups_31055 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_31039,
                                                            segred_group_sizze_31054),
                                                  sext_i32_i64(max_num_groups_40571))))
    segmap_group_sizze_31070 = self.sizes["mainDetailed.segmap_group_size_30987"]
    bytes_39488 = (np.int64(4) * segmap_group_sizze_30916)
    local_memory_capacity_40725 = self.max_local_memory
    if (sle64((bytes_39488 + bytes_39488),
              sext_i32_i64(local_memory_capacity_40725)) and suff_outer_par_30873):
      segmap_usable_groups_30917 = sdiv_up64(m_27116, segmap_group_sizze_30916)
      mem_39482 = opencl_alloc(self, bytes_38699, "mem_39482")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_39482, np.int64(0),
                                                  images_mem_38682, np.int64(0),
                                                  np.int64(1), N_27117, m_27116)
      mem_39485 = opencl_alloc(self, bytes_39235, "mem_39485")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_39485, np.int64(0),
                                                  defunc_4_map_res_mem_39478,
                                                  np.int64(0), np.int64(1),
                                                  N_27115, m_27116)
      num_whole_tiles_38189 = squot64(i32_res_27129, segmap_group_sizze_30916)
      residual_input_38310 = srem64(i32_res_27129, segmap_group_sizze_30916)
      cond_38311 = (residual_input_38310 == np.int64(0))
      mem_39513 = opencl_alloc(self, bytes_39458, "mem_39513")
      mem_39515 = opencl_alloc(self, bytes_39458, "mem_39515")
      mem_39517 = opencl_alloc(self, bytes_39458, "mem_39517")
      if ((1 * (np.long(segmap_usable_groups_30917) * np.long(segmap_group_sizze_30916))) != 0):
        self.mainDetailedzisegmap_intragroup_38181_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_39488)),
                                                                cl.LocalMemory(np.long(bytes_39488)),
                                                                np.int64(m_27116),
                                                                np.int32(n_27120),
                                                                np.float32(hfrac_27122),
                                                                np.int64(i32_res_27129),
                                                                np.int32(k2p2_27131),
                                                                np.int64(num_whole_tiles_38189),
                                                                np.int64(residual_input_38310),
                                                                np.byte(cond_38311),
                                                                mem_39482,
                                                                mem_39485,
                                                                mem_39513,
                                                                mem_39515,
                                                                mem_39517)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_38181_var,
                                   ((np.long(segmap_usable_groups_30917) * np.long(segmap_group_sizze_30916)),),
                                   (np.long(segmap_group_sizze_30916),))
        if synchronous:
          sync(self)
      mem_39482 = None
      mem_39485 = None
      defunc_3_map_res_mem_39541 = mem_39513
      defunc_3_map_res_mem_39542 = mem_39515
      defunc_3_map_res_mem_39543 = mem_39517
    else:
      local_memory_capacity_40724 = self.max_local_memory
      if (sle64(((np.int32(4) * i32_res_27129) + (np.int32(4) * i32_res_27129)),
                sext_i32_i64(local_memory_capacity_40724)) and intra_suff_and_fits_30952):
        mem_39522 = opencl_alloc(self, bytes_39458, "mem_39522")
        mem_39524 = opencl_alloc(self, bytes_39458, "mem_39524")
        mem_39526 = opencl_alloc(self, bytes_39458, "mem_39526")
        if ((1 * (np.long(m_27116) * np.long(i32_res_27129))) != 0):
          self.mainDetailedzisegmap_intragroup_30881_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long((np.int32(4) * i32_res_27129))),
                                                                  cl.LocalMemory(np.long((np.int32(4) * i32_res_27129))),
                                                                  np.int64(N_27115),
                                                                  np.int64(N_27117),
                                                                  np.float32(hfrac_27122),
                                                                  np.int64(i32_res_27129),
                                                                  np.int32(k2p2_27131),
                                                                  images_mem_38682,
                                                                  defunc_4_map_res_mem_39478,
                                                                  mem_39522,
                                                                  mem_39524,
                                                                  mem_39526)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_30881_var,
                                     ((np.long(m_27116) * np.long(i32_res_27129)),),
                                     (np.long(i32_res_27129),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_39538 = mem_39522
        defunc_3_map_res_mem_39539 = mem_39524
        defunc_3_map_res_mem_39540 = mem_39526
      else:
        mem_39529 = opencl_alloc(self, bytes_39458, "mem_39529")
        if slt64((i32_res_27129 * np.int64(2)), segred_group_sizze_31040):
          segment_sizze_nonzzero_40599 = smax64(np.int64(1), i32_res_27129)
          num_threads_40600 = (num_groups_31041 * segred_group_sizze_31040)
          if ((1 * (np.long(num_groups_31041) * np.long(segred_group_sizze_31040))) != 0):
            self.mainDetailedzisegred_small_31029_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31040))),
                                                               np.int64(m_27116),
                                                               np.int64(N_27117),
                                                               np.int64(i32_res_27129),
                                                               np.int64(num_groups_31041),
                                                               images_mem_38682,
                                                               mem_39529,
                                                               np.int64(segment_sizze_nonzzero_40599))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_31029_var,
                                       ((np.long(num_groups_31041) * np.long(segred_group_sizze_31040)),),
                                       (np.long(segred_group_sizze_31040),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_40620 = sdiv_up64(num_groups_31041,
                                               smax64(np.int64(1), m_27116))
          elements_per_thread_40621 = sdiv_up64(i32_res_27129,
                                                (segred_group_sizze_31040 * groups_per_segment_40620))
          virt_num_groups_40622 = (groups_per_segment_40620 * m_27116)
          num_threads_40623 = (num_groups_31041 * segred_group_sizze_31040)
          threads_per_segment_40624 = (groups_per_segment_40620 * segred_group_sizze_31040)
          group_res_arr_mem_40625 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_31040 * virt_num_groups_40622)),
                                                 "group_res_arr_mem_40625")
          mainDetailedzicounter_mem_40627 = self.mainDetailedzicounter_mem_40627
          if ((1 * (np.long(num_groups_31041) * np.long(segred_group_sizze_31040))) != 0):
            self.mainDetailedzisegred_large_31029_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31040))),
                                                               np.int64(N_27117),
                                                               np.int64(i32_res_27129),
                                                               np.int64(num_groups_31041),
                                                               images_mem_38682,
                                                               mem_39529,
                                                               np.int64(groups_per_segment_40620),
                                                               np.int64(elements_per_thread_40621),
                                                               np.int64(virt_num_groups_40622),
                                                               np.int64(threads_per_segment_40624),
                                                               group_res_arr_mem_40625,
                                                               mainDetailedzicounter_mem_40627)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_31029_var,
                                       ((np.long(num_groups_31041) * np.long(segred_group_sizze_31040)),),
                                       (np.long(segred_group_sizze_31040),))
            if synchronous:
              sync(self)
        mem_39532 = opencl_alloc(self, bytes_39458, "mem_39532")
        if slt64((i32_res_27129 * np.int64(2)), segred_group_sizze_31054):
          segment_sizze_nonzzero_40659 = smax64(np.int64(1), i32_res_27129)
          num_threads_40660 = (num_groups_31055 * segred_group_sizze_31054)
          if ((1 * (np.long(num_groups_31055) * np.long(segred_group_sizze_31054))) != 0):
            self.mainDetailedzisegred_small_31008_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31054))),
                                                               np.int64(N_27115),
                                                               np.int64(m_27116),
                                                               np.int64(i32_res_27129),
                                                               np.int64(num_groups_31055),
                                                               defunc_4_map_res_mem_39478,
                                                               mem_39529,
                                                               mem_39532,
                                                               np.int64(segment_sizze_nonzzero_40659))
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_31008_var,
                                       ((np.long(num_groups_31055) * np.long(segred_group_sizze_31054)),),
                                       (np.long(segred_group_sizze_31054),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_40680 = sdiv_up64(num_groups_31055,
                                               smax64(np.int64(1), m_27116))
          elements_per_thread_40681 = sdiv_up64(i32_res_27129,
                                                (segred_group_sizze_31054 * groups_per_segment_40680))
          virt_num_groups_40682 = (groups_per_segment_40680 * m_27116)
          num_threads_40683 = (num_groups_31055 * segred_group_sizze_31054)
          threads_per_segment_40684 = (groups_per_segment_40680 * segred_group_sizze_31054)
          group_res_arr_mem_40685 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_31054 * virt_num_groups_40682)),
                                                 "group_res_arr_mem_40685")
          mainDetailedzicounter_mem_40687 = self.mainDetailedzicounter_mem_40687
          if ((1 * (np.long(num_groups_31055) * np.long(segred_group_sizze_31054))) != 0):
            self.mainDetailedzisegred_large_31008_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31054))),
                                                               np.int64(N_27115),
                                                               np.int64(i32_res_27129),
                                                               np.int64(num_groups_31055),
                                                               defunc_4_map_res_mem_39478,
                                                               mem_39529,
                                                               mem_39532,
                                                               np.int64(groups_per_segment_40680),
                                                               np.int64(elements_per_thread_40681),
                                                               np.int64(virt_num_groups_40682),
                                                               np.int64(threads_per_segment_40684),
                                                               group_res_arr_mem_40685,
                                                               mainDetailedzicounter_mem_40687)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_31008_var,
                                       ((np.long(num_groups_31055) * np.long(segred_group_sizze_31054)),),
                                       (np.long(segred_group_sizze_31054),))
            if synchronous:
              sync(self)
        segmap_usable_groups_31071 = sdiv_up64(m_27116,
                                               segmap_group_sizze_31070)
        mem_39535 = opencl_alloc(self, bytes_39458, "mem_39535")
        mem_39537 = opencl_alloc(self, bytes_39458, "mem_39537")
        if ((1 * (np.long(segmap_usable_groups_31071) * np.long(segmap_group_sizze_31070))) != 0):
          self.mainDetailedzisegmap_30985_var.set_args(self.global_failure,
                                                       np.int64(m_27116),
                                                       np.float32(hfrac_27122),
                                                       np.int32(k2p2_27131),
                                                       mem_39529, mem_39532,
                                                       mem_39535, mem_39537)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_30985_var,
                                     ((np.long(segmap_usable_groups_31071) * np.long(segmap_group_sizze_31070)),),
                                     (np.long(segmap_group_sizze_31070),))
          if synchronous:
            sync(self)
        mem_39532 = None
        defunc_3_map_res_mem_39538 = mem_39535
        defunc_3_map_res_mem_39539 = mem_39529
        defunc_3_map_res_mem_39540 = mem_39537
      defunc_3_map_res_mem_39541 = defunc_3_map_res_mem_39538
      defunc_3_map_res_mem_39542 = defunc_3_map_res_mem_39539
      defunc_3_map_res_mem_39543 = defunc_3_map_res_mem_39540
    segred_group_sizze_31091 = self.sizes["mainDetailed.segred_group_size_31090"]
    max_num_groups_40726 = self.sizes["mainDetailed.segred_num_groups_31092"]
    num_groups_31093 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27116,
                                                            segred_group_sizze_31091),
                                                  sext_i32_i64(max_num_groups_40726))))
    mem_39546 = opencl_alloc(self, np.int64(4), "mem_39546")
    mainDetailedzicounter_mem_40727 = self.mainDetailedzicounter_mem_40727
    group_res_arr_mem_40729 = opencl_alloc(self,
                                           (np.int32(4) * (segred_group_sizze_31091 * num_groups_31093)),
                                           "group_res_arr_mem_40729")
    num_threads_40731 = (num_groups_31093 * segred_group_sizze_31091)
    if ((1 * (np.long(num_groups_31093) * np.long(segred_group_sizze_31091))) != 0):
      self.mainDetailedzisegred_nonseg_31098_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31091))),
                                                          cl.LocalMemory(np.long(np.int32(1))),
                                                          np.int64(m_27116),
                                                          np.int64(num_groups_31093),
                                                          defunc_3_map_res_mem_39541,
                                                          mem_39546,
                                                          mainDetailedzicounter_mem_40727,
                                                          group_res_arr_mem_40729,
                                                          np.int64(num_threads_40731))
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegred_nonseg_31098_var,
                                 ((np.long(num_groups_31093) * np.long(segred_group_sizze_31091)),),
                                 (np.long(segred_group_sizze_31091),))
      if synchronous:
        sync(self)
    read_res_41081 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_41081, mem_39546,
                    device_offset=(np.long(np.int64(0)) * 4),
                    is_blocking=synchronous)
    sync(self)
    defunc_2_reduce_comm_res_27485 = read_res_41081[0]
    mem_39546 = None
    i32_res_27490 = sext_i32_i64(defunc_2_reduce_comm_res_27485)
    bounds_invalid_upwards_27491 = slt64(i32_res_27490, np.int64(0))
    valid_27492 = not(bounds_invalid_upwards_27491)
    range_valid_c_27493 = True
    assert valid_27492, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:5:3-18\n   #2  bfastfinal.fut:108:34-46\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:103:17-110:24\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                                                                    i32_res_27490,
                                                                                                                                                                                                                                                                                                                    " is invalid."))
    suff_outer_par_31130 = (self.sizes["mainDetailed.suff_outer_par_31"] <= m_27116)
    segmap_group_sizze_31153 = self.sizes["mainDetailed.segmap_group_size_31134"]
    nest_sizze_31196 = (m_27116 * i32_res_27490)
    segred_group_sizze_31197 = self.sizes["mainDetailed.segred_group_size_31174"]
    max_num_groups_40757 = self.sizes["mainDetailed.segred_num_groups_31176"]
    num_groups_31198 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_31196,
                                                            segred_group_sizze_31197),
                                                  sext_i32_i64(max_num_groups_40757))))
    bytes_39549 = (np.int64(4) * segmap_group_sizze_31153)
    local_memory_capacity_40828 = self.max_local_memory
    if (sle64((bytes_39549 + bytes_39549),
              sext_i32_i64(local_memory_capacity_40828)) and suff_outer_par_31130):
      segmap_usable_groups_31154 = sdiv_up64(m_27116, segmap_group_sizze_31153)
      num_whole_tiles_38433 = squot64(i32_res_27490, segmap_group_sizze_31153)
      residual_input_38532 = srem64(i32_res_27490, segmap_group_sizze_31153)
      cond_38533 = (residual_input_38532 == np.int64(0))
      mem_39572 = opencl_alloc(self, bytes_39458, "mem_39572")
      if ((1 * (np.long(segmap_usable_groups_31154) * np.long(segmap_group_sizze_31153))) != 0):
        self.mainDetailedzisegmap_intragroup_38413_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_39549)),
                                                                cl.LocalMemory(np.long(bytes_39549)),
                                                                np.int64(N_27115),
                                                                np.int64(m_27116),
                                                                np.int64(i32_res_27490),
                                                                np.int64(num_whole_tiles_38433),
                                                                np.int64(residual_input_38532),
                                                                np.byte(cond_38533),
                                                                defunc_4_map_res_mem_39478,
                                                                defunc_3_map_res_mem_39541,
                                                                defunc_3_map_res_mem_39542,
                                                                mem_39572)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_38413_var,
                                   ((np.long(segmap_usable_groups_31154) * np.long(segmap_group_sizze_31153)),),
                                   (np.long(segmap_group_sizze_31153),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_39576 = mem_39572
    else:
      mem_39575 = opencl_alloc(self, bytes_39458, "mem_39575")
      if slt64((i32_res_27490 * np.int64(2)), segred_group_sizze_31197):
        segment_sizze_nonzzero_40768 = smax64(np.int64(1), i32_res_27490)
        num_threads_40769 = (num_groups_31198 * segred_group_sizze_31197)
        if ((1 * (np.long(num_groups_31198) * np.long(segred_group_sizze_31197))) != 0):
          self.mainDetailedzisegred_small_31180_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31197))),
                                                             np.int64(N_27115),
                                                             np.int64(m_27116),
                                                             np.int64(i32_res_27490),
                                                             np.int64(num_groups_31198),
                                                             defunc_4_map_res_mem_39478,
                                                             defunc_3_map_res_mem_39541,
                                                             defunc_3_map_res_mem_39542,
                                                             mem_39575,
                                                             np.int64(segment_sizze_nonzzero_40768))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegred_small_31180_var,
                                     ((np.long(num_groups_31198) * np.long(segred_group_sizze_31197)),),
                                     (np.long(segred_group_sizze_31197),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_40789 = sdiv_up64(num_groups_31198,
                                             smax64(np.int64(1), m_27116))
        elements_per_thread_40790 = sdiv_up64(i32_res_27490,
                                              (segred_group_sizze_31197 * groups_per_segment_40789))
        virt_num_groups_40791 = (groups_per_segment_40789 * m_27116)
        num_threads_40792 = (num_groups_31198 * segred_group_sizze_31197)
        threads_per_segment_40793 = (groups_per_segment_40789 * segred_group_sizze_31197)
        group_res_arr_mem_40794 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_31197 * virt_num_groups_40791)),
                                               "group_res_arr_mem_40794")
        mainDetailedzicounter_mem_40796 = self.mainDetailedzicounter_mem_40796
        if ((1 * (np.long(num_groups_31198) * np.long(segred_group_sizze_31197))) != 0):
          self.mainDetailedzisegred_large_31180_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(np.int32(1))),
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31197))),
                                                             np.int64(N_27115),
                                                             np.int64(i32_res_27490),
                                                             np.int64(num_groups_31198),
                                                             defunc_4_map_res_mem_39478,
                                                             defunc_3_map_res_mem_39541,
                                                             defunc_3_map_res_mem_39542,
                                                             mem_39575,
                                                             np.int64(groups_per_segment_40789),
                                                             np.int64(elements_per_thread_40790),
                                                             np.int64(virt_num_groups_40791),
                                                             np.int64(threads_per_segment_40793),
                                                             group_res_arr_mem_40794,
                                                             mainDetailedzicounter_mem_40796)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegred_large_31180_var,
                                     ((np.long(num_groups_31198) * np.long(segred_group_sizze_31197)),),
                                     (np.long(segred_group_sizze_31197),))
          if synchronous:
            sync(self)
      defunc_0_f_res_mem_39576 = mem_39575
    iota32_arg_27515 = (N_27115 - i32_res_27129)
    bounds_invalid_upwards_27516 = slt64(iota32_arg_27515, np.int64(0))
    valid_27517 = not(bounds_invalid_upwards_27516)
    range_valid_c_27518 = True
    assert valid_27517, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:116:22-35\n   #3  bfastfinal.fut:175:3-56\n   #4  bfastfinal.fut:171:1-175:56\n" % ("Range ",
                                                                                                                                                                                                                                      np.int64(0),
                                                                                                                                                                                                                                      "..",
                                                                                                                                                                                                                                      np.int64(1),
                                                                                                                                                                                                                                      "..<",
                                                                                                                                                                                                                                      iota32_arg_27515,
                                                                                                                                                                                                                                      " is invalid."))
    x_27520 = (np.int32(1) + n_27120)
    i_27521 = (n_27120 - np.int32(1))
    i_27522 = sext_i32_i64(i_27521)
    x_27523 = sle64(np.int64(0), i_27522)
    y_27524 = slt64(i_27522, N_27115)
    bounds_check_27525 = (x_27523 and y_27524)
    index_certs_27526 = True
    assert bounds_check_27525, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:114:64-84\n   #1  bfastfinal.fut:112:15-116:36\n   #2  bfastfinal.fut:175:3-56\n   #3  bfastfinal.fut:171:1-175:56\n" % ("Index [",
                                                                                                                                                                                                                 i_27522,
                                                                                                                                                                                                                 "] out of bounds for array of shape [",
                                                                                                                                                                                                                 N_27115,
                                                                                                                                                                                                                 "]."))
    read_res_41083 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_41083, mappingindices_mem_38681,
                    device_offset=(np.long(i_27522) * 4),
                    is_blocking=synchronous)
    sync(self)
    r32_arg_27527 = read_res_41083[0]
    i32_res_27528 = sitofp_i32_f32(r32_arg_27527)
    range_valid_c_27529 = True
    assert valid_27517, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:128:29-44\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                                                                  iota32_arg_27515,
                                                                                                                                                                                                                                                                                                                  " is invalid."))
    segmap_group_sizze_31275 = self.sizes["mainDetailed.segmap_group_size_31258"]
    segmap_usable_groups_31276 = sdiv_up64(iota32_arg_27515,
                                           segmap_group_sizze_31275)
    bytes_39578 = (np.int64(4) * iota32_arg_27515)
    mem_39579 = opencl_alloc(self, bytes_39578, "mem_39579")
    mem_39581 = opencl_alloc(self, bytes_39578, "mem_39581")
    if ((1 * (np.long(segmap_usable_groups_31276) * np.long(segmap_group_sizze_31275))) != 0):
      self.mainDetailedzisegmap_31256_var.set_args(self.global_failure,
                                                   np.float32(lam_27123),
                                                   np.int64(iota32_arg_27515),
                                                   np.int32(x_27520),
                                                   np.float32(i32_res_27528),
                                                   mappingindices_mem_38681,
                                                   mem_39579, mem_39581)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_31256_var,
                                 ((np.long(segmap_usable_groups_31276) * np.long(segmap_group_sizze_31275)),),
                                 (np.long(segmap_group_sizze_31275),))
      if synchronous:
        sync(self)
    mem_39579 = None
    max_res_27545 = smax64(np.int64(1), iota32_arg_27515)
    bounds_invalid_upwards_27546 = slt64(max_res_27545, np.int64(1))
    distance_27547 = (max_res_27545 - np.int64(1))
    valid_27548 = not(bounds_invalid_upwards_27546)
    range_valid_c_27549 = True
    assert valid_27548, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:16:30-45\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:143:29-149:54\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:121:50-165:9\n   #5  bfastfinal.fut:175:3-56\n   #6  bfastfinal.fut:171:1-175:56\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                                                              np.int64(1),
                                                                                                                                                                                                                                                                                                                                                              "..<",
                                                                                                                                                                                                                                                                                                                                                              max_res_27545,
                                                                                                                                                                                                                                                                                                                                                              " is invalid."))
    fits_31764 = sle64(iota32_arg_27515, max_group_sizze_29481)
    suff_intra_par_31762 = (self.sizes["mainDetailed.suff_intra_par_34"] <= iota32_arg_27515)
    intra_suff_and_fits_31765 = (suff_intra_par_31762 and fits_31764)
    segmap_group_sizze_32394 = self.sizes["mainDetailed.segmap_group_size_32374"]
    max_num_groups_40834 = self.sizes["mainDetailed.segmap_num_groups_32376"]
    num_groups_32395 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27116,
                                                            segmap_group_sizze_32394),
                                                  sext_i32_i64(max_num_groups_40834))))
    nest_sizze_32416 = (m_27116 * iota32_arg_27515)
    segscan_group_sizze_32417 = self.sizes["mainDetailed.segscan_group_size_32333"]
    max_num_groups_40835 = self.sizes["mainDetailed.segscan_num_groups_32335"]
    num_groups_32418 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_32416,
                                                            segscan_group_sizze_32417),
                                                  sext_i32_i64(max_num_groups_40835))))
    segred_group_sizze_32455 = self.sizes["mainDetailed.segred_group_size_32279"]
    max_num_groups_40836 = self.sizes["mainDetailed.segred_num_groups_32281"]
    num_groups_32456 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_32416,
                                                            segred_group_sizze_32455),
                                                  sext_i32_i64(max_num_groups_40836))))
    segmap_group_sizze_32495 = self.sizes["mainDetailed.segmap_group_size_32253"]
    segmap_group_sizze_32518 = self.sizes["mainDetailed.segmap_group_size_32236"]
    segmap_group_sizze_32536 = self.sizes["mainDetailed.segmap_group_size_32178"]
    segmap_group_sizze_32565 = self.sizes["mainDetailed.segmap_group_size_32039"]
    bytes_39582 = (np.int64(4) * nest_sizze_32416)
    mem_39584 = opencl_alloc(self, bytes_39582, "mem_39584")
    self.futhark_builtinzhreplicate_f32(mem_39584, (m_27116 * iota32_arg_27515),
                                        np.nan)
    segmap_group_sizze_32680 = self.sizes["mainDetailed.segmap_group_size_31987"]
    local_memory_capacity_41058 = self.max_local_memory
    if (sle64((((((((bytes_39578 + bytes_39578) + (np.int32(1) * iota32_arg_27515)) + (np.int32(4) * iota32_arg_27515)) + (np.int32(4) * iota32_arg_27515)) + bytes_39578) + bytes_39578) + bytes_39578),
              sext_i32_i64(local_memory_capacity_41058)) and intra_suff_and_fits_31765):
      mem_39624 = opencl_alloc(self, bytes_39582, "mem_39624")
      mem_39627 = opencl_alloc(self, bytes_39582, "mem_39627")
      mem_39629 = opencl_alloc(self, bytes_39458, "mem_39629")
      mem_39631 = opencl_alloc(self, bytes_39458, "mem_39631")
      mem_39633 = opencl_alloc(self, bytes_39458, "mem_39633")
      if ((1 * (np.long(m_27116) * np.long(iota32_arg_27515))) != 0):
        self.mainDetailedzisegmap_intragroup_31325_var.set_args(self.global_failure,
                                                                self.failure_is_an_option,
                                                                self.global_failure_args,
                                                                cl.LocalMemory(np.long(bytes_39578)),
                                                                cl.LocalMemory(np.long(bytes_39578)),
                                                                cl.LocalMemory(np.long(bytes_39578)),
                                                                cl.LocalMemory(np.long((np.int32(4) * iota32_arg_27515))),
                                                                cl.LocalMemory(np.long((np.int32(4) * iota32_arg_27515))),
                                                                cl.LocalMemory(np.long((np.int32(1) * iota32_arg_27515))),
                                                                cl.LocalMemory(np.long(bytes_39578)),
                                                                cl.LocalMemory(np.long(bytes_39578)),
                                                                np.int64(N_27115),
                                                                np.int32(n_27120),
                                                                np.int64(iota32_arg_27515),
                                                                np.int64(distance_27547),
                                                                defunc_4_map_res_mem_39477,
                                                                defunc_4_map_res_mem_39478,
                                                                defunc_4_map_res_mem_39479,
                                                                defunc_3_map_res_mem_39541,
                                                                defunc_3_map_res_mem_39542,
                                                                defunc_3_map_res_mem_39543,
                                                                defunc_0_f_res_mem_39576,
                                                                mem_39581,
                                                                mem_39624,
                                                                mem_39627,
                                                                mem_39629,
                                                                mem_39631,
                                                                mem_39633)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_31325_var,
                                   ((np.long(m_27116) * np.long(iota32_arg_27515)),),
                                   (np.long(iota32_arg_27515),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      defunc_0_f_res_mem_39702 = mem_39624
      defunc_0_f_res_mem_39703 = mem_39627
      defunc_0_f_res_mem_39704 = mem_39629
      defunc_0_f_res_mem_39705 = mem_39631
      defunc_0_f_res_mem_39706 = mem_39633
    else:
      mem_39636 = opencl_alloc(self, bytes_39458, "mem_39636")
      mem_39638 = opencl_alloc(self, bytes_39458, "mem_39638")
      if ((1 * (np.long(num_groups_32395) * np.long(segmap_group_sizze_32394))) != 0):
        self.mainDetailedzisegmap_32372_var.set_args(self.global_failure,
                                                     np.int64(m_27116),
                                                     np.int64(num_groups_32395),
                                                     defunc_4_map_res_mem_39477,
                                                     defunc_3_map_res_mem_39542,
                                                     defunc_3_map_res_mem_39543,
                                                     mem_39636, mem_39638)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_32372_var,
                                   ((np.long(num_groups_32395) * np.long(segmap_group_sizze_32394)),),
                                   (np.long(segmap_group_sizze_32394),))
        if synchronous:
          sync(self)
      mem_39642 = opencl_alloc(self, bytes_39582, "mem_39642")
      if slt64(np.int64(0), (m_27116 * iota32_arg_27515)):
        stage1_max_num_groups_40874 = self.max_group_size
        stage1_num_groups_40875 = smin64(stage1_max_num_groups_40874,
                                         num_groups_32418)
        num_threads_40876 = sext_i64_i32((stage1_num_groups_40875 * segscan_group_sizze_32417))
        if ((1 * (np.long(stage1_num_groups_40875) * np.long(segscan_group_sizze_32417))) != 0):
          self.mainDetailedziscan_stage1_32339_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                          (np.int32(4) * segscan_group_sizze_32417)))),
                                                            np.int64(N_27115),
                                                            np.int64(m_27116),
                                                            np.int64(iota32_arg_27515),
                                                            defunc_4_map_res_mem_39478,
                                                            defunc_3_map_res_mem_39541,
                                                            defunc_3_map_res_mem_39542,
                                                            defunc_0_f_res_mem_39576,
                                                            mem_39638,
                                                            mem_39642,
                                                            np.int32(num_threads_40876))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage1_32339_var,
                                     ((np.long(stage1_num_groups_40875) * np.long(segscan_group_sizze_32417)),),
                                     (np.long(segscan_group_sizze_32417),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_40875))) != 0):
          self.mainDetailedziscan_stage2_32339_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                          (np.int32(4) * stage1_num_groups_40875)))),
                                                            np.int64(m_27116),
                                                            np.int64(iota32_arg_27515),
                                                            mem_39642,
                                                            np.int64(stage1_num_groups_40875),
                                                            np.int32(num_threads_40876))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage2_32339_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_40875)),),
                                     (np.long(stage1_num_groups_40875),))
          if synchronous:
            sync(self)
        required_groups_40918 = sext_i64_i32(sdiv_up64((m_27116 * iota32_arg_27515),
                                                       segscan_group_sizze_32417))
        if ((1 * (np.long(num_groups_32418) * np.long(segscan_group_sizze_32417))) != 0):
          self.mainDetailedziscan_stage3_32339_var.set_args(self.global_failure,
                                                            np.int64(m_27116),
                                                            np.int64(iota32_arg_27515),
                                                            np.int64(num_groups_32418),
                                                            mem_39642,
                                                            np.int32(num_threads_40876),
                                                            np.int32(required_groups_40918))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage3_32339_var,
                                     ((np.long(num_groups_32418) * np.long(segscan_group_sizze_32417)),),
                                     (np.long(segscan_group_sizze_32417),))
          if synchronous:
            sync(self)
      mem_39645 = opencl_alloc(self, m_27116, "mem_39645")
      mem_39647 = opencl_alloc(self, bytes_39458, "mem_39647")
      mem_39649 = opencl_alloc(self, bytes_39458, "mem_39649")
      mem_39652 = opencl_alloc(self, bytes_39582, "mem_39652")
      if slt64((iota32_arg_27515 * np.int64(2)), segred_group_sizze_32455):
        segment_sizze_nonzzero_40930 = smax64(np.int64(1), iota32_arg_27515)
        num_threads_40931 = (num_groups_32456 * segred_group_sizze_32455)
        if ((1 * (np.long(num_groups_32456) * np.long(segred_group_sizze_32455))) != 0):
          self.mainDetailedzisegred_small_32285_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32455))),
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32455))),
                                                             cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_32455))),
                                                             np.int64(m_27116),
                                                             np.int64(iota32_arg_27515),
                                                             np.int64(num_groups_32456),
                                                             mem_39581,
                                                             mem_39636,
                                                             mem_39638,
                                                             mem_39642,
                                                             mem_39645,
                                                             mem_39647,
                                                             mem_39649,
                                                             mem_39652,
                                                             np.int64(segment_sizze_nonzzero_40930))
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegred_small_32285_var,
                                     ((np.long(num_groups_32456) * np.long(segred_group_sizze_32455)),),
                                     (np.long(segred_group_sizze_32455),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_40966 = sdiv_up64(num_groups_32456,
                                             smax64(np.int64(1), m_27116))
        elements_per_thread_40967 = sdiv_up64(iota32_arg_27515,
                                              (segred_group_sizze_32455 * groups_per_segment_40966))
        virt_num_groups_40968 = (groups_per_segment_40966 * m_27116)
        num_threads_40969 = (num_groups_32456 * segred_group_sizze_32455)
        threads_per_segment_40970 = (groups_per_segment_40966 * segred_group_sizze_32455)
        group_res_arr_mem_40971 = opencl_alloc(self,
                                               (np.int32(1) * (segred_group_sizze_32455 * virt_num_groups_40968)),
                                               "group_res_arr_mem_40971")
        group_res_arr_mem_40973 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_32455 * virt_num_groups_40968)),
                                               "group_res_arr_mem_40973")
        group_res_arr_mem_40975 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_32455 * virt_num_groups_40968)),
                                               "group_res_arr_mem_40975")
        mainDetailedzicounter_mem_40977 = self.mainDetailedzicounter_mem_40977
        if ((1 * (np.long(num_groups_32456) * np.long(segred_group_sizze_32455))) != 0):
          self.mainDetailedzisegred_large_32285_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(np.int32(1))),
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32455))),
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32455))),
                                                             cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_32455))),
                                                             np.int64(iota32_arg_27515),
                                                             np.int64(num_groups_32456),
                                                             mem_39581,
                                                             mem_39636,
                                                             mem_39638,
                                                             mem_39642,
                                                             mem_39645,
                                                             mem_39647,
                                                             mem_39649,
                                                             mem_39652,
                                                             np.int64(groups_per_segment_40966),
                                                             np.int64(elements_per_thread_40967),
                                                             np.int64(virt_num_groups_40968),
                                                             group_res_arr_mem_40971,
                                                             group_res_arr_mem_40973,
                                                             group_res_arr_mem_40975,
                                                             mainDetailedzicounter_mem_40977)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegred_large_32285_var,
                                     ((np.long(num_groups_32456) * np.long(segred_group_sizze_32455)),),
                                     (np.long(segred_group_sizze_32455),))
          if synchronous:
            sync(self)
      mem_39636 = None
      mem_39642 = None
      segmap_usable_groups_32496 = sdiv_up64(m_27116, segmap_group_sizze_32495)
      mem_39655 = opencl_alloc(self, m_27116, "mem_39655")
      mem_39657 = opencl_alloc(self, bytes_39458, "mem_39657")
      if ((1 * (np.long(segmap_usable_groups_32496) * np.long(segmap_group_sizze_32495))) != 0):
        self.mainDetailedzisegmap_32251_var.set_args(self.global_failure,
                                                     np.int64(m_27116),
                                                     mem_39645, mem_39647,
                                                     mem_39655, mem_39657)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_32251_var,
                                   ((np.long(segmap_usable_groups_32496) * np.long(segmap_group_sizze_32495)),),
                                   (np.long(segmap_group_sizze_32495),))
        if synchronous:
          sync(self)
      mem_39645 = None
      mem_39647 = None
      segmap_usable_groups_32519 = sdiv_up64(m_27116, segmap_group_sizze_32518)
      mem_39660 = opencl_alloc(self, bytes_39458, "mem_39660")
      if ((1 * (np.long(segmap_usable_groups_32519) * np.long(segmap_group_sizze_32518))) != 0):
        self.mainDetailedzisegmap_32234_var.set_args(self.global_failure,
                                                     np.int64(m_27116),
                                                     mem_39638, mem_39649,
                                                     mem_39660)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_32234_var,
                                   ((np.long(segmap_usable_groups_32519) * np.long(segmap_group_sizze_32518)),),
                                   (np.long(segmap_group_sizze_32518),))
        if synchronous:
          sync(self)
      mem_39649 = None
      segmap_usable_groups_32537 = sdiv_up64(nest_sizze_32416,
                                             segmap_group_sizze_32536)
      mem_39664 = opencl_alloc(self, bytes_39582, "mem_39664")
      if ((1 * (np.long(segmap_usable_groups_32537) * np.long(segmap_group_sizze_32536))) != 0):
        self.mainDetailedzisegmap_32175_var.set_args(self.global_failure,
                                                     self.failure_is_an_option,
                                                     self.global_failure_args,
                                                     np.int64(N_27115),
                                                     np.int64(m_27116),
                                                     np.int64(iota32_arg_27515),
                                                     defunc_4_map_res_mem_39478,
                                                     defunc_3_map_res_mem_39542,
                                                     mem_39638, mem_39664)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_32175_var,
                                   ((np.long(segmap_usable_groups_32537) * np.long(segmap_group_sizze_32536)),),
                                   (np.long(segmap_group_sizze_32536),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      segmap_usable_groups_32566 = sdiv_up64(m_27116, segmap_group_sizze_32565)
      mem_39667 = opencl_alloc(self, bytes_39582, "mem_39667")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_39667, np.int64(0),
                                                  mem_39664, np.int64(0),
                                                  np.int64(1), iota32_arg_27515,
                                                  m_27116)
      mem_39664 = None
      mem_39698 = opencl_alloc(self, bytes_39458, "mem_39698")
      mem_39700 = opencl_alloc(self, bytes_39458, "mem_39700")
      num_threads_39832 = (segmap_group_sizze_32565 * segmap_usable_groups_32566)
      total_sizze_39833 = (bytes_39578 * num_threads_39832)
      mem_39678 = opencl_alloc(self, total_sizze_39833, "mem_39678")
      if ((1 * (np.long(segmap_usable_groups_32566) * np.long(segmap_group_sizze_32565))) != 0):
        self.mainDetailedzisegmap_32037_var.set_args(self.global_failure,
                                                     self.failure_is_an_option,
                                                     self.global_failure_args,
                                                     np.int64(N_27115),
                                                     np.int64(m_27116),
                                                     np.int32(n_27120),
                                                     np.int64(iota32_arg_27515),
                                                     np.int64(distance_27547),
                                                     np.int64(segmap_usable_groups_32566),
                                                     defunc_4_map_res_mem_39477,
                                                     defunc_4_map_res_mem_39479,
                                                     defunc_3_map_res_mem_39542,
                                                     mem_39638, mem_39655,
                                                     mem_39657, mem_39667,
                                                     mem_39678, mem_39698,
                                                     mem_39700)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_32037_var,
                                   ((np.long(segmap_usable_groups_32566) * np.long(segmap_group_sizze_32565)),),
                                   (np.long(segmap_group_sizze_32565),))
        if synchronous:
          sync(self)
      self.failure_is_an_option = np.int32(1)
      mem_39655 = None
      mem_39657 = None
      mem_39667 = None
      mem_39678 = None
      segmap_usable_groups_32681 = sdiv_up64(nest_sizze_32416,
                                             segmap_group_sizze_32680)
      if ((1 * (np.long(segmap_usable_groups_32681) * np.long(segmap_group_sizze_32680))) != 0):
        self.mainDetailedzisegmap_31984_var.set_args(self.global_failure,
                                                     np.int64(N_27115),
                                                     np.int64(m_27116),
                                                     np.int32(n_27120),
                                                     np.int64(iota32_arg_27515),
                                                     defunc_4_map_res_mem_39479,
                                                     defunc_3_map_res_mem_39542,
                                                     mem_39584, mem_39638,
                                                     mem_39652)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31984_var,
                                   ((np.long(segmap_usable_groups_32681) * np.long(segmap_group_sizze_32680)),),
                                   (np.long(segmap_group_sizze_32680),))
        if synchronous:
          sync(self)
      mem_39638 = None
      defunc_0_f_res_mem_39702 = mem_39584
      defunc_0_f_res_mem_39703 = mem_39652
      defunc_0_f_res_mem_39704 = mem_39698
      defunc_0_f_res_mem_39705 = mem_39660
      defunc_0_f_res_mem_39706 = mem_39700
    defunc_4_map_res_mem_39479 = None
    defunc_3_map_res_mem_39541 = None
    mem_39584 = None
    out_arrsizze_39885 = m_27116
    out_arrsizze_39887 = m_27116
    out_arrsizze_39889 = m_27116
    out_arrsizze_39891 = m_27116
    out_arrsizze_39893 = m_27116
    out_arrsizze_39894 = iota32_arg_27515
    out_arrsizze_39896 = m_27116
    out_arrsizze_39897 = iota32_arg_27515
    out_arrsizze_39899 = iota32_arg_27515
    out_arrsizze_39901 = m_27116
    out_arrsizze_39903 = m_27116
    out_arrsizze_39905 = m_27116
    out_arrsizze_39907 = m_27116
    out_arrsizze_39908 = N_27115
    out_arrsizze_39910 = m_27116
    out_arrsizze_39911 = N_27115
    out_mem_39884 = defunc_0_f_res_mem_39576
    out_mem_39886 = defunc_4_map_res_mem_39477
    out_mem_39888 = defunc_3_map_res_mem_39542
    out_mem_39890 = defunc_3_map_res_mem_39543
    out_mem_39892 = defunc_0_f_res_mem_39702
    out_mem_39895 = defunc_0_f_res_mem_39703
    out_mem_39898 = mem_39581
    out_mem_39900 = defunc_0_f_res_mem_39704
    out_mem_39902 = defunc_0_f_res_mem_39705
    out_mem_39904 = defunc_0_f_res_mem_39706
    out_mem_39906 = defunc_4_map_res_mem_39478
    out_mem_39909 = defunc_3_map_res_mem_39440
    return (out_mem_39884, out_arrsizze_39885, out_mem_39886,
            out_arrsizze_39887, out_mem_39888, out_arrsizze_39889,
            out_mem_39890, out_arrsizze_39891, out_mem_39892,
            out_arrsizze_39893, out_arrsizze_39894, out_mem_39895,
            out_arrsizze_39896, out_arrsizze_39897, out_mem_39898,
            out_arrsizze_39899, out_mem_39900, out_arrsizze_39901,
            out_mem_39902, out_arrsizze_39903, out_mem_39904,
            out_arrsizze_39905, out_mem_39906, out_arrsizze_39907,
            out_arrsizze_39908, out_mem_39909, out_arrsizze_39910,
            out_arrsizze_39911)
  def futhark_remove_nans(self, images_mem_38681, m_27101, n_27102, p_27103,
                          nan_value_27104):
    y_28574 = (n_27102 * p_27103)
    nest_sizze_28575 = (m_27101 * y_28574)
    segmap_group_sizze_28576 = self.sizes["remove_nans.segmap_group_size_28519"]
    segmap_usable_groups_28577 = sdiv_up64(nest_sizze_28575,
                                           segmap_group_sizze_28576)
    binop_x_38684 = (m_27101 * n_27102)
    binop_x_38685 = (p_27103 * binop_x_38684)
    bytes_38683 = (np.int64(4) * binop_x_38685)
    mem_38686 = opencl_alloc(self, bytes_38683, "mem_38686")
    if ((1 * (np.long(segmap_usable_groups_28577) * np.long(segmap_group_sizze_28576))) != 0):
      self.remove_nanszisegmap_28515_var.set_args(self.global_failure,
                                                  np.int64(m_27101),
                                                  np.int64(n_27102),
                                                  np.int64(p_27103),
                                                  np.int16(nan_value_27104),
                                                  images_mem_38681, mem_38686)
      cl.enqueue_nd_range_kernel(self.queue, self.remove_nanszisegmap_28515_var,
                                 ((np.long(segmap_usable_groups_28577) * np.long(segmap_group_sizze_28576)),),
                                 (np.long(segmap_group_sizze_28576),))
      if synchronous:
        sync(self)
    out_arrsizze_39885 = m_27101
    out_arrsizze_39886 = n_27102
    out_arrsizze_39887 = p_27103
    out_mem_39884 = mem_38686
    return (out_mem_39884, out_arrsizze_39885, out_arrsizze_39886,
            out_arrsizze_39887)
  def futhark_reshapeTransp(self, images_mem_38681, m_27094, n_27095, p_27096):
    flatten_to_arg_27098 = (n_27095 * p_27096)
    binop_x_38683 = (m_27094 * flatten_to_arg_27098)
    bytes_38682 = (np.int64(4) * binop_x_38683)
    mem_38684 = opencl_alloc(self, bytes_38682, "mem_38684")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_38684, np.int64(0),
                                                images_mem_38681, np.int64(0),
                                                np.int64(1),
                                                flatten_to_arg_27098, m_27094)
    out_arrsizze_39885 = flatten_to_arg_27098
    out_arrsizze_39886 = m_27094
    out_mem_39884 = mem_38684
    return (out_mem_39884, out_arrsizze_39885, out_arrsizze_39886)
  def main(self, trend_27811_ext, k_27812_ext, n_27813_ext, freq_27814_ext,
           hfrac_27815_ext, lam_27816_ext, mappingindices_mem_38681_ext,
           images_mem_38682_ext):
    try:
      trend_27811 = np.int32(ct.c_int32(trend_27811_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(trend_27811_ext),
                                                                                                                            trend_27811_ext))
    try:
      k_27812 = np.int32(ct.c_int32(k_27812_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(k_27812_ext),
                                                                                                                            k_27812_ext))
    try:
      n_27813 = np.int32(ct.c_int32(n_27813_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(n_27813_ext),
                                                                                                                            n_27813_ext))
    try:
      freq_27814 = np.float32(ct.c_float(freq_27814_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(freq_27814_ext),
                                                                                                                            freq_27814_ext))
    try:
      hfrac_27815 = np.float32(ct.c_float(hfrac_27815_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(hfrac_27815_ext),
                                                                                                                            hfrac_27815_ext))
    try:
      lam_27816 = np.float32(ct.c_float(lam_27816_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #5 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(lam_27816_ext),
                                                                                                                            lam_27816_ext))
    try:
      assert ((type(mappingindices_mem_38681_ext) in [np.ndarray,
                                                      cl.array.Array]) and (mappingindices_mem_38681_ext.dtype == np.int32)), "Parameter has unexpected type"
      N_27808 = np.int64(mappingindices_mem_38681_ext.shape[0])
      if (type(mappingindices_mem_38681_ext) == cl.array.Array):
        mappingindices_mem_38681 = mappingindices_mem_38681_ext.data
      else:
        mappingindices_mem_38681 = opencl_alloc(self,
                                                np.int64(mappingindices_mem_38681_ext.nbytes),
                                                "mappingindices_mem_38681")
        if (np.int64(mappingindices_mem_38681_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, mappingindices_mem_38681,
                          normaliseArray(mappingindices_mem_38681_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #6 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[]i32",
                                                                                                                            type(mappingindices_mem_38681_ext),
                                                                                                                            mappingindices_mem_38681_ext))
    try:
      assert ((type(images_mem_38682_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_38682_ext.dtype == np.float32)), "Parameter has unexpected type"
      m_27809 = np.int64(images_mem_38682_ext.shape[0])
      N_27810 = np.int64(images_mem_38682_ext.shape[1])
      if (type(images_mem_38682_ext) == cl.array.Array):
        images_mem_38682 = images_mem_38682_ext.data
      else:
        images_mem_38682 = opencl_alloc(self,
                                        np.int64(images_mem_38682_ext.nbytes),
                                        "images_mem_38682")
        if (np.int64(images_mem_38682_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_38682,
                          normaliseArray(images_mem_38682_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #7 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][]f32",
                                                                                                                            type(images_mem_38682_ext),
                                                                                                                            images_mem_38682_ext))
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_39884, out_arrsizze_39885, out_mem_39886, out_arrsizze_39887,
       out_mem_39888,
       out_arrsizze_39889) = self.futhark_main(mappingindices_mem_38681,
                                               images_mem_38682, N_27808,
                                               m_27809, N_27810, trend_27811,
                                               k_27812, n_27813, freq_27814,
                                               hfrac_27815, lam_27816)
    sync(self)
    return (cl.array.Array(self.queue, (out_arrsizze_39885,), ct.c_int32,
                           data=out_mem_39884), cl.array.Array(self.queue,
                                                               (out_arrsizze_39887,),
                                                               ct.c_float,
                                                               data=out_mem_39886),
            cl.array.Array(self.queue, (out_arrsizze_39889,), ct.c_float,
                           data=out_mem_39888))
  def mainDetailed(self, trend_27118_ext, k_27119_ext, n_27120_ext,
                   freq_27121_ext, hfrac_27122_ext, lam_27123_ext,
                   mappingindices_mem_38681_ext, images_mem_38682_ext):
    try:
      trend_27118 = np.int32(ct.c_int32(trend_27118_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(trend_27118_ext),
                                                                                                                            trend_27118_ext))
    try:
      k_27119 = np.int32(ct.c_int32(k_27119_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(k_27119_ext),
                                                                                                                            k_27119_ext))
    try:
      n_27120 = np.int32(ct.c_int32(n_27120_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(n_27120_ext),
                                                                                                                            n_27120_ext))
    try:
      freq_27121 = np.float32(ct.c_float(freq_27121_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(freq_27121_ext),
                                                                                                                            freq_27121_ext))
    try:
      hfrac_27122 = np.float32(ct.c_float(hfrac_27122_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(hfrac_27122_ext),
                                                                                                                            hfrac_27122_ext))
    try:
      lam_27123 = np.float32(ct.c_float(lam_27123_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #5 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(lam_27123_ext),
                                                                                                                            lam_27123_ext))
    try:
      assert ((type(mappingindices_mem_38681_ext) in [np.ndarray,
                                                      cl.array.Array]) and (mappingindices_mem_38681_ext.dtype == np.int32)), "Parameter has unexpected type"
      N_27115 = np.int64(mappingindices_mem_38681_ext.shape[0])
      if (type(mappingindices_mem_38681_ext) == cl.array.Array):
        mappingindices_mem_38681 = mappingindices_mem_38681_ext.data
      else:
        mappingindices_mem_38681 = opencl_alloc(self,
                                                np.int64(mappingindices_mem_38681_ext.nbytes),
                                                "mappingindices_mem_38681")
        if (np.int64(mappingindices_mem_38681_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, mappingindices_mem_38681,
                          normaliseArray(mappingindices_mem_38681_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #6 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[]i32",
                                                                                                                            type(mappingindices_mem_38681_ext),
                                                                                                                            mappingindices_mem_38681_ext))
    try:
      assert ((type(images_mem_38682_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_38682_ext.dtype == np.float32)), "Parameter has unexpected type"
      m_27116 = np.int64(images_mem_38682_ext.shape[0])
      N_27117 = np.int64(images_mem_38682_ext.shape[1])
      if (type(images_mem_38682_ext) == cl.array.Array):
        images_mem_38682 = images_mem_38682_ext.data
      else:
        images_mem_38682 = opencl_alloc(self,
                                        np.int64(images_mem_38682_ext.nbytes),
                                        "images_mem_38682")
        if (np.int64(images_mem_38682_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_38682,
                          normaliseArray(images_mem_38682_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #7 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][]f32",
                                                                                                                            type(images_mem_38682_ext),
                                                                                                                            images_mem_38682_ext))
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_39884, out_arrsizze_39885, out_mem_39886, out_arrsizze_39887,
       out_mem_39888, out_arrsizze_39889, out_mem_39890, out_arrsizze_39891,
       out_mem_39892, out_arrsizze_39893, out_arrsizze_39894, out_mem_39895,
       out_arrsizze_39896, out_arrsizze_39897, out_mem_39898,
       out_arrsizze_39899, out_mem_39900, out_arrsizze_39901, out_mem_39902,
       out_arrsizze_39903, out_mem_39904, out_arrsizze_39905, out_mem_39906,
       out_arrsizze_39907, out_arrsizze_39908, out_mem_39909,
       out_arrsizze_39910,
       out_arrsizze_39911) = self.futhark_mainDetailed(mappingindices_mem_38681,
                                                       images_mem_38682,
                                                       N_27115, m_27116,
                                                       N_27117, trend_27118,
                                                       k_27119, n_27120,
                                                       freq_27121, hfrac_27122,
                                                       lam_27123)
    sync(self)
    return (cl.array.Array(self.queue, (out_arrsizze_39885,), ct.c_float,
                           data=out_mem_39884), cl.array.Array(self.queue,
                                                               (out_arrsizze_39887,),
                                                               ct.c_int32,
                                                               data=out_mem_39886),
            cl.array.Array(self.queue, (out_arrsizze_39889,), ct.c_int32,
                           data=out_mem_39888), cl.array.Array(self.queue,
                                                               (out_arrsizze_39891,),
                                                               ct.c_float,
                                                               data=out_mem_39890),
            cl.array.Array(self.queue, (out_arrsizze_39893, out_arrsizze_39894),
                           ct.c_float, data=out_mem_39892),
            cl.array.Array(self.queue, (out_arrsizze_39896, out_arrsizze_39897),
                           ct.c_float, data=out_mem_39895),
            cl.array.Array(self.queue, (out_arrsizze_39899,), ct.c_float,
                           data=out_mem_39898), cl.array.Array(self.queue,
                                                               (out_arrsizze_39901,),
                                                               ct.c_int32,
                                                               data=out_mem_39900),
            cl.array.Array(self.queue, (out_arrsizze_39903,), ct.c_float,
                           data=out_mem_39902), cl.array.Array(self.queue,
                                                               (out_arrsizze_39905,),
                                                               ct.c_float,
                                                               data=out_mem_39904),
            cl.array.Array(self.queue, (out_arrsizze_39907, out_arrsizze_39908),
                           ct.c_float, data=out_mem_39906),
            cl.array.Array(self.queue, (out_arrsizze_39910, out_arrsizze_39911),
                           ct.c_float, data=out_mem_39909))
  def remove_nans(self, nan_value_27104_ext, images_mem_38681_ext):
    try:
      nan_value_27104 = np.int16(ct.c_int16(nan_value_27104_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i16",
                                                                                                                            type(nan_value_27104_ext),
                                                                                                                            nan_value_27104_ext))
    try:
      assert ((type(images_mem_38681_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_38681_ext.dtype == np.int16)), "Parameter has unexpected type"
      m_27101 = np.int64(images_mem_38681_ext.shape[0])
      n_27102 = np.int64(images_mem_38681_ext.shape[1])
      p_27103 = np.int64(images_mem_38681_ext.shape[2])
      if (type(images_mem_38681_ext) == cl.array.Array):
        images_mem_38681 = images_mem_38681_ext.data
      else:
        images_mem_38681 = opencl_alloc(self,
                                        np.int64(images_mem_38681_ext.nbytes),
                                        "images_mem_38681")
        if (np.int64(images_mem_38681_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_38681,
                          normaliseArray(images_mem_38681_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][][]i16",
                                                                                                                            type(images_mem_38681_ext),
                                                                                                                            images_mem_38681_ext))
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_39884, out_arrsizze_39885, out_arrsizze_39886,
       out_arrsizze_39887) = self.futhark_remove_nans(images_mem_38681, m_27101,
                                                      n_27102, p_27103,
                                                      nan_value_27104)
    sync(self)
    return cl.array.Array(self.queue, (out_arrsizze_39885, out_arrsizze_39886,
                                       out_arrsizze_39887), ct.c_float,
                          data=out_mem_39884)
  def reshapeTransp(self, images_mem_38681_ext):
    try:
      assert ((type(images_mem_38681_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_38681_ext.dtype == np.float32)), "Parameter has unexpected type"
      m_27094 = np.int64(images_mem_38681_ext.shape[0])
      n_27095 = np.int64(images_mem_38681_ext.shape[1])
      p_27096 = np.int64(images_mem_38681_ext.shape[2])
      if (type(images_mem_38681_ext) == cl.array.Array):
        images_mem_38681 = images_mem_38681_ext.data
      else:
        images_mem_38681 = opencl_alloc(self,
                                        np.int64(images_mem_38681_ext.nbytes),
                                        "images_mem_38681")
        if (np.int64(images_mem_38681_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_38681,
                          normaliseArray(images_mem_38681_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][][]f32",
                                                                                                                            type(images_mem_38681_ext),
                                                                                                                            images_mem_38681_ext))
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_39884, out_arrsizze_39885,
       out_arrsizze_39886) = self.futhark_reshapeTransp(images_mem_38681,
                                                        m_27094, n_27095,
                                                        p_27096)
    sync(self)
    return cl.array.Array(self.queue, (out_arrsizze_39885, out_arrsizze_39886),
                          ct.c_float, data=out_mem_39884)